{"content": "\nAdvances in Estimation, \nNavigation, and\nSpacecraft Control\n\nDaniel Choukroun\nYaakov Oshman\nJulie Thienel\nMoshe Idan Editors\n\nSelected Papers of the Itzhack Y. Bar-Itzhack\nMemorial Symposium on Estimation,\nNavigation, and Spacecraft Control\n\n123\n\n\n\nAdvances in Estimation, Navigation,\nand Spacecraft Control\n\n\n\nDaniel Choukroun \u00b7 Yaakov Oshman\nJulie Thienel \u00b7 Moshe Idan\nEditors\n\nAdvances in Estimation,\nNavigation, and Spacecraft\nControl\nSelected Papers of the Itzhack Y. Bar-Itzhack\nMemorial Symposium on Estimation,\nNavigation, and Spacecraft Control\n\nABC\n\n\n\nEditors\nDaniel Choukroun\nMechanical Engineering Department\nBen-Gurion University of the Negev\nBeer Sheva\nIsrael\n\nYaakov Oshman\nFaculty of Aerospace Engineering\nTechnion - Israel Institute of Technology\nHaifa\nIsrael\n\nJulie Thienel\nNASA Goddard Space Flight Center\nGreenbelt\nUSA\n\nMoshe Idan\nFaculty of Aerospace Engineering\nTechnion - Israel Institute of Technology\nHaifa\nIsrael\n\nISBN 978-3-662-44784-0 ISBN 978-3-662-44785-7 (eBook)\nDOI 10.1007/978-3-662-44785-7\n\nLibrary of Congress Control Number: 2014953108\n\nSpringer Heidelberg New York Dordrecht London\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015\n\nThis work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of\nthe material is concerned, specifically the rights of translation, reprinting, reuse of illustrations, recitation,\nbroadcasting, reproduction on microfilms or in any other physical way, and transmission or information\nstorage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology\nnow known or hereafter developed.\nThe use of general descriptive names, registered names, trademarks, service marks, etc. in this publication\ndoes not imply, even in the absence of a specific statement, that such names are exempt from the relevant\nprotective laws and regulations and therefore free for general use.\nThe publisher, the authors and the editors are safe to assume that the advice and information in this book\nare believed to be true and accurate at the date of publication. Neither the publisher nor the authors or\nthe editors give a warranty, express or implied, with respect to the material contained herein or for any\nerrors or omissions that may have been made.\n\nPrinted on acid-free paper\n\nSpringer-Verlag GmbH Berlin Heidelberg is part of Springer Science+Business Media\n(www.springer.com)\n\n\n\nPreface\n\nBackground\n\nItzhack Y. Bar-Itzhack, professor Emeritus of Aerospace Engineering at the Tech-\nnion \u2013 Israel Institute of Technology, was a prominent and world-renowned member\nof the applied estimation, navigation, and spacecraft attitude determination commu-\nnities. He touched the lives of many. He had a love for life, an incredible sense of\nhumor, and wisdom that he shared freely with everyone he met.\n\nTo honor Professor Bar-Itzhack\u2019s memory, as well as his numerous seminal pro-\nfessional achievements, an international symposium was held in Haifa, Israel, on\nOctober 14\u201317, 2012, under the auspices of the Faculty of Aerospace Engineering\nat the Technion and the Israeli Association for Automatic Control.\n\n\n\nVI Preface\n\nItzhack Yoav Bar-Itzhack (1937-2007)\n\nSince receiving his Ph.D. degree in electrical engineering from the University of\nPennsylvania in 1968, with a dissertation titled \"Strapdown Inertial Navigation\",\nProfessor Bar-Itzhack had made seminal contributions to the art of Inertial and\nAided Navigation Systems, and was one of the pioneers of the theory of strap-\ndown Inertial Navigation Systems (INS). Prof. Bar-Itzhack was also a distinguished\nmember of a select group of international experts in the field of spacecraft attitude\ndetermination. He published extensively in this area, often with NASA co-workers,\ncovering problems of attitude and angular rates estimation from vector measure-\nments, attitude determination from GPS measurements, and combined attitude and\norbit determination. Professor Bar-Itzhack contributed to the theory of applied op-\ntimal filtering as well, by developing, with students, batch-recursive data compres-\nsion filters, and eigenfactor-based square root filters. Between 1968-1971 he was\nemployed by Bellcomm Inc. in Washington DC, where he worked on the Apollo-\nproject, analyzing the navigation system of the Lunar Roving Vehicle (LRV). In\n1977-8, during his sabbatical, he served as a member of the technical staff at the\nAnalytic Sciences Corporation (TASC) in Reading MA, where he was involved in\nthe Improved Accuracy Program on the Trident missile guidance system. Prof. Bar-\nItzhack also spent several sabbaticals and summers at the NASA Goddard Space\nFlight Center. There he was instrumental in developing the first real time attitude\nfilter for use in the spacecraft control center and he supported the development of\nattitude estimation systems for several NASA spacecraft.\n\nProfessor Bar-Itzhack was very active in national and international professional\ncommunities, serving, among others, as an International Advisor of the Journal of\nGuidance, Control, and Dynamics, a member of the AIAA Guidance, Navigation\nand Control Technical Committee, and as a President of the Israeli Association for\nAutomatic Control (national member organization of IFAC). He contributed im-\nmensely to the security of Israel by sharing knowledge and wisdom with the Israeli\nMoD and with Israeli defense related industries, including Rafael-Advanced defense\nSystems, Ltd., IAI-Israel Aerospace Industries, Ltd., and IMI-Israel Military Indus-\ntries, Ltd. At the Technion-Israel Institute of Technology, he served as Dean of the\nFaculty of Aerospace Engineering, among numerous other positions.\n\nProfessor Bar-Itzhack graduated 33 doctoral and master\u2019s students, and published\nover 80 papers in major archival journals and 140 papers in conference proceedings.\nHe received numerous professional honors, including the IEEE Third Millenium\nAward, the IEEE Kershner Award, the NASA Exceptional Technology Achievement\nMedal, and the NASA Goddard Space Flight Center Group Achievement Award.\nAlong with two NASA colleagues, he was awarded a US patent in 2004 for an\nautonomous navigation system. He was a Fellow of AIAA \". . . in recognition of\nprofessional distinction and valuable contributions made to the arts, sciences and\ntechnology of aeronautics and astronautics,\" and a Fellow of IEEE \". . . for contribu-\ntions to the development of inertial navigation system.\" Prof. Bar-Itzhack was cho-\nsen by the IEEE Aerospace and Electronic Systems Society to serve as a member\n\n\n\nPreface VII\n\nof the Distinguished Lecturers Program, with his talk on \"The Evolution of Inertial\nNavigation.\"\n\nAbout the Book\n\nFor the Itzhack Y. Bar-Itzhack Memorial Symposium on Estimation, Navigation,\nand Spacecraft Control, the International Program Committee conducted a formal\nreview process. Each paper was reviewed in compliance with good journal practices\nby at least two independent and anonymous reviewers. The papers published in this\nbook were selected based on the results and recommendations from the reviewers.\n\nThe book contains 27 selected, revised, and edited contributed chapters written by\neminent international experts. The book is organized in three parts: (1) Estimation,\n(2) Navigation and (3) Spacecraft Guidance, Navigation and Control. The volume\nwas prepared as a reference for research scientists and practicing engineers from\nacademy and industry in the fields of estimation, navigation, and spacecraft GN&C.\n\nAbout the Symposium\n\nThe international Itzhack Y. Bar-Itzhack Memorial Symposium on Estimation, Nav-\nigation, and Spacecraft Control, chaired by\n\n\u2022 Yaakov Oshman (Technion-Israel Institute of Technology)\n\u2022 Julie Thienel (NASA Goddard Space Flight Center)\nwas held in Haifa, Israel, on October 14\u201317, 2012. Along this four days single-\ntrack event, attended by more than 100 participants, 50 talks were presented with\ncontributors from 18 different countries. Six eminent experts from academy and\nindustry delivered the following keynote talks during the technical sessions:\n\n\u2022 Mark J. Balas (Embry-Riddle Aeronautical University)\n\"The Beautiful Simplicity of Direct Adaptive Control in Theory and (maybe) in\nPractice\"\n\n\u2022 F. Landis Markley (NASA Goddard Space Flight Center)\n\"I Have Some Attitude Issues\"\n\n\u2022 Mark. L. Psiaki (Cornell University)\n\"Securing Civilian GNSS Services in the Presence of Jamming and Spoofing\"\n\n\u2022 Hector P. Rotstein (Rafel-Advanced Defense Systems, Ltd.)\n\"FOG, MEMS, and all the rest-Some thoughts on Inertial Navigation\ntechnologies and algorithms\"\n\n\u2022 Jason L. Speyer (University of California, Los Angeles)\n\"Stochastic Estimation and Control for Linear Systems with Cauchy Noise\"\n\nand two keynote talks were given during a social session at the Gala dinner\n\n\n\nVIII Preface\n\n\u2022 Daniel Weihs (Technion - Israel Institute of Technology)\n\"Learning Engineering from Nature\"\n\n\u2022 Yoav Medan (Technion - Israel Institute of Technology)\n\"StarTrek Surgery-Science Meets Fiction\"\n\nAcknowledgments\n\nIt is our pleasure to thank for their valuable and patient support\n\n\u2022 members of the National Organizing Committee:\n\u2022 Nadav Berman (Ben-Gurion University of the Negev; Prof. Berman, a dear\n\nfriend and colleague passed away on April 11, 2012)\n\u2022 Per-Olof Gutman (Technion-Israel Institute of Technology)\n\u2022 Moshe Idan (Technion-Israel Institute of Technology)\n\u2022 Leonid Mirkin (Technion-Israel Institute of Technology)\n\u2022 Tal Shima (Technion-Israel Institute of Technology)\n\n\u2022 members of the International Program Committee:\n\u2022 Amit Ailon (Ben-Gurion University of the Negev)\n\u2022 Zvi Artstein (Weizmann Institute of Science)\n\u2022 Mark J. Balas (Embry-Riddle Aeronautical University)\n\u2022 Yaakov Bar-Shalom (University of Connecticut)\n\u2022 Anthony J. Calise (Georgia Institute of Technology)\n\u2022 Avishy Carmi (Ben-Gurion University of the Negev)\n\u2022 Daniel Choukroun (Ben-Gurion University of the Negev)\n\u2022 John L. Crassidis (University at Buffalo, SUNY)\n\u2022 Bernard Friedland (New Jersey Institute of Technology)\n\u2022 Hari B. Hablani (Indian Institute of Technology, Bombay)\n\u2022 Richard R. Harman (NASA Goddard Space Flight Center)\n\u2022 F. Landis Markley (NASA Goddard Space Flight Center)\n\u2022 Mark L. Psiaki (Cornell University)\n\u2022 Ilia Rapoport (Elbit Systems, Electro-Optics ELOP, Ltd.)\n\u2022 Hector P. Rotstein (Rafael-Advanced Defense Systems, Ltd.)\n\u2022 Uri Shaked (Tel-Aviv University)\n\u2022 Jason L. Speyer (UCLA)\n\u2022 Min-Jea Tahk (Korea Advanced Institute of Science and Technology)\n\u2022 Haim Weiss (Rafael-Advanced Defense Systems, Ltd.)\n\u2022 Isaac Yaesh (Israel Military Industries, Ltd.)\n\u2022 Paul Zarchan (MIT Lincoln Laboratory)\n\n\u2022 all symposium participants including speakers and sessions chairs\n\n\n\nPreface IX\n\nThe present book would not have been possible without the support and careful\nwork of the international college of reviewers purposely nominated for this task.\nThe quality of any scientific book is largely due to the will of reviewers to share\ntheir expertise and knowledge with unknown colleagues from all over the world.\n\nLast but not least thanks are due to our sponsors without which the symposium\nwould not have taken place:\n\n\u2022 Technion-Israel Institute of Technology\n\u2022 AIAA Guidance Navigation and Control Technical Committee\n\u2022 Bernard M. Gordon Center for Systems Engineering at the Technion\n\u2022 IMI-Israel Military Industries, Ltd.\n\u2022 Rafael-Advanced Defense Systems, Ltd.\n\u2022 IAI, Tamam Division-Israel Aerospace Industries, Ltd.\n\u2022 European Office of Aerospace research and Development, Air Force Office of\n\nScientific research, United States Air Force Research Laboratory\n\u2022 Technion Autonomous Systems Program\n\u2022 IEEE Israel\n\nThe Editors\n\nDaniel Choukroun\nYaakov Oshman\n\nJulie Thienel\nMoshe Idan\n\n\n\nContents\n\nPart I: Estimation\n\nSteady-State Time Constant of the Kalman Filter . . . . . . . . . . . . . . . . . . . . 3\nJoseph Etzion\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems . . . . . . . . . . . . . 21\nXin Tian, Ting Yuan, Yaakov Bar-Shalom\n\nState Dependent Difference Riccati Equation Based Estimation for 2D\nSpiraling Target Maneuver . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\nIlan Rusnak, Liat Peled-Eitan\n\nA Guaranteed Bound Filter for Polynomial Systems . . . . . . . . . . . . . . . . . 65\nGy\u00f6rgy Hexner, Ilan Rusnak, Haim Weiss\n\nReference Basis Model Updating \u2013 Following the Baruch and\nBar-Itzhack Approach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79\nYoram Halevi\n\nStochastic Estimation and Control for Linear Systems with Cauchy\nNoise . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95\nJason L. Speyer, Moshe Idan, Javier Fern\u00e1ndez\n\nPlanar-Feature Based 3D SLAM Using Randomized Sigma Point\nKalman Filters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119\nCihan Ulas, Hakan Temeltas\n\nA Novel Linear, Unbiased Estimator to Fuse Delayed Measurements\nin Distributed Sensor Networks with Application to UAV Fleet . . . . . . . . . 135\nRonan Arraes Jardim Chagas, Jacques Waldmann\n\nHigher Order Sliding Mode Controllers with Adaptation . . . . . . . . . . . . . 159\nDaniel Yitzjak Negrete-Chavez, Leonid M. Fridman\n\n\n\nXII Contents\n\nPart II: Navigation\n\nThe Early Eighties: Development of In-Flight Transfer\nAlignment \u2013 Challenges and Methods . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 179\nZeev Berman\n\nEfficient Error Model Construction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191\nZeev Berman\n\nTime-Critical Cooperative Path Following of Multiple UAVs:\nCase Studies . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 209\nIsaac Kaminer, Enric Xargay, Venanzio Cichella, Naira Hovakimyan,\nAnt\u00f3nio Manuel Pascoal, A. Pedro Aguiar, Vladimir Dobrokhodov,\nReza Ghabcheloo\n\nObservability Analysis for the INS Error Model with\nGPS/Uncalibrated Magnetometer Aiding . . . . . . . . . . . . . . . . . . . . . . . . . . . 235\nRonan Arraes Jardim Chagas, Jacques Waldmann\n\nLeveling Loop Design and State Multiplicative Noise Kalman\nFiltering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 259\nIsaac Yaesh, Adrian-Mihail Stoica\n\nA Novel Imaging Measurement Model for Vision and Inertial\nNavigation Fusion with Extended Kalman Filtering . . . . . . . . . . . . . . . . . . 275\nLeandro Ribeiro Lustosa, Jacques Waldmann\n\nCombined Vision \u2013 Inertial Navigation with Improved Outlier\nRobustness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 291\nFrancesco Di Corato, Mario Innocenti, Lorenzo Pollini\n\nA Covariance Analysis of Vision-Aided Inertial Navigation:\nFree Fall Case . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 309\nAndrew Relyea, Meir Pachter\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics\nUsing a Simplified Dynamic Model . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 329\nIlia Rapoport, Daniel Choukroun\n\nPart III: Spacecraft Guidance, Navigation and\nControl\n\nZero ?v Solution to the Angles-Only Range Observability Problem\nduring Orbital Proximity Operations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 351\nItzik Klein, David K. Geller\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory,\nwith Application to Chandrayaan-2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 371\nSanat Kumar Biswas, Hari B. Hablani\n\n\n\nContents XIII\n\nRobust Kalman Filtering with Single and Multiple Scale Factors\nfor Small Satellite Attitude Estimation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 391\nHalil Ersin Soken, Chingiz Hajiyev, Shin-ichiro Sakai\n\nSpacecraft Attitude Determination with Sun Sensors, Horizon Sensors\nand Gyros: Comparison of Steady-State Kalman Filter and Extended\nKalman Filter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 413\nVaibhav V. Unhelkar, Hari B. Hablani\n\nQuaternion Data Fusion . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 439\nYang Cheng, William D. Banas, John L. Crassidis\n\nLinear Covariance Techniques for Closed-Loop Attitude\nDetermination and Control Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 453\nNoam Leiter, David K. Geller\n\nReaction Wheel Parameter Identification and Control through\nReceding Horizon-Based Null Motion Excitation . . . . . . . . . . . . . . . . . . . . 477\nAvishai Weiss, Frederick Leve, Ilya V. Kolmanovsky, Moriba Jah\n\nSpacecraft Constrained Maneuver Planning Using Positively\nInvariant Constraint Admissible Sets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 495\nAvishai Weiss, Christopher Petersen, Morgan Baldwin,\nRichard Scott Erwin, Ilya V. Kolmanovsky\n\nA Comparison of Nonlinear PI and PID Inertia-Free Spacecraft\nAttitude Control Laws . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 517\nMarc Camblor, Avishai Weiss, Gerardo Cruz, Yousaf Rahman,\nSergio Esteban, Ilya V. Kolmanovsky, Dennis S. Bernstein\n\nEditors Biography . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 543\n\nAuthor Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 549\n\n\n\nPart I \nEstimation \n\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n\n\n \n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,  \n\n3 \n\nDOI: 10.1007/978-3-662-44785-7_1 \n \n\nSteady-State Time Constant of the Kalman Filter \n\nJoseph Etzion \n\nSelf employed \netzion_y@netvision.net.il \n\nAbstract. Under conditions of constant sampling rate and constant sampling \nerrors, after a sufficiently long tracking time,  all terms of the covariance matrix \nconverge to their corresponding asymptotic magnitudes. After convergence, all \nvariables of the Riccati equation remain unchanged. In such conditions the only \nunknown in this equation is the steady-state covariance matrix. An analytic \nsolution of the resulting steady-state Riccati equation for \"short\" sampling times \nis derived. After solution all terms of the resulting covariance matrix are then \nexpressed as functions of a particularly defined \"time constant\". The application \nof the time constant produces several practical advantages: it greatly facilitates \nthe determination of the model-noise parameter (q), provides a fair assessment \nof the tracking accuracies, and determines the steady-state transfer function of \nthe filter. \n\nKeywords: Time constant, tracking accuracy, transfer function. \n\n1 Kalman Equations in Steady State \n\nA sequential tracking by a Kalman filter is done by a repeated execution of prediction \nand update of both the covariance matrix and the state vector. In the analysis that \nfollows the discretized continuous-time white noise acceleration (CWNA) model is \nassumed. \n\nAssume that at a given time t the covariance matrix, P, and the state vector, X, are \nknown. Also assume that at time t+T some measurement has been made. At this time \nthe variables of the filter are predicted to the new time instant by the following \nequations: \n\nT\npP P Q= ? ? +  Covariance, (1) \n\npX X= ?  State vector, (2) \n\nwhere ? is the transition matrix and Q is the covariance matrix of model-noise. Both \nthese matrices depend on the sampling time T (see definite expressions in the \nfollowing sections). \n\nThen, the data of the new measurement are used for updating the predicted \nvariables as follows: \n\n( ) 1T Tp pK P H HP H S ?= +  Gain matrix, (3) \n\n\n\n4 J. Etzion \n\n \n\n( )u pP I KH P= ?  Covariance, (4) \n\nu pX X K?= +  State vector, (5) \n\nwhere H is the measurement matrix, S is the covariance matrix of the measurement \nerrors, I is an identity matrix, and ? is the innovation vector (see definition in the \nfollowing sections). \n\nAssume a scenario where the H and S matrices are time independent. If, in \naddition, the sampling time is also kept constant, then ? and Q remain time \nindependent as well. In such scenario, after long enough cycling of (1), (3), and (4) \nthe covariance matrix, P, and the gain matrix, K, remain virtually constant. In other \nwords, after the variance stabilization, the updated covariance, uP , returns to its \n\nunpredicted magnitude, P, or \n\nuP  =  P. (6) \n\nBy a substitution of (1) in (3), and a further substitution in (4), and then a \nsubstitution of the resulting expression of uP  in (6), we get an equation with a single \n\nunknown, which is the covariance matrix P. This matrix equation breaks down into a \nnumber of scalar equations with the same number of scalar unknowns. For instance, \nin a first-order filter applied to a single coordinate the covariance matrix contains \nthree distinct (unknown) elements, which can be evaluated by solving the three scalar \nequations. For a second-order filter, the number of unknowns, or the number of \nequations, is six. \n\nApproximate solutions of the first and the second order filters are presented in the \nfollowing three sections. For convenience, all covariances are expressed in terms of a \ntime constant. Despite the approximations used, the resulting accuracy of filter \ncharacteristics is remarkable. The simple covariance expressions derived here and the \nconcept of the time constant are greatly instrumental in a preliminary estimation of \nfilter performance, even in cases of multiple-coordinate dynamic scenarios. \n\n2 Steady-State Solution of First-Order Filter \n\nIn stead-steady conditions the process of first-order Kalman filter becomes identical to \nthe alpha-beta filter or the Wiener filter ([1], Sections 6.5.4 and 9.5). The solution \npresented here, however, is aimed at deriving at a linkage between the time constant, ?, \nand the model-noise parameter, q. Such linkage is helpful for a practical determination \nof the required q-parameter. In addition, as will be shown below, the time constant is \nadvantageous for a preliminary assessment of the expected tracking errors. \n\nConsider Kalman filtering on a single coordinate. Assume the position in this \nsingle coordinate is sampled at constant time intervals, T. The \"true\" position of the \ntracked body will be called y. This time-dependent position is sampled with \nmeasurement errors of a constant standard deviation (STD), y? . The sampled y, with \nits measurement error, is the input to the filter. The resulting output from the filter \nwill be x for position and v for velocity. \n\n\n\n Steady-State Time Constant of the Kalman Filter 5 \n\n \n\nIn such single-coordinate scenario, the arrays used in the preceding section are \ndefined as follows. \n\nx xv\n\nxv v\n\np p\nP\n\np p\n\n? ?\n= ? ?\n? ?\n\n Covariance matrix, (7) \n\n1\n\n0 1\n\nT? ?\n? = ? ?\n\n? ?\n Transition matrix, (8) \n\n3 2\n\n2\n\n3 2\n\n2\n\nT T\nQ q\n\nT T\n\n? ?\n= ? ?\n? ?\n\n Model-noise, (9) \n\nx\nX\n\nv\n\n? ?\n= ? ?\n? ?\n\n State vector, (10) \n\nH  =  (1   0) Measurement matrix, (11) \n\nS  = 2y?  Meas. variance, (12) \n\n1 0\n\n0 1\nI\n\n? ?\n= ? ?\n? ?\n\n Identity matrix. (13) \n\nNote that X is the state vector, whereas x is the position variable, which is an element \nof X. \n\nThe model-noise matrix, Q, used here (equation 9), is in the form of the popular \n\nSinger model [2]. In this form, q is the model-noise parameter, defined by 22 m mq ? ?= , \nwhere m?  is an acceleration STD of the tracked target's maneuver, and m?  is the time \nconstant of the maneuvers. In practice, however, the two parameters, m?  and m? , are \nextremely vague, and even meaningless. As a result of this uncertainty, the q \nparameter is being routinely determined empirically, by way of extensive simulations \nor field experimentations. In contrast, the time constant (measured in seconds) is a lot \neasier to assess by considering the expected maneuverability of the tracked object. For \ninstance, appropriate time constant for tracking a maneuvering aircraft by radar is \ntypically between four and ten seconds; for vessel tracking the optimal time constant \nis somewhat larger that that. \n\nIn the present analysis, in any case, the q-parameter is considered as a given \n\nnumber, expressed in units of 2 3m sec , which can be interpreted as a per-second \n\ngrowth of the velocity variance.  In the analysis that follows, the derived covariance \nterms will be expressed as functions of q. \n\nBy using (7), (8), and (9) in (1), we get the following predicted covariance terms: \n\n2 32 3xp x xv vp p Tp T p T q= + + +               Position, (14) \n\n2 2xvp xv vp p Tp T q= + +                       Covariance, (15) \n\nvp vp p Tq= +                        Velocity.                   (16) \n\n\n\n6 J. Etzion \n\n \n\nWe know in advance that all terms of the covariance matrix in steady-state \nconditions of the filter's operation are approximately proportional to the sampling \ntime, T. For sufficiently small sampling times, most terms in the above three \nequations become negligible. For the needs of the present analysis, in these equations \n\nwe only retain the terms which exceed the magnitude of 2T . After such omission, \nthese equations reduce to the following approximate form: \n\n2xp x xvp p Tp? +  Position, (17) \n\nxvp xv vp p Tp? +  Covariance, (18) \n\nvp vp p Tq? +  Velocity. (19) \n\nNext, we simplify the expression of the gain matrix, K, given by (3). In this \n\nequation, the product THPH  becomes a scalar, given by \n\nTHPH  = 2y? . (20) \n\nBy using this result in (3), the gain matrix becomes \n\n2 2\n\n1 1xp xp\n\nxvp xvpxp y y\n\np p\nK\n\np pp ? ?\n? ? ? ?\n\n= ?? ? ? ?? ? ? ?+ ? ? ? ?\n,                                  (21) \n\nwhere xpp  has been neglected relative to \n2\ny? . \n\nFurther, the resulting gain, K, is substituted in (4), which likewise can be broken \ndown into its separate scalar components. Again after ignoring all powers of T greater \nthan 2, the following updated expressions are obtained: \n\n2 22xu x xv x yp p Tp p ?? + ?  Position, (22) \n\n2\nxvu xv v x xv yp p Tp p p ?? + ?  Covariance, (23) \n\n2 2\nvp v xv yp p Tq p ?? + ?  Velocity. (24) \n\nIn steady-state conditions, the updated covariances return to their previous \nmagnitudes, before the prediction stage, which are the same as after the previous \nupdate. Such equality is expressed by (6), which is in this case equivalent to three \nscalar equations. By using these equalities in the last three equations, the dominant \nterms (on the left) cancel out, and we are left with their following reduced form: \n\n2 22 xv x yTp p ?= ,                                        (25) \n\n2\nv x xv yTp p p ?= ,                                      (26) \n\n2 2\nxv yTq p ?= .                                    (27) \n\n\n\n Steady-State Time Constant of the Kalman Filter 7 \n\n \n\nThese simple equations provide the following solution for the three steady-state \ncovariance terms: \n\n3 64 4x yp T q?=  Position,                         (28) \n\n2 34 4v yp T q?=  Velocity,                        (29) \n\n2\nxv yp T q?=  Covariance.                   (30) \n\nWe now introduce the following definition of the time constant: \n\n24\nyT q? ?= ,                       (31) \n\nor the inverse relation \n\n2 4\nyq T? ?= .                  (32) \n\nThe time constant defined by (31) is also related to \"target maneuvering index,\" \n\nc? , defined in [1], (6.5.4-10). This particular relation becomes \n2 2\n\nc T? ?= .                        (33) \nIn real applications, however, a preliminary assessment of an optimal ? magnitude \n\nis practically easier than an assessment of both c?  and q before some simulation \ntesting can be accomplished. While optimal values of c?  or q can vary by orders of \nmagnitude depending on the system parameters, the optimal ? varies remarkably little. \nFor instance, for tracking a maneuvering aircraft the optimal time constant can vary \nbetween about 4 and 6 seconds; for tracking a ship the time constant can become \nabout 10 seconds. In contrast, the high power of ? in (32) or (33) make the other \nalternative parameters a lot more uncertain. It is therefore advisable, for practical \nsystem design, to first make an estimate of an optimal time constant, and then to \ndetermine the corresponding q magnitude by means of (32).  \n\nThe particular definition of the time constant by means of (31) will become clearer \nby considering the dynamic response of the filter, presented in the next section. \n\nEquation (32) is now substituted in (28) and (29) in order to provide alternative \nexpressions for the position and the velocity variances. The square roots of these \nvariances are the STDs of the corresponding estimation errors: \n\n2\nx y\n\nT? ?\n?\n\n=  Position,                            (34) \n\n2y\nv\n\nT??\n? ?\n\n=  Velocity,                           (35) \n\nwhere y?  is the STD of the measurement error, T is the sampling time, and ? is the \ntime constant. \n\n\n\n8 J. Etzion \n\n \n\nIn addition, the position-velocity correlation coefficient is given as follows: \n\n1\n\n2\nxv\n\nx v\n\np\n\np p\n? = = .                                    (36) \n\nFor the dynamic specification of the filter, expressions of the filter gains will be \nnecessary. For the first-order filter, the gains are given by the two terms of the gain \nmatrix, K, according to (21). By substituting the results of xp  and xvp  (from (28) and \n\n(30)) for xpp  and xvpp  in (21), the following steady-state gains are obtained: \n\n2xk T ?=  Position gain,                     (37) \n\n2\nvk T ?=  Velocity gain.                     (38) \n\n3 Dynamic Response of First-Order Filter \n\nThe response of the Kalman filter is determined by a sequential execution of (2) and \n(5). For the first-order filter, these equations are expressed by the following two scalar \nequations: \n\n1n n n xx x Tv k ?+ = + +  Position,                     (39) \n\n1n n vv v k ?+ = +  Velocity,                    (40) \n\nwhere n is the sample number, and ? is the innovation, given by the difference \nbetween the last measurement and the predicted position: \n\n1n py x? += ? .                   (41) \n\nIn steady-state conditions, the gains used in (39) and (40) are given by (37) and \n(38). In the limit T?0, (39) and (40) convert to integrals, where the sampling time, \nT, is replaced by the infinitesimal time increment dt. The resulting continuous \nresponse of the filter can then be described by a corresponding flow diagram, as \nshown in Fig. 1. \n\n \n\nFig. 1. Transfer function of first-order filter \n\nx \n\nv \n\n?\n+ y 2\n\n?\n \n\n2\n\n1\n\n?\n \n\n1\n\ns\n \n\n1\n\ns\n \n\n\n\n Steady-State Time Constant of the Kalman Filter 9 \n\n \n\nThe diagram of Fig. 1 provides the following transfer functions of the first-order \nKalman filter: \n\n2 2\n\n1 2\n\n1 2\n\nx s\n\ny s s\n\n?\n? ?\n\n+=\n+ +\n\n            Position,                     (42) \n\n2 21 2\n\nv s\n\ny s s? ?\n=\n\n+ +\n            Velocity,                    (43) \n\nwhere ? is the time constant (equation (31)) and s is the Laplace variable. \nIt can be seen that the transfer function given by (42) is analogous to the transfer \n\nfunction of the Wiener filter ([1], (9.5.2-28)). \nIn time domain, (42) and (43) convert to the following differential equations: \n\n2 2 2x x x y y? ? ?+ + = +                     Position, (44) \n\n2 2v v v y? ?+ + =                                   Velocity. (45) \n\nThe homogeneous part of any of the last two equations (their left-hand sides) has \nthe following two complex zeros: \n\n1\n\n2 2\n\ni\nz\n\n? ?\n= ? \u00b1 .                             (46) \n\nHence, the homogeneous solution of (44) is given by \n\n( ) 21 2sin cos\n2 2\n\nt\nh\n\nt t\nx t C C e ?\n\n? ?\n?? ?= +? ?\n\n? ?\n,                        (47) \n\nwhere 1C  and 2C  are constants to be determined by the appropriate initial conditions. \n\nAs an example, a step response of the filter is presented for a case of a unit step, \nintroduced at time zero. The step function at the input to the filter is defined by \n\n( ) 0, 0\n1, 0\n\nt\ny t\n\nt\n\n<?\n= ? ??\n\n,                                  (48) \n\nwhere t is time, measured from the unit step. \nIt is assumed, however, that at time zero the filter has already stabilized in the \n\nsteady-state conditions, where the filter gains remain constant at their asymptotic \nvalues, given by (37) and (38). \n\nAfter the introduction of the unit step, the general solution of the position function \nis given by \n\n( ) ( )1 hx t x t= + ,                        (49) \nwhere ( )hx t  is the homogeneous solution, given by (47). \n\n\n\n10 J. Etzion \n\n \n\nThe initial conditions, necessary for the constants' determination, can be deduced \nfrom the diagram in Fig. 1. They are given by \n\n( ) ( )0 0, 0 2x x ?= = .                                            (50) \nBy using the initial conditions in conjunction with (49) and its derivative, the \n\nfollowing constants are obtained: \n\n1 21, 1C C= = ? ,                                  (51) \n\nwhich provide the following position function for the step response: \n\n( ) 21 sin cos\n2 2\n\ntt tx t e ?\n? ?\n\n?? ?= + ?? ?\n? ?\n\n.                               (52) \n\nFor velocity, the solution of (45) is similar to the position solution, except that in \nthis case the asymptotic velocity magnitude is zero. The initial conditions for velocity \nare \n\n( ) ( ) 20 0, 0 1v v ?= = .                                     (53) \nThe general solution for velocity becomes \n\n( ) 22 sin\n2\n\nttv t e ?\n? ?\n\n?= .                                      (54) \n\nBoth the position and the velocity responses are of the form of damped oscillations. \n\nThe first position maximum is / 21 1.2079e ??+ = , and it occurs at time \n/ 2 2.2214t ?? ?= = . The first velocity maximum is / 4 / 0.4459 /e ? ? ?? = , and it \n\noccurs at time / 2 2 1.1107 .t ?? ?= =  \nFigs. 2 and 3 present a comparison between the approximate analytic solution of \n\nthe filter response and the actual sequential solution of the first-order Kalman filter. \nBoth solutions take place in steady-state conditions, which become valid after long \nenough filter operation with constant measurement errors and constant time steps, \nwhen the covariance matrix stabilizes at its asymptotic values. In order to achieve the \nsteady-state conditions of the actual Kalman filter prior to the unit-step introduction, \n(1), (3), and (4) have been cycled until all terms of the covariance matrix stopped \nchanging up to their sixth decimal significant figure. The initial covariance matrix in \nthis stabilization was constructed from the expressions given by (34), (35), and (36), \naccording to the definition given by (7). For convergence to six significant figures a \ntime span of about 6? was required. However, no detectable effect on the results \nshows up even after convergence to four figures. The extra two figures were left for \nthe sake of safety. \n\nFig. 2 shows a comparison between the actual and the analytic response of the \nfirst-order Kalman filter to a unit step in steady-state conditions. This example is \ngiven for a time step of T = 0.2?. For such time step a maximum position difference of \nabout 2% between the two calculations is detected, while in velocity the difference is \ntoo small to be seen at the given scale. For time steps smaller than 0.05?, even the \nposition differences practically vanish. \n\n\n\n Steady-State Time Constant of the Kalman Filter 11 \n\n \n\n0 1 2 3 4 5 6 7 8\n-0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n1.2\n\n1.4\nP\n\nos\niti\n\non\n a\n\nnd\n v\n\nel\noc\n\nity\n\nTime in time constants\n\nFirst order,    T = 0.2,    Tau = 1\n\nAnalytic solution\n\nSequential solution\n\nPosition\n\nVelocity\n\n \n\nFig. 2. Step response of first-order Kalman filter \n\nEven though the analytic solution was derived for \"small\" time steps, in practice, \ntime steps as large as T =?  provide remarkable similarity between the two solutions, \nwith differences of only 10% or less. One reason of such closeness of solution is the \nradical insensitivity of the Kalman filter to most elements of the model-noise matrix, \nQ (equation (9)). In the derivation of the analytic approximation, the only non-\nnegligible term of Q was its bottom-right element. This means that virtually the same \nresults are obtained with a degenerate matrix of the following form: \n\n0 0\n\n0\nQ q\n\nT\n\n? ?\n= ? ?\n? ?\n\n.   (55) \n\nThe use of the degenerate form of the model-noise matrix, instead of its original \nform taken from the Singer model [2], does not create any detectable differences in \nthe filter's response even for time steps as large as T =?  in any of the above \ncalculations. This sort of test of the filter's performance clearly shows that the \"high \nsophistication\" of the popular Singer model is actually an illusion, meaningless in its \npractical applications. \n\nFig. 3 presents a comparison between the analytic and the true filtering errors of \nthe first-order Kalman filter in steady-state conditions for varying magnitudes of time \nstep. This comparison is done between the analytic STDs, given by (34) and (35), and \nthe square roots of the diagonal elements of the asymptotic covariance matrix. For \nmoderate time steps, of T = 0.2?, the differences are 7% and 4% for position and \nvelocity, respectively. For the extreme case of T =? the differences amount to 37% \nand 17% for the two functions. \n\nThe results presented in Figs. 2 and 3 demonstrate a remarkable reliability of the \napproximate solution of Riccati equation, summarized by (34) and (35), even for \n\n\n\n12 J. Etzion \n\n \n\nrelatively large time steps (T), relative to the time constant (?) of the Kalman filter. In \nparticular, the results show that a preliminary estimate of model-noise parameter, q, \ncan confidently be done by means of (32). \n\n \n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n35\n\n40\n\nP\nos\n\n. \nan\n\nd \nve\n\nl. \nS\n\nT\nD\n\n d\niff\n\ner\nen\n\nce\ns,\n\n p\ner\n\nce\nnt\n\nTime-step in time constants\n\nFirst order\n\nPosition\n\nVelocity\n\n \n\nFig. 3. Error differences between analytic and actual solutions of first-order Kalman filter \n\nFor very large time steps, when T >?, the Kalman filter in fact degenerates into a \nstraight line drawn between the latest two samples, disregarding all preceding \nmeasurements. In such cases the solution presented above is no longer necessary; \nrather, the filter's performance can then be assessed by a much simpler analysis of the \nstraight-line fit. \n\nEven though the analysis presented above has been derived for a sufficiently long \ntracking time, the resulting equations provide a fair approximation of the filter \nperformance even when the tracking time is comparable to the time constant. For \nshorter tracking times, of less than one time constant, the filter becomes equivalent to \nleast-squares fit of a straight line to all measurements collected so far. In this case, \nagain, the solution presented above becomes unnecessary because it can be replaced \nby the simpler approach of the least-squares principle. \n\n4 Steady-State Solution of Second-Order Filter \n\nIn steady-state conditions the second-order Kalman filter becomes identical to the \nalpha-beta-gamma filter ([1], Section 6.5.5). \n\nThe derivation of an approximate analytic solution in steady state is repeated here \nfor the second-order Kalman filter. For the second order, all equations shown in \nSection I remain valid in this case as well, and only the matrices involved increase \ntheir dimensions. The previous matrices, given above by (7) through (13), are \nreplaced here by the following expressions: \n\n\n\n Steady-State Time Constant of the Kalman Filter 13 \n\n \n\nx xv xa\n\nxv v va\n\nxa va a\n\np p p\n\nP p p p\n\np p p\n\n? ?\n? ?= ? ?\n? ?\n? ?\n\n               Covariance, (56) \n\n21 2\n\n0 1\n\n0 0 1\n\nT T\n\nT\n\n? ?\n? ?\n\n? = ? ?\n? ?\n? ?\n\n                     Transition, (57) \n\n5 4 3\n\n4 3 2\n\n3 2\n\n20 8 6\n\n8 3 2\n\n6 2\n\nT T T\n\nQ T T T q\n\nT T T\n\n? ?\n? ?\n\n= ? ?\n? ?\n? ?\n\n              M. noise               (58) \n\nx\n\nX v\n\na\n\n? ?\n? ?= ? ?\n? ?\n? ?\n\n                                    State vector, (59) \n\nH  =  (1   0   0)                     Measurement matrix, (60) \n\nS  = 2y?                                Measurement variance, (61) \n\n1 0 0\n\n0 1 0\n\n0 0 1\n\nI\n\n? ?\n? ?= ? ?\n? ?\n? ?\n\n                         Identity matrix, (62) \n\nwhere x, v and a stand for position, velocity and acceleration, respectively. \n\nIn the second-order filter, the units of the model-noise parameter, q, are 2 5m sec , \n\nwhich can be interpreted as a per-second growth of the acceleration variance. \nThe derivation of the approximate solution of the second-order filter exactly \n\nfollows the steps used in the case of the first-order filter (Sections 2 and 3), only with \na higher algebraic complication. Here we skip the lengthy algebra, and proceed to the \npresentation of the analytic results. \n\nFor the second-order filter, the time constant is defined by \n\n26\nyT q? ?= , (63) \n\nor the inverse relation \n\n2 6\nyq T? ?= . (64) \n\nHere, due to the sixth power of ? in (64), the contrast between the magnitudes of ? \nand q is even higher than in the case of the first-order filter. As explained above (see \nparagraph after (33)), there are typical values of ? that correspond to certain targets. \nSurprisingly, the same typical values mentioned before remain almost unchanged for \nthe second order as well. Hence again, it is highly preferable to first select an \nappropriate magnitude of an optimal time constant, and then make a determination of \nq by means of (64). \n\n\n\n14 J. Etzion \n\n \n\nBy the (63) definition of the time constant, the approximate steady-state output \nSTDs of the second-order filter are given by \n\n2\nx y\n\nT? ?\n?\n\n=                     Position STD, (65) \n\n3y\nv\n\nT??\n? ?\n\n=                     Velocity STD, (66) \n\n2\n\n2y\na\n\nT??\n??\n\n=                          Acceleration STD. (67) \n\nIn the second-order filter there are three correlation coefficients between the three \noutput variables: \n\n2 3 0.816xv? = =                  Pos.-vel., (68) \n\n1 2xv? =                    Pos.-acc., (69) \n\n2 3 0.816va? = =                     Vel.-acc. (70) \n\nIn this case, the following steady-state Kalman gains are obtained: \n\n2xk T ?=                   Position, (71) \n\n22vk T ?=                   Velocity, (72) \n\n3\nak T ?=                    Acceleration. (73) \n\nIn the limit T?0, the recursive filter equations convert to integrals, which can be \npresented by a flow diagram. The flow diagram in this case is an extension of the \nfirst-order flow diagram of Fig. 1. The extended diagram is shown in Fig. 4. \n\na\n\nx\n\nv\n\n+ y 2\n\n2\n\n2 1\n\ns\n\n1\n\ns\n\n3\n\n1 1\n\ns\n\n \n\nFig. 4. Transfer function of second-order filter \n\n\n\n Steady-State Time Constant of the Kalman Filter 15 \n\n \n\nThe diagram of Fig. 4 provides the following transfer functions of the second-order \nKalman filter: \n\n2 2\n\n2 2 3 3\n\n1 2 2\n\n1 2 2\n\nx s s\n\ny s s s\n\n? ?\n? ? ?\n+ +=\n\n+ + +\n                        Position, (74) \n\n( )\n2 2 3 3\n\n1 2\n\n1 2 2\n\ns sv\n\ny s s s\n\n?\n? ? ?\n\n+\n=\n\n+ + +\n                        Velocity, (75) \n\n2\n\n2 2 3 31 2 2\n\na s\n\ny s s s? ? ?\n=\n\n+ + +\n                      Acceleration, (76) \n\nwhere ? is the time constant (equation (63)) and s is the Laplace variable. \nThe differential equations, determined by the above three transfer functions, will be \n\ndetermined by the zeros of their denominators, which are third-degree polynomials of \ns. These polynomials have one real zero and two complex zeros, as follows: \n\n1 2,3\n\n1 1 3\n,\n\n2 2\n\ni\nz z\n\n? ? ?\n= ? = ? \u00b1 .                                        (77) \n\nThese zeros provide the following homogeneous solution of the differential \nequations: \n\n( ) 21 2 3\n3 3\n\nsin cos\n2 2\n\nt t\nh\n\nt t\nx t C e C C e? ?\n\n? ?\n? ?? ?= + +? ?? ?\n\n? ?\n.                     (78) \n\nThe general solution for the step response of x(t) is given as before by (49). \nFor a determination of the three constants in (78), the following initial conditions \n\nof the position variable are applied: \n\n( ) ( ) 20 0, 0 2 , (0) 2x x x? ?= = = ? .                            (79) \nThese initial conditions, and the constants that follow, determine the following \n\ngeneral solution for the position step-response of the second-order filter: \n\n( ) 22 31 sin\n23\n\nt ttx t e e? ?\n?\n\n? ?= ? + .                                  (80) \n\nFor velocity and acceleration the homogeneous equation is the same as (78), but \ntheir asymptotic values are zero. The initial conditions for velocity are \n\n( ) ( ) 2 30 0, 0 2 , (0) 3v v v? ?= = = ? ,                            (81) \nand its general solution becomes \n\n( ) 21 3 33 sin cos\n2 2\n\nt tt tv t e e? ?\n? ? ?\n\n? ?\n? ?? ?\n\n= ? + +? ?? ?? ?? ?? ?? ?\n.                      (82) \n\n \n\n\n\n16 J. Etzion \n\n \n\nThe initial conditions for acceleration are the following: \n\n( ) ( ) 3 40 0, 0 1 , (0) 2a a a? ?= = = ? ,                              (83) \nand its unit-step response is then \n\n ( ) 22\n1 1 3 3\n\nsin cos\n2 23\n\nt tt ta t e e? ?\n? ??\n\n? ?\n? ?? ?\n\n= ? + +? ?? ?? ?? ?? ?? ?\n.                         (84) \n\nA comparison between the analytic solutions, given by (80), (82) and (84), and the \nsequential solution of the Kalman equations is shown in Fig. 5. The time step is same \nas before (in Fig. 2), T = 0.2?. Here again, like in the first-order case, the differences \nbetween the two solutions are remarkably small. At much greater time steps, even as \nlarge as T = ?, the differences between the two solutions also remain moderate (up to \nabout 20% in this case). \n\nFig. 6 presents a comparison between the analytic and the true filtering errors of \nthe second-order Kalman filter in steady-state conditions for varying magnitude of \ntime step. For moderate time steps, such as T = 0.2?, the relative STD-differences \nremain small, about 10%, but they grow substantially for much larger time steps. In \naddition, unlike the case of the first-order filter (Fig. 3), they do not converge to zero \nat the limit of T?0, even though the absolute STD magnitudes do converge to zero \nat that limit. Such characteristics take place apparently because at the small time steps \nthere still remains some non-negligible effect of higher powers of T, which were \nignored in the approximate solution of the second-order filter. \n\nThe almost complete insensitivity of the filter performance to the form of the \nmodel-noise matrix, Q, is manifest in the case of the second-order filter as well. By \nreplacing all elements except one in the matrix in (58) by zeros, no meaningful \nchange in the filter's response can be detected. Such insensitivity exists even with the \nlarge time step of T = ?. The degraded matrix in this case is given by \n\n0 0 0\n\n0 0 0\n\n0 0\n\nQ q\n\nT\n\n? ?\n? ?= ? ?\n? ?\n? ?\n\n.                                      (85) \n\nBy using (85) instead of (58) for the model-noise matrix, no change can be \ndetected in the sequential solution in Fig. 5. In Fig. 6 there is some change only in the \nacceleration curve in case of such replacement. \n\nThis insensitivity again emphasizes the futility of attempts of formulating an \nadvanced model-noise matrix. \n\nSimilar to the first-order case, for the second-order filter as well a remarkable \nreliability of the approximate solution of the Riccati equation is demonstrated. This \nmeans that in this case the model-noise parameter, q, can confidently be evaluated by \nmeans of (64), and the expected performance of the second-order Kalman filter can be \nrepresented by (65), (66) and (67). \n\nAlso similar to the first-order filter, for time steps larger than one time constant the \nfilter this time degenerates into a second-order polynomial drawn between the latest \n\n\n\n Steady-State Time Constant of the Kalman Filter 17 \n\n \n\nthree samples. In the other situation, when the tracking time is shorter than one time \nstep, the filter becomes equivalent to least-squares fit of a second-order polynomial to \nall measurements collected up to that point. \n\n \n\n0 1 2 3 4 5 6 7 8\n-0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\nP\nos\n\niti\non\n\n, \n v\n\nel\noc\n\nity\n a\n\nnd\n a\n\ncc\nel\n\ner\nat\n\nio\nn\n\nTime in time constants\n\nSecond order,    T = 0.2,    Tau = 1\n\nAnalytic solution\n\nSequential solution\n\nVelocity\n\nAcceleration\n\nPosition\n\n \n\nFig. 5. Step response of second-order Kalman filter \n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1\n-50\n\n0\n\n50\n\n100\n\nP\nos\n\n.,\n v\n\nel\n. \n\nan\nd \n\nac\nc.\n\n S\nT\n\nD\n d\n\niff\ner\n\nen\nce\n\ns,\n p\n\ner\nce\n\nnt\n\nTime-step in time constants\n\nSecond order\n\nVelocity\n\nAcceleration\n\nPosition\n\n \n\nFig. 6. Error differences between analytic and actual solutions of second-order Kalman filter \n\n\n\n18 J. Etzion \n\n \n\n5 Summary \n\nThe analytic solution of the first- and second-order Kalman filter has been derived for \na single coordinate in steady-state conditions, with constant sampling time and \nconstant measurement errors. However, despite those limitations, the analytic \nsolutions for the estimation errors and the dynamic response of the filter are extremely \nuseful in preliminary assessments of the filter's performance in much broader \noperation conditions. In a variety of actual scenarios the magnitude of the time \nconstant, ?, can safely be estimated by using (31) or (63) by assuming quasi-static \nconditions, separately for each measured coordinate. For example, in a three-\ndimensional radar tracking, a separate time constants can be obtained for the range, \nazimuth and elevation coordinates by using the actual measurement errors in those \ndirections at a given time. True, the three line-of-sight coordinates are not entirely \nuncorrelated, but except for cases of very short ranges the correlation is quite small. \nIn addition, in dynamic scenarios the measurement errors may change in time, but \nagain, except for very short ranges the dynamics are not very high in relation to the \nmagnitude of the time constant. \n\nIn reality, in a three-dimensional tracking system, because of the different \nmeasurement errors in (32) and (64) for each coordinate, there will be three possible \nvalues of the q-parameter. The selected magnitude of q should be the largest one of \nthe three. Later, at the practical filter application, the actual magnitudes of ? will \nautomatically be determined for each coordinate separately in accordance with (31)  \nor (63). \n\nA possible variation of the sampling time in a given scenario is also not very \ndisturbing with respect to the time-constant estimate. As seen in (31) and (63), the \ndependence of the time constant on T is very weak, so that a use of some \"average\" \nvalue of the sampling time can still provide very useful performance estimates. Then, \non the base of the representative time constants, the anticipated output errors from the \nfilter can be calculated by means of (34) and (35) for the first-order filter, or by (65), \n(66), and (67) for the second-order filter. \n\nThe transfer functions of the filter ((42) and (43) for the first-order filter, and (74), \n(75), and (76) for the second-order filter) can also be very useful for a quick \nestimation of the effect of various tracking disturbances. For example, a systematic \nerror caused by a presence of acceleration when the first-order filter is applied, can be \nestimated by means of (42). Similar estimates can be done for other deviations, such \nas a ramp response (a velocity step) or an acceleration step. \n\nThe approximate analytic results of the filter performance, presented above, \nprovide possibilities for very fast estimates of the filter's performance, before an \ninvestment of big efforts and resources in developing extensive simulation programs \nand field experiments. The preliminary analysis is capable of a timely identification of \nunexpected problems in the early stages of development of technological projects. \n\nAnother by-product of the present analysis is the demonstration of the filter's \ninsensitivity to the exact form of the model-noise matrix. Instead of the \"advanced\" \nform of this matrix, given by (9) or (58), the degenerate form by (55) or (85) can be \nused without fear of any unwanted side effects. In addition, instead of the usual \n\n\n\n Steady-State Time Constant of the Kalman Filter 19 \n\n \n\nguesswork involved in the \"exact\" determination of the model-noise parameter, q (see \ndescription after (13)), a much more practical approach is to first select a reasonable \nmagnitude for the time constant, and then calculate the corresponding value of q by \nusing (32) or (64), according to the case. \n\nReferences \n\n1. Bar-Shalom, Y., Rong Lee, X., Kirubarajan, T.: Estimation with Applications to Tracking \nand Navigation, pp. 286, 287, 289, 362, 366. John Wiley and Sons (2001) \n\n2. Blackman, S., Popoli, R.: Design and Analysis of Modern Tracking Systems. Section 4.2. \nArtech House (1999) \n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear\n\nSystems?\n\nXin Tian, Ting Yuan, and Yaakov Bar-Shalom\n\nUniversity of Connecticut\nStorrs, CT 06269-4157, USA\n\n{xin.tian,tiy,ybs}@engr.uconn.edu\n\nAbstract. This chapter starts with a review of the architectures for\ntrack-to-track fusion (T2TF). Based on whether the fusion algorithm\nuses the track estimates from the previous fusion and the configuration\nof information feedback, T2TF is categorized into six configurations,\nnamely, T2TF with no memory with no, partial and full information\nfeedback, and T2TF with memory with no, partial and full information\nfeedback. The exact algorithms of the above T2TF configurations and\nthe impact of information feedback on fusion accuracy are presented.\nAlthough (under the Linear Gaussian assumption) the exact T2TF algo-\nrithms yield theoretically consistent fusion results, their major drawback\nis the need of the crosscovariances of the tracks to be fused, which dras-\ntically complicates their implementation. The information matrix fusion\n(IMF) is a special case of T2TF with memory. Although it is heuristic\nwhen not conducted at full rate, it was shown to have consistent and\nnear optimal fusion performance for practical tracking scenarios. Due\nto its simplicity, it is a good candidate for practical tracking systems.\nFor the problem of asynchronous T2TF (AT2TF), a generalized version\nof the IMF is presented. It supports information feedback for AT2TF\nin the presence of communication delay, and was shown to have good\nconsistency and close to optimal fusion accuracy. Finally the fusion of\nheterogenous tracks where the states at the local trackers are nonlinearly\nrelated and of different dimension is discussed. For the problem of the\nfusion of the track from an Interacting Multiple Model (IMM) estimator\nfrom an active sensor with the track from a passive sensor, a counterintu-\nitive phenomenon that heterogenous T2TF may have better performance\nthan the centralized measurement-to-track fusion approach (which is the\nknown optimum in the linear case) is demonstrated and explained.\n\n1 Introduction\n\nIn tracking applications, when more than one sensor is used to obtain measure-\nments, there are several possible configurations for information processing, which\nare summarized in Fig. 1. They differ in the sequence in which the data associ-\nation and tracking are carried out and the information available to the various\nprocessors [6].\n\n? This work was supported by grants ARO W911NF-10-1-0369 and ONR N00014-10-\n1-0029.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 21\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_2\n\n\n\n22 X. Tian, T. Yuan, and Y. Bar-Shalom\n\nType I configuration:\nSingle sensor situation \n(baseline)\n\nType II configuration:\nSingle sensor tracking followed by \ntrack to track association (T2TA) \nand fusion (T2TF)\n\nType III configuration: \nStatic association, followed by central \ndynamic association and tracking\n\nType IV configuration: \nCompletely centralized association \nand tracking/fusion (CTF)\n\nT2TFwoMnf\n(no feedback)\n\nT2TFwoMpf\n(partial feedback)\n\nT2TFwoMff\n(full feedback)\n\nT2TFwMnf\n(no feedback)\n\nT2TFwMpf\n(partial feedback)\n\nT2TFwMff\n(full feedback)\n\nT2TFwM\n(with memory)\n\nT2TFwoM \n(without \nmemory)\n\nIMF: Information \nmatrix fusion\n\n\u201cequivalent \nmeasurement\u201d\n\nEquivalent \nat full rate\n\nEquivalent\n\nA special \nform\n\nFig. 1. Configurations for Multisensor Information Processing\n\nFig. 2. Type I configuration \u2014 single sensor tracking\n\nType I configuration refers to the (standard) tracking system using a single\nsensor, which has the flowchart depicted in Fig. 2. In a multisensor situation this\ncorresponds to reporting responsibility (RR). Each sensor operates alone and\nhas responsibility for a certain sector of the surveillance region \u2013 no fusion of\nthe data (measurements or tracks) from the multiple sensors is done. As targets\nmove from one sector to another, they are handed over \u2013 handoff \u2013 in a manner\nthat depends on the system. Generally, the mechanism is to assign responsibil-\nity to the sensor with the highest expected accuracy, although workload and\ncommunication constraints can also play a role.\n\nType III configuration is the static intersensor association and fusion followed\nby central processing which consists of two stages. In the first stage, the mea-\nsurements from the various sensors, assumed to be from the same time, i.e., the\nsensors are assumed synchronized, are first associated and fused. This is a static\nintersensor measurement association and centralized measurement fusion (CMF)\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 23\n\nFig. 3. Type III configuration \u2014 static association, extraction of composite measure-\nments (fusion), followed by dynamic association/tracking\n\nFig. 4. Type IV configuration \u2014 centralized multisensor tracking (Centralized\nTracker/Fuser \u2014 CTF)\n\nthat yields composite measurements, also known as supermeasurements. Then\nin the second stage, these composite measurements are processed by a (central)\ndynamic association and tracking algorithm. Fig. 3 shows such a configuration\nfor 3 sensors.\n\nThe Type IV configuration, which is the centralized tracking (also called cen-\ntralized tracker/fuser \u2014 CTF), is depicted in Fig. 4. In this configuration all\nthe measurements are sent to the center, which carries out the association with\nall the available information and then uses these measurements to update the\ntracks. Since this configuration uses the maximum available information, it will\nprovide (subject to the limitations of the specific data association algorithm it\nuses) the best results [6]. In the absence of the need for data association, it will\nyield, for linear systems, the globally optimal estimates [6]. As it will be shown\nlater, in a nonlinear problem with heterogenous trackers, HT2TF (heterogenous\nT2TF) can be superior to CTF.\n\nThe Type II configuration, which is the main subject of this chapter, is the\nsingle sensor tracking followed by track fusion. Its importance stems from the fact\nthat it can run at a low rate, e.g., on demand. This is important in situations\nwhere the communication bandwidth from the sensors to the fusion center is\nlimited. This configuration is distributed and decentralized, where each sensor\nhas its own information processor local data associator/tracker and yields\nfull tracks. A Fusion Center (FC) carries out the association and fusion of the\nlocal tracks into system tracks. These steps are designated as Track-to-Track\nAssociation (T2TA) and Track to Track Fusion (T2TF), respectively. The Type\nII configuration is very important in distributed tracking systems. Compared to\n\n\n\n24 X. Tian, T. Yuan, and Y. Bar-Shalom\n\nthe CTF, which requires the transmission of local sensor measurements to the\nFC at the full rate, T2TF can be conducted at much lower rates, which can\nsignificantly reduce communication requirements.\n\nAs shown in Fig. 1, depending on whether the fusion algorithm uses the track\nestimates from the previous fusion and the configuration of information feed-\nback, T2TF configurations are further categorized as: T2TF with no mem-\nory with no information feedback (T2TFwoMnf), partial information feedback\n(T2TFwoMpf) and full information feedback (T2TFwoMff), and T2TF with\nmemory with no information feedback (T2TFwMnf), partial information feed-\nback (T2TFwMpf) and full information feedback (T2TFwMff). These configu-\nrations as well as the impact of information feedback on the fusion accuracy are\ndiscussed in detail in Sect. 2.\n\nThe impact of the crosscorrelation between local estimation errors on fused\nestimate for T2TFwoMnf is discussed in Sect. 3.\n\nAlso shown in Fig. 1, the information matrix fusion (IMF) [10,8,15,11,6] is\na special form of T2TFwM. Operating at full rate the IMF is equivalent to\nthe Type IV Configuration, i.e., the CTF, while, at a reduced rate, the IMF\nis heuristic. However, for the practical range of system process noises levels, it\nwas shown to yield consistent1 fusion results and close to the optimal fusion\naccuracy [9]. Also note that the IMF is algebraically equivalent to the equivalent\nmeasurement approach [6]. Compared to the exact T2TF fusion algorithms, the\nIMF has the advantage of not requiring the crosscovariances of the errors of\nthe tracks to be fused, which significantly simplifies the implementation. Sect. 4\nreviews the IMF at full and reduced rate, as well as a generalized IMF (GIMF)\nfor the fusion of asynchronous tracks which supports information feedback in the\npresence of communication delay and was shown to have consistent and close to\noptimal fusion results [18].\n\nAnother special type of T2TF that may occur in practical tracking systems\nis the fusion of tracks from heterogeneous trackers that are using different state\nvectors, discussed in Sect. 5. In [19] the HT2TF problem was investigated, where\nthe track from an interacting multiple model (IMM) filter with states in Carte-\nsian coordinates and using an active sensor was fused with the track from a\npassive sensor with angular states. Counterintuitively, it was shown that when\nthe IMM tracker is involved, HT2TF yielded better performance than the CTF\napproach. These results are presented in Sect. 6. Sect. 7 summarizes the chapter\nwith concluding remarks.\n\n2 Track-to-Track Fusion Configurations and the Impact\nof Information Feedback\n\nDepending on whether the track estimates from the previous fusion are used for\nthe current fusion and the configuration of information feedback, T2TF can be\ncategorized as the following configurations:\n\n1 Its errors were commensurate with its calculated covariance [2].\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 25\n\n\u2013 T2TFwoM with no information feedback (T2TFwoMnf)\n\u2013 T2TFwoM with partial information feedback (T2TFwoMpf)\n\u2013 T2TFwoM with full information feedback (T2TFwoMff)\n\u2013 T2TFwM with no information feedback (T2TFwMnf)\n\u2013 T2TFwM with partial information feedback (T2TFwMpf)\n\u2013 T2TFwM with full information feedback (T2TFwMff)\n\nTracker 1\n\nTracker 2\n\n(a) T2TFwoM with no feedback\n\nFusion\nCenter\n\nFusion\nCenter\n\nFusion\nCenter\n\nTracker 1\n\nTracker 2\n\nTracker 1\n\nTracker 2\n\n(c) T2TFwoM with full feedback (Fusion Center to Tracker 1 and Tracker 2)\n\n(b) T2TFwoM with partial feedback (Fusion Center to Tracker 1)\n\nFusion\nCenter\n\nFusion\nCenter\n\nFusion\nCenter\n\nFusion\nCenter\n\nFusion\nCenter\n\nFusion\nCenter\n\nFig. 5. Information configurations for T2TFwoM\n\n2.1 T2TF without Memory\n\nIn T2TFwoM, the FC uses only the current track estimates with no memory\nof the track estimates from the previous fusion. Fig. 5 illustrates the three in-\nformation configurations of T2TFwoM, where two local tracks (that pertain\nto the same target) are fused at certain times. The first configuration is the\nT2TFwoMnf [5], designated as Config. IIa for multisensor tracking in [1]. As\n\n\n\n26 X. Tian, T. Yuan, and Y. Bar-Shalom\n\nindicated in Fig. 5(a), the two tracks evolve independently without any infor-\nmation from each other, thus the improved accuracies are achieved only at the\nfusion times at the FC. The second configuration is the T2TFwoM with partial\ninformation feedback (T2TFwoMpf) which belongs to the Config. IIb in [1]. In\nthis case, as shown in Fig. 5(b), track 1 is fused with track 2 and continues with\nthe fused track (feedback) from the FC. However, track 2 does not receive the\nfused track in view of the partial information feedback. The third configuration\nis the T2TFwoM with full information feedback (T2TFwoMff), which also be-\nlongs to the Type IIb configuration in [1]. As shown in Fig. 5(c), in this case\nboth trackers receive and continue with the fused track.\n\nThe exact algorithms for T2TFwoM can be found in [6,16]. The key is to eval-\nuate the crosscovariances between the local tracks. As shown in [3], although the\nmeasurements at different local trackers have independent noises, the local tracks\nare correlated due to common process noises of the target\u2019s motion. Ignoring the\ncrosscovariances in T2TF will lead to over-optimistic fused covariance and track\ninconsistency [6]. In [16] it was shown that, compared to CTF, T2TFwoM al-\nways has a certain loss in fusion accuracy and, counterintuitively, information\nfeedback has a negative impact on the accuracy of T2TFwoM.\n\nTo illustrate this phenomenon, consider the following generic T2TF example.\nThe target state is defined as [x x?]\n\n?\n. The target motion is modeled as the discrete\n\nwhite noise acceleration (DWNA) model in [2], Sect. 6.3.2. It is assumed that two\nsensors obtain position measurements of the target with a sampling interval of\nT = 1 s. The standard deviation of the measurement noise is ?w =\n\n?\nRl = 30m\n\nfor each sensor (i.e., at each local tracker) and the process noise variance is\nq = 1m2/s4. T2TFwoM takes place every 5 s, i.e., at a reduced rate.\n\nTable 1. Fuser variances (at fusion times) in steady state (fusion interval: 5 s)\n\nFusion Type\nFC track at fusion time\n\nPosition Velocity\n\nT2TFwoMff 133 6.29\n\nT2TFwoMpf 131 6.30\n\nT2TFwoMnf 125 6.30\n\nCTF 119 6.03\n\nSingle sensor tracker 205 7.26\n\nTable 1 shows the steady state variances of position and velocity at the FC. All\nthe fused tracks are more accurate than the single-sensor (local) tracks without\nfusion, which have steady state variances as 205 in position and 7.26 in veloc-\nity. Note that at the fusion time the position estimates of all the fused tracks\nhave a small degradation compared to the CTF: 5% for T2TFwoMnf, 10% for\nT2TFwoMpf, 12% for T2TFwoMff. This shows that T2TFwoM has a degrada-\ntion in fusion accuracy compared to CTF and this degradation increases in the\npresence of information feedback.\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 27\n\nTo explain this phenomenon consider the gains of the steady state filter for\nthe above problem, namely, the alpha-beta filter. In steady state the filter gain\nis a monotonically increasing function of the maneuvering index ? [2].\n\nUnder T2TFwoMnf, the filter gain of each measurement in the fused track\n(with two equal-accuracy sensors) is\n\nWT2TFwoMnf =\n1\n\n2\n[?(?l), ?(?l)/T ]\n\n? (1)\n\nwhere ?l =\n?\nqT 2?\nRl\n\nis the local maneuvering index of the two trackers (\n?\nq and?\n\nRl are the standard deviations of the process noise and measurement noise,\nrespectively).\n\nUnder CTF, zc =\n1\n2 (z1 + z2) and Rc =\n\n1\n2Rl. Thus, the central maneuvering\n\nindex is ?c =\n?\n2?l, i.e., larger. For each measurement, the centralized (globally\n\noptimal) filter gain in steady state for each measurement \u2014 its weighting \u2014 is\n\nWC =\n1\n\n2\n[?(?c), ?(?c)/T ]\n\n?\n=\n\n1\n\n2\n[?(\n\n?\n2?l), ?(\n\n?\n2?l)/T ]\n\n?\n\n> WT2TFwoMnf =\n1\n\n2\n[?(?l), ?(?l)/T ]\n\n?\n(2)\n\nWith information feedback, the local filter gains will be even smaller than\nwithout feedback, i.e., they will deviate further from the globally optimal gains.2\n\nThis is because the local trackers have more accurate information due to the\nfeedback (compared to the no feedback case) and this reduces their filter gains\nfor the new measurements.\n\n2.2 T2TF with Memory\n\nIn the configuration of T2TFwM, the fusion involves both the track estimates at\nthe current fusion time and those from the previous fusion time. Fig. 6 illustrates\nT2TFwM with no, partial and full information feedback.\n\nThe exact fusion algorithms for the three T2TFwM configurations were pre-\nsented in [16]. It was shown that, at full rate, T2TFwM has equivalent fusion\nperformance with the CTF (for a linear system). However, at a reduced rate,\ncompared to the CTF there is a certain loss of fusion accuracy, which is unavoid-\nable [16]. And unlike the case with T2TFwoM, information feedback improves\nthe fusion accuracy of T2TFwM. This phenomenon is illustrated with the fol-\nlowing example.\n\nThe state of the target (taken as a scalar for simplicity) evolves according to\n\nx(k) = x(k ? 1) + v(k) k = 2, 3, . . . (3)\nwhere v(k) is the process noise with variance q = 0.3.\n\n2 Gains smaller or larger than the optimal gains (which yield the minimum MSE) will\nlead to a MSE larger than the minimum [2]. The relationship between the optimal\ngain and the optimal state estimation MSE is discussed in detail in [2].\n\n\n\n28 X. Tian, T. Yuan, and Y. Bar-Shalom\n\n( | )\u02c6 l lcx\n\n( | )1? l lx\n\n( | )2\u02c6 l lx\n\n( | )1? k kxTracker 1\n\n( | )2\u02c6 k kxTracker 2\n\n( | )\u02c6 k kcx( | )\u02c6 k lcx\n\n( | )1? k lx\n\n( | )2\u02c6 k lx\n\nTracker 1\n\nTracker 2\n\n(a) T2TFwM with no information feedback (one cycle: from fusion time l to the next fusion time k)\n\n( | )\u02c6 l lcx\n\n(c) T2TFwM with full information feedback (one cycle: form fusion time l to the next fusion time k)\n\n( | )\u02c6 l lcx\n\n( | )\u02c6 l lcx\n\n( | )1? k kxTracker 1\n\n( | )2\u02c6 k kxTracker 2\n\n( | )\u02c6 k kcx( | )\u02c6 k lcx\n\n( | )\u02c6 k kcx\n\n( | )\u02c6 k kcx\n\nTracker 1\n\nTracker 2\n\n( | )\u02c6 l lcx\n\n( | )1? l lx\n\n( | )2\u02c6 l lx\n\n( | )1? k kxTracker 1\n\n( | )2\u02c6 k kxTracker 2\n\n( | )\u02c6 k kcx( | )\u02c6 k lcx\n\n( | )2\u02c6 k lx\n\nTracker 2\n\n(b) T2TFwM  with partial information feedback (one cycle: from fusion time l to the next fusion time k)\n\n( | )c\u02c6 l lx Tracker 1( | )c\u02c6 k kx\n\nFig. 6. T2TFwM at arbitrary rate\n\nTwo trackers, 1 and 2, take measurements of the target with independent\nmeasurement noises w1 and w2, namely,\n\nzi(k) = x(k) + wi(k) i = 1, 2 (4)\n\nwhere wi(k) are zero-mean Gaussian noises with variance Ri = 1, i = 1, 2. The\ntwo trackers calculate tracks of the target with their own measurements using\na Kalman filter. Each local track is initialized at time 1 with the first local\nmeasurement. The first T2TF happens at time 1. Then T2TFwM occurs every\nNf = 3 sampling times.\n\nTable 2 shows the fuser- and tracker-calculated variances when the fuser (with\nmemory) is operating at reduced rate. These results verify the conclusions on the\nimpact of information feedback on T2TFwM, namely, that feedback is beneficial.\nNote that due to the reduced rate, T2TFwM is suboptimal compared to CTF,\nbut only slightly.\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 29\n\nTable 2. Fuser and tracker 1 calculated variances at fusion times for Nf = 3 (reduced\nrate), q = 0.3, R1 = R2 = 1\n\nTime 1 3 6 9 12 15\n\nT2TFwMnf\nTracker1 1.0000 0.4639 0.4196 0.4180 0.4179 0.4179\nFuser 0.5000 0.2772 0.2698 0.2694 0.2694 0.2694\n\nT2TFwMpf Fuser 0.5000 0.2763 0.2690 0.2688 0.2688 0.2688\n\nT2TFwMff Fuser 0.5000 0.2755 0.2683 0.2682 0.2682 0.2682\n\nCTF/CMF 0.5000 0.2743 0.2654 0.2653 0.2653 0.2653\n\nNote that the IMF, detailed in the Sect. 4, also uses the previous track esti-\nmates (i.e., it has memory). When operating at full rate, IMF is algebraically\nequivalent to CTF and also to the algorithms for T2TFwM (for a linear system).\nHowever, at a lower rate, the IMF is heuristic.\n\nLimitations of the exact T2TF algorithms discussed above include i) the exact\nfusion algorithms only exist under the Linear Gaussian assumption, ii) the algo-\nrithms require the crosscovariances of the tracks to be fused, which are generally\ndifficult to obtain and greatly increase the complexity of the algorithms\u2019 im-\nplementation. For T2TF in practical tracking systems, approximate algorithms\nwith near optimal fusion performance and less complexity are desirable. The\nIMF has been shown as a good candidate for the purpose and will be discussed\nin the next section.\n\n3 Impact of Crosscorrelation on the Track-to-Track\nFusion without Memory and No Feedback\n\nA simple approximate approach for T2TF is to ignore the crosscovariances\namong different tracks. However this will lead to over-optimistic fused covari-\nances, which, especially when full information feedback is used, could lead to\nlarge errors and filter divergence [16]. Here we use a simple example to show the\neffect of the crosscovariance on T2TF.\n\nTwo sensors tracking the same target, each with its local processor, are con-\nsidered. The target is modelled by the kinematic model\n\nx(k + 1) =\n\n[\n1 1\n0 1\n\n]\nx(k) +\n\n[\n1/2\n1\n\n]\nv(k) (5)\n\nThis is a nearly constant velocity (NCV) or white noise acceleration (WNA)\nmotion model with unity sampling time with \u201cpiecewise constant\u201d process noise\n(see [2], Sect. 6.3) with variance q entering into the system. A range of values\nfor q will be considered.\n\nThe measurements at the two sensors are\n\nzm(k) = [1 0]x(k) + wm(k) m = 1, 2 (6)\n\n\n\n30 X. Tian, T. Yuan, and Y. Bar-Shalom\n\nwith the two measurement noises mutually independent and with unity variance.\nThe maneuvering index for this target (see Eq. (6.5.3-14) in [2]), is thus\n\n? =\n?\nq (7)\n\nFig. 7 presents in the first column the \u201c2?\u201d steady-state estimation error el-\nlipses (corresponding to 85% probability mass under Gaussian assumption) in\nthe state space x2-x1 (velocity-position) for each sensor. The values of q con-\nsidered are 0.01, 0.1, 0.5, 1, 2 and 5. These correspond to maneuvering indices\nfrom 0.1 to\n\n?\n5.\n\nThe second column presents the error ellipses one obtains by combining these\nestimates assuming they are independent. These ellipses are exactly half (in area)\ncompared to the single-sensor error ellipses \u2014 they are, however, optimistic\nbecause the half variance (in each coordinate) is unachievable.\n\nThe third column presents the exact ellipses corresponding to the combined\nestimates obtained by taking into account the dependence between the two tracks\ndue to the common process noise, quantified by the crosscovariance [6].\n\nFig. 8 shows the ratio of the areas of the ellipses of uncertainty of\n\n\u2013 the fused estimates from the two sensors accounting for their dependence and\n\u2013 the single sensor estimates\n\nfor various values of the target maneuvering index. This ratio would be equal\nto 1/2 in the absence of the dependence. However, due to the dependence, it is\naround 0.7 for a wide range of process noise variances.\n\nFig. 9 shows the decreases in the elements of the covariance matrix for the\nsame situation \u2014 as before, in the absence of dependence, each element would\nbe halved after fusion.\n\nFor linear systems the crosscorrelations are positive and ignoring them leads\nto optimistic covariance for the fused estimates.\n\n4 The Information Matrix Fusion\n\nThis section reviews the information fusion algorithm [10,8,15,11,6] and its ex-\ntensions. The IMF operates similarly to the Information Matrix form of the KF\n\u2014 the Information Filter \u2014 and, consequently, it is designated as Information\nMatrix Fusion (IMF). The following versions of the IMF will be discussed, which\nare the IMF with full communication rate (IMFfcr), the IMF with reduced com-\nmunication rate (IMFrcr) and the Generalized IMF (GIMF) for asynchronous\nT2TF (AT2TF) in the presence of communication delay.\n\n4.1 IMF with Full Communication Rate \u2013 IMFfcr\n\nThe IMF, when operating at full rate, is equivalent to the optimal CTF [6]. The\nfused (central) estimate follows (for simplicity, N synchronized local trackers are\nassumed here)\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 31\n\n(Fig. 7. Error ellipses for various levels of maneuvering index (Column 1: for each sensor\nalone; Column 2: for two sensors combined assuming independence; Column 3: for two\nsensors combined correctly)\n\n\n\n32 X. Tian, T. Yuan, and Y. Bar-Shalom\n\nFig. 8. Decrease in the error ellipse area in view of the dependence of the errors in the\nfusion process\n\nFig. 9. Decrease of the state covariance matrix elements after fusion in view of the\ndependence of the errors\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 33\n\nP (k|k)?1x?(k|k) = P (k|k ? 1)?1x?(k|k ? 1)\n\n+\n\nN?\ni=1\n\n[P i(k|k)?1x?i(k|k)? P i(k|k ? 1)?1x?i(k|k ? 1)] (8)\n\nThe updated fused covariance needed above is obtained as\n\nP (k|k)?1 = P (k|k ? 1)?1 +\nN?\ni=1\n\n[P i(k|k)?1 ? P i(k|k ? 1)?1] (9)\n\nIn IMFfcr each local estimate/covariance has to be available at the center, i.e.,\nfull communication rate is necessary. The implementation of information feed-\nback to local trackers is trivial in this configuration. Also note that the IMF is\nalgebraically equivalent to the equivalent measurement approach [6].\n\n4.2 IMF with Reduced Communication Rate \u2013 IMFrcr\n\nIf the communication occurs only every n sampling times, equations (8)\u2013(9) are\nused with the following modification. The fused (central) estimate follows from\n\nP (k|k)?1x?(k|k) = P (k|k ? n)?1x?(k|k ? n)\n\n+\n\nN?\ni=1\n\n[P i(k|k)?1x?i(k|k)? P i(k|k ? n)?1x?i(k|k ? n)] (10)\n\nThe updated central covariance needed above is obtained in terms of the local\ncovariances as\n\nP (k|k)?1 = P (k|k ? n)?1 +\nN?\ni=1\n\n[P i(k|k)?1 ? P i(k|k ? n)?1] (11)\n\nIt should be noted that the above is no longer equivalent to the CTF \u2014 the\nmodified equations (10)\u2013(11) are heuristic. As shown in [9], with full informa-\ntion feedback, the IMFrcr diverges for extremely large values of process noise\nvariance. However, for practical levels of process noises, the IMFrcr was shown\nto have consistent and close optimal fusion performance. Compared to the ex-\nact T2TF fusion algorithms, the IMFrcr does not require the evaluation of the\ncrosscovariances between the tracks to be fused, which significantly simplifies the\nimplementation and makes it a good candidate for T2TF in practical tracking\nsystems. Next the generalization of the IMF for the problem of asynchronous\nT2TF will be discussed.\n\n4.3 Generalized Information Matrix Fusion for Asynchronous T2TF\n\nThe T2TF algorithms mentioned above assume that the local tracks are synchro-\nnized. In practical distributed tracking systems, the synchronicity assumption\n\n\n\n34 X. Tian, T. Yuan, and Y. Bar-Shalom\n\ncan hardly be satisfied, which raises the problem of asynchronous track-to-track\nfusion (AT2TF). In addition local tracks arrive at the FC with transmission de-\nlays, which further complicates the fusion problem and the implementation of\ninformation feedback. To address this problem, a generalized IMF (GIMF) for\nAT2TF was presented in [18], and is reviewed next.\n\nWithout loss of generality consider the fusion of tracks from two asynchronous\nlocal trackers 1 and 2. Tracker 1 is collocated with the FC (no communication\ndelay and information feedback to tracker 1). Tracker 2 is a remote tracker (with\ncommunication delay; no feedback to it). Suppose at the fusion time tf one has\n\n\u2013 track (x?1(tf |tf ), P 1(tf |tf )) from tracker 1 (same as FC) and\n\u2013 tracks (x?2(t1|t1), P 2(t1|t1)) and (x?2(t2|t2), P 2(t2|t2)) from tracker 2, t1 <\nt2 ? tf ,\n\nwhere t1 and t2 are the previous and current communication times from sensor\n2.\n\nAccording to the Generalized Information Matrix fusion (GIMF) the fused\ntrack is given by\n\nP (tf )\n?1 = P 1(tf |tf )?1 +\n\n[\nP 2(tf |t2)?1 ? P 2(tf |t1)?1\n\n]\n(12)\n\nP (tf )\n?1x?(tf ) = P 1(tf |tf )?1x?1(tf |tf )\n\n+\n[\nP 2(tf |t2)?1x?2(tf |t2)? P 2(tf |t1)?1x?2(tf |t1)\n\n]\n(13)\n\nwhere x?(tf ) is the fused track at tf , P (tf ) is its covariance, x?\n1(tf |tf ) and\n\nP 1(tf |tf ) are the track and its covariance from tracker 1 at the fusion time\ntf , x?\n\n2(tf |ti) and P 2(tf |ti) are the predicted local track 2 from ti to the fusion\ntime tf and the corresponding covariance, i = 1, 2.\n\nIn the presence of communication delay, information feedback to the remote\ntracker 2 needs to be carefully handled. See [18] for the details of the implemen-\ntation for both AT2TF with partial and AT2TF with full information feedback.\nIt was shown that the proposed GIMF based AT2TF algorithms yield consis-\ntent and close to optimal fusion results. The following reasons contribute to the\napplicability of the GIMF:\n\n\u2013 The predicted information gain from track 2 quantified by[\nP 2(tf |t2)?1 ? P 2(tf |t1)?1\n\n]\nin (12), is due to the local measurements from\n\n(t1 t2] and can be viewed as approximately independent from the other\ntracks.\n\n\u2013 The subtraction structure of the information gain\n[\nP 2(tf |t2)?1?P 2(tf |t1)?1\n\n]\nprovides a desirable feature that cancels (approximately) its crosscorrelation\nwith other local tracks caused by the common process noises with the use of\nprediction.\n\n5 Heterogenous Track-to-Track Fusion\n\nThe previously discussed T2TF configurations and algorithms assume that the\nlocal trackers use the same target state vector. In practical tracking systems, local\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 35\n\ntrackers may use different motion models and state vectors, due to observability\nissues (e.g., active vs. passive sensors).\n\nA concrete example of such a situation is when (i) tracker 1 uses an active\nsensor which is able to obtain range and azimuth measurements (full 2D or 3D\nposition, the latter requires elevation measurements as well) and its target state\nvector comprises Cartesian position, velocity, etc. (ii) tracker 2 uses a passive\nsensor with angle only measurements and its target state vector comprises an-\ngular position, velocity and possibly acceleration.\n\n5.1 The Heterogenous Track-to-Track Fusion Problem\n\nWithout loss of generality, consider the following state-space models\n\nxi(k + 1) = f i[xi(k)] + vi(k) (14)\n\nzi(k) = hi[xi(k)] +wi(k) (15)\n\nat sensor i and\n\nxj(k + 1) = f j [xj(k)] + vj(k) (16)\n\nzj(k) = hj [xj(k)] +wj(k) (17)\n\nat sensor j. In the above, fs[\u00b7] and hs[\u00b7], s = i, j, are different and can be\nnonlinear; vs(\u00b7) and ws(\u00b7), s = i, j, are the process and measurement noises,\nrespectively.\n\nThe state vectors xi and xj are in different spaces. Let xi be the larger\ndimension state. For example, one can have full Cartesian position and velocity\nin 2-dimensional space for tracking with an active sensor\n\nxi = [ x x? y y? ]? (18)\n\nand xj be the smaller dimension state (e.g., angular position and velocity for\ntracking with a passive sensor)\n\nxj = [ ? ?? ]? (19)\n\nThese state vectors, in general, have the nonlinear relationship\n\nxj\n?\n= g(xi) (20)\n\nThe two sensors are assumed synchronized3 and the time index k for sampling\ntime tk will be omitted if there is no ambiguity.\n\n3 Generalization to asynchronous sensors is possible [17], but the notations become\nvery cumbersome. Without considering the crosscovariance matrix, the extension to\nasynchronous case is straightforward. If the crosscovariance matrix is considered (for\nthe configuration with no memory at the FC and no information feedback to the\nlocal trackers), each track\u2019s latest estimate available at the FC is predicted to the\nfusion time and then they are fused using the appropriate covariance matrices.\n\n\n\n36 X. Tian, T. Yuan, and Y. Bar-Shalom\n\nThe corresponding estimates (approximate conditional means) at these het-\nerogeneous local sensors are x?i with (conditional) covariance matrix (the condi-\ntioning is omitted for brevity)\n\nP i\n?\n= E[(xi ? x?i)(xi ? x?i)?] (21)\n\nand x?j with (conditional) covariance matrix\n\nP j\n?\n= E[(xj ? x?j)(xj ? x?j)?] (22)\n\nThe problem is how to carry out the fusion of the estimate x?i with covari-\nance P i and the estimate x?j with covariance P j to achieve better estimation\nperformance for the full state of interest xi.\n\n5.2 The LMMSE Fuser\n\nThe approach to HT2TF discussed next is to use the linear technique based on\nthe fundamental equations of LMMSE estimation [2]. Considering the full state\nestimate x?i as the prior and the smaller state estimate x?j as the measurement,\nwe have the LMMSE fused estimate\n\nx?iLMMSE = x?\ni + PxzP\n\n?1\nzz\n\n[\nx?j ? g (x?i)] (23)\n\nwith the corresponding fused covariance matrix\n\nP iLMMSE = P\ni ? PxzP?1zz P ?xz (24)\n\nwhere (the details can be found in [19])\n\nPxz\n?\n= E\n\n[(\nxi ? x?i) (x?j ? g(x?i))?]\n\n? P i(Gi)? ? P ij (25)\nPzz\n\n?\n= E\n\n[(\nx?j ? g(x?i)) (x?j ? g(x?i))?]\n\n? P j ?GiP ij ? P ji(Gi)? +GiP i(Gi)? (26)\n\nwith Gi the Jacobian of g(xi)\n\nGi\n?\n=\n\n[?xig(xi)?]?xi=x?i (27)\nand P ij the crosscovariance matrix\n\nP ij\n?\n= E[(xi ? x?i)(xj ? x?j)?] (28)\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 37\n\n5.3 The ML Fuser\n\nUnder the Gaussian assumption, the heterogeneous T2TF problem can be solved\nby minimizing the negative log-likelihood function4 (NLLF) based on (20). The\nLF of xi (the full state) is [6]\n\n?(xi) = p(x?i, x?j |xi) = N\n{[\n\nx?i\n\nx?j\n\n]\n;\n\n[\nxi\n\nxj\n\n]\n, P?1\n\n}\n(29)\n\nwhere\n\nP =\n\n[\nP i P ij\n\nP ji P j\n\n]\n(30)\n\nThen the ML fused estimate is the solution of\n\n?xiL(xi) = 0 (31)\nwhere\n\nL(xi)\n?\n= ? ln?(xi) (32)\n\nBecause of the nonlinearity of the function g(xi), there is no explicit expression\nfor the solution of (31). Consequently, (32) is minimized by a numerical search,\ne.g., the gradient projection algorithm. The result is denoted as x?iML and the\ncorresponding covariance matrix is\n\nP iML =\n\n([\nI Gi\n\n]\nP?1\n\n[\nI\nGi\n\n])?1\n(33)\n\nwhere Gi is defined in (27) and I is the identity matrix (4 \u00d7 4 in our case).\n\n6 Example\n\nFig. 10 shows an example scenario (see [19] for details), where the active sen-\nsor is located at\n\n(?6\u00d7 104, 2\u00d7 104)m with sampling interval Ta = 5 s and the\npassive sensor located at\n\n(?5\u00d7 104, 4\u00d7 104)m with sampling interval Tp = 1 s.\nMeasurement noises from the two sensors are assumed to be mutually inde-\npendent zero mean white Gaussian noises with standard deviations ?r = 20m,\n?a = 5mrad for the active sensor, and ?p = 0.5mrad for the passive sensor.\n\nThe tracker at the active sensor uses an IMM estimator with two modes:\nmode 1, a linear nearly constant acceleration (NCV) model [2], and mode 2, a\nnonlinear nearly coordinate turn (NCT) model [2]. The tracker at the passive\nsensor uses a linear KF (rather than IMM estimator, because target maneuvers\nare practically unobservable by the passive sensor). The motion model is the\ndiscretized continuous Wiener process acceleration (CWPA) model (with angle,\nangle rate and angle acceleration).\n\nIn [19] it was observed that for this (nonlinear) HT2TF problem\n\n4 As it is pointed out in [8], the LMMSE T2TF approach is, in the linear Gaussian\ncase, optimal in ML sense.\n\n\n\n38 X. Tian, T. Yuan, and Y. Bar-Shalom\n\n\u2013 The crosscorrelation of the estimation errors from heterogeneous local track-\ners is too complicated to capture \u2014 it can be positive or negative. The esti-\nmation errors\u2019 crosscorrelation has been examined by MC simulations.\n\n\u2013 When using a LMMSE fuser, neglecting the track crosscovariance in HT2TF\nleads to sometimes optimistic, sometimes pessimistic fused covariance. Note\nthis is different from the homogenous T2TF where neglecting the crossco-\nvariance between the local tracks will always result in optimistic fused co-\nvariance. This is because for linear systems the crosscorrelation coefficients\nare always positive.\n\n\u2013 When the configuration of fusion without memory and no information feed-\nback is used, neglecting the track crosscovariance is a reasonable practical\nchoice, which yields little loss in fusion performance.\n\nThe results using x?iLMMSE with P\ni\nLMMSE and x?\n\ni\nML with P\n\ni\nML were found to\n\nbe practically the same so only the former is compared with the CTF which\nprocesses all the measurements (from both the active and the passive sensor) in\nthe FC.\n\nFig. 11 compares the position RMSE of the HT2TF algorithm to that of the\nCTF IMM tracker from 400 Monte Carlo runs. Surprisingly, the results show\nthat, in the scenario considered, the HT2TF is superior to the centralized IMM\ntracker (CTF IMM) during the maneuver periods when the latter experiences a\nspike in its error.\n\nTo explain this apparently counterintuitive result, Fig. 12 shows the maneu-\nvering mode probabilities (NCT) in the active sensor IMM and CTF IMM. It\nturns out that the use of the passive measurements in the CTF IMM \u201cclouds\u201d\nthe maneuvers because of low maneuvering index, which leads to the degraded\n\n?7 ?6 ?5 ?4 ?3 ?2 ?1 0 1\n\nx 10\n4\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\nx 10\n\n4\n\n100s\n\n130s\n\n200s\n\n245s\n\n335s380s\n\nThe Scenario and Sample Active Sensor Measurements\n\nX (m)\n\nY\n (\n\nm\n)\n\n \n\n \n\nActive sensor\nPassive sensor\nTrue trajectory\nActive sensor measurement\nTurning point\n\nFig. 10. The scenario, with the target true speed 250 m/s\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 39\n\n0 50 100 150 200 250 300 350 400 450\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\nTime (s)\n\nP\nos\n\niti\non\n\n R\nM\n\nS\nE\n\n (\nm\n\n)\n\nPosition RMSE, 1000 MC runs \n\n \n\n \n\nPos. RMSE: active sensor IMM\nPos. RMSE: CTF IMM\nPos. RMSE: LMMSE fuser\nManeuvering interval\n\nFig. 11. Performance comparison: HT2TF (with LMMSE fuser) vs. CTF IMM in po-\nsition RMSE\n\n0 50 100 150 200 250 300 350 400 450\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\n0.6\n\n0.7\n\n0.8\n\n0.9\n\n1\n\nTime (s)\n\nM\nod\n\ne \npr\n\nob\nab\n\nili\nty\n\nMode probability of NCT\n\n \n\n \n\nNCT(active sensor)\nNCT(CTF)\nManeuvering interval\n\nFig. 12. Maneuvering mode probability (NCT) in the active sensor\u2019s IMM and CTF\nIMM\n\nperformance of the CTF IMM filter. Specifically, as can be seen from Fig. 12,\nwhen there is a maneuver, the maneuvering mode probability in the CTF IMM\nrises slower and to a lower level than in the active sensor\u2019s IMM. (Note that in\nthis example the passive sensor has a higher sampling rate than the active sensor\nwith Ta = 5 s and Tp = 1 s.) In the scenario considered, the freedom available to\n\n\n\n40 X. Tian, T. Yuan, and Y. Bar-Shalom\n\neach local sensor to flexibly design a more suitable local estimator is what allows\nthe heterogeneous T2TF approach to achieve a better estimation performance\nthan the CTF IMM.\n\n7 Conclusions\n\nThis chapter discusses the various architectures for track-to-track fusion (T2TF).\nBased on whether the track estimates from the previous fusion are used by the\ncurrent fusion and the presence of information feedback, T2TF can be further\ncategorized into six configurations, namely, T2TF without memory with no,\npartial and full information feedback, and T2TF with memory with no, partial\nand full information feedback.\n\nT2TF without Memory (T2TFwoM) uses only the latest local tracks. It has\na small loss in fusion accuracy compared to the centralized tracker/fuser (CTF)\nregardless of fusion rate. It was shown that information feedback has a negative\nimpact on the accuracy of T2TFwoM.\n\nT2TF with Memory (T2TFwM) uses both the latest local tracks and the\ntrack estimates from the previous fusion. It is algebraically equivalent to the\nCTF when operating at full rate. At reduced rates, it has a slight loss in fusion\naccuracy compared to the CTF. In contrast to T2TFwoM, information feedback\nhas a positive impact on the fusion accuracy of T2TFwM.\n\nThe Information Matrix Fusion (IMF) is a special form of T2TFwM. It is\nequivalent to the CTF at full rate. At reduced rates it is heuristic but performs\nwell for practical levels of process noises: it has near optimal fusion performance\nand is consistent. For the fusion of asynchronous tracks in the presence of com-\nmunication delay, fusion algorithms were developed based on a generalized IMF,\nwhich are easy to implement, support the use of information feedback and yield\nconsistent, close to optimal fusion results.\n\nThe Heterogenous Track-to-Track Fusion (HT2TF) problem involves the fu-\nsion of tracks in different state spaces. Unlike in the conventional T2TF, the\ncrosscorrelations of local tracks have indefinite impact on the fuser-calculated\naccuracy of the fused track. When an IMM tracker is used, HT2TF allows each\nlocal sensor to flexibly design a more suitable local estimator which can lead to\na better estimation performance than the CTF.\n\nReferences\n\n1. Bar-Shalom, Y., Li, X.R.: Multitarget-Multisensor Tracking: Principles and Tech-\nniques. YBS Publishing (1995)\n\n2. Bar-Shalom, Y., Li, X.R., Kirubarajan, T.: Estimation with Applications to Track-\ning and Navigation: Algorithms and Software for Information Extraction. Wiley\n(2001)\n\n3. Bar-Shalom, Y.: On the Track-to-Track Correlation Problem. IEEE Trans. on Au-\ntomatic Control 26(2), 571\u2013572 (1981)\n\n\n\nTrack-to-Track Fusion in Linear and Nonlinear Systems 41\n\n4. Bar-Shalom, Y., Campo, L.: The Effect of the Common Process Noise on the\nTwo-Sensor Fused-Track Covariance. IEEE Trans on Aerospace and Electronic\nSystems 22(6), 803\u2013804 (1986)\n\n5. Bar-Shalom, Y.: On Hierarchical Tracking for the Real World. IEEE Trans. on\nAerospace and Electronic Systems 42(3), 846\u2013850 (2006)\n\n6. Bar-Shalom, Y., Willet, P.K., Tian, X.: Target Tracking and Data Fusion: A Hand-\nbook of Algorithms. YBS Publishing (2011)\n\n7. Challa, S., Legg, J., Wang, X.: Track-to-Track Fusion of Out-of-Sequence Tracks.\nIn: Proc. 5th International Conference on Information Fusion, pp. 919\u2013926 (2002)\n\n8. Chang, K.C., Saha, R.K., Bar-Shalom, Y.: On Optimal Track-to-Track Fusion.\nIEEE Transactions on Aerospace and Electronic Systems 33(4), 1271\u20131276 (1997)\n\n9. Chang, K.C., Tian, Z., Saha, R.: Performance Evaluation of Track Fusion with In-\nformation Matrix Filter. IEEE Trans. on Aerospace and Electronic Systems 38(2),\n455\u2013466 (2002)\n\n10. Chong, C.Y.: Hierarchical Estimation. In: Proc. MIT/ONR Workshop on C3, Mon-\nterey, CA (1979)\n\n11. Chong, C.Y., Mori, S., Chang, K.C.: Distributed Multitarget Multisensor Track-\ning. In: Bar-Shalom, Y. (ed.) Multitarget-Multisensor Tracking: Advanced Appli-\ncations, ch. 8. Artech House, MA (1990)\n\n12. Li, X.R., Zhu, Y.M., Wang, J., Han, C.Z.: Unified Optimal Linear Estimation\nFusion\u2013PartI: Unified Model and Fusion Rules. IEEE Transactions on Information\nTheory 49(9), 2192\u20132207 (2003)\n\n13. Mallick, M., Schimdt, S., Pao, L.Y., Chang, K.C.: Out-of-sequence track filtering\nusing the decorrelated pseudo measurement approach. In: Proc. SPIE Conf. on\nSignal and Data Processing for Small Targets, vol. 5428(1), pp. 154\u2013166 (2004)\n\n14. Novoselsky, A., Sklarz, S.E., Dorfan, M.: Track to track Fusion using Out-of-\nSequence Track Information. In: Proc. 10th International Conference on Infor-\nmation Fusion, Quebec City, Canada (2007)\n\n15. Speyer, J.L.: Computation and Transmission Requirements for a Decentralized\nLinear-Quadratic-Gaussian Control Problem. IEEE Transactions on Automatic\nControl 24(2), 54\u201357 (1979)\n\n16. Tian, X., Bar-Shalom, Y.: Track-to-Track Fusion Configurations and Association\nin a Sliding Window. J. Advances in Information Fusion 4(2), 146\u2013164 (2009)\n\n17. Tian, X., Bar-Shalom, Y.: The optimal algorithm for asynchronous track-to-track\nfusion. In: Proc. SPIE Conference on Signal and Data Processing of Small Targets.\n#7698-46, Orlando, FL (2010)\n\n18. Tian, X., Bar-Shalom, Y.: Algorithms for Asynchronous Track-to-Track Fusion. J.\nAdvances in Information Fusion 5(2), 128\u2013138 (2010)\n\n19. Yuan, T., Bar-Shalom, Y., Tian, X.: Heterogeneous Track-to-Track Fusion. J. Ad-\nvances in Information Fusion 6(2), 131\u2013149 (2011)\n\n\n\n \n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,  \n\n43 \n\nDOI: 10.1007/978-3-662-44785-7_3 \n \n\nState Dependent Difference Riccati Equation Based \nEstimation for 2D Spiraling Target Maneuver \n\nIlan Rusnak1,2,*,\u2020 and Liat Peled-Eitan1,* \n\n1 RAFAEL, P.O. Box 2250, Haifa 31021, Israel \n2 Faculty of Electrical Engineering, Technion, Haifa 32000, Israel \n\n{ilanru,liatap}@rafael.co.il \n\nAbstract. Estimation of target maneuvers with unknown varying turning rate is \nconsidered. The modeling of the target's equations of motion takes into account \nthe rotation of the velocity and acceleration vectors as the target maneuvers. \nThis is more complex target maneuver than the simple turning maneuver.  The \ninclusion of the more detailed kinematic behavior of the maneuvering target \ncreates nonlinear equations of motion.  The position, velocity, acceleration, \njerk, angular rate and angular acceleration of the velocity vector are estimated. \nThis is done without inclusion of the angular rate and angular acceleration into \nthe state vector, but in separate equations. As the equations of motion are \nnonlinear the State Dependent Differential-Difference Riccati Equation based \nestimator (SDDRE) is implemented and compared to the Kalman Filter based \non the constant-step acceleration target maneuver model. It is demonstrated via \nsimulations for the two dimensional spiraling target maneuvers that the detailed \nmodeling of the maneuvering target based filter-estimator has improved \nperformance with respect to the Kalman Filter based on the constant-step \nacceleration target maneuver model. \n\n1 Introduction \n\nThe issue of estimating a maneuvering target is widely treated subject. A \ncomprehensive survey of models and estimators is presented in [1-5]. The simplest \napproach is to implement three independent Constant-Step acceleration filters (CA) or \nExponentially Correlated Acceleration (ECA) filters [6], one filter for each \ncoordinate. \n\nHowever these filters may not achieve the required performance for spiraling target \nmaneuvers as they are not matched to these maneuvers, i.e. steady state errors are \ncreated.  \n\nFor more advanced estimators it has been understood that incorporating detailed \ninformation on the target dynamics and kinematics into the estimator's equations has \nthe potential to increase the quality of estimation.  However, the inclusion of more \ndetailed target maneuver model and the related constraints lead to nonlinear models. \n\n                                                           \n* Research Fellow, RAFAEL. \n\u2020 Adjunct Senior Lecturer, Faculty of Electrical Engineering, Technion. \n\n\n\n44 I. Rusnak and L. Peled-Eitan \n\n \n\nThus the Kalman Filter is not directly applicable. The most common approach to deal \nwith nonlinear systems is the Extended Kalman Filter (EKF).  \n\nIn [7] the issue of pseudo measurements had been introduced and the Extended \nKalman Filter was applied. In [7] it was pointed out that inclusion of a constraint is \nusually difficult to incorporate into the dynamic equation and it is much easier to \nincorporate them into the measurement equations. \n\nIn [29] filtering techniques for spiraling target with almost constant angular rate \nand drag are considered.   \n\nIn this paper spiraling target maneuvers [9, 26] with unknown angular rate and \nangular acceleration are considered. One of the main and important issues is the \nestimation of the angular rate and angular acceleration. This is needed for achieving \nbetter matching of the estimator to the target maneuver. Derivation of high \nperformance guidance law for this type of evading maneuver see [8].  \n\nAlthough there are many publication on estimation of barrel roll target maneuvers, \ni.e. constant turning rate, there are no publication dealing with estimation of spiraling \ntarget maneuvers with unknown varying angular rate and angular acceleration. \n\nThere are several options to model Spiraling Maneuver. Following [9] the target's \nspiraling maneuver is modeled as a constant absolute value (modulus) velocity \nrotating vector with increasing rotation frequency. This creates the acceleration and \nfrequency profile as described in [9, figure 5]. \n\nThe current approaches to estimation of nonlinear systems include many methods. \nA comprehensive survey of such methods applied to maneuvering target estimation is \npresented in [1-5]. For example: in [10] a multiple model approach is applied; in [11] \nalgebraic constraint is incorporated in the state equations; and in [12] the IMM \napproach is applied for estimation of maneuvering target.  \n\nIn this paper the State Dependent Differential-Difference Riccati Equation \n(SDDRE) based estimator is applied to the nonlinear equations of motion based on \nonboard sensors. The authors are unaware of any publication estimating a \nmaneuvering target by the SDDRE method. The SDDRE approach is very intuitive, \nalthough it is not optimal as shown for the State Dependent Algebraic Riccati \nEquation (SDARE) approach in [13-16]. In [27, 28] the SDARE has been used for \nangular rate estimation of satellites. The optimal filter requires additional terms for \noptimality [14-17]. Albeit the sub-optimality of the direct SDDRE approach it is \nknown that the SDDRE based estimator is BIBO stable [18].  \n\nThe novelty in this paper is: \n\ni) Modeling of spiraling target maneuver based on the rotating constant \nmodulus velocity vector with increasing frequency; \n\nii) Derivation of the differential equations of the Snap (derivative of the \nJerk); \n\niii) Estimation of the turning rate and turning acceleration; \niv) Application of the SDDRE to estimation of a spiraling target maneuver.  \n\nThe mathematical derivations are presented in the three dimensional space, \nhowever for simplicity the simulations are presented in two dimensions, i.e. planar \ntarget's maneuver. Simulations show that estimator based on the rotating velocity \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 45 \n\n \n\nkinematics equations of motion give better performance than the Kalman Filter based \non constant acceleration target model. These simulations demonstrate the \neffectiveness of the proposed SDDRE based estimator. \n\n2 Problem Statement and Approach to the Solution \n\nThe problem considered here is the state estimation of the nonlinear stochastic system \n \n\n( )\n( ) )()()(\n\n,)(),()()(\n\ntvtxgtz\n\nxtxtwtxftx oo\n+=\n\n=?+=\n                           (2.1) \n\n \n\nwhere x(t) is the state vector, z(t) is the measurement, w(t), v(t) are the white Gaussian \nstochastic processes representing the system driving noise and the measurement noise, \nrespectively, x(to) is a Gaussian random vector, and \n\n \n\n.\n\n,0,0,0\n\n,\n\n,0,0,\n\no\nT\n\noooo\n\nT\n\no\n\nT\n\no\nT\n\nTT\n\noo\n\n]=Q)-E(x))(x-E(xE[(x\n\n]=E[v(t)x]=E[w(t)x]=)E[w(t)v(\n\n)(t-]=V)),E[v(t)v((t-]= W)E[w(t)w(\n\nE[v(t)]=E[w(t)]=x]=E[x\n\n?\n\n??????\n                    (2.2) \n\n \nAll vectors and matrices are of appropriate dimensions.  \nThe problem being considered here is finding the optimal estimate )(\u02c6 tx  as a \n\nfunctional of {z(t), to?t?tf} that minimizes the quadratic criterion: \n \n\n[ ] [ ][ ] .0;)(\u02c6)()(\u02c6)( >????= txtxtxtxEJ T              (2.3) \n2.1 Estimator for Linear System \n\nFor the linear system  \n \n\n)()()(\n\n,)(),()()(\n\ntvtCxtz\n\nxtxtwtAxtx oo\n+=\n\n=?+=\n                             (2.4) \n\n \n\nThe solution of the preceding problem is the Kalman filter [19, 20].  \n \n\n.)(),()()()()(\n\n)()(\n\n\u02c6]\u02c6)([\u02c6\u02c6\n\n1\n\n1\n\noo\nTTT\n\noo\n\nQtQtCQVCtQWAtQtAQtQ\n\nCVtQtK\n\n,x) = (tx,(t)xCtz(t)+K(t)x(t) = Ax\n\n=???++=\n\n=\n\n?\n\n?\n\n?\n\n     (2.5) \n\n\n\n46 I. Rusnak and L. Peled-Eitan \n\n \n\n2.2 Estimators for Nonlinear System \n\nFor nonlinear systems there are several approaches. Here the State Dependent Riccati \nEquation (SDRE) [13-16] approach is considered. The SDRE approach is based on \nthe dual of the SDRE based nonlinear control [16]. This approach parameterizes the \nstate equation (2.1) into a linear structure called the State Dependent Coefficient \nForm, and is also called Extended Linearization. This approach includes the State \nDependent Algebraic Riccati Equation (SDARE) based estimation and the State \nDependent Differential-Difference Riccati Equation (SDDRE) based estimation. Then \n\nfor linear measurement of the state, i.e. ( ) )()( tCxtxg = , the state equations (2.5) \ncan be represented in the State Dependent Coefficients Form (SDC form) as \n\n \n\n( )\n)()()(\n\n,)(),()()()(\n\ntvtCxtz\n\nxtxtwtxtxAtx oos\n+=\n\n=?+=\n                                (2.6) \n\n \nThe SDRE/SDARE based estimator is [13]  \n\n \n\n( ) ( )[ ]\n( )\n\n( ) ( ) .)(),()(\u02c6)()(\u02c60\n)(\u02c6\n\n\u02c6\u02c6)(\u02c6\u02c6\u02c6\u02c6\n\n1\n\n1\n\noo\nTTT\n\nss\n\noos\n\nQtQtCQVCtQW(t)xAtQtQ(t)xA\n\nCVtQ(t)xK\n\n,x) = (tx,(t)xCtz(t)x(t)+Kx(t)x(t) = Ax\n\n=???++=\n=\n\n?\n\n?\n\n?    \n\n(2.7) \n \n\nThis is a suboptimal estimator. The optimal estimator has additional terms as \ndetailed in [14,15,16]. Here the discrete version of the following SDDRE based state \nestimator [18] is implemented.  \n\n \n\n( ) ( )[ ]\n( )\n\n( ) ( ) .)(),()(\u02c6)()(\u02c6)(\n)(,\u02c6\n\n\u02c6\u02c6)(,\u02c6\u02c6\u02c6\u02c6\n\n1\n\n1\n\noo\nTTT\n\nss\n\noos\n\nQtQtCQVCtQW(t)xAtQtQ(t)xAtQ\n\nCVtQt(t)xK\n\n,x) = (tx,(t)xCtzt(t)x(t)+Kx(t)x(t) = Ax\n\n=???++=\n\n=\n\n?\n\n?\n\n?   \n\n(2.8) \n \n\nThe difference between the SDARE as applied in [14,15,16] , eq. (2.7), and eq. \n(2.8), the one implemented in this paper, is that in this paper the differential-\ndifference Riccati equation is used for computation of the gains (2.8) and not the \nalgebraic Riccati equation (2.7) that is solved each  sampling interval. \n\n3 The Constant Acceleration Target Maneuver Model \n\nFor comparison in this paper the performance of a most common estimator of target \nmotion is presented. This estimator is based on the target Constant Acceleration (CA) \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 47 \n\n \n\nstep target maneuver. The following dynamic model of the target-missile encounter \n[1,2,6] is assumed for the CA target manuver model. \n\nFor each inertial coordinate it is assumed that \n \n\n[ ] )(\n)(\n\n)(\n\n)(\n\n001)(\n\n),(\n\n1\n\n0\n\n0\n\n)(\n\n)(\n\n)(\n\n000\n\n100\n\n010\n\n)(\n\n)(\n\n)(\n\ntv\n\nta\n\ntx\n\ntx\n\ntz\n\ntw\n\nta\n\ntx\n\ntx\n\nta\n\ntx\n\ntx\n\ndt\n\nd\n\nT\n\nT\n\nTT\n\n+\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n=\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n+\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n=\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n                      (3.1) \n\nwhere \n\nx   - target position [m] \nx   - target velocity [m/s] \n\nTa   - target acceleration [m/s\n2] \n\n)(twT  - target process driving noise (jerk) [m/s\n3] \n\n)(tv   - target measurement noise (glint) [m] \nz   - measured target position[m] \n \n\nThe preceding assumes that the target performs an evasive maneuver (a stochastic \n\nprocess), that is, a step acceleration maneuver of amplitude 0Ta whose initiation \ninstant is uniformly distributed in the interval [to,tf]. The continuous shaping filter \n[1,2,6] of this process is represented by \n\n  \n\n),(twa\ndt\n\nd\nsTcontinuouT =                                          (3.2) \n\n \n\nwhere the spectral density of the target maneuver (the process noise), )(twT , is  \n \n\n( ) ]/[]/sec/[ 5223\n2\n\n0 smHzm\nt\n\na\nWW\n\nm\n\nT\nTusAScontinuo ===                (3.3) \n\n \nwhere   \n\n \n\n \n\n \n\n\n\n48 I. Rusnak and L. Peled-Eitan \n\n \n\n0Ta  - target step maneuver value [m/s\n2] \n\nofm ttt ?=  is the time interval over which the target is expected to take an \nevasive maneuver.  \n\n4 Kinematic Equations of Spiraling Target \n\nComprehensive survey of modeling the behavior of a maneuvering target can be \nfound in [1-5]. Here one specific case is considered. \n\nA redundant set of assumptions with respect to maneuvering target behavior is: \n\ni. Constant absolute value of target velocity, constantvT =  ; \nii. 0=? TT av , velocity perpendicular to acceleration (aerodynamically \n\ncontrolled aircraft); \n\niii. 0=? TTv ? , velocity perpendicular to turning rate (angular velocity); \niv. 0=? TTv ? , velocity perpendicular to angular acceleration; \nv. no loss of target energy (constant altitude).  \n\n4.1 The Kinematics as a Function of Velocity \n\nIt is assumed that the target's velocity is expressed as \n\nvTT vv 1=                                                         (4.1) \n\nwhere \n\nTv  - target velocity vector [m/sec] \n\nTv  - absolute value of the target's velocity \n\nv1  - unit vector in the target velocity direction \n\nA.  Acceleration equations. First order equations of motion based on the target's \nvelocity (4.1) are derived. As the target is maneuvering the velocity vector is \nrotating. The target's acceleration is given by [21] \n \n\nTTvT\nT\n\nT vvdt\n\nvd\na \u00d7+== ?1                                         (4.2) \n\n;2\nT\n\nTT\nT\n\nv\n\nav \u00d7=?                                                       (4.3) \n\n \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 49 \n\n \n\nTa - target acceleration vector [m/s\n2] \n\nT? - angular rate of the target velocity direction [rad/sec] \n\nB. Jerk equations \u2013 VJ. Second order equations of motion based on the targets \nvelocity (4.1) are derived. As the target is maneuvering the velocity and \nacceleration vectors are rotating. The jerk (derivative of acceleration) is the given \nby [21,22]. This is called here Velocity based Jerk (VJ) equations of motion. The \ntarget's jerk is [21,22] \n \n\n( ) ( )TTTvTTTTvTTTT vvvvdt\nvd\n\ndt\n\nad\nj \u00d7\u00d7+\u00d7+\u00d7+=== ???? 1212\n\n2\n\n    (4.4) \n\n \n\nTj  - target's jerk vector [m/sec\n3] \n\n \n\nSubstituting  vTv 1 from (4.2) gives [22] \n \n\n( )\n\n( )TTTTTTTvT\n\nTTT\nT\n\nTTTvTT\n\nvavv\n\nv\ndt\n\nvd\nvvj\n\n\u00d7\u00d7?\u00d7+\u00d7+=\n\n\u00d7\u00d7?\u00d7+\u00d7+=\n\n????\n\n????\n\n21\n\n21\n                    (4.5) \n\n \n\nT? - angular acceleration of the target velocity direction [rad/s2] \nand  \n\n2\n\nT\n\nTT\nT\n\nv\n\njv \u00d7=?  \n\nC. Snap equations \u2013 VS. Third order equations of motion based on the targets \nvelocity (4.1) are derived. As the target is maneuvering the velocity, acceleration and \njerk vectors are rotating. The snap (derivative of jerk) is derived-presented here. This \nis called here Velocity based Snap (VS) equations of motion. The target's snap is \n\n \n\n( ) ( ) ( )( )\n( ) ( ) TTvTTTTTTTT\n\nTTTTvTTTvTTvT\n\nTT\nT\n\nvvvv\n\nvvvv\ndt\n\nad\n\ndt\n\njd\ns\n\n\u00d7+\u00d7+\u00d7\u00d7+\u00d7\u00d7+\n\n\u00d7\u00d7\u00d7+\u00d7\u00d7+\u00d7+=\n\n===\n\n??????\n??????\n\n132\n\n13131\n\n2\n\n2\n\n      (4.6) \n\n \n \n\n\n\n50 I. Rusnak and L. Peled-Eitan \n\n \n\nTs  - target's jerk vector [m/s\n4] \n\nT? - angular jerk of the target velocity direction [rad/s3] \n \n\nSubstituting  vTv 1 from (4.2) and vTv 1 from (4.4) gives  \n \n\n( ) ( )( )\n( ) ( ) TTTTTTTTTT\n\nTTTTTTTTTvTT\n\nvvva\n\nvajvs\n\n\u00d7+\u00d7\u00d7?\u00d7\u00d7?\u00d7+\n\n\u00d7\u00d7\u00d7+\u00d7\u00d7?\u00d7+=\n\n??????\n??????\n\n23\n\n331\n    (4.7) \n\n5 The Variance and Spectrum of the Glint Noise \n\nFor simplicity it is assumed assume that the only measurement noise is the glint noise. \n\nThe standard deviation of the glint noise, g? , for uniformly distributed reflectors,  \nis [23] \n\n \n\nLD\n\nDg\n\n?\n\n?\n\n2\n\n12\n1 22\n\n=\n\n=\n                                                        (5.1) \n\n \nwhere \n\nD  - the effective linear dimension of the target perpendicular to the target-\nmissile LOS. \n\nL   - the linear dimension of the target perpendicular to the target-missile LOS. \n \n\nWhen frequency agility is applied at rate of fs=1/Ts [Hz], the spectral density of \n(stair type random stochastic process - i.i.d. sequence) the glint is given by [24] \n\n \n\n?\n?\n\n?\n?\n?\n\n?\n\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n?\n?\n\n?\n?\n?\n\n?\n?\n?\n\n=\n\n?\n?\n\n?\n?\n?\n\n?\n=\n\nHz\n\nm\nT\n\nT\n\nVV\n\nHz\n\nm\nTV\n\ns\n\ns\n\ngog\n\nsggo\n\n2\n\n2\n\n2\n2\n\n,\n\n2\n\n2\nsin\n\n)(\n\n,\n\n?\n\n?\n\n?\n\n?\n\n                              (5.2) \n\n \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 51 \n\n \n\nwhere Ts is the sampling interval of the frequency agile radar. Therefore, the spectral \n\ndensity of the measurement noise, v(t), is 2 HzmVgo . \n\n6 Incorporation of the Kinematic Constraint \n\nThe kinematic equation in section 4 is a constraint that can be incorporated into the \nestimator equations.  It is possible to incorporate the kinematic constraint into the \nstate equation or measurement equation and the \"unknown\" quantities are interpreted \nas either a measurement noise or system driving noise. The approach here has the \nadvantage that the kinematic constraint is incorporated in the system equations, the \nunknown is the system driving noise and the measurements are linear. The derivation \nhere is in three dimensions although the simulations are performed in two dimensions. \nThe following modeling and the assumptions in section 4 mean that the target's \nmaneuver is modeled as piece-wise constant accelerating turning rate maneuver in \ntarget's coordinates. \n\n6.1 Velocity Based Snap Kinematic Equation \n\nWith velocity based snap equations (4.6) it is assumed that 0=? . Thus from (4.7) \nthe kinematics of maneuvering target is modeled as \n\n \n\n( ) ( )( )\n( ) ( )\n\nTTvTT\n\nTTTTTTTTT\n\nTTTTTTTTTT\n\nvvw\n\nwvva\n\nvajs\n\n\u00d7+=\n\n+\u00d7\u00d7?\u00d7\u00d7?\u00d7+\n\n\u00d7\u00d7\u00d7+\u00d7\u00d7?\u00d7=\n\n?\n?????\n\n??????\n\n1\n\n23\n\n33\n\n            (6.1) \n\n \n\n;\n2\n\nT\n\nTT\nT\n\nv\n\nav \u00d7=?  \n\n2\n\nT\n\nTT\nT\n\nv\n\njv \u00d7=?  \n\n \n\nwhere Tw represents the deviation of the actual behavior of the target from the \nconstant angular turning acceleration and constant absolute value of the velocity \nassumptions.  \n\nThe state space representation in the State Dependent Coefficient Form is in three \ndimensions \n\n\n\n52 I. Rusnak and L. Peled-Eitan \n\n \n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n+\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n=\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\nz\n\ny\n\nx\n\nw\n\nw\n\nw\n\nz\n\nz\n\nz\n\nz\n\ny\n\ny\n\ny\n\ny\n\nx\n\nx\n\nx\n\nx\n\nA\n\nz\n\nz\n\nz\n\nz\n\ny\n\ny\n\ny\n\ny\n\nx\n\nx\n\nx\n\nx\n\ndt\n\nd\n\n100\n\n000\n\n000\n\n000\n\n010\n\n000\n\n000\n\n000\n\n001\n\n000\n\n000\n\n000\n\n \n \n\n( )\n\n( )\n\n( ) ??\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n++????\n\n???++?\n\n+????+\n\n=\n\n03033303330\n\n100000000000\n\n010000000000\n\n001000000000\n\n33300303330\n\n000010000000\n\n000001000000\n\n000000100000\n\n33303330030\n\n000000001000\n\n000000000100\n\n000000000010\n\n22\n10,126,122,12\n\n10,8\n22\n\n6,82,8\n\n10,46,4\n22\n\n2,4\n\nyxxxzyyyzx\n\nxxyzzxzzyx\n\nyyzxzzyxzy\n\naaa\n\naaa\n\naaa\n\nA\n\n??????????\n\n??????????\n\n??????????\n\n \n \n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n+\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n=\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\nz\n\ny\n\nx\n\nm\nv\n\nv\n\nv\n\nz\n\nz\n\nz\n\nz\n\ny\n\ny\n\ny\n\ny\n\nx\n\nx\n\nx\n\nx\n\nz\n\ny\n\nx\n\n000\n\n000\n\n000\n\n100\n\n000\n\n000\n\n000\n\n010\n\n000\n\n000\n\n000\n\n001\n\n000100000000\n\n000000010000\n\n000000000001\n\n \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 53 \n\n \n\n( )\n( )( )\n\n( )( )zxzxyzyx\nyxyxzzyx\n\nzzyy\n\na\n\na\n\na\n\n????????\n\n????????\n\n????\n\n++++??=\n\n++++?=\n\n+=\n\n2\n\n2\n\n3\n\n222\n2,12\n\n222\n2,8\n\n2,4\n\n \n \n\n( )( )\n( )\n( )( )zyzyxzyx\n\nzzxx\n\nyxyxzzyx\n\na\n\na\n\na\n\n????????\n\n????\n\n????????\n\n++++?=\n\n+=\n\n++++??=\n\n2\n\n3\n\n2\n\n222\n6,12\n\n6,8\n\n222\n6,4\n\n \n \n\n( )( )\n( )( )\n\n( )yyxx\nyzyzxzyx\n\nzxzxyzyx\n\na\n\na\n\na\n\n????\n\n????????\n\n????????\n\n+=\n\n++++??=\n\n++++?=\n\n3\n\n2\n\n2\n\n10,12\n\n222\n10,8\n\n222\n10,4\n\n \n \n \n\nwhere  \n \n \n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n++\n=\u00d7=\u00d7=\n\nxyyx\n\nzxxz\n\nyzzy\n\nzyxv\n\njv\n\nv\n\nav\n\nT\n\nTT\n\nT\n\nTT\nT 22222\n\n1)()(?\n\n \n \n \nIn two dimensions this reduces to \n \n\n\n\n54 I. Rusnak and L. Peled-Eitan \n\n \n\n?\n?\n\n?\n?\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n+\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n\n?\n?\n?\n\n?\n=?\n\n?\n\n?\n?\n?\n\n?\n\n?\n?\n\n?\n?\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n+\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n\n??\n=\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\ny\n\nx\n\nm\n\ny\n\nx\n\nzzzzzz\n\nzzzzzz\n\nv\n\nv\n\ny\n\ny\n\ny\n\ny\n\nx\n\nx\n\nx\n\nx\n\ny\n\nx\n\nw\n\nw\n\ny\n\ny\n\ny\n\ny\n\nx\n\nx\n\nx\n\nx\n\ny\n\ny\n\ny\n\ny\n\nx\n\nx\n\nx\n\nx\n\ndt\n\nd\n\n00\n\n00\n\n00\n\n10\n\n00\n\n00\n\n00\n\n01\n\n00010000\n\n00000001\n\n10\n\n00\n\n00\n\n00\n\n01\n\n00\n\n00\n\n00\n\n0330330\n\n10000000\n\n01000000\n\n00100000\n\n3300330\n\n00001000\n\n00000100\n\n00000010\n\n23\n\n32\n\n??????\n\n??????\n\n \n \n\nwhere \n \n\n22 yx\n\nxyyx\nz +\n\n?=?\n \n\n22 yx\n\nxyyx\nz +\n\n?=?\n \n\n7 Planar Spiraling Target Maneuver Trajectory Model \n\nThis section presents a model of a planar spiraling target trajectory. It is called here \nthe Spiraling Evading Maneuver (SEM). The target moves with constant speed. At \ncertain moment it starts a spiraling maneuver at constant speed (absolute value of the \nvelocity) and constant altitude, i.e. in the (x-y) plane only. \n \n \n \n \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 55 \n\n \n\nThe velocity of planar spiraling maneuver, similarly to [25], is modeled as \n \n\n0\n\n2\n1\n\ncos\n\n2\n1\n\nsin\n\n2\n\n2\n\n=\n\n?\n?\n?\n\n?\n?\n? ?+=\n\n?\n?\n?\n\n?\n?\n? ?+=\n\nT\n\nTToTT\n\nTToTT\n\nz\n\nttVy\n\nttVx\n\n???\n\n???\n\n                                   (7.1) \n\n \nwhere \n\n \n\nTV  - Speed of the target [m/s] \n\nTo?  - The initial turning rate of the target's velocity [rad/s] \n\nT?  - The turning acceleration of the target's velocity [rad/s2] \n?  - Initial phase [rad] \n \n\nThen the position is given by \n \n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n+\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n=\n\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n\n?\n\n?\n\n?\nTo\n\nTo\n\nTot\n\nT\n\nT\n\nT\n\nT\n\nT\n\nT\n\nz\n\ny\n\nx\n\nd\n\nz\n\ny\n\nx\n\nz\n\ny\n\nx\n\n?\n0\n\n                                      (7.2) \n\n \nwhere (x,y,z) are the target's coordinates, and the rest of the variables are self \n\nevident. \n\n8 The SDDRE Based Discrete Estimator \n\nThe discrete nonlinear stochastic system in the State Dependent Coefficient Form is \n \n\n( )\n)()()(\n\n,)(),()()()1(\n\ntvtCxtz\n\nxtxtwtxtxAtx\n\nd\n\nood\n\n+=\n=?+=+\n\n                        (8.1) \n\n \nwhere x(t) is the state vector, z(t) is the measurement, u(t) is the input, w(t), v(t)  \n\nare white Gaussian stochastic sequences representing the system driving noise and the \nmeasurement noise, respectively, xo is a Gaussian random vector, and \n\n \n\n\n\n56 I. Rusnak and L. Peled-Eitan \n\n \n\n.\n\n,0,0,0\n\n,\n\n,0,0,\n\no\nT\n\noooo\n\nT\n\nod\n\nT\n\nod\nT\n\ndd\n\ntd\nT\n\nddtd\nT\n\ndd\n\ndoo\n\n]=Q)-E(x))(x-E(xE[(x\n\n]=(t)xE[v]=(t)xE[w]=)((t)vE[w\n\n]=V)((t)v,E[v]= W)((t)wE[w\n\nE[v(t)]=(t)]=E[wx]=E[x\n\n?\n\n???? ??\n              (8.2) \n\n \nAll vectors and matrices are of appropriate dimensions.  \nThe State Dependent Difference Riccati Equation (SDDRE) based estimator is for \n\nk=0,1,2,\u2026, an adaptation of the State Dependent Differential Riccati Equation \n(SDDRE) \n\n \n( )\n\n( )\n( ) ( )\n\n[ ] //)(~)()(\n//.)(,\u02c6)(\u02c6)1(\n\n~\n)(\n\n~\n)(\n\n~\n)(\n\n\u02c6]\u02c6)([\u02c6\u02c61\u02c6\n1\n\nposteriorcorrectorkQCkKIkQ\n\npriorpredictorQkQW(k)xAkQ(k)xAkQ\n\nVCkQCCkQkK\n\n,x) = (tx,(k)xCkz(k) +K(k)x (k)x) = A(kx\n\noo\nT\n\nd\nT\n\nd\nTT\n\noo\n\n??=\n\n?=??+=+\n\n+=\n\n?+\n?\n\n   \n\n (8.3) \n\n9 Simulation Results \n\nIn this section the performance of the constant acceleration (CA) (3.1), and the \nvelocity based snap (VS) equation based filters (section 6) are compared via \nsimulations. The simulations are performed against the spiraling evasive maneuver. In \neffort to perform the comparison on common basis all simulation are performed for \nsystem driving noise (process noise) with power spectral density of \n\n \n\n( )\n( ) ]//[100\n\n]//[100\n24\n\n23\n\nHzsmW\n\nHzsmW\n\nVST\n\nCAT\n\n=\n\n=\n \n\n \nfor sampling interval \n\n \n\nsec10mTs =  \n \n\nand for measurement noise level of ?g =3m. \n \n \n \n \n \n \n \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 57 \n\n \n\nThe instantaneous frequency of the spiraling maneuver (7.1) is \n \n\ntTToz ??? +=  \n \nTable 9.1 presents the parameters of the examples that are presented in this paper. \n\nThe signal-to-noise ratio is the \"power\" of the target position divided by the noise \npower (ratio of half of the squared ratio of the radius of the maneuvering trajectory to \nthe measurement noise standard deviation). However for spiraling maneuver this \nvalue changes. Therefore here the initial signal-to-noise ratio, (S/N)I, is used as a \nmeasure of the signal-to-noise ratio. \n\n \n\n;\n2\n1\n\n2\n\n2\n\ng\n\nTo\n\nT\n\nI\n\nV\n\nN\n\nS\n\n?\n? ?\n\n?\n?\n\n?\n??\n?\n\n?\n\n=?\n?\n?\n\n?\n?\n?\n\n \n\n \nThe \"bandwidth\" of the \"SEM\" filter can be approximately estimated by \n\n \n\n8\n28\n\nsg\n\nVST\n\ngo\n\nT\no T\n\nW\n\nV\n\nW\n\n?\n? == . \n\n \n\nTable 9.1. Parameters of the examples \n\n VT  \n[m/s] \n\n???  \n[rad/s] \n\n??  \n[rad/s2] \n\n?g  \n[m] \n\nWT \n[(m/s4)2/Hz] \n\n(S/N)I \n[dB] \n\n?o \n[rad/s] \n\nSEM 40 1 1 3 \n100 \n\n19 2.4 \nSEM 100 1 1 3 27 2.4 \n\n \n \n\nSimulation results in this section are presented for the spiraling evasive maneuver \n(SEM) for two cases as presented in table 9.1. \n\nFigure 9.1 presents the trajectories of the coordinated turn target maneuver. Figure \n9.2 presents the deterministic position tracking error. One can see that the CA filter \ndevelops a diverging tracking error while the VS filters have zero steady state error. \n\nFigure 9.3 presents the deterministic estimation error of the turning rate (?) and \nacceleration (? dot) of the maneuver. Again the CA filter develops a diverging \nestimation error while the VS filter has zero steady state estimation error. \n\n \n \n \n \n\n\n\n58 I. Rusnak and L. Peled-Eitan \n\n \n\nVT=40m/s VT=100m/s \n\n-20 0 20 40 60 80 100 120\n-80\n\n-60\n\n-40\n\n-20\n\n0\n\n20\n\n40\nSpiraling  target manuever trajectory\n\nY\n [\n\nm\n]\n\nX [m]\n\n \n\n \n\nReal\n\nMsr\n\n-20 0 20 40 60 80 100 120\n-80\n\n-60\n\n-40\n\n-20\n\n0\n\n20\n\n40\nSpiraling  target manuever trajectory\n\nY\n [\n\nm\n]\n\nX [m]\n\n \n\n \n\nReal\n\n \n\nFig. 9.1. Trajectory of spiraling evasive maneuver \n\n \nVT=40m/s VT=100m/s \n\n0 1 2 3 4 5 6\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\nN\nor\n\nm\n e\n\nrr\n [\n\nm\n]\n\nTime [s]\n\nDeterministic estimation error of position \n\n \n\n \n\nVS\n\nCA\nMsr\n\n0 1 2 3 4 5 6\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\nN\nor\n\nm\n e\n\nrr\n [\n\nm\n]\n\nTime [s]\n\nDeterministic estimation error of position \n\n \n\n \n\nVS\n\nCA\nMsr\n\n \n\nFig. 9.2. Deterministic tracking position error of spiraling evasive maneuver \n\nVT=40m/s VT=100m/s \n\n0 1 2 3 4 5 6\n\n0\n\n2\n\n4\n\n6\n\n? \ner\n\nr \n[1\n\n/s\n]\n\nDeterministic estimation error of spiraling rate\n\n \n\n \n\nVS\n\nCA\n\n0 1 2 3 4 5 6\n-3\n\n-2\n\n-1\n\n0\n\n1\n\n? \ndo\n\nt \ner\n\nr \n[1\n\n/s\n2 ]\n\n \n\n \n\nVS\n\n0 1 2 3 4 5 6\n\n0\n\n2\n\n4\n\n6\n\n? \ner\n\nr \n[1\n\n/s\n]\n\nDeterministic estimation error of spiraling rate\n\n \n\n \n\nVS\n\nCA\n\n0 1 2 3 4 5 6\n-3\n\n-2\n\n-1\n\n0\n\n1\n\n? \ndo\n\nt \ner\n\nr \n[1\n\n/s\n2 ]\n\n \n\n \n\nVS\n\nFig. 9.3. Deterministic estimation error of the turning rate (?) and acceleration (? dot) of \nspiraling evasive maneuver \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 59 \n\n \n\nFigure 9.4 presents the stochastic tracking. One can see that the CA filter develops \nhigher tracking error than the VS filter thus demonstrating the improved performance \nof the based filter. Figure 9.5 presents the mean of the estimation error of the turning \n\nrate (?) and acceleration (? dot) of the maneuver with noisy measurements. Again \nthe CA filter develops higher estimation error than the VS based filters. \n\n \nVT=40m/s VT=100m/s \n\n0 1 2 3 4 5 6\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\nStochastic RMS error of position\n\nN\nor\n\nm\n e\n\nrr\n [\n\nm\n]\n\nTime [s]\n\n \n\n \n\nVS\n\nCA\nMsr\n\n0 1 2 3 4 5 6\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\nStochastic RMS error of position\n\nN\nor\n\nm\n e\n\nrr\n [\n\nm\n]\n\nTime [s]\n\n \n\n \n\nVS\n\nCA\nMsr\n\n \n\nFig. 9.4. Stochastic RMS tracking position error of spiraling evasive maneuver \n\n \nVT=40m/s VT=100m/s \n\n0 1 2 3 4 5 6\n\n0\n\n2\n\n4\n\n6\n\n? \ner\n\nr \n[1\n\n/s\n]\n\nDeterministic estimation error of spiraling rate\n\n \n\n \n\n0 1 2 3 4 5 6\n-20\n\n-10\n\n0\n\n10\n\n20\n\n? \ndo\n\nt \ner\n\nr \n[1\n\n/s\n2 ]\n\n \n\n \n\nVS\n\nCA\n\nVS\n\n0 1 2 3 4 5 6\n\n0\n\n2\n\n4\n\n6\n\n? \ner\n\nr \n[1\n\n/s\n]\n\nDeterministic estimation error of spiraling rate\n\n \n\n \n\n0 1 2 3 4 5 6\n-5\n\n0\n\n5\n\n? \ndo\n\nt \ner\n\nr \n[1\n\n/s\n2 ]\n\n \n\n \n\nVS\n\nCA\n\nVS\n\n \n\nFig. 9.5. Mean estimation error of the turning rate (?) and acceleration (? dot) for spiraling \nevasive maneuver with noisy measurements \n\n \nFigure 9.6 presents sample run of the estimates of the state in the x-coordinate for \n\nspiraling evasive maneuver with noisy measurements. The y-axis exhibits similar \nbehavior with the corresponding shift of 90 degrees. The better performance of the \nVS based filters is demonstrated. \n\n \n\n\n\n60 I. Rusnak and L. Peled-Eitan \n\n \n\nVT=40m/s VT=100m/s \n\n0 1 2 3 4 5 6\n0\n\n50\n\n100\n\nx \n[m\n\n]\n\nEstimation of X\n\n \n\n VS\n\nCA\nReal\n\n0 1 2 3 4 5 6\n\n-100\n\n0\n\n100\n\nx \ndo\n\nt \n[m\n\n/s\n]\n\n0 1 2 3 4 5 6\n\n-500\n\n0\n\n500\n\nx \n2 \n\ndo\nt \n\n[m\n/s\n\n2 ]\n\nTime [s]\n\n0 1 2 3 4 5 6\n0\n\n50\n\n100\n\nx \n[m\n\n]\n\nEstimation of X\n\n \n\n \n\nVS\n\nCA\nReal\n\n0 1 2 3 4 5 6\n\n-100\n\n0\n\n100\n\nx \ndo\n\nt \n[m\n\n/s\n]\n\n0 1 2 3 4 5 6\n\n-500\n\n0\n\n500\n\nx \n2 \n\ndo\nt \n\n[m\n/s\n\n2 ]\n\nTime [s]  \n\nFig. 9.6. Sample run of the estimates of the state in the x-coordinate for spiraling evasive \nmaneuver with noisy measurements \n\n10 Conclusions \n\nEstimation of evading target maneuvers with unknown varying turning rate is \nconsidered. The equations of motion take into account the rotation of the velocity and \nacceleration vector as the target maneuvers. The inclusion of the more detailed \nkinematic behavior of the maneuvering target creates nonlinear equations of motion.  \nThe estimates of the target's state- position, velocity and acceleration, and the angular \nrate and acceleration of the velocity vector are derived. This is done without inclusion \nof the angular rate and acceleration into the state vector. As the equations of motion \nare nonlinear the State Dependent Differential-Difference Riccati Equation based \nestimator (SDDRE) is implemented and compared to the Kalman Filter based on the \nconstant-step acceleration target maneuver model. It is demonstrated via simulations \nthat the detailed modeling of the maneuvering target based filter-estimator have \nimproved performance with respect to the Kalman Filter based on the constant-step \nacceleration target maneuver model. \n\nAppendix \n\nThis appendix presents for the completeness of presentation derivation of the \nformulas of the turning rate and acceleration, together with the assumptions that are \npresented in section 4. \n\nThe turning rate is derived \n \n\nvTT vv 1=  \n\nTTvT\nT\n\nT vvdt\n\nvd\na \u00d7+== ?1\n\n \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 61 \n\n \n\n( ) ( )\n( ) ( ) ( )\n\n( )\n\n2\n\n2\n\n2\n\n2\n\n0\n\n0\n\n01\n\nT\n\nTT\nT\n\nTTTT\n\nTT\n\nT\n\nTTTTT\nT\n\nTTTTTTTTTTT\n\nTTTTTvTTTT\n\nv\n\nav\n\nvav\n\nthen\n\nv\n\nthatassumeweif\n\nv\n\nvvav\n\nvvvvvvv\n\nvvvvvav\n\n\u00d7=\n\n+=\u00d7\n\n=?\n\n??\u00d7\n=\n\n??=???=\n\n\u00d7\u00d7+=\u00d7+\u00d7=\u00d7\n\n?\n\n?\n\n?\n\n??\n\n????\n\n??\n\n \n\n \nThe rate of the turning rate (turning acceleration) \n\n \n\nvTT vv 1=  \n\nTTvT\nT\n\nT vvdt\n\nvd\na \u00d7+== ?1\n\n \n( )TTTTTTTvTT vavvj \u00d7\u00d7?\u00d7+\u00d7+= ???? 21  \n\n \n\n( )( )\n( ) ( ) ( )( )TTTTTTTTTTvTvT\n\nTTTTTTTvTTTT\n\nvvavvvvv\n\nvavvvjv\n\n\u00d7\u00d7\u00d7?\u00d7\u00d7+\u00d7\u00d7+\u00d7=\n\n\u00d7\u00d7?\u00d7+\u00d7+\u00d7=\u00d7\n\n????\n????\n\n211\n\n21\n\n \n \n\nThen \n  \n\n( ) ( ) ( )\n( )\n( )\n\n( )\n...0\n\n0\n\n000\n\n2\n\n2\n\n2\n\n2\n\nDEQ\nv\n\njvv\nvthen\n\nv\n\njv\nthenvthatassume\n\nv\n\nvvjv\n\nvvv\n\nvvvvvjv\n\nT\n\nTTT\nTT\n\nT\n\nTT\nTTT\n\nT\n\nTTTTT\nT\n\nTTTTT\n\nTTTTTTTTTT\n\n=\u00d7?=?\n\n\u00d7==?\n\n?+\u00d7=\n\n??=\n\n\u00d7\u00d7?+???+=\u00d7\n\n?\n\n??\n\n??\n\n??\n\n???\n\n \n\n\n\n62 I. Rusnak and L. Peled-Eitan \n\n \n\nReferences \n\n[1] Li, X.R., Jilkov, V.P.: Survey of Maneuvering Target Tracking. Part I: Dynamic Models. \nIEEE Trans. on AES 39(4), 1333\u20131364 (2003), Also: In: Proceedings of the 2000 SPIE \nConference on Signal and Data Processing of Small Targets, vol. 4048, pp. 212\u2013234 \n\n[2] Li, X.R., Jilkov, V.P.: Survey of Maneuvering Target Tracking. Part II: Motion Models of \nBallistic and Space Targets. IEEE Trans. on AES 46(1), 96\u2013119 (2010), Also: In: \nProceedings of the 2001 SPIE Conference on Signal and Data Processing of Small \nTargets, vol. 4473 \n\n[3] Li, X.R., Jilkov, V.P.: Survey of Maneuvering Target Tracking. Part III: Measurement \nModels. In: Proceedings of the 2001 SPIE Conference on Signal and Data Processing of \nSmall Targets, vol. 4473, pp. 423\u2013446 (2001) \n\n[4] Li, X.R., Jilkov, V.P.: Survey of Maneuvering Target Tracking. Part IV: Decision \u2013Based \nMethods. In: Proceedings of the 2002 SPIE Conference on Signal and Data Processing of \nSmall Targets, vol. 4728, pp. 511\u2013534 (2002) \n\n[5] Li, X.R., Jilkov, V.P.: Survey of Maneuvering Target Tracking. Part V: Multiple-Models \nMethods. IEEE Trans. on AES 41(4), 1255\u20131321 (2005) \n\n[6] Fitzgerald, R.J.: Simple tracking filters: Closed-form solutions. IEEE Trans. on \nAerospace and Electronic Systems AES-17, 781\u2013785 (1981) \n\n[7] Tahk, M., Speyer, J.L.: Target Tracking Problems Subject to Kinematic Constraints. \nIEEE Trans. on AC 35(3), 324\u2013326 (1990) \n\n[8] Aggarwal, R.K.: Optimal Missile Guidance for Weaving Targets. In: Proceedings of the \n35th Conference on Decision and Control, Kobe, Japan, pp. 2775\u20132779 (December 1997) \n\n[9] Chadwick, W.R., Zarchan, P.: Interception of Spiraling Ballistic Missiles. In: Proceedings \nof the American Control Conference, ACC 1996, Seattle, WA, pp. 4476\u20134483 (June \n1996) \n\n[10] Marks, G.M.: Multiple Models Adaptive Estimation (MMAE) for Improving Guidance \nPerformance against Weaving Targets. In: AIAA Guidance, Navigation and Control \nConference, Keystone, CO, August 21-24, pp. 2006\u20136697. AIAA (2006) \n\n[11] Chen, R.H., Speyer, J.L., Lianos, D.: Homing Missile Guidance and Estimation under \nAgile Target Acceleration. Journal of Guidance, Control and Dynamics 30(6), 1577\u20131589 \n(2007), doi:10.25141/1.30107 \n\n[12] Dezert, J., Pannetier, B.: A PCR-BIMM filter for Maneuvering Target Tracking. In: \nFusion 2010, 13th International Conference on Information Fusion, July 26-29. EICC, \nEdinburgh (2010) \n\n[13] Mracek, C.P., Cloutier, J.R., D\u2019Souza, C.A.: A New Technique for Nonlinear Estimation. \nIn: Proceedings of the 1996 IEEE International Conference on Control Applications, \nDearborn, MI, September 15-18 (1996) \n\n[14] Shue, S.P., Agarwal, R.K.: Extension of Kalman Filter Theory to Nonlinear Systems with \nApplication to Wing Rock Motion. Asian Journal of Control 2(1), 42\u201349 (2000) \n\n[15] Xin, M., Balakrishnan, S.N.: A New Filtering Technique for a Class of Nonlinear \nSystems. In: Proceedings of the 41st IEEE Conference on Decision and Control, Las \nVegas, Nevada USA (December 2002) \n\n[16] Lam, Q.M., Anderson, B., Xin, M.: ?-D Filter vs. Nonlinear Filtering Techniques in \nNonlinear Target Tracking Applications. In: AIAA 2010 InfoTech Conference \n@Aerospace 2010, Atlanta, Georgia, April 20-22, pp. 2010\u20133521. AIAA (2010) \n\n[17] Xin, M., Balakrishnan, S.N., Ohlmeyer, E.J.: Integrated Guidance and Control of Missile \nwith ?-D Method. IEEE Trans. on Control Systems Technology 14(6), 981\u2013992 (2006) \n\n\n\n State Dependent Difference Riccati Equation Based Estimation 63 \n\n \n\n[18] Haessig, D.A., Friedland, B.: State Dependent Differential Riccati Equation for Nonlinear \nEstimation and Control. In: 2002 IFAC, 15th Triennial World Congress, Barcelona, Spain \n(2002) \n\n[19] Bryson, A.E., Ho, Y.C.: Applied Optimal Control. Hemisphere, New-York (1975) \n[20] Kwakernaak, H., Sivan, R.: Linear Optimal Control Systems. Wiley-Interscience (1972) \n[21] Blakelock, J.H.: Automatic Control of Aircraft and Missiles. John Wiley & Sons, Inc. \n\n(1991) \n[22] Asseo, S.J., Ardila, R.J.: Sensor-Independent Target State Estimator Design and \n\nEvaluation. In: Proc. National Aerospace and Electronics Conference, NAECON 1982, \npp. 916\u2013924 (1982) \n\n[23] Barton, D.K., Ward, H.R.: Handbook of Radar Measurement. Prentice-Hall (1969) \n[24] Papoulis, A.: Probability, Random Variables, and Stochastic Processes. McGraw-Hill, \n\nInc. (1991) \n[25] Imado, F., Miwa, S.: Missile Guidance Algorithm against High-g Barrel Roll maneuvers. \n\nJournal of Guidance, Control and Dynamics 17(1), 123\u2013128 (1994) \n[26] Zarchan, P.: Tracking and Intercepting Spiraling Ballistic Missiles. In: Proceedings of \n\nIEEE Plans Symposium, Position Location and Navigation Symposium, San Diego, CA, \npp. 277\u2013284 (March 2000) \n\n[27] Harman, R.R., Bar-Itzhack, I.Y.: Pseudolinear and State-Dependent Riccati Equation \nFilters for Angular Rate Estimation. Journal of Guidance, Control and Dynamics 22(5), \n1577\u20131589 (1999) \n\n[28] Azor, R., Bar-Itzhack, I.Y., Deutschmann, J., Harman, R.R.: Angular-Rate Estimation \nusing Delayed Quaternion Measurements. Journal of Guidance, Control and \nDynamics 24(3), 436\u2013443 (2001) \n\n[29] Kim, J., Vaddi, S.S., Menon, P.K., Ohlmeyer, E.J.: Comparison Between Nonlinear \nFiltering Techniques for Spiraling Ballistic Missile State Estimation. IEEE Trans. on \nAES 48(1), 313\u2013328 (2012) \n\n \n\n\n\nA Guaranteed Bound Filter\n\nfor Polynomial Systems\n\nGyo?rgy Hexner, Ilan Rusnak, and Haim Weiss\n\nRAFAEL, Advanced Defense Systems, Haifa, Israel\n{georgeh,ilanru,haimw}@rafael.co.il\n\nAbstract. A recursive filter for polynomial systems is derived, where\nthe bound on the mean square estimation error is explicitly calculated.\nThe derivation relies on the recently introduced theory of positive poly-\nnomials. The general form of the filter is similar to the extended Kalman\nfilter, but the filter gain is calculated differently.\n\n1 Introduction\n\nThe purpose of this paper is to present a recursive filter for a polynomial system.\nThe filter is in the form of the extended Kalman filter, but it inherently includes\nbounds on the mean square error of the estimated states. The derivation relies\non the recently introduced positive polynomials [9], [10], [1], and the software\nSOSTOOLS [11]. SOSTOOLS translates the problem to a semi-definite program,\nwhich is readily solved by SeDuMi [13]. This set of software makes possible the\nnumerical calculation of the bounds used in this paper routine.\n\nThere have been many attempts to use polynomial approximations for non-\nlinear Kalman filters [14], [2], the latter also includes a bibliography of earlier\nwork. A barrier to these efforts has been the moment closure problem [12], [6].\nThe problem refers to the fact that the calculation of nth order moments of a\nstochastic process requires the calculation of at least (n + 1)th order moments,\neventually leading to an infinite sequence of moments. In any practical appli-\ncation of polynomial approximation in filtering, some rule for truncating this\ninfinite sequence is required. A popular method has been to assume that mo-\nments of higher order are related to lower order moments as if the underlying\nprobability density were Gaussian, [6].\n\nAn approach to estimation for cone bounded non-linearities was proposed in\n[5,4,3]. The special feature of these papers, compared to the many publications\nthat deal with estimation for non-linear systems, is the derivation of an analytic\nbound on the performance of the estimator, without requiring any sort of trun-\ncation approximation. A different approach to nonlinear estimation is [8], which\nis based on a special type of discretization of the exact equations of nonlinear\nfiltering.\n\nThe present paper derives similar performance bounds, without resorting to\ntruncating an infinite sequence, for estimators for the state of a non-linear system\nwhose right hand sides are polynomials. The use of SOSTOOLS to derive bounds\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 65\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_4\n\n\n\n66 G. Hexner, I. Rusnak, and H. Weiss\n\non the moments and other nonlinear functions of jump diffusion processes was\ninitiated in [7]. The paper derived time varying bounds on nonlinear functions,\nincluding moments, of the state of a polynomial system. In contrast to this, here\nthe derived bounds are solutions of differential inequalities. The use of these\nbounds is more suited to state estimation than the time functions derived in [7].\n\nThe present paper is restricted to the simplest possible case. The system is\nassumed to be first order, and only the simplest extended Kalman filter type\nformulas for the propagation of the estimate. The observation equation is re-\nstricted to being linear. The data processing uses a formula similar to the one\nin the extended Kalman filter, but the filter gain is computed differently. The\ncontribution of the paper is the derivation of precomputable bounds on the mean\nsquare error of the resulting filter. Thus the class of systems with precomputable\nmean square bounds is expanded from the cone bounded non-linearities in [5,4,3]\nto systems with polynomial right hand sides.\n\n2 Problem Statement\n\nLet\n\ndx = f(x)dt+ g(x)dw (1)\n\nbe a scalar diffusion, f(x) and g(x) are polynomial functions, and w is a standard\nWiener process. The polynomials f(x) and g(x) are arbitrary, but the next as-\nsumption ensures that all the moments of the random variable x exist, provided\nthat all the moments exist at the initial time.\n\nAssumption 1. The highest order term of f(x)+g2(x) is odd, and its coefficient\nis negative.\n\nThe variable y\n\ny(Tk) = h1x(Tk) + vk (2)\n\nis observed at regular intervals, defined by the sequence of times, {Tk}; and, vk\nis a zero mean white noise sequence, independent of the state x, whose variance\nis R. The aim is to derive an estimate for x, and bounds on its mean square\nerror from the observations y.\n\nThe functions f(x), g(x) are defined as\n\nf(x) =\n\nNf?\nk=1\n\nfkx\nk (3)\n\ng(x) =\n\nNg?\nk=0\n\ngkx\nk (4)\n\n\n\nA Guaranteed Bound Filter for Polynomial Systems 67\n\n3 The Data Processing Step\n\nThe update rule here is restricted to being linear, that is of the form\n\nx?(Tk) = x?(Tk) +K [y(Tk)? h1x?(Tk)] (5)\n\nfor some K, which is to be determined. Here the x? represents the predicted\nvalue of the state variable and the x? the estimate of the state, after processing\nthe observation at time Tk. This rule is sub-optimal, nevertheless, a bound is\nhere derived for the mean square error after the update. Let\n\nn(Tk) = h1x(Tk)? h1x?(Tk) = ?h1e?(Tk) (6)\n\nwhere\ne?(Tk) = x?(Tk)? x(Tk) (7)\n\nis the prediction error at time Tk. Then the error in the estimate e? after the data\nprocessing step, using the update rule (5), is\n\ne?(Tk) = x?(Tk)? x(Tk) = x?(TK) +K [n(Tk) + vk]? x(Tk)\n= e?(Tk) +K [n(Tk) + vk]\n\n(8)\n\nThe mean square error after the update is\n\nEk{e?2} = Ek?1{e?2}+K2Ek?1{n2}+K2R+ 2KEk?1{e?n} (9)\n\nwhere the subscript k on the expectation operator indicates conditioning on all\nobservations up to the kth observation, and the time subscript on all the variables\nis Tk, but has been suppressed for readability. Let ?\n\n2\ne?e?(x?, Tk) be the bound on\n\nthe prior mean square error of the estimate, e?, at time Tk. Since only partial\ninformation is available on the prior mean square error, a reasonable criterion\nfor choosing the gain K of the update rule is\n\nmin\nK\n\nmax\nEk?1{e?2}??2e?e?\n\nEk{e?2} (10)\n\nThe expectations on the right hand side of (9) are readily calculated,\n\nEk?1{n2} = h21Ek?1{e?2} (11)\n\nEk?1{e?n} = ?h1Ek?1{e?2} (12)\nThe mean square error after the update evaluates to\n\nEk{e?2} = (1?Kh1)2 Ek?1{e?2}+K2R (13)\n\nThe maximum for any K such that\n\n1?Kh1 > 0 (14)\n\n\n\n68 G. Hexner, I. Rusnak, and H. Weiss\n\nis achieved at the maximum value of Ek?1{e?2}; namely, by substituting\nEk?1{e?2} = ?2e?e?(x?, Tk) (15)\n\nThe minimizing value of K is\n\nK =\n?2e?e?(x?, Tk)h1\n\n?2e?e?(x?, Tk)h\n2\n1 +R\n\n(16)\n\nso that (14) is satisfied for all Ek?1{e?2} ? ?2e?e?(x?, Tk). The value of the mean\nsquare error after the update is\n\nEk{e?2} = R\n(\nREk?1{e?2}+ ?4e?e?(x?, Tk)h21(\n\n?2e?e?(x?, Tk)h\n2\n1 +R\n\n)2\n)\n\n(17)\n\nwhich, when the bound for Ek?1{e?2} is substituted, becomes\nEk{e?2} ? ?2e?e?(x?, Tk) (18)\n\nwhere,\n\n?2e?e?(x?, Tk) =\nR?2e?e?(x?)\n\n?2e?e?(x?, Tk)h\n2\n1 +R\n\n(19)\n\nThe ?2e?e?(x?, Tk) serves as the initial condition for the propagation of the bound\non the mean square error during the time update step. Note that\n\nEk{e?2} < Ek?1{e?2} (20)\nso that a decrease in the mean squared error after each data processing step is\nensured.\n\n4 The Time Update Step\n\nBetween measurements the estimate is propagated as\n\ndx? = f(x?)dt (21)\n\nThe initial condition for (21) is\n\nx?(Tk) = x?(Tk) (22)\n\nwhere x? was calculated in (5). This estimate propagation rule is not optimal,\nbut is the simplest to use. It forms the basis of the analysis here. The estimation\nerror propagates according to\n\nde? = [f(x?)? f(x?? e?)] dt? g(x?? e?)dw (23)\nNote that x? can be calculated in (21), so that it is a known time function between\nmeasurements. Suppose that functions A(x?) and B(x?) can be found such that\n\n2e? [f(x?)? f(x?? e?)] + g2(x?? e?) ? 2A(x?)e?2 +B2(x?) (24)\n\n\n\nA Guaranteed Bound Filter for Polynomial Systems 69\n\nUsing the Ito rule [6] the error squared propagates according to\n\nde?2 =\n[\n2e? [f(x?)? f(x?? e?)] + g2(x?? e?)] dt? g(x?? e?)dw (25)\n\nThen taking expectations,\n\ndEk?1{e?2} = Ek?1\n{\n2e? [f(x?)? f(x?? e?)] + g2(x?? e?)} dt (26)\n\nHence the bound ?2e?e? on Ek?1{e?2} evolves according to,\n\nd?2e?e? =\n\n{[\n2A(x?)?2e?e? +B\n\n2(x?)\n]\ndt, A(x?) ? 0\n\nB2(x?)dt, A(x?) < 0\n(27)\n\nThe initial condition for ?2e?e? is from the last data processing step, (19), with\n\n?2e?e?(Tk) = ?\n2\ne?e?(Tk) (28)\n\nWhen A(x?) ? 0 equation (27) is a Lyapunov equation. An interpretation of\nA(x?) and B(x?) is that between measurements, the covariance of e? in the linear\nstochastic differential equation\n\nde? = A(x?)e?dt+B(x?)dw (29)\n\ndominates the covariance of e? in (23), for a given value of the covariance. Equa-\ntion (27) is the differential equation normally used to propagate the covariance\nin the Kalman filter.\n\n4.1 Calculating A(x?) and B(x?)\n\nIdeally the most desirable A(x?) and B(x?) is the one that results in the tightest\nbound in (24), that is the least upper bound is sought. The first step in the\nexposition is to show that there always exists A(x?) and B(x?) that satisfies (24).\n\nWhen f is a linear function of x, and g is constant, there is no need to\ncalculate a bound, therefore this possibility is not considered here. Choose A(x?)\nbe an arbitrary function. Then from Assumption 1 there exists e?M (x?), such that\n\n2e? [f(x?)? f(x?? e?)] + g2(x?? e?) ? 2A(x?)e?2, ?|e?| > eM (x?) (30)\nsince the highest power of the polynomial on the left hand side of (30) is even and\nits coefficient is negative, the polynomial is bounded above, and for sufficiently\nlarge |e?| the highest power, and its coefficient dominate. Since the left hand side\nof (30) is bounded from above, there exists B(x?) such that (24) holds ?e?.\n\nTo calculate the least upper bound, the MATLAB toolbox SOSTOOLS [11]\nis available. Using the toolbox the problem is formulated as\n\nmin\nA,B\n\n?AA(x?) + ?BB\n2(x?) (31)\n\nsubject to (24). For each value of ?A and ?B a different bound is obtained.\nAlternatively, A(x?) may be fixed at some value and the criterion is simplified to\n\nmin\nB\n\nB2(x?) (32)\n\n\n\n70 G. Hexner, I. Rusnak, and H. Weiss\n\nAssumption 1 ensures that both problems have solutions. When implementing\nthe filter this calculation needs to be carried out for all the relevant values of x?\noff-line, and stored in tables.\n\nThere are two special cases of some interest. Suppose that A(x?) is chosen as\n\nA(x?) =\n?f(x?)\n\n?x?\n(33)\n\nThen A(x?) is the value often used in covariance propagation of the extended\nKalman filter. Then the optimization problem (32) amounts to calculating the\nminimum value of the process noise for the extended Kalman filter to ensure that\nthe mean square error of the extended Kalman filter is less than the calculated\nbound. Note that the present filter is not necessarily unbiased.\n\nAnother interesting value for A(x?) is\n\nA(x?) =\nf(x?)\n\nx?\n(34)\n\nNow the minimum value of the process noise is calculated to ensure that the\nmean square error of the state dependent Riccati equation (SDRE) filter is less\nthan the calculated bound.\n\n5 Outline of the Filter Algorithm\n\nIn this section , the algorithm is summarized. The summary of the algorithm is\nshown in Table 1. Note that it includes an off line step, where the functions A(x?)\nand B(x?) are calculated. Once the algorithm is started after the first measure-\nment, it cycles between the steps \u201cMeasurement update\u201d, and \u201cTime update\u201d,\nsimilar to the standard extended Kalman filter. A crucial difference between the\nextended Kalman filter and the new proposed algorithm is that the extended\nKalman filter calculates an approximation to the estimate covariance, whereas\nthe present filter calculates a bound on the mean squared error of the estima-\ntion error. The estimate may be biased, nevertheless the calculated mean square\nerror bound is valid. In the following paragraph the equations of the algorithm\nare collected.\n\nTable 1. Summary of the algorithm\n\nStep Description Equation\n\nOff line Bound calculation (31), (24)\nMeasurement Update Gain calculation (16)\n\nUpdate state (5)\nRMS bound calculation (19)\n\nTime Update Propagation of the estimate (21), (22)\nRMS error bound propagation (27), (28)\n\n\n\nA Guaranteed Bound Filter for Polynomial Systems 71\n\nOff Line\nCalculate the bound\n\nmin\nA,B\n\n?AA(x?) + ?BB\n2(x?)\n\nsubject to\n\n2e? [f(x?)? f(x?? e?)] + g2(x?? e?) ? 2A(x?)e?2 +B2(x?)\nfor all relevant values of x?.\n\nMeasurement Update\nGain Calculation:\n\nK =\n?2e?e?(x?, Tk)h1\n\n?2e?e?(x?, Tk)h\n2\n1 +R\n\nUpdate estimate\nx?(Tk) = x?(Tk) +K [y(Tk)? h1x?(Tk)]\n\nMean square bound calculation:\n\n?2e?e?(x?, Tk) =\nR?2e?e?(x?, Tk)\n\n?2e?e?(x?, Tk)h\n2\n1 +R\n\nTime Update\nPropagation of the estimate\n\ndx? = f(x?)dt\n\nwith the initial condition\nx?(Tk) = x?(Tk)\n\nMean square error bound propagation:\n\nd?2e?e? =\n\n{[\n2A(x?)?2e?e? +B\n\n2(x?)\n]\ndt, A(x?) ? 0\n\nB2(x?)dt, A(x?) < 0\n\nwith the initial condition\n\n?2e?e?(x?, Tk) = ?\n2\ne?e?(x?, Tk)\n\n6 An Example\n\nThe example chosen to illustrate the bound filter is the following: The underlying\ncontinuous time process is generated by the stochastic differential equation,\n\ndx = x(c2 ? x2)dt+ gdw (35)\nwhile the discrete time observations are generated by the equation\n\ny(Tk) = x(Tk) + v(Tk) (36)\n\n\n\n72 G. Hexner, I. Rusnak, and H. Weiss\n\n?5 ?4 ?3 ?2 ?1 0 1 2 3 4 5\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n0.35\n\nx\n\nP\nD\n\nf(\nx)\n\nFig. 1. The stationary probability density of continuous time process\n\nTable 2. Parameter values in the example\n\nParameter Description Value\n\nc \u2014 2\ng process noise intensity 2\nR observation noise variance 16\nTk ? Tk?1 time between observations 0.025\n?A weight for calculating bound 1\n?B weight for calculating bound 0.1\n\nNote that in (35) there are three critical points, at x = ?c, x = 0, x = c.\nThe critical point at x = 0 is repulsive, while the remaining two are attractive.\nThe stationary probability density of x is shown in Fig. 1. It was obtained\nfrom a 10000 sample Monte-Carlo simulation of (35) between 0 and 10 s, with\ninitial condition x = 0 at t = 0. The time interval is sufficiently long to achieve\nstationary probability density. The values of the parameters used in the example\nare shown in table 2.\n\nTo illustrate the bound the left and right hand sides of the inequality (24)\nwere plotted for ?A = 1 and ?B = 0.005, 0.01, 0.05, 0.1. The resulting plots are\nshown in Fig. 2, for x? = 0. The bold line is a plot of the left side of (24), and\nthe dotted lines are the values of the bounding quadratic function. The values\nof A and B as a function of x? are plotted in Figs. 3 and 4.\n\nFigs. 5 and 6 show the estimation errors and the 1? values of the error for\nthe new bound based filter and for the traditions extended Kalman filter. These\ngraphs were obtained by averaging the results of 250 Monte-Carlo simulations.\nThe mean sample squared error and the average standard deviation of the error\n\n\n\nA Guaranteed Bound Filter for Polynomial Systems 73\n\n?10 ?8 ?6 ?4 ?2 0 2 4 6 8 10\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n2\nx 10\n\n4\n\ne\n\n \n\n \n\n?\nB\n=0.005\n\n?\nB\n=0.01\n\n?\nB\n=0.05\n\n?\nB\n=0.1\n\ndiff eq\napprxs\n\nFig. 2. Illustration of the bound for the example\n\n?5 ?4 ?3 ?2 ?1 0 1 2 3 4 5\n?16\n\n?14\n\n?12\n\n?10\n\n?8\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\nx\n\nA\n(x\n\n)\n\nFig. 3. The function A(x?) for the example\n\n\n\n74 G. Hexner, I. Rusnak, and H. Weiss\n\n?5 ?4 ?3 ?2 ?1 0 1 2 3 4 5\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\nx\n\nB\n(x\n\n)\n\nFig. 4. The function B(x?) for the example\n\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\n?4\n\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\nTime [s]\n\n \n\n \nerror\n+?\n??\n\nFig. 5. Sample run for the bound based filter\n\n\n\nA Guaranteed Bound Filter for Polynomial Systems 75\n\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\n?4\n\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\nTime [s]\n\n \n\n \nerror\n+?\n??\n\nFig. 6. Sample run for the extended Kalman filter\n\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\nTime [s]\n\n? e\n\n \n\n \nRMS error\ncalculated ?\n\nFig. 7. Bound based filter: Root mean square error (dotted line) and average filter\ncalculated error standard deviation (full line)\n\n\n\n76 G. Hexner, I. Rusnak, and H. Weiss\n\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\nTime [s]\n\n? e\n\n \n\n \nRMS error\ncalculated ?\n\nFig. 8. Extended Kalman filter: Root mean square error (dotted line) and average filter\ncalculated error standard deviation (full line)\n\nin calculating the gains of the bound based filter and the extended Kalman\nfilter are shown in Figs. 7 and 8 respectively. The level of process noise used\nin the extended Kalman filter was that given by the value of g. Note that for\nthe bounded filter case the filter calculates a conservative estimate for the error\nstandard deviation; whereas, for the extended Kalman filter the calculated error\nstandard deviation severely underestimates the sample standard deviation. It\nmay be possible to increase the value of the process noise and thereby improve\nthe correspondence between the sample mean squared error and the covariance\ncalculated by the filter.\n\n7 Summary and Conclusions\n\nThe paper presents a new filter for estimating the state of a system with polyno-\nmial dynamics, and linear measurements. The filter is in the form of an extended\nKalman filter, but the calculation of the gain differs from the commonly used\nfilter gain calculation of the extended Kalman filter. An integral part of the new\ngain calculation is the generation of guaranteed bounds for the mean squared\nestimation error. The calculation of the bound relies on the recently introduced\ntheory of positive polynomials, and the sum of squares approximation for test-\ning their positiveness. The estimate is not necessarily unbiased, nevertheless the\nmean square error between the estimate and the true value, of the state, satisfies\nthe calculated bound.\n\nIt is worth noting that for the class of systems considered in this paper the\nlast part of section 4, which considers the A(x?) derived from the EKF and\n\n\n\nA Guaranteed Bound Filter for Polynomial Systems 77\n\nSDRE based filter, has a special meaning. It can be interpreted as a proof of the\nexistence of a process noise value that renders the calculated filter error variance\na valid bound of the filter error.\n\nReferences\n\n1. Chesi, G.: LMI techniques for optimization over polynomials in control: a survey.\nIEEE Transactions on Automatic Control AC 55(11), 2500\u20132510 (2010)\n\n2. Germani, A., Manes, C., Paulmbo, P.: Polynomial extended Kalman filter. IEEE\nTransactions on Automatic Control 50(12), 2059\u20132064 (2005)\n\n3. Gilman, A.S., Rhodes, I.A.: Cone-bounded nonlinearities and mean square\nbounds\u2014estimation upper bound. IEEE Transactions on Automatic Control AC-\n18(3), 260\u2013265 (1973)\n\n4. Gilman, A.S., Rhodes, I.A.: Cone-bounded nonlinearities and mean square\nbounds\u2014estimation lower bound. IEEE Transactions on Automatic Control AC-\n20(5), 632\u2013641 (1975)\n\n5. Gilman, A.S., Rhodes, I.A.: Cone-bounded nonlinearities and mean-square bounds\n\u2014 quadratic regulation bounds. IEEE Transactions on Automatic Control AC-\n21(4), 472\u2013483 (1976)\n\n6. Jazwinsky, A.H.: Stochastic Processes and Filtering Theory. Academic Press, New\nYork (1970)\n\n7. Kashima, K., Kawai, R.: An optimization approach to weak approxmation\nof stochastic differential equations with jumps. Applied Numerical Mathemat-\nics 61(5), 641\u2013650 (2011)\n\n8. Kumar, M., Chakravorty, S.: Nonlinear filter based on the Fokker\u2013Planck equation.\nJournal of Guidance, Control and Dynamics 35(1), 68\u201379 (2012)\n\n9. Papachristodoulou, A., Prajna, S.: A tutorial on sum of squares techniques for\nsystem analysis. In: American Control Conference (2005)\n\n10. Parrilo, P.A., Lall, S.: Semidefinite programming relaxations and algebraic opti-\nmization in control. European Journal of Control 9(2-3), 307\u2013321 (2003)\n\n11. Prajna, S., Papachristodoulo, A., Seiler, P., Parrilo, P.A.: SOSTOOLS (2004),\nhttp://www.cds.caltech.edu/sostools/\n\n12. Sorenson, H.W.: On the development of practical nonlinear filters. Information\nSciences 7, 253\u2013270 (1974)\n\n13. Strum, J.F.: SeDuMi (2010), http://sedumi.ie.lehigh.edu/\n14. Sue, S.P., Agarwal, R.K.: Extension of Kalman filter theory to nonlinear systems\n\nwith application to wing rock motion. Asian Journal of Control 2(1) (2000)\n\nhttp://www.cds.caltech.edu/sostools/\nhttp://sedumi.ie.lehigh.edu/\n\n\n \n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,  \n\n79 \n\nDOI: 10.1007/978-3-662-44785-7_5 \n \n\nReference Basis Model Updating \u2013 Following the Baruch \nand Bar-Itzhack Approach \n\nYoram Halevi  \n\nFaculty of Mechanical Engineering, \nTechnion, Haifa 32000, Israel \nyoramh@technion.ac.il \n\nAbstract. The area known as model updating is concerned with the correction \nof analytical models of flexible structures, mostly finite element by processing \ntest data. The topic is of great practical and theoretical importance and a large \nnumber of methods have been suggested over the last decades. Reference basis \nis one of the main approaches to model updating. Its underlying principle is to \nfix certain quantities and minimize the changes of the others while matching the \nmeasured eigendata exactly. The method was first introduced in a seminal paper \nof Baruch and Bar-Itzhack and immediately became a subject of extensive re-\nsearch activity. The current paper presents the classical reference basis method \nand some later results that were inspired by it.  \n\nKeywords: Model updating, flexible structures. \n\n1 Introduction \n\nAccurate models are essential in analyzing flexible structures, such as airplanes, space \nequipment, car bodies and modern bridges systems. The model enables prediction of \nthe behavior under various excitations, boundary conditions and parameter changes \nand design of control systems. Analytical models, typically obtained by Finite Ele-\nment method, inevitably deviate from the true model due to uncertainties in geometry, \nmaterial properties, boundary conditions, etc.  Consequently the natural frequencies \nand modeshapes that are extracted from the test results do not agree with the predicted \nvalues from the analytical model.  It should be noted that the experimental results are \nalways partial, so even if they are assumed to be absolutely accurate, which is far \nfrom being true, they still cannot be the sole source of the final model. Model updat-\ning is the process of using the test results to correct the model so that it agrees, either \ncompletely or approximately, with the experimental data. In broader terms, it can be \ndescribed as fusion of two sources of information, both inaccurate and possibly in-\ncomplete, to obtain a better model. \n\nA wide variety of model updating methods have been suggested, and a comprehen-\nsive survey of them can be found in [2]. They range from formal use of system identi-\nfication, which, to a certain degree, completely disregards the analytical model [3], to  \n \n\n\n\n80 Y. Halevi \n\n \n\nmethods that use the entire frequency response function (FRF) [4]. Most approaches \nthough do incorporate the analytical model and their starting point is the eigenvalue \nequation that should be satisfied. The notion of satisfying the equation is not unique \nhowever and has three main interpretations. Sensitivity methods, e.g. [5-7] aim at \nmatching the solution of the equation, i.e. natural frequencies and modeshapes, with \nthe experimental data. The dependence of the natural frequencies and modeshapes on \nthe physical parameters is calculated either numerically or analytically. This method \nis presumably the most popular among practitioners.  \n\nA second approach is minimizing the equation error. This is the common theme in \nthe class of methods known as Minimization of the Error in the Constitutive Equa-\ntions (MECE), which minimize the difference between the static stiffness forces and \nthe dynamic inertia forces [8-10]. With parameterization that is similar to the one in \nsensitivity methods, the various methods in this class differ mainly in the weighting of \nthe error (residual force). \n\nIn Reference Basis (RB) methods perfect satisfaction of the eigenvalue equation, \nwith the measured data, is required. With certain parameters that are assumed to be \naccurate, hence reference basis, the minimal change of the free quantities, typically \nstiffness, from their analytical values is sought. In mathematical terms, the minimal \ndeviation requirement defines the optimization criterion while the characteristic equa-\ntion is the constraint. The method was first introduced in the seminal paper of Baruch \nand Bar-Itzhack [1] and soon after was followed by several other publications of Ba-\nruch [11, 12] and Berman [13-15]. The main advantages of the reference basis me-\nthods are their ability to match the measured natural frequencies and modeshapes and \nthe mathematical and numerical convenience. They provide closed form solutions, \nrequiring only elementary matrix operations and inversion of low dimension matrices. \nThe main disadvantage of the original methods is that they do not take into account \nany dependence of the matrices on physical properties, i.e. do not preserve the con-\nnectivity of the system. Perhaps the first attempt to solve this problem was given in \n[16] that minimizes a similar criterion yet imposes certain connectivity on the stiff-\nness matrix. The updated stiffness matrix is closer to the true one, provided that the \nassumed connectivity is correct, however the method requires an extremely large \nnumber of parameters and involves the solution of a set of equations whose dimension \nis orders of magnitude larger than the number of measured modes. A similar problem \nwas solved in [17] with a projection based, more efficient, algorithm. \n\nThis paper presents some improved and generalized versions of the main results in \nthe reference basis methods, presented by the author and his colleagues in the last \nfifteen years. In [18], Kenigsbuch and Halevi introduced the generalized reference \nbasis (GRB) that offers more flexibility by using a general weight instead of the mass \nmatrix in the original RB. This result was heavily used by Halevi and Bucher in [19] \nin which RB and the parametric optimization, used in other methods, were merged in \nthe connectivity constrained reference basis (CCRB) method. The updated model is \nfound using RB methods but has the required connectivity. Taking the same idea one \nstep further, Halevi, Vilensky and Datta [20] derived a direct method, called manifold \ndistance minimization (MDM) that defines the sets of models that have the correct \nstructure and models that yield the measured data, and look for the minimum distance \n\n\n\n Reference Basis Model Updating \u2013 Following the Baruch and Bar-Itzhack Approach 81 \n\n \n\nbetween them. A technical simple example is used throughout the paper to demon-\nstrate the use of the various methods and for comparison of their performance.  \n\nThe material is organized as follows. The model updating problem is stated in sec-\ntion 2. Section 3 gives a short introduction to reference basis following Baruch and \nBar-Itzhack [1]. The generalized reference basis method is given in section 4, the \nconnectivity constrained reference basis in 5 and the manifold distance minimization \nin section 6. The results are briefly summarized and discussed in section 7. \n\n2 The General Model Updating Problem \n\nConsider a conservative, i.e. without damping, flexible structure with N degrees of \nfreedom (dof). Let the \u2018true\u2019 equations of the system be \n\n ( ) ( ) ( )T TM x t K x t f t+ =  (1) \n\nwhere x?RN is a vector of generalized displacements and MT>0 and KT?0 are the mass \nand stiffness matrices respectively. Clearly the absolutely accurate model of the sys-\ntem is non-linear, infinite dimensional, damped, etc., so \u2018true\u2019 means here accurate \nenough for all practical purposes. The natural frequencies ?i and the modeshapes ?i \nsatisfy the eigenvalue equation \n\n 2( ) 0 , 1, ,T T i iK M i N? ?? = = \u2026  (2) \n\nIt is well known that the modeshapes are orthogonal w.r.t the mass matrix so with \nappropriate normalization of their length  \n\n Ti T j ijM? ? ?=  (3) \n\nThe analytic model of the system, usually obtained by finite elements, is given by \n\n ( ) ( ) ( )A AM x t K x t f t+ =  (4) \n\nwhere in general MA?MT and KA?KT.  \nThe result of a modal test of the system are m (m<N) natural frequencies, ?xi, and \n\nm modeshapes ?xi. Since not all dof\u2019s of the model are measured, in general the meas-\nured modeshapes contain only a partial set of Nx ? N of values of those vectors. The \nmodal experimental data thus consists of two matrices: A diagonal matrix ?x?Rm\u00d7m of \nthe measured natural frequencies and a full matrix ?x?RNx\u00d7m containing the values of \nthe modeshapes at the measured dof\u2019s. \n\nThe most general statement of the model updating problem is how to combine the \nanalytic information MA, KA and the experimental results ?x, ?x to obtain a model \nwhich is more accurate. More specifically, how to find M(MA, KA, ?x, ?x) and K(MA, \nKA, ?x, ?x) that are close to MT, KT.  \n\n\n\n82 Y. Halevi \n\n \n\n3 Reference Basis Model Updating \n\nIn this section the results of Baruch and Bar-Itzhack [1] are repeated. Three assump-\ntions are first made.   \n\nAssumption 1: The measured modeshapes contain all the dof\u2019s, i.e. Nx=N. This does \nnot necessarily mean that all dof\u2019s are measured, which is usually unrealistic, but \nrather that a preliminary step of expansion or reduction [21-24] has already been ap-\nplied to the partial (dof wise) set of modeshapes or to the model. \n\nAssumption 2: The measured natural frequencies are correct, i.e. ?x = ?T = ?. The \nphysical justification for this is that natural frequencies are global variables, which are \ncommon to all measurements in the system and therefore after processing their error \nis relatively small. \n\nAssumption 3: The mass matrix is correct, i.e. MA=MT =M. The physical justification \nfor this is that the mass is usually known better than the stiffness since it involves \nmainly geometry. However, in some cases that will be discussed later this assumption \nwas replaced by another or even removed. \n\nAssumptions 2 and 3 provide the \u201creference basis\u201d for the updating algorithms in \nthe next two sub-sections.  \n\n3.1 Orthogonalization \n\nThe first step towards stiffness updating is correcting the measured modeshapes so \nthat they satisfy the orthogonality condition. Though not required specifically by the \nalgorithm it is assumed for practical reasons that each modeshape has already been \nscaled individually so that ?xiTM?xi =1. With M as a reference basis, the problem is \nformulated as follows \n\n \n( )1 2min\n\n.\n\nX F\n\nT\n\nJ M\n\ns t M I\n\n?\n= ? ? ?\n\n? ? =\n (5) \n\nWhere F denotes the Frobenius norm. The solution was found using Lagrange multip-\nliers and is given by  \n\n ( ) 1 2TX X XM ?? = ? ? ?  (6) \n\n3.2 Stiffness Updating  \n\nWith M and?, that are assumed to be accurate, as reference basis, the updating of K \nfollows two principles. First, the eigenvalue equation should be satisfied exactly, \nwhich means that the natural frequencies and modeshapes of the updated model coin-\ncide with the measured values. Secondly, among all stiffness matrices satisfying that \nthe method seeks the one with minimum change from the analytical model. The opti-\nmization problem is therefore as follows.   \n\n\n\n Reference Basis Model Updating \u2013 Following the Baruch and Bar-Itzhack Approach 83 \n\n \n\n \n( ) 21 2 1 2\n2\n\nmin\n\n.\n\nA FK\n\nT\n\nJ M K K M\n\ns t K M\nK K\n\n? ?= ?\n\n? = ??\n=\n\n (7) \n\nThe solution, which was obtained by means of Lagrange\u2019s multipliers, is given by \n\n( ) ( ) ( )2 2 2TT T TA A A AK K K M M M K M M K M= ? ? ? ?? ? ? ? ? ? ?? + ? ? ? ? ? ?\n  (8) \n\nTo summarize, the reference basis has the following main advantages. \n\n? It matches the measured (processed) eigendata exactly. \n? It provides closed form expressions. \n? The amount of calculation is small. Only matrix multiplications and summation in \n\nthe stiffness updating and a single inversion in the dimension of the measurements \nin the modeshapes orthogonalization are required.    \n\n3.3 Alternative Formulation \u2013 Mass Matrix Update \n\nThe procedure in sub-section 3.1 is based on the assumption that the mass matrix is \nknown exactly and the modeshapes are corrected to ensure an orthogonal set with \nrespect to it. Berman [13] claimed that after model reduction this is not necessarily so \nand suggested to use the stiffness matrix in the orthogonalization. In [15] the roles of \nthe mass matrix and the measured modeshapes are reversed. It is assumed that the \nmeasured modeshapes are exact, and the mass matrix is corrected accordingly. The \noptimization problem of that formulation becomes \n\n \n( )1/ 2 1/2min\n\n.\n\nA A A FM\n\nT\n\nJ M M M M\n\ns t M I\n\n? ?= ?\n\n? ? =\n (9) \n\nWith the solution \n\n 1 1( ) ( )( )T T T TA A A A A AM M M M I M M M\n? ?= + ? ? ? ? ? ? ? ? ?  (10) \n\nThe updated M is then used in the stiffness updating in sub-section 3.2 without any \nfurther change. \n\n4 Generalized Reference Basis \n\nThe advantages of the reference basis method were listed in the previous section. \nHowever, its lack of ability, in its original form, to maintain the correct connectivity \nwas labeled by both researchers and practitioner as a major disadvantage. This is \ndemonstrated by the following simple example. \n\n\n\n84 Y. Halevi \n\n \n\nm mmmm\nk1 k2 k3 k4 k5 k6\n\n  \n\nFig. 1. A simplified model of a flexible system \n\nExample: The system shown in Fig. 1 contains five masses and six springs and can be \nregarded as an approximation of a rod in tension or torsion. The mass and stiffness \nmatrices are given by  \n\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n?\n?\n?\n?\n?\n?\n\n?\n\n?\n\n+?\n?+?\n\n?+?\n?+?\n\n?+\n\n=?=\n\n655\n\n5544\n\n4433\n\n3322\n\n221\n\n5\n\n000\n\n00\n\n00\n\n00\n\n000\n\n,\n\nkkk\n\nkkkk\n\nkkkk\n\nkkkk\n\nkkk\n\nKImM  \n\nThe true numerical values are m=1, k1=k3=k4=k5=k6=50, k2=70, whereas in the analyt-\nical model, m=1, and ki=50, i=1,\u20266. The true and analytic stiffness matrices are then  \n\n,\n\n120 70 0 0 0 100 50 0 0 0\n70 120 50 0 0 50 100 50 0 0\n\n0 50 100 50 0 0 50 100 50 0\n0 0 50 100 50 0 0 50 100 50\n0 0 0 50 100 0 0 0 50 100\n\nT AKK = =\n\n? ?? ? ? ?\n? ? ? ?? ? ? ?\n? ? ? ?? ? ? ?? ? ? ?\n\n? ? ? ?? ? ? ?\n? ? ? ?? ?? ? ? ?\n\n \n\nThe experimental data consists of the first two natural frequencies and mode-\nshapes. This technical example will be used throughout the paper to demonstrate the \nproperties of the various updating algorithms. Applying the reference basis algorithm \nto this example resulted in \n\n \n\n50.61 1.96 1.72 1.01\n50.61 103.01 48.28 1.51 0.88\n1.96 48.28 99.83 50.15 0.09\n1.72 1.51 50.15 99.87 50.08\n1.01 0.88 0.09 50.08 99.95\n\n97.88\n\nRBK =\n\n? ? ?\n? ?\n\n? ? ?\n? ? ?\n? ? ?\n\n? ?\n? ?\n? ?\n? ?\n? ?\n? ?\n\n \n\nAs can be seen the updated matrix is not close to the true one neither in structure \nnor in its values. The change from the analytical model is minimal, yet sufficient to \nmatch exactly the first two natural frequencies and modeshapes. Furthermore, the \nmatrix contains stiffness elements that are clearly non-physical.  \n\nOne of the key features of reference basis is the use of the inverse of the mass ma-\ntrix as the weight in the optimization criterion (7). This choice has a physical justifica-\ntion, and it is convenient for the derivation because of the orthogonality condition \n?TM? =I. However, as was shown by the example, it does not always lead to good \n\n\n\n Reference Basis Model Updating \u2013 Following the Baruch and Bar-Itzhack Approach 85 \n\n \n\nresults. Kenigsbuch and Halevi [18] introduced the generalized reference basis (GRB) \nthat offers more flexibility by using a general weight W >0. The problem is defined as \n\n \n( ) 21 2 1 2\n\n2\n\nmin\n\n.\n\nA FL\n\nT\n\nJ W K K W\n\ns t K M\nK LL\n\n? ?= ?\n\n? = ??\n=\n\n (11) \n\nThe second constraint requires non-negativity of the updated stiffness matrix rather \nthan only symmetry as in previous works. The solution of this problem, that involves \nsome matrix operations, is given by \n\n ( ) ( ) ( )2 2 2TT T TA A A AK K K M R R K M R K R= ? ? ? ?? ? ? ? ?? + ? ? ? ?  (12) \nwhere  \n\n ( ) 1TR W W ?= ? ? ?  (13) \nR is a right inverse of ?T whose \u2018angle\u2019 depends on the weight W. If W=M, as in RB, \nthen R=M? and (12) coincides with (8). A second form of expressing the same up-\ndated K is \n\n ( ) ( ) ( )2 2TT T T TAK M M I R K M M I R= ?? ? + ? ? ? ?? ? ? ?  (14) \nBoth (12) and (14) have a structure of predictor-corrector. In (12) KA is interpreted as \nthe a priori estimate and the experiment results ? and ? are the new data. In (14) the \nroles are reversed and M??2?T M is the a priori estimate, partial in this case, and KA \nis the new data. The form (14) has also a geometrical interpretation. To see this, de-\nfine the complete set of natural frequencies and modeshapes as ?F=[?  ?u] and \n?F=diag{?, ?u} where ?u and ?u are the unmeasured quantities. Then \n\n \n2\n\n2 2\n\nT\nT F F F\n\nT T\nu u u\n\nK M M\n\nM M M M\n\n= ? ? ?\n\n= ?? ? + ? ? ?\n (15) \n\nNotice that KA-M??2?TM is an approximation of the contribution of the unmeasured \npart that is given in the last term in (15) and is equal to it when KA is accurate, i.e. \nKA=KT. Since R is a right inverse of ?T, I-?RT is a projection into a subspace ortho-\ngonal to ?. Thus K has an accurate part (the first term) in a subspace defined by the \nmeasured modeshapes ? and a correction part, projected into a subspace orthogonal \nto ?. In case KA=KT, the difference already belongs to that subspace and therefore \nremains unchanged by the projection. The weight W affects only the \u2018angle\u2019 of the \nprojection but not its image. However, as will be demonstrated in the sequel, this has \na strong effect on the results.  \n\n\n\n86 Y. Halevi \n\n \n\nGRB is now applied to the same example. Suppose that it is somehow known in \nadvance that the inaccuracy lies in the first two dof\u2019s and therefore the weight is cho-\nsen as \n\n { }, ,1,1,1W diag a a=  (16) \n\na=1 is the same as RB, and as it increases the updated stiffness K gets closer to the \ntrue values and structure of the stiffness matrix. For example, for a=100 and a=1000 \nwe have  \n\n \n\n100\n\n1000\n\n112.98 -64.02 -0.37 -0.59 -0.45\n\n-64.02 114.91 -49.68 0.50 0.38\n-0.37  -49.68 99.98 -50.03 -0.02\n-0.59 0.50 -50.03 99.95 -50.04\n-0.45 0.38 -0.02 -50.04  99.97\n\n119.72 -69.76 -0.01 -0.02 -0.02\n-69.76 119.80 -49\n\nK\n\nK\n\n? ?\n? ?\n? ?= ? ?\n? ?\n? ?? ?\n\n=\n.99 0.02 0.02\n\n-0.01  -49.99 100.00 -50.00 -0.00\n-0.02 0.02 -50.03 100.00 -50.00\n\n-0.02 0.02 -0.00 -50.00 100/00\n\n? ?\n? ?\n? ?\n? ?\n? ?\n? ?? ?\n\n  \n\nThe generalized reference basis method [18] has also two other results that are not \ngiven here; a counterpart of the orthogonalization procedure with general weight in-\nstead of the matrix M and an algorithm for simultaneous updating of the mass and \nstiffness matrices.    \n\n5 Generalized Reference Basis with Connectivity Constraints \n\n5.1 Connectivity \n\nThe stiffness matrix has usually inherent connectivity properties. In their simplest \nform, which we call zero-nonzero connectivity, some of the entrees should be identi-\ncally zero. Let I0 be the set of entries of the stiffness matrix which are known to be \nidentically zero. Then this type of connectivity is defined formally by  \n\n 00 ,ijK i j I= ? ?  (17) \n\nFurther connectivity requirements exist in the structured connectivity case, where \ncertain relationships between the nonzero elements of the stiffness matrix should \nhold. Hence the model is actually determined by a smaller set of parameters. As an \nexample, in the case of n masses connected serially by springs in a fixed-fixed form, \nas in our example, the stiffness matrix is completely determined by the n+1 spring \nconstants with the requirement that the sum of each row, except the first and last, is \nzero. Similar conditions arise from the Finite Element structure. Following the \n\n\n\n Reference Basis Model Updating \u2013 Following the Baruch and Bar-Itzhack Approach 87 \n\n \n\nframework suggested in many publications, e.g. [5], it is assumed that the stiffness \nmatrix depends on the free parameters linearly \n\n \n1\n\np\n\nA i i\ni\n\nK K K?\n=\n\n= +?  (18) \n\nwhere Ki are given matrices and ?i are scalar parameters, nominally equal zero. In \ncase the true dependence on the parameters is nonlinear, eq. (18) can be viewed as \nlinearization, assuming small deviations. In [5-7], as well as in other publications, the \nproblem was solved using sensitivity methods which minimizes the error between the \nmeasured eigendata and the same variables when obtained using K(?). Setting up  \nthe problem with the RB criterion and the parameterization (18) is straightforward.  \n\n \n\n( ) 21 2 1 2\n2\n\n1\n\nmin\n\n. .\n\nA F\n\np\n\nA i i\ni\n\nJ W K K W\n\ns t K M\n\nK K K\n\n?\n\n?\n\n? ?\n\n=\n\n= ?\n\n? = ??\n\n= +?\n (19) \n\nGetting a solution, on the other hand, is hard if not impossible. The main problem \nwith (19) is that the number of parameters that are required to satisfy the constraint \nequation is in the order of the number of dof\u2019s, which is unrealistic. Furthermore, all \nthe nice properties of RB, including closed form solution, and low order matrix inver-\nsion are no longer valid. In this section we follow the results of Halevi and Bucher \n[19] that adopted the parametric modeling philosophy, but used different means to \nsolve the problem. \n\n5.2 Implicit Parameterization by Weighting Matrix Adjustment  \n\nConsidering for simplicity a diagonal weighting matrix W=diag{wi}, the cost function \nin eq. (11) is a weighted sum of the deviations of K from KA. More specifically,  \n\n ( )21 1 ,\n1 1\n\nn n\n\ni j ij A ij\ni j\n\nJ w w K K? ?\n\n= =\n\n= ???  (20) \n\nIf wi is large, a unit change in the i-th degree of freedom results in a small contribu-\ntion to J and vice versa. The optimization machinery will therefore automatically try \nto direct the changes to areas with large wi and to avoid changes in areas where wi is \nsmall. The conclusion from this intuitive analysis is that the weighting matrix W pro-\nvides means of restricting the updating to the desired dof\u2019s in a soft manner. This set \nof dof\u2019s can be a result of either a priori or a posteriori knowledge. Sometimes it is \nclear that certain areas are better modeled than others. In such cases wi\n\n-1 is a confi-\ndence measure of the model of that dof.  \n\nIn this paper we consider the other possibility, i.e. a priori equal confidence in all \ndof\u2019s. The selection of the weighting matrix is then based on detection, rather than \n\n\n\n88 Y. Halevi \n\n \n\nexpectation, and the specific tool which is going to be used is error localization. There \nexist a variety of error localization methods, e.g. [8, 25], and the output of all of them \nis, or can be translated to, a numerical value describing the magnitude of the error in \nthat dof. We consider here the eigenvalue equation error as such indicator but other, \nmore sophisticated, methods can be applied as well without any effect on the general \nscheme. Let di be proportional to the norm of the i-th row of the eigenvalue equation \nerror matrix.  \n\n ( )2\n,*i i A i\n\nd c K M= ? ? ??   (21) \n\nwhere the ci are constants that can be used as normalization factors  for non-identical \ndof\u2019s, such as displacements and angles, or to contain any a priori knowledge. W is \nselected as  \n\n { }iW diag d ?=   (22) \nWhere ? is a parameter for adjusting the updating procedure. For ?=0, W becomes the \nidentity matrix and all dof\u2019s are treated equally. As ? increases, areas with larger er-\nrors in the eigenvalue equation are more and more emphasized. In case the mode-\nshapes contain some noise, too large values of ? tend to increase it, hence in general \nthere is a finite optimal ?. \n\n5.3 A Posteriori Connectivity Assignment \n\nThe main idea of connectivity constrained reference basis (CCRB) [19] is applying \nthe connectivity constraints after the standard GRB updating procedure. Clearly this \nis wrong from pure mathematical considerations; however from practical point of \nview the procedure combines the best features of both reference basis and parametric \napproaches. The starting point is a GRB update K, given by eq. (12) or (14), that does \nnot satisfy the connectivity constraints. This update will be replaced by Kcon that satis-\nfies the connectivity constraints, and is closest to K. The following optimization prob-\nlem yields that Kcon. \n\n \n\n2\n\n1\n\nmin\n\n. .\n\ncon F\np\n\ncon A i i\ni\n\nJ K K\n\ns t K K K\n\n?\n\n?\n=\n\n= ?\n\n= +?\n (23) \n\nThis problem is easily transformed into least squares with the closed form solution  \n\n \n\n1\n1 1 11 1\n\n1\n\n( ) ( ) ( ( ))\n\n( ) ( ) ( ( ))\n\np A\n\np p p p p A\n\ntr K K tr K K tr K K K\n\ntr K K tr K K tr K K K\n\n?\n\n?\n\n?\n? ?? ? ? ??\n? ?? ? ? ?= ? ?? ? ? ??? ? ? ?? ?? ? ? ?? ?\n\n (24) \n\n\n\n Reference Basis Model Updating \u2013 Following the Baruch and Bar-Itzhack Approach 89 \n\n \n\nLet us define now two measures of the quality of the update. The \u2018updating cost\u2019 Jup is \nthe distance between the updated stiffness matrix and the true one.  \n\n T con Fup\ncon F\n\nK K\nJ\n\nK\n\n?\n=  (25) \n\nThis cost requires knowledge of the unknown KT, thus cannot be calculated in real \napplications. It can serve in simulations as a measure of the quality of the updated \nmodel.  \n\nThe difference between K, that satisfies all the updating requirements, except for \nconnectivity, and Kcon can be regarded as \u2018payment\u2019 for invoking connectivity. It is \ntermed the \u2018connectivity cost\u2019. Several criteria can be defined for that purpose [19], \ne.g. the deviation in natural frequencies (unlike K, Kcon is not completely compatible \nwith the measured eigendata). No matter how the cost Jcon is defined, it involves only \nknown quantities and can be calculated in real applications. The cost used here is \nagain the normalized distance, which is a measure of how much the assumed connec-\ntivity was violated in the updated K.  \n\n con Fcon\ncon F\n\nK K\nJ\n\nK\n\n?\n=  (26) \n\nThe entire updating procedure still has one free parameter, the power ? in the weight-\ning matrix W in eq. (22). Since K depends on W, and Kcon on K, it follows that with \ngiven analytical model and measurement data, the connectivity cost is a function of ?. \n\n { }( )( )con con iJ J W diag d ?? = =  (27) \nTo decide what value of ? to use, consider first the following scenario: The correct \nconnectivity is known but not imposed, and the unconstrained updated model happens \nto conform to it. This is of course the ideal situation. The fundamental premise of the \nsuggested algorithm is therefore stated as follows. \n\nUnconstrained updated models with smaller connectivity cost are closer to the true \nmodel.  \n\nThe meaning of that idea is that a weighting matrix is considered to be better if it \nleads to an unconstrained updated stiffness matrix which is closer to the assumed \nconnectivity. In other words, the amount of connectivity violation of K can serve as \nan indicator for the quality of the ?. This abstract reasoning was confirmed by exten-\nsive simulations showing good correlation between Jcon that can be computed and Jup \nthat is available only in simulations. The algorithm is based on searching for ? which \nminimizes Jcon. With perfect measurements, larger values of ? always yield better \nresults. When the measurements contain some noise, larger ? tend to increase it, and \nusually there is a finite optimal value.  \n\nConsider once more the example and define as parameters the changes in all the \nsprings. Fig. 2 shows the updating cost and the connectivity cost in two cases, perfect \n\n\n\n90 Y. Halevi \n\n \n\nand noisy measurement. The correlation between the unknown Jup and the known Jcon \nis evident. Without noise, any ? > 0.3 is practically optimal. With ?=0.5 the algorithm \nfound exactly the correct values of 70 for k2 and 50 for the others. With 1% noise in \nthe modeshapes, the optimum occurs at ?=3.3 with the following reasonably accurate \nvalues for the springs \n\n k1\u00f7k6={49.19, 70.27, 49.05, 50.07, 49.98, 50.03}  \n\n \n\n0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n35\n\n40\n\nBETA\n\nC\nO\n\nS\nT\n\n0 1 2 3 4 5 6 7 8 9 10\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n1.2\n\n1.4\n\nBETA\n\nC\nO\n\nS\nT\n\n \nFig. 2. The updating cost Jup (red) and the connectivity cost Jcon (blue). Top \u2013 without noise, \nBottom (normalized) \u2013 1% noise in modeshapes.  \n\n6 Direct Method \u2013 Manifold Distance Minimization \n\nThe discussion in the previous section revolved around the inherent conflict, existing \nin practically all methods of model updating, between satisfying the characteristic \nequation and complying with the connectivity that is known to exist in the model. \nCCRB tries to bridge that gap by going through GRB. In [20], Halevi, Vilensky and \n\n\n\n Reference Basis Model Updating \u2013 Following the Baruch and Bar-Itzhack Approach 91 \n\n \n\nDatta went one step further and suggested a direct method called manifold distance \nminimization (MDM). The main results of that paper are presented in this section.  \n\nConsider two sets of stiffness matrices. The first is the set of all matrices that  \nsatisfy exactly the eigenvalue equation with the m measured natural frequencies and \nmodeshapes. \n\n { }2:ES K K M= ? = ??  (28) \nIt can be shown that an equivalent definition of the set is \n\n { }2: , 0T T TES K K M M BXB X X= = ?? ? + = ?  )29(  \nwhere B=null(?T). SE is a linear manifold in the elements of X. Since N, the number \nof dof\u2019s, is in practice very large, and m<<N, the actual calculation of B can require \nheavy computation. However, it is shown later that B needs not be calculated at all. \nThe second set is that of all matrices that satisfy the required connectivity by having \nthe standard linear parameterization. \n\n \n1\n\n:\np\n\nC A i i\ni\n\nS K K K K?\n=\n\n? ?\n= = +? ?\n? ?\n\n?  (30) \n\nIf the two manifolds intersect, there exists a stiffness matrix with the correct connec-\ntivity that is in full agreement with the measurement and the problem has a unique \nand perfect solution. Since this is almost never the case, we look for the point in SC \nthat is closest to SE, i.e., the minimum distance between the manifolds. We therefore \ndefine, with some positive weighting matrix W, the following optimization problem. \n\n \n1 2\n\n21/2 1/2\n1 2,\n\n1\n\n2\n\nmin ( )\n\n. .\n\nFK K\n\nE\n\nC\n\nJ W K K W\n\ns t K S\nK S\n\n? ?= ?\n\n?\n?\n\n )31(  \n\nIn more specific terms, the problem is \n\n ( )\n2\n\n1/2 2 1/2\n\n,\n1\n\nmin\np\n\nT T\nA i iX\n\ni\nF\n\nJ W K K M M BXB W\n?\n\n?? ?\n=\n\n? ?? ?\n= + ? ?? ? +? ?? ?\n\n? ?? ?\n?  (32) \n\nAn explicit expression for the solution of the optimal parameters is given by  \n\n \n\n1\n\n1 1 1 11\n\n1\n\n( ) ( ) ( )\n\n( ) ( ) ( )\n\np U\n\np p p p p U\n\ntr K WK tr K WK tr K WK\n\ntr K WK tr K WK tr K WK\n\n?\n\n?\n\n?\n? ? ? ?? ?\n? ? ? ?? ? = ? ? ? ?? ?\n? ? ? ?? ? ? ?? ?\n\n )33(  \n\nwhere \n\n\n\n92 Y. Halevi \n\n \n\n \n( ) 12 ,\n\n,\n\nT T T\nU A\n\nT T\ni i i U U U\n\nK K M M P I W W\n\nK K PK P K K PK P\n\n?\n= ? ?? ? = ? ? ? ? ?\n\n= ? = ?\n )34(  \n\nNotice that the actual calculation of the null space B is not required as the projection \nP is defined by the problem data. In [20] the method was compared to connectivity \nconstrained reference basis (CCRB) and to minimization of the error in the constitu-\ntive equation (MECE). It was shown that MDM covers a larger set of potential ma-\ntrices and that it is more efficient computationally and less sensitive to noise. \n\nIt is clear from the MDM problem definition that if there is a stiffness matrix with \nthe correct connectivity that satisfies the characteristic equation, the method will find \nit. This is, by the way, not true for many existing methods, including reference basis \nand sensitivity. The appropriate comparison is therefore in the presence of noise. The \nmethod was applied to the same example, with different levels of noise and was com-\npared to CCRB and its iterative version (see [19]). The results, which are averages of \nextensive simulation, are shown in Fig. 3. It is evident that the error in MDM is much \nsmaller. Similar results were obtained for MECE. A qualitative explanation is that in \nCCRB the noisy data is used twice, not only as the modeshape, but also for computing \nthe optimal weight for the generalized reference basis problem. Similar argument can \nbe made about MECE. However these points still need to be investigated rigorously. \n\n \n\n0 0.2 0.4 0.6 0.8 1 1.2 1.4 1.6 1.8 2\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\nNoise Level (%)\n\nU\npd\n\nat\ne \n\nE\nro\n\nr \n(%\n\n)\n\n \nFig. 3. Update error vs. noise level. MDM \u2013 blue, CCRB \u2013 green, CCRB with 25 iterations \u2013 \nred. \n\n7 Conclusion \n\nThe reference basis model updating method was revisited. The seminal results of \nBaruch and Bar-Itzhack were discussed and several extensions of the method were \npresented. Most of these later results try to combine, one way or another, the mathe-\nmatical and computational advantages of reference basis with the requirement that the \nupdated model should have a certain structure. An example that was used for all the \n\n\n\n Reference Basis Model Updating \u2013 Following the Baruch and Bar-Itzhack Approach 93 \n\n \n\nmethods demonstrated the progress from no connectivity in classical reference basis \nin section 3, through ad hoc weighting selection in generalized reference basis in sec-\ntion 4 to the systematic connectivity constrained reference basis in section 5. Though \nnot sharing exactly the same philosophy, the manifold distance minimization in sec-\ntion 6 can be regarded as reference basis because one of the two manifolds is defined \nby satisfying the characteristic equation accurately. As a concluding remark, it is \nworth noting that the principles of reference basis, which was developed for conserva-\ntive systems, were applied also to systems with damping [26-28].  \n\nReferences \n\n1. Baruch, M., Bar-Itzhack, I.Y.: Optimal Weighted Orthogonalization of Measured Modes. \nAIAA Journal 16(4), 346\u2013351 (1978) \n\n2. Friswell, M.I., Mottershead, J.E.: Finite Element Model Updating in Structural Dynamics. \nKluwer Academic Publication, Dordrecht (1995) \n\n3. Natke, H.G. (ed.): Identification of Vibrating Structures. Springer (1982) \n4. Sastieri, A., D\u2019Ambrogio, W.: Why Be Modal?, How To Avoid The Use of Modes in The \n\nModification of Vibrating System. International Journal of Analytical and Experimental \nModal Analysis 4(1), 25\u201330 (1989) \n\n5. Lallement, G., Piranda, J.G., Cogan, S.: Parametric Correction of Finite Element Models \nby Minimization of an Output Residual: Improvement of The Sensitivity Method. In: Pro-\nceedings of the 9th International Modal Analysis Conference (IMAC) Florence, Italy, pp. \n363\u2013368 (1991) \n\n6. Link, M.: Updating of Analytical Models \u2013 Basic Procedures and Extensions. In: Silva, \nJ.M.M., Maia, N.M.M. (eds.) Modal Analysis and Testing. Nato Science Series. Kluwer \nAcademic Publication (1999) \n\n7. Maia, N.M.M., Silva, J.M.M. (eds.): Theoretical and Experimental Modal Analysis. Re-\nsearch Study Press, Baldoc (1997) \n\n8. Fissette, E., Ibrahim, S., Sravrinidis, C.: Error Localization and Updating of an Analytic \nModel Using a Force Balance Method. In: Proceedings of the 6th International Modal \nAnalysis Conference (IMAC), Orlando, FL, pp. 1063\u20131070 (1988) \n\n9. Alvin, F.A.: Finite Element Model Updating via Bayesian Estimation and Minimization of \nDynamic Residuals. AIAA Journal 35(5), 879\u2013886 (1997) \n\n10. Tarazaga, P.A., Halevi, Y., Inman, D.J.: The Quadratic Compression Method for Model \nUpdating and Its Noise Filtering Properties. Mechanical Systems and Signal \nProcessing 21(1), 58\u201373 (2007) \n\n11. Baruch, M.: Optimal Correction of Mass and Stiffness Matrices Using Measured Modes. \nAIAA Journal 20(11), 1623\u20131626 (1982) \n\n12. Baruch, M.: Methods of Reference Basis for Identification of Linear Dynamic Structures. \nAIAA Journal 22(4), 561\u2013564 (1984) \n\n13. Berman, A.: Comments on \u2018Optimal Weighted Orthogonalization of Measured Modes\u2019. \nAIAA Journal 17(8), 927\u2013928 (1979) \n\n14. Berman, A.: Mass Matrix Correction using an Incomplete Set of Measured Modes. AIAA \nJournal 17(11), 1147\u20131148 (1979) \n\n15. Berman, A., Nagy, E.J.: Improvement of a Large Analytical Model using Test Data. AIAA \nJournal 21(8), 1168\u20131173 (1983) \n\n\n\n94 Y. Halevi \n\n \n\n16. Kabe, A.M.: Stiffness Matrix Adjustment using Mode Data. AIAA Journal 23(9), 1431\u2013\n1436 (1985) \n\n17. Kammer, D.C.: Optimum Approximation for Residual Stiffness in Linear System Identifi-\ncation. AIAA Journal 26(1), 104\u2013112 (1988) \n\n18. Kenigsbuch, R., Halevi, Y.: Model Updating in Structural Dynamics: A Generalised Ref-\nerence Basis Approach. Mechanical Systems and Signal Processing 12(1), 75\u201390 (1998) \n\n19. Halevi, Y., Bucher, I.: Model Updating via Weighted Reference Basis with Connectivity \nConstraints. Journal of Sound and Vibration 265, 561\u2013581 (2003) \n\n20. Halevi, Y., Vilensky, D., Datta, B.N.: Model Updating via Manifold Distance Minimiza-\ntion. In: Proceedings of ISMA, Leuven, Belgium (2010) \n\n21. Guyan, R.J.: Reduction of Stiffness and Mass Matrices. AIAA Journal 3(2), 280 (1965) \n22. O\u2019Callahan, J., Avitable, P., Riemer, R.: System Equivalent Reduction Expansion Process. \n\nIn: Proceedings of the 7th International Modal Analysis Conference (IMAC), Las Vegas, \nNV, pp. 17\u201321 (1989) \n\n23. Levin-West, M., Minham, M., Kissil, A.: Evaluation of Mode Shape Expansion Tech-\nniques for Prediction. NASA report, pp. 94\u2013158 (1994) \n\n24. Halevi, Y., Morales, C.A., Inman, D.J.: Combined Expansion and Orthogonalization of \nExperimental Modeshapes. ASME Journal of Vibration and Acoustics 127, 188\u2013196 \n(2005) \n\n25. Lieven, N.A., Ewins, D.J.: Error Localization and Updating Finite Element Models Using \nSingular Value Decomposition. In: Proceedings of the 8th International Modal Analysis \nConference (IMAC), Orlando, FL, pp. 768\u2013773 (1990) \n\n26. Minas, C., Inman, D.J.: Identification of a Nonproportional Damping Matrix from Incom-\nplete Modal Information. ASME Journal of Vibration and Acoustics 113, 219\u2013224 (1991) \n\n27. Halevi, Y., Kenigsbuch, R.: Updating of the Complex Modeshapes and the Damping Ma-\ntrix. Inverse Problems in Engineering 8, 143\u2013162 (2000) \n\n28. Datta, B.N., Deng, S., Sokolov, V.O., Sarkissian, D.R.: An Optimization Technique for \nDamped Model Updating with Measured Data Satisfying Quadratic Orthogonality Con-\nstraint. Mechanical Systems and Signal Processing 23(6), 1759\u20131772 (2009) \n\n \n\n\n\nStochastic Estimation and Control for Linear\n\nSystems with Cauchy Noise\n\nJason L. Speyer1, Moshe Idan2, and Javier Ferna?ndez1\n\n1 Mechanical and Aerospace Engineering,\nUniversity of California, Los Angeles\n\n{speyer,jhf}@seas.ucla.edu\n2 Aerospace Engineering,\n\nTechnion - Israel Institute of Technology\nmoshe.idan@technion.ac.il\n\nAbstract. The light-tailed Gaussian paradigm has dominated the foun-\ndation of estimation and control algorithms. However, in many realistic\napplications the system can experience large impulsive noises far more\noften than the Gaussian would admit. In this paper the Cauchy proba-\nbility density function (pdf) is used to develop a new class of estimation\nand control algorithms. First, the scalar Cauchy estimation problem is\naddressed which entails the generation of the state pdf conditioned on\nthe measurement history. Next, based on this Cauchy conditional pdf,\na model predictive optimal controller is developed. Finally, the vector\nstated estimator is derived by recursively propagating the characteris-\ntic function of the unnormalized conditional pdf through measurement\nupdates and dynamic state propagation. The conditional mean and vari-\nance are easily computed from the first and second derivatives of this\ncharacteristic function.\n\nKeywords: Estimation, Stochastic control, Optimal Controller Synthe-\nsis for Systems with Uncertainties, Heavy-Tailed Distributions.\n\n1 Introduction\n\nThe Gaussian paradigm has dominated the foundation of estimation and control\nalgorithms for over fifty years. These algorithms were developed for linear system\nmodels that assume additive Gaussian noises. They extended classical control\nsystem design from single-input/single-output using frequency domain analysis\nto multi-inpt/multi-output systems based on state space formulations. State\nspace methods produced general estimation and control algorithms such as the\nKalman filters, the linear-quadratic-Gaussian (LQG or H2) controller, and the\nlinear-exponential-Gaussian (LEG or H?) controller [6]. The Kalman filter is\noptimal only for Gauss-Markov processes, where the filter gains operate linearly\non the residuals. The LQG and LEG controllers operate on a state estimate or\nthe worst case state estimate, respectively, leading to a linear controllers with\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 95\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_6\n\n\n\n96 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\nrespect to the measurements. These controllers assume Gaussian uncertainty\nand noises where most of the probability is concentrated near the mean.\n\nHowever, in many realistic applications, i.e., radar and sonar measurements,\natmospheric turbulence, adversarial motion effecting missile guidance, or abrupt\nchanges in financial markets, the system experiences large impulsive noise far\nmore often then the light-tailed Gaussian would admit [10]. As a result these\ncontrollers track impulsive noise inputs, be it process or measurement noise,\nleading to large deterioration in performance. To mitigate these effects, ad hoc\nprocedures are introduced into the algorithms which may help, but sometimes\ninduce even poorer performance.\n\nIn this work, the Cauchy probability density function (pdf) is suggested to\nmodel the system uncertainty, hence leading to the development of a new class\nof estimation and control algorithms. Heavy-tailed pdfs capture physical phe-\nnomena with a more impulsive character [11]. The Cauchy pdf is a member of\na class of heavy-tailed distributions that are represented by their characteristic\nfunctions, called symmetric ?-stable distributions (or sub-Gaussian). The char-\nacteristic function for the symmetric ?-stable distributions [5], in its simplest\nform, is ?(?) = exp(???|?|?). For ? = 2, the characteristic function represents\nthe Gaussian, for ? = 1 it represents the Cauchy pdf. The pdf can be expressed\nin closed form only for ? = .5, 1, 2, and can be shown to have an infinite vari-\nance for ? ? (0, 2). This paper summarized the results we have attained in the\narea of estimation and control of dynamic linear discrete systems with additive\nCauchy noises.\n\nThe paper is structured as follows. In section 2 we formulate the scalar dy-\nnamic estimation problem. The scalar Cauchy estimator is derived in sections 3\nand 4. Comparing the Cauchy solution to the Gaussian reveals interesting dif-\nferences between them. [2]. A Cauchy model-predictive controller (MPC) based\non the conditional pdf of a scalar state [8] is presented in section 5. In its sim-\nplest form, when addressing a single measurement and a one-step prediction, this\ncontrollers exhibits a nonlinear behavior in strong contrast to the linear Gaus-\nsian controller. Then, in the multi-stage formulation, the advantage of Cauchy\ncontroller is demonstrated when handling impulsive measurement noise, outper-\nforming the linear Gaussian model-predictive controller. The vector state esti-\nmation problem is addressed in section 6. This solution is based on propagating\nthe characteristic function of the unnormalized conditional pdf [3]. Numerical\nresults for the two-state problem is given and contrasted with an equivalent\nGaussian estimator [9]. Conclusions and future research directions are offered in\nsection 7.\n\n2 Scalar Estimation Problem Formulation\n\nConsider the discrete-time scalar linear dynamic system\n\nxk+1 = ?xk + ?uk + wk (1)\n\nzk = Hxk + vk (2)\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 97\n\nwhere xk is the scalar state, zk is the measurement, ?, ?, H are know parameters,\nuk is the scalar control, wk is the process noise and vk is the measurement noise.\nThe system uncertainties are assumed to be characterized by Cauchy pdfs\n\nfX1\n(\nx1\n)\n=\n\n?/?(\nx1 ? x?1\n\n)2\n+ ?2\n\n, (3)\n\nfWk\n(\nwk\n\n)\n=\n\n?/?\n\nw2k + ?\n2 , fVk\n\n(\nvk\n)\n=\n\n?/?\n\nv2k + ?\n2 , (4)\n\nwhere the parameters x1, ?, ?, ? are given.\nTo compare Cauchy and Gaussian pdfs a least square fit is made between\n\nCauchy and Gaussian,\n\nfGX (x) =\n1?\n2??\n\ne?\nx2\n\n2?2 , fCX (x) =\n?/?\n\nx2 + ?2\n(5)\n\nwith the result that the parameters are related as ? ? 1.4?. The least square\nfit is shown in Fig. 1 where the heavy tail of the Cauchy pdf is to be contrasted\nwith the light tail of the Gaussian pdf.\n\n?1 ?0.5 0 0.5 1\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n \n\n \nCauchy\nGaussian\n\nFig. 1. Least square fit between Cauchy and Gaussian pdfs\n\nOur objective is to find the conditional mean of the system state given the\nmeasurement history yk = {z1, z2, \u00b7 \u00b7 \u00b7 , zk} or equivalently, the minimum\nconditional-variance estimator\n\nx?(k) = E[xk|yk ] , (6)\n\nwhere E[\u00b7] denotes the expectation operator.\n\n\n\n98 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\n3 One Step Measurement and Time Update\n\nFirst the pdf conditioned on a single measurement is obtained. Then, this condi-\ntional pdf is propagated to the next time step. It is then observed that a similar\nstructure can be associated with these pdfs. This notion is used to generate the\npdf conditioned on the measurement history at any time step k.\n\n3.1 Measurement Update\n\nFrom the measurement equation at k = 1\n\nz1 = Hx1 + v1 (7)\n\nthe conditional mean x?1 = E\n[\nx1|z1\n\n]\nis to be determined. The conditional pdf is\n\nobtained by Bayes\u2019 rule as\n\nfX1|Z1\n(\nx1|z1\n\n)\n=\n\nfX1,Z1\n(\nx1, z1\n\n)\nfZ1\n\n(\nz1\n) . (8)\n\nSince z1 is known, fZ1\n(\nz1\n)\nis also known and the joint pdf, referred to as the\n\nun-normalized conditional pdf, is\n\nfX1,Z1\n(\nx1, z1\n\n)\n= fX1\n\n(\nx1\n)\nfV1\n\n(\nz1 ?Hx1\n\n)\n. (9)\n\nBy integrating over x1, the marginal pdf is computed analytically to be\n\nfZ1\n(\nz1\n)\n=\n\n(|H |?+ ?) /?(\nz1 ?Hx?1\n\n)2\n+\n(|H |?+ ?)2 . (10)\n\nThen, the conditional pdf becomes\n\nfX1|Z1\n(\nx1|z1\n\n)\n=\n\n??/?\n\n|H |?+ ?\n\n(\nz1 ?Hx?1\n\n)2\n+\n(|H |?+ ?)2[(\n\nx1 ? x?1\n)2\n\n+ ?2\n] [(\n\nz1 ?Hx1\n)2\n\n+ ?2\n] , (11)\n\nwhere the denominator is a quartic in x1. Therefore, even though the a priori\ndensities have infinite moments, this conditional pdf has two computable mo-\nments, E\n\n[\nx1|z1\n\n]\nand E\n\n[\nx21|z1\n\n]\n. After some manipulations, the conditional mean\n\nis found to be a linear function of the measurement as\n\nx?1 = E [x1|z1] = x?1 + ? sign(H)|H |?+ ?\n(\nz1 ?Hx?1\n\n)\n. (12)\n\nThe conditional error variance is found to be a quadratic function of the mea-\nsurement as\n\nE\n[\nx?21|z1\n\n]\n=\n\n??\n\n|H |\n\n[(\nz1 ?Hx?1\n\n)2\n(|H |?+ ?)2 + 1\n\n]\n, (13)\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 99\n\nwhere x?1 = x1 ? x?1. The conditional variance being measurement dependant\nshould be contrasted with the conditional variance for Gaussian pdf, which does\nnot depend on the measurement and is known a priori.\n\nFor numerical values ? = 3, x?1 = 5, H = 2, ? = 5, and z1 = ?3, the initial\nstate, measurement noise, and measurement updated pdfs are depicted in Fig.\n2. Shown also are the the estimate, x?1 = 1.45, and the estimation error standard\ndeviation,\n\n?\nE[x?21|z1] = 4.24. It is interesting to note that unlike in the Gaussian,\n\nthe conditional pdf is non-symmetric and may even become bimodal when the\ndifference between z1 and Hx?1 is large.\n\n?20 ?15 ?10 ?5 0 5 10 15 20\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n0.12\nx\n\nbar\n = 5\n\n? = 3\n? = 5\nH = 2\nz = ?3\n? = 4.2\n\nf\nX\n\nf\nV\n\nf\nX|Z\n\nx\nbar\n\nz/H\nx\n\nhat\n\n\u00b1 ?\n\nFig. 2. Conditional pdf for one step measurement update\n\n3.2 Time Update\n\nStarting with fX1|Z1\n(\nx1|z1\n\n)\nand the system dynamics\n\nx2 = ?x1 + ?u1 + w1 (14)\n\nthe time updated density fX2|Z1\n(\nx2|z1\n\n)\nis computed using the Chapman-Kol-\n\nmogorov equation\n\nfX2|Z1\n(\nx2|z1\n\n)\n=\n\n??\n??\n\nfX2|X1\n(\nx2|x1\n\n)\nfX1|Z1\n\n(\nx1|z1\n\n)\ndx, (15)\n\nwhere the transition pdf is\n\nfX2|X1\n(\nx2|x1\n\n)\n= fW1\n\n(\nx2 ? ?x1 ? ?u1\n\n)\n.\n\nThe resulting time propagated conditional pdf is\n\nfX2|Z1\n(\nx2|z1\n\n)\n=\n\nA\n(\nx2 ?B\n\n)2\n+ C2[(\n\nx2 ? x?21\n)2\n\n+ ?21\n\n] [(\nx2 ? x?22\n\n)2\n+ ?22\n\n] . (16)\n\n\n\n100 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\nA, B and C are complicated functions of the various system parameters and the\nsignals z1 and u1. Since the exact expressions do not provide valuable information\nor insight, they are not made explicit. Note that this conditional pdf, which is\nreferred to as the a priori conditional pdf, has no computable moments [2].\n\n3.3 Conditional pdf Factorization\n\nThe conditional pdf for the one step measurement update (11) and time prop-\nagation process (16) can be put into factored form by using partial fractions\nas\n\nfX1|Z1\n(\nx1|z1\n\n)\n=\n\na1,1x1 + b1,1(\nx1 ? x?1\n\n)2\n+ ?2\n\n+\na1,2x1 + b1,2(\n\nz1 ?Hx1\n)2\n\n+ ?2\n(17)\n\nfX2|Z1\n(\nx2|z1\n\n)\n=\n\na2,1x2 + b2,1(\nx2 ? x?21\n\n)2\n+ ?21\n\n+\na2,2x2 + b2,2(\n\nx2 ? x?22\n)2\n\n+ ?22\n. (18)\n\nwhere\n\nx?21 = ?x?1 + ?u1 ?1 = |?|?+ ? (19a)\n\nx?22 =\n?\n\nH\nz1 + ?u1 ?2 =\n\n???? ?H\n???? ? + ? (19b)\n\nThe parameters aj,i, bj,i, j = 1, 2, i = 1, 2 can be determined from (11) and (16).\nMotivated by the structure of these rational pdfs, we propose to represent the\nconditional pdf of x at any time step k in a factored form given by\n\nfX(x) =\nN?\ni=1\n\naix+ bi(\nx? ?i\n\n)2\n+ ?2i\n\n, (20)\n\nwhere N is to be explicitly determined in the sequel. Here, for presentation\nsimplicity, in the above we have suppressed the dependance of the state x on the\ntime index k and the fact that this pdf may be a conditional one. The conditions\nfor fX(x) in (20) to be a valid pdf are\n\nN?\ni=1\n\nai = 0, ?\n\nN?\ni=1\n\nai?i + bi\n?i\n\n= 1. (21)\n\nFor the pdf to have a well defined first moment, the condition is\n\nN?\ni=1\n\n(2ai?i + bi) = 0. (22)\n\nThe pdf will have a well defined second moment if\n\nN?\ni=1\n\n[\nai\n(\n3?2i ? ?2i\n\n)\n+ 2bi?i\n\n]\n= 0. (23)\n\nFor details see [2]. Note, it is immediate to verify that these conditions hold for\nthe initial pdf, for which N = 1, a1 = 0, b1 = ?/?, ?1 = x?0, and ?1 = ?.\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 101\n\n4 The General Form of the Cauchy Estimator\n\nBased on the form of (20) motivated by the partial fraction decomposition of\n(17) and (18), we propose to represent the conditional pdf of xk given past data\nyk?1, i.e., before the zk measurement is processed, in a factored form given by\nthe propagated conditional pdf\n\nfXk|Yk?1\n(\nxk|yk?1\n\n)\n=\n\nk+1?\ni=1\n\nai(k|k?1)xk + bi(k|k?1)(\nxk ? ?i(k|k?1)\n\n)2\n+ ?2i (k|k?1)\n\n(24)\n\nwhere yk?1 =\n{\nz1 \u00b7 \u00b7 \u00b7 zk?1\n\n}\n. The linear update formulas for ai(k|k?1) and\n\nbi(k|k?1) are given in [2]. Similarly, for the measurement update, the conditional\npdf of xk given the measurement history yk as\n\nfXk|Yk\n(\nxk|yk\n\n)\n=\n\nk+2?\ni=1\n\nai(k|k)xk + bi(k|k)(\nxk ? ?i(k|k)\n\n)2\n+ ?2i (k|k)\n\n. (25)\n\nNote that the number of terms in the sum increases by one during a measurement\nupdate. The updates for the parameters is ?i(k|k) = ?i(k|k?1), ?i(k|k) =\n?i(k|k?1), i = 1, . . . , k + 1, ?k+2(k|k) = zk/H, ?k+2(k|k) = ?/|H |. Simple,\nlinear expressions for ai(k|k), bi(k|k), i = 1, . . . , k + 2 are given in [2]. The\ndynamic properties of ai(k|k), bi(k|k), i = 1, . . . , k + 2 are used to show the\ndecay of these parameters, and are thereby used to prune terms from the sum.\n\nUsing the conditional pdf of xk given in (25), the conditional mean, conditional\nsecond moment and conditional error variance can be calculated as\n\nE (xk|yk) = x?(k|k) = ?\nk+2?\ni=1\n\nai\n(\n?2i ? ?2i\n\n)\n+ bi?i\n\n?i\n, (26)\n\nE\n(\nx2k|yk\n\n)\n= ?\n\nk+2?\ni=1\n\n(\nai?i + bi\n\n) (\n?2i ? ?2i\n\n)? 2ai?i?2i\n?i\n\n, (27)\n\nE\n(\nx?2k|yk\n\n)\n= E\n\n(\nx2k|yk\n\n)? x?2(k|k). (28)\n4.1 Numerical Example\n\nA numerical example is given with the system data x?1=5, ?=0.5, ?=0.9, ?uk=1,\n?=0.02,H=2, ?=0.1. The Cauchy conditional estimator is first compared with a\nKalman filter when the simulation uses Cauchy noise, as shown in Fig. 3(a). The\nleast square fit of the Gaussian densities with the Cauchy densities produces the\nKalman filter design, i.e., ?x1=1.4?, ?w=1.4?, ?v=1.4?. In the Cauchy simula-\ntion the Cauchy estimator is the exact minimum variance estimator. Even though\nboth filters react to impulsive noise, the Cauchy estimation error reduces very\nrapidly compared to the Gaussian estimator. Note that the Cauchy standard\ndeviation reacts to impulsive noise, whereas the Gaussian error variance is a\npriori known.\n\n\n\n102 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\n0 10 20 30 40 50 60 70\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\nE\n\nst\nim\n\nat\nio\n\nn \nE\n\nrr\nor\n\nStep #\n\nCauchy Error\nCauchy \u00b1 ?\nKalman Error\nKalman \u00b1 ?\n\n(a) Cauchy Noises Simulation\n\n0 10 20 30 40 50 60 70\n?0.2\n\n?0.15\n\n?0.1\n\n?0.05\n\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\nE\nst\n\nim\nat\n\nio\nn \n\nE\nrr\n\nor\n\nStep #\n\nCauchy Error\nCauchy \u00b1 ?\nKalman Error\nKalman \u00b1 ?\n\n(b) Gaussian Noises Simulation\n\nFig. 3. Performance of the Cauchy and Gausian estimators\n\nThe Cauchy conditional estimator is compared with a Kalman filter when the\nsimulation uses Gaussian noise, as shown in Fig. 3(b). Both estimators perform\nin a very similar manner. Furthermore, even though the standard deviation for\nthe cauchy estimator is a bit ragged in response to the measurement and process\nnoise sequence, it closely upper bounds the Gaussian standard deviation, which\nis optimum for the Gaussian simulation.\n\nAs was shown in section 4, the number of terms representing the conditional\npdf of interest is constantly growing. This may cause numerical difficulties. It\nis shown in [2] that the linear update formulas for ai(k|k?1) and bi(k|k?1) are\nexponentially convergent in k for a constant i. When ai(k|k?1) and bi(k|k?1)\nbecome sufficiently small, their associate term can be removed from the sum in\n(25), thus enabling a low order approximation of the conditional pdf representa-\ntion. Simulation results carried out with such truncation are practically identical\nto those presented earlier. The number of terms used in the truncated sum for\nthe conditional pdf is plotted in Fig. 4, showing that they are fluctuating slightly\naround the values of 18 and 10 for the two truncation cases examined. Most im-\nportantly it was demonstrated that the difference between the estimation results\nattained with the non-truncated and truncated pdfs, i.e., numerical truncation\nerrors, do not increase with time. Hence, using such truncations allows propa-\ngating the Cauchy estimator for any number of steps while keeping the number\nof terms in the pdf sum nearly constant.\n\n5 Stochastic Control Problem for Cauchy Uncertainties\n\nIn this section a stochastic control problem is formulated and a controller de-\nveloped for a scalar linear system with additive Cauchy noise. The performance\nindex is chosen so that the unconditional expectation remains finite so it can be\ndetermined a priori. Since expectation and minimization can be interchanged,\nthe conditional expectation of the performance index is minimized. This expec-\ntation is found in closed-form using the conditional pdf of (25). However, the\nconditional expectation of the performance index is a complicated function of\nthe control and does not lend itself to a dynamic programming solution. There-\nfore, a model predictive controller (MPC) is proposed which has sub-optimal\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 103\n\n0 10 20 30 40 50 60 70\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\nStep #\n\nN\num\n\nbe\nr \n\nof\n p\n\ndf\n T\n\ner\nm\n\ns\n\nNo Truncation\n\nTruncation 10?10\n\nTruncation 10?5\n\nFig. 4. Cauchy Noises - Decay of pdf Sum Elements\n\nperformance. For zero mean noises and initial uncertainty, the performance of\nthis controller is similar to the linear-exponential-Gaussian MPC when the mea-\nsurements are small and dramatically different when the measurements are large.\n\n5.1 Deterministic-Stochastic Decomposition of the State Dynamics\n\nFor the control problem, we consider the dynamic scalar stochastic system\n\nxk = ?xk?1 + uk?1 + wk?1 (29)\nzk = Hxk + vk (30)\n\nwith measurement history\nyk = {z1, . . . , zk}. (31)\n\nTo simplify the subsequent derivations, the system dynamics is decomposed into\na dynamic system forced by the control and a dynamic system forced by the\nunderlying random variables. Given this decomposition, we show that the control\nhas to be adaptive to only the ?-algebra generated by the measurement history\nassociated with the stochastic part of the state decomposition.\n\nConsider the linear, discrete-time, scalar stochastic system of (29) with the\nmeasurement history given by (31). Let uk be adaptive to the filtration ?-algebra\n?k generated by the measurement history zk. Filtration implies that the collec-\ntion of ?-algebras ?k have the property that if j ? k, then ?j ? ?k [1]. Therefore,\nfiltration is the evolution of the ?-algebra generated by measurement history\nthrough time. Adaptation means that the control is a measurable function of\nevents on this ?-algebra, i.e., this ensures that the control sequence is causal.\nNow consider the decomposition xk = x?k + x?k where\n\nx?k = ?x?k?1 + wk?1, z?k = Hx?k + vk, (32a)\nx?k = ?x?k?1 + uk?1, z?k = Hx?k. (32b)\n\n\n\n104 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\nHere, x?k and z?k are the state and the measurement of the subsystem containing\nall the underlying random variables, i.e., wk, vk, with pdfs given in (4), and the\ninitial condition x?0 that is Cauchy distributed with zero median, i.e.,\n\nfX1\n(\nx?1\n)\n=\n\n?/?\n\nx?21 + ?\n2 . (33)\n\nSimilarly, x?k and z?k are the state and measurement of a dynamic system driven\nby uk with initial condition x?1.\n\nThe measurement history can be decomposed as yk = y?k + y?k where\n\ny?k = {z?1, \u00b7 \u00b7 \u00b7 , z?k}, y?k = {z?1, \u00b7 \u00b7 \u00b7 , z?k}. (34)\n\nIn the following it is shown that the control is measurable on events generated\nby y?k only.\n\nTheorem 1. Consider the filtration ? ? algebra ??k generated by y?k, with the\ndecomposition yk = y?k + y?k. For y?k ? ??k and ??k?1 ? ??k, y?k is adapted to ??k?1\nand uk is adapted to ??k.\n\nProof. Start with k = 1. The initial state is decomposed as x1 = x?1+x?1, where x?1\nis a given non-random parameter. The measurement decomposes as z1 = z?1+ z?1,\nwhere z?1 = Hx?1 is a given non-random parameter and z?1 = y?1 ? ??1. Then, u1,\nwhich is determined by z1, is adapted to ??1. At k = 2, both x?2 = ?x?1 + u1 and\nz?2 = Hx?2 are adapted to ??1, and thus y?2 is adapted to ??1. For the measurement\nat k = 2, z?2 ? ??2, y?2 ? ??2, and ??1 ? ??2. Hence, since u2 is determined by\ny2 = y?2 + y?2, it is adapted to ??2. Recursively to any k, y?k is adapted to ??k?1.\nWith y?k ? ??k, and ??k?1 ? ??k, uk that is determined by yk = y?k + y?k is adapted\nto ??k.\n\n5.2 Performance Index\n\nAssuming the expectation is finite, the optimal value of the performance index\nis stated as\n\nJ? = max\nUp?1k ?F\n\nE\n[\n?\n(\nX pk+1,Up?1k\n\n)]\n= E\n\n[\nmax\n\nUp?1k ?F\nE\n[\n?\n(\nX pk+1,Up?1k\n\n)??? y?k\n]]\n\n(35)\n\nwhere F is the class of feedback open-loop control functions of y?k adapted to\n??k. The state history X pk+1 and control history Up?1k are defined as\n\nX pk+1 := {xk+1, . . . , xpk}, (36)\nUp?1k := {uk, . . . , up?1}, Up?1k ? F , (37)\n\nwhere k is the current time, and p = k + m so that m is the size of a moving\nhorizon. In (35) the expectation and maximization operations are interchanged\ndue to the Fundamental Lemma [6].\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 105\n\nSince the expectation is taken over all underlying random variables, for a\nviable performance index this expectation must remain finite in the presence of\nthe heavy tailed Cauchy densities. Hence, the cost function ?(\u00b7) in (35) is chosen\nto have the form\n\n?\n(\nX pk+1,Up?1k\n\n)\n=\n\np?1?\ni=k\n\n[\n?2i+1\n\nx2i+1 + ?\n2\ni+1\n\n\u00b7 ?\n2\ni\n\nu2i + ?\n2\ni\n\n]\n. (38)\n\nWhen the expectation is taken over Gaussian underlying random variables, the\ncost function is assumed to be of an exponential form\n\n?\n(\nX pk+1,Up?1k\n\n)\n=\n\np?1?\ni=k\n\n[\ne ? 12qi+1x2i+1 \u00b7 e ? 12riu2i\n\n]\n. (39)\n\nThe resulting controller is referred to as Linear Exponential Gaussian (LEG)\nMPC [7].\n\nThe expectation E\n[\n?\n(\nX pk+1,Up?1k\n\n)??? y?k\n]\nin (35) is taken with respect to the\n\nconditional joint pdf fX?p\u00b7\u00b7\u00b7X?k+1|Y?k\n(\nx?p, . . . , x?k+1|y?k\n\n)\n, which is the extension of\n\nthe conditional density of (24). It includes the projected states influenced by the\nprocess noise as [8]\n\nfX?p\u00b7\u00b7\u00b7X?k+1|Y?k\n\n(\nx?p, . . . , x?k+1|Y?k\n\n)\n\n= fX?p|X?p?1\n(\nx?p|x?p?1\n\n)\nfX?p?1|X?p?2\n\n(\nx?p?1|x?p?2\n\n) \u00b7 \u00b7 \u00b7\nfX?k+2|X?k+1\n\n(\nx?k+2|x?k+1\n\n)\nfX?k+1|Y?k\n\n(\nx?k+1|y?k\n\n)\n. (40)\n\nIn the above, the transition pdf is given by\n\nfX?j+1|X?j\n(\nx?j+1|x?j\n\n)\n=\n\n?/?\n\n(x?j+1 ? ?x?j)2 + ?2 . (41)\n\n5.3 Cauchy Model Predictive Controller\n\nThe m-step optimal multi-step predictive controller is formed by determining\nthe optimal open-loop control sequence over the interval k to p ? 1 given the\nmeasurement history y?k and using only the optimal control value at time stage k.\nThis process is repeated at each time stage. To do this, the optimal performance\nindex J?y?k is evaluated as\n\nJ?y?k = maxUp?1k ?F\nE\n[\n?\n(\nX pk+1,Up?1k\n\n)??? y?k\n]\n= max\n\nUp?1k ?F\nE\n\n[\np?1?\ni=k\n\nMx(xi+1)Mu(ui)\n\n????? y?k\n]\n\n= max\nUp?1k ?F\n\n??\n??\n\n\u00b7 \u00b7 \u00b7\n??\n\n??\n\np?1?\ni=k\n\nMx(xi+1)Mu(ui)\n\n\u00d7 fX?p\u00b7\u00b7\u00b7X?k+1|Y?k\n(\nx?p, . . . , x?k+1|y?k\n\n)\ndx?p, . . . , dx?k+1, (42)\n\n\n\n106 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\nwhere fX?p\u00b7\u00b7\u00b7X?k+1|Y?k\n(\nx?p, . . . , x?k+1|y?k\n\n)\nis given by (40). Currently, results are given\n\nfor the case where only the terminal state is weighted in the performance index,\ni.e.\n\nJ?y?k = maxUp?1k ?F\n\np?1?\ni=k\n\n?2i\nu2i + ?\n\n2\ni\n\n??\n??\n\n?2p\nx2p + ?\n\n2\np\n\nfX?p|Y?k\n(\nx?p|y?k\n\n)\ndx?p\n\n= max\nUp?1k ?F\n\np?1?\ni=k\n\n?2i\nu2i + ?\n\n2\ni\n\n\u00b7 ?p?\nk+2?\ni=1\n\n1\n\n?i\n\nai(x?p + ?i)?p + (bi ? aix?p)(?p + ?i)\n(x?p + ?i)2 + (?p + ?i)2\n\n, (43)\n\nwhere\n\nx?p = ?\nmx?k +\n\nm?\ni=1\n\n?m?1?uk+i?1. (44)\n\nThe maximum value of the performance index in (43) uses explicitly the condi-\ntional pdf in the expectation operation. The optimization of the analytic function\nin (43), which is not concave, must be done numerically.\n\n5.4 LEG Model Predictive Control\n\nTo compare the common Gaussian controller approach with the results of the\nCauchy controller, the LEG controller is presented [6]. The objective is to max-\nimize the expected value of an exponential cost\n\nJ?G = E\n\n[\nmax\n\nUp?1k ?F\nE\n[\ne?\n\n1\n2 (qpx\n\n2\np+\n\n?p?1\ni=k riu\n\n2\ni )\n??? y?k\n\n]]\n, (45)\n\nwhere the expectation is taken with respect to the Gaussian conditional density\nwith conditional mean and variance\n\nx?k = x?k + PkH/V (zk ?Hx?k), Pk = VMk\nV +H2Mk\n\n. (46)\n\nand propagated to time p from time k using\n\nx?k+1 = ?x?k + uk, Mk+1 = ?\n2Pk +W. (47)\n\nThe LEG controller from [6] is\n\nu?k = ?\nSk+1?\n\nSk+1 + rk + Sk+1rkMk+1\nx?k, Si =\n\nSi+1ri?\n2\n\nSi+1 + ri + Si+1riW\n, Sp = qp.\n\n(48)\nAs stated earlier, the least square fit of the Gaussian and the Cauchy pdf yield\na linear relation between the standard deviation of the Gaussian and the scale\nparameter of the Cauchy. This linear relation relates also the parameters in the\ncost function.\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 107\n\n5.5 Numerical Examples\n\nTo obtain insight into the properties of the Cauchy stochastic controller, the\none-step one-measurement example is first analyzed. Then the multi-step nu-\nmerical simulation results are given, which illustrate the behavior of the Cauchy\ncontrollers in the presence of dominate Cauchy measurement noise and then\ndominant Cauchy process noise.\n\nOne-Step One-Measurement Example. The value of the optimal control\nsignal at k = 1, i.e., u?1, as a function of the first measurement z1, is determined.\nSpecifically, we examine the value of the optimal control signal at k = 1, i.e.,\nu?1(z1), as a function of the first measurement z?1, that varies due to the mea-\nsurement noise v1 [7], while considering the one step horizon, i.e., m = 1. The\nparameters for the system and Cauchy signals are first chosen as\n\n? = 1, H = 1, ? = 0.1, ? = 0.02, ? = 0.5, x?1 = 0. (49)\n\nInitially, no penalty is introduced on the control signal, i.e., the term ?21/(u\n2\n1+?\n\n2\n1 )\n\nis removed from the objective function in (43), i.e. ?1 ? ? while the state at\nk = 2 is weighted with ?2 = 0.7. Substituting these parameters into (43), the\nperformance index becomes\n\nJ?y?1 =\n0.1148(4.1667z21 ? 1.0163u1z1 + 1)\n\n(z21 + 0.16)(u\n2\n1 + 0.6724)\n\n+\n0.03416(7.5820z21 + 3.4153u1z1 ? 1)\n\n(z21 + 0.16) ((u1 + z1)\n2 + 1.22)\n\n(50)\nThe optimal controller can be obtained by minimizing (50) with respect to u1.\nThe necessary optimality condition, ?J?y?1/?u1 = 0, reduces to finding the roots\nof the fifth-order polynomial\n\nl5u\n5\n1 + l4u\n\n4\n1 + l3u\n\n3\n1 + l2u\n\n2\n1 + l1u1 + l0 = 0, (51)\n\nwhere\n\nl5 = 1, l4 = 3.5z1, l3 = (5.2315z\n2\n1 + 3.6681), l2 = (3.6806z\n\n2\n1 + 6.6305)z1,\n\nl1 = (0.9491z\n4\n1 + 3.2124z\n\n2\n1 + 2.9623), l0 = (0.07782z\n\n2\n1 + 0.3992)z1. (52)\n\nThis polynomial always has at least one real root. If three roots are real, then\nthere are two local maximum values and the larger of the two gives the optimal\ncontrol.\n\nSolving the polynomial numerically, the optimal control signal is plotted\nversus the measurement z?1 in Fig. 5(a) for ?1 = ? as well with weighting\n?1 = 1, 2, 3 and ? > ?. Also included is the LEG controller where u\n\n?\n1 = ?x?1,\n\ni.e., it is linear in z?1 (see [7] for details of the LEG model predictive controller).\nThe Cauchy controller in Fig. 5(a) for large z?1 goes toward zero. This is in sharp\ncontrast with the LEG controller, which remains linear in the measurement. This\nis a significant difference in behavior between the Cauchy and Gaussian optimal\ncontrollers that can be deduced analytically from (51). If u?1(z?1) is finite, the\n\n\n\n108 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\ndominant term in (51) as |z?1| ? ? is l1u?1(?), or lim|z?1|?? u?1(z?1) ? 0. There-\nfore, the problem of handling outliers, which occur for the Cauchy pdf, appears\nto be resolved by the Cauchy controller explicitly, and not in some filter as has\nbeen done traditionally. Note that the controller design process explicitly uses\nthe parameters ? and ?, and thus their relative size ? > ?, i.e., it should expect\nmore impulsive measurement uncertainty than process uncertainty. If ? < ?,\nthe Cauchy controller behaves approximately like the LEG linear controller in\nFig. 5(b), i.e., it expects more impulsive process uncertainty than measurement\nuncertainty. The effect of reducing ?1 from ? to 2 has a small effect on the\ncontrol strategy, as is clearly seen in Figs. 5.\n\n?10 ?5 0 5 10\n\n?0.05\n\n0\n\n0.05\n\nu\n? 1\n\nz?1\n\n \n\n \n?1 =?\n?1 = 3\n?1 = 2\n?1 = 1\n\n(a) ? = 0.1, ? = 0.02, ? = 0.5, ?2 = 0.7\n\n?30 ?20 ?10 0 10 20 30\n?30\n\n?20\n\n?10\n\n0\n\n10\n\n20\n\n30\n\nu\n? 1\n\nz?1\n\n \n\n \n?1 =?\n?1 = 4\n?1 = 3\n?1 = 2\n\n(b) ? = 0.5, ? = 0.02, ? = 0.1, ?2 = 0.7\n\nFig. 5. Scalar Cauchy (solid line) and Gaussian (dashed line) one-step controllers with\nparameters variations in ?1\n\n5.6 Multi-step Numerical Examples\n\nThe dynamic characteristics of the Cauchy optimal controller, obtained by max-\nimizing the performance index in (43), are explored through several multi-step\nnumerical examples. The Cauchy optimal control results are compared against\nthe least-squares equivalent LEG controller, obtained from (48), and the Kalman\nfilter from (46). The example that is discussed in this section is a stable system\nwith ? = 0.95, H = 1, and a horizon length of m = 2. The state weight pa-\nrameter is chosen as ?p = ?k+2 = 0.7, while the control weights are chosen as\n?i = 8, i = k, k+1. The noise parameter values ? and ? are interchanged to see\nhow the controller performance changes when it is designed for a large measure-\nment noise impulse in contrast to when it is designed for a large process noise\nimpulse. The values used are ? = 0.1, ? = 0.02 or ? = 0.02, ? = 0.1, while the\ninitial condition parameters are ? = 0.5 and x?1 = 0. Substituting these param-\neters into (43), the performance index is maximized numerically with respect to\nthe control at each time using a homotopy optimization method.\n\nThe simulations results are depicted in Figs. 6. First, for ? = 0.1 and ? =\n.02, depicted in Fig. 6(a) when the noises are small, the Cauchy and the LEG\ncontrollers exhibit similar performance. However, they behave rather differently\nwhen a large measurement pulse occurs. A measurement noise pulse does not\nrepresent a state deviation and thus, for proper regulation, the controller should\nignore that measurement. The Cauchy predictive controller, designed for ? > ?,\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 109\n\nis able to make this distinction, whereas the LEG predictive controller reacts\nlinearly to all the pulses and does not differentiate as shown in Fig. 6(a). At time\nsteps k = 2 and k = 13 process noise pulses occur, and although both controllers\nreact to them and are able to overcome this deviation, the Cauchy controller does\nso much quicker than the LEG by applying a much larger control effort. The\nCauchy applies a larger control because its gain for small measurement values are\nhigher than that of the LEG. Conversely, when a large measurement pulse occurs\nat k = 51, the Cauchy controller ignores it, applying almost zero control, whereas\nthe LEG controller applies a very large control input that causes the state to\ndeviate away from zero, which then required additional control effort to correct.\nThis way the Cauchy controller manages to avoid unnecessary actuation and thus\nmaintains the system performance. When ? < ?, the behavior of the Cauchy\nand LEG controllers are similar, as is shown in Fig. 6(b). This demonstrates the\nsame linear behavior as was seen in Fig. 5(b).\n\n?4\n\n?2\n\n0\n\n2\n\nx\n\nCauchy\n\nLEG\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\nu\n?\n\n?5\n\n0\n\n5\n\nw\n\n0 20 40 60 80 100\n?20\n\n0\n\n20\n\nTime Steps (k)\n\nv\n\n(a) ? = 0.5, ? = 0.02, ? = 0.1,\n? = 0.95, ?2 = 0.7, ?1 = 8\n\n?15\n\n?10\n\n?5\n\n0\n\n5\n\n10\n\nx\n\nCauchy\n\nLEG\n\n?5\n\n0\n\n5\n\n10\n\nu\n?\n\n?20\n\n0\n\n20\n\nw\n\n0 20 40 60 80 100\n?5\n\n0\n\n5\n\nTime Steps (k)\n\nv\n\n(b) ? = 0.5, ? = 0.1, ? = 0.02,\n? = 0.95, ?2 = 0.7, ?1 = 8\n\nFig. 6. 2-step Cauchy and Gaussian controllers with ? and ? parameters interchanged\n\n6 Vector-State Cauchy Estimation\n\nSo far we have only considered scalar dynamic systems. When addressing mul-\ntivariable systems, the pdf method cannot be used, mainly because the partial\nfraction expansions utilized in the scalar case do not apply here. To overcome this\n\n\n\n110 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\ndifficulty, for the multivariable system case we recursively generate the charac-\nteristic function of the unnormalized conditional pdf, from which the conditional\nmean and conditional error variance can be recovered. In this section we sum-\nmarize our current efforts in vector-state cauchy estimation.\n\n6.1 Formulation\n\nThe single-input single output multivariable linear dynamic system is\n\nxk+1 = ?xk + ?wk, zk = Hxk + vk, (53)\n\nwhere the state vector xk ? Rn, scalar measurement zk, and known matrices\n? ? Rn\u00d7n, ? ? Rn\u00d71, and H ? R1\u00d7n. The noise inputs are assumed to be\nindependent with know Cauchy pdf given in (4). The characteristic functions of\nthese scalar noises are assumed to be time independent and given by\n\n?W\n(\n??\n)\n= e??|??|, ?V\n\n(\n??\n)\n= e??|??|, (54)\n\nwhere these characteristic functions have a scalar argument ??. The initial con-\nditions at k = 1 are also assumed to be independent and Cauchy distributed.\nSpecifically, each i-th element x1i of the initial state vector x1 has a Cauchy pdf\nwith a zero median and a scaling parameter ?i > 0, i = 1, . . . , n. The charac-\nteristic function of the joint pdf of the initial conditions, which is a function of\na n-dimensional spectral variable ? ? Rn, is given by\n\n?X1\n(\n?\n)\n=\n\nn?\ni=1\n\ne??i|?i| = exp\n\n(\n?\n\nn?\ni=1\n\n?i|?i|\n)\n\n? exp\n[(\n\n?\nn?\n\ni=1\n\np1i |?a1i , ??|\n)\n\n+ j?b11, ??\n]\n. (55)\n\nThe last form was introduced for notational convenience to be used in the sequel.\nWe used the definitions\n\np1i = ?i, a\n1\ni = ei, i = 1, . . . , n, b\n\n1\n1 = {0}n, (56)\n\nwhere ei is a n-dimensional i-th unity vector and {0}n is n-dimensional vector\nof zeros.\n\n6.2 Characteristic Function for the Un-normalized Conditional pdf\n\nOur goal is to compute the minimum variance estimate of xk given the measure-\nment measurement history or yk =\n\n{\nz1 z2 \u00b7 \u00b7 \u00b7 zk\n\n}\n[4]. We begin by determining\n\nthe characteristic function for the un-normalized conditional pdf at k = 1, where\nthe conditional pdf at k = 1 is\n\nfX1|Z1\n(\nx1|z1\n\n)\n=\n\nfX1Z1\n(\nx1, z1\n\n)\nfZ1\n\n(\nz1\n)\n\n=\nfZ1|X1\n\n(\nz1|x1\n\n)\nfX1\n\n(\nx1\n)\n\nfZ1\n(\nz1\n) = fV\n\n(\nz1 ?Hx1\n\n)\nfX1\n\n(\nx1\n)\n\nfZ1\n(\nz1\n) . (57)\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 111\n\nThe unnormalized conditional pdf (ucpdf) at k = 1 is simply the joint pdf of\nthe vector state and scalar measurement as\n\nfX1Z1(x1, z1) = fZ1|X1(z1|x1)fX1(x1) = fV (z1 ?Hx1)fX1(x1). (58)\nThe characteristic function of the ucpdf is obtained as\n\n??X1|Z1(?) =\n? ?\n??\n\n\u00b7 \u00b7 \u00b7\n? ?\n??\n\nfX1(x1)fV (z1 ?Hx1)ejx\nT\n1 ?dx1\n\n=\n1\n\n(2?)n\n\n? ?\n??\n\n\u00b7 \u00b7 \u00b7\n? ?\n??\n\n?X1(? ? ?)??V (?)d?. (59)\n\nThe first integral is a Fourier transform of a product of two functions. Using the\ndual convolution property, the second integral is a convolution in the ? domain\nbetween the associated characteristic functions ?X1 (?) given in (55) and ??V (?),\nthe characteristic function of fZ1|X1(z1|x1) = fV (z1 ?Hx1) determined as [4]\n\n??V (?) =\n\n? ?\n??\n\n\u00b7 \u00b7 \u00b7\n? ?\n??\n\nfV (z1 ?Hx1)ejxT1 ?dx1\n\n= K(?)?V (? e\nT\nn?\n\nHen\n)\n\nn?1?\ni=1\n\n2??(eiPn?), (60)\n\nwhere Hen ?= 0, Pn = I ? H\nT eTn\n\nHen\n, K(?) = exp\n\n(\njz1e\n\nT\nn?\n\nHen\n\n)\n, and ?V\n\n(\n? e\n\nT\nn?\n\nHen\n\n)\n=\n\nexp\n\n(\n??\n\n???? e\nT\nn?\n\nHen\n\n????\n)\n. Substitution of the n ? 1 delta functions of (60) into (59)\n\nreduces the n integrals to one as\n\n??X1|Z1(?) =\n1\n\n2?\n\n? ?\n??\n\n?X1 (? ?HT?)?V (??)ejz1?d?\n\n=\n1\n\n2?\n\n? ?\n??\n\n?X1(? ?HT?)?V (??)ejz1?d?, (61)\n\nwhere ?V (??) = e??|?|.\nThe convolution integral in (61) is solved in closed form. Here we assume that\n\neach element in H is non-zero, i. e., Hei ?= 0, i = {1, . . . , n}. (See [4] regarding\nrelaxing this condition.) To compute the integral, we define ?i = ?i|Hei|, ?i =\neTi ?/Hei, i = {1, . . . , n}, ?n+1 = ?, ?n+1 = 0. The convolution integral\nbecomes\n\n??X1|Z1(?) =\n1\n\n2?\n\n? ?\n??\n\ne?\n?n+1\n\ni=1 ?i|?i??|+jz1?d?. (62)\n\nTo carry out the integration, assume that there exists an arbitrary ? for which\nthe ?is are ordered as ??(?) ? ?i(?) for all ? ? i with (?, i) ? {1, . . . , n+1}. The\nconvolution integral (62) can be decomposed into a sum as\n\n\n\n112 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\n??X1|Z1(?) =\n1\n\n2?\n\nn?\n?=0\n\n? ??+1\n??\n\ne?\n?n+1\n\ni=1 ?i|?i??|+jz1?d?\n\n=\n1\n\n2?\n\nn?\n?=0\n\n? ??+1\n??\n\ne?\n?n+1\n\ni=1 ?i(?i??) sign(?i??)+jz1?d?\n\nwhere ?0 = ?? and ?n+1 = ?. Note that sign(?? ? ?) is constant over the\ninterval ? ? (?i, ?i+1), ?i. Therefore, we can define the sign function as\n\nsign(?? ? ?) ? s?i =\n{\n\nsign(?? ? ?i) if i ?= ?\n?1 if i = ?\n\nFor a given i, the discrete, two-indexed function s?i is constant for all ? except\nfor one switch at ? = i, i.e., s?i = ?1 ? ? ? i and s?i = 1 ? ? > i. Since ?i can\nbe ordered for any value of ?, the solution to the integral is independent of the\nvalue assumed for ?.\n\nThe closed-form solution to the convolution integral for the characteristic\nfunction of the unnormalized conditional density function, ??X1/Z1 (?), is\n\n??X1/Z1(?) =\n1\n\n2?\n\nn+1?\n?=1\n\ng\n1|1\ni (y\n\n1|1\ngi (?))e\n\ny\n1|1\nei (?), (63)\n\nwhere\n\ng\n1|1\ni (y\n\n1|1\ngi (?)) =\n\n[\n1\n\njz1 + ?? + y\n1|1\ngi (?)\n\n? 1\njz1 ? ?? + y1|1gi (?)\n\n]\n(64)\n\nand\n\ny\n1|1\ngi (?) =\n\nn+1?\ni=1\ni?=?\n\n?i sign(?i ? ??), y1|1ei (?) = ?\nn+1?\ni=1\ni?=?\n\n?i|?i ? ??|+ jz1??. (65)\n\nThe first two derivatives of ??X1/Z1(?) can be shown to be continuous. For conti-\nnuity of the first derivative of ??X1|Z1(?) in (61), a piecewise continuous function\nis convolved with a continuous function. For continuity of the second derivative\nof ??X1|Z1(?) in (61), two piecewise continuous functions are convolved.\n\n6.3 Conditional Mean and Variance\n\nThe conditional mean and variance are computed by evaluating ??X1/Z1 (?) and\nits first two derivatives at ? = {0}n or alternatively as ? ? {0}n. Since ??X1/Z1(?)\nand its first two derivatives are continuous, they can be evaluated along a fixed\ndirection ? = ??? while letting ? ? 0. The pdf of the measurement variable\n\nfZ1(z1) = ??X1|Z1(???)\n???\n\t=0\n\n=\n1\n\n?\n\nn?\n?=1\n\n??|h?|+ ?\n\nz21 +\n\n(\nn?\n\n?=1\n\n??|h?|+ ?\n)2 .\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 113\n\nThe minimum conditional-variance estimate is given by\n\nx?1(z1) =\n1\n\nj fZ1(z1)\n\n(\n???X1|Z1(???)\n\n???\n\n)T?????\n\t=0\n\n= z1\n[?1 sign(h1) \u00b7 \u00b7 \u00b7?n sign(hn)]T\n\nn?\n?=1\n\n??|hi|+ ?\n,\n\nThe conditional variance is (x?1 = x1 ? x?1)\n\nE[x?1x?\nT\n1 |z1] =\n\n[\n1 +\n\nz21\n\n(\n?n\n\ni=1 ?i|hi|+ ?)2\n]\n\n\u00d7\n\n?\n????????\n\n?1\n|h1|\n\n(\nn?\n\ni=2\n\n?i|hi|+ ?\n)\n\n. . .??1?n sign(h1) sign(hn)\n...\n\n...\n\n??1?n sign(h1) sign(hn) \u00b7 \u00b7 \u00b7 ?n|hn|\n\n(\nn?1?\ni=1\n\n?i|hi|+ ?\n)\n\n?\n????????\n. (66)\n\nNote that with one measurement, the n\u00d7n conditional variance is bounded and\npositive definite. Furthermore, the conditional variance is an explicit function of\nthe measurement.\n\n6.4 Propagation to k = 2 and the Second Measurement Update\n\nThe time propagated characteristic function to k = 2 is found in [4] as\n\n??X2|Z1(?) = ??X1|Z1(?\nT ?)e??|?\n\nT ?|. (67)\n\nThe convolution integral for the second measurement update is\n\n??X2|Y2(?) =\n1\n\n2?\n\n??\n??\n\n??X2|Z1(? ?HT?)e??|?|+jz2?d?\n\nwhere y2 = {z1, z2}. Since ??X1|Z1(?) is twice differentiable, then for the linear\ntransformation ? ??X1|Z1(?\n\nT?) is also continuous. By assuming H? ?= 0, it can\nbe shown that the first two derivatives of ??X2|Y2(?) are continuous. If H? = 0,\nthen e??|?\n\nT(??HT?)| comes out of the convolution integral and ??X2|Y2(?) does\nnot have a continuous derivative since the derivative of e??|?\n\nT ?| is piecewise\ncontinuous and there is no estimate of x.\n\n6.5 General Form of ??Xk|Yk(?)\n\nIn general, the convolution integral for the kth measurement update is\n\n??Xk|Yk(?) =\n1\n\n2?\n\n??\n??\n\n??Xk|Yk?1(? ?HT?)e??|?|+jzk?d?\n\n\n\n114 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\nwhere the measurement history is yk = {z1, . . . , zk}. It is assumed that H? ?= 0\nat each time stage and by induction ??Xk?1|Yk?1(?) is twice differentiable. There-\nfore, ??Xk|Yk(?) is twice continuously differentiable.\n\nThe twice differentiable ??Xk|Yk(?) has a closed form [4] as\n\n??Xk |Yk\n(\n?\n)\n=\n\nn\nk|k\nt?\n\ni=1\n\ng\nk|k\ni\n\n(\ny\nk|k\ngi (?)\n\n)\nexp\n\n(\ny\nk|k\nei (?)\n\n)\n\nwhere\n\ny\nk|k\ngi (?) =\n\nn\nk|k\nei?\n\n?=1\n\nq\nk|k\ni? sign(?ak|ki? , ??) ? Rk\n\ny\nk|k\nei (?) = ?\n\nn\nk|k\nei?\n\n?=1\n\np\nk|k\ni? |?ak|ki? , ??|+ j?bk|ki , ??\n\nwhere q\nk|k\ni? ? Rk, pk|ki? , ak|ki? ? Rn, and bk|ki ? Rn are all parameters computed\n\nrecursively up to time k. The form given in (55) is consistant with this notation.\n\n6.6 The pdf of the Measurement History, the Conditional Mean,\nand the Conditional Variance\n\nTo construct the conditional mean and variance, choose ? = ??? where ? > 0 and\n\n?? is a fixed direction. Assuming the condition that ?ak|ki? , ??? ?= 0 ? (i, ?), then\n\nsign(?ak|ki? , ????) = sign(?ak|ki? , ???) ? si?,\n\ny\nk|k\ngi (???) =\n\nn\nk|k\nei?\n\n?=1\n\nq\nk|k\ni? s\n\ni\n? = y\n\nk|k\ngi (??), y\n\nk|k\nei (???) = ??y?k|kei (??), ???\n\nwhere si? is a piecewise constant and ?y?k|kei (??), ??? is a constant. The pdf of the\nmeasurement history is\n\nfYk\n(\nyk\n)\n= ??Xk|Yk\n\n(\n???\n)???\n\n\t=0\n=\n\nn\nk|k\nt?\n\ni=1\n\ng\nk|k\ni\n\n(\ny\nk|k\ngi (??)\n\n)\n.\n\nThe conditional mean of the state xk is\n\nx?k = E[xk|yk] = 1\nj fYk\n\n(\nyk\n)\n(\n???Xk|Yk\n\n(\n???\n)\n\n?(???)\n\n)T ??????\n\t=0\n\n=\n1\n\nj fYk\n(\nyk\n)\n\nn\nk|k\nt?\n\ni=1\n\ng\nk|k\ni\n\n(\ny\nk|k\ngi (??)\n\n)\ny?\nk|k\nei (??).\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 115\n\nThe second moment\n\nE[xkx\nT\nk |yk] =\n\n1\n\nj2 fYk\n(\nyk\n) ?2??Xk|Yk\n\n(\n???\n)\n\n?(???)?(???)T\n\n?????\n\t=0\n\n=\n1\n\nj2 fYk\n(\nyk\n)\n\nn\nk|k\nt?\n\ni=1\n\ng\nk|k\ni\n\n(\ny\nk|k\ngi (??)\n\n)(\ny?\nk|k\nei (??)\n\n)(\ny?\nk|k\nei (??)\n\n)T\n.\n\nThe error x?k = xk ? x?k variance can be evaluated as\n\nE[x?kx?\nT\nk |yk] = E[xkxTk |yk]? x?kx?Tk .\n\n6.7 The Two State Estimator\n\nThere are some simplifications that occur in the two-state estimation problem\n[9]. A recursion in the terms in the argument of the exponential can be made\nexplicit. A basis Bk for each term in the sum is recursive as\n\nBk =\n?\n?Bk?1?\n\nT\n\n?T\n\nHA\n\n?\n? , B1 =\n\n?\n? ?1?2\nHA\n\n?\n? , A =\n\n[\n0 1\n?1 0\n\n]\n\nThis basis is related to a\nk|k\ni? ? Rn in the general solution in that every ak|ki,l vector\n\nis coaligned with a row in Bk.. The number of terms in the sum Nk is reduced by\ncombining terms with the same argument in the exponential. For the two-state\n\nestimator with no process noise, Nk =\n(k+2)(k+1)\n\n2 . For the two-state estimator\nwith process noise,\n\nNk =\n[\n1 0 0 0\n\n] \u00b7\n?\n???\n2 1 1 0\n0 1 0 2\n1 0 1 ?1\n0 0 0 1\n\n?\n???\nk ? 1\n\n\u00b7\n\n?\n???\n3\n3\n0\n1\n\n?\n??? .\n\nwhere for k = 1 the identity matrix is used.\n\n6.8 Numerical Examples of the Vector-State Cauchy Estimator\n\nFirst, the no process noise case is generated for an unstable system so that the\nestimator conditional variance remains finite. Simulation results for 50 steps are\ngiven in Figs. 7(a) and Fig. 7(b). In Figs. 7(a) we can clearly see how the im-\npulsive nature of the data increases the estimation inaccuracy of the Kalman\nfilter. However, contrary to the Kalman filter, the Cauchy estimator\u2019s standard\ndeviation of the error increases in the presence of impulses in the measurement\n\n\n\n116 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\nnoise. The conditional standard deviation of the error for the Cauchy filter, also\nplotted in Fig. 7(a), is minimal. However, the standard deviation of the error\nplotted for the Kalman filter is calculated assuming Gaussian noise variances\nand thus is neither related to the actual estimation errors nor it is minimal.\n\nFigure 7(b) presents the estimation errors together with the computed estima-\ntion error standard deviations for the Cauchy and Kalman estimators when the\nprocess and measurement noise sequences are Gaussian. The error variance for\nthe Kalman filter is now the minimal, since the process and measurement noise\nsequence are Gaussian. It is remarkable how close the standard deviation of the\nestimation error generated from the Cauchy cpdf approximates that computed\nfrom the Kalman filter, demonstrating the robustness of the former.\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\nx\n1\ne\nr\nr\no\nr\n\nCauchy Filter\n\nKalman Filter\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\nx\n2\ne\nr\nr\no\nr\n\n?1\n\n0\n\n1\n\n?\n\n0 10 20 30 40 50\n?5\n\n0\n\n5\n\nTime Steps (k)\n\nv\n\n(a) Cauchy Noise\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\nx\n1\ne\nr\nr\no\nr\n\nCauchy Filter\n\nKalman Filter\n\n?0.5\n\n0\n\n0.5\n\nx\n2\ne\nr\nr\no\nr\n\n?1\n\n0\n\n1\n\n?\n\n0 10 20 30 40 50\n?1\n\n0\n\n1\n\nTime Steps (k)\n\nv\n\n(b) Gaussian Noise\n\nFig. 7. Cauchy and Kalman Estimators for an unstable system. Simulation parameters\nare: ?1 = 0.5, ?2 = 0.6, ? = 0.1, H = [1 2], ?\n\nT = [1 ? 1], and the eigenvalues of ? are\n1.3 and 1.15.\n\nThe two-state system with both measurement and process noise is shown in\nFigs. 8(a) and Fig. 8(b). Again we see in Figs. 8(a) that the Gaussian filter\nestimate error deviates from the Cauchy conditional mean error in the Cauchy\nsimulation Fig. 8(a). Also, note that the standard deviation fluctuates dramat-\nically with the Cauchy noises. For the Gaussian simulation Fig. 8(b) both the\nCauchy and the Gaussian perform almost identically.\n\n\n\nStochastic Estimation and Control for Linear Systems with Cauchy Noise 117\n\n?10\n\n0\n\n10\n\n20\n\nx\n1\ne\nr\nr\no\nr\n\nCauchy\n\nGaussian\n\n?10\n\n0\n\n10\n\nx\n2\ne\nr\nr\no\nr\n\n?1\n\n?0.8\n\n?0.6\n\n?\n\n?20\n\n0\n\n20\n\nw\n\n2 4 6 8 10 12\n?5\n\n0\n\n5\n\nTime Steps (k)\n\nv\n\n(a) Cauchy Noise\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\nx\n1\ne\nr\nr\no\nr\n\nCauchy\n\nGaussian\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nx\n2\ne\nr\nr\no\nr\n\n?1\n\n?0.8\n\n?0.6\n\n?\n\n?2\n\n0\n\n2\n\nw\n\n2 4 6 8 10 12\n?2\n\n0\n\n2\n\nTime Steps (k)\n\nv\n\n(b) Gaussian Noise\n\nFig. 8. Cauchy and Kalman Estimators for a stable system. Simulation parameters\nare: ?1 = 0.9, ?2 = 1, ? = 0.7, ? = 0.3, H = [1 2], and the eigenvalues of ? are 0.98\nand 0.97.\n\n7 Conclusions: Vector Cauchy Estimation and Control\n\nFor scalar stochastic dynamics, developed a Cauchy estimator by generating\nthe conditional pdf. Based on this conditional pdf a m-step optimal MPC for\nCauchy noises was developed. This Cauchy optimal MPC can differentiate be-\ntween process and measurement noise spikes and thereby is a formal method\nfor handling outliers. For the n-vector stochastic dynamics, a Cauchy estimator\nwas developed by propagating and updating the characteristic function of the\nunnormalized conditional pdf. Numerical results were given for a two state re-\ncursive estimator. However, the scheme produces many terms. This issue is being\naddressed by analyzing the coefficient terms of the exponential to prune away\nsmall elements. In addition we are developing schemes for parallel processing.\n\nAcknowledgments. This work was partially supported by Air Force Office of\nScientific Research, Award No. FA9550-10-1-0570, and by the United States -\nIsrael Binational Science Foundation, Grant 2008040.\n\n\n\n118 J.L. Speyer, M. Idan, and J. Ferna?ndez\n\nReferences\n\n1. Fleming, W.H., Rishel, R.W.: Deterministic and Stochastic Optimal Control.\nSpringer, New York (1975)\n\n2. Idan, M., Speyer, J.L.: Cauchy Estimation for Linear Scalar Systems. IEEE Trans-\nactions on Automatic Control 55(6), 1329\u20131342 (2010)\n\n3. Idan, M., Speyer, J.L.: State Estimation for Linear Scalar Dynamic Systems With\nAdditive Cauchy Noises: Characteristic Function Approach. SIAM Journal on Con-\ntrol and Optimization 50(4), 1971\u20131994 (2012)\n\n4. Idan, M., Speyer, J.L.: Multivariate cauchy estimator with a scalar measurement\nand process noise. SIAM J. Control and Optimization (submitted)\n\n5. Samorodnitsky, G., Taqqu, M.S.: Stable Non-Gassian Random Processes: Stochas-\ntic Models with Infinite Variance. Chapman & Hall, New York (1994)\n\n6. Speyer, J.L., Chung, W.H.: Stochastic Processes, Estimation, and Control. SIAM\n(2008)\n\n7. Speyer, J.L., Idan, M., Ferna?ndez, J.: A stochastic controller for a scalar linear\nsystem with additive cauchy noise. Automatica Submitted\n\n8. Speyer, J.L., Idan, M., Ferna?ndez, J.: Multi-Step Prediction Optimal Control for\na Scalar Linear System with Additive Cauchy Noise. In: IEEE Conference on De-\ncision and Control, Atlanta, Georgia (December 2010)\n\n9. Speyer, J.L., Idan, M., Ferna?ndez, J.: The two-state estimator for linear system\nwith additive measurement and process cauchy noise. In: IEEE Conference on\nDecision and Control, Maui (December 2012)\n\n10. Taleb, N.N.: The Black Swan: The Impact of the Highly Improbable. Random\nHouse (2007)\n\n11. Tsakalides, P., Nikias, C.L.: Deviation from Normality in Statistical Signal Pro-\ncessing: Parameter Estimation with Alpha-Stable Distributions. In: A Practical\nGuide to Heavy Tails: Statistical Techniques and Applications. Birkhauser (1998)\n\n\n\n \n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,  \n\n119 \n\nDOI: 10.1007/978-3-662-44785-7_7 \n \n\nPlanar-Feature Based 3D SLAM Using Randomized \nSigma Point Kalman Filters  \n\nCihan Ulas* and Hakan Temeltas \n\nIstanbul Technical University, Department of Control Engineering, Istanbul, 34469, Turkey \n{culas,hakan.temeltas}@itu.edu.tr \n\nAbstract. In this study, a novel filtering method called Randomized Sigma \nPoint Kalman Filter (RSPKF) is introduced for feature based 3D Simultaneous \nLocalization and Mapping (SLAM). Conventional SLAM methods are mostly \nbased on Extended Kalman Filters (EKF) for \u2018mild\u2019 nonlinear processes and \nUnscented KF (UKF) or Cubature KF (CKF) for \u2018aggressive\u2019 nonlinear \nprocesses. A critical problem of the existing filtering methods is that they lead \nto biased estimates of the state and measurement statistics. The main purpose of \nthis study is to propose a new local filter, RSPKF, based on stochastic integra-\ntion rules providing an unbiased estimate of an integral for feature based \nSLAM. The simulation based on point features in 2D and experimental results \nbased on planar features in 3D show that the RSPKF based SLAM method pro-\nvides more accurate results than the traditional methods.  \n\nKeywords: SLAM, feature extraction, randomized sigma point filters. \n\n1 Introduction \n\nSimultaneous Localization and Mapping plays a central role for fully autonomous \nsystem when the Global Navigation Satellite System is not available or denied. \nSLAM is an active research area of the last decade and its solution is considered as \nthe \u201choly grail\u201d by the robotics researchers [1]. Feature based SLAM (Fb-SLAM) \nmethods requires sophisticated feature extraction methods. These features are princi-\npally considered as rotation and translation independent and can be distinguished \nwhen they are exists in the two consecutive observations. The aim of the feature based \nSLAM methods is to estimate the robot pose and landmark locations combined in a \nstate vector.  \n\nA traditional representation in SLAM is to use state space model with additive \nGaussian noise, which leads to the local filters such as EKF, UKF, and CKF. EKF is \nthe well-known filtering method using the first order approximation of the nonlinear \nfunctions [2]. Therefore, it is appropriate for \u2018mild\u2019 nonlinear processes and mea-\nsurement models. In order to overcome the linearization problem of \u2018aggressive\u2019 non-\nlinearities, Julier and Uhlman [3] proposed Unscented Kalman Filter (UKF) known as \n\n                                                           \n* Corresponding author. \n\n\n\n120 C. Ulas and H. Temeltas \n\n \n\nderivative-free approach. The UKF, instead of linearization of the nonlinear functions, \nestimate the mean values and covariance matrices with sigma points, which are ob-\ntained by a deterministic sampling approach. Cubature Kalman Filters (CKF) is  \nproposed as a more accurate filtering method and a more mathematically principled \nmethod than UKF for nonlinear state estimation by Arasaratnam and Haykin [4]. CKF \nis also more stable filter than the UKF and has a square root solution providing nu-\nmerical advantages and maintains the positive definiteness the of covariance matrix.  \n\nThe UKF and CKF methods can be jointly considered as sigma point or derivative-\nfree Kalman filters. The difference between these local filter is originated from the \napproximation used in computation of the integrals. The approximations based on the \nTaylor expansion, unscented transform, and cubature transform has a significant \nweakness which is the systematic error emerged by the approximate solution to the \nintegrals [5]. To solve this problem, a randomized unscented Kalman filter (RUKF) \nhas been proposed for solving the integrals without systematic errors  very recently \n[5]. RUKF is based on the stochastic integration rule for infinite regions proposed by \nthe Genz and Monohan [6]. \n\nIn this paper, Randomized Sigma Point Kalman Filters (RSPKF) are used in simul-\ntaneous localization and mapping problem. To test the method in a more challenging \nSLAM problem, we introduce a novel landmark extraction method based on plane \ndetection. Unlike the conventional methods, the 4D infinite plane parameters are en-\ncoded into the state vector and they are estimated with the latest 6D robot pose. The \nproposed observation model consists of dense trigonometric functions and cannot be \nconsidered as a mild nonlinear function; therefore, the RSPKF is obviously suitable \nfor this type of problem. The appropriateness of the proposed SLAM method is vali-\ndated through both simulations and experimental datasets in 2D and 3D, respectively. \nIn 2D, point features are used as landmarks, and in 3D planes are used as landmarks \nin the SLAM state vector representation. \n\nIn Section 2, the Sigma Point Kalman Filter is introduced. Then the Randomized \nSigma Point Kalman Filter (RSPKF) based on stochastic integration rule and RSPKF \nbased SLAM method is presented in Section 3. Finally, the simulation and experi-\nmental results are given in Section 4 and a conclusion is drawn in Section 5. \n\n2 Sigma Point Kalman Filter \n\nThe Sigma Point Kalman Filters (SPKFs) based on the unscented transform (UT) or \ncubature transform (CT) is introduced in this section. \n\n2.1 Unscented Transformation  \n\nThe aim of the unscented transformation is to calculate first two moments of a known \nnonlinear function y=g(x) where x and y are the random vector variables. The mean \nvector y , the covariance matrix Py, and the cross-covariance matrix Pxy are described \n\nby  \n \n\n\n\n Planar-Feature Based 3D SLAM Using Randomized Sigma Point Kalman Filters 121 \n\n \n\n[ ] = [ ]\n\ncov[ ] [( ( ]\n\n[( ( ].xy\n\ny\n\nE E\n\nTy E\n\nTE\n\n= =\n\n=\n\ny = y g(x)\n\nP y - y) y - y)\n\nP x - x) y - y)\n\n          (1) \n\n \nThe solution to the problem with UT is based on the approximation of the random \n\nvariable x by using a deterministically chosen set of sigma points, i? ,  and their \ncorresponding weights iw . \n\n \n\n( )\n( )\n\n0 0, ,\n\n1\n( ) , ,\n\n2( )\n\n( ) , ,\n\ni i\ni\n\nn i i n i\ni\n\nw\nn\n\nn w\nn\n\nn w w\n\n??\n?\n\n? ?\n?\n\n? ?+ +\n\n= =\n+\n\n= + =\n+\n\n= + =\n\nx   \n\nx +   \n\nx -   \n\nP\n\nP\n\n               (2) \n\n \nwhere i=1,2, \u2026 n, and n is the dimension of the state vector. The term (\u2022)i  represents \nthe ith column of the matrix. The covariance matrix satisfy the definition of P=SST \nwhere S is the square root of P. Then sigma points are propagated based on the nonli-\nnear function g(x) as  \n\n( ),   .i iy i?= ?g             (3) \n\nThen the mean and covariance values are approximated as follows \n\n2\n\n0\n\n2\n\n0\n\n2\n\n0\n\n( )( )\n\n( )( )\n\nn\nut\n\ni i\ni\n\nn\nut ut ut T\ny i i\n\ni\n\nn\nut ut T\nxy i i i\n\ni\n\nw y\n\nw y yi\n\nw y?\n\n=\n\n=\n\n=\n\n= ?\n\n= ? ??\n\n= ??\n\ny\n\nP y y\n\nP - x y\n\n      (4) \n\nThe variable ?  is the scaling parameter and suggested setting is the 3 n? = ?  [3]. \nHowever, the positive semi-definiteness is lost for multi-dimensional variable x, \nwhich is the indispensable occasion of SLAM methods, because of negative ? (n > 3, \n? < 0). For that reason, a possible practical solution is to choose 0? =  for the multi-\ndimensional case although there is no mathematical justification. Moreover, the adap-\ntive setting of the scaling parameters may improve the estimation accuracy of the  \nUT [7]. \n\n2.2 Cubature Transformation  \n\nCubature transformation, a more accurate and mathematically principled transforma-\ntion than the UT, is proposed by Arasaratnam and Haykin [4]. The cubature transfor-\nmation is based on the cubature theory and it is summarized as follows. \n\n\n\n122 C. Ulas and H. Temeltas \n\n \n\nThe key point of the Cubature theory [8] is to find multi-dimensional integrals us-\ning cubature rules since its integrands are in the form of,  \n\n \nnon-linear function \u00d7 Gaussian. \n\n \nThus, the Bayesian filter solution is approximated by the help of cubature theory. \n\nCubature Rules  \nThe cubature rule is used to approximate an n-dimensional Gaussian weighted \nintegral as \n\n \n2\n\n1\n\n1\n( ) ( ; , ) ( )\n\n2n\nn\n\niR\ni\n\nf x dx f\nn\n\n? ?\n=\n\n? +?? x x P x P      (5) \n \nwhere N is the normal distribution of x  with mean x  and covariance matrix P . The \n\nrelation for covariance matrix\nT\n\n=P P P is satisfied. The 2n set of cubature array set \nis defined by ? , and i?  the i\n\nth element of the set ? , \n \n\n1 0 1 0\n\n. . . .\n\n,..., , ,..., .. . . .\n\n. . . .\n\n0 1 0 1\n\nn?\n\n? ? ?? ? ? ? ? ? ? ?\n? ?? ? ? ? ? ? ? ?\n? ?? ? ? ? ? ? ? ?? ?? ? ? ? ? ? ? ?= ? ?\n? ? ? ? ? ? ? ?? ?\n? ? ? ? ? ? ? ?? ?? ? ? ? ? ? ? ??? ?? ? ? ? ? ? ? ?? ?\n\n       (6) \n\n2.3 Sigma Point Kalman Filters: UKF and CKF \n\nThe UKF and CKF are jointly called as Sigma Point Kalman filters (SPKF). The \nSPKF methods are based on either the unscented or the cubature transformations. \nConsider the following discrete time process and observation models. \n \n\n1 1 1( , )k k k kf w? ? ?= +x x u        (7) \n \nwhere 1kw ?  denotes the zero mean Gaussian distribution noise vector with covariance \n\nmatrix Q, and uk-1 the control signal or odometry data. The two fundamental steps of \nthe Kalman filters are explained as follows. \n\nTime Update \nIn the time update step, SPKFs computes the predicted mean ?x and covariance ma-\n\ntrix ?P depending on the transformation. \n \n\n\n\n Planar-Feature Based 3D SLAM Using Randomized Sigma Point Kalman Filters 123 \n\n \n\n1 1 1 1[ ( , ) | ]k k k k kE f w D\n?\n\n? ? ? ?= +x x u                 (8) \n \n\nwhere 1kD ? denotes the history of the input and measurement pairs up to k-1. Since \n\n1kw ?  is assumed to be zero mean and independent of the measurement sequence, one \n\ncan write \n\n1 1 1\n\n1 1 1 1 1\n\n1 1 1 1 1 1\n\n[ ( , ) |  ]\n\n( , ) ( | )\n\n( , ) ( ; , ) .\n\nn\n\nn\n\nk k k k\n\nk k k k kR\n\nk k k k k kR\n\nE f D\n\nf p D d\n\nf N d\n\n?\n? ? ?\n\n? ? ? ? ?\n\n? ? ? ? ? ?\n\n=\n\n=\n\n=\n\n?\n?\n\nx x u\n\nx u x x\n\nx u x x P x\n\n       (9) \n\n \nThe corresponding error covariance matrix can be written as \n \n\nk-1\n\n1 1 1 1\n\n1 1 1 1 1 1 1\n\n[( - )( - ) | z  ]\n\n( , ) ( , )\n\n( ) .\n\nn\n\nT\nk k k k k\n\nT\nk k k kR\n\nT\nk k k k k k k\n\nE\n\nf f\n\nx N ; , d Q\n\n? ? ?\n\n? ? ? ?\n\n? ? ? ? ? ? ?\n\n=\n\n=\n\n? +\n?\n\nP x x x x\n\nx u x u\n\nx x P x x x\n\n          (10) \n\n \nMeasurement Update. The predicted measurement vector, the corresponding cova-\nriance and cross covariance matrices are given by \n \n\n1 1\n\n, 1 1\n\n, 1 1 1\n\n( ) ( , , )\n\n( ) ( ) ( )\n\n( ) ( )\n\nn\n\nn\n\nn\n\nk k k k k kR\n\nT T\nzz k k k k k k k k k kR\n\nT T\nxz k k k k k k k k kR\n\nh N  d\n\nP h h N ; , d R\n\nP h N ; , d\n\n?\n? ?\n\n? ?\n\n? ? ?\n\n=\n\n= ? +\n\n= ?\n\n?\n?\n?\n\nz x x x P x\n\nx x x x P x z z\n\nx x x x P x x z\n\n          (11) \n\n \nAfter new zk measurements are obtained, the sigma point Kalman filter updates the \n\nstate vector and covariance matrix as \n \n\n,\n\n( )k k k k k\nT\n\nk k k zz k k\n\nK\n\nP P K P K\n\n+ ?\n\n?\n\n= + ?\n\n= ?\n\nx x z z\n                                (12) \n\n \nwhere the Kk is the Kalman gain given by \n \n\n1\n, ,k xz k zz kK = P P\n\n?                                            (13) \n \nThe main difference between the UKF and CKF is the approximations used to \n\nsolve the given integrals. While the UKF filters uses unscented transform, CKF uses \nthe cubature transform for solving the integrals. In the next subsection, we state the \nproblem of the systematic error caused by approximations.  \n\n\n\n124 C. Ulas and H. Temeltas \n\n \n\n2.4 Problem Statement \n\nThe sigma point filters provides an approximate solutions to the nonlinear functions. \nHowever, these approximations are biased and generate systematic errors. To keep the \nequations more certain, we elucidate this situation on the UT. The error ut?  is ex-\npressed by means of the Taylor expansion of the actual mean and the approximate \nmean [3].  \n \n\n4 6\n\n4 6\n2\n\n1\n\n...\n4! 6!\n\n1\n...\n\n2( ) 4! 6!\np p\n\nut x x\n\nn\np p\n\np\n\nD D\nE\n\nD D\n\nn\n\n? ?\n\n?\n\n? ?\n?\n\n? ?\n\n=\n\n? ?\n= + +? ?\n\n? ?\n? ?\n? ?? + +\n? ?+ ? ?\n\n?\n\ng(x) g(x)\n\ng( ) g( )\n     (14) \n\n \nwhere \n\n1\n\n1\n( ) ) ( ) |\n\n! ! ( )\np\n\np\n\nkk\nn\n\np i p xi\np\n\nD\ni\n\nk k i\n\n?\n?? ?? ==\n\n? ??= ?? ?? ??? ?\n?\n\ng(x)\n( x g     (15) \n\n \nis the kth term of the Taylor series expansion of the pth sigma point p?g( )  and ( )p i?  \nis the ith element of p? . The error \n\nut?  is different from zero if the function g is not a \npolynomial of degree 2n. This systematic error is also appears in the computations of \nthe covariance matrices in a similar fashion.  \n\nIn the next section, the randomized sigma point Kalman filter is presented to elimi-\nnate the mentioned systematic error. \n\n3 Randomized SPKF Based Slam \n\nRandomized Sigma Point Kalman Filter (RSPKF) proposed by Dunik et al. [5] uses \nthe stochastic integration rule (SIR) introduced by Genz and Monohan [6]. SIR is \nexplained as follows. \n\n3.1 Stochastic Integration Rule (SIR) \n\nSIR is appropriate for solving the integral of the form \n \n\n/2 1\n\n2\n1\n\n) e\n2\n\nT\n\nn\n\nn\n\nR\n=?\n\n?\n?? ?\n\n? ?\n? ??\n\nx x\n g(x .                  (16) \n\n \nThis relation can be considered as a computation of the expected value of the func-\n\ntion g where x is a random variable with ( ) ( )p = N ; ,x x x P . The algorithm to solve \n\nthe integral (16) based on SIR is given by the Algorithm 1 in Table 1. \n\n\n\n Planar-Feature Based 3D SLAM Using Randomized Sigma Point Kalman Filters 125 \n\n \n\nTable 1. Algorithm 1. Stochastic Integration Rule \n\n \n\nAlgorithm 1. ? = SI(x,P,g(x))   \n \n1:   Define Nmax \n2:   Set ? = 0  and compute )? =0 g(x  \n3:   for i=1 to Nmax do \n4:         Generate a uniformly random orthogonal matrix nxnR?Q  and generate a    \n            random number ? form Chi-distribution with n+2 degrees of freedom.  \n5:        Compute a set of points i?  and corresponding  \n            weights iw  according to  \n\ni iP?= ? Qe?  \n\nn i iP?+ = Qe?  \n\n0 2\n1\n\nn\n\n?\n= ?w , \n\n2\n\n1\n\n2?\n= =i n+iw w  \n\n             where i=1,2\u2026n and ei is the i\nth column of the  \n\n             identity matrix.  \n6:        Compute the value S of the integral at current iteration \n\n( )0 0\n0\n\n( ) ( )\nx\n\nx\n\nn\n\ni i n i\ni\n\n? ?+\n=\n\n= ? + +?S g g? ? ?  \n             and use it to update the approximate mean ?  \n\n) / i? = ? + ?( ?S  \n7:   end for \n8:   return ?  \n\n \n \nThe matrix Q can be generated using a product of appropriately chosen random \n\nreflections [6].  \n\n3.2 Randomized Sigma Point Kalman Filter \n\nThe time update and the measurement update steps of the filter are given as follows. \n\nTime Update \nThe relations of the time update step is previously given by the equations (8) and (10). \nHere the integrals are solved by the SIR algorithm.  \n \n\n( )\n( )\n\n, ( )\n\n, ( ( ) )( ( ) )\n\nk k k k k\n\nT\nk k k k k k k k k k\n\nf\n\nf f Q\n\n?\n\n?\n\n=\n\n= ? ? +\n\nx SI x P , x\n\nP SI x P , x x x x\n      (17) \n\n\n\n126 C. Ulas and H. Temeltas \n\n \n\nMeasurement Update \nThe relations of the measurement update step is previously given by the equations \n(11) and the integral obtained by the SIR as \n\n \n\n( )\n( )\n( )\n\n,\n\n,\n\n( )\n\n, ( ( ) )( ( ) )\n\n, ( )( ( ) )\n\nk k k k k\n\nT\nzz k k k k k k k k k k\n\nT\nxz k k k k k k k k k\n\nh\n\nh h R\n\nh R\n\n? ? ?\n\n? ? ? ?\n\n? ? ? ?\n\n=\n\n= ? ? +\n\n= ? ? +\n\nz SI x , P , x\n\nP SI x P , x z x z\n\nP SI x P , x x x z\n\n   (18) \n\n \nFinally, the estimated state vector and covariance matrix is computed as in (12).   \n\n3.3 SLAM Based on RSPKF   \n\nThe conventional Fb-SLAM representation consists of three models, which are ve-\nhicle model f, observation model h, and the augmentation model g. These representa-\ntions are expressed as follows. \n\nVehicle Model \nThe vehicle model is given by f \n \n\n1\n1 1( , )k kv v k kf w? ? ?= +x x u             (19) \n\n \nwhere 1kw ?  denotes the zero mean Gaussian distribution noise vector with the cova-\n\nriance matrix Q, and the control signal u. \n\nLandmark Model \nThe landmarks are assumed as stationary\n\n1k km m +\n=x x  and represented in world (W) \n\nframe. The SLAM map is augmented with the following state vector representation, \n \n\n1\n\n6+4\n1\n\nNR .\nk k\n\na\nk v m ++\n\n? ?= ?? ?x x x                     (20) \n\nObservation Model \nMeasurement or observation model parameters, kz  are provided by the feature extrac-\n\ntion method and stated as  \n \n\n1 1( )k kk vz h ? ?= +x,u                              (21) \n \nwhere h is the measurement model and 1kv ? is the zero mean observation noise with R \n\nerror covariance matrix.  \n\n\n\n Planar-Feature Based 3D SLAM Using Randomized Sigma Point Kalman Filters 127 \n\n \n\nMotion Update \nMotion update step is based on the vehicle model (19). The state and covariance ma-\ntrix is augmented as  \n\n \n\n   0\n0\n\nk\n\nT\n\nk v k\n\nk\nk\n\nkQ\n\n? ?= ? ?\n? ?\n\n= ? ?\n? ?\n\nx x u\n\nP\nP\n\n                                   (22) \n\n \n\nwhere kx  is the state vector in the k\nth time step and ku  is the applied control signal at \n\nthis time. kP denotes the state covariance matrix and augmented as in (22). The square \n\nroot, S, of the covariance matrix, kP , is obtained by the Cholesky decomposition \n\nS=chol( kP ). Then the time prediction step of the RSPKF algorithm is applied to the \n\naugmented vectors (22). The error covariance matrix of the motion is shown by kQ .  \n \n\n( )\n( )\n\n, ( )\n\n, ( ( ) )( ( ) )\n\nk k k k k\n\nT\nk k k k k k k k k k\n\nf\n\nf f Q\n\n?\n\n?\n\n=\n\n= ? ? +\n\nx SI x P , x\n\nP SI x P , x x x x\n     (23) \n\nMeasurement Update \n The measurement update step is based on the observation model (21) and the state \nand covariance estimations are obtained using the SIR as in (18) \n \n\n   \n,\n\n( )k k k k k\nT\n\nk k k zz k k\n\nK\n\nP P K P K\n\n+ ?\n\n?\n\n= + ?\n\n= ?\n\nx x z z\n                        (24) \n\n \n\nwhere the Kk is the Kalman gain given by \n \n\n1\n, ,k xz k zz kK = P P\n\n?                                         (25) \n\nState Augmentation \nThe state augmentation is based on the augmentation given by (20) and operated in \nevery new landmark observations. The state augmentation is applied in two steps. \nFirstly, the state vector and covariance matrix is augmented with the new observations \nas follows. \n \n\n0\n\n0\n\nk\n\nT\n\nk v k\n\nk\nk\n\nk\n\nz\n\nR\n\n+ ? ?= ? ?\n? ?\n\n= ? ?\n? ?\n\nx x\n\nP\nP\n\n              (26) \n\nwhere kR is the error covariance matrix of the measurement.  \n\n\n\n128 C. Ulas and H. Temeltas \n\n \n\nThe augmented state model [ ]a xv mg = x  is constructed, and then the augmented \nstate vector and covariance matrix are computed by following the same procedure in \nmotion update step with (22) and (23) which are restated here to save space. \n\n4 Performance Evaluat?ons \n\nRSPKF based SLAM performance is compared to the SPKF based SLAM in both \nsimulations and experimental in 2D and 3D respectively.  \n\n4.1 Simulation Results in 2D \n\nIn this section, an artificial environment containing landmark position in 2D is gener-\nated and the robot way points are defined. The aim of the SLAM algorithm is to esti-\nmate the landmark positions and last robot pose information using the range and bear-\ning observation model.  \n\nVehicle Model \nThe explicit vehicle model (19) is given by  \n\n \n\n1 1 1\n\n1 1 1\n\n1 1\n\n1\n\n1\n\n1\n\n( )\n\n( )\n\n( ) /\n\nk k k k\n\nk k k k\n\nk k k\n\nv v k v x\n\nv v k v y\n\nv v k\n\nx x Vdtcos w\n\ny y Vdtsin w\n\nVdtsin L w?\n\n? ?\n? ?\n\n? ? ?\n\n? ? ?\n\n? ? ?\n\n? ?\n\n?\n\n?\n\n?\n\n= + + +\n\n= + + +\n\n= + +\n\n                (27) \n\n \nwhere V  and ?  are the control input representing the constant velocity and steering \nangle with zero mean Gaussian noise w, respectively, and \n\nkv\n?  denotes the vehicle \n\nheading angle at time k. \n\nObservation Model  \nThe range and bearing observation model (21) is  \n\n \n\n \n\n2 2\n\n1\n\n( ) ( )\n\n( )\n\nk k k\n\nk\n\nk k\n\nk\n\nm v m v r\n\nm v\n\nv b\nm v\n\nr x x y y\n\ny y\nb tan\n\nx x\n\n?\n\n? ??\n\n= ? + ? +\n\n?\n= ? +\n\n?\n\n      (28) \n\n \nwhere r is the range and b represents the bearing measurements, and the measure-\nments are with zero mean Gaussian noise ? .  \n \n \n\n\n\n Planar-Feature Based 3D SLAM Using Randomized Sigma Point Kalman Filters 129 \n\n \n\nState Augmentation Model \nThe state augmentation model \n\nkm\nx  is given by  \n\n \n\n \ncos( )\n\nsin( )\nk k k\n\nk k k\n\nm v v k\n\nm v v k\n\nx x r b\n\ny y r b\n\n?\n?\n\n= + +\n\n= + +\n       (29) \n\n \nThe Monte Carlo simulations are carried out and the average position and orienta-\n\ntion error norms for UKF and RSPKF SLAM methods are shown in Fig. 1. The con-\ntrol noise is 1 m/s in speed and 1 degree in steering angle. Similarly, the measurement \nnoise in range and bearing is assumed as 1 meter and 1 degree, respectively. There-\nfore, the process covariance matrix Q=R=diag(1, ?/180). The vehicle speed is taken \nas 2 m/s and time interval between two control signals is set by 0.05 seconds. The \ntime interval between the two observations is assumed as 2.5 seconds. \n\n \n\n0 20 40 60 80 100 120 140 160 180 200\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\ntime[s]\n\nav\nge\n\nra\nge\n\n e\nrr\n\nor\n n\n\nor\nm\n\n \n\n \nUKF postion error [m]\nUKF orientation error [deg]\nRSPKF postion error [m]\nRSPKF orientation error [deg]\n\n \nFig. 1. Average position error norm \n\n?60 ?40 ?20 0 20 40 60\n?60\n\n?40\n\n?20\n\n0\n\n20\n\n40\n\n60\n\nx [m]\n\ny \n[m\n\n]\n\n \n\n \n\nUKF path\nRSPKF path\nTrue path\nLandmarks\n\n \nFig. 2. The feature map and the estimated robot path \n\n\n\n130 C. Ulas and H. Temeltas \n\n \n\nThe feature map and the estimated paths based on the filtering methods are shown \nin Fig. 2. \n\n4.2 Experimental Results in 3D \n\nIn this section, an experimental data set provided by Oliver Wulf  is used [9]. This \ndata set was recorded at the Leibniz University Campus and contains 468 3D scans, \neach with approximately 20,000 data points. A scan is given by three columns in x, y, \nand z-axes. The initial pose estimates are given by xv, yv as position, and ?v as orienta-\ntion in 3D. The ground truth pose data is available in 6D, [ ]\n\np ov v v\nx x x= , and the size \n\nof the map is about 30 meter by 60 meter. The proposed RPSKF-SLAM method re-\nquires the Gaussian noise; however, the relative Odometry error variation is neither \nzero-mean nor Gaussian as shown in Fig. 3. Therefore, the problem becomes more \nchallenging with respect to the Gaussian case. The vehicle model, observation model, \nand the augmentation models are expressed below. \n\nVehicle Model \nThe vehicle model function given by f, and it can be disclosed explicitly as in (30) for \nthe odometry data having the relative rigid body transformation parameters. The \nodometry data is provided by the relations of         [ ]x y z? ? ? ?? ?? ??=u . The vehicle \nstate vector is represented by [ ]\n\np ov v v\n=x x x  where    [ ] \n\npv\nx y z=x  and \n\n   [ ] \nov\n\n? ? ?=x  denote the robot position and the orientation, respectively. In the vec-\ntor representations, the transpose T symbol is dropped for convenience. \n\n \n\n0 10 20 30 40 50 60 70 80 90 100\n-50\n\n0\n\n50\n\n100\n\n150\n\n200\n\nnumber of scan\n\n \n\n \ntx\ntz\n?\n\n \nFig. 3. Odometry error variation for the first 100 scans in Hannover dataset [9]. Translation \nerrors are in cm and rotation error is in radian. \n\n\n\n Planar-Feature Based 3D SLAM Using Randomized Sigma Point Kalman Filters 131 \n\n \n\n \n\n,\n\n1 1\n\n1 1\n\n1 1\n\n1 1\n\n1 1\n\n1 1\n\n( )\no k\n\nk k k\n\nk k v k\n\nk k k\n\nk k k\n\nk k k\n\nk k k\n\nx x x\n\ny y Rot x y\n\nz z z\n\n?\n?\n?\n\n? ? ??\n? ? ??\n? ? ??\n\n? ?\n\n? ?\n\n? ?\n\n? ?\n\n? ?\n\n? ?\n\n? ? ? ? ? ?\n? ? ? ? ? ?= +? ? ? ? ? ?\n? ? ? ? ? ?? ? ? ? ? ?\n? ? ? ? ? ?\n? ? ? ? ? ?= +? ? ? ? ? ?\n? ? ? ? ? ?? ? ? ? ? ?\n\n                (30) \n\n \nwhere Rot matrix represent the three successive rotations defined by the Euler angles \nin x, y, and z-axes. \n\nObservation Model \nThe observation model is based on the feature extraction method proposed by Ulas \nand Temeltas [10]. The plane features are used as landmarks and are encoded in the \nstate vector with their infinite plane representations. The observation model h is given \nby  \n \n\n,\n\n,\n\n1 1\n\n1\n\n( ) \n\n( )\n\n( )\no k kk\n\nk k p kk\n\nk\n\nT\n\nk\n\nWL\nv FF\n\nk W\n\nk\n\nkW\nF vF\n\nTL\nF\n\nz\n\nx nn\nz\n\nd\n\nh v\n\nRo\nv\n\nnd\n\nt\n\nx\n\n? ?\n\n?\n\n=\n\n? ?\n= ?\n\n+\n\n? ?\n? ?= +\n\n+? ?\n?\n\n? ?? ?? ?\n\nx,u\n\n         (31) \n\n \nwhere \n\nk\n\nL\nFn  is the plane normal vector represented in the local (L) frame, and k\n\nL\nFd  is \n\nthe plane minimum distance to the robot location \n,p kv\n\nx provided by the feature extrac-\n\ntion method. The reader is referred to [10] for more information about the feature \nextraction method.  Based on the robot orientation \n\n,o kv\nx and location \n\n,p kv\nx the plane \n\npatch parameters are transformed to the world (W) frame for state augmentation. \n\nState Augmentation Model \nThe state augmentation model is given by   \n \n\n( )\n\n( )\n\no\n\np\n\nW L\nF v F\n\nW L W T\nF F F v\n\nn Rot x n\n\nd d n x\n\n=\n\n= ?\n.         (32) \n\n \nThe infinite plane representations in local and world frame are shown in Fig. 4. \n\nFor the data association purpose, the other plane properties such as center of gravi-\nty of the planes LFG , the covariance matrix \n\nL\nFC  of the plane points and convex hull \n\npoints ,\nL\n\nXYZ F?  are also transferred to the world frame by using the estimated robot \nposition.  \n\n \n\n\n\n132 C. Ulas and H. Temeltas \n\n \n\n  \n\n, ,\n\n( )\n\n( )\n\n( )\n\no\n\np\n\no p\n\nW L\nF v F\n\nW L\nF o F v\n\nW L\nXYZ F v XYZ F v\n\nC Rot x C\n\nG Rot x G x\n\nRot x x\n\n=\n\n= +\n\n? = ? +\n\n             (33) \n\n \n\n \nFig. 4. Infinite Plane representation in local and world frame \n\n \n\n \nFig. 5. Estimated planar map of the environment. The estimated robot position with uncertainty \nellipsoids and ground truth path (orange) are shown. \n\n\n\n Planar-Feature Based 3D SLAM Using Randomized Sigma Point Kalman Filters 133 \n\n \n\nIn Fig. 5, the planar map constructed form the SLAM and the actual robot path is \nshown. In addition, the error uncertainty ellipsoids of the robot 3D position with their \nmean are shown on the map. Here, the point cloud is registered based on the ground \ntruth as the reference.  \n \n\n0 10 20 30 40 50 60 70\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\ntime (scan index)\n\nav\ner\n\nag\ne \n\npo\nsi\n\ntio\nn \n\ner\nro\n\nr \nno\n\nrm\n [\n\ncm\n]\n\n \n\n \nRSPKF\nUKF\nODO\n\n \nFig. 6. Average position error norm \n\n \n\n0 10 20 30 40 50 60 70\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\ntime (scan index)\n\nav\ner\n\nag\ne \n\nro\nta\n\ntio\nn \n\ner\nro\n\nr \nno\n\nrm\n [\n\nde\ng]\n\n \n\n \nRSPKF\nUKF\nODO\n\n \nFig. 7. Average rotation error norm \n\nThe results show that UKF and CKF based SLAM satisfy the similar results with a \nmaximum position error around 6.5 meters (in the 35 time index). On the other hand, \nthe RSPKF based SLAM has a maximum of 4 meter position error norm and more \naccurate than the conventional sigma point approaches. The rotation error norm looks \nsimilar for all filter types. \n\n\n\n134 C. Ulas and H. Temeltas \n\n \n\n5 Conclusion \n\nIn this study, a new filtering method based on randomized sigma point sampling is \nintroduced for localization mapping problem. The advantage of the proposed method \nis that the estimations are unbiased and does not yield the systematic error which is \nalways the case of the classical filtering approaches. The performance evaluations are \ngiven for both simulations and experimental data. The proposed method is more accu-\nrate than the traditional sigma point Kalman filters like UKF and CKF which have \nsimilar performances. Although this approximation takes more computational time, it \ncan be used accurately in SLAM problems without any systematic error. \n\nAcknowledgments. This work was supported in part by the TUBITAK under Grant \n110E194. \n\nReferences \n\n1. Dissanayake, M.W.M.G., Newman, P., Clark, S., Durrant-Whyte, H.F., Csorba, M.: A so-\nlution to the simultaneous localization and map building (SLAM) problem. IEEE Transac-\ntions on Robotics and Automation 17, 229\u2013241 (2001) \n\n2. Thrun, W.B.S., Fox, D.: Probabilistic Robotics. MIT Press (2005) \n3. Julier, S.J., Uhlmann, J.K.: New extension of the Kalman filter to nonlinear systems. In: \n\nSociety of Photo-Optical Instrumentation Engineers (SPIE) Conference Series, vol. 3068, \npp. 182\u2013193 (1997) \n\n4. Arasaratnam, I., Haykin, S.: Cubature Kalman Filters. IEEE Transactions on Automatic \nControl 54, 1254\u20131269 (2009) \n\n5. Dunik, J., Straka, O., Simandl, M.: The Development of a Randomised Unscented Kalman \nFilter. In: Proceedings of the 18th IFAC World Congress, Milano, Italy (2011) \n\n6. Genz, A., Monahan, J.: Stochastic Integration Rules for Infinite Regions. SIAM J. Sci. \nComput. 19, 426\u2013439 (1998) \n\n7. Dunik, J., Simandl, M., Straka, O.: Adaptive choice of scaling parameter in derivative-free \nlocal filters. In: 13th Conference on Information Fusion (FUSION), pp. 1\u20138 (2010) \n\n8. Fischler, M.A., Bolles, R.C.: Random Sample Consensus: A Paradigm for Model Fitting \nwith Applications to Image Analysis and Automated Cartography. Communications of the \nACM 24, 381\u2013395 (1981) \n\n9. Wulf, O.: Hannover, Leibniz University Campus, http://kos.informatik.uni-\nosnabrueck.de/3Dscans/ \n\n10. Ulas, C., Temeltas, H.: A fast and robust scan matching algorithm based on ML-NDT and \nfeature extraction. In: International Conference on Mechatronics and Automation (ICMA), \npp. 1751\u20131756 (2011) \n\n \n\n \n\n\n\nA Novel Linear, Unbiased Estimator to Fuse\n\nDelayed Measurements in Distributed Sensor\nNetworks with Application to UAV Fleet\n\nRonan Arraes Jardim Chagas and Jacques Waldmann\n\nInstituto Tecnolo?gico de Aerona?utica,\nSa?o Jose? dos Campos, SP, 12.228-900, Brazil\n\nronan.jardim@gmail.com,\njacques@ita.br\n\nAbstract. This paper proposes a novel methodology to fuse delayed\nmeasurements in a distributed sensor network. The algorithm derives\nfrom the linear minimum mean square error estimator and yields a linear,\nunbiased estimator that fuses the delayed measurements. Its performance\nregarding the estimation accuracy, computational workload and memory\nstorage needs is compared to the classical Kalman filter reiteration that\nachieves the minimum mean square error in linear and Gaussian systems.\nThe comparison is carried out using a simulated distributed sensor net-\nwork that consists of a UAV fleet in formation flight in which the GPS\nmeasurements and relative positions are exchanged among neighboring\nnetwork nodes. The novel technique yields similar performance to the re-\niterated Kalman filtering, which is the optimal linear Gaussian solution,\nwhile demanding less storage capacity and computational throughput in\nthe problems of interest.\n\nKeywords: Delayed measurements, measurement transportation, dis-\ntributed Kalman filter, sensors network, UAV fleet.\n\nNotation and Abbreviations\n\nDCM Direction Cossine Matrix.\nMMSE Minimum Mean Square Error.\ny Scalar.\ny Vector.\nA Matrix.\nIn Identity matrix of size n.\n[y]\u00d7x Matrix representation of the cross product y \u00d7 x.\nDab DCM that rotates from the a coordinate frame to the b coordinate\n\nframe.\n?l Transport rate represented in the local horizontal frame.\n?e,l Earth\u2019s angular rate represented in the local horizontal frame.\nAspl Specific force represented in the local horizontal frame.\n?Rl INS position error represented in the local horizontal frame.\n?Vl INS velocity error represented in the local horizontal frame.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 135\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_8\n\n\n\n136 R.A.J. Chagas and J. Waldmann\n\n? Misalignment from the computed coordinate frame to the platform\ncoordinate frame.\n\n? Accelerometer triad bias.\n? Rate-gyro triad drift.\nRe Earth radius at the latitude of the vehicle.\nge Gravitation at the latitude of the vehicle.\n?k?1,i Set of all measurements received by the i-th node up to instant k? 1.\nx?k|k?1,i Estimate of the vector xk,i using all measurement up to instant k? 1.\nPk|k?1,i Estimation error covariance of the vector xk,i using all measurement\n\nup to instant k ? 1.\n\n1 Introduction\n\nA network consisting of spatially distributed sensor nodes with local process-\ning units for acquiring local measurements and estimating the state vector of a\ndynamic system can produce more accurate estimates when information is ex-\nchanged among the nodes. Such distributed estimation approach is less suscepti-\nble to a single point failure that can cripple centralized estimation schemes [1, 2].\n\nThe processing unit at each sensing node iterates a Kalman filter. Two distinct\npossibilities were evaluated in literature: exchanging sensor measurements among\nnodes [3\u20135] and exchanging state vector estimates produced by the local Kalman\nfilters [1, 2].\n\nDistributed filtering has been widely investigated when network nodes share\nthe dynamic model [1\u20134]. However, interesting problems call for algorithms that\ncan perform the distributed estimation when the nodes do not share the state-\nmodel, e.g. an UAV fleet [6], a set of satellites in orbit [7, 8], and spacecrafts\nflying into the deep space [9\u201311]. To the best knowledge of the authors, the\nfirst approach to information fusion in such a network was [12]. A very similar\nalgorithm was proposed in [13]. In both investigations the nodes\u2019 states should\nbe related by a linear transformation. Here, the subject is probed further to\ndeal with delayed measurements in a distributed network wherein a particular\ndynamic model is embedded in each node. It is shown here that in such a sce-\nnario the exchanged measurements can only be fused if additional information\nis gathered to relate measurements from neighboring nodes with a node\u2019s state.\n\nIt is expected that the required information will arrive with delays. The ac-\ncuracy of the distributed estimation by the network could be severely degraded\nhad the delayed measurements been processed without adequate caution. There\nis a myriad of techniques in the literature to fuse delayed measurements in a\nnon-distributed estimation. Reference [14] compared many methods regarding\nperformance, storage necessity, and computational workload. Among the tech-\nniques discussed, references [15\u201317] need the knowledge that a delayed mea-\nsurement has not been received at a node so that parallel computations can\nbe started to optimally fuse the delayed measurement when it arrives. On the\nother hand, the algorithms in [18, 19] have not been extended to handle multiple\ndelays. These inconveniences preclude the use of such algorithms in distributed\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 137\n\nestimation problems. Reference [20] compared algorithms to fuse out-of-sequence\nmeasurements in sensor networks, which can be used in the distributed filtering\nproblem addressed here. These algorithms were developed to achieve the mini-\nmum mean square error (MMSE) optimality in linear and Gaussian systems and\nthus require recursions that yield a heavy computational burden.\n\nIn the problems of interest, it is expected that measurements may be received\nwith a delay on the order of thousands of the sampling step. Thus, algorithms\nthat call for recursions will be time consuming. Here, a novel approach, thereafter\ncalled measurement transportation, has been developed based on the delayed-\nstate Kalman filter [21] and on the suboptimal technique in [22]. This novel\nalgorithm has been compared with a classical methodology for delayed measure-\nment fusion: the reiterated Kalman filter [23]. This technique assures MMSE\noptimality if the system is linear and Gaussian.\n\nA simulated UAV fleet in formation flight is the sensor network scenario in\nwhich GPS measurements and relative positions are exchanged among the air-\ncraft. It turns out that this novel technique needs less storage capacity than\nany algorithm in [20], the computational workload is lighter in comparison with\nthe reiterated Kalman filter, and a good overall performance is achieved for the\nproblems of interest.\n\nSection 2 presents the coordinate frames. The distributed estimation problem\nwhen the nodes do not share the same state dynamics model is presented in\nsection 3. The two algorithms to fuse the delayed measurements are described\nin section 4. The distributed filtering in a UAV fleet is described in section 5.\nSimulations and results are presented in section 6. Finally, the conclusions are\nwritten in section 7.\n\n2 Coordinate Frames\n\nThe true local horizontal frame is used to represent the INS errors. In the\ntrue vehicle position, its X-axis points towards north, its Y-axis points towards\neast, and its Z-axis points down. This coordinate system is thereafter indicated\nwith the l subscript.\n\nThe computed coordinate frame is defined as the local horizontal frame\nat the position computed by the INS.\n\nThe platform coordinate frame is defined as the local horizontal frame\ncomputed by the INS.\n\nThe body coordinate frame is defined as the inertial sensors coordinate\nframe. It is usually assumed to be aligned with the vehicle coordinate frame in\nstrapdown IMUs or aligned with the platform coordinate frame in IMUs mounted\non a stabilized platform. This coordinate frame is thereafter indicated with the\nb subscript.\n\nThe Earth-Centered-Earth-Fixed coordinate frame has its origin at the\ncenter of the Earth, its X axis lies on the equatorial plane and points to the\nGreenwich meridian, its Z axis is aligned with the Earth\u2019s rotation axis, and its\nY axis completes the right-hand coordinate frame. It is thereafter indicated with\nthe e subscript.\n\n\n\n138 R.A.J. Chagas and J. Waldmann\n\nTheWGS-84 ellipsoid Earth-fixed coordinate frame is used to represent\nthe GPS data.\n\n3 Distributed Estimation\n\nDistributed estimation has been widely studied in the literature using a set\nof sensors that measure states components from a common process dynamics\n[1\u20134]. Many algorithms have been developed to fuse the network data to im-\nprove the overall estimation accuracy and to provide robustness. The exchanged\ninformation can be the state vector estimates from the neighboring nodes or\nthe measurements from the corresponding sensors. However, many interesting\nproblems call for algorithms that can perform distributed estimation when each\nnode observes a different process, e.g. an UAV fleet. This scenario is modeled as\nfollows for the i-th node:\n\nxk+1,i = Fk,ixk,i +Bk,iuk,i +Gk,iwk,i\n\nyk,i = Hk,ixk,i + vk,i ,\n(1)\n\nwhere Fk,i is a Mi \u00d7Mi state-transition matrix, Bk,iuk,i is a deterministic and\nknown control vector, Gk,iwk,i is the model noise assumed to be a zero-mean,\nwhite Gaussian random vector with Qk,i covariance matrix, Hk,i is a Ni \u00d7Mi\nmeasurement matrix, and vk,i is the measurement noise modeled as a zero-mean,\nwhite Gaussian random vector with Rk,i covariance matrix. The initial state x0,i\nis a Gaussian random vector with mean m0,i and covariance P0,i. Additionally\nit is assumed that all measurement and model noises through the network are\nindependent to each other and are also independent to the initial state x0,i at\nevery node.\n\nAs mentioned before, the nodes does not share the same dynamics, thus the\nj -th node measurement cannot be directly used by the i-th node. If the latter\nreceives, in the instant k, a measurement from the former, then the posterior\nprobability density function is\n\np(xk,i|yk,i,yk,j ,?k?1,i) , (2)\nwhere ?k?1,i is the set of all fused measurements up to instant k ? 1 at node i.\nUsing Bayes rules, one can verify that\n\np(xk,i|yk,i,yk,j ,?k?1,i) =\nCkp(yk,j |xk,i,yk,i,?k?1,i)p(yk,i|xk,i)p(xk,i|?k?1,i) ,\n\n(3)\n\nwith Ck being a normalizing constant that yields?\nR\n\nMi\n\np(xk,i|yk,i,yk,j ,?k?1,i)dxk,i = 1 .\n\nThe computation of the p.d.f. p(yk,j |xk,i,yk,i,?k?1,i) will eventually need\nsome sort of additional information to relate the j -th neighboring node mea-\nsurement to the i-th node states as in the following function:\n\nyk,j = h\ni,j\nk (xk,i) . (4)\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 139\n\nIf such function can be constructed, then the j -th node measurement can be\nfused at the i-th node as if it was actually produced by a sensor that is local\nto the i-th node. This methodology was used in [24] in which the exchanging\nof position measurements from robots was proposed. The authors verified that\nit could only be possible if the relative position vectors had to be available.\nAdditionally, in case function hi,jk (\u00b7) is nonlinear, then it should be linearized\nabout x?k|k?1,i as in the extended Kalman filter algorithm.\n\n4 Delayed Measurements\n\nIn a distributed sensor network, it is expected that the exchanged measurements\nwill spread across the network and reach distinct nodes with varying time delays.\nHere, the sample step is small enough such that the node dynamics has been\nassumed constant between two consecutive sample steps. Thus a delay smaller\nthan the sampling step is negligible [25]. Additionally, if a measurement is re-\nceived at instant tl in which tk?n ? tl ? tk?n+1, then it has been considered\nas delayed by n sample steps. Under these assumptions, a measurement with a\ndelay lower than one sample step can be fused as usual. However if a measure-\nment happens to reach a node with a delay higher than the sampling interval,\nthen the local estimate could be severally degraded had the measurement been\nna??vely fused.\n\nIt should be noticed that all previous methodologies need to store information\nto accomplish the delayed measurement fusion [14, 20, 23]. Thus one must define\na maximum allowed delay, thereafter called max. If any measurement with a\ndelay higher than max is received, then it will be discarded.\n\n4.1 Measurement Grouping\n\nLet ?ik be the set of all measurements that the i-th node received in the instant\nk. It has been considered that these measurements from the neighboring nodes\nas described in eq. 4 depend on a function hi,jk (xk,i) that is either linear or has\n\nbeen linearized about x?k|k?1,i, thus yk,j = H\ni,j\nk xk,i + vk,j . The aforementioned\n\nset can be partitioned into subsets according to the measurement delay, hereafter\ncalled ?ik,?n . Thus the subset ?\n\ni\nk,?n\n\nis composed of all measurements received\nby the i-th node in the instant k delayed by ?n sample steps, where 0 ? ?0 <\n?1 < \u00b7 \u00b7 \u00b7 < ?L ? max.\n\nThe measurements in the same subset ?ik,?n can be fused into one single\nvector to reduce the computational burden. In case the sensors do not share\nthe same measurement matrix, the measurements vectors are projected into the\nstate-space as follows [1]:\n\n\n\n140 R.A.J. Chagas and J. Waldmann\n\nyfk,?n,i =\n?\n\nj??ik,?n\n\nHi,j,Tk??nR\n?1\nk??n,jyk??n,j =\n\n=\n\n?\n? ?\n\nj??i\nk,?n\n\nHi,j,Tk??nR\n?1\nk??n,jH\n\ni,j\nk??n\n\n?\n?xk??n,i+\n\n+\n?\n\nj??ik,?n\n\nHi,j,Tk??nR\n?1\nk??n,jvk??n,j =\n\n= Hfk,?n,ixk??n,i + v\nf\nk,?n,i\n\n,\n\n(5a)\n\nRfk,?n,i = cov{y\nf\nk,?n,i\n\nyf,Tk,?n,i} =\n\n=\n\n?\n? ?\n\nj??ik,?n\n\nHi,j,Tk??nR\n?1\nk??n,jH\n\ni,j\nk??n\n\n?\n? = Hfk,?n,i ,\n\n(5b)\n\nin which the information form of the Kalman filter should be used. On the other\nhand, if all measurements in the set share the same measurement matrix, then\nmeasurement fusion can be carried out by [26]\n\n???????\n??????\n\nRf,?1k,?n,i =\n?\n\nj??ik,?n\n\nR?1k??n,j\n\nyfk,?n,i = R\nf\nk,?n,i\n\n?\n? ?\nj??ik,?n\n\nR?1k??n,jyk??n,j\n\n?\n? .\n\n(6)\n\nFinally, the problem is reduced to fuse the measurements yfk,?n,i, where n ?\n[0, 1, 2, \u00b7 \u00b7 \u00b7 , L], and to compute (or to approximate) the p.d.f.\n\np(xk,i|yfk,?0,i,y\nf\nk,?1,i\n\n, \u00b7 \u00b7 \u00b7 ,yfk,?L,i,?k?1,i) = p(xk,i|?k,i) .\nOne should note that a consensus over the network is not pursued here as\n\nin [1] or [2]. The nodes send to the neighbors the local measurements by the\ntime they are acquired. Additionally, a node can retransmit the information\nreceived to permit that a measurement reach, even if delayed, nodes outside\nits neighborhood. The idea is to fuse all available information (delayed or not)\nwithout waiting for the communication steps to achieve the network consensus.\n\n4.2 The Reiterated Kalman Filter\n\nWhen node of a distributed sensor network receives a delayed measurement, then\nthe optimal fusion is accomplished if the posterior estimate is exactly the same as\nit would be if the measurement had been received at the time of its production,\nwithout the delay. The most direct way to accomplish that is to reiterate the\nKalman filter from the instant when the measurement was produced until the\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 141\n\npresent time [23]. However, one should notice that the MMSE optimality is\nassured only in linear and Gaussian systems.\n\nThe aforementioned methodology can be only used if the updated estimates\nand covariance matrices together with the fused measurements and respective\nstatistics are stored from instant k ? max up to instant k ? 1. Let yuk?n,i and\nRuk?n,i be, respectively, the measurement vector and its covariance that was used\nin the Kalman filter update step at instant k ? n by the i-th node. Thus the\nalgorithm can be written as follows:\n\n\u2013 j = ?L, n = L\n\u2013 WHILE j ? 0\n\n\u2022 IF j = ?n THEN\n? n = n? 1\n? Fuse the measurement vectors yuk?j,i and yfk,j,i into ydk,j,i.\n? Fuse the statistics of the measurement vectors Ruk?j,i and Rfk,j,i into\nRdk,j,i.\n\n\u2022 ELSE\n? ydk,j,i = yuk?j,i\n? Rdk,j,i = Ruk?j,i\n\n\u2022 ENDIF\n\u2022 Using ydk,j,i, Rdk,j,i, x?k?j|k?j?1,i, and Pk?j|k?j?1,i apply the update step\nof the Kalman filter and overwrite x?k?j|k?j,i and Pk?j|k?j,i.\n\n\u2022 Apply the propagation step of the Kalman filter and overwrite\nx?k?j+1|k?j,i and Pk?j+1|k?j,i.\n\n\u2022 yuk?j,i = ydk,j,i\n\u2022 Ruk?j,i = Rdk,j,i\n\u2022 j = j - 1\n\n\u2013 ENDWHILE\n\nIf the node does not receive any measurements delayed more than max sam-\npling steps, then the posterior estimate will be optimal in the MMSE sense in\na linear and Gaussian system. However the computational workload is huge. If\nthe most delayed measurement was produced n sampling steps in the past, then\nthis algorithm will iterate the Kalman filter n+ 1 times.\n\n4.3 Measurement Transportation [27]\n\nA novel approach to the fusion of delayed measurements in the Kalman filter is\nproposed here: the measurement transportation. The algorithm, though subop-\ntimal in the MMSE sense, has achieved a good performance in the situations of\ninterest with lighter computational load and less storage necessity than the reit-\nerated Kalman filter. The approach is based on the technique in [22] and on the\ndelayed-state Kalman filter [21], which was constructed to fuse a measurement\ncomposed of two consecutive states, xk?1 and xk.\n\n\n\n142 R.A.J. Chagas and J. Waldmann\n\nUsing the model in eq. 1, the state xk?n,i can be related to xk,i as follows\n\nxk?n,i =\n\n[\nn?1?\nl=0\n\nF?1k?(n?l),i\n\n]\nxk,i ?\n\nn?\nj=1\n\n([\nn?j?\nl=0\n\nF?1k?(n?l),i\n\n]\nGk?j,iwk?j,i\n\n)\n?\n\n?\nn?\n\nj=1\n\n([\nn?j?\nl=0\n\nF?1k?(n?l),i\n\n]\nBk?j,iuk?j,i\n\n)\n.\n\n(7)\n\nThus the fused delayed measurement in each subset ?ik,?n can be transported\nto the present instant by\n\nyfk,?n,i = H\np\nk,?n,i\n\nxk + u\np\nk,?n,i\n\n+ vpk,?n,i = y\np\nk,?n,i\n\n, (8)\n\nwhere\n\nHpk,?n,i = H\nf\nk,?n,i\n\n[\n?n?1?\nl=0\n\nF?1k?(?n?l),i\n\n]\n, (9)\n\nupk,?n,i = H\nf\nk,?n,i\n\n?n?\nj=1\n\n([\n?n?j?\nl=0\n\nF?1k?(?n?l),i\n\n]\nBk?j,iuk?j,i\n\n)\n, (10)\n\nvpk,?n,i = v\nf\nk,?n,i\n\n?Hfk,?n,i\n?n?\nj=1\n\n([\n?n?j?\nl=0\n\nF?1k?(?n?l),i\n\n]\nGk?j,iwk?j,i\n\n)\n\n? ?? ?\n?\n\n.(11)\n\nNotice that the fused delayed measurement noise vpk,?n,i has a covariance\nellipsoid larger than that of the original measurement due to the summation\nof the model noise samples from instants k ? ?n up to k ? 1 (?). Thus, the\nfused delayed measurement signal-to-noise ratio degrades with respect to the\ninstantaneous measurement.\n\nBy stacking the measurements in each subset ?ik,?n , n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 , L], the\nmeasurement vector to be fused at instant k by the i-th node is\n\nye,pk,i = H\ne,p\nk,ixk,i + v\n\ne,p\nk,i , (12)\n\nwhere\n\nye,pk,i =\n[\nyp,Tk,?0,i y\n\np,T\nk,?1,i\n\n\u00b7 \u00b7 \u00b7 yp,Tk,?L,i\n]T\n\n? ue,pk,i , (13)\n\nue,pk,i =\n[\nup,Tk,?0,i u\n\np,T\nk,?1,i\n\n\u00b7 \u00b7 \u00b7 up,Tk,?L,i\n]T\n\n, (14)\n\nHe,pk,i =\n[\nHp,Tk,?0,i H\n\np,T\nk,?1,i\n\n\u00b7 \u00b7 \u00b7 Hp,Tk,?L,i\n]T\n\n, (15)\n\nve,pk,i =\n[\nvp,Tk,?0,i v\n\np,T\nk,?1,i\n\n\u00b7 \u00b7 \u00b7 vp,Tk,?L,i\n]T\n\n. (16)\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 143\n\nUnder the foregoing assumptions, it is clear that ve,pk,i has zero mean. Thus its\ncovariance matrix is\n\nRe,pk,i = E{ve,pk,ive,p,Tk,i } =\n\n?\n??\nE{vpk,?0,iv\n\np,T\nk,?0,i\n\n} \u00b7 \u00b7 \u00b7 E{vpk,?0,iv\np,T\nk,?L,i\n\n}\n...\n\n. . .\n...\n\nE{vpk,?L,iv\np,T\nk,?0,i\n\n} \u00b7 \u00b7 \u00b7 E{vpk,?L,iv\np,T\nk,?L,i\n\n}\n\n?\n?? , (17)\n\nwhere the expectations E{vpk,?n,iv\np,T\nk,?m ,i\n\n}, n,m ? [0, 1, 2, \u00b7 \u00b7 \u00b7 , L], can be com-\nputed as follows\n\nE{vpk,n,ivp,Tk,m,i} =\n\n=\n\n??????????\n?????????\n\nRfk,n,i \u00b7 ?(n?m)+\n\n+Hfk,n,i \u00b7\nmin(n,m)?\n\nj=1\n\n?\n?\n[\nn?j?\ni=0\n\nF?1k?(n?i)\n\n]\nQk?j\n\n[\nm?j?\ni=0\n\nF?1k?(m?i)\n\n]T?\n?HT,fk,m,i,\n\nn > 0,m > 0,\n\nRfk,0,i \u00b7 ?(n) \u00b7 ?(m), m = 0 or n = 0 ,\n(18)\n\nwhere ?(n) is the Kronecker\u2019s delta.\nThe usual Kalman filter algorithm cannot be used with the measurement in\n\neq. 12, because the measurement noise ve,pk,i is correlated with the model noise.\nThus, the linear MMSE estimate produced by the Kalman filter update step,\ndefined as??????????\n\n?????????\n\nx?k|k,i = E{xk,i|ye,pk,i ,?k?1,i} =\n= E{xk,i|?k?1,i}+Cxyk,iCyy,?1k,i (ye,pk,i ? E{ye,pk,i |?k?1,i})\n\nCxyk,i = E{(xk,i ? E{xk,i|?k?1,i}) \u00b7 (ye,pk,i ? E{ye,pk,i |?k?1,i})T |?k?1,i}\nCyyk,i = E{(yuk,i ? E{ye,pk,i |?k?1,i}) \u00b7 (ye,pk,i ? E{ye,pk,i |?k?1,i})T |?k?1,i}\n\nPk|k,i = Pk|k?1,i ?Cxyk,iCyy,?1k,i Cxy,Tk,i ,\n(19)\n\nneeds to be rewritten [28].\nOne can see that [28, 29]\n\nE{ye,pk,i |?k?1,i} = He,pk,iE{xk,i|?k?1,i} = He,pk,i x?k|k?1,i , (20)\nCxyk,i = Pk|k?1,iH\n\ne,p,T\nk,i + Sk,i , (21)\n\nCyyk,i = H\ne,p\nk,iPk|k?1,iH\n\ne,p,T\nk,i +R\n\ne,p\nk,i +H\n\ne,p\nk,iSk,i + S\n\nT\nk,iH\n\ne,p,T\nk,i , (22)\n\nwhere Sk,i = E{(xk,i ? x?k|k?1,i)ve,p,Tk,i |?ik?1}. In the usual Kalman filter al-\ngorithm, Sk,i is zero due to the assumption that the model and measurement\nnoise vectors are uncorrelated. However, the transported measurement, defined\nin eq. 12, carries the model noises from the instant it was produced up to the\ninstant k ? 1.\n\n\n\n144 R.A.J. Chagas and J. Waldmann\n\nThe Sk,i matrix can be rewritten as\n\nSk,i = E{(xk,i ? E{xk,i})ve,p,Tk,i |?k?1,i}?\n? E{(x?k|k?1,i ? E{xk,i})ve,p,Tk,i |?k?1,i} .\n\n(23)\n\nIt can be verified that x?k|k?1,i is a random vector that depends just on all\nthe measurement vectors fused up to instant k ? 1 at the i-th node and on the\nrandom vector x0,i. The latter has been assumed to be independent with respect\nto all measurements and model noise sequences throughout the network. Thus,\nconditioned on ?k?1,i, x?k|k?1,i and v\n\ne,p\nk,i are independent, which leads to\n\nE{(x?k|k?1,i ? E{xk,i})ve,p,Tk,i |?k?1,i} =\n= E{x?k|k?1,ive,p,Tk,i |?k?1,i} ? E{E{xk,i}ve,p,Tk,i |?k?1,i}} =\n= E{x?k|k?1,i|?k?1,i}E{ve,p,Tk,i |?k?1,i} ? E{xk,i}E{ve,p,Tk,i |?k?1,i} .\n\n(24)\n\nIt can be concluded that E{ve,pk,i} = 0(L+1)Mi\u00d71 using eqs. 11 and 16 and the\nassumptions regarding the model and measurement noises. However, since ve,pk,i\nand the fused measurements in ?k?1,i depend on the model noise sequence, then\nE{ve,pk,i |?k?1,i} ?= 0(L+1)Mi\u00d71 in general. To compute this vector, the algorithm\nneeds to store all fused measurements from instant k?max up to instant k? 1.\nThus, to decrease the computational burden and the memory needs, the following\napproximation is used\n\nE{ve,pk,i |?k?1,i} ? 0(L+1)Mi\u00d71 , (25)\nwhich together with eq. 24 leads to\n\nE{(x?k|k?1,i ? E{xk,i})ve,p,Tk,i |?k?1,i} ? 0Mi\u00d7(L+1)Mi . (26)\nThe approximation in eq. 25 neglects the effect of the model noise sequence\n\non the fused measurements in the set ?k?1,i. Notice that if the model noise is\nabsent, then ve,pk,i and the vectors in ?k?1,i are independent and the approx-\nimation in eq. 25 is exact. Thus, if the effect of the model noise sequence on\nthe state vector is negligible compared to that of the system dynamics and the\ninitial state, then the approximation in eq. 25 is accurate. Hence, the accuracy of\nthe proposed approximation requires a sufficiently small model noise covariance\nmatrix, which is assumed to be valid in the proposed scenario of a UAV fleet to\nbe simulated later on.\n\nAdditionally it can be shown by induction that\n\nxk,i =\n\n[\nn?\n\nt=1\n\nFk?t,i\n\n]\nxk?n,i +Gk?1,iwk?1,i +Bk?1,iuk?1,i+\n\n+\nn?\n\nj=2\n\n([\nj?1?\nt=1\n\nFk?t,i\n\n]\nGk?j,iwk?j,i\n\n)\n+\n\nn?\nj=2\n\n([\nj?1?\nt=1\n\nFk?t,i\n\n]\nBk?j,iuk?j,i\n\n)\n\n(27)\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 145\n\nand setting n = k, one can see that\n\nxk,i ? E{xk,i} =\n[\n\nk?\nt=1\n\nFk?t,i\n\n]\n(x0,i ?m0,i)+\n\n+Gk?1,iwk?1,i +\nk?\n\nj=2\n\n([\nj?1?\nt=1\n\nFk?t,i\n\n]\nGk?j,iwk?j,i\n\n)\n.\n\n(28)\n\nA white sequence has been assumed as the model noise Gkwk, k ? N. Thus\n\nE{GnwnwTmGTm} = Qn \u00b7 ?(n?m) . (29)\n\nThis result together with the assumption that x0 is independent with respect to\nall model and measurement noise sequences leads to\n\nE{(xk,i ? E{xk,i})vp,Tk,?n,i|?k?1,i} =\n??\n??Qk?1\n\n[\n?n?1?\nl=0\n\nF?1k?(?n?l),i\n\n]T\n\n?\n?n?\nj=2\n\n?\n?\n[\nj?1?\nt=1\n\nFk?t,i\n\n]\n\u00b7Qk?j\n\n[\n?n?j?\nl=0\n\nF?1k?(?n?l),i\n\n]T?\n?\n??\n? \u00b7Hf,Tk,?n,i ,\n\n(30)\n\nfor n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 , L] and ?n ?= 0. If ?0 = 0, then\n\nE{(xk,i ? E{xk,i})vp,Tk,?0,i|?k?1,i} = 0Mi\u00d7Ni . (31)\n\nThe results in eqs. 26, 30 and 31 allow the computation of the matrix Sk,i as\nfollows\n\nSk,i =\n\n?\n????????\n\n(\nE{(xk,i ? E{xk,i})vp,Tk,?0,i|?k?1,i}\n\n)T\n(\nE{(xk,i ? E{xk,i})vp,Tk,?1,i|?k?1,i}\n\n)T\n...(\n\nE{(xk,i ? E{xk,i})vp,Tk,?L,i|?k?1,i}\n)T\n\n?\n????????\n\nT\n\n. (32)\n\nFinally the Kalman filter update step can be performed using the linear\nMMSE estimate in eq. 19, which can be computed using eqs. 20, 21, and 22.\n\nThis method needs the product of the inverse of consecutive state-transition\nmatrices, which imposes a heavy computational load. However, the state-tran-\nsition matrix inverses from instant k ?max up to instant k ? 1 can be stored\nto decrease the computational burden of computing these products. One should\nnotice that the state-transition matrix is always invertible for discretized con-\ntinuous linear systems [30].\n\nIf it is assumed that the local nodes have access to the state-transition matrix\nand model noise covariance matrices from instant k?max up to instant k?1 [20],\nthen the measurement transportation must store:\n\n\n\n146 R.A.J. Chagas and J. Waldmann\n\n\u2013 The control signals from instant k?max up to instant k?1: that is, max\u00b7Mi\nelements;\n\n\u2013 (OPTIONAL) The state-transition matrix inverses from instant k?max up\nto instant k ? 1 to decrease the computational burden: that is, max \u00b7 M2i\nelements.\n\nThus the proposed algorithm needs to store max \u00b7 (Mi +M2i ) elements. Hence\nit can verified from Table 2 in [20], which shows the memory needs for nine\nalgorithms that can fuse delayed measurements in a multisensor network, that\nthe measurement transportation is the method with the lowest memory needs\namong all those analyzed in [20].\n\nThe MMSE estimate could be achieved in a linear and Gaussian system if all\nthe measurements fused with Kalman filtering were not delayed, which is not the\ncase of the investigated scenarios. No claim of optimality is made regarding the\nuse of either the reiterated Kalman filtering or the measurement transportation\napproach in the investigated scenarios where error dynamics are linearized, noise\nsequences are non-Gaussian, and delayed measurements transit throughout the\nnetwork. However, since the equations have been derived based on linear MMSE\nestimation, it can be claimed that the measurement transportation approach is\nan unbiased estimator for the fusion of delayed measurements [28].\n\n5 UAV Fleet Problem Formulation\n\nIf a fleet of UAVs is modeled as nodes of a distributed sensor network with links\nto exchange information, then it has been indicated by eq. 4 and its further de-\nvelopment that GPS measurements from one UAV can be used by another UAV\nif their relative positions are available measurements as well. This information\nsharing can be used to increase the robustness of the fleet formation flight, e.g.\nif a UAV loses GPS signal lock, then INS solution errors can be limited if the\nneighboring nodes\u2019 GPS measurements are correctly fused. However, it is likely\nthat these network data will arrive with varying, possibly high delays across\nthe network nodes. Thus, the scenario motivates the use of the algorithms in the\nlast section to properly fuse the delayed information in transit throughout the\nnetwork.\n\nOmitting model noise, the continuous-time INS error model dynamics for the\ni-th UAV is described as follows [31, 32]\n\nx?i(t) = Ai(t) \u00b7 xi(t)\n\nAi =\n\n?\n?????\n\n[?l,i]\u00d7 I3\u00d73 03\u00d73 03\u00d73 03\u00d73\nge,i ?i ?i D\n\nb\nl,i 03\u00d73\n\n03\u00d73 03\u00d73 ?i 03\u00d73 ?Dbl,i\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n\n?\n?????\n\nxi =\n[\n?RTl,i ?V\n\nT\nl,i ?\n\nT\ni ?Tb,i ?Tb,i\n\n]T\n,\n\n(33)\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 147\n\nwhere\n\n\u2022 ?i = [?l,i + 2?e,l,i]\u00d7,\n\u2022 ?i = [?l,i +?e,l,i]\u00d7,\n\u2022 ?i = [Aspl,i]\u00d7,\n\u2022 ge,i = diag(?ge,i/Re,i ? ge,i/Re,i 2ge,i/Re,i),\n\nand diag(\u00b7) is a diagonal matrix. Thus the discrete form of this model can be\nwritten as\n\nxk+1,i = Fk,ixk,i + uk,i +Gk,iwk,i , (34)\n\nwhere xk,i = xi(tk), Fk,i = e\nA(tk?1)\u00b7?, ? is the sample step, Gk,iwk,i is the\n\nmodel noise as described in eq. 1, and uk,i is a virtual control vector used to\nremove the mean of xk,i when the Kalman filter estimates are fed back to correct\nthe INS.\n\nThe GPS measurement is assumed to directly provide UAV position and ve-\nlocity in the WGS-84 ellipsoid Earth-fixed coordinate frame. Thus, these data\nare compared to the INS solution to produce a measurement vector of the state-\nerror. Receiver clock errors have not been involved in this investigation. Under\nthese considerations, the discrete GPS measurement equation for the INS error\nmodel is\n\nyGPSk,i =\n\n[\nDel,k,i(p\n\nGPS\nk,e,i ? pINSk,e,i )\n\nDel,k,i(v\nGPS\nk,e,i ? vINSk,e,i )\n\n]\n\nyGPSk,i =\n\n[\nI3 03 03 03 03\n03 I3 03 03 03\n\n]\nxk,i +\n\n[\nDel,k,i 03\n03 D\n\ne\nl,k,i\n\n]\nvGPSk,i ,\n\n(35)\n\nwhere pGPSk,e,i and v\nGPS\nk,e,i are, respectively, the position and velocity of the vehicle\n\ngiven by the GPS receiver on board and represented in the Earth-Centered-\nEarth-Fixed coordinate frame; pINSk,e,i and v\n\nINS\nk,e,i are, respectively, the position and\n\nvelocity of the vehicle given by the INS and represented in the Earth-Centered-\nEarth-Fixed coordinate frame; and vGPSk,i is assumed to be a white Gaussian\n\nnoise sequence with covariance RGPSk,i . The DCM D\ne\nl,k,i can be computed using\n\neither the GPS data or the INS solution. One should notice that the computation\nof Del,k,i is approximated, since navigation errors have been neglected.\n\nIf the i-th UAV receives the GPS position from the j -th UAV (pGPSk,e,j ), then\nthe former can use this information if the measurement of the relative position\nbetween the two UAVs (pk,e,j?i) is available as follows\n\npGPSk,e,j + pk,e,j?i = p\nGPS,i\nk,e,j , (36)\n\nwhere pGPS,ik,e,j is a position measurement of the i-th UAV using the GPS mea-\nsurement data from j -th UAV and the measurement of the relative position\nbetween the UAVs. The latter cannot be constructed using the GPS information\nfrom both UAVs, since then no additional information would be available. The\nrelative position can be obtained, for example, from an imaging pod and proper\nimage processing, or by a RF range measurement as studied in [33]. Finally,\n\n\n\n148 R.A.J. Chagas and J. Waldmann\n\nthe state-error measurement using the information from the j -th UAV can be\nconstructed as follows\n\nyGPS,ik,j = D\ne\nl,k,i(p\n\nGPS,i\nk,e,j ? pINSk,e,i )\n\nyGPS,ik,j =\n[\nI3 03 03 03 03\n\n]\nxk,i +D\n\ne\nl,k,iv\n\nGPS,i\nk,j ,\n\n(37)\n\nwhere vGPS,ik,j is assumed to be a white Gaussian noise sequence with R\nGPS,i\nk,j\n\ncovariance matrix.\nIf the measurement from the j -th UAV arrives with delay, then the algorithms\n\nshowed previously can be used to correctly fuse it into the i-th UAV Kalman\nfilter. One should notice that the relative positions and the GPS data does not\nneed to be transmitted at the same time. However, the UAVs must store the\nrelative positions received from instant k ? max up to instant k to properly\nconvert the neighboring nodes\u2019 GPS measurements as described in eq. 36 when\nneeded.\n\n6 Simulations and Results\n\nThe simulations have been carried out using a swarm of 5 UAVs. The INS so-\nlution was given by the algorithm in [34]. Additionally, a magnetometer as de-\nscribed in [35] has been added to each UAV to limit the misalignment due to\nthe low-quality inertial sensors. The communication links are shown in fig. 1, the\nsimulations parameters are presented in Table 1, and the UAVs velocities and\nangular rates are described in the Appendix.\n\n1\n\n2\n\n34\n\n5\n\nFig. 1. UAV fleet communication links\n\nThe UAVs do not share any information before t = 151 s. Additionally, all\nthe measurements reach the neighboring nodes at a fixed 60 s (6, 000 sampling\nsteps) after measurement transmission, which is the maximum allowed delay.\nThis is assumed to be the worst scenario possible, and provides a tough test for\nthe algorithms. Furthermore, UAV 5 loses its GPS lock after t = 190 s, and thus\nthe embarked magnetometer data and the delayed measurements vectors from\nneighboring UAVs 1 and 4 are the only information available to UAV 5. The\nRMS error of each component of UAV 5\u2019s state vector has been used to com-\npare the performance of both the reiterated Kalman filter and the measurement\ntransportation approach.\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 149\n\nTable 1. Simulation parameters\n\nSensors\n\n? [3 3 3 ]T mg\n?\n\n[\n1000 1000 1000\n\n]T ? /h\nAccelerometers\ncovariance (R?)\n\ndiag\n(\n1 1 1\n\n)\n(mg)2\n\nRate-gyros covari-\nance (R?)\n\ndiag\n(\n500 500 500\n\n)\n(?/h)2\n\nRGPS diag\n(\n81 81 81 0.1 0.1 0.1\n\n)\nSI units2\n\nRmagnetometer diag\n(\n(2 \u00b7 10?5)2 (2 \u00b7 10?5)2 (2 \u00b7 10?5)2 ) Gauss2\n\nCovariance of rela-\ntive position mea-\nsurement\n\n5 \u00b7 diag ( 81 81 81 ) m2\n\nGPS and mag-\nnetometer data\nfrequency\n\n1 Hz\n\nINS\n\nInitial position Latitude: (23?12? S+0.05\u00b7G1), Longitude: (45?52? W+0.05\u00b7G2),\nwhere G1 and G2 are zero-mean Gaussian variables with standard\ndeviation of 1\u201d.\n\nInitial altitude 700 m+H where H is a zero-mean Gaussian variable with stan-\ndard deviation of 1 m.\n\nInitial velocity\n[\n0 0 0\n\n]T\nm/s\n\nInitial alignment TRIAD algorithm [36]\n\nINS solution sam-\npling rate (tins)\n\n0.01 s\n\nKalman filter\n\nFeedback start 95 s\n\nQ, t < 95 s 1/50 \u00b7 tins \u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n? \u00b7\n\n[\nR? 03\n03 R?\n\n]\n\u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n?\n\nT\n\nSI Units2\n\nQ, t ? 95 s 1/150 \u00b7 tins \u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n? \u00b7\n\n[\nR? 03\n03 R?\n\n]\n\u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n?\n\nT\n\nSI Units2\n\nInitial covariance diag(502 502 502 22 22 22 0.05 0.05 0.05 0.09 0.09 0.09\n0.015 0.015 0.015) SI Units2\n\nInitial estimate 015\u00d71 SI units\n\n\n\n150 R.A.J. Chagas and J. Waldmann\n\n0 200 400 600 800\n10\n\n0\n\n10\n2\n\n10\n4\n\n10\n6\n\n10\n8\n\nTime (s)\n\nR\nM\n\nS\n E\n\nrr\nor\n\n (\nm\n\n)\n\nNorth Position Error State\n\n0 200 400 600 800\n10\n\n0\n\n10\n2\n\n10\n4\n\n10\n6\n\n10\n8\n\nTime (s)\n\nEast Position Error State\n\n RMS Error\n\n0 200 400 600 800\n10\n\n0\n\n10\n2\n\n10\n4\n\n10\n6\n\n10\n8\n\nTime (s)\n\nVertical Position Error State\n\nFig. 2. Scenario 01: Delayed measurements na??vely fused - RMS errors of the position\nerror components from 100 realizations\n\nIn the first scenario, all the measurements were fused neglecting the measure-\nment delay. The RMS errors of the position error components computed via a\nMonte Carlo simulation with 100 realizations are presented in fig. 2. The es-\ntimate diverges after the local GPS fault when the delayed measurements are\nna??vely fused.\n\nIn the second scenario, the measurements were fused using the algorithms\npresented previously. The RMS errors of the state vector components computed\nvia a Monte Carlo simulation with 100 realizations are presented in figs. 3 to 7.\nThe computational load of the reiterated Kalman filter was 3.42 times that of\nthe measurement transportation approach.\n\n6.1 Results Analysis\n\nFirstly, fig. 2 clearly shows that the fusion of delayed measurements without ad-\nequate processing yields estimation divergence. On the other hand, the results\nobtained with scenario 02 and displayed in figs. 3 to 7 show that the algorithms\ndescribed here correctly fuse the delayed measurements and provide limited nav-\nigation errors.\n\nThe fusion of neighboring nodes\u2019 measurements received by UAV 5 when its\nGPS observables were available did not provide any noticeable improvement\nin estimation accuracy (151s < t < 190s) because the simulated scenario had\nthe relative position measurement covariance with much larger eigenvalues than\nthose of the GPS measurement covariance. On the other hand, adequate pro-\ncessing of delayed network data from neighboring nodes successfully eliminated\nestimation divergence when the GPS signal was denied to UAV 5.\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 151\n\n0 200 400 600 800\n10\n\n0\n\n10\n1\n\n10\n2\n\nTime (s)\n\nR\nM\n\nS\n E\n\nrr\nor\n\n (\nm\n\n)\n\nNorth Position Error State\n\n \n\n \nReiterated KF\n\nMeas. Trans.\n\n0 200 400 600 800\n10\n\n0\n\n10\n1\n\n10\n2\n\nTime (s)\n\nEast Position Error State\n\n RMS Error\n\n0 200 400 600 800\n10\n\n0\n\n10\n1\n\n10\n2\n\nTime (s)\n\nVertical Position Error State\n\nFig. 3. Scenario 02: Delayed measurements correctly fused - RMS errors of the position\nerror components from 100 realizations\n\n0 200 400 600 800\n10\n\n-2\n\n10\n-1\n\n10\n0\n\n10\n1\n\nTime (s)\n\nR\nM\n\nS\n E\n\nrr\nor\n\n (\nm\n\n/s\n)\n\nNorth Velocity Error State\n\n \n\n \nReiterated KF\n\nMeas. Trans.\n\n0 200 400 600 800\n10\n\n-2\n\n10\n-1\n\n10\n0\n\n10\n1\n\nTime (s)\n\nEast Velocity Error State\n\n RMS Error\n\n0 200 400 600 800\n10\n\n-2\n\n10\n-1\n\n10\n0\n\n10\n1\n\nTime (s)\n\nVertical Velocity Error State\n\nFig. 4. Scenario 02: Delayed measurements correctly fused - RMS errors of the velocity\nerror components from 100 realizations\n\nFigures 3 to 7 also show that the Kalman filter reiteration, which is optimal\nin the linear Gaussian case, most times achieved better performance than that\nof the measurement transportation approach. The cost-benefit ratio of the latter\nis far more attractive, however, due to its reduced computational workload and\nstatistically similar estimation performance.\n\n\n\n152 R.A.J. Chagas and J. Waldmann\n\n0 200 400 600 800\n10\n\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n10\n4\n\n10\n5\n\nTime (s)\n\nR\nM\n\nS\n E\n\nrr\nor\n\n (\nar\n\ncs\neg\n\n)\n\n?\nN\n\n State\n\n \n\n \nReiterated KF\n\nMeas. Trans.\n\n0 200 400 600 800\n10\n\n1\n\n10\n2\n\n10\n3\n\n10\n4\n\n10\n5\n\nTime (s)\n\n?\nE\n State\n\n RMS Error\n\n0 200 400 600 800\n10\n\n1\n\n10\n2\n\n10\n3\n\n10\n4\n\n10\n5\n\nTime (s)\n\n?\nD\n\n State\n\nFig. 5. Scenario 02: Delayed measurements correctly fused - RMS errors of the mis-\nalignment error components from 100 realizations\n\n0 200 400 600 800\n10\n\n-4\n\n10\n-3\n\n10\n-2\n\n10\n-1\n\nTime (s)\n\nR\nM\n\nS\n E\n\nrr\nor\n\n (\nm\n\n/s\n2 )\n\nBias\nX\n State\n\n \n\n \nReiterated KF\n\nMeas. Trans.\n\n0 200 400 600 800\n10\n\n-3\n\n10\n-2\n\n10\n-1\n\nTime (s)\n\nBias\nY\n State\n\n RMS Error\n\n0 200 400 600 800\n10\n\n-4\n\n10\n-3\n\n10\n-2\n\n10\n-1\n\nTime (s)\n\nBias\nZ\n State\n\nFig. 6. Scenario 02: Delayed measurements correctly fused - RMS errors of the ac-\ncelerometer bias components from 100 realizations\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 153\n\n0 200 400 600 800\n10\n\n-1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\nTime (s)\n\nR\nM\n\nS\n E\n\nrr\nor\n\n (\n\u00b0/\n\nh)\n\nDrift\nX\n State\n\n \n\n \nReiterated KF\n\nMeas. Trans.\n\n0 200 400 600 800\n10\n\n-1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\nTime (s)\n\nDrift\nY\n State\n\n RMS Error\n\n0 200 400 600 800\n10\n\n-1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\nTime (s)\n\nDrift\nZ\n State\n\nFig. 7. Scenario 02: Delayed measurements correctly fused - RMS errors of the rate-\ngryo drift components from 100 realizations\n\n7 Conclusions\n\nThis paper presented a novel suboptimal approach, called measurement trans-\nportation, to fuse delayed measurements in distributed sensor networks. This\nnew technique has less memory needs than the usual algorithms investigated\nin [20] and a good overall performance is achieved for the problems of interest.\n\nThe novel algorithm was compared with the classical approach to fuse delayed\nmeasurements in distributed sensor networks: the reiterated Kalman filter. The\ncomparison was carried out using a simulated distributed sensor network that\nconsists of a UAV fleet in formation flight in which the GPS measurements and\nrelative positions are exchanged among neighboring network nodes.\n\nThe results shows that both algorithms could correctly fuse the delayed mea-\nsurements in the proposed scenario and produced similar estimation accuracies.\nThe measurement transportation approach demands a much lower computa-\ntional load and requires less memory.\n\nOne must notice that the distributed estimation problem tackled here is nei-\nther Gaussian nor linear. Thus, one should expect that other estimators may\nyield improved accuracy with respect to that of the reiterated Kalman filter in\nthe scenario simulated here. For example, enhanced accuracy is expected if the\nINS algorithm is reiterated together with the Kalman filter and the linearization\nof the error dynamics model about the reiterated INS solution is also carried out\nat every step. However, the computational load of such estimator algorithm has\nshown to be prohibitive even to computationally resourceful desktop PCs.\n\nAcknowledgments. The authors acknowledge the generous support granted\nby project FINEP/CTA/INPE SIA (Inertial Systems for Aerospace Application,\n\n\n\n154 R.A.J. Chagas and J. Waldmann\n\nin Portuguese), embodied through the logistical support, acquisition of the com-\nputational resources needed for the research reported here, and the scholarship\nawarded to the first author.\n\nAppendix: UAVs Trajectory and Angular Movement\n\nThe UAV trajectory is composed of several segments with a distinct, constant\nspecific force during each one. They are described in Table 2 in which A1 and\nA2 are uniformly distributed random variables on the interval [?3, 3] m/s2 that\nhave been sampled at the beginning of each realization for each UAV.\n\nThe IMU attitude evolves in terms of the Euler angles that rotate the local\ncoordinate frame into alignment with the body coordinate frame (yaw, pitch,\nand roll rotation sequence) as follows\n\n? = 0.1 sin\n\n(\n2?\n\nt\n\n300\n\n)\n+ 0.05 sin\n\n(\n2?\n\nt\n\n1.7\n\n)\n+ 0.2 rad\n\n? = 0.1 sin\n\n(\n2?\n\nt\n\n300\n\n)\n+ 0.05 sin\n\n(\n2?\n\nt\n\n1.7\n\n)\n? 0.4 rad\n\n? = 0.1 sin\n\n(\n2?\n\nt\n\n300\n\n)\n+ 0.05 sin\n\n(\n2?\n\nt\n\n0.85\n\n)\n+ 0.5 rad .\n\n(38)\n\nOne should notice that this trajectory and angular movement yield a fully\nobservable system [35, 37, 38].\n\nTable 2. UAVs trajectory\n\nSpecific forces\n\nStart (s) End (s) N (m/s2) E (m/s2) D (m/s2)\n\n0 30 0 0 -g\n\n30 70 A1 0 -g\n70 110 0 A1 -g\n110 150 A1 A1 -g\n150 190 0 0 -g-A1\n190 240 0 0 -g\n\n240 280 -A1 0 -g\n280 320 0 -A1 -g\n320 360 0 A2 -g\n360 500 0 0 -g+A2\n500 520 0 A2 -g\n520 540 -A2 0 -g\n540 560 -A2 A2 -g\n560 600 0 -A2 -g\n600 660 0 0 -g-A2\n660 720 0 A2 -g\n720 800 -A2 0 -g\n\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 155\n\nReferences\n\n1. Olfati-Saber, R.: Distributed Kalman Filtering for Sensor Networks. In: 46th IEEE\nConference on Decision and Control, pp. 5492\u20135498. IEEE Press, New York (2007)\n\n2. Cattivelli, F.S., Lopes, C.G., Sayed, A.H.: Diffusions Strategies for Distributed\nKalman Filtering: Formulation and Performance Analysis. In: 2008 IARP Work-\nshop on Cognitive Information Processing. IAPR Press, New York (2008)\n\n3. Carlson, N.A.: Federated Filter for Fault-Tolerant Integrated Navigation Systems.\nIn: 1998 IEEE Position, Location and Navigation Symposium, pp. 110\u2013119. IEEE\nPress, New York (1998)\n\n4. Felter, S.C.: An Overview of Decentralized Kalman Filter Techniques. In: 1990\nIEEE Southern Tier Technical Conference, pp. 79\u201387. IEEE Press, New York\n(1990)\n\n5. Qui, H.Z., Zhang, H.Y., Jin, H.: Fusion Algorithm of Correlated Local Estimates.\nAerospace Science and Technology 8, 619\u2013629 (2004)\n\n6. Borreli, F., Keviczky, T., Balas, J.G.: Collision-free UAV Formation Flight us-\ning Decentralized Optimization and Invariant Sets. In: 43th IEEE Conference on\nDecision and Control, vol. 1, pp. 1099\u20131104. IEEE Press, New York (2004)\n\n7. Fergunson, P., Yang, T., Tillerson, M., How, J.: New Formation Flying Testbed\nfor Analyzing Distributed Estimation and Control Architectures. In: 2002 AIAA\nGuidance, Navigation and Control Conference. AIAA Press, Reston (2002)\n\n8. Fergunson, P., How, J.: Decentralized Estimation Algorithms for Formation Flying\nSpacecraft. In: 2003 AIAA Guidance, Navigation and Control Conference. AIAA\nPress, Reston (2003)\n\n9. Smith, R.S., Hadaegh, F.Y.: Parallel Estimation and Control Architectures for\nDeep-space Formation Flying Spacecraft. In: 2006 IEEE Aerospace Conference,\npp. 1\u201310. IEEE Press, New York (2006)\n\n10. Smith, R.S., Hadaegh, F.Y.: A Distributed Parallel Estimation Architecture for Co-\noperative Vehicle Formation Control. In: 2006 IEEE Aerospace Conference. IEEE\nPress, New York (2006)\n\n11. Azizi, S.M., Khorasani, K.: A Distributed Kalman Filter for Actuator Fault Esti-\nmation of Deep Space Formation Flying Satellites. In: 3rd Annual IEEE Interna-\ntional Systems Conference, pp. 354\u2013359. IEEE Press, New York (2009)\n\n12. Alouani, A.T.: Linear Distributed Estimation. In: 1987 IEEE American Control\nConference, pp. 412\u2013417. IEEE Press, New York (1987)\n\n13. Berg, T.M., Durrant-Whyte, H.F.: General Decentralized Kalman Filters. In: 1994\nIEEE American Control Conference, vol. 2, pp. 2273\u20132274. IEEE Press, New York\n(1994)\n\n14. Tasoulis, D.K., Adams, N.M., Hand, D.J.: Selective Fusion of Out-of-Sequence\nMeasurements. Information Fusion 11(2), 183\u2013191 (2010)\n\n15. Matveev, A., Savkin, A.: The Problem of State Estimation via Asynchronous Com-\nmunication Channels with Irregular Transmission Times. IEEE Transactions on\nAutomatic Control 48(4), 670\u2013676 (2003)\n\n16. Zhang, K., Li, X.R., Zhu, Y.: Optimal Update with Out-of-Sequence Measure-\nments. IEEE Transactions on Signal Processing 56(6), 1992\u20132004 (2005)\n\n17. Lu, X., Zhang, H., Wang, W., Teo, K.: Kalman Filtering for Multiple Time-Delay\nSystems. Automatica 41(86), 1455\u20131461 (2005)\n\n\n\n156 R.A.J. Chagas and J. Waldmann\n\n18. Alexander, H.L.: State Estimation for Distributed Systems with Sensing Delay. In:\nLibby, V. (ed.) Data Structures and Target Classification, vol. 1470, pp. 103\u2013111.\nSPIE (1991)\n\n19. Larsen, T.D., Andersen, N.A., Ravn, O., Poulsen, N.K.: Incorporation of Time\nDelayed Measurements in a Discrete-time Kalman Filter. In: 37th IEEE Conference\non Decision and Control, pp. 3972\u20133977. IEEE Press, New York (1998)\n\n20. Besada-Portas, E., Lopez-Orozco, J.A., Besada, J.A., de la Cruz, J.M.: Multisensor\nOut of Sequence Data Fusion for Estimating the State of Discrete Control Systems.\nIEEE Transactions on Automatic Control 54(7), 1728\u20131732 (2009)\n\n21. Brown, R.G., Hartman, G.L.: Kalman Filter with Delayed States as Observables.\nIn: 1968 National Electronics Conference. National Electronics Conference, Oak\nBrook (1968)\n\n22. Bar-Shalom, Y., Mallick, M., Chen, H., Washburn, R.: One-step Solution for\nthe General Out-of-Sequence Measurement Problem in Tracking. In: 2002 IEEE\nAerospace Conference, vol. 4, pp. 1551\u20131559. IEEE Press, New York (2002)\n\n23. Gopolakrishnan, A., Kaisare, N.S., Narasimhan, S.: Incorporating Delayed and\nInfrequent Measurements in Extended Kalman Filter based Nonlinear State Esti-\nmation. Journal of Process Control 21, 119\u2013129 (2011)\n\n24. Leung, K.Y.K., Barfoot, T.D., Liu, H.H.T.: Decentralized Localization of Sparsely-\nCommunicating Robot Networks: A Cetralized-Equivalent Approach. IEEE Trans-\nactions on Robotics 26(1), 62\u201377 (2010)\n\n25. Thomopoulos, S., Zhang, L.: Decentralized Filtering with Random Sampling and\nDelay. Information Fusion 81(1-2), 117\u2013131 (1994)\n\n26. Maybeck, P.S.: Stochastic Models, Estimation and Control, vol. 1. Academic Press,\nNew York (1979)\n\n27. Chagas, R.A.J.: Distributed Estimation of Aided INS Errors. Ph.D. thesis. Insti-\ntuto Tecnolo?gico de Aerona?utica. SP, Brazil (2012) (in Portuguese)\n\n28. Anderson, B.D.O., Moore, J.B.: Optimal Filtering. Prentice-Hall, Inc., Englewood\nCliffs (1979)\n\n29. Brown, R.G., Hwang, P.Y.C.: Introduction to Random Signals and Applied\nKalman Filtering. John Wiley & Sons, Inc., Hoboken (1997)\n\n30. VanValkenburgh, M.: The Matrix Exponential Function,\nhttp://math.berkeley.edu/~mjv/H54Lec22.pdf\n\n31. Weinred, A., Bar-Itzhack, I.Y.: The Psi-Angle Error Equation in Strapdown In-\nertial Navigation Systems. IEEE Transactions on Aerospace and Electronic Sys-\ntems 14(3), 539\u2013542 (1979)\n\n32. Lee, J., Park, C.G., Park, H.W.: Multiposition Alignment of Strapdown Inertial\nNavigation System. IEEE Transactions on Aerospace and Electronic Systems 29(4),\n1323\u20131328 (1993)\n\n33. Lapid-Maoz, J., Bar-Itzhack, I.Y.: Relative-Location Determination of Cooperating\nAircraft. In: 2000 AIAA Guidance, Navigation and Control Conference. AIAA\nPress, Reston (2000)\n\n34. Salychev, O.: Applied Inertial Navigation: Problems and Solutions. BMSTU Press,\nMoscow (2004)\n\n35. Chagas, R.A.J., Waldmann, J.: Geometric Inference-Based Observability Anal-\nysis Digest of INS Error Model with GPS/Magnetometer/Camera Aiding. In:\n19th Saint Petersburg International Conference on Integrated Navigation Systems.\nCSRI Elektropribor, JSC, Saint Petersburg, Russia (2012)\n\n36. Shuster, M., Oh, S.: Three-Axis Attitude Determination from Vector Observations.\nJournal of Guidance, Control, and Dynamics 4(1), 70\u201377 (1981)\n\nhttp://math.berkeley.edu/~mjv/H54Lec22.pdf\n\n\nA Novel Estimator to Fuse Delayed Measurements in Sensor Networks 157\n\n37. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Observability Analysis of Piece-Wise Con-\nstant Systems - Part II: Application to Inertial Navigation In-Flight Alignment.\nIEEE Transactions on Aerospace and Electronic Systems 28(4), 1068\u20131075 (1992)\n\n38. Chung, D., Park, C.G., Lee, J.G.: Observability Analysis of Strapdown Inertial\nNavigation System using Lyapunov Transformation. In: 35th IEEE Conference on\nDecision and Control, pp. 23\u201328. IEEE Press, New York (1995)\n\n\n\nHigher Order Sliding Mode Controllers\n\nwith Adaptation\n\nDaniel Yitzjak Negrete-Chavez and Leonid M. Fridman\n\nNational Autonomous University of Mexico\nMexico City C.P. 58089, Mexico\ndanielnegrete@gmail.com,\n\nfridman@servidor.unam.mx\n\nAbstract. Three different second order and one fourth order sliding\nmode controllers are considered in this chapter. An adaptive gain is im-\nplemented which adjusts the level of scalar control action on-line based\non direct measurements of the equivalent control obtained by a low-pass\nfilter. It is shown that the adaptive algorithm converge in finite time,\nthus the chattering is reduced in amplitude and the amount of energy\ndemanded by the controller is reduced too. The results of a real im-\nplementation of the adaptive sliding mode controllers in a spring-mass-\ndamper system are presented. Also a comparison between the adaptation\nmethodology and augmented order methodology is presented.\n\nKeywords: Higher Order Sliding Mode Controllers, Adaptive Gain,\nVariable Structure.\n\n1 Introduction\n\nThe concept of adaptation in the context of control engineering refers to the\nvariation of certain parameters with respect to a certain signal based on uti-\nlization of current information. It involves modifying the control law used by\nthe controller in order to cope with the fact the parameters of the system being\ncontrolled are uncertain, or, to improve the performance of the controller and\nits effectiveness exhibiting the same dynamics properties under uncertainty con-\nditions. Even more, adaptive control implies improving dynamic characteristics\nwhile properties of a controlled plant or environment are varying [3, 4].\n\n1.1 Motivation\n\nThe main obstacle of Sliding mode Control (SMC) application is the chattering\nwhich is an oscillatory phenomenon inherent in sliding motions (see, for exam-\nple, [5\u20137]). The chattering phenomenon is caused due to the high frequency\nswitching nature of the controller. The phenomenon is well-known from litera-\nture on power converters and referred as \u201dripple\u201d [8].\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 159\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_9\n\n\n\n160 D.Y. Negrete-Chavez and L.M. Fridman\n\nThe amplitude of the chattering is proportional to the gain of the controller.\nIn classical SMC the gain of the control should be a constant value greater than\nthe bound of the uncertainty/perturbation. Thus the controller demands a con-\nstant amount of energy that may not be needed to maintain the system in sliding\nmode. Also the chattering presents a constant amplitude that can be harmful\nfor the actuator and the plant.\n\n1.2 Objective\n\nThe objective of this paper is to implement an adaptive gain with higher order\nSMCs, in order to reduce both the chattering amplitude and the amount of en-\nergy demanded by the controller.\n\n2 Main Result\n\n2.1 System Description\n\nConsider the following system\n\nz?(t) = h(z(t)) + g(z(t))ut(z(t)), (1)\n\nwhere\n\nz ? Rn\nh : Rn ? Rn,\nut : R\n\nn ? R,\ng : Rn ? Rn\n\ng, h, ut are continuous functions.\n\nFor the system (1) the following assumptions hold\n\n\u2013 A1 A diffeomorphism T (z(t)) exist, such that the system (1) can be ex-\npressed as\n\nx?i = xi+1\n\nx?n = f(t, x) + u(k(t), x)\n\ni = 1, 2..., n? 1 (2)\nwhere\n\nf : R+ \u00d7 Rn ? R,\nu : Rn ? R,\nx ? Rn (3)\n\na, f, ut are continuous functions.\n\n\n\nHigher Order Sliding Mode Controllers with Adaptation 161\n\n\u2013 A2 The control\nu(k(t), x) = ?k(t)w(x) (4)\n\nwith adaptive gain\n0 < kmin ? k(t) ? kmax (5)\n\nis a sliding mode controller. Therefore it enforce the system into some sliding\nsurface ?(x) = 0 (?(x) ? C1) in finite time, where x is the state vector. The\nstructure of the sliding surface depends on the design of the controller.\n\nThe upper bound of k(t) is related with the maximum power of the ac-\ntuator. The lower bound is chosen in order to maintain the actuator active\nwith a minimum value of the gain.\n\n\u2013 A3 For the unknown, smooth and bounded function f(t, x) the following\nconditions hold:\n\n|f(t, x)| < A < kmax (6)\n????d|f(t, x)|dt\n\n???? < L (7)\n\u2013 A4 The equivalent control ueq(t, x) is available and can be obtained by\n\nfiltering the high frequency component of the discontinuos function u(k(t), x)\nby means of the low-pass filter\n\n?u?eq(t, x) + ueq(t, x) = u(k(t), x), ueq(0) = 0 (8)\n\nwith a small constant ? > 0 and the function ueq(t, x) as an output.\n\nRemark 1. The objective of sliding mode controllers is to design a control law\nsuch that the constraint ?(x) = 0 holds, where x is the state vector and ?(x)\nis called the sliding surface. Some choices of this constraint are discussed in [10]\n[11] [12]. In this paper, it is assumed that the sliding surface has been previously\ndesign. It is assumed in (A2) that the controller has been design to enforce the\ntrajectories of the system into the sliding surface.\n\n2.2 Description of the Adaptive Algorithm\n\nIn [9] an adaptive methodology is presented for the super-twisting algorithm. A\nsimilar methodology is presented here for second order and higher order sliding\nmode controllers.\n\nConsider the system (2). The adaptation law for the gain of control (4) is\ndescribed as\n\n\n\n162 D.Y. Negrete-Chavez and L.M. Fridman\n\nk?(t) =\n\n{\n?kmax +M(k(t)), if ?(x) ?= 0\n?k(t)sign(?) +M(k(t)), if ?(x) = 0\n\nM(k(t)) =\n\n???\n??\n???k(t), if k(t) > kmax\n??k(t), if k(t) < kmin\n\n0, if kmin ? k(t) ? kmax\n(9)\n\n?(t, k) =\n|ueq(t, xi, xn)|\n\nk(t)\n? ? (10)\n\n? > 1, ? > 0 and ? ? (0, 1) is the desired proportion between the magnitude of\nthe unknown function f(t, x) and the gain k(t). The function M(k(t)) is needed\nto ensure that the gain k(t) remains bounded.\n\nThe idea of the algorithm is to increase the gain k(t), during the reaching\nphase, i.e. when ?(x) ?= 0. Once the sliding mode is established, i.e. ?(x) = 0,\nthe dynamics of the gain depends on the proportion ? between the unknown\nfunction f(t, x) and the gain k(t). The gain decreases if |ueq/k(t)| < ? and\nincreases if |ueq/k(t)| > ? until |ueq/k(t)| = ? ? ?(t, k) = 0.\n\nThe equivalent control can be thought as an equivalent signal of the perturba-\ntion, thus when ?(t, k) = 0 the proportion between the unknown function f(t, x)\nand the gain k(t) is ?.\n\nRemark 2. Sliding mode controllers, theoretically, has to switch infinitely to\nreach exactly the constraint ?(x) = 0. Practically, it is impossible to achieve an\ninfinite switching, thus the sliding mode is detected when ?(x) switches about\nzero with |?(x)| < ? for a sufficiently small constant ? > 0. Moreover ? is the\namplitude of the chattering phenomenon. The objective of adapting the gain is\nto reduce ?.\n\nRemark 3. The adaptation law is based on the measurement of the equivalent\ncontrol that is obtained by filtering out the control signal when the sliding mode\nis established. In fact it is an estimation of the control signal. This estimation is\ngood enough for the adaptation law to work. The disadvantage of using a filtered\nsignal to adapt the gain is that there is a delay on the equivalent control signal\nthat is discussed on the results section.\n\n2.3 ?(t, k(t)) Stability Proof\n\nThe adaptation process is over when the desired proportion between the magni-\ntude of the perturbation and the magnitude of the gain is achieve, i.e. ?(t, k) = 0.\n\nBefore the sliding mode is established, the adaptive gain will grow until it\nreaches a value which leads the system into sliding mode. For the following\nproof it is assumed that the system is already in sliding mode.\n\n\n\nHigher Order Sliding Mode Controllers with Adaptation 163\n\nTo show that the variable ?(t, k) converge to zero in finite time, when the\nsystem is in sliding mode, the following Lyapunov function is considered\n\nV (?(t, k(t))) =\n?2(t, k(t))\n\n2\n(11)\n\nand its time derivative\n\nV? (?(t, k(t))) = ?(t, k(t))??(t, k(t)) = ?(t, k(t))\n\n(\nd|ueq(t, x)|\n\ndt\n\n1\n\nk\n? k?\n\nk2\n|ueq(t, x)|\n\n)\n\n(12)\nThe function ueq(t, x) is an approximation of f(t, x), as mentioned on remark\n\n3. It can be stated that when the system is in sliding mode, ueq(t, x) = f(t, x).\nTherefore\n\nV? (?(t, k(t))) = ?(t, k(t))\n\n(\nd|f(t, x)|\n\ndt\n\n1\n\nk(t)\n? ?k(t)sign(?(t, k(t)))\n\nk2(t)\n|f(t, x)|\n\n)\n\n=\n?(t, k(t))\n\nk(t)\n\n(\nd|f(t, x)|\n\ndt\n? ?sign(?(t, k(t)))|f(t, x)|\n\n)\n\n= ?|?(t, k(t))|\nk(t)\n\n(\n?|f(t, x)| ? d|f(t, x)|\n\ndt\nsign(?(t, k(t)))\n\n)\n\n? ?|?(t, k(t))|\nk(t)\n\n(\n?|f(t, x)| ? d|f(t, x)|\n\ndt\n\n)\n\n<\n?|?(t, k(t))|\n\nk(t)\n(?|f(t, x)| ? L)\n\nThe adaptation of the gain is only required when the magnitude of the pertur-\nbation is greater than ?kmin, thus adaptation will exists when|f(t, x)| > ?kmin,\ntherefore\n\nV? (?(t, k(t))) < ?|?(t, k(t))|\nk(t)\n\n(??kmin ? L) (13)\n\nif\n\n? >\nL\n\n?kmin\n(14)\n\n?(t, k(t)) converge to zero and the proportion between the magnitude of the\n\nperturbation and the gain is ?, i.e. |f(t,x)|k(t) = ?. Also if (14) holds, then\n\nV? (?(t, k(t))) ? ?\n?\n2\n??kmin ? L\n\n?kmin\n\n?\nV (?(t, k(t))) (15)\n\n0 ?\n?\nV (?(t, k(t))) ?\n\n?\nV (?(0, k(t))? ??kmin ? L?\n\n2?kmin\nt (16)\n\n\n\n164 D.Y. Negrete-Chavez and L.M. Fridman\n\nIs evident from the solution of the differential inequality (15) that?\nV (?(t, k(t))) = 0 at least after\n\ntf =\nkmax\n\n??kmin ? L\n?\n2V (?(0, k(t))) =\n\n?kmin\n??kmin ? L |?(0, k(t))| (17)\n\nand, as a result, ?(t, k(t)) is zero in time less or equal than tf .\n\n2.4 Higher Order Adaptive Sliding Mode Controller\n\nConsider the arbitrary order system (2), where the controller is given by\n\nu(k(t), x) = k(t)w(x). (18)\n\nLet the function w(x) be a sliding mode control algorithm with arbitrary order n\ndefined as the following recursive procedure called nested n-sliding controller [1]\n\nw(x) = ?n?1,n(x)\n?0,n = sign(x1)\n\n?i,n = sign (xi + ?iNi,n?i?1,n)\n\nNi,n =\n(\n|x1|p/n + |x2|p/(n?1) + ...+ |xi?1|p/(n?i+1)\n\n)n?i\np\n\ni = 1, 2, ..., n? 1 (19)\nwhere p is the least common multiple of 1,2,...,n. The dynamics of the gain k(t)\nare defined by (9).\n\nIt is has been proven in [1] that if values of gains ?1, ?2, ..., ?i are properly\nchosen and are sufficiently large, then the system (2) converges to sliding mode.\n\nThe adaptive gain k(t) will grow until it gets a value sufficiently large to\nensure that the set of gains ?1, ?2, ..., ?i and the adaptive gain k(t) will be large\nenough to establish the sliding mode. Once it is established the gain k(t) will be\nadapted by the law (9).\n\nAdding the adaptive gain to the nested algorithm it is obtained a higher\norder sliding mode controller with adaptation. This controller with the adaptive\nmechanism is the main result of this paper. It can be applied to n order systems\nthat can be or are expressed in the form (2). By adapting the gain the chattering\namplitude, that is the main disadvantage of sliding mode controller, is decrease.\n\n3 Experimental Results\n\nIn this section the results of the implementation of three sliding mode con-\ntrollers with adaptive gain in a spring-mass-damper system are presented. It\nis shown in figure (1) the spring-mass-damper system where the controllers\nwere implemented. The system consist on one spring one mass and one damper.\nThe video of each controller implemented is available at the following address\nwww.negrete.webs.com.\n\n\n\nHigher Order Sliding Mode Controllers with Adaptation 165\n\nFig. 1. Spring-mass-damper system\n\nConsider the following second order system as a model of the spring-mass-\ndamper system\n\nx? = y\n\ny? = a(t) + b(t)u2(t, x, y)\n\nu2 = ?k(t)w(x, y), 0 < kmin ? k ? kmax (20)\nwhere kmin and kmax are preselected minimum and maximum values of gain\nk, respectively. The functions a(t) and b(t) are unknown smooth bounded func-\ntions that include the parameters of the spring-mass-damper system which are\nassumed unknown. The state x represents the position of the mass measured\nin centimeters and the state y represents the derivative of the position of the\nmass measured in centimeter per hour. Suppose that assumptions A1, A2 and\nA3 holds.\n\n3.1 Adaptive Twisting Control (ATWC)\n\nConsider the system (20), where\n\nw(x, y) = sign(x) + ?sign(y), ? ? (0, 1) (21)\nis a version of the so-called twisting algorithm.\n\nThe parameters used in the implementation are ? = 4?,kmin = 1,kmax = 15,\n? =\n\n?\n.001, ? = 0.5, ? = 0.45.\n\n3.2 Adaptive Terminal Control (ATEC)\n\nConsider the system (20) where\n\nw(x, y) = sign\n(\ny + ?|x|1/2sign(x)\n\n)\n, ? > 0 (22)\n\n\n\n166 D.Y. Negrete-Chavez and L.M. Fridman\n\n0 1 2 3 4 5 6 7 8\n?2.5\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nseconds\n\ncm\n\n4 5 6\n?0.1\n\n0\n\n0.1\n\n0 1 2 3 4 5 6 7 8\n?0.8\n\n?0.6\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\nseconds\n\ncm\n/s\n\n4 5 6\n\n0.01\n\n0.015\n\n(a) (b)\n\nFig. 2. a) Position of the mass (state x)-ATWC and b) Velocity of the mass (state\ny)-ATWC\n\n0 1 2 3 4 5 6 7 8\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\nseconds\n\n \n\n \nGain\n|Perturbation|\n\nFig. 3. Gain k(t) and perturbation-ATWC\n\nis a version of the so called terminal algorithm. The values of the implementation\nare ? = 0.95, kmin = 1, kmax = 15, ? = 1, ? =\n\n?\n.001\n\n3.3 Adaptive Sub-optimal Control (ASC)\n\nConsider the system (20) where\n\nw(x, y) = ?(t)sign(x? ?xm(t)) (23)\nwere\n\n?(t) =\n\n{\n1, ifxm(x? ?xm ? 0\n??, ifxm(t)(x ? ?xm) < 0\n\n(24)\n\nwhere xm(t) is a piece-wise function representing the value of the last singular\npoint of x, i.e. the most recent value of x where y = 0.\n\n\n\nHigher Order Sliding Mode Controllers with Adaptation 167\n\n0 1 2 3 4 5 6 7 8\n?2.5\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\nseconds\n\ncm\n\n \n\n \n\n4.3 4.4 4.5\n?0.1\n\n0\n\n0.1\n\n0 1 2 3 4 5 6 7 8\n?0.7\n\n?0.6\n\n?0.5\n\n?0.4\n\n?0.3\n\n?0.2\n\n?0.1\n\n0\n\n0.1\n\nsegundos\n\ncm\n\n \n\n \n\n(a) (b)\n\nFig. 4. a) Position of the mass (state x)-ATEC and b) Velocity of the mass (state\ny)-ATEC\n\n0 1 2 3 4 5 6 7 8\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\nseconds\n\n \n\n \nGain\n|Perturbation|\n\nFig. 5. Gain k(t) and perturbation-ATEC\n\nThe algorithm was implemented with the following values of parameters ?? =\n3, kmin = 0.5, kmax = 8, ? = .9 and ? =\n\n5\n2?.\n\n3.4 Adaptive Fourth Order Sliding Mode Controller (AFOSMC)\n\nConsider the system (2) and the control (4), where w(x) is defined by (19) with\nn = 4\n\nw(x) = sign(x4 + ?1(x\n6\n3 + x\n\n4\n2 + |x1|3)1/12\n\nsign[x3 + ?2(x\n4\n2 + |x1|3)1/6\n\nsign(x2 + ?3|x1|3/4sign(x1))])\nin [2] the value of gains are proposed as ?1 = 3, ?2 = 1, ?3 = 0.5.\n\n\n\n168 D.Y. Negrete-Chavez and L.M. Fridman\n\n0 1 2 3 4 5 6 7 8\n?2.5\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\nseconds\n\ncm\n\n \n\n \n\n4 5 6\n?0.04\n\n?0.02\n\n0\n\n0.02\n\n0.04\n\n0.06\n\n0 1 2 3 4 5 6 7 8\n?0.8\n\n?0.6\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\nseconds\n\ncm\n/s\n\n \n\n \n\n4 5 6\n?0.04\n?0.02\n\n0\n0.02\n0.04\n0.06\n\n(a) (b)\n\nFig. 6. a) Position of the mass (state x)-ASC and b) Velocity of the mass (state y)-ASC\n\n0 1 2 3 4 5 6 7 8\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\nsegundos\n\nc\nm\n\n \n\n \nGain\n|Perturbation|\n\nFig. 7. Gain k(t) and perturbation-ASC\n\n3.5 Discussion of Results\n\nIt is observed in figures (2, 4, 6, 8, 9) that the system converge to sliding mode\nin finite time. It is clear from the same figures that the chattering amplitude\nis at most of the order of micrometers and is proportional to the amplitude of\nthe perturbation, thus the objective to reduce the amplitude chattering to a\nminimum level is achieve.\n\nThe dynamics of the gain of the three controllers is observed in figures (3,\n5, 3.3, 10). It is clear that the amplitude of the gain varies with respect to the\namplitude of the perturbation. As a consequence of the adaptation of the gain,\nthe energy demanded by the controllers is only the amount needed to compensate\nthe perturbation saving energy unlike the classical sliding mode controllers where\nthe gain is constant and the controllers demands a fixed amount of energy the\nmay not be needed for the control objective.\n\n\n\nHigher Order Sliding Mode Controllers with Adaptation 169\n\nA delay on the gain signal with respect to the perturbation is observed in\nfigures (3, 5, 3.3, 10) due to the implementation of the filter that is needed to\nobtain the equivalent control (ueq). The delay leads to a loss of the sliding mode\nthat is observed in figures (2, 4, 6, 8, 9). For example in figure (3) between second\n4 and 5 the amplitude of the perturbation is greater than the amplitude of the\ngain leading to a destruction of the sliding mode that is observed in figure (2).\nThis is the main disadvantage of this adaptation method.\n\n4 A Comparison between Adaptive SMC and Augmented\nOrder SMC (AOSMC)\n\nConsider the following second order system\n\nx?a = ya\n\ny?a = d(t) + ua(xa, ya) (25)\n\nwhere |d(t)| < D is a bounded perturbation and ua(t, xa, ya) is the control. To\ndrive the system into sliding mode the order of the system is increased in order\nto smoothen the control signal applying an integrated control signal. Introducing\nthe virtual state za the system can be expressed as\n\nx?a = ya\n\ny?a = za\n\nz?a =\nd\n\ndt\nd(t) + va(t, xa, ya, za) (26)\n\nwhere\n\nva(t, xa, ya, za) =\n\n= ?g[za + 2\n(|ya|3 + |xa|2)1/6\n\nsign(ya + |xa|2/3sign(xa))]\n\nis a third order control signal defined by (19) with n = 3 that enforces the system\ninto sliding mode. Driving the variable za into sliding mode the integral of the\ncontrol u(xa, ya) equal to the perturbation d(t). Therefore the perturbation d(t)\nis compensated by a smooth control signal reducing the chattering amplitude.\n\nConsider the system(25) where the following ATEC is implemented\n\nua(xa, ya) = ?k(t)sign\n(\ny + |x|1/2sign(x)\n\n)\n. (27)\n\nThe dynamics of the adaptive gain k(t) are defined by the algorithm (9).\n\n\n\n170 D.Y. Negrete-Chavez and L.M. Fridman\n\n0 5 10 15\n\n?0.6\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\nseconds\n\nce\nnt\n\nim\net\n\ner\ns\n\n \n\n \n\n5 5.5\n\n?0.02\n?0.01\n\n0\n0.01\n\n0 5 10 15\n?15\n\n?10\n\n?5\n\n0\n\n5\n\n10\n\n15\n\nseconds\n\ncm\n/s\n\n \n\n \n\n(a) (b)\n\nFig. 8. a) Position of mass 1 (state x1)-AFOSMC and b) Velocity of mass 1 (state\nx2)-AFOSMC\n\n0 5 10 15\n?2.5\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\nseconds\n\nce\nnt\n\nim\net\n\ner\ns\n\n \n\n \n\n5.2 5.4 5.6 5.8\n\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0 5 10 15\n?15\n\n?10\n\n?5\n\n0\n\n5\n\n10\n\n15\n\nseconds\n\ncm\n/s\n\n \n\n \n\n(a) (b)\n\nFig. 9. a) Position of the mass 2 (state x3)-AFOSMC and b) Velocity of the mass 2\n(state x4)-AFOSMC\n\n0 5 10 15\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\nseconds\n\n \n\n \n\nGain\n|Perturbation|\n\nFig. 10. Gain k(t) and perturbation-AFOSMC\n\n\n\nHigher Order Sliding Mode Controllers with Adaptation 171\n\n0 2 4 6 8 10\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\nseconds\n\nS\nta\n\nte\n x\n\na\n\n7.2 7.4 7.6 7.8 8\n?4\n\n?2\n\n0\n\n2\n\n4\n\nx 10\n?5\n\n0 2 4 6 8 10\n?2.5\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\nseconds\n\nS\nta\n\nte\n y\n\na\n\n7.4 7.6 7.8\n\n?1\n\n0\n\n1\n\nx 10\n?3\n\n(a) (b)\n\nFig. 11. a) State xa-AOSMC and b) State ya-AOSMC\n\n0 2 4 6 8 10\n?4\n\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\nseconds\n\nS\nta\n\nte\n z\n\na\n\n0 2 4 6 8 10\n?5\n\n?4\n\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\nseconds\n\nco\nnt\n\nro\nl s\n\nig\nna\n\nl\n\n(a) (b)\n\nFig. 12. a) Virtual state za-AOSMC and b) Control signal u(xa, ya)-AOSMC\n\n0 2 4 6 8 10\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\nseconds\n\nst\nat\n\ne \nx a\n\n7.2 7.4 7.6 7.8\n\n?0.01\n\n0\n\n0.01\n\n0 2 4 6 8 10\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n7.2 7.4 7.6 7.8 8\n\n?0.1\n\n?0.05\n\n0\n\n0.05\n\n0.1\n\n(a) (b)\n\nFig. 13. a) State xa-ATEC and b) State ya-ATEC\n\n\n\n172 D.Y. Negrete-Chavez and L.M. Fridman\n\n0 2 4 6 8 10\n?20\n\n?15\n\n?10\n\n?5\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\nseconds\n\nc\no\n\nn\ntr\n\no\nl \ns\nig\n\nn\na\n\nl\n\nFig. 14. Control signal ua(xa, ya)-ATEC\n\nFig. 15. Procedure to reduce the chattering amplitude\n\nBoth systems (25) and (26) are simulated with the controllers mentioned. The\nparameters for system (25) are kmin = 1, kmax = 15, ? = 0.95, ? = 4?, ? =\n\n?\n.001\n\nand the initial conditions xa(0) = 3, ya(0) = 1, k(0) = 7. The value of the gain\nof the system (26) is g = 25 and the initial conditions are xa(0) = 3, ya(0) =\n1, za(0) = 2. For both systems the perturbation signal applied is d(t) = 2 sin?t.\n\nBy comparing figures (11)and (13)it can be observed that both the adaptive\nSMC and the augmented order SMC reduce the chattering amplitude. Also in\nboth cases the control signal is similar to the perturbation (figures (12(b),)(14)).\n\n\n\nHigher Order Sliding Mode Controllers with Adaptation 173\n\nIt is clear that the augmented order SMC reduce the amplitude of the chattering\nbetter than the adaptive SMC and the amount of energy demanded by the\naugmented order SMC is less than the energy demanded by the adaptive SMC.\n\nIt it clear that both methodologies are based on the identification of the\nperturbation. This identification can be achieved if the bound of the derivative of\nthe perturbation is known. Then if the identification is possible two approaches\ncan be used. The first approach is the one that is presented in this work. Its\nadvantage is that an ideal-sliding mode is achieve theoretically, also the gain is\nalways greater, in a proportion, than the magnitude of the perturbation. The\ndisadvantages are that a filter time constant is needed, also, in application, the\nequivalent control is delayed because it is a filtered signal.\n\nThe second approach that can be used when the identification of the pertur-\nbation is possible, is to use higher order sliding mode to compensate directly the\nperturbation. Also with the estimated signal can be used as a SMC gain. This\napproach is presented in ( [14]). The advantage is that the perturbation can be\ncompensated, theoretically, exactly. The disadvantage is that with some noise in\nthe input, the precision of estimation is lost.\n\nThe two approaches mentioned required the knowledge of the derivative of the\nperturbation. If the derivative of the perturbation is unknown, only adaptation\nof the controller gain can be used to compensate the perturbation. For example,\nin ( [13]), the gain of the controller is increased until the sliding mode is achieve,\nthen the gain is decreased until the sliding mode is lost. The advantage of this\napproach is that the bound of the derivative of the perturbation is not required.\nThe disadvantage is that only a real-sliding mode is achieved.\n\nThe question now, is when to adapt the controller gain? The proposed answer\nis illustrated in the following diagram. The aim is to reduce the chattering effect.\n\nThe adaptation is required only when there is no information about the deriva-\ntive of the perturbation. The proposed method is to identify the perturbation\nas many times as the information of the derivatives of perturbation available,\nand compensate the perturbation or adapt based on the estimation. Once the\ninformation is not available, then adaptation is required.\n\n5 Conclusions\n\nThe implementation of an adaptive gain increases the efficiency of sliding mode\ncontroller. With the adaptive gain, the controller demands a minimum amount of\nenergy necessary to compensate the perturbation. Also the chattering amplitude\nis reduce to a minimum value and its proportional to the amplitude of the\nperturbation.\n\nThe use of a low-pass filter to obtain the equivalent control produce a delay\non the dynamics of the gain. The delay could produce a momentary loss of the\nsliding mode. This is the main disadvantage of this method. In order to decrease\nthe effect of the delay, a data acquisition system with a smaller sampling time\nis required to reduce constant of the low-pass filter, improving the accuracy of\nthe adaptive algorithm for the gain. The smaller the filter constant, the greater\nthe accuracy of the adaptive algorithm.\n\n\n\n174 D.Y. Negrete-Chavez and L.M. Fridman\n\nThe adaptive SMC is compared to an augmented order SMC. It is concluded\nthat the performance of the augmented order SMC is better than the adaptive\nSMC, not only because the augmented order SMC presents a better reduction\nof the chattering amplitude and in the amount of energy demanded by the con-\ntroller, but also because the control signal does not present a delay like the\nadaptive SMC does. In both cases the knowledge of the bound of the derivative\nof the perturbation is required.\n\nThe main conclusion of this work is that if the bound of the derivative of\nthe perturbation is known it is reasonable to identify the perturbation and then\ncompensate it or adapt based on the estimation. The adaptation is required\nwhen the bound of the derivative of the perturbation is not known. In this work\nit is proposed to identify as many times as possible and then adapt the gain\nwhen the identification is not possible.\n\nReferences\n\n1. Levant, A.: Higher-order sliding modes, differentiation and output-feedback con-\ntrol. Int. J. of Control 76(9/10), 924\u2013941, Special issue on Sliding-Mode Control\n(2003)\n\n2. Levant, A., Michael, A.: Adjustment of high-order sliding-mode controllers. Int. J.\nRobust Nonlinear Control 19, 1657\u20131672 (2009), www.interscience.wiley.com,\ndoi:10.1002/rnc.1397 (published online November 7, 2008 in Wiley InterScience)\n\n3. Astrom, K.J., Wittenmark, B.: Adaptive Control, 2nd edn. Addison-Wesley, NY\n(1989)\n\n4. Sastry, S., Bodson, M.: Adaptive Control: Stability, Convergence, and Robustness.\nPrentice-Hall, NY (1994)\n\n5. Bartolini, G., Ferrara, A., Usai, E., Utkin, V.I.: On Multi-input Chattering-free\nSecond-order Sliding Mode Control. IEEE Transactions on Automatic Control 45,\n1711\u20131717 (2000)\n\n6. Boiko, I., Fridman, L.: Analysis of Chattering in Continuous Sliding-mode Con-\ntrollers. IEEE Transaction on Automatic Control 50, 1442\u20131446 (2005)\n\n7. Boiko, I., Fridman, L., Pisano, A., Usai, E.: Analysis of Chattering in Systems\nwith Second Order Sliding Modes. IEEE Transactions on Automatic Control 52,\n2085\u20132102 (2007)\n\n8. Perreault, D.J., Selders Jr., R.L.: Switching- Ripple-Based Current Sharing for\nParalleled Power Converters. IEEE Transaction on Circuit and Systems 46(10),\n1264\u20131274 (1999)\n\n9. Utkin, V.I., Poznyak, A.S., Ordaz, P.: Adaptive super-twist control with minimal\nchattering effect. In: 2011 50th IEEE Conference on Decision and Control and\nEuropean Control Conference (CDC-ECC), December 12-15, pp. 7009\u20137014 (2011),\ndoi:10.1109/CDC.2011.6160720\n\n10. Cruz-Zavala, E., Moreno, J., Fridman, L.: Uniform sliding mode controllers and uni-\nform sliding surfaces. IMA Journal of Mathematical Control and Information 29(4),\n491\u2013505 (2012), doi:10.1093/imamci/dns005\n\n11. Deepak, F., Bandyopadhyay, B., Fridman, L.: Non-linear sliding surface: towards\nhigh performance robust control. IET Control Theory and Applications 6(2), 235\u2013\n242 (2012), doi:10.1049/iet-cta.2010.0727\n\nwww.interscience.wiley.com\n\n\nHigher Order Sliding Mode Controllers with Adaptation 175\n\n12. Castan?osa, F., Fridman, L.: Dynamic Switching Surfaces for Output Sliding Mode\nControl: an H? Approach. Automatica 47(7), 1957\u20131961 (2011)\n\n13. Shtessel, Y., Taleb, M., Plestan, F.: A novel adaptive-gain supertwisting sliding\nmode controller: Methodology and application. Automatica 48(5), 759\u2013769 (2012)\n\n14. Ferreira, A., Bejarano, F.J., Fridman, L.: Robust Control With Exact Uncertain-\nties Compensation: With or Without Chattering? IEEE Transactions on Control\nSystems Technology 19(5), 969\u2013975 (2011)\n\n\n\nPart II \nNavigation \n\n \n  \n\n\n\n \n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control, \n\n179 \n\nDOI: 10.1007/978-3-662-44785-7_10 \n \n\nThe Early Eighties: Development of In-Flight Transfer \nAlignment \u2013 Challenges and Methods \n\nZeev Berman \n\nBerman Consulting and Training Ltd,  \nKinneret, 15105, Israel \n\nberman.consult@gmail.com \nhttp://www.bermanconsult.com \n\nAbstract. In the late seventies and early eighties, Rafael devolved a very ad-\nvanced (at the time) transfer alignment algorithm. This required the develop-\nment of an entire infrastructure for navigation work: strapdown navigation  \nequations, navigation error model, Kalman filter implementation, system level \nerror model, inertial measurement unit, real-time, floating-point computer, test \ndesign, implementation and analysis. This paper tells the story of this enter-\nprise, from the preliminary studies to successful operational deployment, by \npointing out the different phases and lessons learned.  \n\n1 Introduction  \n\nThis paper is about the development of a navigation system, and touches on a very \nwide range of engineering topics related to navigation systems. The main goal of the \npaper is to describe the people, decisions, challenges, problems, and solutions during \nthis project. The dilemma was deciding on the extent to which the underlying engi-\nneering and mathematical topics should be detailed. The decision was ultimately \nmade to write a paper without equations, mainly because the subject is so broad that \nonce I started writing equations, I would not know where to stop. Moreover, the main \nobjective of the paper is to provide the reader, who is not necessarily a navigation \nexpert, a history background of the technical achievements. Those who are missing \nthe equations are directed to references in which the relevant ones are described. Of \ncourse, the best descriptions are in Itzhack Bar-Itzhack's technical documents.  \n\nItzhack Bar-Itzhack is one of the key individuals in this story. Like many others, I \nlearned a lot from Bar-Itzhack: I took his course at the Technion and read his bro-\nchures, which were always on his desk. We knew each other pretty well: Bar-Itzhack \nworked as a consultant at Rafael; we even played volleyball together. Nevertheless, \nalthough the paper is being published in the Itzhack Y. Bar-Itzhack Memorial Sympo-\nsium, it is not a dedicated memorial to the man. Its main purpose is to depict a picture \nof engineering challenges and the progress in their achievements.     \n\nTo maintain a continuous flow in the paper, we present here, for non-experts,  \na short description of the technical terms used in the sequel (see [14] for more  \ndetails). \n\n\n\n180 Z. Berman \n\n \n\nAccelerometer \u2013 an instrument that measures a specific force (acceleration com-\nbined with gravity effect). \n\nGyro \u2013 an instrument that measures angular rates. \nIMU (Inertial Measurement Unit) \u2013 a unit composed of accelerometers and gyros \n\nto measure specific forces and angular rates in three orthogonal axes. \nInertial Navigation \u2013 a method to calculate position, velocity and angular position \n\nfrom initial conditions and accelerometer and gyro outputs. \nStabilized Platform Navigation System \u2013 an inertial system with accelerometers in-\n\nstalled on a stabilized gimbal.  \nSD (Strapdown) Navigation System \u2013 an inertial system without any stabilizing \n\ngimbals. It is stiff with respect to the body to which it is attached.  \nSD Navigation Algorithm \u2013 an algorithm that integrates the IMU outputs to provide \n\nposition, velocity and angular position where the IMU is installed rigidly with the \nbody to be navigated.  \n\nTransfer Alignment \u2013 a method of finding attitude (orientation) of a navigation sys-\ntem from a velocity (or position) reference. To achieve this, the reference data are \nprovided for a certain time and some maneuver during this phase is required. The \nstandard implementation is based on Kalman filtering (see [2] for further description). \n\nQuaternion representation \u2013 a method to describe attitude by four normalized \nnumbers. \n\nARU (Attitude Reference Unit) \u2013 a method to calculate orientation from direct mea-\nsurements of gyros and accelerometers, with the underlying assumption that the mean \nvalue of acceleration is zero, and therefore the accelerometer's mean value is related \nto a gravity vector. These units are usually integrated with heading gyro and optional \nmagnetometer.  \n\nCaptive Flight \u2013 the phase in the missile's mission when it is operating but con-\nnected to the aircraft.  \n\nFree Flight \u2013 the phase in the missile's mission when it flies without any connec-\ntion to the aircraft. \n\nInertial Mid-Course \u2013 the part of free flight when the missile is steered by its navi-\ngation system.  \n\n2 The Early Years (1974\u20131980): From Conceptual Study to \nDesign and Implementation  \n\nOur story begins in 1974, the year that saw the creation of a missile model with its \n6DOF simulation for a medium-range precise air-to-surface missile, later called Po-\npeye. The relatively long range was due to the requirement for a standoff. By standoff \nwe mean that the missile should be dropped beyond the range of most air-defense \nammunition..  At that time, Rafael had already gained some experience with precise \nTV-guided weapons. Their principle of operation was to present a pilot with an image \nfrom the target vicinity; the pilot's task was to recognize the target on this image  \nand correct the missile's course until it hits the target. Implementation of such a  \nsystem required a seeker, a high-quality TV camera mounted on gimbals to provide \n\n\n\n The Early Eighties: Development of In-Flight Transfer Alignment 181 \n\n \n\nstabilization and movement capability, and two-way communication links. Having \nmastered the concept of terminal guidance, the open question was the midcourse\u2014\nhow to guide the missile with such accuracy that indeed the seeker would point close \nto the target, and the pilot could recognize it with high confidence. The new chal-\nlenges were related to the several tens of kilometers range and relatively long flight \ntime. Many guidance concepts, based on the classical ARU approach, that combined \naccelerometers, gyros, and perhaps an additional sensor to calculate the attitude di-\nrectly, were analyzed. It took until mid-1975 to understand that for this type of range \nand for the required electro-optical performance, inertial mid-course was absolute \nnecessary. Moreover, as an outcome of this work, the goal of 200-m accuracy (2\u20132.5 \nsigma) was stated as a primary requirement for the navigation subsystem.  \n\nNo one knows who proposed the strapdown (SD) implementation for such a prob-\nlem\u2014it could have been Itzhack Bar-Itzhack, or someone influenced by him.  \n\nIn any case, before the end of 1976, two navigation pioneers went to the United \nStates to visit companies that had made some progress in SD technology. Of course, \ntravel preparations were much more involved back then, without the benefit of \nGoogle and Internet searches. They needed to read a lot of professional literature and \nto consult with every available expert.  \n\nThey visited three companies (names are withheld for private reasons), and the res-\nponses and impressions were diverse:  \n\n\u2022 At one company, the vendor representatives refused to discuss the implementation \nissue with guests from Israel. Their assertion was that no business could come of \nthis meeting and they were not interested in teaching the team from Israel how to \nimplement the SD system.  \n\n\u2022 At the second company, the team found a system that was over 10 times less pre-\ncise than required. Although the company was interested in cooperation, the low \nperformance did not justify the effort.   \n\n\u2022 At the third company, the team found a nice prototype of an inertial system that \nclosely matched the Popeye's requirements. They found an engineering and man-\nagement team that was willing to cooperate. The Israeli team understood that this \ncompany would provide good support for the entire navigation system composed \nof hardware (IMU), navigation software and a Kalman filter for transfer alignment.  \n\nNevertheless, the Israeli Department of Defense decided to develop the Popeye's \nnavigation system in Israel. The Tamam division of Israel Aircraft Industries, Ltd. \nproposed to use a stabilized platform which they were producing at the time, but the \ncost ($1M) and size were prohibitive. After a long discussion between all involved \nparties, three important decisions were made:  \n\n\u2022 The Popeye navigation system would be of the SD type. \n\u2022 The hardware (IMU) would be developed by Tamam. \n\u2022 The navigation algorithms would be developed at Rafael.  \n\nSo the task of implementing a SD IMU with a price of around $100K, weighing \nless than 6 kg with errors of 1 deg/h for gyro drift and 1 mg bias for the accelerometer \n\n\n\n182 Z. Berman \n\n \n\nwas assigned to Tamam. The assigned project manager just completed M.Sc. degree \nunder the supervision of Itzhack Bar-Itzhack. It was an important project with enorm-\nous challenges: sensor development, accompanying electronics, mechanical design, \nall to be the first of their kind. I am sure that Taman engineers would add the relation-\nships with Rafael's people as one additional and demanding challenge. Eventually the \nIMU was ready, on time and with outstanding performance. I am certain that the his-\ntory of this development would provide an excellent foundation for a dedicated paper.  \n\nThe first man that started to develop navigation algorithms  at Rafael tells: \"We got \nthe main idea from Itzhack Bar-Itzhack; he presented us with differential equations \nand explained all of the details. For example, it was his recommendation to use qua-\nternion integration. We performed the detailed work, but every time we progressed, \nItzhack Bar-Itzhack was already ahead of us; as we got into a problem or dilemma, he \nhad already studied the issue and came prepared with an analysis, explanations and \nrecommendations.\"  \n\nThe task was quite demanding: to design an algorithm that discretizes the naviga-\ntion differential equations in a way that can be implemented in the proposed Rafael-\nhomemade computer, the \u00b5-Remez. Every multiplication and load was counted and \noptimized. Eventually a very effective navigation algorithm that fit well into the con-\nstraints was developed. The resulting procedure was a multi-rate integration with very \ncarefully selected and optimized discrete integration methods. One interesting exam-\nple was the quaternion normalization, which was required at quite a high rate. The \noptimization result was to use a linear approximation for normalization instead of the \n\"standard\" deviation by square root of the sum of squares. The testing of the naviga-\ntion algorithm was combined with 6DOF simulation. From the very beginning, their \nmodels matched each one; the same person was in charge of both, 6 DOF simulation \nand navigation algorithms, so the differences were only because of numerical errors \n(integration rate and computer resource-saving navigation algorithm). In addition, this \nplatform (6DOF simulation and navigation algorithm) served for an analysis of sensor \nerror effect. One important remark is needed here: the approach then, and during the \nentire development phase, was not to use \"blind\" simulation for analysis but to asso-\nciate it to an analytical (usually simplified) analysis. One could not simply present a \nresult and state: \"these are the results that I got from the simulation.\" Everyone was \nexpected to explain why these results appeared to be reasonable. This work ended \nwith a well-known report describing the proposed algorithm, the main trade-offs, \nsensitivities and tests. This document is well known in Rafael and is still in use for \ntraining the younger generations. The algorithm proposed then has remained basically \nunchanged, and every navigation system developed at Rafael is based on it.   \n\nThe challenge of transfer alignment was even more daunting: the differential equa-\ntions describing the inertial navigation error models were not yet available and it was \nclear that the discrete time and efficient implementation issues were very demanding. \nThis task was combined with M.Sc. degree dissertation under the supervision of Itz-\nhack Bar-Itzhack. During 1977 to 1979, the navigation error model was developed \nand formulated it into the framework of in-flight transfer alignment.  In particular, the \nattitude error model required special attention. This study led to a SD version of psi \nmodel, which was already known for platform navigation. It was somewhat intriguing \n\n\n\n The Early Eighties: Development of In-Flight Transfer Alignment 183 \n\n \n\nthat they developed the same equation as in the case of a platform, but with the oppo-\nsite sign of the drift term. In addition, they proposed an extended sensor error model \nand integrated it into one combined system. Special effort was dedicated to the ran-\ndom noise integration formula required by the Kalman filter. The analysis distin-\nguished direct sampling from integral sampling, and he provided rigorous analyses for \nboth cases. One of the conclusions was the need for integral sampling, and Tamam \ndeveloped a mechanism called V/F to provide angular and velocity increments instead \nof angular rate and accelerations. This dissertation was very extensive, several hun-\ndred pages long, with some of the equations written in A3 format, it could in effect be \nconsidered a Transfer Alignment Handbook, as it completely covered all models re-\nquired to develop the transfer alignment algorithm. Unfortunately, this work was de-\nfined as classified and was never published. The reason for this was that part of the \nwork dealt directly with the Popeye transfer alignment algorithm. It was based on a \nKalman filter with a 12-state vector: velocity error, attitude error, gyro drift and acce-\nlerometer bias (all of them in three axes). The velocity error measurement was cho-\nsen, based on a comparison between aircraft and SD velocities, with 1-sec intervals \nbetween measurements. Those critical decisions were based on common sense and \ngood engineering insight into the dominating phenomena, and were later justified by \nsimulations. For example, acceleration measurements were rejected due to the high \nflexibility of the wing that Popeye missile was installed underneath and the long time \nbetween measurements, related to computer-resource limitations. The states for gyro \ndrift and accelerometer bias were added to allow tracking and compensating for these \nslow-changing error terms. The time between measurements, 1 sec, was set as the \nlongest time (to save on computer resources) that would presumably allow the re-\nquired tracking quality. The performance analysis was based on S-shape maneuver \nduring in-flight alignment. The Kalman filter calculations were very computationally \nexpensive and required working with a floating point machine, which was not availa-\nble in feasible sizes.  \n\nThe project manager was dedicated to meeting the time schedule for a series of \nsystem tests. His message was that the navigation system's development, after 4 years \nof effort, was still fraught with huge uncertainties; therefore, in the event of a delay or \ncritical problem, he would replace the proposed SD navigation system with a backup \none, based on a simple ARU that had already been developed for airframe configura-\ntion tests. In this atmosphere, the need to reduce development risks and efforts was \nvital.  \n\nThe next task was to build a simulation that would combine SD navigation and in-\nflight alignment. During this task, an important achievement was found. The observa-\ntion was that at the cost of a minor approximation in the stochastic part of the model, \nbut without sacrificing the accuracy of its deterministic part, the algorithm's com-\nplexity can be reduced. The key observation was that the simplified system transition \nmatrix is nilpotent. The precise calculation of the discrete transition matrix in a time-\nvarying system is related to matrix multiplication, which is computationally heavy. \nThe nilpotent property states that those multiplications come to zero. This observation \nopened the possibility of calculating the transition matrix by simple integrations \n(summations). The term nilpotent, that may create negative connotations, was very \n\n\n\n184 Z. Berman \n\n \n\nattractive in the eyes of the project leaders, because it eliminated the need of a spe-\ncial-purpose computer; the new Intel 8086 processor with floating point 8087 copro-\ncessor was able (when working at almost 100% capacity) to carry out the calculations \nrequired for all of the navigation algorithms.  \n\n3 Years 1980\u20131985: It Works! Integrations, Tests and First \nImprovements \n\nThe Project Test Plan consisted of several phases, each phase dedicated to testing one \nof the major subsystems, while the subsystems tested in the previous phases served as \nthe infrastructure for those tests. Table 1 describes the main test plan from the pers-\npective of navigation subsystems  \n\nAll navigation test analyses were based on the principle of data recording and off-\nline reconstruction. The idea of recording was to store the entire stream of IMU out-\nputs (6 numbers at 60 Hz) and aircraft navigation blocks (9 numbers at 20 Hz). The \nrequirements for data rate and storage volume were high, but the most demanding \nrequirement was with respect to data quality. To successfully calculate the navigation \ndata, the stream of IMU data had to be close to perfect. Because the navigation algo-\nrithm was based on integration, lack of even a single IMU block (for example during \nmaneuvering) could harm the entire task.   \n\nTable 1. The project test plan \n\nTest \nname \n\nType \nGoal \n\nConfiguration \n\nB Captive \nnavigation con-\n\ncept  \n\nBig commercial aircraft, alternative \nIMU hardware, alternative aircraft \nnavigation system, recording system \n\n104/2 Captive \nnavigation algo-\nrithm  + hard-\n\nware \n\nDedicated aircraft with its navigation \nsystem, dedicated IMU (from Tamam), \nrecording system \n\n104/3 Captive \nnavigation im-\nplementation  \n\nDedicated aircraft with its navigation \nsystem, Popeye electronic box (naviga-\ntion and all other operational comput-\ners, IMU) installed in the missile \nenvelope, recording system \n\n107 Captive   seeker tests  As above + seeker \n\n109 Captive \n  communication \n\ntests  \nAs above + communication pod \n\n1004 Free \n     inertial mid-\n\ncourse    \n\nAs above but missile with its motor, \ncontrol and guidance subsystems. \nTelemetry. \n\n1007 Free final system test The complete system \n \n  \n\n\n\n The Early Eighties: Development of In-Flight Transfer Alignment 185 \n\n \n\nThe proposed solution was quite complex, but presumably the best available given \nearly days hardware and software limitations. The recording medium was analog \nvideo; dedicated hardware to convert digital data into video stream (and vice versa) \nwas designed and built. To increase data quality, two parallel video recorders were \ninstalled. The process of preparing the digital stream data was difficult and long: the \nfirst phase was to play the video data and convert it into a digital stream of blocks, \nand sometimes some reiteration was required. A dedicated mini-computer was in-\nvolved in this process. The second phase was to merge the blocks from two video \nrecorders; the third was manual corrections of some blocks that were erroneous after \nthe merge. In retrospect, this effort was critical to acquiring essential knowledge and \nan understanding of navigation system performance and sensitivities. \n\nThe analysis of the first navigation test B was difficult; the data-reduction process \nwas very lengthy and then it turned out that the sensor calibration was inconsistent. It \ntook several weeks to find the reason for the problem encountered in this test: bad \ntime synchronization. The surprise was twofold: indeed the temporal synchronization \nbetween IMU data and aircraft data was worse than expected, but the system sensi-\ntivity to these phenomena was much higher than one might have intuitively expected. \nSince then, synchronization has become one of the most important integration issues, \nthe topic of many discussions and much testing. We can clarify this theme with a \nsimple example. Assume that we make a 0.5 g (5 m/sec^2) turn with 3 cm/sec veloci-\nty noise and we are willing to estimate bias up to 0.5 mg (0.5 cm/sec^2). For accelera-\ntion of 0.5 g = 5 m/sec2, 1 msec of synchronization error will produce a measurement \nerror of 0.5 cm/sec, significantly less than the velocity error of 3 cm/sec. However, \nafter 1 sec, the bias error of 0.5 mg will cause a velocity error of 0.5 cm/sec, so the \nsame as the error due to miss-synchronization   The observation was that the compari-\nson of error due to miss-synchronization with velocity noise is misleading. The cor-\nrect comparison is between the synchronization error and the error caused by bias that \nwe are willing to estimate. Indeed, these errors appear with similar correlation to the \ntrajectory. In this case, since we would like to keep the synchronization error well \nbelow the error due to the estimated bias, the allowed synchronization error should be \non the order of 0.1 msec.  \n\nTest series 104/2 was less problematic; integration with the real IMU went smooth-\nly, and the performances and sensor calibration behaved well. This was a great oppor-\ntunity to optimize the transfer alignment maneuver. The starting point was relatively \nlong S-shaped maneuver, required for a good estimation of the heading error and  \nz-axis drift. It turned out that in a Popeye-type missile, the sensitivity to heading error \nis relatively low; the simple (albeit non-intuitive) explanation was as follows: if a \nmissile is launched and does not perform any maneuvers, than at the end of the mis-\nsion its position error will be zero, even if the heading error was large (in this case all \nother errors are assumed to be zero). In other words, heading error influences system \nerror only if there is acceleration. The most significant acceleration (due to the rocket \nmotor) was at the beginning of the mission. This observation allowed to relax the \nrequirements for z-axis drift estimation and significantly reduced the need to estimate \nheading error. As a result, a shorter maneuver was proposed which was much easier \nfrom an operational point of view. It was based on a single, relatively small turn and \n\n\n\n186 Z. Berman \n\n \n\nthe time of captive flight was reduced significanly. An additional result of the 104/2 \nseries was the tuning of the Kalman filter.   \n\nOn Itzhack Bar-Itzhack, the first navigation group leader relates the following: \"In \nthose days, Itzhack Bar-Itzhack was coming in to Rafael once a week to work with us. \nFor me, he was one of the team members, perhaps younger than many of the others. \nHe was always smiling, in a good mood and ready to tell new jokes, some of them not \nnecessary politically correct by today's standards. Nevertheless, from a professional \npoint of view, he was always serious, well-organized and very precise. He was always \nready to carry out new assignments, whatever was needed, once he had studied the \ndetails of aircraft navigation systems in depth; on one occasion, for example, he pro-\nposed a missile trajectory generator algorithm. We always discussed the current is-\nsues, problems and plans with him.\"   \n\nThe 104/3 tests, performed with the actual navigation system (hardware and soft-\nware), were relatively extensive; they aimed to cover the entire operational envelope. \nThe software integration was very successful; it worked well from the first flight test. \nThe most important lesson learnt here was the system's sensitivity to flight conditions: \nfor quiet flights very good results were obtained, whereas for low-level, fast flights, \nthe results were worse but still within requirements. The long-flight 104/3 test series, \nfollowed by the even longer 107 series, was used to create a huge library of naviga-\ntion data: real-life trajectories, sensor performance together with post-processing \nanalysis, and error sensitivities for a very broad family of error sources. This library, \nwhich was continuously updated with new tests, served as an excellent platform to \nlearn navigation systems and develop new algorithms.  \n\nThe seeker test series 107 showed a problem that appeared to be related to the na-\nvigation system. The seeker pointing errors were too large. Rafael people claimed that \nthis phenomenon was due to aircraft navigation errors, whereas the air force claimed \nthat after position update the aircraft navigation error was about 50 m, and such large \npointing errors must therefore be related to the missile. The first task was to plan a \ntest that would separate the error sources. The idea was to keep the seeker tracking a \ntarget at known positions, so the system pointing errors could be measured conti-\nnuously for several tens of seconds. A Kalman filter would be designed with mea-\nsurements of pointing errors and states of position error, attitude error (in an inertial \nreference frame) and misalignment between the seeker and the navigation system \n(related to the body reference system). The Kalman filter implementation was off-line \nand based on the already existing reconstruction infrastructure.  This test showed with \nhigh confidence that the pointing errors were due to position errors. Later analysis \nshowed that although the position updates were quite accurate, they did not properly \ncorrect for the velocity error and therefore, after 1 min or more, the aircraft accuracy \nwas significantly worse than the specified 50 m. This fact endangered the entire \nproject, but a solution was proposed almost immediately. The initiative was to make \nauxiliary target updates. The idea was to find, close to the actual target, an auxiliary \ntarget with good visibility and known location. Then, from pointing to this target, the \nsystem could estimate the pointing errors and correct them (assuming that they came \nfrom horizontal position errors). This algorithm was accepted and applied in the sys-\ntem. Years later, pilots still use this procedure with every aircraft working with GPS, \n\n\n\n The Early Eighties: Development of In-Flight Transfer Alignment 187 \n\n \n\nclaiming that it improves performance; the reason for this is unknown, but my im-\npression is that this procedure survived the GPS era mainly because it makes the mis-\nsion less boring. In any case, the lessons learned in line-of-sight analyses and the \nintegration with navigation errors were later used to propose installation of the navi-\ngation system inside the seeker gimbal [10]. A well-known application of this ap-\nproach is Rafael's Litening Airborne Navigation and Targeting Pod.     \n\nThe preparation for the first free flight test, test 1004, went according to plan, but \none day before the test, during the final captive flight test, a new feature was tested. \nDuring the airframe configuration test, immediately after the launch, strong roll \nmovement was observed. Therefore, the pilot performed a strong roll movement (as \nfast as he could) to simulate the release roll movement. As a result, in this route, large \nnavigation error appeared. It happened only once and there was a big debate whether \nto stop the test launch or not. Rafael people (at least the senior ones) wanted to con-\ntinue; it was the test pilot who persuaded the project managers (from the Ministry of \nDefense) to postpone the test and require, from the Rafael team, a solid analysis of the \nphenomena.  \n\nThe result of the analysis was surprising: it was essentially a system/hardware \nproblem. It turned out that the actual maximal angular acceleration is much higher \nthan the one specified. Eventually the spec was changed, Tamam made the necessary \nchanges in their design and after several months of intensive work, test 1004 was \nready to restart. At the very end of the last test before the launch, an IMU error mes-\nsage appeared. Again, long discussions, collection of all available data, consultations \nwith experts, lasted till late-night hours.   \n\nThis time the decision was to continue the testing. On the following day, early in \nthe morning, the missile was launched. Before the successful happy ending, the  \nmissile was almost terminated by safety personnel due to a lengthy lack of communi-\ncation with the operations room, first due to telemetry problems, then due to a tape-\nrecorder, that someone had put in the room and created acoustic noise oscillations. At \nthe very last moment the problems were fixed, and everyone in the operations room, \nincluding the safety personnel, were able to witness the missile's precision in follow-\ning its designated route. \n\n4 Post 1985: Still a Lot to Do  \n\nAfter the success of test 1004, the navigation group's involvement in the project has \ngradually reduced. Then, in 1986, great excitement spread from the Popeye project \nmanagement: we were going to demonstrate the system in the United States. Project \nmanagement's view was that since the missile's development had been completed, in \norder to reduce our costs and time schedule, the aircraft to be demonstrated in the US \nshould mimic the interface that was already integrated in the Popeye missile. At this \nstage, schedule was very tight and intensive work was required: a few months for \nimplementations and integrations, then a few captive flights for testing and operation-\nal training and finally, a full operational launch. In the course of the meetings and \ntests, we understood that our system had excellent characteristics: the quality of the \n\n\n\n188 Z. Berman \n\n \n\nseeker, the navigation accuracy and the very short and easy transfer alignment proce-\ndure were world-class outstanding. From a technical point of view, the process ran \nvery smoothly with no critical failures. One improvement of note was the use of the \naircraft simulator to create dynamic trajectories, in order to record the blocks sent to \nthe Popeye and analyze them. In this way we were able to fix some problems well \nahead of the flight tests.   \n\nDuring the integration in the US, we understood that changing an aircraft's inter-\nface to simulate another interface was an once-in-a-lifetime scenario and that the next \ntime we would need to change our interface. Then we understood that our design \nlacks the flexibility to support such changes. The problem was related to Kalman \nfilter propagation and the time window for measurements. The first implementation \n(due to a lack of spare computer resources) was very rigid; the covariance matrix was \npropagated to a known a-priori measurement time, creating a narrow time window in \nwhich the measurement should appear; if it didn't, the measurement was discarded \nand the system was moved to the next second.  In the next version of the transfer \nalignment algorithms, due to the change in the covariance propagation scheme, the \nsystem was ready to receive asynchronous measurements, with the only limitation \nbeing the minimal time between measurements.   \n\nAnother great challenge faced the team when it started work on the inertial naviga-\ntion system for air-to-air missiles. It was clear that a dedicated maneuver for transfer \nalignment was out of the question. The approach was to perform a continuous transfer \nalignment, namely to turn on the missile navigation system before takeoff and keep it \nworking continuously such that the missile would be ready to launch all the time. \nSince in every aircraft flight there are always periods of some acceleration, sensor \nerrors and pitch and roll angles can be estimated and kept accurate during the flight\u2014\nafter intensive work for proper Kalman filter tuning of course. The only problem is \nthat for long flight periods with no accelerations, the heading error can grow. In an \nair-to-air missile, due to its huge acceleration, the sensitivity to heading error is much \nmore severe than that in air-to-surface missiles. The solution came from a very inter-\nesting direction: the reason that we could not perform a direct alignment (i.e. simply \ncopy aircraft orientation onto that of the missile) was that the missile had been in-\nstalled under the wing, and its relative orientation was changing during the flight. \nIndeed this was true, but only for pitch and roll; the heading misalignment (the differ-\nence between the aircraft and missile orientations) was almost fixed during the flight. \nThis observation led to adding another state to the Kalman filter, the new state being \nthe heading misalignment, and the resulting 13-state Kalman filter provided excellent \ncontinuous transfer alignment. This 13-state Kalman filter has become a standard \nsolution that is implemented in all relevant airborne systems. \n\nThe stringent requirement for time synchronization between the aircraft and missile \nhas always been a key issue in aircraft integrations. The number of types of aircrafts \nwhich needed to be integrated was constantly increasing, as was the number of Rafael \nairborne systems that included navigation units. As a result, more and more cases of \nan aircraft navigation system not providing the required synchronization accuracy \nbegan to appear. The obvious consequence was performance degradation, until an \nimportant observation was made. It was clear that precise synchronization is required \n\n\n\n The Early Eighties: Development of In-Flight Transfer Alignment 189 \n\n \n\nto accurately interpret the system errors during maneuvers. However, one could omit \nthe measurements during the maneuvers and estimate the system errors after a ma-\nneuver had been completed. This non-trivial observation claimed that due to the \nintegral nature of the system, there is no significant harm to performance when no \nmeasurements are performed during the maneuver itself (but with enough measure-\nments after the maneuver) compared to the case in which all measurements are taken. \n\nAt this point our paper is complete; the basic solution for transfer alignment and its \nessential improvements have been described. During those years, Rafael provided \nstate-of-the-art systems, with a constant line of improvements. Of course the real \nstory never ends, and the navigation group at Rafael continues to develop navigation \nsystems, based on the foundations described here, facing new challenges and produc-\ning new achievements.  \n\nIn my opinion, the secret to accomplishment lies in following these three guide-\nlines, as well illustrated in the story described herein:  \n\n\u2022 Recruit capable people  \n\u2022 Provide a challenge  \n\u2022 Build an infrastructure and culture to analyze integrations and tests properly and in \n\ndepth \n\nAcknowledgments. First I must thank Yaakov Oshman who encouraged me, from the \nvery beginning, to write this paper, and for his help and support which were vital in \nsurmounting several difficulties (for example, delays due to issues of security).  \n\nThen I must thank my colleagues from the navigation group who told me stories \nfrom the different project phases, helped me formulate a complete picture, and pro-\nvided helpful remarks. During these interviews and during the writing of this paper, I \nmust admit that Itzhack Bar-Itzhack's absence was painfully evident: I had so many \nquestions to ask him\u2026 \n\nLastly, and most importantly, I must acknowledge all of the people who worked on \nthis project: the project managers, the engineers: systems, software, hardware, control, \nnavigation and integration, the technicians, the  Israeli  Air Force flight test team, and \nso many others whose coordinated work allowed everything to come together. For \nme, they were simply wonderful people who I was lucky to work with and from \nwhom I learned a great deal.   \n\nReferences  \n\n1. Bar-Itzhack, I.Y., Levinger, E.: An analysis of errors in navigation inertial systems. Tech-\nnion (1975) (in Hebrew) \n\n2. Gelb, A.: Applied Optimal Estimation. The M.I.T. Press (1974) \n3. Bar-Itzhack, I.Y., Porat, B.: Azimuth Observability Enhancement during Inertial Naviga-\n\ntion System In-Flight-Alignment. AIAA J. Guidance and Control 3(4), 337\u2013344 (1980) \n4. Porat, B., Bar-Itzhack, I.Y.: Effect of Acceleration Switching during INS In-Flight-\n\nAlignment. AIAA J. Guidance and Control 4(4), 385\u2013389 (1981) \n\n\n\n190 Z. Berman \n\n \n\n5. Weinreb, A., Bar-Bar-Itzhack, I.Y.: The Psi Angle Error Equation in Strapdown Inertial \nNavigation Systems. IEEE Transactions on Aerospace and Electronic Systems AES-14(3) \n(1978) \n\n6. Bar-Itzhack, I.Y., Vitek, Y.: The Enigma of False Bias Detection in a Strapdown System \nduring T.A. AIAA J. of Guidance (March-April 1985) \n\n7. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Unified Approach to Inertial Navigation System Er-\nror Modeling 15(3), 648\u2013653 (1992) \n\n8. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Observability Analysis of Piece Wise Constant Sys-\ntems, Part I \u2013 Theory. IEEE Transactions of Aerospace and Electronic Systems AES-\n28(4), 1056\u20131067 (1992) \n\n9. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Observability Analysis of Piece Wise Constant Sys-\ntems, Part II \u2013 Application to Inertial Navigation In-flight Alignment. IEEE Transactions \nof Aerospace and Electronic Systems AES-28(4), 1068\u20131075 (1992) \n\n10. Berman, Z.: On Range and Attitude Estimation. In: Proceedings of the IEEE Position, Lo-\ncation and Navigation Symposium, Las Vegas (1994) \n\n11. Reiner, J.: In-Flight Transfer Alignment Using Aircraft-to-Wing Stiff Angle Estimation. \nIn: AIAA Conference on GNC, San Diego, CA (July 1996) \n\n12. Reiner, J., Ben-Jaacov, J., Rotstein, H.: Transfer Alignment in the Presence of Unknown \nAircraft Measurement Delays. In: IBA Conference on Navigation, Herzlyia, Israel (May \n1999) \n\n13. Bar-Itzhack, I.Y.: In Flight Alignments of Inertial Navigation Systems. Series of Control \nand Dynamic Systems 38, 369\u2013396 (1990) \n\n14. Titterton, D.H., Weston, J.L.: Strapdown Inertial Navigation Technology, Peter Peregrinus \nLtd., UK (1997) \n\n \n\n\n\n \n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control, \n\n191 \n\nDOI: 10.1007/978-3-662-44785-7_11 \n \n\nEfficient Error Model Construction \n\nZeev Berman \n\nBerman Consulting and Training Ltd, Kinneret, 15105, Israel \nberman.consult@gmail.com \n\nhttp://www.bermanconsult.com \n\nAbstract. This paper describes a new method for error model construction. In-\nstead of the standard local slope analysis of the Allan variance, two major mod-\nifications are proposed: (1) the Direct Bound principle, i.e. finding an entire  \nerror model that generates analyzing tool values that tightly bound the analyz-\ning tool values generated by the real data; (2) instead of using Allan variance as \na unique analyzing tool, a variety of analyzing tools termed Direct Predictor \n(DP) types 0, 1, 2, and 3 are introduced. In the paper, a uniform structure of \nDPs is developed and their parameterization is extended. For a nominal model \nthat consists of a Markov process with additive white noise, the analytical func-\ntions for DPs are presented (for infinite data length). The errors due to the final \ndata length are analyzed. Using these results, a reliable optimization problem is \npresented to implement the Direct Bound approach. The flexibility of working \nwith hard and soft bounds is introduced. The presented simulation results show \nthat the proposed method is indeed efficient and provides satisfactory results for \nmodel parameter estimations. The paper concludes with a description of an  \nentire engineering process to cover test design and its analysis. \n\n1 Introduction \n\nThis paper is a part of ongoing research on inertial sensor calibration under changing \ntemperature. In it, we address the question of how to find a model (time invariant) that \ncan be used to bound the performance of the underlying navigation system, even if at \nthe sensor level, the random (residual after calibration) errors may follow time-variant \ndynamics. This is the precise reason why system identification models are not popular \nin the navigation community. The standard approach is to use Allan variance (AVAR) \nanalysis and construct the error model from different local slopes of the Allan plot. A \nsurvey of the literature on inertial sensor calibration and error model analysis reveals \nmany papers on the subject (see for example [1-3]). In this context, the IEEE Standard \ngroup's attempt to create a common terminology and framework for gyro modeling is \nvery promising. The standard approach [4] divides the error sources into two groups: \nstochastic and environmental. For stochastic errors, significant effort has been in-\nvested in creating a suitable stochastic model, using the AVAR and related  \npower spectral densities (PSDs). The attempt to present methodologies for the devel-\nopment of models for post-calibration residual errors [5] marks important progress.  \n \n\n\n\n192 Z. Berman \n\n \n\nThe models related to PSD, for example flicker noise\u2014termed bias instability, are \nwell adapted for time-invariant, stationary systems and work well at room tempera-\nture, but they are not well-suited to dealing with environmental (mainly thermal) sen-\nsitivity. Our goal is to propose an efficient method of constructing an error model \nunder environmental sensitivity, with relatively short data-collection time and satis-\nfactory accuracy. This new approach [6, 7] is based on two principles:  \n\n\u2022 Instead of looking for local slopes of AVAR (or other analyzing functions), we \npropose finding an entire model that generates analyzing tool values that tightly \nbound those generated by the real data. This is called the Direct Bound approach.   \n\n\u2022 Instead of using AVAR as a unique analyzing tool, a variety of analyzing tools, \ntermed Direct Predictor (DP) types 0, 1, 2, and 3, are proposed.  \n\nThe applicability of the proposed approach was verified with real-life data taken from \nMEM's gyro calibration. For further details see [6].  \n\nThe main drawback in the proposed approach [6] was that the analysis and applica-\ntion were carried out using simulations and trial and error search. The purpose of this \npaper is to convert the ideas presented and verified in [6] into a concrete engineering \nprocedure that can be easily implemented by the navigation community.  \n\nThe paper is structured as follows. In section 2, the DPs are defined as linear op-\nerators acting on the data. It is shown that all DPs have the same unified structure \nwith different parameters for types 0, 1, 2, and 3. The nominal model in this paper is a \nfirst-order Gaussian Markov process with additive white noise. In Section 3, a unified \nanalytical function to describe the DP values for the nominal model and infinite data \nlength is developed. In section 4, an approximation for DP errors due to finite length \nis proposed and verified for a wide range of cases. Section 5 presents an optimization \nproblem that implements the Direct Bound approach. It turns out that in order to get \nreliable solutions from optimization algorithms; one must carefully define the under-\nlying optimization problem, with proper scaling and normalization. After doing so, \nwe present the error model accuracy for instrumental gyro model, and for all four \ntypes of DPs. In this case, the DP type 3 outperforms the Allan Variance. Although \nthe Direct Bound approach defines only hard bounds over the test data, in this section \nhard bound and soft bound applications are discussed and presented. Section 6 is de-\nvoted to a discussion of the entire engineering procedure, error model construction, \nevaluation of its accuracy, and the selection of design parameters\u2014mainly duration of \ndata collection.  \n\n2 The General Structure of Direct Predictors \n\nThe AVAR \n2( )y? ?  for infinite data length is defined as follows:  \n\n ( )22 1( ) ( , )\n2y\n\nE y? ? ?= ?                                           (1) \n\n \n\n\n\n Efficient Error Model Construction 193 \n\n \n\nWhere E  is the expectation operator and ( , )y?? is defined as  \n\n ( )\n2\n\n1 1\n\n1 1\n, ( ) ( )\n\nn n\n\ni n i\n\ny y i y i n\nn n dt\n\n??\n= + =\n\n? = ? =? ?                         (2) \ndt  is the sampling time. The Allan deviation (ADEV) is the square root of \n\nAVAR and is denoted ( )y? ? .   \nThe first interpretation for ( , )y??   is the difference between successive \n\nmean values over two sampling periods. We will provide an additional inter-\npretation for ( , )y??  in the context of mean prediction error. Refer to i n=   \n\nas the current time; then\n1\n\n1\n( )\n\nn\nE\n\ni\n\nD y i\nn =\n\n= ?  is the estimated mean data value \n(drift in gyro nomenclature) over the past. We can interpret ( , )y??  using the \nfollowing observation:  \n\n ( ) ( )\n2\n\n1\n\n1\n, ( )\n\nn\nE\n\ni n\n\ny y i D\nn\n\n?\n= +\n\n? = ??                               (3) \n\n{ }2\n1\n\n( )\nnE\n\ni n\ny i D\n\n= +\n? is the sequence of prediction errors for \"future\" indices \n\n1, , 2i n n= + .  \nSo ( , )y??  is the mean prediction error (over the sampling period with length? ) \n\nand AVAR (for infinite data length) is half the covariance of the mean prediction \nerror. The DPs introduced in [6] are generalizations of this structure; all of them are \nhalf the covariance of the mean prediction error over the sampling interval, but they \nare distinct in terms of estimation and prediction methods.  \n\nDP type 0 is simply the AVAR, for which the estimator is given by: \n\n 0\n1\n\n1\n( )\n\nn\nE\n\ni\n\nD y i\nn =\n\n= ?                                                  (4) \nand the mean prediction error is denoted by:  \n\n ( )\n2\n\n1 1\n\n1 1\n, ,0 ( ) ( )\n\nn n\n\ni n i\n\ny y i y i\nn n\n\n?\n= + =\n\n? = ?? ?                                (5) \nThe third argument in ?  is the predictor type.   \nDP type 1 is based on estimations calculated over a fixed interval (independent  \n\nof? ). \n\n 1\n1\n\n1\n( )\n\nm\nE\n\ni\n\nD y i\nm =\n\n= ?                                                   (6) \n\n\n\n194 Z. Berman \n\n \n\n ( )\n1 1\n\n1 1\n, ,1 ( ) ( )\n\nm n m\n\ni m i\n\ny y i y i\nn m\n\n?\n+\n\n= + =\n\n? ?\n? = ?? ?\n\n? ?\n? ?                               (7) \n\nDP type 2 is based on the Kalman filter estimation; this calculation requires defini-\ntion of a nominal model. The nominal model assumed in this paper is a first-order \n\nGaussian Markov process with additive white noise. To describe 2\nED as a function of \n\ndata samples, some analysis is needed.  For Kalman filter implementation, the mea-\nsurement is defined by ( ) ( ) ( )y i x i v i= + ; ( )x i is the first-order Gaussian Markov \nprocess, given by ( ) ( 1) ( 1)fx i x i w i?= ? + ? , and ( ), ( )v i w i are measurement \nand process random noise processes, respectively. The Kalman filter iterations (see \n[8] for notations) are: \n\n                  (8) \n\n( )ex i  is the estimate, k  is the Kalman gain. \nCombining them: \n\n( )( ) 1 ( 1) ( ) ( 1) ( )e f e ex i k x i ky i x i ky i? ?= ? ? + = ? +    (9) \nwith ( )1 fk? ?= ? . In the context of this paper, the Kalman filter gain k is \ntaken as its steady-state value. See the Appendix for the steady-state Kalman \nfilter gain calculation in this case. By inserting the above iteration for \n\n1, 2,..i m= , using (0) 0ex = ,  we get:  \n\n2\n1\n\n( ) ( )\nm\n\nE m i\ne\n\ni\n\nD x m k y i? ?\n=\n\n= = ?                                     (10) \nand therefore  \n\n \n\n1 1\n\n1\n( , , 2) ( ) ( )\n\nm n m\nm i\n\ni m i\n\ny y i nk y i\nn\n\n? ?\n+\n\n?\n\n= + =\n\n? ?\n? = ?? ?\n\n? ?\n? ?                    (11) \n\nDP type 3 applies both the optimal estimator and the optimal predictor (for a no-\n\nminal model). Consider again the prediction error series{ }\n1\n\n( )\nm nE\n\ni m\ny i D\n\n+\n\n= +\n? . For an \n\noptimal predictor that applies the underlying system model (first-order Gaussian Mar-\nkov process with additive white noise), we can calculate the prediction error series as \n\n{ }\n1\n\n( )\nm ni m E\n\nf i m\ny i D?\n\n+?\n= +\n\n?  (see [8] for details). In this case, DP type 3 can be calcu-\n\nlated as:  \n\n( )\n( ) ( 1)\n\n( ) ( ) ( ) ( )\n\ne f e\n\ne e e\n\nx i a x i\n\nx i x i k y i x i\n\n?\n\n? ?\n\n= ?\n\n= + ?\n\n\n\n Efficient Error Model Construction 195 \n\n \n\n( )2\n1 1\n\n1\n( , ,3) ( ) ( )\n\nm n m\nn m i\n\nf f f\ni m i\n\ny y i k y i\nn\n\n? ? ? ? ?\n+\n\n?\n\n= + =\n\n? ?\n? = ? + + +? ?\n\n? ?\n? ?\n\n (12) \n\n \n\n1 1\n\n11\n( , ,3) ( ) ( )\n\n1\n\nnm n m\nf m i\n\nf\nfi m i\n\ny y i k y i\nn\n\n?\n? ? ?\n\n?\n\n+\n?\n\n= + =\n\n? ??\n? ?? = ?\n? ??? ?\n? ?            (13) \n\nAfter describing the four types of predictors, we can deduce that all of them obey \nthe same general structure:  \n\n \n\n1 1\n\n1\n( , ) ( ) ( )\n\nm n m\nm i\n\ni m i\n\ny y i y i\nn\n\n? ? ?\n+\n\n?\n\n= + =\n\n? ?\n? = ?? ?\n\n? ?\n? ?                   (14) \n\nwith the following parameter settings:  \n\nDP type 0: , 1, 1m n ? ?= = =  \n\nDP type 1:  1,\nn\n\nm\n? ?= =  \n\nDP type 2:  ( )1 ,fk nk? ? ?= ? =  \n\nDP type 3:  ( )\n1\n\n1 ,\n1\n\nn\nf\n\nf f\nf\n\nk k\n?\n\n? ? ? ?\n?\n\n?\n= ? =\n\n?\n \n\nNote that since all DPs satisfy the same structure, they are equivalent in terms of \ncomputational complexity.  \n\n3 Direct Predictor Analysis \n\nIn this section we take the general structure of the mean prediction error described in \nEq. (14) and insert the structure of the signal generated by the nominal system model \nthat consists of the first-order Gaussian Markov process with additive white noise:  \n\n \n( ) ( ) ( )\n\n( ) ( 1) ( 1)\n\ny i x i v i\n\nx i x i w i?\n= +\n= ? + ?\n\n                               (15) \n\nwhere the sensor additive ( )v i  is white noise (which after integration causes random \nwalk) and ( )w i is process noise related to the Markov process.  First we will develop \nan equation for the mean prediction error ( , )y?? for this particular signal. Then its \ncovariance will be calculated to provide DP values (for infinite data length).  \n\nSince the predictor is a linear operator and our signal ( )y i can be considered the \nsum of two signals ( ), ( )x i v i , we can analyze them separately. We start with the \nMarkov process.  \n\n \n\n\n\n196 Z. Berman \n\n \n\nOne can solve the recursion defined in Eq. (15) to get:  \n\n1 2 3( ) (1) (1) (2) ... ( 2) ( 1)i i ix i x w w w i w i? ? ? ?? ? ?= + + + + ? + ?\n    \n\n(16) \n\nSubjecting Eq. (16) to a straightforward but relatively long and involved algebraic \nmanipulation, the following expression is obtained:  \n\n \n\n1\n1 1\n\n1 1\n\n( ) , (1) , ( )\nm m\n\nm i m m i\n\ni i\n\nx i S m x S m i w i\n? ?? ? ?\n? ?\n\n?\n? ? ? ?\n\n= =\n\n? ? ? ?= + ?? ? ? ?\n? ? ? ?\n\n? ?    (17) \nwhere ( , )S q n is a sum of geometric series with ratio q , n elements and 1 as the first \nelement. \n\n1 1( , ) 1\n1\n\nn\nn qS q n q q\n\nq\n? ?= + + + =\n\n?\n                          (18) \n\nNote that ( ,1) 1S q = . \nSimilarly, one can show that  \n\n( ) ( )\n1\n\n1 1\n\n( ) , ( 1) , ( )\nm n m n\n\ni m i m\n\nx i S n x m S m n i w i? ?\n+ + ?\n\n= + = +\n= + + + ?? ?          (19) \n\nNow we need to find a substitution for ( 1)x m + , which is  \n\n \n\n1\n1\n\n1\n\n( 1) (1) ( ) ( )\nm\n\nm m i\n\ni\n\nx m x w m w i? ?\n?\n\n? ?\n\n=\n+ = + +?                (20) \n\nFinally, after omitting some details which are straightforward but quite involved, \nwe get the following general structure for the mean prediction error of the Markov \nprocess for all types of DPs: \n\n \n\n( )\n\n( )\n\n( )\n\n1\n\n1\n1\n\n1\n\n1\n\n1\n( , ) , , (1)\n\n1\n, , 2 ( )\n\n1\n, ( )\n\nm m\n\nm\nm i m i\n\ni\n\nm n\n\ni m\n\nx S n S m x\nn\n\nS n S m i w i\nn\n\nS m n i w i\nn\n\n?? ? ? ??\n?\n\n?? ? ??\n?\n\n?\n\n?\n\n?\n? ? ?\n\n=\n+ ?\n\n=\n\n? ?? ?? = ? +? ?? ?\n? ?? ?\n\n? ?? ?+ ? ? ? +? ?? ?\n? ?? ?\n\n+ + ?\n\n?\n\n?\n\n  (21) \n\nFrom Eq. (21), we can calculate half the variation of the mean prediction error; its \nroot square is the DP value for infinite data length, and in particular, for type 0 we \nwill have the exact AVAR expression for the Markov process.  \n\nRecall that (1), ( ) 1, 2, , 1x w i i m n= + ?  are independent. (1)x  has variance\n2\n\nmS and ( ) 1, 2,...,w i i N= has covariance \n2 2 2(1 )w mS S ?= ? . Using this in-\n\nformation, the covariance calculation is direct. \n\n\n\n Efficient Error Model Construction 197 \n\n \n\n( )( ) ( )\n\n( )\n\n( )\n\n2\n2 1 2\n\n2\n\n21\n1 2\n\n2\n1\n\n21\n2\n\n2\n\n1 1\n( ) , , ,\n\n2 2\n\n1\n, , 2\n\n2\n\n1\n,\n\n2\n\nm m\nx m\n\nm\nm i m i\n\nw\ni\n\nm n\n\nw\ni m\n\nVar x S n S m S\nn\n\nS n S m i S\nn\n\nS m n i S\nn\n\n?? ? ? ? ? ??\n?\n\n?? ? ??\n?\n\n?\n\n?\n\n?\n? ? ?\n\n=\n\n+ ?\n\n=\n\n? ?? ?= ? = ? +? ?? ?\n? ?? ?\n\n? ?? ?+ ? ? ? +? ?? ?\n? ?? ?\n\n+ + ?\n\n?\n\n?\n \n\n(22) \n\n \nUsing ( )2 2 21w mS S ?= ? we get the general formula for DP values (for infinite \n\ndata length) for the first-order Gaussian Markov process:  \n\n( )\n\n( ) ( )\n\n( ) ( )\n\n2\n1\n\n22 1\n2 2 1\n\n2\n1\n\n21\n2\n\n, ,\n\n( ) 1 , , 2\n2\n\n1 ,\n\nm m\n\nm\nm i m im\n\nx\ni\n\nm n\n\ni m\n\nS n S m\n\nS\nS n S m i\n\nn\n\nS m n i\n\n?? ? ??\n?\n\n?? ? ? ? ? ??\n?\n\n? ?\n\n?\n\n?\n? ? ?\n\n=\n\n+ ?\n\n=\n\n? ?? ?? ?? ?? +? ?? ?? ?? ?? ?\n? ?\n? ?? ?? ?= + ? ? ? ? +? ?? ?? ?\n\n? ?? ?? ?\n? ?\n? ?+ ? + ?? ?\n? ?\n\n?\n\n?\n   \n\n(23) \n\nTo complete the calculation for our process, we need to calculate the DP for v, the \nwhite noise component. We start with Eq. (14) for this case: \n\n \n\n1 1\n\n1\n( , ) ( ) ( )\n\nm n m\nm i\n\ni m i\n\nv v i v i\nn\n\n? ? ?\n+\n\n?\n\n= + =\n\n? ?\n? = ?? ?\n\n? ?\n? ?                    (24) \n\nRecall that ( )v i is independent with variance 2vS ; the square of the DP values \n\n(half covariance) for white noise is given as:  \n\n( ) ( )\n2 2\n\n22 2 2 2\n2 2\n\n1 1\n\n( ) 1 ( , )\n2 2\n\nm n m\nm iv v\n\nv\ni m i\n\nS S\nn S m\n\nn n\n? ? ? ? ? ?\n\n+\n?\n\n= + =\n\n? ?\n= + = +? ?\n\n? ?\n? ?     (25) \n\nNow, since the Markov process and white noise components are independent, we \ncan combine Eqs. (23) and (25) to obtain:  \n\n2 2( ) ( ) ( )y x v? ? ? ? ? ?= +                                      (26) \nEq. (26), together with Eqs. (23) and (25), provide  a closed-form solution for \n\n( )y? ?  of the first-order Gaussian Markov process with additive white noise. The \nmodel parameters are ,m vS S - the standard deviations of the Markov process and \n\n\n\n198 Z. Berman \n\n \n\nwhite noise components, respectively; the third model parameter is ? , related to the \nMarkov process time constant mt by ( )exp / mdt t? = ? , where dt  is sampling \ntime. The other parameters, . ,m ? ? , are related to DP structure (type and parame-\nters). The parameter n  is related to the argument ?  by /n dt?= .   \n\nNote that the notation ( ,...)y? ?  is used in this paper for DPs calculated for infi-\nnite data length by Eqs. (26), (23), and (24).  The DP value calculated for final data \nlength will be denoted ( ,...)DP ?  . \n\n4 Direct Predictor Errors Due to Finite Data Length \n\nWe begin by describing how the DP for finite data length is calculated, using a  \n\nnon-overlapping approach. The total number of samples is denoted by N ; for any  \n?  we divide the data sample into N?  groups (windows), every window with  \nm n+  elements, and every group starting with the index kn , such that \n\n1 2 31, 1, 2( ) 1,... ( 1)( ) 1Nn n m n n m n n N m n? ?= = + + = + + = ? + ? . The \n\nmean prediction error, calculated for window k , is defined by: \n\n \n\n1 11\n( , , ) ( ) ( )\n\nk k\n\nk k\n\nn m n n m\nm i\n\ni n m i n\n\ny k y i y i\nn\n\n? ? ?\n+ + ? + ?\n\n?\n\n= + =\n\n? ?\n? = ?? ?\n\n? ?\n? ?\n? ?                  (27) \n\nThe square of , denoted DQ , is estimated as follows: \n\n2 2\n\n1\n\n1\n( , , ) ( , , ) ( , , )\n\n2\n\nN\n\nk\n\nDQ y N DP y N y k\nN\n\n?\n\n?\n? ? ?\n\n=\n= = ??   (28) \n\nTo compare DQ with a Chi-square distribution, we make the following  \nnormalization  \n\n \n\n22\n\n1\n\n2 ( ) ( , , )\n( , , )\n\n2 2 ( )\n\nN\ny\n\nk y\n\ny k\nDQ y N\n\nN\n\n?\n\n?\n\n? ? ??\n? ?=\n\n? ??\n? ?=\n? ?\n? ?\n\n?                               (29) \n\nIf  ( , , ) 1,2,...,y k k N??? =  is independent, \n2\n\n1\n\n( , , )\n\n2 ( )\n\nN\n\nyk\n\ny k? ?\n? ?=\n\n? ??\n? ?? ?\n? ?\n\n? has a Chi-\n\nsquared distribution with degrees of freedom. In this case, the mean is N?  and \n\nvariation is 2N?  (see [9]). Therefore, the mean of ( , , )DQ y N? is \n2( )y? ? and its \n\nDP\n\nN?\n\n\n\n Efficient Error Model Construction 199 \n\n \n\nvariance is\n\n42 ( )y\nN?\n\n? ?\n. Moreover, for large N? , a Gaussian distribution for \n\n( , , )DQ N y? can be assumed.  \nSimilarly DP , which is the square root of DQ , can be described using the Chi \n\ndistribution of \n\n2\n\n1\n\n( , , )\n\n2 ( )\n\nN\n\nk y\n\ny k? ?\n? ?=\n\n? ??\n? ?\n? ?\n? ?\n\n? with mean \n( )( )\n\n( )\n0.5 1\n\n2\n0.5p\n\nN\nm\n\nN\n?\n\n?\n\n? +\n=\n\n?\nand \n\nvariance  \n2 2\n\np pN m?? = ? . \n( )x? denotes the gamma function. For the purpose of the analysis required here, \n\nwe will avoid the use of gamma functions, mainly because we found a that linear \napproximation provides a simpler and satisfactory result.  The following analysis is \nthen performed.  \n\n 0 0 0 0\n0\n\n1\n,\n\n2\ny x y y x x\n\nx\n? ?= + ? +                            (30) \n\nIn our case \n2\n\n0 0( ) , ( )y yx y? ? ? ?= = are the mean values of ,DQ DP , and \n,x y? ? are the standard deviations of ,DQ DP , respectively. To conclude the above \n\ndiscussion: \n\n ( )( ), , ( )ymean DP y N? ? ?=                                       (31) \n\n ( )( ) 1, , ( )\n2\n\nystd DP y N\nN?\n\n? ? ?=                                 (32) \n\nEqs. (31) and (32) provide us with the error analysis due to the final data length \nthat we were looking for. However, before we can accept these results we need to \nexamine our assumptions: \n\nThe sequence ( , , )y k?? is assumed to be independent, due to the underlying \nMarkov process; in general, this is not true. However, the mean dependence is ex-\npected to be weak because the dependence exists only for adjacent windows and the \nnumber of windows is large. \n\nThe linear approximation for square root should be valid; this means that the stan-\n\ndard deviation of DQ should be much smaller than its mean value, and indeed, it is \n\nvalid for large N? .  \n \n \n\n\n\n200 Z. Berman \n\n \n\nThe final verification of this assumption was carried out by simulation. We consi-\ndered a variety of systems and our conclusion was that for a collection time of one \nhour, 1,1 300dt ?= ? ? , this approximation provides poor results. If the collection \ntime is on the order of two hours or more and the quality of the sensors is in the range \nof 0.1 100 / h\u00f7 \u00b0  , Eqs. (31) and (32) are certainly valid. The following plot  \ncompares the values calculated by Eqs. (31) and (32) (precise) with the results of 500 \nMonte Carlo runs, each describing a two-hour data collection. The presented case is \n\nfor DP type 3, and instrument model 100 / , 1 / , 25secm v mS h S h t= \u00b0 = \u00b0 =   \n\n \n\nFig. 1. Errors due to finite length: instrumental system \n\nFigure 2 describes the same results for tactical level system\n\n1 / , 0.05 / , 100 secm v mS h S h t= \u00b0 = \u00b0 = . \n\n0 50 100 150 200 250 300\n0\n\n10\n20\n30\n40\n50\n60\n\ntau [sec]\n\n S\n [d\n\neg\n/h\n\n]\n\ninstrumental N= 2 h\n\n \n\n \n\n0 50 100 150 200 250 300\n0\n\n0.5\n1\n\n1.5\n2\n\n2.5\n3\n\n3.5\n4\n\n4.5\n\ntau [sec]\n\n [d\neg\n\n/h\n]\n\n \n\n \n\nstd \nMonte Carlo \n\nmean \nMonte Carlo \n\nmean \nprecise\n\nstd \nprecise\n\n\n\n Efficient Error Model Construction 201 \n\n \n\n \nFig. 2. Errors due to finite length: tactical system \n\n5 Optimization Techniques for Direct Bound Implementation \n\nGiven DP values calculated from the real data, ( )DP ?  (arguments of the signal y\nand data length N are omitted), we are looking for parameters ,,m v mS S t  such that \n\nthe model ( , , )D m v mM S S t will generate ( ), ,DM T? ? to be a tight bound for\n( )DP ? . Observe that the notation for ( )y? ? was modified to ( ), ,DM T? ? , with \n\nT  representing the DP type (with its parameters). Where the DP type is not impor-\ntant, the notation ( ), DM? ?  will be used as well.  \n\nLet us write the formal problem definition. We consider a discrete sequence of\n\n{ } min min min max1 , , 2 , ...,\nK\n\ni i\nd d?? ? ? ? ? ? ?= = + + . ( )iDP ? and we need to solve \n\nthe following optimization problem: \n\n ( )( )( )2\n, , 1\n\nmin , , , ( )\nm v m\n\nK\n\ni D m v m i\nS S t i\n\nM S S t DP\n?\n\n? ? ?\n=\n\n? ?? ??? ?\n? ?? ?\n?             (33) \n\n0 50 100 150 200 250 300\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\ntau [sec]\n\n S\n [d\n\neg\n/h\n\n]\ntactical N= 2 h\n\n \n\n \n\n0 50 100 150 200 250 300\n0\n\n0.02\n0.04\n0.06\n0.08\n0.1\n\n0.12\n0.14\n0.16\n\ntau [sec]\n\n [d\neg\n\n/h\n]\n\n \n\n \n\nstd - Precise \n\nstd - Monte Carlo \n\nmean - Monte Carlo mean - precise \n\n\n\n202 Z. Berman \n\n \n\n ( )( ), , , ( ) 1,2,...,i D m v m isubject to M S S t DP i K?? ? ?? =   (34) \nFor this problem, we were surprised to get poor, unstable results with a significant \n\nnumber of outlier solutions, even with different optimization methods. We thus un-\nderstood that some modifications in the above definition are required. In the following \nwe describe the modification required to get stable solutions. \n\nThe physical values of ,m vS S are very small. To get a reliable optimization me-\nthod we need to introduce proper scaling. The choice is to work with a vector of engi-\n\nneering units: / , / ,sech h\u00b0 \u00b0 and to introduce the following notation:    \n\n( )( , , ) SD m v m DM S S t M X= with 1 2(1) , (2) , (3)m v mX s S X s S X t= = =  \nsuch that 1 2\n\n180 180\n3600, 3600s s\n\n? ?\n= = .  \n\nNow observe that the minimization defined in Eq. (33) is related to the norm of re-\nsiduals for the following equation:  \n\n ( )( )*( ) , ( )Si y i D iDP M X v? ? ? ?= +                          (35) \nwhere *X represents the true model parameters and ( )iv ?  is the error due to finite \ndata length. We know that standard deviation of this error is given by \n\n( )( ) 1 ( )\n2\n\nystd DP\nN?\n\n? ? ?= . Therefore, to deal with normalized residuals we \n\nneed to consider  \n\n ( )2\n, , 1\n\nmin\nm v m\n\nK\n\ni\nS S t i\n\nr\n?\n\n=\n\n? ?? ?\n? ?\n? ?? ?\n?                                              (36) \n\n \n( )( )\n\n( )( )\n, ( )\n\n2\n,\n\nS\ny i D i\n\ni S\ny i D\n\nM X DP\nr N\n\nM X\n?\n\n? ? ?\n\n? ?\n\n?\n=                              (37) \n\nWe can define a penalty factor ?  and combine the constraints defined in Eq. (34) \ninto the minimization defined in Eq. (36) by replacing ir  by its bounded version \n\nB\nir :  \n\n \n0i iB\n\ni\ni\n\nr if r\nr\n\nr else?\n>??= ?\n\n??\n                                              (38) \n\nThe penalty factor ? is selected to ensure the condition:   \n\n ( )( )*, ( )Sy i D iM X DP? ? ??                              (39) \n\n\n\n Efficient Error Model Construction 203 \n\n \n\nMoreover, ?  can provide flexibility from hard bound (high ? ), via soft bound \n(moderate ? ) to best match (standard least square: 1? = ). The optimization prob-\nlem defined by the cost function described in Eqs. (36\u201339) was tested for a variety of \ncases and reliable, stable results were obtained.  \n\nHaving developed a robust optimization method, we approached the  \nproblem of DP selection and the accuracy of the estimated model  \nparameters. Our first test was for the instrumental system, with parameters:\n\n \n100 / , 1 / , 25secm v mS h S h t= \u00b0 = \u00b0 = . The test duration was two hours, sam-\n\npling time 1secdt =  and the range of prediction time ?  was 1 300?? ? , termed \nin the sequel tau range. The following plot provides insight into how the optimization \nworks. We present four plots:  \n\n\u2022 DP \u2013 a sample of DPs calculated from sample data\u2014actual \n\u2022 ( )*,y DM? ? \u2013 DP calculation based on the true model\u2014precise \n\u2022  \u2013 DP calculated using the model found by hard bound optimiza-\n\ntion, 100? =  \u2014hard bound. \n\u2022 ( ), ESy DM? ? \u2013 DP calculated using the model found by soft bound optimiza-\n\ntion, 10? =  \u2014soft bound. \n\n \n\nFig. 3. DPs found by the optimization algorithm \n\n \n\n( ), EHy DM? ?\n\n0 50 100 150 200 250 300\n20\n\n25\n\n30\n\n35\n\n40\n\n45\n\n50\n\n55\n\n60\n\n \n\n \n\nhard bound\n\nactual \n\nprecise\n\nDP type is 3, \ninstrumental\nmodel\n\nDP deg/h \n\ntau [sec]\n\nsoft bound \n\n\n\n204 Z. Berman \n\n \n\nThe following table summarizes the results of 100 Monte Carlo runs. For every \nrun, we calculated the estimated parameters for all four types of DP. After all runs, \nmean value and standard deviation (std) were calculated for each type. The value \n\"total rel\" is rss (root sum square) of the mean and standard deviation, divided by the \nnominal parameter. Using this table we can evaluate performance and compare the \naccuracy of each DP type.  \n\nTable 1. The errors of estimated model parameters: instrumental system \n\nThe estimated model parame-\nters errors \n\nDP type \n0 1 2 3 \n\nH \n\nA \n\nR \n\nD \n\n \n\nB \n\nO \n\nU \n\nN \n\nD \n\n  \nmean 22 27.8 45.2 12.6 \nstd 6.1 8.7 51.0 4.8 \ntotal rel 22% 29% 68% 13% \n\n  \nmean 0.02 0.34 0.10 0.07 \nstd 0.04 0.4 0.2 0.1 \ntotal rel 4% 52% 22% 12% \n\n sec \nmean 10.3 22.5 30.8 5.7 \nStd 5.7 12.8 36.5 5.6 \ntotal rel 47% 103% 191% 32% \n\nS \n\nO \n\nF \n\nT \n\n \n\nB \n\nO \n\nN \n\nU \n\nD \n\n  \nmean 15.1 17.1 23.4 8.7 \nstd 5.2 6.6 6.7 4.2 \ntotal rel 16% 18% 24% 9.6% \n\n  \nmean 0.01 0.21 0.08 0.05 \nstd 0.03 0.24 0.08 0.08 \ntotal rel 3% 31% 11% 9% \n\n sec \nmean 6.8 12.5 14.4 3.6 \nstd 4.6 8.0 6.8 4.8 \ntotal rel 33% 59% 63% 24% \n\n \n \nThe following observations can be made from the table:  \n\n\u2022 The mean of estimated errors shows that the estimators are strongly biased. After \nsome consideration, this should not be a surprise. The nature of bounding is that it \nprovides higher DP plots than the actual one. The bias estimator is the price for our \nattempt to bound the performance of a system that is not necessarily time-invariant. \nOf course, we can reduce this price by allowing some crossing of the actual DP \n(soft bound).  \n\n\u2022 In principle, we have three different quality criteria: the accuracies of , ,m v mS S t . \nThe best DP in one category is not necessarily the best one in another. \n\nmS / h\u00b0\n\nvS / h\u00b0\n\nmt\n\nmS / h\u00b0\n\nvS / h\u00b0\n\nmt\n\n\n\n Efficient Error Model Construction 205 \n\n \n\n\u2022 In the case presented here, DP type 3 is the best for the Markov process. Its errors \nfor Markov process parameters are about 50% better than the second-best DP, \nwhich is type 0, the AVAR. For white noise the AVAR is better, but DP type 3 can \nbe considered satisfactory with 10% accuracy. \n\n\u2022 DP types 1 and 2 show relatively poor performance in this case.  \n\u2022 In general, for soft bound optimization, two hours of data collection to get 10% \n\naccuracy in ,m vS S and 25% in the time constants seems to be a very efficient and \nprecise approach to error model construction.   \n\n6 Recommendations for Practical Applications and Summary \n\nGood engineering practice requires answering the following questions:  \n\n1.  How should the error model parameters be calculated?  \n2.  How should the test be designed to obtain satisfactory accuracy of these parame-\n\nters?  \n3.  How should the test be monitored and sensor malfunctions detected?  \n\nIn this paper, tools to deal with all of these questions were developed and  \npresented.  \n\nWith respect to #1, our position is clear: never use local slopes, use matching tech-\nniques, such as Eqs. (36\u201338). The decision of whether to use hard bound, soft bound \nor even best matching depends on the application tradeoff between the estimation \naccuracy and sensitivity to detecting outliers with respect to the time-invariant model. \nIn the preparation phase, one can analyze what kind of accuracy degradation is related \nto higher outlier detection. The preparation phase, which is based on simulations, only \nprovides the right answers for #2. In this phase, we need to select the proper collec-\ntion time, range of tau, kind of matching used by the estimation (hard bound, soft \nbound, best matching), and type of DP to be used for real data. Our recommendation \nis to select the minimum collection time, the maximum tau range, and the hardest \nbound that provides satisfactory estimation accuracy. The minimum collection time \nsaves costs, the maximum tau range and hardest bound provide good detectability for \noutliers. Of course we will select the best DP for the case. Recall that beside freedom \nof selection from four different types, there also exists freedom in DP parameter se-\nlection. Figure 4 describes the flow of the simulation, applied for test design.  \n\nAfter defining the test parameters, the real-data test appears straightforward; it is \nsuch in the path of model parameter estimations. An additional path of quality of \nmatching, which measures the residuals of the optimization function and compares \nthem with the statistics of errors due to finite length (Eq. 32) provides some, perhaps \npartial, answers to problem #3.  \n\n \n\n\n\n206 Z. Berman \n\n \n\n \nFig. 4. Diagram block for simulation phase \n\n \nFig. 5. Block diagram for real-data test \n\n\n\n Efficient Error Model Construction 207 \n\n \n\nAppendix \n\nCalculation of the Steady-State Kalman Gain. The Development Here is Based on \nNotations and the Equation Presented in [8].  \n\nThe measurement matrix is scalar equal to 1:  \n\n ( ) ( ) ( ) 1z i y i v i H= + ? =                                 (40) \nThe propagation system matrix is scalar equal to ?  \n\n ( ) ( 1) ( 1)y i y i w i a?= ? + ? ? ? =                      (41) \n\nThe covariance of measurement noise error ( )v i  is r and the covariance of process \nnoise ( )w i is q .  \n\n ( ) 1T T kk k k k\nk\n\np\nK P H HP H R k\n\np r\n\n??? ?\n?= + ? = +\n\n                   (42) \n\n ( ) (1 )k k k k k kP I K H P p k p+ ? + ?= ? ? = ?                  (43) \n 21 1\n\nT\nk k k kP P Q p p q?\n\n? + ? +\n+ += ? ? + ? = +                    (44) \n\nThe steady-state gain is denoted by k. Under steady-state conditions  \n\n1k kp p p\n? ?\n\n+ = = .  \n\n ( )2 1p k p q?= ? +                                                 (45) \nUsing  \n\n ( )1p rk k\np r p r\n\n= ? ? =\n+ +\n\n                                            (46) \n\none gets  \n\n ( )2 2 0p r r q p qr?+ ? ? ? =                                              (47) \nThe positive solution of Eq. (47) is given by \n\n \n( )222*\n\n2 4\n\nr r qr r q\np qr\n\n??\n? ?? ?? ? ? ?= + +? ?\n? ?\n? ?\n\n                           (48) \n\nThe final solution is obtained by inserting Eq. (48) into Eq. (46) \n\n \n\n*\n\n*\n\np\nk\n\np r\n=\n\n+\n                                                         (49) \n\n\n\n208 Z. Berman \n\n \n\nReferences \n\n1. Aggarwal, P., Syed, Z., Niu, X., El-Sheimy, N.: A Standard Testing and Cali-bration Proce-\ndure for Low Cost MEMs Inertial Sensors and Units. Journal of Navigation 61, 323\u2013336 \n(2008) \n\n2. Titterton, D.H., Weston, J.L.: Strapdown Inertial Navigation Technology, Peter Peregrinus \nLtd., UK (1997) \n\n3. Flenniken IV, W.S., Wall, J.H., Bevly, D.M.: Characterization of Various IMU Error \nSources and the Effect on Navigation Performance. ION GNSS (2005) \n\n4. IEEE. IEEE Standard Specification Format Guide and Test Procedure for Single-Axis Inter-\nferometric Fiber Optic Gyros. IEEE Std 952-1997 (2003) \n\n5. Xing, Z., Gebre-Egziabher, D.: Modeling and Bounding Low Cost Inertial Sensor Errors. \nIn: Proceedings of IEEE/ION PLANS 2008, May 6-8 (2008) \n\n6. Berman, Z.: Inertial Sensors\u2014Further Developments in Low Cost Calibration and Testing. \nIn: PLANS 2012 (April 2012) \n\n7. Berman, Z.: Inertial sensors\u2014A New Approach for Low Cost Calibration and Testing. In: \nInertial Sensors and Systems Gyro Technology Symposium, Karlsruhe (2011) \n\n8. Gelb, A.: Applied Optimal Estimation. M.I.T. Press, Cambridge (1974) \n9. Papoulis, A.: Probability, Random Variables and Stochastic Processes, 2nd edn. McGraw-\n\nHill, New York (1984) \n \n\n\n\nTime-Critical Cooperative Path Following\n\nof Multiple UAVs: Case Studies\n\nIsaac Kaminer1, Enric Xargay2, Venanzio Cichella2, Naira Hovakimyan2,\nAnto?nio Manuel Pascoal3, A. Pedro Aguiar4,\n\nVladimir Dobrokhodov1, and Reza Ghabcheloo5\n\n1 Naval Postgraduate School, Monterey, CA 93943, USA\n{kaminer,vldobr}@nps.edu\n\n2 University of Illinois at Urbana-Champaign, Urbana, IL 61801, USA\n{xargay,cichell2,nhovakim}@illinois.edu\n\n3 Instituto Superior Te?cnico, University of Lisbon, LX 1049-001, Portugal\nantonio@isr.ist.utl.pt\n\n4 Faculty of Engineering, University of Porto, P.O. 4200, Portugal\npedro.aguiar@fe.up.pt\n\n5 Tampere University of Technology, Tampere, FI-33101, Finland\nreza.ghabcheloo@tut.fi\n\nAbstract. This paper describes a multi-vehicle motion control frame-\nwork for time-critical cooperative missions and evaluates its performance\nby considering two case studies: a simultaneous arrival mission scenario\nand a sequential auto-landing of a fleet of UAVs. In the adopted setup,\nthe UAVs are assigned nominal spatial paths and speed profiles along\nthose paths; the vehicles are then tasked to execute cooperative path\nfollowing, rather than \u201copen-loop\u201d trajectory tracking. This cooperative\nstrategy yields robust behavior against external disturbances by allow-\ning the UAVs to negotiate their speeds along the paths in response to\ninformation exchanged over a supporting communications network.\n\n1 Introduction\n\nUnmanned Aerial Vehicles (UAVs) are ubiquitous in military reconnaissance\nand strike operations, border patrol missions, forest fire detection, and recovery\noperations. In simple missions, a single vehicle can be managed by a crew using\na ground station provided by the vehicle manufacturer. The execution of more\nchallenging missions, however, requires the use of multiple vehicles working in\ncooperation to achieve a common objective. Such missions require vehicles to\nexecute maneuvers in close proximity to each other, and to effectively exchange\ninformation so as to meet desired spatial and temporal constraints. The flow\nof information among vehicles is often severely restricted, either for security\nreasons or because of tight bandwidth limitations. A key enabling element for the\nexecution of such missions is thus the availability of cooperative motion control\nstrategies that can yield robust performance in the face of external disturbances\nand communications limitations, while ensuring collision-free maneuvers.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 209\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_12\n\n\n\n210 I. Kaminer et al.\n\nThe range of relevant, related topics addressed in literature includes parallel\ncomputing [1], synchronization of oscillators [2], study of collective behavior and\nflocking [3], multi-system consensus mechanisms [4], multi-vehicle system forma-\ntions [5\u20138], coordinated motion control [9\u201311], cooperative path and trajectory\nplanning [12\u201315], asynchronous protocols [16], dynamic graphs [17], stochastic\ngraphs [17\u201319], and graph-related theory [20,21]. Especially relevant are the ap-\nplications of the theory developed in the area of multi-vehicle control: spacecraft\nformation flying [22], UAV control [23,24], coordinated control of land robots [9],\nand control of multiple autonomous marine vehicles [25\u201330]. In spite of signifi-\ncant progress in the field, much work remains to be done to develop strategies\ncapable of providing guaranteed levels of performance in the presence of complex\nvehicle dynamics, communications constraints, and partial vehicle failures.\n\nIn [31], we addressed the problem of steering a fleet of UAVs along desired spa-\ntial paths while meeting relative temporal constraints. Representative examples\nof such missions are sequential auto-landing and coordinated ground target sup-\npression; in both cases, only relative \u2013rather than absolute\u2013 temporal constraints\nare given a priori. In the proposed framework, the vehicles are assigned nominal\npaths and speed profiles along those, obtained from an appropriately formulated\noptimization problem. The paths are judiciously parameterized, and the vehicles\nare requested to execute cooperative path following, rather than \u201copen-loop\u201d\ntrajectory-tracking maneuvers. The reader is referred to [31\u201335] for a general\nperspective of key ideas that are at the root of this distributed cooperative ap-\nproach. In the present paper, we present simulation results of two multi-vehicle\ntime-critical missions that exploit the cooperative control framework developed\nin [31]. In the first mission, three UAVs must follow spatially-deconflicted paths\nand arrive at predefined locations at the same time. The second mission consid-\ners the case of sequential auto-landing, in which three UAVs must arrive at the\nglide path separated by prespecified safe-guarding time-intervals and maintain\nthis separation as they fly along the glide slope.\n\nThe paper is organized as follows. Section 2 formulates the time-critical coop-\nerative path-following problem and introduces a set of assumptions on the sup-\nporting network. Section 3 presents a path-following control algorithm for UAVs\nin 3D space. Section 4 derives a strategy for time-critical cooperative path fol-\nlowing of multiple UAVs that relies on the adjustment of the speed profile of each\nvehicle. Section 5 presents simulation results that demonstrate the effectiveness\nof the algorithms. Finally, Section 6 summarizes concluding remarks.\n\nThe following notation is used throughout the paper. Uppercase calligraphic\nletters are used to denote reference frames, e.g.F ; {v}F is used to denote vector v\nresolved in frame F ; {e?}F represents versor e? resolved in frame F ; ?F1/F2\ndenotes the angular velocity of frame F1 with respect to frame F2; the rotation\nmatrix from frame F1 to frame F2 is represented by RF2F1 ; v? ]F indicates that\nthe time-derivative of vector v is taken in frame F . The notation ?\u00b7? is used for\nthe 2-norm of a vector. Finally, SO(3) denotes the Special Orthogonal group of\nall rotations about the origin of three-dimensional Euclidean space IR3, while\nso(3) represents the set of 3\u00d7 3 skew-symmetric matrices over IR.\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 211\n\n2 Problem Formulation\n\nThis section formulates in a concise manner the problem of time-critical coop-\nerative path-following control of multiple UAVs in 3D space, in which a fleet of\nUAVs is tasked to converge to and follow a set of desired feasible paths so as\nto meet spatial and temporal constraints. The section also introduces a set of\nassumptions and constraints on the supporting communications network.\n\nWe note that the problem of cooperative trajectory generation is not addressed\nin this paper. In fact, it is assumed that a set of desired 3D time-trajectories\npd,i(td) : [0, t\n\n?\nd] ? IR3, i = 1, . . . , n, conveniently parameterized by a single time-\n\nvariable td, is known for all the n UAVs involved in the mission. The variable td\nrepresents a desired mission time (distinct from the actual mission time that\nevolves as the mission unfolds), with t?d being the desired mission duration. For\na given td, pd,i(td) defines the desired position of the ith UAV td seconds after the\ninitiation of the mission. These time-trajectories can be reparameterized in terms\nof arc length to obtain spatial paths pd,i(??,i) : [0, ?fi] ? IR3 \u2013with no temporal\nspecifications\u2013 and the corresponding desired speed profiles vd,i(td) : [0, t\n\n?\nd] ? IR.\n\nFor convenience, each spatial path is parameterized by its arc length ??,i, with\n?fi denoting the total length of the ith path, whereas the desired speed profiles\nare parameterized by the desired mission time td. It is assumed that both the\npaths and the speed profiles satisfy collision-avoidance constraints as well as\nappropriate boundary and feasibility conditions, such as those imposed by the\nphysical limitations of the UAVs. The problem of generating feasible time-critical\ntrajectories for multiple vehicles is described in [36, 37].\n\n2.1 Path Following for a Single UAV\n\nThe solution to the path-following problem described in this paper extends the\nalgorithm in [38] to the 3D case, and relies on the insight that a UAV can follow\na given path using only its attitude, thus leaving its linear speed as a degree of\nfreedom to be used at the coordination level. Following the approach developed\nin [38], this section introduces a virtual target vehicle running along the 3D path,\ndefines a frame attached to this virtual target, and characterizes a generalized\nerror vector between this moving coordinate system and a frame attached to the\nactual UAV. With this setup, the path-following problem is reduced to driving\nthis generalized error vector to zero by using only the UAV\u2019s attitude control\neffectors, while following an arbitrary feasible speed profile.\n\nFigure 1 captures the geometry of the problem at hand. The symbol I denotes\nan inertial reference frame {e?1, e?2, e?3} and pd(\u00b7) is the desired path assigned to\none of the vehicles, with ?f being its total path length. Vector pI(t) denotes the\nposition of the center of mass Q of the vehicle in this inertial frame. Further, we\nlet P be an arbitrary point on the desired path that plays the role of the virtual\ntarget, and denote by pd(?) its position in the inertial frame. Here ? ? [0, ?f ] is\na free length variable that defines the position of the virtual target vehicle along\nthe path. In the setup adopted, the total rate of progression of the virtual target\nalong the path, ??(t), is an additional design parameter. Endowing point P with\n\n\n\n212 I. Kaminer et al.\n\nParallel Transport\nframe F\n\nInertial\nframe I\n\ndesired\npath\n\nP\n\nQ\nv\n\ne?1\n\ne?2\n\ne?3\npd(?)\n\npI\n\npF\n\nxF\nyF\n\nzF t?\n\nn?2\n\nn?1\n\nw?1\n\nw?2\nw?3\n\nVelocity\nframe W\n\nFig. 1. Following a virtual target vehicle; problem geometry\n\nan extra degree of freedom is the key to the path-following algorithm presented\nin [38] and its extension to the 3D case described in this paper.\n\nFor our purposes, it is convenient to define a parallel transport frame F [39]\nattached to point P on the path and characterized by vectors {t?(?), n?1(?), n?2(?)}.\nThese vectors define an orthonormal basis for F , in which the unit vector t?(?)\ndefines the tangent direction to the path at the point determined by ?, while n?1(?)\nand n?2(?) define the normal plane perpendicular to t?(?). Unlike the Frenet-Serret\nframe, parallel transport frames are well defined when the path has a vanishing\nsecond derivative. Moreover, let pF (t) be the position of the vehicle\u2019s center of\nmass Q in this moving frame, and let xF (t), yF (t), and zF (t) be the components\nof vector pF (t) with respect to the basis {t?, n?1, n?2}.\n\nLet W denote a vehicle-carried velocity frame {w?1, w?2, w?3} with its origin\nat the UAV center of mass and its x-axis aligned with the velocity vector of\nthe UAV. The z-axis is chosen to lie in the plane of symmetry of the UAV, and\nthe y-axis is determined by completing the right-hand system. In this paper,\nq(t) and r(t) are the y-axis and z-axis components, respectively, of the vehicle\u2019s\nrotational velocity resolved in the W frame. With a slight abuse of notation, q(t)\nand r(t) will be referred to as pitch rate and yaw rate, respectively.\n\nWe also introduce an auxiliary frame D defined by {b?1D, b?2D, b?3D}, which is\nused to shape the approach attitude to the path as a function of the cross-track\nerror components yF and zF . Frame D has its origin at the UAV center of mass\nand vectors b?1D(t), b?2D(t), and b?3D(t) are defined as\n\nb?1D :=\nd t??yF n?1?zF n?2\n(d2+y2F+z2F )\n\n1\n2\n\n, b?2D :=\nyF t?+d n?1\n\n(d2+y2F )\n1\n2\n\n, b?3D := b?1D \u00d7 b?2D ,\n\nwith d > 0 being a constant characteristic distance that plays the role of a de-\nsign parameter. The basis vector b?1D(t) defines the desired direction of the\nUAV\u2019s velocity vector. Clearly, when the vehicle is far from the desired path,\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 213\n\nvector b?1D(t) becomes perpendicular to t?(?). As the vehicle comes closer to the\npath and the cross-track error becomes smaller, vector b?1D(t) tends to t?(?).\n\nFinally, let R?(t) ? SO(3) be the rotation matrix from W to D, that is,\n\nR? := RDW = R\nD\nF R\n\nF\nW = (R\n\nF\nD)\n\n? RFW ,\n\nand define the real-valued attitude error function on SO(3)\n\n?(R?) := 12 tr\n[(\nI3 ???R?R\n\n)(\nI3 ? R?\n\n)]\n, (1)\n\nwhere ?R is defined as ?R := [ 0 1 00 0 1 ]. The function ?(R?) in (1) can be ex-\n\npressed in terms of the entries of R?(t) as ?(R?) = (1/2)(1? R?11), where R?11(t)\ndenotes the (1, 1) entry of R?(t). Therefore, ?(R?) is a positive-definite function\nabout R?11 = 1. Note that R?11 = 1 corresponds to the situation where the veloc-\nity vector of the UAV is aligned with the basis vector b?1D(t).\n\nWith the above notation, as shown in [31], the path-following kinematic-error\ndynamics between the UAV and its virtual target vehicle can be written as\n\np?F ]F = ? ?? t? ? ?F/I \u00d7 pF + v w?1 , (2a)\n\n??(R?) = eR? \u00b7\n([\n\nq\nr\n\n]\n??RR??\n\n(\nRDF {?F/I}F + {?D/F }D\n\n))\n, (2b)\n\nwhere v(t) denotes the magnitude of the UAV\u2019s ground velocity vector and eR?(t)\nis the attitude kinematic-error vector defined as\n\neR? :=\n1\n2?R\n\n((\nI3 ???R?R\n\n)\nR?? R?? (I3 ???R?R)\n\n)?\n,\n\nwhere (\u00b7)? : so(3) ? IR3 denotes the vee map (see Appendix). In the kinematic-\nerror model (2), q(t) and r(t) play the role of control inputs, while the rate\nof progression ??(t) of point P along the path becomes an extra variable that\ncan be manipulated at will. At this point, the path-following generalized error\nvector xpf (t) can be formally defined as\n\nxpf :=\n[\np?F , e\n\n?\nR?\n\n]?\n.\n\nNotice that, within the region where ?(R?) < 1, if xpf = 0, then both the path-\nfollowing position error and the path-following attitude error are equal to zero,\nthat is, pF = 0 and ?(R?) = 0.\n\nUsing the above formulation, and given a spatially defined feasible path pd(\u00b7),\nthe problem of path following for a single vehicle can now be defined accordingly.\n\nDefinition 1 (Path-Following Problem). For a given UAV, design feedback\ncontrol laws for pitch rate q(t), yaw rate r(t), and rate of progression ??(t) of\nthe virtual target along the path such that the path-following generalized error\nvector xpf (t) converges to a neighborhood of the origin with a guaranteed rate of\nconvergence, regardless of the (feasible) temporal assignments of the mission.\n\n\n\n214 I. Kaminer et al.\n\n2.2 Time-Critical Coordination and Network Model\n\nTo enforce the temporal constraints of the mission, we formulate a consensus\nproblem, in which the objective of the fleet of vehicles is to reach agreement on\nsome distributed variables of interest. Appropriate coordination variables need\nthus to be defined that capture the temporal assignments of the mission.\n\nFor this purpose, let ??d,i(td) be the desired normalized curvilinear abscissa of\nthe ith UAV along its path at the desired mission time td, which is given by\n\n??d,i(td) :=\n1\n?fi\n\n? td\n0 vd,i(?) d? .\n\nThe trajectory-generation algorithm ensures that the desired speed profiles vd,i(\u00b7)\nsatisfy feasibility conditions, which implies that the following bounds hold:\n\n0 < vmin ? vd,i(\u00b7) ? vmax , i = 1, . . . , n , (3)\nwhere vmin and vmax denote, respectively, minimum and maximum operating\nspeeds of the UAVs involved in the mission. From the definition of ??d,i(td) and the\nbounds in (3), it follows that ??d,i(td) is a strictly increasing continuous function\nof td mapping [0, t\n\n?\nd] onto [0, 1]. Let ?i : [0, 1] ? [0, t?d] be the inverse function\n\nof ??d,i(td). Clearly, ?i(\u00b7) is also a strictly increasing continuous function of its\nargument. Then, letting ??i(t) := ?i(t)/?fi, we introduce the time-variables\n\n?i(t) := ?i(?\n?\ni(t)) , i = 1, . . . , n .\n\nNote that, for any two vehicles i and j, if ?i(t) = ?j(t) = t\n?\nd at a given time t,\n\nthen ??i(t) = ?\n?\nd,i(t\n\n?\nd) and ?\n\n?\nj(t) = ?\n\n?\nd,j(t\n\n?\nd), which implies that at time t the target\n\nvehicles corresponding to UAVs i and j have the desired relative position at the\ndesired mission time t?d. Moreover, if ??i(t) = 1, then at time t the ith virtual tar-\nget travels at the desired speed, ??i(t) = vd,i(?i(t)). The variables ?i(t) represent\nthus an appropriate measure of vehicle coordination and will be referred to as\ncoordination states, while the functions ?i(\u00b7) will be called coordination maps.\n\nTo reach agreement on these coordination states, the UAVs need to exchange\ninformation over the supporting communications network. Next, tools and facts\nfrom algebraic graph theory [40] are used to model the information exchange over\nthe network as well as the constraints imposed by the communications topology.\n\nFirst, it is assumed that the ith UAV can only exchange information with a\nneighboring set of vehicles, denoted by Ni(t). It is also assumed that communi-\ncations are bidirectional and, for simplicity, that information is transmitted con-\ntinuously with no delays. Moreover, each vehicle is only allowed to exchange its\ncoordination state ?i(t) with its neighbors. Finally, we assume that the connec-\ntivity of the graph ? (t) that captures the underlying communications topology\nof the fleet at time t satisfies the persistency of excitation (PE)-like condition [41]\n\n1\n\nn\n\n1\n\nT\n\n? t+T\nt\n\nQL(?)Q?d? ? ? In?1 , for all t ? 0 , (4)\n\nwhere L(t) ? IRn\u00d7n is the Laplacian of the graph ? (t), and Q is an (n? 1)\u00d7 n\nmatrix such that Q1n = 0 and QQ\n\n? = In?1, with 1n being the vector in IRn\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 215\n\nwhose components are all 1. Parameters T > 0 and ? ? (0, 1] characterize the\nquality of service (QoS) of the communications network, which in the context\nof this paper represents a measure of the level of connectivity of the communi-\ncations graph. Note that the PE-like condition (4) requires the communications\ngraph ? (t) to be connected only in an integral sense, not pointwise in time. In\nfact, the graph may be disconnected during some interval of time or may even\nfail to be connected at all times.\n\nUsing the formulation above, one can now define the problem of time-critical\ncooperative path following for a fleet of n UAVs.\n\nDefinition 2 (Time-Critical Cooperative Path-Following Problem). Gi-\nven a fleet of n vehicles supported by an inter-vehicle communications network\nand a set of desired 3D time trajectories pd,i(td), design feedback control laws\nfor pitch rate qi(t), yaw rate ri(t), and speed vi(t) for all vehicles such that\n\n1. for each vehicle i, i = 1, . . . , n, the path-following error vector xpf ,i(t) con-\nverges to a neighborhood of the origin; and\n\n2. for each pair of vehicles i and j, i, j = 1, . . . , n, the coordination errors\n(?i(t)? ?j(t)) and (??i(t)? 1) converge to a neighborhood of the origin.\n\n3 3D Path Following Control law\n\nTo solve the path-following problem described in Sect. 2.2.1, we first let the rate\nof progression of point P along the path be governed by\n\n?? = (v w?1 + k?pF ) \u00b7 t? , k? > 0 . (5)\nThen, the rate commands qc(t) and rc(t) given by[\n\nqc\nrc\n\n]\n:= ?RR?\n\n? (RDF {?F/I}F + {?D/F }D) ? 2kR?eR? , kR? > 0 , (6)\ndrive the path-following generalized error vector xpf (t) to a neighborhood of\nzero with a guaranteed rate of convergence. More precisely, it can be shown that\nif the speed of the vehicle satisfies 0 < vmin ? v(t) ? vmax, then the origin of the\nkinematic-error dynamics (2) with the controllers qc(t) and rc(t) in (6) is locally\nexponentially stable. A formal statement of this result can be found in [31], while\ninsights into this path-following algorithm can be found in [36].\n\nThe use of the Special Orthogonal group SO(3) in the formulation of the\nattitude control problem avoids the geometric singularities and complexities that\nappear when dealing with local parameterizations of the vehicle\u2019s attitude. See,\nfor example, the path-following control algorithm reported in [35].\n\nFinally, we notice that the path-following control laws qc(t) and rc(t) represent\nouter-loop guidance commands to be tracked by the UAV. In this sense, the\nproposed solution departs from standard backstepping techniques in that the\nfinal path-following control laws can be seamlessly tailored to vehicles that are\nequipped with commercial autopilots.\n\n\n\n216 I. Kaminer et al.\n\n4 Time-Critical Coordination\n\nWe now address the problem of time-critical cooperative path-following control\nof multiple vehicles. To this effect, the speeds of the UAVs are adjusted based on\ncoordination information exchanged among the vehicles over the supporting com-\nmunications network. The distributed coordination control law described next is\nintended to provide a correction to the desired speed profile vd,i(\u00b7) obtained in\nthe trajectory-generation step, and to generate a speed command vc,i(t). This\nspeed command is then to be tracked by the ith vehicle to achieve coordination.\n\n4.1 Distributed Coordination Law\n\nWe start by noting that the evolution of the ith coordination state is given by\n\n??i =\n??i\n\nvd,i(?i)\n.\n\nRecalling from the solution to the path-following problem that the evolution of\nthe ith virtual target vehicle is described by ??i = (vi w?1,i + k? pF,i) \u00b7 t?i , where for\nsimplicity we have kept k? without indexing, the dynamics of the ith coordination\nstate can be rewritten as\n\n??i =\n(vi w?1,i + k? pF,i) \u00b7 t?i\n\nvd,i(?i)\n.\n\nThen, to solve the time-coordination problem we use dynamic inversion and\ndefine the speed command for the ith vehicle as\n\nvc,i :=\nucoord,i vd,i(?i)? k? pF,i \u00b7 t?i\n\nw?1,i \u00b7 t?i\n, (7)\n\nwhere ucoord,i(t) is a coordination control law to be defined later. With this speed\ncommand, the coordination dynamics for the ith target vehicle become\n\n??i = ucoord,i +\nev,i\n\nvd,i(?i)\nw?1,i \u00b7 t?i ,\n\nwhere ev,i(t) := vi(t)? vc,i(t) denotes the speed tracking error for the ith UAV.\nRecall now that each UAV is allowed to exchange its coordination state ?i(t)\n\nonly with its neighborsNi(t), which are defined by the communications topology.\nTo observe this constraint, the following distributed coordination control law is\nproposed:\n\nucoord,1(t) = ?kP\n?\n\nj?N1 (?1(t)? ?j(t)) + 1 , (8a)\nucoord,i(t) = ?kP\n\n?\nj?Ni (?i(t)? ?j(t)) + ?I,i(t) , i = 2, . . . , n , (8b)\n\n??I,i(t) = ?kI\n?\n\nj?Ni (?i(t)? ?j(t)) , ?I,i(0) = 1 , i = 2, . . . , n , (8c)\nwhere vehicle 1 is elected as the formation leader (which can be a virtual vehicle),\nand kP and kI are positive coordination control gains. Note that the coordination\ncontrol law has a proportional-integral structure, which provides disturbance\nrejection capabilities at the coordination level [42].\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 217\n\n4.2 Overall Time-Critical Cooperative Path-Following System\n\nFigure 2 shows the overall cooperative path-following control architecture for\nthe ith vehicle. With the approach adopted, the control architecture exhibits\na multiloop control structure in which an inner-loop controller stabilizes the\nvehicle dynamics, while guidance outer-loop controllers are designed to control\nthe vehicle kinematics, providing path-following and coordination capabilities.\n\nUAVAutopilot\n\nClosed-loop UAV with its Autopilot\n\nPath-Following\n\nKinematics\n\nPath-Following\n\nControl\n\nAlgorithm\n\nCoordination\n\nControl\n\nAlgorithm\n?j ; j ? Ni\n\nvc,i\n\n[qi, ri, vi]\n\n[qc,i, rc,i]\n\n(pF,i, R?i)\n\nFig. 2. Coordinated path-following closed-loop for the ith vehicle\n\nIt is proven in [31] that, if the connectivity of the communications graph\nverifies the PE-like condition (4) and the initial conditions are within a given\ndomain of attraction, then there exist control gains for the path-following control\nlaw (5)-(6) and the coordination control law (7)-(8) that solve the time-critical\ncooperative path-following problem with guaranteed rates of exponential con-\nvergence, while ensuring at the same time that the speed of each UAV satisfies\nvmin ? vi(t) ? vmax for all t ? 0.\n\nAdditionally, it is shown in [31] that the QoS of the network, character-\nized by parameters T and ?, limits the guaranteed rate of convergence of the\ncoordination-error dynamics. The results in this paper also imply that, as the\ncommunications graph becomes connected pointwise in time, the convergence\nrate of the coordination-error dynamics can be set arbitrarily high by increasing\nthe coordination control gains. This fact is consistent with results obtained in\nprevious work; see [43, Lemma 2].\n\nFinally, we notice that similar results have been derived for the case of a\ncoordination control law with multiple leaders [42]; in this case, the convergence\nrate of the coordination dynamics depends not only on the QoS of the network,\nbut also on the number of leaders. The work reported in [42] also analyzes the\nconvergence properties of control law (8) when the vehicles exchange quantized\ninformation, and proves the existence of undesirable \u201czero-speed\u201d attractors in\nthe presence of coarse quantization.\n\n\n\n218 I. Kaminer et al.\n\n5 Simulation Results\n\nThis section presents simulation results of two cooperative multi-vehicle mission\nscenarios that show the efficacy of the cooperative framework in this paper. In\nthe first mission, three UAVs must execute a coordinated maneuver to arrive\nat predefined positions at the same time. We then consider a second mission\nin which three UAVs must execute sequential auto-landing while maintaining\na prespecified safe-guarding separation along the glide slope. Both missions are\ndesigned to be executed by small tactical UAVs equipped with an autopilot\nproviding angular-rate and speed tracking capabilities; see Fig. 3.\n\nFig. 3. SIG Rascal 110 research aircraft operated by the Naval Postgraduate School for\ntime-critical cooperative missions. Onboard avionics include the Piccolo Plus autopilot,\ntwo PC-104 industrial embedded computers, and a wireless MANET link for air-to-\nair and air-to-ground communications. (See [36] for a detailed description of these\navionics.)\n\n5.1 Path-Following with Simultaneous Arrival\n\nIn this mission scenario, three UAVs are tasked to converge to and follow three\nspatially-deconflicted paths and arrive at their final destinations at the same\ntime. A representative example of such mission is simultaneous suppression of\nmultiple targets located at different positions. Note that this mission imposes\nonly relative temporal constraints on the arrival of the UAVs.\n\nFigure 4 shows the three paths with the parallel transport frames as well as\nthe corresponding desired speed profiles, which assume a final desired speed of\n20 m/s for all UAVs. The beginning of each path is indicated in this figure with\na circle. The figure also shows the coordination maps ?i relating the desired\nnormalized curvilinear abscissa ??d,i to the desired mission time td. The paths\nhave lengths ?f1 = 2, 084.8 m, ?f2 = 1, 806.4 m, and ?f3 = 2, 221.0 m, and the\ndesired time of arrival is t?d = 85.0 s. Figure 5 presents the path separations,\nwhich show a minimum spatial clearance of 125 m, and the desired inter-vehicle\nseparations for this particular mission.\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 219\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n?500\n0\n\n500\n\n0\n\n200\n\n400\n\n600\n \n\nNorth [m]\nEast [m]\n\n \n\nA\nlti\n\ntu\nde\n\n [m\n]\n\nPath 1\nPath 2\nPath 3\nInitial Position\n\nYZ projection\n\nXZ projection\n\nXY projection\n\n(a) Framed 3D paths\n\n0 20 40 60 80\n\n18\n\n20\n\n22\n\n24\n\n26\n\n28\n\n30\n\n32\n\ntd [s]\n\nv d\n,i\n[m\n\n/\ns]\n\n \n\n \n\n  v\nmin\n\n  \n\n  v\nmax\n\n  \nvd,1\nvd,2\nvd,3\n\n(b) Desired speed profiles\n\n0 0.2 0.4 0.6 0.8 1\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n??d,i [-]\n\nt d\n[s\n]\n\n \n\n \n\n?1\n?2\n?3\n\n(c) Coordination maps\n\nFig. 4. Path-following with simultaneous arrival. Framed 3D spatial paths along with\nthe corresponding desired speed profiles and coordination maps.\n\nThe cooperative motion-control algorithms described in this paper are used to\nsolve this multi-vehicle simultaneous-arrival path-following problem. In order to\nachieve coordination, the UAVs rely on a supporting communications network.\nThe information flow is assumed to be time-varying and, at any given time t, is\ncharacterized by one of the graphs in Fig. 6.\n\nSimulation results for this particular mission are presented next. Figure 7\nillustrates the evolution of the UAVs (black) as well as the virtual targets (mid\ngray) moving along the paths (light gray). This figure also includes the W frame\nattached to each UAV (black) as well as the F frame attached to the virtual\ntargets (mid gray). The UAVs start the mission with an initial offset in both\nposition and attitude with respect to the beginning of the framed paths. As\ncan be seen in the figure, the path-following algorithm eliminates this initial\noffset and steers the UAVs along the corresponding paths, while the coordination\nalgorithm ensures simultaneous arrival at the end of the path at t = 84.2 s.\n\n\n\n220 I. Kaminer et al.\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n??,1/?f1 [-]??,2/?f2 [-]\n\n?p\nd\n,1\n(?\n\n?,\n1\n)\n?\n\np\nd\n,2\n(?\n\n?,\n2\n)?\n\n[m\n]\n\n(a) Separation between paths 1 and 2\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n??,1/?f1 [-]??,3/?f3 [-]\n\n?p\nd\n,1\n(?\n\n?,\n1\n)\n?\n\np\nd\n,3\n(?\n\n?,\n3\n)?\n\n[m\n]\n\n(b) Separation between paths 1 and 3\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n??,2/?f2 [-]??,3/?f3 [-]\n\n?p\nd\n,2\n(?\n\n?,\n2\n)\n?\n\np\nd\n,3\n(?\n\n?,\n3\n)?\n\n[m\n]\n\n(c) Separation between paths 2 and 3\n\n0 20 40 60 80\n0\n\n500\n\n1000\n\n1500\n\ntd [s]\n\n?p\nd\n,i\n(t\n\nd\n)\n?\n\np\nd\n,j\n(t\n\nd\n)?\n\n[m\n]\n\n \n\n \n?pd,1(td)? pd,2(td)?\n?pd,1(td)? pd,3(td)?\n?pd,2(td)? pd,3(td)?\n\n(d) Desired inter-vehicle separation\n\nFig. 5. Path-following with simultaneous arrival. Path separation and desired inter-\nvehicle separation; the three paths are spatially deconflicted with a minimum clearance\nof 125 m.\n\n2\n3\n\n1\n\n(a) Topology 1\n\n2\n3\n\n1\n\n(b) Topology 2\n\n2\n3\n\n1\n\n(c) Topology 3\n\n2\n3\n\n1\n\n(d) Topology 4\n\n2\n3\n\n1\n\n(e) Topology 5\n\n2\n3\n\n1\n\n(f) Topology 6\n\n2\n3\n\n1\n\n(g) Topology 7\n\n2\n3\n\n1\n\n(h) Topology 8\n\nFig. 6. Network topologies. At any given time t, the dynamic information flow is\ncharacterized by one of these graphs.\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 221\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n?500\n\n0\n500\n\n0\n\n500\n\n t = 0.0 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n?500\n\n0\n500\n\n0\n\n500\n\n \n\n t = 14.1 s\n\nNorth [m]\n\nEast [m]\n \n\nA\nlti\n\ntu\nde\n\n [m\n]\n\nPaths\nVirtual targets\nUAVs\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n?500\n\n0\n500\n\n0\n\n500\n\n t = 28.2 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n?500\n\n0\n500\n\n0\n\n500\n\n t = 42.3 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n?500\n\n0\n500\n\n0\n\n500\n\n t = 56.4 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n?500\n\n0\n500\n\n0\n\n500\n\n t = 84.2 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\nFig. 7. Path-following with simultaneous arrival. The three UAVs achieve simultaneous\narrival at their final destinations at t = 84.2 s.\n\n\n\n222 I. Kaminer et al.\n\n0 20 40 60 80\n0\n\n50\n\n100\n\n150\n\n200\n\ntime [s]\n\n?p\nF\n,i\n?\n[m\n\n]\n\n \n\n \n?pF,1?\n?pF,2?\n?pF,3?\n\n(a) Position error\n\n0 20 40 60 80\n\n?0.2\n\n0\n\n0.2\n\nq c\n,\nq\n[1\n/\ns]\n\n \n\n \nqc q\n\n0 20 40 60 80\n\n?0.2\n\n0\n\n0.2\n\ntime [s]\n\nr c\n,\nr\n[1\n/\ns]\n\n \n\n \nrc r\n\n(b) Angular rates\n\n0 20 40 60 80\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\ntime [s]\n\n?\n(R\n\ni)\n[m\n\n]\n\n \n\n \n\n?(R?1)\n\n?(R?2)\n?(R?3)\n\n(c) Attitude error\n\n0 20 40 60 80\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n35\n\n40\n\ntime [s]\n\n?? i\n[m\n\n/\ns]\n\n \n\n \n\n??1\n??2\n??3\n\n(d) Progression of the virtual targets\n\nFig. 8. Path-following with simultaneous arrival. The path-following algorithm drives\nthe path-following position and attitude errors to a neighborhood of zero.\n\nDetails about the performance of the path-following algorithm are shown in\nFig. 8; the path-following position and attitude errors, pF,i and ?(R?i), converge\nto a neighborhood of zero within 30 s. The figure also presents the angular-rate\ncommands, qc,i and rc,i, as well as the rate of progression ??i of the virtual targets\nalong the path.\n\nThe evolution of both the coordination errors (?i ? ?j) and the rate of change\nof the coordination states ??i are illustrated in Fig. 9, along with the resulting\nUAV speeds and the integral states implemented on the follower vehicles. The\nfigure shows that the coordination errors converge to a neighborhood of zero,\nwhile the rate of change of the coordination states converges to the desired\nrate ??ref = 1. In particular, Figure 9b illustrates how the vehicles adjust their\nspeeds (with respect to the desired speed profile) to achieve coordination. Finally,\nFigure 10 describes the evolution of the information flow as the mission unfolds,\nand presents an estimate of the QoS of the network, computed as\n\n??(t) := ?min\n\n(\n1\n\n3\n\n1\n\nT\n\n? t\nt?T\n\nQ3L(?)Q\n?\n3 d?\n\n)\n, t ? T , (9)\n\nwith T = 10 s.\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 223\n\n0 20 40 60 80\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\ntime [s]\n\n? i\n?\n\n? 1\n[s\n]\n\n \n\n \n?2 ? ?1\n?3 ? ?1\n\n(a) Coordination errors\n\n0 20 40 60 80\n\n18\n\n20\n\n22\n\n24\n\n26\n\n28\n\n30\n\n32\n\ntime [s]\n\nv d\n,\nv c\n,\nv\n[m\n\n/\ns]\n\n \n\n \nvdvc\nv\n\n(b) UAV speeds\n\n0 20 40 60 80\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\ntime [s]\n\n?? i\n[s\n/\ns]\n\n \n\n \n\n??1\n??2\n??3\n??ref\n\n(c) Coordination-state rates\n\n0 20 40 60 80\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\ntime [s]\n\n?\nI\n,i\n[s\n/\ns]\n\n \n\n \n?I,2\n?I,3\n\n(d) Integral states\n\nFig. 9. Path-following with simultaneous arrival. The coordination control law ensures\nthat the coordination errors converge to a neighborhood of zero and also that the rate\nof change of the coordination states evolves at about the desired rate ??ref = 1.\n\n0 20 40 60 80\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\ntime [s]\n\nto\npo\n\nlo\ngy\n\n(a) Topology\n\n0 20 40 60 80\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\ntime [s]\n\n??\n[-\n]\n\n(b) QoS estimate\n\nFig. 10. Path-following with simultaneous arrival. At a given time instant, the infor-\nmation flow is characterized by one of the topologies in Fig. 6. The resulting graph is\nonly connected in an integral sense, and not pointwise in time.\n\n\n\n224 I. Kaminer et al.\n\n5.2 Sequential Auto-Landing\n\nHere, three UAVs must arrive at the assigned glide slope separated by prespec-\nified safe-guarding time-intervals, and then follow the glide path at a constant\napproach speed while maintaining the safe-guarding separation. To this end,\ntime-deconflicted transition trajectories are generated from prespecified initial\nconditions to the beginning of the glide path, satisfying the desired inter-vehicle\narrival schedule and taking the UAVs to the desired approach speed. Again, this\nmission imposes only relative temporal constraints on the arrival of the UAVs.\n\nFigure 11 shows the three transition paths with the parallel transport frames\nas well as the framed 3-deg glide path. The beginning of each transition path\nis indicated with a circle, while the beginning of the glide path is indicated\nwith a triangle. The figure also presents the desired speed profiles for the initial\ntransition phase that ensure a desired safe-guarding arrival separation of 30 s,\ntrajectory deconfliction, as well as a final approach speed of 20 m/s. The transi-\ntion coordination maps are shown in Fig. 11c. Finally, the figure also includes the\ndesired speed profile for the approach along the glide slope as well as the corre-\nsponding coordination map. The transition paths have lengths ?f1 = 1, 609.0 m,\n?f2 = 1, 962.7 m, and ?f3 = 2, 836.7 m, and the desired times of arrival at the\nglide slope are t?d1 = 65.0 s, t\n\n?\nd2 = 95.0 s, and t\n\n?\nd3 = 125.0 s. Figure 12 presents\n\nthe path separations, which show that the three transition paths meet at their\nend positions (beginning of the glide slope), whereas the desired inter-vehicle\nseparations for this particular mission are never less than 350 m.\n\nThe cooperative motion-control algorithms described in this paper can be used\nto solve this sequential auto-landing problem. In this case, however, since the\nUAVs are required to maintain a safe-guarding separation during the approach\nalong the glide path, the coordination states have to be redefined as the vehicles\nreach the glide slope. Hence, while the ith UAV is flying along its transition\npath, its coordination state is defined as\n\n?i(t) = ?i(?\n?\ni(t)) , i = 1, 2, 3 ,\n\nwhere ??i(t) is the normalized curvilinear abscissa of the ith virtual target along\nthe corresponding transition path. When the UAV reaches the beginning of the\nglide path, then its coordination state is (re)defined as\n\n?i(t) = ?gs(?\n?\ni(t)) + t\n\n?\ndi , i = 1, 2, 3 ,\n\nwhere ??i(t) is now the normalized curvilinear abscissa of the ith virtual tar-\nget along the glide path, and t?di is the desired time of arrival of the ith UAV\nat the beginning of the glide slope. Note that, with the above definitions, the\ncoordination states ?i(t) are continuous, as ?i(1) = t\n\n?\ndi and ?gs(0) = 0.\n\nNext, we present simulation results for this mission scenario. Figure 13 il-\nlustrates the evolution of the UAVs (black) as well as the virtual targets (mid\ngray) moving along the paths (light gray). Similar to the previous scenario, the\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 225\n\n0\n\n1000\n\n2000\n\n3000\n\n4000\n?500\n\n0\n500\n\n1000\n\n0\n\n500\n\n \n\nNorth [m]\n\nEast [m] \n\nA\nlti\n\ntu\nde\n\n [m\n]\n\nGlide Path\nTransition Path 1\nTransition Path 2\nTransition Path 3\nBeginning Transition Paths\nBeginning Glide Path\n\nYZ projection\n\nXZ projection\n\nXY projection\n\n(a) Framed 3D paths\n\n0 20 40 60 80 100 120\n\n18\n\n20\n\n22\n\n24\n\n26\n\n28\n\n30\n\n32\n\ntd [s]\n\nv d\n,i\n[m\n\n/\ns]\n\n \n\n \n\n  v\nmin\n\n  \n\n  v\nmax\n\n  \nvd,1\nvd,2\nvd,3\n\n(b) Transition: Desired speed profiles\n\n0 0.2 0.4 0.6 0.8 1\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n120\n\n??d,i [-]\n\nt d\n[s\n]\n\n \n\n \n\n?1\n?2\n?3\n\n(c) Transition: Coordination maps\n\n0 20 40 60 80 100\n\n18\n\n20\n\n22\n\n24\n\n26\n\n28\n\n30\n\n32\n\ntgsd [s]\n\nv\ng\ns\n\nd\n[m\n\n/\ns]\n\n \n\n \n\n  v\nmin\n\n  \n\n  v\nmax\n\n  \nvgsd\n\n(d) Glide slope: Desired speed profile\n\n0 0.2 0.4 0.6 0.8 1\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n??d,gs [-]\n\ntg\ns\n\nd\n[s\n]\n\n \n\n \n\n?gs\n\n(e) Glide slope: Coordination map\n\nFig. 11. Sequential auto-landing. Framed 3D spatial paths along with the correspond-\ning desired speed profiles and coordination maps for both the transition trajectories\nand the glide slope.\n\n\n\n226 I. Kaminer et al.\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n??,1/?f1 [-]??,2/?f2 [-]\n\n?p\nd\n,1\n(?\n\n?,\n1\n)\n?\n\np\nd\n,2\n(?\n\n?,\n2\n)?\n\n[m\n]\n\n(a) Separation between paths 1 and 2\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n??,1/?f1 [-]??,3/?f3 [-]\n\n?p\nd\n,1\n(?\n\n?,\n1\n)\n?\n\np\nd\n,3\n(?\n\n?,\n3\n)?\n\n[m\n]\n\n(b) Separation between paths 1 and 3\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n0.2\n\n0.4\n0.6\n\n0.8\n1\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n??,2/?f2 [-]??,3/?f3 [-]\n\n?p\nd\n,2\n(?\n\n?,\n2\n)\n?\n\np\nd\n,3\n(?\n\n?,\n3\n)?\n\n[m\n]\n\n(c) Separation between paths 2 and 3\n\n0 20 40 60 80 100 120\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\ntd [s]\n\n?p\nd\n,i\n(t\n\nd\n)\n?\n\np\nd\n,j\n(t\n\nd\n)?\n\n[m\n]\n\n \n\n \n?pd,1(td)? pd,2(td)?\n?pd,1(td)? pd,3(td)?\n?pd,2(td)? pd,3(td)?\n\n(d) Desired inter-vehicle separation\n\nFig. 12. Sequential auto-landing. Path separation and desired inter-vehicle separation\nduring the transition phase; the speed profiles ensure deconfliction of the three desired\ntrajectories with a minimum clearance of 350 m.\n\nUAVs start the mission with an initial offset in both position and attitude with\nrespect to the beginning of the transition paths. As can be seen in the figure,\nthe path-following algorithm eliminates this initial offset and steers the UAVs\nalong the corresponding transition paths, while the coordination algorithm en-\nsures that the UAVs reach the glide slope separated by a desired time-interval.\nThe UAVs reach the glide slope at t = 67.0 s, t = 97.0 s, and t = 127.0 s, meet-\ning the desired 30 s inter-vehicle separation. After reaching the glide slope, the\npath-following algorithm ensures that the UAVs stay on the glide path as the\ncoordination algorithm maintains the safe-guarding separation. The simulation\nis stopped when the first UAV reaches the end of the glide path.\n\nFigure 14 shows the path-following position and attitude errors, pF,i and\n\n?(R?i), as well as the angular-rate commands, qc,i and rc,i, and the rate of\n\nprogression of the virtual targets along the path ??i. The path-following errors\nconverge to a neighborhood of zero within 40 s.\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 227\n\n0\n\n1000\n\n2000\n\n3000\n\n4000 ?500 0\n500 1000\n\n0\n\n500\n\n t = 0.0 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n1000\n\n2000\n\n3000\n\n4000 ?500 0\n500 1000\n\n0\n\n500\n\n t = 29.6 s\n\n \n\nNorth [m]\n\nEast [m]\n\n \nA\n\nlti\ntu\n\nde\n [m\n\n]\n\nGlide Path\nTransition Paths\nVirtual targets\nUAVs\n\n0\n\n1000\n\n2000\n\n3000\n\n4000 ?500 0\n500 1000\n\n0\n\n500\n\n t = 59.2 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n1000\n\n2000\n\n3000\n\n4000 ?500 0\n500 1000\n\n0\n\n500\n\n t = 88.8 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n1000\n\n2000\n\n3000\n\n4000 ?500 0\n500 1000\n\n0\n\n500\n\n t = 118.4 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\n0\n\n1000\n\n2000\n\n3000\n\n4000 ?500 0\n500 1000\n\n0\n\n500\n\n t = 177.4 s\n\nNorth [m]\n\nEast [m]\n\nA\nlti\n\ntu\nde\n\n [m\n]\n\nFig. 13. Sequential auto-landing. The three UAVs arrive at the beginning of the glide\npath separated by approximately 30 s and maintain this safe-guarding separation as\nthey fly along the glide slope.\n\n\n\n228 I. Kaminer et al.\n\n0 50 100 150\n0\n\n50\n\n100\n\n150\n\n200\n\ntime [s]\n\n?p\nF\n,i\n?\n[m\n\n]\n\n \n\n \n?pF,1?\n?pF,2?\n?pF,3?\n\n(a) Position error\n\n0 50 100 150\n\n?0.2\n\n0\n\n0.2\n\nq c\n,\nq\n[1\n/\ns]\n\n \n\n \nqc q\n\n0 50 100 150\n\n?0.2\n\n0\n\n0.2\n\ntime [s]\n\nr c\n,\nr\n[1\n/\ns]\n\n \n\n \nrc r\n\n(b) Angular rates\n\n0 50 100 150\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\ntime [s]\n\n?\n(R?\n\ni)\n[m\n\n]\n\n \n\n \n\n?(R?1)\n\n?(R?2)\n?(R?3)\n\n(c) Attitude error\n\n0 50 100 150\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n35\n\n40\n\ntime [s]\n\n?? i\n[m\n\n/\ns]\n\n \n\n \n\n??1\n??2\n??3\n\n(d) Progression of the virtual targets\n\nFig. 14. Sequential auto-landing. The path-following algorithm drives the path-\nfollowing position and attitude errors to a neighborhood of zero.\n\nThe coordination errors (?i ? ?j) also converge to a neighborhood of zero,\nwhile the rate of change of the coordination states ??i converges to neighborhood\nof the desired rate ??ref = 1; see Fig. 15. This figure also shows the UAV speeds\nand the integral states implemented on the follower vehicles. In particular, Fig-\nure 15b shows that, after a transient caused by the initial path-following errors\nas well as the speed corrections introduced by the coordination control law, the\nspeed of each UAV converges to its desired speed and, as the vehicles enter the\nglide path, their speeds converge to the desired approach speed of 20 m/s. Fi-\nnally, Figure 16 shows the evolution of the time-varying network topology along\nwith an estimate of the QoS of the network, computed as in (9).\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 229\n\n0 50 100 150\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\ntime [s]\n\n? i\n?\n\n? 1\n[s\n]\n\n \n\n \n?2 ? ?1\n?3 ? ?1\n\n(a) Coordination errors\n\n0 50 100 150\n\n18\n\n20\n\n22\n\n24\n\n26\n\n28\n\n30\n\n32\n\ntime [s]\n\nv d\n,\nv c\n,\nv\n[m\n\n/\ns]\n\n \n\n \nvdvc\nv\n\n(b) UAV speeds\n\n0 50 100 150\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\ntime [s]\n\n?? i\n[s\n/\ns]\n\n \n\n \n\n??1\n??2\n??3\n??ref\n\n(c) Coordination-state rates\n\n0 50 100 150\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\ntime [s]\n\n?\nI\n,i\n[s\n/\ns]\n\n \n\n \n?I,2\n?I,3\n\n(d) Integral states\n\nFig. 15. Sequential auto-landing. The coordination control law ensures that the coordi-\nnation errors converge to a neighborhood of zero, thus ensuring trajectory deconfliction,\nand also that the rate of change of the coordination states evolves at about the desired\nrate ??ref = 1.\n\n0 50 100 150\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\ntime [s]\n\nto\npo\n\nlo\ngy\n\n(a) Topology\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\ntime [s]\n\n??\n[-\n]\n\n(b) Quality of service\n\nFig. 16. Sequential auto-landing. At a given time instant, the information flow is char-\nacterized by one of the topologies in Fig. 6. The resulting graph is only connected in\nan integral sense, and not pointwise in time.\n\n\n\n230 I. Kaminer et al.\n\n6 Conclusions\n\nThe paper presented simulation results of two multi-vehicle time-critical missions\nthat exploit a distributed cooperative control framework proposed by the authors\nin [31]. The simulation study illustrated the efficacy of the algorithms developed\nand verified the main theoretical claims. Our current research efforts go well\nbeyond concept; in fact, the framework described in this paper has already been\ntested in a cooperative road-search mission involving two small tactical UAVs\nequipped with commercial off-the-shelf autopilots. These preliminary flight-test\nresults, which have been reported in [31,36], demonstrate the effectiveness of the\nproposed theoretical framework in a specific realistic application as well as the\nfeasibility of the onboard implementation of the algorithms.\n\nAcknowledgments. Research was supported in part by Office of Naval Re-\nsearch, Air Force Office of Scientific Research, Army Research Office, European\nCommission under the FP7 MORPH Project (grant agreement No. 288704), and\nFundac?a?o para a Cie?ncia e a Tecnologia under the CONAV project\n(PTDC/EEACRO/113820/2009) and the project PEst-OE/EEI/LA0009/2011.\n\nAppendix: The hat and vee Maps\n\nThe hat map (\u00b7)? : IR3 ? so(3) is defined as\n\n(x)? =\n[ 0 ?x3 x2\n\nx3 0 ?x1?x2 x1 0\n\n]\n\nfor x = [x1, x2, x3]\n? ? IR3. The inverse of the hat map is referred to as the vee\n\nmap (\u00b7)? : so(3) ? IR3. The reader is referred to [44] for details on these maps.\n\nReferences\n\n1. Tsitsiklis, J.N., Athans, M.: Convergence and asymptotic agreement in distributed\ndecision problems. IEEE Transactions on Automatic Control 29(1), 42\u201350 (1984)\n\n2. Sepulchre, R., Paley, D., Leonard, N.: Collective Motion and Oscillator Synchro-\nnization. In: Kumar, V., Leonard, N., Stephen Morse, A. (eds.) Cooperative Con-\ntrol. LNCIS, vol. 309, pp. 189\u2013206. Springer, Heidelberg (2005)\n\n3. Jadbabaie, A., Lin, J., Morse, A.S.: Coordination of groups of mobile autonomous\nagents using nearest neighbor rules. IEEE Transactions on Automatic Con-\ntrol 48(6), 988\u20131001 (2003)\n\n4. Lin, Z., Francis, B.A., Maggiore, M.: State agreement for continuous-time coupled\nnonlinear systems. SIAM Journal on Control and Optimization 46(1), 288\u2013307\n(2007)\n\n5. Egerstedt, M., Hu, X.: Formation constrained multi-agent control. IEEE Transac-\ntions on Robotics and Automation 17(6), 947\u2013951 (2001)\n\n6. Olfati Saber, R., Dunbar, W.B., Murray, R.M.: Cooperative control of multi-vehicle\nsystems using cost graphs and optimization. In: American Control Conference,\nDenver, CO, pp. 2217\u20132222 (June 2003)\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 231\n\n7. Fax, J.A., Murray, R.M.: Information flow and cooperative control of vehicle for-\nmations. IEEE Transactions on Automatic Control 49(9), 1465\u20131476 (2004)\n\n8. Dunbar, W.B., Murray, R.M.: Distributed receding horizon control for multi-vehicle\nformation stabilization. Automatica 42(4), 549\u2013558 (2006)\n\n9. Ghabcheloo, R., Pascoal, A.M., Silvestre, C., Kaminer, I.: Coordinated path follow-\ning control of multiple wheeled robots using linearization techniques. International\nJournal of Systems Science 37(6), 399\u2013414 (2006)\n\n10. Stevenson, D., Wheeler, M., Campbell, M.E., Whitacre, W.W., Rysdyk, R.T.,\nWise, R.: Cooperative tracking flight test. In: AIAA Guidance, Navigation and\nControl Conference, Hilton Head, SC. AIAA 2007-6756 (August 2007)\n\n11. Keviczky, T., Borrelli, F., Fregene, K., Godbole, D., Balas, G.J.: Decentralized\nreceding horizon control and coordination of autonomous vehicle formations. IEEE\nTransactions on Control System Technology 16(1), 19\u201333 (2008)\n\n12. Schouwenaars, T., How, J.P., Feron, E.: Decentralized cooperative trajectory plan-\nning of multiple aircraft with hard safety guarantees. In: AIAA Guidance, Naviga-\ntion and Control Conference, Providence, RI. AIAA 2004-5141 (August 2004)\n\n13. McLain, T.W., Beard, R.W.: Coordination variables, coordination functions, and\ncooperative timing missions. AIAA Journal of Guidance, Control and Dynam-\nics 28(1), 150\u2013161 (2005)\n\n14. Scholte, E., Campbell, M.E.: Robust nonlinear model predictive control with par-\ntial state information. IEEE Transactions on Control System Technology 16(4),\n636\u2013651 (2008)\n\n15. Kuwata, Y., How, J.P.: Cooperative distributed robust trajectory optimization\nusing receding horizon MILP. IEEE Transactions on Control System Technol-\nogy 19(2), 423\u2013431 (2011)\n\n16. Fang, L., Antsaklis, P.J., Tzimas, A.: Asynchronous consensus protocols: Prelimi-\nnary results, simulations and open questions. In: IEEE Conference on Decision and\nControl, Seville, Spain, pp. 2194\u20132199 (December 2005)\n\n17. Mesbahi, M.: On state-dependent dynamic graphs and their controllability prop-\nerties. IEEE Transactions on Automatic Control 50(3), 387\u2013392 (2005)\n\n18. Stilwell, D.J., Bishop, B.E.: Platoons of underwater vehicles. IEEE Control Systems\nMagazine 20(6), 45\u201352 (2000)\n\n19. Stilwell, D.J., Bollt, E.M., Roberson, D.G.: Sufficient conditions for fast switch-\ning synchronization in time-varying network topologies. SIAM Journal of Applied\nDynamical Systems 5(1), 140\u2013156 (2006)\n\n20. Cao, M., Spielman, D.A., Morse, A.S.: A lower bound on convergence of a dis-\ntributed network consensus algorithm. In: IEEE Conference on Decision and Con-\ntrol, Seville, Spain, pp. 2356\u20132361 (December 2005)\n\n21. Kim, Y., Mesbahi, M.: On maximizing the second smallest eigenvalue of state-\ndependent graph Laplacian. IEEE Transactions on Automatic Control 51(1), 116\u2013\n120 (2006)\n\n22. Mesbahi, M., Hadaegh, F.Y.: Formation flying control of multiple spacecraft via\ngraphs, matrix inequalities, and switching. AIAA Journal of Guidance, Control\nand Dynamics 24(2), 369\u2013377 (2001)\n\n23. Song, Y.D., Li, Y., Liao, X.H.: Orthogonal transformation based robust adaptive\nclose formation control of multi-UAVs. In: American Control Conference, Portland,\nOR, vol. 5, pp. 2983\u20132988 (June 2005)\n\n24. Stipanovic?, D.M., I?nalhan, G., Teo, R., Tomlin, C.J.: Decentralized overlapping\ncontrol of a formation of unmanned aerial vehicles. Automatica 40(8), 1285\u20131296\n(2004)\n\n\n\n232 I. Kaminer et al.\n\n25. Skjetne, R., Moi, S., Fossen, T.I.: Nonlinear formation control of marine craft. In:\nIEEE Conference on Decision and Control, Las Vegas, NV, vol. 2, pp. 1699\u20131704\n(December 2002)\n\n26. Fossen, T.I.: Marine Control Systems: Guidance, Navigation and Control of Ships,\nRigs and Underwater Vehicles. Marine Cybernetics, Norway (2002)\n\n27. Pereira, F.L., de Sousa, J.B.: Coordinated control of networked vehicles: An au-\ntonomous underwater system. Automation and Remote Control 65(7), 1037\u20131045\n(2004)\n\n28. Ihle, I.A.F.: Coordinated Control of Marine Craft. PhD thesis, Norwegian Univer-\nsity of Science and Technology, Trondheim, Norway (September 2006)\n\n29. Ihle, I.A.F., Jouffroy, J., Fossen, T.I.: Robust formation control of marine craft\nusing Lagrange multipliers. In: Pettersen, K.Y., Gravdahl, J.T., Nijmeijer, H.\n(eds.) Group Coordination and Cooperative Control. LNCIS, vol. 336, pp. 113\u2013\n129. Springer, Heidelberg (2006)\n\n30. Breivik, M., Hovstein, V.E., Fossen, T.I.: Ship formation control: A guided leader-\nfollower approach. In: IFAC World Congress, Seoul, South Korea (July 2008)\n\n31. Xargay, E., Kaminer, I., Pascoal, A., Hovakimyan, N., Dobrokhodov, V., Cichella,\nV., Aguiar, A.P., Ghabcheloo, R.: Time-critical cooperative path following of mul-\ntiple unmanned aerial vehicles over time-varying networks. AIAA Journal of Guid-\nance, Control and Dynamics 36(2), 499\u2013516 (2013)\n\n32. Aguiar, A.P., Pascoal, A.M.: Coordinated path-following control for nonlinear sys-\ntems with logic-based communication. In: IEEE Conference on Decision and Con-\ntrol, New Orleans, LA, pp. 1473\u20131479 (December 2007)\n\n33. Ghabcheloo, R., Kaminer, I., Aguiar, A.P., Pascoal, A.M.: A general framework\nfor multiple vehicle time-coordinated path following control. In: American Control\nConference, St. Louis, MO, pp. 3071\u20133076 (June 2009)\n\n34. Ghabcheloo, R., Aguiar, A.P., Pascoal, A.M., Silvestre, C., Kaminer, I., Hespanha,\nJ.P.: Coordinated path-following in the presence of communication losses and de-\nlays. SIAM Journal on Control and Optimization 48(1), 234\u2013265 (2009)\n\n35. Kaminer, I., Pascoal, A.M., Xargay, E., Hovakimyan, N., Cao, C., Dobrokhodov,\nV.: Path following for unmanned aerial vehicles using L1 adaptive augmentation of\ncommercial autopilots. AIAA Journal of Guidance, Control and Dynamics 33(2),\n550\u2013564 (2010)\n\n36. Xargay, E., Dobrokhodov, V., Kaminer, I., Pascoal, A.M., Hovakimyan, N., Cao, C.:\nTime-critical cooperative control for multiple autonomous systems. IEEE Control\nSystems Magazine 32(5), 49\u201373 (2012)\n\n37. Choe, R., Cichella, V., Xargay, E., Hovakimyan, N., Trujillo, A.C., Kaminer, I.: A\ntrajectory-generation framework for time-critical cooperative missions. In: AIAA\nInfotech@Aerospace, Boston, MA. AIAA 2013-4582 (August 2013)\n\n38. Lapierre, L., Soetanto, D., Pascoal, A.M.: Non-singular path-following control of a\nunicycle in the presence of parametric modeling uncertainties. International Jour-\nnal of Robust and Nonlinear Control 16(10), 485\u2013503 (2006)\n\n39. Bishop, R.L.: There is more than one way to frame a curve. The American Math-\nematical Monthly 82(3), 246\u2013251 (1975)\n\n40. Biggs, N.: Algebraic Graph Theory. Cambridge University Press, New York, NY\n(1993)\n\n41. Arcak, M.: Passivity as a design tool for group coordination. IEEE Transactions\non Automatic Control 52(8), 1380\u20131390 (2007)\n\n42. Xargay, E., Choe, R., Hovakimyan, N., Kaminer, I.: Multi-leader coordination al-\ngorithm for networks with switching topology and quantized information. Auto-\nmatica 50(3), 841\u2013851 (2014)\n\n\n\nTime-Critical Cooperative Path Following of Multiple UAVs: Case Studies 233\n\n43. Aguiar, A.P., Kaminer, I., Ghabcheloo, R., Pascoal, A.M., Xargay, E., Hovakimyan,\nN., Cao, C., Dobrokhodov, V.: Time-coordinated path following of multiple UAVs\nover time-varying networks using L1 adaptation. In: AIAA Guidance, Navigation\nand Control Conference, Honolulu, HI. AIAA 2008-7131 (August 2008)\n\n44. Lee, T., Leok, M., McClamroch, N.H.: Control of complex maneuvers for a quadro-\ntor UAV using geometric methods on SE(3). IEEE Transactions on Automatic\nControl (2010), available online:arXiv:1003.2005v3\n\n\n\nObservability Analysis for the INS Error Model\n\nwith GPS/Uncalibrated Magnetometer Aiding\n\nRonan Arraes Jardim Chagas and Jacques Waldmann\n\nInstituto Tecnolo?gico de Aerona?utica,\nSa?o Jose? dos Campos, SP, 12.228-900, Brazil\n\nronan.jardim@gmail.com,\njacques@ita.br\n\nAbstract. A commercial inertial navigation system (INS) yields time-\ndiverging solutions due to errors in the inertial sensors, which can inhibit\nlong term navigation. To circumvent this issue, a set of non-inertial sen-\nsors is used to limit these errors. The fusion between additional data\nand INS solution is often done by means of an extended Kalman filter\nusing a state-error model. However, the Kalman filter estimates should\nbe used when full observability produces small estimation uncertainty.\nThis paper has analyzed conditions to achieve full observability using\nas non-inertial sensors a GPS receiver and an uncalibrated magnetome-\nter combined with either a locally horizontal-stabilized IMU or with a\nstrapdown IMU. The magnetometer bias was considered constant and\naugmented the error-state space. Observability analysis based on con-\ncepts of linear algebra provided a geometric insight on the requirements\nfor attaining full observability when assuming piece-wise constant system\ndynamics. The novel analysis has been validated by covariance analysis\nof simulation results. Also, simulation results indicate that fusion with\nuncalibrated magnetometer data without proper processing gives rise to\nestimation divergence.\n\nKeywords: Observability analysis, INS error model, GPS,\nmagnetometer.\n\nNotation and Abbreviations\n\nR Set of real numbers.\nDCM Direction Cossine Matrix.\nPWC Piece-wise constant.\ny Scalar.\ny Vector.\nA Matrix.\ndiag(A B) Block-diagonal matrix constructed by the matrices A and B.\nIn Identity matrix of size n.\n[y]\u00d7x Matrix representation of the cross product y \u00d7 x.\nDab DCM that rotates from the a coordinate frame to the b coordinate\n\nframe.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 235\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_13\n\n\n\n236 R.A.J. Chagas and J. Waldmann\n\n?abc Angular rate of the a coordinate frame with respect to the b\ncoordinate frame represented in the c coordinate frame.\n\n?l Transport rate represented in the local horizontal frame.\n?e,l Earth\u2019s angular rate represented in the local horizontal frame.\nAspl Specific force represented in the local horizontal frame.\n?Rl INS position error represented in the local horizontal frame.\n?Vl INS velocity error represented in the local horizontal frame.\n? Misalignment from the computed coordinate frame to the plat-\n\nform coordinate frame.\n? Accelerometer bias.\n? Rate-gyro drift.\n? Magnetometer bias.\nRN North-south radius of curvature of the Earth.\nRE East-west radius of curvature of the Earth.\nRe Earth radius at the latitude of the vehicle.\nge Gravitation at the latitude of the vehicle.\n? Latitude of the vehicle.\nh Altitude of the vehicle.\n?lil Angular rate of the local horizontal frame with respect to the in-\n\nertial coordinate frame represented in the local horizontal frame,\nwhich is equal to ?e,l + ?l.\n\n1 Introduction\n\nA commercial, stand-alone inertial navigation system (INS) quickly yields a\ndiverging solutions due to errors in the low-quality inertial measurement unit\n(IMU) sensors [1]. In myriad applications, such errors can preclude the use of\nthe navigation solution in the long term. Thus, a set of non-inertial sensors often\naid the INS by means of a state-error model embedded in an extended Kalman\nfilter [1]. The state-error model employs a state vector that comprises position\nand velocity errors, misalignment angles with respect to the locally horizontal\ncoordinate frame, accelerometer biases, and rate-gyro drifts [1]. Consequently,\nobservability analysis is called for to ensure that the filter estimates are accurate.\nFull observability yields the estimation error covariance attaining the minimum\nin all state-error space directions [2], and then Kalman filter estimates can be\nused to correct the INS errors and calibrate the inertial sensors.\n\nNavigation becomes unfeasible when the aiding sensors are lacking with re-\nspect to limiting the misalignment error. These errors can be bounded by a\nmagnetometer or a camera. The latter requires a pointing apparatus and calls\nfor image processing. Hence, for low cost systems, the magnetometer is the usual\nchoice of aiding sensor, along with a pressure altimeter, and embedded in many\ncommercially available IMUs [3, 4].\n\nA previous observability analysis and validation by simulation of the INS error\nmodel with GPS/magnetometer aiding in [5] have shown that useful measure-\nments of position and misalignment errors result from comparing the calibrated\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 237\n\nmagnetometer readings to an embedded geomagnetic field model. However, in-\ncorrect magnetometer calibration impairs the estimation performance reported\nin [5]. The errors in the magnetometer readings should be estimated to prevent\nthe degradation of estimation accuracy as shown later in the simulation results.\n\nFor the sake of modeling simplicity, it has been assumed that the magnetome-\nter measurement error can be modeled as a constant bias. The magnetometer\nbias is appended to the state-error and the observability analysis is then carried\nout for an IMU mounted on a stabilized platform and for a strapdown IMU.\nIn both cases, piece-wise constant dynamics for the INS error model have been\nassumed as in [6, 7]. The theoretical results have been validated by covariance\nanalysis of a simulated aided INS with an ideal IMU. Also, to cover more realistic\nsituations, two simulations have considered a non-ideal IMU and a time-varying\nmagnetometer bias. In the first, the magnetometer bias has been neglected and,\nin the second, it has been estimated by the extended Kalman filter.\n\nSection 2 presents the coordinate frames. The INS error model and the sensors\nmodel are presented in sections 3 and 4, respectively. The observability analysis\nis shown in section 5 . Simulations and results are presented in section 6. Finally,\nthe conclusions are reported in section 7.\n\n2 Coordinate Frames\n\nThe true local horizontal frame is used to represent the INS errors. In the\ntrue vehicle position, its X-axis points towards North, its Y-axis points towards\nEast, and its Z-axis points down. This coordinate system is thereafter indicated\nwith the l subscript.\n\nThe computed coordinate frame is defined as the local horizontal frame at\nthe position computed by the INS. It is thereafter indicated with the c subscript.\n\nThe platform coordinate frame is defined as the local horizontal frame\ncomputed by the INS. It is thereafter indicated with the p subscript.\n\nThe body coordinate frame is defined as the inertial sensors coordinate\nframe. It is usually assumed to be aligned with the vehicle coordinate frame in\nstrapdown IMUs or aligned with the platform coordinate frame in IMUs mounted\non a stabilized platform. This coordinate frame is thereafter indicated with the\nb subscript.\n\n3 INS Error Model\n\nINS errors are increasing and unbounded, thus navigation can be seriously com-\npromised in a long-term mission even with high-quality inertial sensors [1, 5, 8].\nNon-inertial sensors provide additional information that can limit such errors.\nThe fusion between the non-inertial sensors and the INS solution is often ac-\ncomplished by an extended Kalman filter using a state-error model. The usual\nstate vector for the INS error model is composed of position and velocity errors,\nmisalignment from the computed coordinate frame to the platform coordinate\n\n\n\n238 R.A.J. Chagas and J. Waldmann\n\nframe, accelerometers triad bias, and rate-gyros triad drift [1, 8]. The magne-\ntometer bias is appended to the state-error in section 4.\n\nFor the sake of completeness, the standard state-error model for an IMU\nmounted on a stabilized platform and for a strapdown IMU are presented in\neqs. 1 and 2, respectively:\n\nx? =\n\n?\n?????\n\n[?l]\u00d7 I3\u00d73 03\u00d73 03\u00d73 03\u00d73\nge ? ? I3\u00d73 03\u00d73\n\n03\u00d73 03\u00d73 ? 03\u00d73 ?I3\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n\n?\n?????x\n\nx =\n[\n?RTl ?V\n\nT\nl ?\n\nT ?Tl ?Tl\n]T\n\n,\n\n(1)\n\nx? =\n\n?\n?????\n\n[?l]\u00d7 I3\u00d73 03\u00d73 03\u00d73 03\u00d73\nge ? ? D\n\nb\nl 03\u00d73\n\n03\u00d73 03\u00d73 ? 03\u00d73 ?Dbl\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n\n?\n?????x\n\nx =\n[\n?RTl ?V\n\nT\nl ?\n\nT ?Tb ?Tb\n]T\n\n,\n\n(2)\n\nwhere ge = diag\n(?ge/Re ?ge/Re 2ge/Re ), ? = [?l + 2?e,l]\u00d7, ?=[?l +?e,l]\u00d7,\n\nand ? = [Aspl]\u00d7.\n\n4 Sensors Model\n\nThis investigation concentrates on INS error-state observability analysis when a\nGPS receiver and an uncalibrated magnetometer aid the INS, which extends a\nprevious investigation [5]. A measurement model for each non-inertial sensor is\ndescribed next.\n\nThe GPS solution is assumed to directly provide position and velocity er-\nrors. In practice, GPS raw data can be post-processed to yield vehicle position\nand velocity in the WGS84 ellipsoid coordinate frame as in a loosely-coupled\nimplementation. Alternatively, the raw data composed of, for example, pseudo-\nranges and Doppler shift from the receiver to each satellite are employed in a\ntightly-coupled implementation [8]. The GPS solution is then compared to the\nINS solution to produce a measurement vector of the state-error. Receiver clock\nerrors have not been involved in this investigation.\n\nThe GPS measurement equation under the aforementioned assumption and\nneglecting measurement noise is\n\nyGPS =\n\n[\nI3 03 03 03 03\n03 I3 03 03 03\n\n]\nx . (3)\n\nThe magnetic pseudomeasurement is composed of the difference between the\nmagnetometer raw data and the prediction from the geomagnetic field model.\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 239\n\nConsidering Pinson\u2019s model [10], the DCM from the body coordinate frame to\nthe true local horizontal frame can be approximated by neglecting second order\nterms as\n\nDlb = D\np\nb \u00b7Dcp\u00b7Dlc ? Dpb \u00b7(I3\u00d73?[?]\u00d7)\u00b7(I3\u00d73?[??]\u00d7) ? Dpb \u00b7(I3\u00d73?[?]\u00d7?[??]\u00d7) ,\n\n(4)\nwhere ?? is the misalignment from the true coordinate frame to the computed\ncoordinate frame and ? is misalignment from the computed coordinate frame to\nthe platform coordinate frame. Thus, the calibrated magnetometer measurement\nneglecting noise can be approximated by [5]\n\nBmag ? Dpb \u00b7 (I3\u00d73 ? [?]\u00d7 ? [??]\u00d7) \u00b7Bl\nDbpBmag ?Bl ? ?[?]\u00d7Bl ? [??]\u00d7Bl\nycalmag = [Bl]\u00d7? + [Bl]\u00d7?? ,\n\n(5)\n\nwhere Bmag is the calibrated magnetometer measurement and Bl is the local\ngeomagnetic field vector represented in the true local horizontal frame, which is\nnot accessible. Hence the use of the geomagnetic field model using the position\nsolution computed by either the GPS or the INS. Dpb = I3 if the IMU and the\nmagnetometer are mounted on a stabilized platform. Moreover, vector ?? can\nbe related to the position error represented in the local horizontal frame as\n\n?? =\n\n?\n??????\n\n0\n1\n\nRE + h\n0\n\n? 1\nRN + h\n\n0 0\n\n0 ? tan?\nRE + h\n\n0\n\n?\n??????\n\u00b7?Rl = C \u00b7?Rl . (6)\n\nFinally, the calibrated magnetic pseudo-measurement can be approximated\nby\n\nycalmag =\n[\n\n[Bl]\u00d7 \u00b7C 03 [Bl]\u00d7 03 03\n]\nx = Hcalmagx . (7)\n\nIf the geomagnetic field model Bl is not accurate enough or the magne-\ntometer calibration has not been executed correctly, then the magnetic pseudo-\nmeasurement ycalmag in eq. 7 will be in error. Thus, the uncalibrated magnetometer\nraw measurement can be approximated as follows\n\nBmag ? Dpb \u00b7 (I3\u00d73 ? [?]\u00d7 ? [??]\u00d7) \u00b7Bl + ?b , (8)\nwhere ?b is the magnetometer bias that comprises the uncalibrated magnetic\npseudo-measurement errors.\n\nFor the sake of modeling simplicity, ?b has been modeled as a constant be-\ncause it is expected to undergo a slow change when represented in the body\ncoordinate frame. However, later in the simulations, this restriction is relaxed\nand the measurement error ?b is simulated using a time-varying function. Hence,\nthe magnetometer bias dynamics neglecting modeling uncertainty can be written\nas\n\n??b = 03\u00d71 . (9)\n\n\n\n240 R.A.J. Chagas and J. Waldmann\n\nThe magnetometer bias is appended to the state-error vector to produce the\naugmented INS error model presented in eqs. 10 and 11 for an IMU mounted on\na stabilized platform and for a strapdown IMU, respectively:\n\nx?e =\n\n?\n???????\n\n[?l]\u00d7 I3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\nge ? ? I3\u00d73 03\u00d73 03\u00d73\n\n03\u00d73 03\u00d73 ? 03\u00d73 ?I3\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n\n?\n???????\nxe\n\nxe =\n[\n?RTl ?V\n\nT\nl ?\n\nT ?Tl ?Tl ?Tl\n]T\n\n,\n\n(10)\n\nx?e =\n\n?\n???????\n\n[?l]\u00d7 I3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\nge ? ? D\n\nb\nl 03\u00d73 03\u00d73\n\n03\u00d73 03\u00d73 ? 03\u00d73 ?Dbl 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n\n?\n???????\nxe\n\nxe =\n[\n?RTl ?V\n\nT\nl ?\n\nT ?Tb ?Tb ?Tb\n]T\n\n.\n\n(11)\n\nThus, the uncalibrated magnetic pseudo-measurement equation can be writ-\nten as follows\n\nyuncalmag = H\ncal\nmagx+D\n\nb\np?b\n\nyuncalmag =\n[\nHcalmag D\n\nb\np\n\n]\nxe .\n\n(12)\n\nIf the position and velocity errors are directly measured, then, by definition,\nthose state vector components are observable. The position error is dynamically\ncoupled only with the velocity error, which shows that the position error dy-\nnamics fails to bring any unmeasured component into the observable subspace.\nHence, for the sake of simplicity of the observability analysis, the position error\ncomponent can be neglected [9].\n\nFor the purpose of observability analysis, one calls models 1 and 2 the contents\nof eqs. 10 and 11 without the position errors, respectively, and the measurement\nequations 3, and either 7 or 12. The analysis had those measurement equations\nproperly changed to match the reduced error-state vector wherein position errors\nhave been neglected.\n\n5 Observability Analysis\n\nThe INS error dynamics in eqs. 10 and 11 is a time-varying, linear system.\nThe most general way to check observability is to compute the observability\nGrammian [11]. However, it leads to a complicated mathematical treatment.\n\nIn the literature, observability has been verified by three main methods. The\nfirst is to analyze conditions that turn the model into a time-invariant system,\ne. g. the vehicle is stationary on the Earth\u2019s surface, or to find an adequate Lya-\npunov transformation that also leads to a time-invariant system [12]. Thus the\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 241\n\nobservability can be checked by means of rank computation of the observability\nmatrix [11]. This approach was used in [1, 12].\n\nThe second method is applicable to piece-wise constant (PWC) systems. The\nobservability analysis is still done by rank computation, but it turns out that\nit can be greatly simplified when a certain condition holds as is presented in\nTheorem 1 [9]. For the INS error model 1, the system can be considered PWC if\nthe specific force is piece-wise constant [6]. For the INS error model 2, the system\ncan be approximated by a PWC system if the specific force and attitude with\nrespect to the local horizontal frame are piece-wise constant [7]. In this case,\nit is also expected that the DCM Dbp will be PWC, since, during a maneuver\nsegment, it will vary only due to numerical errors and imperfections of the inertial\nsensors. Thus, for sufficiently short segments, the uncalibrated magnetic pseudo-\nmeasurement matrix in eq. 12 can be approximated as a PWC matrix.\n\nThe third method has tried to investigate observability without assuming\npiece-wise constant dynamics [12\u201316]. Since the observability analysis of time-\nvarying systems is not easily applied under general conditions, several restrictions\ncan be considered, for example, constant specific forces and angular velocities,\nor a C-shaped path.\n\nFor the sake of simplicity, the second method based on assuming piece-wise\nconstant dynamics has been preferred here. It can be shown that under this con-\nstraint, an observability analysis with linear algebra concepts provides sufficient\nconditions for full observability that hold for practically all situations of inter-\nest [5]. Additionally, the approach yields a geometrical insight of the kinematics\ninvolved in the observability analysis [5]. Let a vehicle move at constant altitude\naccording to three consecutive trajectory segments: 1) towards North; 2) in a\nC-shaped trajectory; and 3) towards East. The composed movement leads to a\ntime-varying INS error model. However, if segment 2 is neglected, then the above\nINS error models turn into PWC systems. Thus, if full observability by the end\nof segment 3 can be proved, then, by definition, the time-varying system com-\nposed of the three segments is also fully observable. However, if full observability\ncannot be claimed from the analysis of the first and the third PWC segments,\nthen further analysis including the second segment is needed. Fortunately, the\nvehicle can move in such a manner that the INS error model will remain constant\nduring certain time intervals in all the situations of interest. Thus the analysis of\njust the PWC segments using the aforementioned method can provide sufficient\nconditions for full observability [5].\n\n5.1 Observability Analysis of Piece-Wise Constant Systems\n\nA PWC system is defined as\n\nx? = Ajx+Bju\n\ny = Cjx ,\n(13)\n\n\n\n242 R.A.J. Chagas and J. Waldmann\n\nwhere j ? [0, 1, 2, \u00b7 \u00b7 \u00b7 ] and matrices Aj , Bj , and Cj are constants for all j.\nObservability can be checked by rank analysis of the total observability matrix\n(TOM), defined for the first r + 1 segments as [9]\n\nQ?(r) =\n\n?\n????\n\nQ?0\nQ?1 \u00b7 eA0?0\n\n...\nQ?r \u00b7 eAr?1?r?1 \u00b7 . . . \u00b7 eA1?1 \u00b7 eA0?0\n\n?\n???? , (14)\n\nwith matrix Qi defined as\n\nQ?i =\n[\n\nCTi [CiAi]\nT \u00b7 \u00b7 \u00b7 [CiAn?1i ]T\n\n]T\n, (15)\n\nwhere n is the state vector dimension.\nThe computation of the exponential matrices leads to tedious and complicated\n\nalgebraic calculations, but it can be avoided if the following theorem holds [9].\n\nTheorem 1. If\n\nNULL(Qj) ? NULL(Aj), ? j ? [0, 1, 2, \u00b7 \u00b7 \u00b7 , r] ,\n\nthen the following holds:\n\nNULL(Q?(r)) = NULL(Q?s(r))\n\nRANK(Q?(r)) = RANK(Q?s(r)) ,\n\nwhere Q?s(r) is the stripped observability matrix (SOM) defined as follows\n\nQ?s(r) =\n[\n\nQ?T0 Q?\nT\n1 \u00b7 \u00b7 \u00b7 Q?Tr\n\n]T\n. (16)\n\nThus the computation of the exponential matrices can be avoided in the ob-\nservability analysis.\n\nProof. See [9]. ??\n\nReferences [7, 9] stated that the Theorem 1 holds for both models in eqs. 1\nand 2 when the INS state-error model neglects the position error dynamics and\nterrestrial velocity measurements are available from GPS solution. On the other\nhand, [5] showed that this theorem only holds for these models if the specific\nforce Aspl is not aligned with the angular rate of the local horizontal frame with\nrespect to the inertial coordinate frame ?lil at any segment. However, to the best\nknowledge of the authors, the validity of Theorem 1 has not been checked for the\nmodels 1 and 2, in which the magnetometer bias is appended to the state-error\nvector.\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 243\n\nRegarding model 2, the observability matrix for the j -th segment can be\nwritten, after elementary row operations, as\n\nQ?j =\n\n?\n?????????????????\n\n?\n?????????????????\n\nI3 03 03 03 03\n\nGPS\n03 ?j D\n\nb\nl,j 03 03\n\n03 ?j? 03 ??jDbl,j 03\n03 ?j?\n\n2 03 ??j?Dbl,j 03\n...\n\n...\n...\n\n...\n...\n\n03 [Bl]\u00d7 03 03 Dbp,j\n\nMag.\n03 [Bl]\u00d7? 03 ?[Bl]\u00d7Dbl,j 03\n03 [Bl]\u00d7?2 03 ?[Bl]\u00d7?Dbl,j 03\n...\n\n...\n...\n\n...\n...\n\n, (17)\n\nwhere the subscript j indicates a matrix at the j -th segment. Notice that ?,\nwhich is the cross product matrix representation of the angular rate vector ?lil ,\nand [Bl]\u00d7 are time-varying matrices. However, they can be approximated as\nconstants for a short term analysis when the terrestrial velocity is small enough.\n\nA vector x ? NULL(Q?j) must satisfy the following conditions:\n?????????\n????????\n\n(1) x1 = 03\u00d71\n\n(2) ?jx2 +D\nb\nl,jx3 = 03\u00d71\n\n(3) ?j?\nn(?x2 ?Dbl,jx4) = 03\u00d71 n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 ]\n\n(4) [Bl]\u00d7?n(?x2 ?Dbl,jx4) = 03\u00d71 n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 ]\n(5) [Bl]\u00d7x2 +Dbp,jx5 = 03\u00d71 .\n\n(18)\n\nIf Aspl,j is not aligned with ?\nli\nl , then condition (3) and Theorem 5 (see\n\nAppendix) lead to ?x2 ?Dbl,jx4 = 03\u00d71.\nFurthermore, the following conditions must be satisfied if the vector x also\n\nlies in the null space of the j -th segment dynamics matrix Aj :\n\n?jx1 + ?jx2 +D\nb\nl,jx3 = 03\u00d71\n\n?jx2 ?Dbl,jx4 = 03\u00d71 .\n(19)\n\nIt is straightforward to check that if x ? NULL(Q?j) and Aspl,j is not aligned\nwith ?lil , then x also lies in the Aj null space. Hence, if this is valid for all j ? 0,\nthen Theorem 1 holds. One should notice that this proof can be extended to\nmodel 1 by substituting Dbl = I3 and D\n\nb\np = I3.\n\nHereafter, the assumption that Aspl,j is not aligned with ?\nli\nl for all j ? 0\n\nis called assumption ?. Thus, if assumption ? holds, the observability analysis\nfor the models 1 and 2 with GPS solution and uncalibrated magnetic pseudo-\nmeasurements can be carried out by means of rank analysis of the SOM.\n\n\n\n244 R.A.J. Chagas and J. Waldmann\n\n5.2 Observability Analysis for an IMU Mounted on a Stabilized\nPlatform\n\nThe observability analysis is now presented for the model 1 when GPS and\nuncalibrated magnetic pseudo-measurements as in eqs. 3 and 12, respectively,\nare available. The SOM for the first three segments can be assembled after\nelementary row and column operations as follows\n\nQ?\n?\ns(2) =\n\n?\n?????????????????????????\n\nI3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 I3\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 ??0 03\u00d73\n...\n\n...\n...\n\n...\n...\n\n03\u00d73 03\u00d73 03\u00d73 ??0?n?1 03\u00d73\n...\n\n...\n...\n\n...\n...\n\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 I3\u00d73\n03\u00d73 03\u00d73 03\u00d73 ?[Bl]\u00d7 03\u00d73\n...\n\n...\n...\n\n...\n...\n\n03\u00d73 03\u00d73 03\u00d73 ?[Bl]\u00d7?n?1 03\u00d73\n...\n\n...\n...\n\n...\n...\n\nA1\nA2\n\n?\n?????????????????????????\n\n, (20)\n\nwhere\n\nAi =\n\n?\n???????\n\n03\u00d73 ?i ? ?0 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 ??i 03\u00d73\n...\n\n...\n...\n\n...\n...\n\n03\u00d73 03\u00d73 03\u00d73 ??i?n?1 03\u00d73\n...\n\n...\n...\n\n...\n...\n\n?\n???????\n\n. (21)\n\nThus, if x ? NULL(Q??s(2)), then the following must hold:\n(1) x1 = 03\u00d71\n(2) x3 = 03\u00d71\n(3) ?i?\n\nnx4 = 03\u00d71, n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 ], i ? [0, 1, 2]\n(4) [Bl]\u00d7?nx4 = 03\u00d71, n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 ]\n(5) (?1 ? ?0)x2 = 03\u00d71\n(6) (?2 ? ?0)x2 = 03\u00d71 .\n\n(22)\n\nSince this analysis is only valid if the assumption ? holds, thus condition (3)\nand Theorem 5 (see Appendix) lead to x4 = 03\u00d71. Additionally, condition (5) re-\nstricts x2 to be aligned withAspl,1?Aspl,0. Likewise, condition (6) also restricts\nx2 andAspl,2?Aspl,0 to be linearly dependent vectors. Thus, if Aspl,1?Aspl,0\nis not aligned with Aspl,2 ?Aspl,0, then the conditions (5) and (6) can only be\nvalid with x2 = 03\u00d71, which leads to a fully observable system.\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 245\n\nFinally, the full observability of the piece-wise constant INS error model for an\nIMU mounted on a stabilized platform with GPS/uncalibrated magnetometer\naiding is achieved when:\n\n\u2013 The specific force Aspl,j is not aligned with the angular rate of the local\n\nhorizontal frame with respect to the inertial coordinate frame ?lil at any\nsegment j, j ? [0, 1, 2, 3, \u00b7 \u00b7 \u00b7 ];\n\n\u2013 There are at least three segments in which the specific force difference from\nsegment 0 to segment 1 Aspl,1?Aspl,0 is not aligned with the specific force\ndifference from segment 0 to segment 2 Aspl,2 ?Aspl,0.\n\nOne should notice that these are the same conditions to achieve full observabil-\nity when the GPS is the only aiding sensor [9]. If the magnetometer is calibrated\nand its residual bias can be neglected, then the full observability can be achieved\nwith just two specific force segments [5]. Hence, an uncalibrated magnetometer\ndoes not help to improve observability, but the magnetometer bias can be made\nobservable by means of specific force changes if the IMU is mounted on a stabi-\nlized platform.\n\n5.3 Observability Analysis for a Strapdown IMU\n\nThe observability analysis is hereafter presented for the model 2 when GPS and\nuncalibrated magnetic pseudo-measurements as in eqs. 3 and 12, respectively,\nare available. If the strapdown IMU angular rate with respect to the local coor-\ndinate frame, when represented in this same frame, is zero, then the observability\nanalysis can be carried out as in the previous section [5]. Moreover, the dynamics\nof the INS error model of a strapdown IMU can be also stimulated by rotational\nmotion. Thus additional excitation signals are available to increase the dimen-\nsion of the observable subspace. The analysis when the IMU undergoes PWC\nattitude is presented next.\n\nThe SOM for the first two segments can be assembled after elementary row\nand column operations as follows\n\nQ?\n?\ns(1) =\n\n?\n??????????????????????\n\nA0\n09\u00d73\n...\n\n03\u00d73\n...\n\nA1\n09\u00d73\n...\n\n03\u00d73\n...\n\n03\u00d73 [Bl]\u00d7 03\u00d73 03\u00d73 Dbp,0\n03\u00d73 [Bl]\u00d7 03\u00d73 03\u00d73 Dbp,1\n...\n\n...\n...\n\n...\n...\n\n?\n??????????????????????\n\n, (23)\n\n\n\n246 R.A.J. Chagas and J. Waldmann\n\nwhere\n\nA0 =\n\n?\n?????????\n\nI3\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 ? Dbl,0 03\u00d73\n03\u00d73 ?? 03\u00d73 ??Dbl,0\n...\n\n...\n...\n\n...\n03\u00d73 ??n 03\u00d73 ???n?1Dbl,0\n...\n\n...\n...\n\n...\n\n?\n?????????\n\n, (24)\n\nA1 =\n\n?\n???????\n\n03\u00d73 03\u00d73 Dbl,1 ?Dbl,0 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 ?? (Dbl,1 ?Dbl,0)\n...\n\n...\n...\n\n03\u00d73 03\u00d73 03\u00d73 ???n?1(Dbl,1 ?Dbl,0)\n...\n\n...\n...\n\n?\n???????\n\n. (25)\n\nThus if x ? NULL(Q??s(1)), then the following must hold:\n\n(1) x1 = 03\u00d71\n(2) ?x2 +D\n\nb\nl,0x3 = 03\u00d71\n\n(3) ??n(?x2 ?Dbl,0x4) = 03\u00d71, n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 ]\n(4) (Dbl,1 ?Dbl,0)x3 = 03\u00d71\n(5) ??n(Dbl,1 ?Dbl,0)x4 = 03\u00d71, n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 ]\n(6) [Bl]\u00d7x2 +Dbp,0x5 = 03\u00d71\n\n(7) [Bl]\u00d7x2 +Dbp,1x5 = 03\u00d71 .\n\n(26)\n\nConditions (3) and (5), assumption ?, and Theorem 5 (see Appendix) lead to\n(A) ?x2 ? Dbl,0x4 = 03\u00d71 and (B) (Dbl,1 ?Dbl,0)x4 = 03\u00d71. Condition (B) and\nTheorem 6 (see Appendix) claim that x4 must lie in the Euler axis in which\na single rotation aligns the body coordinate frame in segment 0 (b0 ) with the\nbody coordinate frame in segment 1 (b1 ) [5]. This axis is thereafter called eb0?b1.\nLikewise, x3 must also lie in the same axis due to condition (4) [5]. Then condition\n(2) leads to ?x2 = ?Dbl,0x3, which constrains x2 and the specific force Aspl\nto lie in a plane perpendicular to the Euler axis eb0?b1 if x3 is not 03\u00d71 [5]. In\nthe same way, if x4 is not 03\u00d71, then condition (A) above constrains x2 and the\nangular rate of the local horizontal frame with respect to the inertial coordinate\nframe ?lil to also lie in a plane perpendicular to the same Euler axis eb0?b1 [5].\nHence, if either the specific force Aspl or the angular rate of the local horizontal\nframe with respect to the inertial coordinate frame ?lil is not perpendicular to\nthe Euler axis eb0?b1, then the components x2, x3, and x4 must all be 03\u00d71 [5].\nIf it holds, then it is straightforward to check that x5 must also be 03\u00d71, since\nboth Dbp,0 and D\n\nb\np,1 are full rank matrices. In such case, the INS error model\n\nwith GPS and uncalibrated magnetometer aiding is fully observable.\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 247\n\nFinally, the full observability of the INS error model for a strapdown IMU\nwith constant specific force undergoing PWC attitude with GPS/uncalibrated\nmagnetometer aiding is achieved when:\n\n\u2013 The specific force Aspl is not aligned with the angular rate of the local\nhorizontal frame with respect to the inertial coordinate frame ?lil ;\n\n\u2013 The specific forceAspl or the angular rate of the local horizontal frame with\nrespect to the inertial coordinate frame ?lil is not perpendicular to the Euler\naxis in which a single rotation aligns the body coordinate frame in segment\n0 (b0 ) with the body coordinate frame in segment 1 (b1 ) eb0?b1.\n\n6 Simulation and Results\n\nThe five scenarios for validation of foregoing theoretical results are presented as\nfollows. All numerical simulations were obtained with a simulated INS coded in\nMatlab.\n\nThe three first scenarios validated the INS error model observability by co-\nvariance analysis. In these cases, the accelerometers and rate-gyros have been\nconsidered ideal and thus the model noise covariance has been set to zero. The\ninitial EKF covariance and GPS and magnetometer measurement noise covari-\nance matrices are presented, respectively, in eqs. 27, 28, and 29 [5]:\n\nP0 = diag\n(\n10?6 10?6 10?6 10?4 10?4 10?4 10?6 10?6 10?6\n\n10?10 10?10 10?10 10?3 10?3 10?3\n)\n,\n\n(27)\n\nRGPS = diag\n(\n10?10 10?10 10?10\n\n)\n, (28)\n\nRMAG = diag\n(\n10?20 10?20 10?20\n\n)\n, (29)\n\nwhere the units are:\n\n\u2013 (m/s)2 for the velocity-related components;\n\u2013 (rad)2 for the misalignment components;\n\u2013 (m/s2)2 for the accelerometer bias components;\n\u2013 (rad/s)2 for the rate-gyro drift components;\n\u2013 (Gauss)2 for the magnetometer bias components.\n\nFor the sake of simplicity, the local geomagnetic field vector has been assumed\nto point towards north with 230.60 mGauss of intensity, which is the geomagnetic\nfield intensity at the city of Sa?o Jose? dos Campos, Brazil. Additionally, the actual\nmagnetometer bias has been assumed constant as follows\n\n?b = [10 10 10]\nT mGauss . (30)\n\nThe first scenario simulates an IMU mounted on a locally horizontal-stabilized\nplatform in a GPS/Magnetometer-aided INS subjected to the trajectory in Ta-\nble 1. The standard deviations of the state-error estimation error are presented\ncomponent-wise in fig. 1.\n\n\n\n248 R.A.J. Chagas and J. Waldmann\n\nTable 1. IMU trajectory for scenario 01\n\nSpecific forces\n\nStart (s) End (s) N (m/s2) E (m/s2) D (m/s2)\n\n0 20 0 0 -g\n\n20 40 0 0.5 -g\n\n40 60 0.5 0 -g+0.5\n\n60 80 0 0.5 -g+0.5\n\nThe second and third scenarios simulate a position-stationary strapdown IMU\naided by GPS and magnetometer. The IMU has been subjected to piece-wise\nattitude changes in which the Euler angles that rotate the local coordinate frame\ninto alignment with the body coordinate frame (yaw, pitch, and roll rotation\nsequence) are described in the figs. 2a and 2b, respectively. In both cases, the\nangles undergo a 0.5 s of rise time to avoid the discontinuities of an instantaneous\nrate of change. Additionally, the standard deviations of the state-error estimation\nerror are presented component-wise in fig. 3 for the second scenario and in fig. 4\nfor the third scenario.\n\nThe fourth and fifth scenarios consider a more realistic situation. The position\nerror is appended to the EKF state-error and the various simulation parameters\nare presented in Table 2. UAV ground velocity and angular rate are described\nin the Appendix. Magnetometer bias for these both scenarios was simulated\naccording to fig. 2c. In the fourth scenario, eq. 7 was used as the calibrated\nmagnetic pseudo-measurement equation, thus the magnetometer data were fused\nneglecting the magnetometer bias. On the other hand, in the fifth scenario,\nthe pseudo-measurement equation used magnetometer data as in eq. 12 and the\nmagnetometer bias was estimated by the EKF. The estimation errors of the\nposition and velocity error components for the fourth scenario are presented\nin fig. 5, and the estimation errors for each state-error component for the fifth\nscenario are presented in figs. 6 and 7.\n\n6.1 Results Analysis\n\nIn scenario 01 (fig. 1), when an IMU mounted on a stabilized platform is aided\nby GPS and uncalibrated magnetometer, the INS error model achieves full ob-\nservability only in the third segment (t > 40s).\n\nIn scenarios 02 (fig. 3) and 03 (fig. 4), in which a strapdown IMU aided by\nGPS and uncalibrated magnetometer was simulated, it can be seen that the full\nobservability is achieved for scenario 02 at the third segment (t > 40s) and for\nscenario 03 at the second segment (t > 20s). In scenario 02, the Euler axis that\nrotates the body coordinate frame at the first segment to the body coordinate\nframe at the second segment points towards East. Since the IMU is stationary,\nboth the specific force and the angular rate of the local coordinate frame with\nrespect to the inertial coordinate frame lie in the XZ plane of the local coordinate\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 249\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\n(r\nad\n\n)\nStd. Dev. ?\n\nN\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. ?\nE\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. ?\nD\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\n(m\n/s\n\n2 )\n\nStd. Dev. Acc. Bias\n N\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. Acc. Bias\n E\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. Acc. Bias\n D\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\n(r\nad\n\n/s\n)\n\nStd. Dev. Drift\n N\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\nStd. Dev. Drift\n E\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\nStd. Dev. Drift\n D\n\n0 20 40 60 80\n10\n\n-20\n10\n\n-10\n10\n\n0\n\nTime (s)\n\n(G\nau\n\nss\n)\n\nStd. Dev. Mag. Bias\n N\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\nStd. Dev. Mag. Bias\n E\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\nStd. Dev. Mag. Bias\n D\n\nFig. 1. Scenario 01 - Standard deviations for observability analysis with an IMU\nmounted on a stabilized platform\n\nframe. Thus, these two vectors are perpendicular to the Euler axis. Hence, as the\ntheoretical analysis predicted, this rotation does not bring all state components\nto the observable subspace. Thus, another rotation maneuver with a different\nEuler axis is required to attain full observability. On the other hand, the first\nrotation in scenario 03 has its Euler axis aligned with the vertical axis of the\nlocal horizontal frame. Thus, the Euler axis is not simultaneously perpendicular\nto the specific force and to the angular rate of the local coordinate frame with\nrespect to the inertial coordinate frame, which brings all state components to\nthe observable subspace after the first rotation.\n\nThe fourth scenario shows that use of magnetometer data without proper pro-\ncessing yields estimation divergence when the magnetometer bias is relevant. On\nthe other hand, even assuming a constant magnetometer bias, the fifth scenario\nshows that the technique described here successfully estimated a slowly varying\nmagnetometer bias and prevented the estimation divergence seen in scenario 04.\nTherefore, figs. 1 to 7 confirm the theoretical results of the observability analysis.\n\n\n\n250 R.A.J. Chagas and J. Waldmann\n\n0 10 20 30 40 50 60 70 80\n0\n\n10\n20\n30\n40\n50\n60\n70\n80\n90\n\nTime (s)\n\nA\nng\n\nle\n (\n\n\u00b0)\n\nScenario 02 - Euler angles\n\n \n\n \n\n?\n?\n?\n\n(a) Scenario 02 - Euler an-\ngles.\n\n0 10 20 30 40 50 60 70 80\n0\n\n10\n20\n30\n40\n50\n60\n70\n80\n90\n\nTime (s)\n\nA\nng\n\nle\n (\n\n\u00b0)\n\nScenario 03 - Euler angles\n\n \n\n \n\n?\n?\n?\n\n(b) Scenario 03 - Euler an-\ngles.\n\n0 200 400 600 800\n-0.015\n\n-0.01\n\n-0.005\n\n0\n\n0.005\n\n0.01\n\n0.015\n\nTime (s)\n\nB\nia\n\ns \n(G\n\nau\nss\n\n)\n\nMagnetometer bias\n\n \n\n \n\nX\nY\nZ\n\n(c) Scenario 04 and 05 -\nMagnetometer bias.\n\nFig. 2. Euler angles for scenarios 02 and 03 and magnetometer bias for scenario 04\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\n(r\nad\n\n)\n\nStd. Dev. ?\nN\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. ?\nE\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. ?\nD\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\n(m\n/s\n\n2 )\n\nStd. Dev. Acc. Bias\n X\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. Acc. Bias\n Y\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. Acc. Bias\n Z\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\n(r\nad\n\n/s\n)\n\nStd. Dev. Drift\n X\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\nStd. Dev. Drift\n Y\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\nStd. Dev. Drift\n Z\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\n(G\nau\n\nss\n)\n\nStd. Dev. Mag. Bias\n X\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\nStd. Dev. Mag. Bias\n Y\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\nStd. Dev. Mag. Bias\n Z\n\nFig. 3. Scenario 02 - Standard deviations for observability analysis with a strapdown\nIMU subjected to piece-wise constant rotations about Y-Z-X axes\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 251\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n(r\n\nad\n)\n\nStd. Dev. ?\nN\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. ?\nE\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. ?\nD\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\n(m\n/s\n\n2 )\n\nStd. Dev. Acc. Bias\n X\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. Acc. Bias\n Y\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nStd. Dev. Acc. Bias\n Z\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\n(r\nad\n\n/s\n)\n\nStd. Dev. Drift\n X\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\nStd. Dev. Drift\n Y\n\n0 20 40 60 80\n10\n\n-15\n10\n\n-10\n10\n\n-5\n\nStd. Dev. Drift\n Z\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\n(G\nau\n\nss\n)\n\nStd. Dev. Mag. Bias\n X\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\nStd. Dev. Mag. Bias\n Y\n\n0 20 40 60 80\n10\n\n-10\n10\n\n-5\n10\n\n0\n\nTime (s)\n\nStd. Dev. Mag. Bias\n Z\n\nFig. 4. Scenario 03 - Standard deviations for observability analysis with a strapdown\nIMU subjected to piece-wise constant rotations about Z-Y-X axes\n\n0 200 400 600 800\n-1500\n\n-1000\n\n-500\n\n0\n\n500\n\n(m\n)\n\nNorth Position Error\n\n0 200 400 600 800\n-30\n-20\n-10\n\n0\n10\n20\n30\n40\n\nEast Position Error\n\n0 200 400 600 800\n-400\n-300\n-200\n-100\n\n0\n100\n200\n300\n\nVertical Position Error\n\n0 200 400 600 800\n-40\n-30\n-20\n-10\n\n0\n10\n20\n\nTime (s)\n\n(m\n/s\n\n)\n\nNorth Velocity Error\n\n0 200 400 600 800\n-4\n-3\n-2\n-1\n0\n1\n2\n\nTime (s)\n\nEast Velocity Error\n\n0 200 400 600 800\n-15\n-10\n\n-5\n0\n5\n\n10\n\nTime (s)\n\nEast Velocity Error\n\nFig. 5. Scenario 04 - Estimation errors of the position and velocity error components\nwhen the magnetometer bias is neglected\n\n\n\n252 R.A.J. Chagas and J. Waldmann\n\nTable 2. Simulation parameters for scenarios 04 and 05\n\nSensors\n\n? [3 3 3 ]T mg\n?\n\n[\n1000 1000 1000\n\n]T ? /h\nAccelerometers\ncovariance (R?)\n\ndiag\n(\n1 1 1\n\n)\n(mg)2\n\nRate-gyros covari-\nance (R?)\n\ndiag\n(\n500 500 500\n\n)\n(?/h)2\n\nRGPS diag\n(\n81 81 81 0.1 0.1 0.1\n\n)\nSI units2\n\nRmagnetometer diag\n(\n(2 \u00b7 10?5)2 (2 \u00b7 10?5)2 (2 \u00b7 10?5)2 ) Gauss2\n\nGPS and mag-\nnetometer data\nfrequency\n\n1 Hz\n\nINS\n\nInitial position 23?12? S 45?52? W\nInitial altitude 700 m\n\nInitial velocity\n[\n0 0 0\n\n]T\nm/s\n\nInitial alignment TRIAD algorithm\n\nINS solution sam-\npling rate (tins)\n\n0.01 s\n\nKalman filter\n\nFeedback start 95 s\n\nQ, t < 95 s diag( Q?t<95 s 4 \u00b7 10?10 4 \u00b7 10?10 4 \u00b7 10?10 ) SI Units2\nQ, t ? 95 s diag( Q?t?95 s 4 \u00b7 10?10 4 \u00b7 10?10 4 \u00b7 10?10 ) SI Units2\n\nQ?t<95 s 1/50 \u00b7 tins \u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n? \u00b7\n\n[\nR? 03\n03 R?\n\n]\n\u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n?\n\nT\n\nSI Units2\n\nQ?t?95 s 1/150 \u00b7 tins \u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n? \u00b7\n\n[\nR? 03\n03 R?\n\n]\n\u00b7\n\n?\n\n?\n?\n?\n\n03 03\nDbl 03\n03 ?Dbl\n\n06\n\n?\n\n?\n?\n?\n\nT\n\nSI Units2\n\nInitial covariance diag(502 502 502 22 22 22 0.05 0.05 0.05 0.09 0.09 0.09\n0.015 0.015 0.015 1 1 1) SI Units2\n\nInitial estimate 018\u00d71 SI units\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 253\n\n0 200 400 600 800\n-10\n\n-5\n0\n5\n\n10\n\n(m\n)\n\nNorth Position Error\n\n \n\n \nError\n\n0 200 400 600 800\n-10\n\n-5\n0\n5\n\n10\nEast Position Error\n\n \n\n \n\u00b1 1 ?\n\n0 200 400 600 800\n-10\n\n-5\n0\n5\n\n10\nVertical Position Error\n\n0 200 400 600 800\n-1\n\n-0.5\n0\n\n0.5\n1\n\n(m\n/s\n\n)\n\nNorth Velocity Error\n\n \n\n \nError\n\n0 200 400 600 800\n-1\n\n-0.5\n0\n\n0.5\n1\n\nEast Velocity Error\n\n \n\n \n\u00b1 1 ?\n\n0 200 400 600 800\n-1\n\n-0.5\n0\n\n0.5\n1\nVertical Velocity Error\n\n0 200 400 600 800\n-4000\n-2000\n\n0\n2000\n4000\n\nTime (s)\n\n(a\nrc\n\nse\nc)\n\n?\n N\n\n Error\n\n \n\n \nError\n\n0 200 400 600 800\n-4000\n-2000\n\n0\n2000\n4000\n\nTime (s)\n\n?\n E\n\n Error\n\n \n\n \n\u00b1 1 ?\n\n0 200 400 600 800\n-4000\n-2000\n\n0\n2000\n4000\n\nTime (s)\n\n?\n D\n\n Error\n\nFig. 6. Scenario 05 - Estimation errors and EKF standard deviation of the position\nand velocity errors and misalignment components when the magnetometer bias is con-\nsidered\n\n0 200 400 600 800\n-0.05\n\n-0.025\n0\n\n0.025\n0.05\n\n(m\n/s\n\n2 )\n\nBias\n X\n\n Error\n\n \n\n \nError\n\n0 200 400 600 800\n-0.05\n\n-0.025\n0\n\n0.025\n0.05\n\nBias\n Y\n\n Error\n\n \n\n \n\u00b1 1 ?\n\n0 200 400 600 800\n-0.05\n\n-0.025\n0\n\n0.025\n0.05\n\nBias\n Z\n\n Error\n\n0 200 400 600 800\n-20\n-10\n\n0\n10\n20\n\n(\u00b0\n/h\n\n)\n\nDrift\n X\n\n Error\n\n \n\n \nError\n\n0 200 400 600 800\n-20\n-10\n\n0\n10\n20\n\nDrift\n Y\n\n Error\n\n \n\n \n\u00b1 1 ?\n\n0 200 400 600 800\n-20\n-10\n\n0\n10\n20\n\nDrift\n Z\n\n Error\n\n0 200 400 600 800\n-2\n-1\n0\n1\n2\n\nTime (s)\n\n(m\nG\n\nau\nss\n\n)\n\nMag. Bias\n X\n\n Error\n\n \n\n \nError\n\n0 200 400 600 800\n-2\n-1\n0\n1\n2\n\nTime (s)\n\nMag. Bias\n Y\n\n Error\n\n0 200 400 600 800\n-2\n-1\n0\n1\n2\n\nTime (s)\n\nMag. Bias\n Z\n\n Error\n\n \n\n \n\u00b1 3 ?\n\nFig. 7. Scenario 05 - Estimation errors and EKF standard deviation of the accelerom-\neter bias, rate-gyro drift, and magnetometer bias components\n\n\n\n254 R.A.J. Chagas and J. Waldmann\n\n7 Conclusions\n\nThe observability of a linear INS error model has been analyzed with aiding sen-\nsors that involved the use of the GPS solution and an uncalibrated magnetome-\nter when the vehicle trajectory yielded piece-wise constant error dynamics. The\nanalysis has dealt with both a gyro-stabilized platform undergoing piece-wise\nconstant specific force segments and a strapdown IMU that was also subjected\nto piece-wise constant rotation segments.\n\nThe magnetometer errors have been modeled as a random constant bias vec-\ntor appended to the INS error model. Thus, the theoretical analysis provided\nthe sufficient conditions to achieve full observability from IMU maneuvers. All\ntheoretical results have been validated by simulations.\n\nThe simulations revealed that the estimation accuracy was severely degraded\nwhen a relevant magnetometer bias was ignored. On the other hand, the ex-\ntended Kalman filter properly estimated the state-error vector augmented with\na random constant model of magnetometer bias even when the latter showed\nslow dynamics.\n\nAcknowledgments. The authors acknowledge the generous support granted\nby project FINEP/CTA/INPE SIA (Inertial Systems for Aerospace Application,\nin Portuguese), embodied through the logistical support, acquisition of the com-\nputational resources needed for the research reported here, and the scholarship\nawarded to the first author.\n\nAppendix: Theorems\n\nThe theorems on this appendix were already stated in [5], but they are also\npresented here for the sake of completeness.\n\nTheorem 2. Let x ? R3 ?= 03\u00d71 and y ? R3 ?= 03\u00d71. If [x]\u00d7y = 03\u00d71, then x\nand y must be aligned.\n\nProof. The proof is trivial considering that [x]\u00d7y = x\u00d7 y. ??\nTheorem 3. Let x ? R3 ?= 03\u00d71 and y ? R3 ?= 03\u00d71. Thus NULL([y]\u00d7[x]\u00d7n) =\nNULL([x]\u00d7), n ? [1, 2, 3, 4, \u00b7 \u00b7 \u00b7 ], iff x and y are not orthogonal.\nProof. Left to the reader due to lack of space. ??\nTheorem 4. Let x ? R3 ?= 03\u00d71 and y ? R3 ?= 03\u00d71 be two orthogonal vectors,\nthen the set of vectors [x,x \u00d7 y] spans NULL([y]\u00d7[x]\u00d7).\nProof. Left to the reader due to lack of space. ??\nTheorem 5. Let x ? R3 ?= 03\u00d71 and y ? R3 ?= 03\u00d71 be two non-collinear\nvectors. If [y]\u00d7[x]\u00d7\n\nn\nv = 03\u00d71 holds for all n ? [0, 1, 2, \u00b7 \u00b7 \u00b7 , L], L ? 1, then\n\nv = 03\u00d71 is the only possible solution.\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 255\n\nProof. The proof is trivial considering Theorems 2, 3, and 4. ??\nTheorem 6. Let x ? R3 and Dab and Dac be the DCMs from the a coordinate\nframe to, respectively, the b coordinate frame and c coordinate frame. If (Dba ?\nDca)x = 03\u00d71 holds, then x lies in the Euler axis in which a single rotation aligns\nthe b coordinate frame to the c coordinate frame.\n\nProof. The condition can be rewritten as x = DabD\nc\nax = D\n\nc\nbx. Thus x is a vector\n\nthat has the same representation in the b and c coordinate frames, then x must\nlie in the Euler axis in which a single rotation rotates the b coordinate frame\ninto alignment with the c coordinate frame. ??\n\nAppendix: IMU Trajectory and Angular Movement for\nScenarios 04 and 05\n\nThe UAV motion is such that the IMU trajectory is composed of several segments\nwith a distinct, constant specific force during each one. They are described in\nTable 3.\n\nTable 3. IMU trajectory\n\nSpecific forces\n\nStart (s) End (s) N (m/s2) E (m/s2) D (m/s2)\n\n0 30 0 0 -g\n\n30 70 +3 0 -g\n\n70 110 0 +3 -g\n\n110 150 +3 +3 -g\n\n150 190 0 0 -g-3\n\n190 240 0 0 -g\n\n240 280 -3 0 -g\n\n280 320 0 -3 -g\n\n320 360 0 +2 -g\n\n360 500 0 0 -g\n\n500 520 0 +2 -g\n\n520 540 -2 0 -g\n\n540 560 -2 -2 -g\n\n560 600 0 -2 -g\n\n600 660 0 0 -g\n\n660 720 0 2 -g\n\n720 800 -2 0 -g\n\n\n\n256 R.A.J. Chagas and J. Waldmann\n\nThe IMU attitude evolves in terms of the Euler angles that rotate the local\ncoordinate frame into alignment with the body coordinate frame (yaw, pitch,\nand roll rotation sequence) as follows:\n\n? = 0.1 sin\n\n(\n2?\n\nt\n\n300\n\n)\n+ 0.05 sin\n\n(\n2?\n\nt\n\n1.7\n\n)\nrad\n\n? = 0.1 sin\n\n(\n2?\n\nt\n\n300\n\n)\n+ 0.05 sin\n\n(\n2?\n\nt\n\n1.7\n\n)\nrad\n\n? = 0.1 sin\n\n(\n2?\n\nt\n\n300\n\n)\n+ 0.05 sin\n\n(\n2?\n\nt\n\n0.85\n\n)\nrad .\n\n(31)\n\nOne should notice that this trajectory and angular movement are in agreement\nwith the sufficient conditions for full observability according to the theoretical\nresults derived in this paper.\n\nReferences\n\n1. Bar-Itzhack, I.Y., Berman, N.: Control Theoretic Approach to Inertial Navigation\nSystems. Journal of Guidance, Control, and Dynamics 11, 237\u2013247 (1988)\n\n2. Brammer, K., Siffling, G.: Kalman-Bucy Filters. Artech House Publishers, Boston\n(1989)\n\n3. Xsens Technologies B.V., Pantheon 6a, P.O. Box 559, 7500 AN Enschede, The\nNetherlands: MTi-G User Manual and Technical Documentation (2008)\n\n4. Analog Devices, Inc., One Technology Way, P.O. Box 9106, Norwood, MA 02062-\n9106, U.S.A.: ADIS16400/ADIS16405: Triaxial Inertial Sensor with Magnetometer\n(2009)\n\n5. Chagas, R.A.J., Waldmann, J.: Geometric Inference-Based Observability Anal-\nysis Digest of INS Error Model with GPS/Magnetometer/Camera Aiding. In:\n19th Saint Petersburg International Conference on Integrated Navigation Systems.\nCSRI Elektropribor, JSC, Saint Petersburg, Russia (2012)\n\n6. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Observability Analysis of Piece-Wise Con-\nstant Systems - Part II: Application to Inertial Navigation In-Flight Alignment.\nIEEE Transactions on Aerospace and Electronic Systems 28(4), 1068\u20131075 (1992)\n\n7. Lee, J., Park, C.G., Park, H.W.: Multiposition Alignment of Strapdown Inertial\nNavigation System. IEEE Transactions on Aerospace and Electronic Systems 29(4),\n1323\u20131328 (1993)\n\n8. Salychev, O.: Applied Inertial Navigation: Problems and Solutions. BMSTU Press,\nMoscow (2004)\n\n9. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Observability Analysis of Piece-Wise Con-\nstant Systems - Part I: Theory. IEEE Transactions on Aerospace and Electronic\nSystems 28(4), 1056\u20131067 (1992)\n\n10. Pinson, J.C.: Inertial Guidance for Cruise Vehicles. In: Leondes, C.T. (ed.) Guid-\nance and Control of Aerospace Vehicles. McGraw-Hill, New York (1963)\n\n11. Chen, C.-T.: Linear System Theory and Design. CBS College Publishing, New\nYork (1984)\n\n12. Chung, D., Park, C.G., Lee, J.G.: Observability Analysis of Strapdown Inertial\nNavigation System using Lyapunov Transformation. In: 35th IEEE Conference on\nDecision and Control, pp. 23\u201328. IEEE Press, New York (1995)\n\n\n\nObservability Analysis, INS Error Model, GPS/Uncalibrated Magnetometer 257\n\n13. Rhee, I., Abdel-Hafez, M.F., Speyer, J.L.: Observability of an Integrated GPS/INS\nduring Maneuvers. IEEE Transactions on Aerospace and Electronic Systems 40(2),\n526\u2013535 (2004)\n\n14. Hong, S., Lee, M.H., Chun, H.-H., Kwon, S.-H., Speyer, J.L.: Observability of\nErrors States in GPS/INS Integration. IEEE Transactions on Vehicular Technol-\nogy 54(2), 731\u2013743 (2005)\n\n15. Lee, M.K., Hong, S., Lee, M.H., Kwon, S., Chun, H.-H.: Observability Analysis of\nAlignment Erros in GPS/INS. Journal of Mechanical Science and Technology 19(6),\n1253\u20131267 (2005)\n\n16. Tang, Y., Wu, Y., Wu, M., Wu, W., Hu, X., Shen, L.: INS/GPS Integration: Global\nObservability Analysis. IEEE Transactions on Vehicular Technology 58(3), 1129\u2013\n1142 (2009)\n\n\n\nLeveling Loop Design and State Multiplicative\n\nNoise Kalman Filtering\n\nIsaac Yaesh1 and Adrian-Mihail Stoica2\n\n1 IMI Advanced Systems Division, Ramat Hasharon 47100, Israel\niyaesh@imi-israel.com\n\n2 Faculty of Aerospace Engineering, University \u201cPolitehnica\u201d of Bucharest,\nRo-011061, Romania\n\nadrian.stoica@upb.ro\n\nAbstract. A leveling loop for initialization of an inertial navigation sys-\ntem mounted on a moving platform is considered. The leveling loop is\ndesigned by exact modeling of the sensors errors as state-multiplicative\nnoise processes. Such modeling allows application of a State Multiplica-\ntive Kalman Filter and is shown to outperform the standard Kalman\nfilter based on ad-hoc analysis ignoring the state-multiplicative noise.\nThe design considerations include both estimation error covariance min-\nimization and error decay rate. Both design goals are integrated into a\nsingle design, using a trade-off parameter. A couple of numerical exam-\nples illustrate the benefits of the State Multiplicative Kalman Filter with\nand without the decay rate requirement. The first example which deals\nwith a leveling loop focuses on the decay rate parameter effect, whereas\nthe second example deals with a more standard inertial navigation and\ndemonstrates the benefits of incorporating the state-multiplicative noise\neffect, rather than neglecting it.\n\n1 Introduction\n\nStrap Down Inertial Navigation Systems (SDINS) require initialization of posi-\ntion, velocity and attitude. When the platform on which the SDINS is stationary\nthe roll and pitch of the SDINS may be measured directly from the accelerom-\neters readings. When the platform moves and there is another board (e.g. on\na marine application) accurate INS which is already aligned, one may apply\ntransfer alignment. However, if the platform is moving and no transfer align-\nment is possible, one may resort to the leveling loop approach where the roll\nand pitch angles are estimated using the Inertial Measurement Unit (IMU) mea-\nsurements aided with a speed log sensor. By applying the combination of speed\nand acceleration measurements, the platform motions are eliminated, and cor-\nrected accelerations are then applied to produce the roll and pitch estimates.\nThese ideas are not new and have been pursued in [1] and [2] and the references\ntherein. Specifically in [2] it has been argued that if the sensors errors effect is\nmodeled as white noise, the direction cosines turn out to be modeled as a Wiener\nprocess, which diverges in time. Therefore, a finite-energy modeling of the sen-\nsors errors effect has been suggested in [2], which led to an H? filtering approach\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 259\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_14\n\n\n\n260 I. Yaesh and A.-M. Stoica\n\nwhich had also the benefit of designing a filter with a prescribed bandwidth (i.e.\nleading to adequate time response) by using an appropriate dynamic weighting\nof the estimation error.\n\nIn the present paper, the design problem of leveling loops is revisited first\nby re modeling the sensors errors. We show that when the gyros are modeled\nas having white noise, the leveling loop state equations are subject to a state\nmultiplicative noise (e.g. [3]). Under this model, a variety of exact filters can\nbe designed for the leveling loop. One can either design a (discrete-time) state-\nmultiplicative Kalman filter (MKF) first suggested in [4] and [5], design a State-\nMultiplicative Noise (see e.g. [3]) H? Filter (SMH), with or without dynamic\nerror weighting to achieve a prescribed bandwidth, or consider solutions which\nare \u2019in between\u2019 these extreme cases of H2 and H? filters (see e.g. [6]). The\npresent paper is aimed at suggesting exact modeling of the leveling loop design\nproblem, by explicitly taking into account the effect of the state-multiplicative\nnoise. We note that in contrast to [3] which focuses only on the pitch leveling loop\ndesign, both pitch and roll loops are considered here. As described above, the\nsolution of the leveling problem requires the MKF. However, since the estimation\nerror decay rate is of practical importance, the MKF design equations are re-\nderived to comply with such decay rate specifications. It is worth mentioning\nthat state-multiplicative noise appears is other navigation related estimation\nproblems as well, as was recognized in [7] where the special filtering problem\nencountered in the quaternion estimation problems was solved in the presence\nof state-multiplicative noise in the model.\n\nThe paper is organized as follows: the leveling loop design problem is presented\nin Section 2 in continuous-time, and in Section 3 in discrete-time. Section 4\nformulates the general estimation problem which may be used to design the\nleveling loop, and Section 5 presents the solution of this problem. Sections 6 and\n7 include numerical examples illustrating the benefits of incorporating a decay-\nrate requirement in the design and of using MKF, and Section 8 summarizes and\nconcludes the paper.\n\n2 Leveling Loop Problem\n\nThe leveling loop utilizes as in [1] the speed log sensor output v, two of the\nthree IMU acceleration measurements of ax and ay and the three gyros outputs\np, q, r (namely the x, y, z gyros respectively). Taking into account the platform\nmovement, the x and y components of total sensed acceleration in the body fixed\nframe of reference are given by:\n\nax = gsin(?) +Ax\n\nay = ?gcos(?)sin(?) +Ay\nand\n\naz = ?gcos(?)cos(?) +Az\n\n\n\nLeveling Loop Design and State Multiplicative Noise Kalman Filtering 261\n\nwhere Ax, Ay, Az are the platform inertial accelerations along its x, y, z axes re-\nspectively and ax, ay, az are the corresponding sensed accelerations. The speed\nalong the x axis is measured by the log speed sensor, namely\n\nv? = Ax + ?x\n\nwhere ?x is the error in the log speed derivative resulting from the misalignment\nbetween the platform x axis and the speed log measurement axis. Combining\nthese equations, and defining the direction cosines to be:\n\nc1 = ?sin (?) , c2 = cos (?) sin (?) and c3 = cos (?) cos (?)\nwe readily obtain by differentiating the latter equations with respect to time\n(see e.g. also [1]) the following state-space description of the leveling loop design\nproblem:\n\ndc1\ndt = c2r ? c3q\ndc2\ndt = c3p? c1r\ndc3\ndt = c1q ? c2p\ndv\ndt = gc1 + ax + ?x\n\nWe are now in the position of selecting state-vector components. If we include\nthe body rates p, q, r in the state-vector, we need to include the corresponding\ndifferential equations to which they obey in the state equations, and to have\nstate-equation dynamics nonlinearity stemming from the products c2r, c3q, c3p\nand c1r . On the other hand, we can choose (following also [3]) to assume:\n\np = pm + ?p\n\nq = qm + ?q\n\nr = rm + ?r\n\nwhere pm, qm, rm are the measured roll pitch and roll rates respectively, and\n?p, ?q and ?r are the corresponding measurement errors. In such a case, we\nsummarize the resulting state equations as follows:\n\ndc1\ndt = c2rm + c2?r ? c3qm ? c3?q\ndc2\ndt = c3pm + c3?p ? c1rm ? c1?r\ndc3\ndt = c1qm + c1?q ? c2pm ? c2?p\ndv\ndt = gc1 + ax,m + ?x + nx\n\nwhere ax,m and nx are the measured x acceleration and the corresponding mea-\nsurement error. We note now that the measurement errors ?p, ?q, ?r, nx may\ninclude both bias and white noise. We, however, focus on the white noise com-\nponents of the sensors errors, assuming some calibration of the sensors has been\nperformed to remove the bias errors. Obviously, any calibration cannot possibly\nremove the noise errors.\n\nWe define the state-vector for the estimation problem to be:\n\nx = [v, c1, c2, c3]\nT\n. (1)\n\n\n\n262 I. Yaesh and A.-M. Stoica\n\nHaving formed the state vector and equations, the estimation problem definition\nrequires also the following measurement equations:\n\ny1 = v + v1\ny2 = gc2 + ?y + v2\ny3 = gc3 + ?z + v3\n\nwhere v1 is the error in the speed log measurement and where v2 and v3 are the\ny, z acceleration measurement errors respectively. The additional error sources ?y\nand ?z express the residual unmodelled accelerations in the y, z directions. One\ncould add additional velocity measurement in these axes to eliminate these errors\n(e.g. GPS receiver) but we prefer maintaining first the original setup of [1] which\nsuits to marine applications. Another setup which utilizes such measurements\nwill be discussed on Section 7.\n\nWe note again that due to the pre-calibration assumption, the errors ?p, ?q, ?r,\nnx are white noise signals. So are also v1 and v2. However, ?x, ?y,?z are usually\nnon white processes which may be modeled by the output of some low pass\nfilter driven by a white noise process. Namely, ?x, ?y, ?z are Markov processes.\nTo complete the problem definition, one may e.g. assume that ?x, ?y, ?z are first\norder processes with a given or uncertain bandwidth and prescribed covariance.\nAnother option is to assume, in contrast to the underlying physical model, that\n?x, ?y, ?z are white noise processes with covariances that can serve as tuning\nparameters so as to achieve the required filter agility. This approach is in fact\ninspired by the common practice in target tracking literature [8] of modeling\ntarget maneuvers or jerks as white noise (in spite the fact they are not such)\nand treat their covariance matrices as tuning parameters. Since, however, such\na tuning involves a try and error procedure, we will include in the filter design\nalgorithm, filter agility (i.e. estimation error decay-rate) considerations. We next\ndefine:\n\n?1 = ?p, ?2 = ?q, ?3 = ?r\n\nand notice that the filtering problem is a special case of the estimation problem\ndefined in the next section. Before we re-state the estimation problem, we have\none more decision to make. We can either choose to solve the estimation problems\nfor c1, c2, c3 in the three different \u2019decoupled\u2019 channels or to solve it as a fully\ncoupled problem. In either of these cases, we define the useful inputs\n\nu1 := c2rm ? c3qm\nu2 := ax,m\nu3 := c3pm ? c1rm\nu4 := c1qm ? c2pm .\n\nFor the decoupled estimation case we define the exogenous disturbance signal\ncomponents\n\nw1 := c2?r ? c3?q\nw2 := ?x + nx\nw3 := c3?p ? c1?r\nw4 := c1?q ? c2?p\n\n\n\nLeveling Loop Design and State Multiplicative Noise Kalman Filtering 263\n\nwhereas for the coupled estimation problem we just define\n\nw := ?x + nx\n\n2.1 The Uncoupled Estimation\n\nThe three uncoupled estimation problems are defined by:\n\nEstimation of c1 [2]:\n\ndc1\ndt = u1 + w1\ndv\ndt = gc1 + u2 + w2\ny1 = v + v1\n\nEstimation of c2:\n\ndc2\ndt = u3 + w3\ny2 = gc2 + v2\n\nEstimation of c3 :\n\ndc3\ndt = u4 + w4\ny3 = gc3 + v3 .\n\nEach of the three estimation problems is solved as if they are decoupled from\nthe two others. This implementation, however, ignores the fact that the overall\nestimation problem includes the augmented state vector x off all the three \u2019de-\ncoupled\u2019 problems, and, therefore, neglects the effect of the state-multiplicative\nnoise.\n\n2.2 Coupled Estimation\n\nThe alternative approach, explored in the present paper, treats all three problems\ntogether, and does not ignore the multiplicative noise effect. The state-equations\nfor the latter approach are as follows :\n\ndv\ndt = gc1 + u2 + w\ndc1\ndt = c2?3 ? c3?2 + u1\ndc2\ndt = c3?1 ? c1?3 + u3\ndc3\ndt = c1?2 ? c2?1 + u4\n\nwhereas the measurement equations are\n\ny1 = v + w1\ny2 = gc2 + v2\ny3 = gc3 + v3.\n\n\n\n264 I. Yaesh and A.-M. Stoica\n\n3 The Discrete\u2013Time Model\n\nConsider the continuous-time model of Section 2.2. Note that it can be brought\nto the form of the stochastic Ito? type differential equation\n\ndx(t) = Acx(t)dt +\n\nN?\ni=1\n\nHc,ix(t)d?i(t) +Bcd?(t)\n\nwhere ?i(t), ?i(t) and ?i(t) are zero mean real valued Wiener processes, so that\nE{d?2i } = dt, E{d?2i } = dt. The discrete time counter part of this stochastic\ndifferential equation, which describes its evolution at times kh, k = 1, 2, ... for\nsmall enough 0 < h << 1 can be written defining x(k) := x(kh) and using the\nresult of Appendix A.9 in [3] as follows:\n\nx(k + 1) = (I +Ach)x(k) +\n\nN?\ni=1\n\nHc,ix(t)?k\n?\nh+Bcwk\n\n?\nh\n\nwhere wk and ?k are zero mean unit variance sequences. Defining A := I +Ach,\nHi := Hc,i\n\n?\nh, B := Bc\n\n?\nh we obtain the discrete-time state equation of the\n\nnext section. The continuous-time measurement equation\n\ndy(t) = Ccx(t)dt+Dcd?(t)\n\nsimilarly yields the discrete-time model:\n\ny(k) = Cchx(k) +Dcwk/\n?\nh.\n\n4 The General Estimation Problem\n\nConsider the following system with state multiplicative noise:\n\nxk+1 =\n\n(\nA+\n\nN?\ni=1\n\nHi?i,k\n\n)\nxk +Bwk + ?uk (2)\n\nand the measurements\n\nyk = Cxk +Dwk (3)\n\nwhere xk ? Rn is the state vector, wk ? Rm is a white noise sequences of\nunity covariance and ?k ? R1 is another white noise sequence independent of\nwk. The matrix ? = I4 is the driver of the useful signal uk := u(kh) where\nu := col{u2, u1, u3, u4}. The matrices A,B,C,D,H are constant matrices of\nappropriate dimensions defined in the sequel.\n\n\n\nLeveling Loop Design and State Multiplicative Noise Kalman Filtering 265\n\nIn the coupled estimation problem of Section 2 B, these matrices are given by\n\nA =\n\n?\n???\n1 + gh 0 0 0\n\n0 1 0 0\n0 0 1 0\n0 0 0 1\n\n?\n??? , B = ?w\n\n?\n???\n1 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n\n?\n??? , C =\n\n?\n?1 0 0 00 0 g 0\n0 0 0 g\n\n?\n? ,\n\nH1 = ?\n?\nh\n\n?\n???\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 ?1 0\n\n?\n??? , H2 = ?\n\n?\nh\n\n?\n???\n0 0 0 0\n0 0 0 ?1\n0 0 0 0\n0 1 0 0\n\n?\n??? , H3 = ?\n\n?\nh\n\n?\n???\n0 0 0 0\n0 0 1 0\n0 ?1 0 0\n0 0 0 0\n\n?\n???\n\nwhere ? is the gyros random walk value in rad/\n?\nsec. We note that for the sake\n\nof filters development, we will take just nonzero H := H1 and will assume zero\nHi, i > 1. The general result will be later deduced. We also note that\n\nC =\n\n?\n?1 0 0 00 0 g 0\n0 0 0 g\n\n?\n? and D =\n\n?\n?0 ?v 0 00 0 ?a 0\n0 0 0 ?a\n\n?\n?\n\nwhere ?v is the velocity error standard deviation and ?a is the accelerometer\nnoise standard deviation.\n\nWe wish to estimate xk utilizing the measurements set Yk?1 = {yj , j ? k ? 1}\nusing the following filter\n\nx?k+1 = Ax?k +K (yk ? Cx?k)\nwhere K should be designed. We also note that having multiple\nstate-multiplicative uncertainties H1?1,k+H2?2,k + H3?3,k as needed to solve\nthe leveling problem of the previous section, can be made by simple adaptation\nof the solution given in the next section.\nOur aim is to design the filter gain matrix K which will the minimize\n\nPk := E\n{\neke\n\nT\nk\n\n}\nwhere ek is the estimation error\n\nek = xk ? x?k .\nThe following preliminary result which proof may be found in [4] will be used in\nthe sequel regarding the mean square stability and the covariance of ?k which\nsatisfies:\n\n?k+1 = (?+ ??k)?k + ?wk . (4)\n\nLemma 1. The above system is exponentially stable in mean square iff the fol-\nlowing Lyapunov algebraic equation has a positive definite solution\n\n?X?T ?X + ?X?T + ??T = 0 . (5)\nNote that the covariance Xk = E{?k?Tk } satisfies\n\nXk+1 = ?Xk?\nT + ?Xk?\n\nT + ??T . (6)\n\n\n\n266 I. Yaesh and A.-M. Stoica\n\nRemark 1. The relation between the recursion for Xk and the equation for X\nwas explored in [3]. It is shown there, applying monotonicity properties of the\nsolutions of discrete-time Lyapunov equations, that solving (5) while minimizing\nTr{X} leads to to the steady-state value of Xk.\n\n5 Estimation Problem Solution\n\nThe above estimation problem has already been solved in [4] using a completing\nthe square argument for D = 0. A version of this result but in the case D = I is\nderived in [5]. For the sake of completeness we will nevertheless provide a slightly\nmodified of the results of [4] and [5] for the nonzero general D case.\n\nLemma 2. The optimal filter gain K for which the estimation error is mean\nsquare stable and Pk is minimized, is given by:\n\nK =\n(\nAPCT +BDT\n\n) (\nDDT + CPCT\n\n)?1\nwhere\n\nP = APAT +HYHT +BBT ? (APCT +BDT )\n\u00d7(DDT + CPCT )?1 (CPAT +DBT ) (7)\n\nand where\n\nY = AY AT +HYHT +BBT . (8)\n\nProof. The proof is obtained following the lines of [4] and [5], by substituting\n\n? :=\n\n[\nA?KC 0\n\n0 A\n\n]\n, ? :=\n\n[\n0 H\n0 H\n\n]\n, ? :=\n\n[\nB ?KD\n\nB\n\n]\n,\n\npartitioning X according the dimensions of ?k := col{ek, xk}, completing the\nsquare and invoking monotonicity properties of the stabilizing solutions of the\nresulting Riccati equations.\n\nRemark 2. It is easily shown that in the time varying case, the filter is to be\nimplemented as\n\nx?k+1 = Akx?k +Kk (yk ? Cx?k) , x?0 = 0\n\nPk+1 = AkP kA\nT\nk +HYkH\n\nT +BBT\n\n? (AkPkCT +BDT ) (DDT + CPkCT )?1\n\u00d7 (CPkATk +DBT )\n\nand\n\nYk+1 = AkYkA\nT\nk +HYkH\n\nT +BBT\n\nwhere P0 = Y0 = E\n{\nx0x\n\nT\n0\n\n}\n.\n\n\n\nLeveling Loop Design and State Multiplicative Noise Kalman Filtering 267\n\nWe next integrate into the design, agility considerations. To do so, we recon-\nsider the system of (4) and Xk = E{?k?Tk }. We note that the requirement\n\nXk+1 < ?\n2Xk, |?| < 1\n\nfor exponential decay of the estimation error covariance, is satisfied iff\n\n?Xk?\nT + ?Xk?\n\nT + ??T ? ?2Xk < 0 . (9)\nWe obtain the following result.\n\nLemma 3. The optimal filter gain K for which the estimation error is mean\nsquare stable and its covariance decays as |?|k, is given by:\n\nK =\n(\nAPCT +BDT\n\n) (\nDDT + CPCT\n\n)?1\nwhere\n\n?2P = APAT +HYHT +BBT\n\n? (APCT +BDT ) (DDT + CPCT )?1 (CPAT +DBT )\nand where\n\n?2Y = AY AT +HYHT +BBT .\n\nProof. The proof is obtained following the lines of the proof of Lemma 2, by\nreplacing (5) with (9), to get the necessary and sufficient condition for mean\nsquare stability and exponential decay as:\n\n??2P +APAT +HYHT +BBT ? (APCT +BDT )\n\u00d7(DDT + CPCT )?1 (CPAT +DBT ) < 0\n\nand\n??2Y +AY AT +HYHT +BBT < 0\n\nwhere the mean square stability follows from the fact that ??2X + ?X?T +\n?X?T + ??T < 0 implies, when |?| < 1 that ?X + ?X?T + ?X?T + ??T < 0.\n\nNoting that the equations of Lemma 3 that replace the inequalities for P and\nY are then obtained as sufficient conditions, using the monotonicity properties\n(see e.g. [1]) of the stabilizing solutions of the algebraic Riccati equations.\n\nRemark 3. We observe that the design equations of Lemma 2 are obtained from\nthose of Lemma 3, when ? = 1. Naturally, when |?| < 1 the estimation error\ncovariance will be no longer minimal. Therefore, |?| ? 1 can be utilized as a\ndesign parameter to trade off between the decay rate and the error covariance.\n\nRemark 4. We note that the Lyapunov equation for Y is very conservative when\nthe system is marginally stable in the mean square. Note also that when ? = 1,\nY is just E{xkxTk }. To allow filter design also in mean square marginally stable\ncases with ? < 1 we modify (9) to be\n\n?Xk?\nT + ?Xk?\n\nT + ??T ? ?Xk? T < 0. (10)\n\n\n\n268 I. Yaesh and A.-M. Stoica\n\nWe then re-derive the result of Lemma 3 by choosing ? = diag{??I, I} and\nobtain the following design equations\n\nK =\n(\nAPCT +BDT\n\n) (\nDDT + CPCT\n\n)?1\nwhere\n\n?2P = APAT +HYHT +BBT\n\n? (APCT +BDT ) (DDT + CPCT )?1 (CPAT +DBT )\nand where\n\nY = AY AT +HYHT +BBT .\n\n6 Example\u2013Coupled Leveling\n\nWe next consider the problem of coupled leveling which was described in the\nprevious sections. The state equations are given by\n\nxk+1 =\n\n(\nA+\n\nN?\ni=1\n\nHi?i,k\n\n)\nxk +Bwk +Buk\n\nand the measurements are given by\n\nyk = Cxk +Dwk\n\nwhere the matrices A,B,C,D,H are given in Section 4 above,\n\nuk = col{u1(k), u2(k), u3(k), u4(k)}\n\nand where\n\nu1(k) := c2(k)rm(k)? c3(k)qm(k)\nu2(k) := ax,m(k)\nu3(k) := c3(k)pm(k)? c1(k)rm(k)\nu4(k) := c1(k)qm(k)? c2(k)pm(k) .\n\nThe estimator is described by\n\nx?k+1 = Ax?k +K(yk ? Cx?k) +Bu?k\nwhere u?k = col{u?1(k), u?2(k), u?3(k), u?4(k)} and where\n\nu?1(k) := c?2(k)rm(k)? c?3(k)qm(k)\nu?2(k) := ax,m(k)\nu?3(k) := c?3(k)pm(k)? c?1(k)rm(k)\nu?4(k) := c?1(k)qm(k)? c?2(k)pm(k) .\n\n\n\nLeveling Loop Design and State Multiplicative Noise Kalman Filtering 269\n\nRemark 5. We are obliged to replace uk by u?k in the estimator implementation,\nsince ci are not available. Only their estimates c?i are available. Therefore, un-\nfortunately, the estimation problem we have in this coupled problem can not be\npurely modelled by the simple time invariant state-multiplicative noise model,\nunless pm, qm and rm are near zero. This is however, nearly the case when the\nplatform is in steady state (i.e. the angles ? and ? remain constant). To obtain\ntrue description of the coupled estimation problem, a time varying model (but\nstill with multiplicative noise) should be invoked, where the Amatrix depends on\npm, qm and rm. In such a case, one can use the time-varying version of Lemma 2\nabove, where the algebraic equations for P and Y are replaced by recursive equa-\ntions where in the LHS P is replaced by P (k+1) and in the RHS P is replaced\nby P (k), and where similar modifications are applied to the Y equation.\n\nFor the numerical simulations we took h = 0.01sec and ? = 0.001rad/\n?\nsec.\n\nThe sensed acceleration noise was taken as 0.01m/sec2, whereas the velocity\nerror was taken, for design purposes, as a zero mean white noise with standard\ndeviation of 1m/sec. Since the velocity noise is usually much smaller (i.e. the\nmain error is a bias), it was not applied in the simulations, but just affected the\nestimator gains. The estimator gain was designed for ? = 1 and ? = 10?h/? for\ndecay time constant ? = 1sec. We note that with the above system parameters\nthe merit of using MKF rather than KF is not very significant, and we just study\nhere the effect of ? which is seen when comparing in Fig. 1 the convergence of\n?? to ? for the above couple of cases. In Fig. 2 we see the estimation errors and\nin Fig. 3 we see the roll angle ? which apparently, is not affected by ? since the\nestimator is fast and does not need tuning to be faster. The latter fact stems\nfrom the low noise in the sensed accelerations measurements. The next example\nfocuses on ? = 1 and explores the benefits of using MKF rather than KF in a\nclosely related leveling problem.\n\n7 Example\u2013Leveling by Inertial Navigation\n\nWe next consider a numerical example that demonstrates the advantages of us-\ning the new estimator derived in the present paper, for a simplified navigation\nproblem where a vehicle\u2019s attitude is estimated from its noisy position and ve-\nlocity measurements (e.g. from GPS) utilizing inaccurate inertial sensors. The\nexample is a modified version of the three-axis simplified navigation model of\n[9].\n\nThe three axis model of [9] is given by\n\nx? = ?x ? g(??y), ???y = x?/Re + (?x + ?x)?z ? ?y\ny? = ?y ? g?x, ??x = y?/Re + (?y + ?y)?z + ?z\n\nz? = ?z, ??z = ?z\n\n(11)\n\nwhere x, y, z are the components of the vehicle position error, ?x, ?y, ?z are the\ntilt errors and ?x, ?y, ?z are the angular rates. In [9] it was assumed that the\nconstant bias and drifts of the accelerometers and rate sensors have been com-\npensated via calibration and, therefore, the driving terms ?x, ?y, ?z and ?x, ?y, ?z\n\n\n\n270 I. Yaesh and A.-M. Stoica\n\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\nTime [sec]\n\n?\n\n \n\n \nEstimate MKF (?=0.99)\nTrue\nEstimate MKF (?=1)\n\nFig. 1. True Pitch angle and its estimates and the effect of ?\n\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\nTime [sec]\n\n? \n? \n\ner\nro\n\nr\n\n \n\n \nEstimate MKF (?=0.99)\nEstimate MKF (?=1)\n\nFig. 2. Pitch angle estimation error and the effect of ?\n\n0 0.5 1 1.5 2 2.5 3 3.5 4 4.5 5\n18\n\n18.2\n\n18.4\n\n18.6\n\n18.8\n\n19\n\n19.2\n\n19.4\n\n19.6\n\n19.8\n\n20\n\nTime [sec]\n\n?\n\n \n\n \nEstimate MKF  (?=0.99)\nTrue\nEstimate MKF  (?=1)\n\nFig. 3. True Roll angle and its estimates and the effect of ?\n\n\n\nLeveling Loop Design and State Multiplicative Noise Kalman Filtering 271\n\n0 500 1000 1500\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n? x\n s\n\ntd\n. d\n\nev\nia\n\ntio\nn\n\n0 500 1000 1500\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n? y\n\n s\ntd\n\n. d\nev\n\nia\ntio\n\nn\n\n0 500 1000 1500\n0\n\n0.5\n\n1\n\n1.5\n\n? z\n s\n\ntd\n. d\n\nev\nia\n\ntio\nn\n\nFig. 4. Kalman Filter - 50 Monte-Carlo Runs\n\n0 500 1000 1500\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n? x\n s\n\ntd\n. d\n\nev\nia\n\ntio\nn\n\n0 500 1000 1500\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n? y\n s\n\ntd\n. d\n\nev\nia\n\ntio\nn\n\n0 500 1000 1500\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n? z\n s\n\ntd\n. d\n\nev\nia\n\ntio\nn\n\nFig. 5. State-Multiplicative Kalman Filter - 50 Monte-Carlo Runs\n\nare white noise processes. In our case, we assume low cost noisy measurement\ndevices for the angular rates (e.g. by differentiation of angles computed from\nmagnetometers) and we have, therefore,added the noise terms ?x to ?x and ?y to\n\n?y. Defining the state\u2013vector to be x =\n[\nx x? ??y y y? ?x z x? ?z\n\n]T\nand the mea-\n\nsurements to be y =\n[\nx y z x? y? z?\n\n]T\nand considering the discrete-time version of\n\nthe above system with a sampling time of h = 0.1sec we obtain the system of\nform (2), (3) where\n\n\n\n272 I. Yaesh and A.-M. Stoica\n\nA ? I + h\n\n?\n?????????????\n\n0 1 0 0 0 0 0 0 0\n0 0 ?g 0 0 0 0 0 0\n0 1/Re 0 0 0 0 0 0 ?x\n0 0 0 0 1 0 0 0 0\n0 0 0 0 0 ?g 0 0 0\n0 0 0 0 1/Re 0 0 0 ?y\n0 0 0 0 0 0 0 1 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n\n?\n?????????????\n\n, B?k =\n\n?\n?????????????\n\n0 0 0 0 0 0\n1 0 0 0 0 0\n0 0 0 0 ??d 0\n0 0 0 0 0 0\n0 1 0 0 0 0\n0 0 0 ?d 0 0\n0 0 0 0 0 0\n0 0 1 0 0 0\n0 0 0 0 0 ?d\n\n?\n?????????????\n\n?\n???????\n\n?x\n?y\n?z\n?x\n?y\n?z\n\n?\n???????\n,\n\nuk ? 0.\n\nWe also define the terms with state\u2013dependent noise:\n\nH1xk?x =\n\n?\n?02\u00d78 02\u00d7101\u00d78 ?d\n06\u00d78 06\u00d71\n\n?\n?xk?x, H2xk?y =\n\n?\n?05\u00d78 05\u00d7101\u00d78 ?d\n03\u00d78 03\u00d71\n\n?\n?xk?y\n\nThe covariance of the measurement noise is taken as\n\nDDT = diag{100, 100, 100, 0.01, 0.01, 0.01}.\n\nWe took ?d = 0.0483 rad/\n?\nsec. Although this level of random walk is very\n\nhigh and beyond commonly encountered practical values, it may represent cases\nwhere angular rates are obtained with very cheap and noisy components or under\nsevere environmental conditions.\n\nThe performances of two estimators have been compared. One is the KF which\nignores the state-multiplicative noise and is derived by solving the discrete-time\nrecursive Riccati equation obtained from Lemma 2 above by nulling H and Y\nand by replacing P in the left-hand-side of (7) by P (k+1) and by replacing Y in\nthe left-hand-side of (8) by Y (k+1). All values in the right-hand-sides of (7) and\n(8) correspond to time index k. Similarly, the new filter of the present paper,\nwhich we refer to as the state-multiplicative Kalman Filter (MKF) is obtained\nby taking the above non-zero value for H . The vehicle maneuvers are assumed to\nbehave according ?x = ?y = ?z = 0.5sin(0.5kh). The results of 50 Monte-Carlo\nsimulation runs depicting the standard deviations of the tilt errors ?x, ?y, ?z for\nthe KF and MKF are are given in Fig. 4-5 respectively. The solid (blue) lines are\nthe actual ensemble based standard deviations whereas the dashed (red) lines are\nthe standard deviations predicted by the filter - namely\n\n?\nP3,3,\n\n?\nP6,6,\n\n?\nP9,9.\n\nClearly the prediction by the MKF is considerably more accurate and tighter.\nMoreover, the standard deviations of the tilt errors are smaller with the MKF,\nwhere the benefit of using MKF over using KF is best observed in the estimation\nof ?z where the errors are smaller by a factor of 2 with the MKF with respect to\nthe KF. Note also that with both filters, the errors in ?z are larger than those in\n?x and ?y due to the weaker observability in ?z due to lack of the direct relation\nbetween ?z and the measured velocities that exists, in contrast, between x? and\n?y and y? and ?x.\n\n\n\nLeveling Loop Design and State Multiplicative Noise Kalman Filtering 273\n\n8 Conclusions\n\nDesign considerations for a three axis leveling loop have been presented. The\napparent effect of state-multiplicative noise which couple the three channels can\nbe either ignored from, or kept in the filter design equations. The latter case,\nhas motivated development of a new version of the Kalman filter which takes\ninto account the state-multiplicative noise and complies with a decay rate re-\nquirement for the filtering errors. The performance of the new filter has been\ndemonstrated in a couple of examples where one is of leveling loop design and\nthe other of leveling using standard inertial navigation. In these examples, the\nsuperiority of the new filter, with respect to the Kalman filter, in the aspects of\ndecay rate and response to the state-multiplicative noise has been illustrated.\n\nReferences\n\n1. Krogman, U.K.: Design Aspects, Performance Analysis and Test Results of a Strap-\ndown Single Gyro Attitude and Heading Reference. In: Navigation Symposium,\nStutgart (1984)\n\n2. Yaesh, I., Priel, B.: Design of Leveling Loop for Marine Navigation System. IEEE\nTransactions on Aerospace and Electronic Systems 29, 599\u2013604 (1993)\n\n3. Gershon, E., Shaked, U., Yaesh, I.: H? Control and Estimation of State-\nMultiplicative Linear Systems. LNCIS, vol. 318. Springer, Heidelberg (2005)\n\n4. Stoica, A.-M., Yaesh, I.: Kalman Type Filtering for Discrete-Time Stochastic Sys-\ntems with State-Dependent Noise. In: Proceedings of the MTNS 2008 (2008)\n\n5. Stoica, A.\u2013M., Dragan, V., Yaesh, I.: Kalman-type filtering for stochastic systems\nwith state dependent noise and Markovian jumping. In: IFAC-SYSID, Saint-Malo,\nFrance, July 6-8 (2009)\n\n6. Rotstein, H., Sznaier, M.: An Exact Solution to General Four Block Discrete-\nTime Mixed H2/H? problems via COnvex Optimization. IEEE Transactions on\nAutomatic Control 43, 1475\u20131481 (1998)\n\n7. Choukroun, D., Weiss, H., Bar-Itzhak, I., Oshman, Y.: Quaternion estimation from\nvector observations using matrix Kalman filter. In: Itzhack, Y. (ed.) Bar-Itzhack\nMemorial Symposium on Estimation, Navigation, and Spacecraft Control (October\n2012)\n\n8. Bar-Shalom, Y., Li, X.-R., Kirubarajan, T.: Estimation with Applications to Track-\ning and Navigation. John Wiley and Sons (2001)\n\n9. Bar-Shalom, Y., Li, X.-R., Kirubarajan, T.: Estimation with Applications to Track-\ning and Navigation. John Wiley and Sons (2001)\n\n10. Stoorvogel, A.A., Saberi, A.: The Discrete Algebraic Riccati Equation and Linear\nMatrix Inequality. Linear Algebra and its Applications 274, 317\u2013365 (1998)\n\n\n\nA Novel Imaging Measurement Model for Vision\n\nand Inertial Navigation Fusion with Extended\nKalman Filtering\n\nLeandro Ribeiro Lustosa and Jacques Waldmann\n\nInstituto Tecnolo?gico de Aerona?utica, Sa?o Jose? dos Campos, Brazil\n{lustosa,jacques}@ita.br\n\nAbstract. It is well-known that stand-alone inertial navigation systems\n(INS) have their errors diverging with time. The traditional approach for\nsolving such incovenience is to resort to position and velocity aiding such\nas global navigation satellite systems (GNSS) signals. However, misalign-\nment errors in such fusion architecture are not observable in the absence\nof maneuvers. This investigation develops a novel sighting device (SD)\nmodel for vision-aided inertial navigation for use in psi-angle error based\nextended Kalman filtering by means of observations of a priori mapped\nlandmarks. Additionally, the psi-angle error model is revisited and an\nextended Kalman filter datasheet-based tuning is explained. Results are\nobtained by computer simulation, where an unmanned aerial vehicle flies\na known trajectory with inertial sensor measurements corrupted by a\nrandom constant model. Position and velocity errors, misalignment, ac-\ncelerometer bias, rate-gyro drift and GNSS clock errors with respect to\nground-truth are estimated by means of INS/GNSS/SD fusion and tested\nfor statistical consistency.\n\nKeywords: inertial navigation, vision, Kalman filter, unmanned aerial\nvehicles.\n\n1 Introduction\n\nAdvances in microelectromechanical inertial sensors (MEMs) made low-cost in-\nertial navigation systems (INS) commercially available. On the other hand, their\nerrors quickly diverge with time and set an upper bound on the duration of au-\ntonomous operations and thus such systems become improper for use in low-cost\nunmanned aerial vehicle (UAV) missions. The traditional approach for solving\nsuch inconvenience is to resort to a global navigation satellite system (GNSS)\nreceiver as position and velocity aiding device. Hence, INS/GNSS fusion yields\nbounded navigation errors. However, misalignment errors in such fusion archi-\ntecture are not observable in the absence of maneuvers [1,2]. In the light of such\nrestriction, the present study develops a novel model for INS/GNSS and sighting\ndevice (SD) integration for use in outdoor navigation with known landmarks. In\ngeneral, outdoor navigation in structured environments requires some sort of\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 275\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_15\n\n\n\n276 L.R. Lustosa and J. Waldmann\n\nroad-following. Herein, a priori mapped landmarks are imaged by a camera and\ntracked in the image plane to aid the INS.\n\nAn initial study on the matter was conducted in [3], which developed two\ndistinct strategies for INS/SD fusion by means of psi-angle error model [4] based\nextended Kalman filtering (EKF). One of them is the inspiration for this paper\nand explores a relationship between the INS errors and the position of a landmark\nin the field of view relative to the line of sight (LOS) of the SD, after the latter\nis aimed at the assumed position of the landmark. The shortcoming of such\nprocedure is the restriction to have the camera maintaining LOS pointing to the\nlandmark. Such restriction has been recently overcome by means of resorting to\na generalized SD model in which the difference between measured and estimated\npositions of the tracked landmark in the plane of image are correlated with INS\nerrors [5].\n\nHowever, the psi-angle error framework has received only a modicum of at-\ntention in INS/SD integration [6] since [3]. The present investigation revisits\nsuch scheme, which has proven sucessful for INS/GNSS fusion [7], by means of\ndeveloping an INS/SD fusion formulation within the psi-angle error based EKF\nframework.\n\nInitially, the INS psi-angle error model is revisited, and a datasheet-based\nnominal EKF tuning is explored alongside. Ultimately, an INS/GNSS/SD EKF-\nbased fusion strategy is proposed for the estimation of navigation and sensors\nerrors, and evaluated by means of Monte Carlo simulation and statistical con-\nsistency tests [8].\n\n2 Reference Frames and Earth Model\n\nReference frames and the Earth model are here briefly discussed. The WGS-84\nellipsoid has been used due to its accuracy and simplicity [9]. The local reference\nframes at the true and computed positions differ [4], and are respectively denoted\nby T = {t?1, t?2, t?3} and C = {c?1, c?2, c?3} (see figure 1).\n\nAdditionally, equally important frames are I, E, B and P , respectively, in-\nertial, Earth-fixed, vehicle body and platform coordinate systems. The latter\nis the local reference frame computed by the inertial navigation system at its\nestimated position and affected by attitude estimation errors [4].\n\n3 Mathematical Notation\n\nThe chosen notation [10] is illustrated by table 1.\nFurthermore, the decomposition of a vector v ? R3 into its components in a\n\nR coordinate system is denoted by means of the right subscript position, e.g.\n\nvR =\n(\nvr1 vr2 vr3\n\n)T\n. (1)\n\n\n\nA Novel Imaging Measurement Model 277\n\nFig. 1. Illustration of true (P) and computed (C) positions; and platform (P), computed\n(C) and true (T) reference frames\n\n4 Kalman Filter Formulation\n\nFor the purpose of EKF-based INS/GNSS/SD fusion, the INS psi-angle error,\nGNSS receiver and camera linear models are outlined, i.e., linear state and co-\nvariance propagation and update are formulated.\n\n4.1 INS Psi-Angle Error Model Revisited\n\nConsider strapdown accelerometers and rate-gyros measurements corrupted, re-\nspectively, by unknown constant bias ? and drift ?, modelled as random normal\nvariables with ?? and ?? standard deviations. Additionally, additive zero-mean\nwhite additive noise ?accel and ?gyro are considered with ?accel and ?gyro stan-\ndard deviations. The measured specific force Asp,m is given [4] by a rotation of\nAsp by the misalignment vector ? (see figure 1) from C to P reference frame,\nand biased by ? according to\n\nAsp,m = ?+Asp ?? \u00d7Asp + ?accel (2)\n\nwhereas [4]\n\nAsp =\nii\n\nR ?g(R) ?? \u00d7 (? \u00d7R) (3)\nand\n\nAsp,m =\nii\n\nR?INS ?g(R?INS)?? \u00d7 (? \u00d7 R?INS) (4)\n\n\n\n278 L.R. Lustosa and J. Waldmann\n\nTable 1. Kinematics Notation\n\nNotation Meaning\n\npX/Y Position of point X w.r.t. point Y\nR INS position with respect to Earth centre\n\nR?INS INS-computed position with respect to Earth centre\ne\n\nR= v Terrestrial velocity\ne\n\nR?INS= v?INS INS-computed terrestrial velocity\nss\n\nR Acceleration w.r.t. S reference frame\n?xy Angular velocity of X coordinate\n\nframe w.r.t. Y frame\nAsp Specific force\ng(\u00b7) Earth gravity at designated point\nDAB Direction cosine matrix: rotates from A\n\ncoordinate frame into alignment with B frame\n\nwhere ?, g(R), g(R?INS), ?, R, R?INS denote, respectively, the misalignment\nrotation vector from the computed to the platform reference frame, Earth grav-\nity at the true and computed positions, Earth angular velocity, and true and\ncomputed positions with respect to the Earth centre.\n\nIf ?p and ?v are defined as INS computed errors in position and velocity, i.e.,\n\n{\n?p = R?INS ?R\n?v = v?INS ? v\n\n(5)\n\nthen equations 2, 3 and 4 imply\n\n??? \u00d7Asp + ?accel =\nii\n\n?p ? [g(\nii\n\nR?INS)? g(R)]? ?? ?\n?g\n\n?? \u00d7 (? \u00d7 ?p) (6)\n\nwhich can be rewritten as\n\n??? \u00d7Asp + ?accel =\n(\n\nie\n\n?p +?\u00d7\ni\n\n?p\n\n)\n? ?g ?? \u00d7 (? \u00d7 ?p) =\n\n=\ni\n\n?v +?\u00d7\ni\n\n?p ??g ?? \u00d7 (? \u00d7 ?p) =\nc\n\n?v +?ci \u00d7 ?v +? \u00d7 ?v ? ?g . (7)\nUltimately,\n\nc\n\n?v= ?g ? (2? + ?ce)\u00d7 ?v +Asp \u00d7? +?+ ?accel . (8)\nOn the other hand, the derivative of ?p with respect to frame C yields\n\nc\n\n?p=\ne\n\n?p ??ce \u00d7 ?p = ?v ? ?ce \u00d7 ?p . (9)\n\n\n\nA Novel Imaging Measurement Model 279\n\nAdditionally, it can be shown that [4]\n\n? = ?\ni\n\n? ??gyro (10)\nhence\n\nc\n\n?=\ni\n\n? ??ci \u00d7? = ??? (? + ?ce)\u00d7? ? ?gyro . (11)\nFinally, according to [4], assuming ?B and ?B are random constants, repre-\n\nsenting vector equations 8, 9 and 11 in the C coordinate frame, and then em-\nploying the DBP estimated by the INS, the psi-angle-based INS error dynamics\nmodel is formulated as\n\n?p?C = ?vC ? [?ceC \u00d7]?pC (12)\n\n?v?C = ?gC ? [(2?C + ?ceC )\u00d7]?vC + [DBPAsp,m,B\u00d7]?C +DBP?B +DBP?accel,B\n(13)\n\n??C = ?[(?C + ?ceC )\u00d7]?C ?DBP ?B ?DBP?gyro,B (14)\n\n??B = 03\u00d71 (15)\n\n??B = 03\u00d71 (16)\n\nwhere the notation [?R\u00d7] means\n\n[?R\u00d7] =\n?\n? 0 ??r3 ?r2?r3 0 ??r1\n??r2 ?r1 0\n\n?\n? (17)\n\nand ?gC is approximated by [11]\n\n?gC =\ngeR\n\n2\ne\n\n(Re + hc)3\n\n?\n??1?1\n\n2\n\n?\n? (18)\n\nwith ge and Re denoting, respectively, the gravity and the radius of the Earth\nas computed with the WGS-84 Earth model, at the geographic location of the\nINS sensors, according to [11]\n\nRe = R0(1? esin2?c) (19)\nand\n\nge = (1 + 0.0053sin\n2?c)g0 (20)\n\nwhere R0, e, g0 and ?c denote, respectively, the Earth equatorial radius, eccen-\ntricity and equatorial gravity, and the INS-computed latitude. The Earth model\nparameters are found in [9].\n\n\n\n280 L.R. Lustosa and J. Waldmann\n\nIn the light of the foregoing development, it is convenient to define the EKF\nstate vector as\n\nxEKF =\n(\n?pTC ?v\n\nT\nC ?\n\nT\nC ?TB ?TB c?t\n\n)T\n(21)\n\nwhere c?t denotes the random constant GNSS clock error model with ?c?t stan-\ndard deviation, whose compensation is fundamental in INS/GNSS integration\n[11].\n\nThe zero-order hold (ZOH) discretization of equations 12, 13, 14, 15 and 16\nyields the error-state transition matrix Fk and process noise covariance Qk for\nthe EKF. In practice, the discretization which yields Qk is [12]\n\nQk = Gk\n\n[\n?2accelI3\u00d73 03\u00d73\n\n03\u00d73 ?2gyroI3\u00d73\n\n]\n?tGTk (22)\n\nwhere\n\nGk =\n\n?\n???\n03\u00d73 03\u00d73\nDBP 03\u00d73\n03\u00d73 ?DBP\n07\u00d73 07\u00d73\n\n?\n??? (23)\n\nand ?t denotes the discretization sample time. Finally, EKF tuning is addressed\nwith inertial sensors\u2019 datasheet specifications.\n\n4.2 GNSS Tightly Coupled Integration\n\nGNSS integration equations are listed in the following without further expla-\nnations due to the broad extension of available literature on the matter [7].\nIntegration is performed in a tightly coupled architecture involving pseudorange\nand deltarange measurements. For each satellite Si, pseudorange and deltarange\ninnovations are incorporated by means of equations 24 and 25, where u?i denotes\nthe estimated line-of-sight (LOS) unit vector from the user\u2019s receiver antenna\nto satellite Si. Pseudorange and deltarange measurements are corrupted by ad-\nditive Gaussian noise ?Si,p ? N(0, ?p) and ?Si,v?N(0, ?v). The antenna lever\narm has been considered as exactly compensated. Furthermore, GNSS clock er-\nror dynamics is modelled according to equation 26. In practice, a more complex\nmodel that accounts for clock drift should be implemented [7]. However, for the\nsake of simplicity, the present work implements a simpler model and focuses on\ncamera integration.\n\npSi/P ? pSi/C = u?i \u00b7 ?p+ c?t+ ?Si,p (24)\n\ne\np\nSi/P ? ep\n\nSi/C\n\n= u?i \u00b7 ?v + ?Si,v (25)\n\nd\n\ndt\nc?t = 0 . (26)\n\n\n\nA Novel Imaging Measurement Model 281\n\n4.3 Sighting Device\n\nAs previously stated, the basic idea of the proposed INS/SD fusion architecture\nis based upon tracking mapped landmarks Li ? L, i = 1..Nl, each one with a\npriori known LLA coordinates (latitude, longitude, altitude). For each Li, its\nposition with respect to the camera V , pLi/V , (see figure 2) is described in the\nV coordinate frame as [5]\n\np\nLi/V\nV = D\n\nB\nV [D\n\nT\nBD\n\nE\nT (p\n\nLi\nE ? pPE)? pV/PB ] . (27)\n\nFig. 2. Perspective projection geometry in the plane of image. Adapted from [5].\n\nThe camera V is assumed installed next to the inertial sensors\u2019 position P\nand has its axes aligned according to figure 3, thus\n\np\nLi/V\nV = D\n\nB\nV D\n\nT\nBD\n\nE\nT (p\n\nLi\nE ? pPE) . (28)\n\nHence the adimensional normalized measurement1 zLi = (wi, hi) provided by\nthe camera is given by\n\nzLi = ?\np\nLi/V\nV[\n\n1 0 0\n] \u00b7 pLi/VV\n\n+ ?cam (29)\n\nwhere ?cam ? M(R)2\u00d71 is white gaussian noise with standard deviation ?cam,\nand ? is defined by\n\n? =\n\n[\n0 1 0\n0 0 1\n\n]\n. (30)\n\n1 It is assumed, without loss of generality, camera focal length f = 1.\n\n\n\n282 L.R. Lustosa and J. Waldmann\n\nFig. 3. Definition of camera coordinate system (top view)\n\n?cam shall be modelled to account for uncertainties in target tracking algo-\nrithms, servomechanism control and misalignment between camera and vehicle\nbody.2 The estimated normalized measurement vector is estimated by means\nof the navigation algorithm [13] computed variables (i.e., position, velocity and\nattitude) by\n\nz?Li = ?\np\nLi/C\nVc[\n\n1 0 0\n] \u00b7 pLi/CVc\n\n(31)\n\nwhere Vc is the computed camera reference frame. Similarly to equation 28,\n\np\nLi/C\nVc\n\nis expressed as\n\np\nLi/C\nVc\n\n= DBcVc D\nC\nBcD\n\nE\nC (p\n\nLi\nE ? pCE) . (32)\n\nThe orientation of the camera V in relation to the vehicle body B is assumed\nknown with great accuracy, thus DVcBc = D\n\nV\nB . In addition, notice that INS atti-\n\ntude estimates are employed and thus follows the approximation DBcC ? DBP . In\nthis scope, equation 32 can be rewritten as\n\np\nLi/C\nVc\n\n= DBV D\nP\nBD\n\nE\nC (p\n\nLi\nE ? pCE) . (33)\n\nNotice that all terms in the right-hand side of equation 33 are available from\nINS navigation algorithm and z?Li can be readily computed. For use in the EKF,\nthe difference rLi = zLi?z?Li , and how it relates to navigation errors, is explored\nin the following.\n\nIt has been assumed that rLi is function solely of ?p and ?, disregarding\n\nelectrooptical distortions in the sighting device. Hence, the Jacobian J =\n?rLi\n?x\n\nis in the sparse form\n\nJ = ?\n[\n?z?Li\n??pC\n\n02\u00d73\n?z?Li\n??C\n\n02\u00d77\n]\n\n. (34)\n\n2 Servomechanism control and misalignment between camera and vehicle body errors\nusually cannot be accurately modelled as white gaussian noise hence inflation in\nKalman filter noise covariance statistics should take place in practice\n\n\n\nA Novel Imaging Measurement Model 283\n\nFirst,\n?z?Li\n??pC\n\nis calculated noticing that equation 33 can be rewritten as\n\np\nLi/C\nVC\n\n= DBV D\nP\nBD\n\nE\nC (p\n\nLi\nE ? pCE) = DBV (DTBDCT DPC)(DTCDET )(pLiE ? pCE) ?\n\n? DBV DTB(I3\u00d73 + [?C\u00d7])DET (pLiE ? pCE) =\n= DBV D\n\nT\nB(I3\u00d73 + [?C\u00d7])DET (pLiE ? pPE ? ?pE) =\n\n= DBV D\nT\nBD\n\nE\nT (p\n\nLi\nE ? pPE) +DBV DTB[?C\u00d7]DET (pLiE ? pPE) + \u00b7 \u00b7 \u00b7\n\n\u00b7 \u00b7 \u00b7 ?DBV DTB(I3\u00d73 + [?C\u00d7])DET DCE?pC ?\n? pLi/VV +DBV DTB[?C\u00d7]DET (pLiE ? pPE)?DBV DTB(I3\u00d73 + [??C\u00d7])?pC ?\n\n? pLi/VV +DBV DTB[?C\u00d7]DET (pLiE ? pPE)?DBV DTB?pC . (35)\n\nTherefore, considering the partial derivative\n?z?Li\n??pC\n\nat point ?C = 0, above\nequations deliver\n\np\nLi/C\nVC\n\n= p\nLi/V\nV ?DBV DTB?pC . (36)\n\nFor the computation of\n?z?Li\n?pC\n\n, z?Li is rewritten as\n\nz?Li =\n\n(\nz1\nz2\n\n)\n, z1 =\n\nz1,num\nzden\n\n,\nz2,num\nzden\n\n(37)\n\nz1,num =\n[\n0 1 0\n\n]\n(p\n\nLi/V\nV ?DBV DTB?pC) (38)\n\nz2,num =\n[\n0 0 1\n\n]\n(p\n\nLi/V\nV ?DBV DTB?pC) (39)\n\nzden =\n[\n1 0 0\n\n]\n(p\n\nLi/V\nV ?DBV DTB?pC) . (40)\n\nHence,\n\n?z?Li\n??pC\n\n=\n\n[\n?z1\n\n??pc1\n?z1\n\n??pc2\n?z1\n\n??pc3\n?z2\n\n??pc1\n?z2\n\n??pc2\n?z2\n\n??pc3\n\n]\n(41)\n\nwhere\n?zk\n??pcj\n\n=\n1\n\nz2den\n\n(\nzden\n\n?zk,num\n??pcj\n\n? zk,num ?zden\n??pcj\n\n)\n,\n\nk = 1..2\nj = 1..3\n\n(42)\n\nand ?\n??\n\n?z1,num\n??pc1\n\n?z2,num\n??pc1\n?zden\n??pc1\n\n?\n?? = ?\n\n?\n?0 1 00 0 1\n1 0 0\n\n?\n?DBV DTB\n\n?\n?10\n0\n\n?\n? (43)\n\n?\n??\n\n?z1,num\n??pc2\n\n?z2,num\n??pc2\n?zden\n??pc2\n\n?\n?? = ?\n\n?\n?0 1 00 0 1\n1 0 0\n\n?\n?DBV DTB\n\n?\n?01\n0\n\n?\n? (44)\n\n\n\n284 L.R. Lustosa and J. Waldmann\n\n?\n??\n\n?z1,num\n??pc3\n\n?z2,num\n??pc3\n?zden\n??pc3\n\n?\n?? = ?\n\n?\n?0 1 00 0 1\n1 0 0\n\n?\n?DBV DTB\n\n?\n?00\n1\n\n?\n? . (45)\n\nAbove computations deliver the first 2\u00d7 3 block of the Jacobian in equation\n34. Similarly, for the computation of the remaining nonzero block, notice that\nthe ? misalignment affects the camera measurement (for small angles) according\nto\n\np\nLi/C\nVC\n\n= p\nLi/V\nV +D\n\nB\nV D\n\nT\nB[?C\u00d7]DET (pLiE ? pPE) . (46)\n\nBy means of equation 46 and the same strategy used for the computation of\nthe Jacobian with respect to position, follows\n\nz?Li =\n\n(\n?1\n?2\n\n)\n, ?1 =\n\n?1,num\n?den\n\n, ?2 =\n?2,num\n?den\n\n(47)\n\n?1,num =\n[\n0 1 0\n\n]\n(p\n\nLi/V\nV +D\n\nB\nV D\n\nT\nB[?C\u00d7]DET (pLiE ? pPE)) (48)\n\n?2,num =\n[\n0 0 1\n\n]\n(p\n\nLi/V\nV +D\n\nB\nV D\n\nT\nB[?C\u00d7]DET (pLiE ? pPE)) (49)\n\n?den =\n[\n1 0 0\n\n]\n(p\n\nLi/V\nV +D\n\nB\nV D\n\nT\nB[?C\u00d7]DET (pLiE ? pPE)) (50)\n\n?z?Li\n??C\n\n=\n\n[\n??1\n??c1\n\n??1\n??c2\n\n??1\n??c3\n\n??2\n??c1\n\n??2\n??c2\n\n??2\n??c3\n\n]\n(51)\n\n??k\n??cj\n\n=\n1\n\n?2den\n\n(\n?den\n\n??k,num\n??cj\n\n? ?k,num ??den\n??cj\n\n)\n,\n\nk = 1..2\nj = 1..3\n\n(52)\n\n?\n??\n\n??1,num\n??c1\n\n??2,num\n??c1\n??den\n??c1\n\n?\n?? =\n\n?\n?0 1 00 0 1\n1 0 0\n\n?\n?DBV DPB\n\n?\n?0 0 00 0 ?1\n0 1 0\n\n?\n?DECpLi/CE (53)\n\n?\n??\n\n??1,num\n??c2\n\n??2,num\n??c2\n??den\n??c2\n\n?\n?? =\n\n?\n?0 1 00 0 1\n1 0 0\n\n?\n?DBV DPB\n\n?\n? 0 0 10 0 0\n?1 0 0\n\n?\n?DECpLi/CE (54)\n\n?\n??\n\n??1,num\n??c3\n\n??2,num\n??c3\n??den\n??c3\n\n?\n?? =\n\n?\n?0 1 00 0 1\n1 0 0\n\n?\n?DBV DPB\n\n?\n?0 ?1 01 0 0\n0 0 0\n\n?\n?DECpLi/CE . (55)\n\nAbove computations deliver the Jacobian J which quantitatively describes\nhow navigation errors affect camera pointing and is used as sensor model in the\nextended Kalman filter.\n\nrLi = JxEKF + ?cam . (56)\n\n\n\nA Novel Imaging Measurement Model 285\n\n5 Simulation Results\n\nConsider a simulated scenario where an unmanned aerial vehicle (UAV), ini-\ntially positioned at LLA = (0, 0, 100m), equipped with 3-axis sensitive triads of\nstrapdown rate-gyros and accelerometers, a GNSS receiver and a camera flies a\ntrajectory with cruising speed 300m/s toward North and altitude 100m. Sensors\nspecifications are illustrated by table 2.\n\nTable 2. Sensors Imperfections\n\nINS ?accel ?? ?gyro ??\n1mg 25mg 1o/h 25o/h\n\nGNSS/SD ?c?t ?v ?p ?cam\n300m 0.01m/s 15m 0.01\n\nGNSS/SD updates were made at 100ms intervals. After the instant t = 5sec,\nEKF estimated navigation variables and sensors errors are used for in-flight\ncorrection of the INS computed position, velocity and attitude and to calibrate\nthe inertial sensors and GNSS receiver clock error. INS correction is of utmost\nimportance in such systems due to the linearization of the INS error dynamics\nat the computed INS navigation solution.\n\nWith respect to the INS navigation algorithm, [13] and [14] provide cost-\neffective multiple-rate integration methods to compute position and velocity,\nand attitude, respectively. However, such algorithms incur in errors in position,\nvelocity and attitude, commonly known in the literature as scrolling, sculling\n[16] and coning [15]. Scrolling errors added to the position channel process noise\n(see equation 22) precludes EKF optimality, and hence ad-hoc Qk inflation takes\nplace in the following manner\n\nQk ? Qk + 10?1?t\n[\nI3\u00d73 03\u00d713\n013\u00d73 013\u00d713\n\n]\n. (57)\n\nOn top of that, the initial extended Kalman filter covariance matrix P (0|0)\nis also inflated. Such procedure is commonplace in real applications since initial\nerrors are often not known. This practice yields a non-optimal pessimist filter\ninitiation which can be detected by substantial differences in root mean squared\n(RMS) estimation and EKF computed covariance during the KF\u2019s early working\nstages as can be seen later on.\n\nThe impact of the number of available landmarks on INS/GNSS/SD system\nperformance will be evaluated by comparing single-sided and double-sided ob-\nservation scenarios. Only one landmark update is made at each updating step\nof the EKF. In the case of single-sided observations, only landmark L1 is con-\nsidered in the filter update. In the double-sided observation mode, L1 and L2\nare alternately available for the update stage. Landmarks are defined in table 3.\nThe vehicle\u2019s trajectory and the observed landmarks are illustrated in figure 4.\n\n\n\n286 L.R. Lustosa and J. Waldmann\n\nTable 3. Landmarks Position Coordinates\n\nLandmark Latitude (deg) Longitude (deg) Altitude (m)\n\n1 10?2 50\u00d7 10?1 10\n2 50\u00d7 10?1 10?2 10\n\nFig. 4. Vehicle trajectory and landmark positions (top view)\n\nFor the sake of simplicity, constant visibility to 4 GNSS satellites is assumed,\neach with a fixed position with respect to Earth during the simulation time\ninterval. LLA satellite coordinates are given in table 4.\n\nTable 4. GNSS Satellites Position Coordinates\n\nSatellite Latitude (deg) Longitude (deg) Altitude (km)\n\n1 20 ?20 20, 000\n2 40 ?20 20, 000\n3 ?30 40 20, 000\n4 ?25 30 20, 000\n\nThe evaluation of INS/GNSS/SD fusion algorithm performance with single\nor double-sided observations is based on a Monte Carlo simulation [8] with 50\nrealizations and two statistical tests. These are the normalized estimation error\nsquared (NEES) and normalized innovation squared (NIS), which are described\nin [8] and used hereafter with a 5% alarm rate. The number of realizations\n\n\n\nA Novel Imaging Measurement Model 287\n\n0 200 400\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n? \np c\n\n1 \n(m\n\n)\n\nt (s)\n\n \n\n \n\nRMS estimation errors\n\n3 ? EKF computed covariance\n\n0 200 400\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n? \np c\n\n2 \n (\n\nm\n)\n\nt (s)\n0 200 400\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n                                                                                      EKF computed covariances, RMS estimation errors and consistency tests for INS/GNSS/SD single?sided observations\n\n? \np c\n\n3 \n (\n\nm\n)\n\nt (s)\n0 200 400\n\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n? \nv c\n\n1 \n(m\n\n/s\n)\n\nt (s)\n0 200 400\n\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n? \nv c\n\n2 \n (\n\nm\n/s\n\n)\n\nt (s)\n0 200 400\n\n0\n\n0.005\n\n0.01\n\n0.015\n\n0.02\n\n0.025\n\n0.03\n\n? \nv c\n\n3 \n(m\n\n/s\n)\n\nt (s)\n\n0 200 400\n0\n\n2000\n\n4000\n\n6000\n\n8000\n\n10000\n\n? c\n1 \n\n (\nar\n\ncs\nec\n\n)\n\nt (s)\n0 200 400\n\n0\n\n2000\n\n4000\n\n6000\n\n8000\n\n10000\n? c\n\n2 \n (\n\nar\ncs\n\nec\n)\n\nt (s)\n0 200 400\n\n0\n\n2000\n\n4000\n\n6000\n\n8000\n\n10000\n\n? c\n3 \n\n(a\nrc\n\nse\nc)\n\nt (s)\n0 200 400\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n?\nb1\n\n  (\nm\n\ng)\n\nt (s)\n0 200 400\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n?\nb2\n\n  (\nm\n\ng)\n\nt (s)\n0 200 400\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n?\nb3\n\n  (\nm\n\ng)\n\nt (s)\n\n0 200 400\n0\n\n20\n\n40\n\n60\n\n80\n\n? b\n1 \n\n (\nde\n\ng/\nh)\n\nt (s)\n0 200 400\n\n0\n\n20\n\n40\n\n60\n\n80\n\n? b\n2 \n\n (\nde\n\ng/\nh)\n\nt (s)\n0 200 400\n\n0\n\n20\n\n40\n\n60\n\n80\n\n? b\n3 \n\n (\nde\n\ng/\nh)\n\nt (s)\n0 200 400\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nc \n? \n\nt (\nm\n\n)\n\nt (s)\n0 200 400\n\n10\n\n15\n\n20\n\n25\n\nN\nE\n\nE\nS\n\nt (s)\n\n \n\n \n\nNEES\nUpper Limit\n\n0 200 400\n\n6\n\n8\n10\n\n12\n\n14\n16\n\n18\n\nN\nIS\n\nt (s)\n\n \n\n \n\nNIS\nLimits\n\nFig. 5. EKF computed covariances, RMS estimation errors and consistency tests for\nINS/GNSS/SD single-sided observations\n\nis chosen so that a balance between reliable statistical study and practicable\nsimulation time is obtained.\n\n5.1 Single-Sided Observations\n\nFigure 5 displays INS/GNSS/SD fusion with single-sided observations EKF com-\nputed covariances and root mean squared (RMS) estimation errors (denoted by\n?p?, ?v?, ??, ??, ?? and c?t?) for each component of xEKF. Additionally, NEES and\nNIS consistency tests are shown with the corresponding alarm limits.\n\nNotice, in sharp contrast with INS/GNSS fusion, the observability of ?c1 and\n?c3 without resorting to maneuvers. Notwithstanding, ?c2 is weakly observable\ndue to landmark L1 location East of the vehicle. It is, indeed, intuitive to expect\nthe inadequacy of sighting devices to yield attitude information about the LOS\naxis due to the assumed punctual nature of the landmark projection on the\nimage plane. Similarly, ?b1 is weakly observable.\n\n5.2 Double-Sided Observations\n\nFigure 6 displays INS/GNSS/SD fusion with double-sided observations EKF\ncomputed covariances and RMS estimation errors for each component of xEKF.\nAdditionally, NEES and NIS consistency tests are shown with the corresponding\nalarm limits.\n\nThe addition of a geometrically favorable landmark, namely L2, positioned\nNorth of the vehicle, enhances ?c2 and ?b1 observability. Thus, the RMS error\nquickly diminishes and filter tuning is accomplished as far as the NEES and NIS\ntests can evaluate.\n\nFurthermore, this work suggests as future work further investigation on the\nimpact of number and geometry of landmarks on Kalman filter observability,\nwhich can be analytically performed in a fashion similar to [1,2].\n\n\n\n288 L.R. Lustosa and J. Waldmann\n\nAs a last remark, the EKF process noise in the position channel must be\ninflated according to equation 57 to accomplish NEES and NIS statistical con-\nsistency. Otherwise, the resulting small EKF computed covariance and the cor-\nresponding RMS error become statistically inconsistent, which may render the\nestimation process unreliable. The tuning of the position channel noise to reach\nstatistical consistency in the NEES test can be addressed by self-tuning algo-\nrithms [17,18].\n\n0 200 400\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n? \np c\n\n1 \n(m\n\n)\n\nt (s)\n\n \n\n \n\nRMS estimation errors\n\n3 ? EKF computed covariance\n\n0 200 400\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n? \np c\n\n2 \n (\n\nm\n)\n\nt (s)\n0 200 400\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n                                                                                      EKF computed covariances, RMS estimation errors and consistency tests for INS/GNSS/SD double?sided observations\n\n? \np c\n\n3 \n (\n\nm\n)\n\nt (s)\n0 200 400\n\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n? \nv c\n\n1 \n(m\n\n/s\n)\n\nt (s)\n0 200 400\n\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n? \nv c\n\n2 \n (\n\nm\n/s\n\n)\n\nt (s)\n0 200 400\n\n0\n\n0.005\n\n0.01\n\n0.015\n\n0.02\n\n0.025\n\n0.03\n\n? \nv c\n\n3 \n(m\n\n/s\n)\n\nt (s)\n\n0 200 400\n0\n\n2000\n\n4000\n\n6000\n\n8000\n\n10000\n\n? c\n1 \n\n (\nar\n\ncs\nec\n\n)\n\nt (s)\n0 200 400\n\n0\n\n2000\n\n4000\n\n6000\n\n8000\n\n10000\n\n? c\n2 \n\n (\nar\n\ncs\nec\n\n)\n\nt (s)\n0 200 400\n\n0\n\n2000\n\n4000\n\n6000\n\n8000\n\n10000\n\n? c\n3 \n\n(a\nrc\n\nse\nc)\n\nt (s)\n0 200 400\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n?\n\nb1\n  (\n\nm\ng)\n\nt (s)\n0 200 400\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n?\nb2\n\n  (\nm\n\ng)\n\nt (s)\n0 200 400\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n?\nb3\n\n  (\nm\n\ng)\n\nt (s)\n\n0 200 400\n0\n\n20\n\n40\n\n60\n\n80\n\n? b\n1 \n\n (\nde\n\ng/\nh)\n\nt (s)\n0 200 400\n\n0\n\n20\n\n40\n\n60\n\n80\n\n? b\n2 \n\n (\nde\n\ng/\nh)\n\nt (s)\n0 200 400\n\n0\n\n20\n\n40\n\n60\n\n80\n\n? b\n3 \n\n (\nde\n\ng/\nh)\n\nt (s)\n0 200 400\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nc \n? \n\nt (\nm\n\n)\n\nt (s)\n0 200 400\n\n10\n\n15\n\n20\n\n25\n\nN\nE\n\nE\nS\n\nt (s)\n\n \n\n \n\nNEES\nUpper Limit\n\n0 200 400\n\n6\n\n8\n10\n\n12\n\n14\n16\n\n18\n\nN\nIS\n\nt (s)\n\n \n\n \n\nNIS\nLimits\n\nFig. 6. EKF computed covariances, RMS estimation errors and consistency tests for\nINS/GNSS/SD double-sided observations\n\n6 Conclusions\n\nAn imaging measurement model is formulated for use in a psi-angle error based\nextended Kalman filter (EKF) that yields the fusion of global navigation satel-\nlite observables with vision-aided inertial navigation. At first, the EKF uses\ndatasheet-based nominal tuning and the estimation performance is evaluated\nby means of Monte Carlo simulation. The resulting performance motivates the\nuse of a process noise inflation scheme to attain statistical consistency. Position\nand velocity errors, misalignment, accelerometer bias, rate-gyro drift and GNSS\nclock errors with respect to ground-truth are then effectively estimated and pass\nthe tests for statistical consistency. Ultimately, in-flight INS correction and the\ncalibration of inertial sensors and GNSS receiver clock error are successfully\naccomplished.\n\nAcknowledgments. This material is based upon research supported by project\nFINEP/SIA 11382*2, conducted at SIA Lab, Department of Systems and Con-\ntrol, Faculty of Electronics and Computer Engineering, Instituto Tecnolo?gico de\nAerona?utica - ITA, Sa?o Jose? dos Campos - SP, Brazil.\n\n\n\nA Novel Imaging Measurement Model 289\n\nReferences\n\n1. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Observability analysis of piece-wise constant\nsystems with application to inertial navigation. In: Proc. 29th IEEE Conf. Decision\nand Control, pp. 821\u2013826 (1990)\n\n2. Goshen-Meskin, D., Bar-Itzhack, I.Y.: Observability analysis of piece-wise con-\nstant systems. ii. application to inertial navigation in-flight alignment. IEEE Trans.\nAerospace and Electronic Systems 28(4), 1068\u20131075 (1992)\n\n3. Bar-Itzhack, I.Y.: Optimal updating of INS using sighting devices. Journal of Guid-\nance and Control 1(5), 305\u2013313 (1978)\n\n4. Weinred, A., Bar-Itzhack, I.Y.: The psi-angle error equation in strapdown inertial\nnavigation systems. IEEE Trans. Aerospace and Electronic Systems AES-14(3),\n539\u2013542 (1978)\n\n5. Trawny, N., Mourikis, A.I., Roumeliotis, S.I., Johnson, A.E., Montgomery, J.:\nVision-aided inertial navigation for pin-point landing using observations of mapped\nlandmarks. Journal of Field Robotics 24(5), 357\u2013378 (2007)\n\n6. Wang, J., Garratt, M., Lambert, A., Wang, J.J., Han, S., Sinclair, D.: Integration\nof GPS/INS/vision sensors to navigate unmanned aerial vehicles. In: IAPRS&SIS,\nBeijing, China, vol. 37, pp. 963\u2013969 (2008)\n\n7. Farrell, J.A., Barth, M.: The Global Positioning System and Inertial Navigation.\nMcGraw-Hill (1998)\n\n8. Bar-Shalom, Y., Li, X.R., Kirubarajan, T.: Estimation with Applications to Track-\ning and Navigation - Theory Algorithms and Software. Wiley (2001)\n\n9. National Imagery and Mapping Agency, Technical Report TR8350.2 Department\nof Defense World Geodetic System 1984, Its Definitions and Relationships with\nLocal Geodetic Systems, 3rd edn. (2000)\n\n10. Tenenbaum, R.A.: Fundamentals of Applied Dynamics. Springer (2004)\n11. Pitman, G.R. (ed.): Inertial Guidance. Wiley, New York (1962)\n12. Maybeck, P.S.: Stochastic Models, Estimation, and Control. Academic Press (1979)\n13. Bar-Itzhack, I.Y.: Navigation computation in terrestrial strapdown inertial naviga-\n\ntion systems. IEEE Transactions on Aerospace and Electronic Systems (6), 679\u2013689\n(1977)\n\n14. Salychev, O.S.: Applied Inertial Navigation: Problems and Solutions. BMSTU\nPress (2004)\n\n15. Savage, P.G.: Strapdown inertial navigation integration algorithm design, Part 1:\nAttitude algorithms. Journal of Guidance, Control, and Dynamics 21(1), 19\u201328\n(1998)\n\n16. Savage, P.G.: Strapdown inertial navigation integration algorithm design, Part\n2: Velocity and position algorithms. Journal of Guidance, Control, and Dynam-\nics 21(2), 208\u2013221 (1998)\n\n17. Lustosa, L.R., Waldmann, J.: Addressing the statistical consistency of extended\nKalman filtering for aided inertial navigation using adaptive techniques. In: Pro-\nceedings of 19th Saint Petersburg International Conference on Integrated Naviga-\ntion Systems. Saint Petersburg, Russia (May 2012)\n\n18. Lustosa, L.R.: Sintonia automa?tica de filtro de Kalman para navegaca?o inercial\nauxiliada. M.Sc. thesis. Instituto Tecnolo?gico de Aerona?utica - ITA, Brazil (2012)\n\n\n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control, \n\n291 \n\nDOI: 10.1007/978-3-662-44785-7_16 \n \n\nCombined Vision \u2013 Inertial Navigation  \nwith Improved Outlier Robustness \n\nFrancesco Di Corato, Mario Innocenti, and Lorenzo Pollini \n\nUniversity of Pisa, Pisa, 56122, Italy \n{dicorato,minnoce,lpollini}@dsea.unipi.it \n\nAbstract. This paper describes a loosely coupled approach for the improvement \nof state estimation in autonomous inertial navigation, using image-based rela-\ntive motion estimation for augmentation. The augmentation system uses a  \nrecently proposed pose estimation technique based on a Entropy-Like cost func-\ntion, which was proven to be robust to the presence of noise and outliers in the \nvisual features. Experimental evidence of its performance is given and com-\npared to a state-of-the-art algorithm. Vision-inertial integrated navigation is \nachieved using an Indirect Kalman Navigation Filter in the framework of sto-\nchastic cloning, and the proposed robust relative pose estimation technique is \nused to feed a relative position fix to the navigation filter. Simulation and Expe-\nrimental results are presented and compared with the results obtained via the \nclassical RANSAC \u2013 based Direct Linear Transform approach.  \n\n1 Introduction \n\nInertial navigation suffers from drifts due to several factors, in particular inertial sen-\nsor errors. As a matter of fact, usually additional sensors like GPS, air data sensors or \nDoppler speedometers are employed to provide corrections to the navigation system. \nA viable augmentation alternative is the adoption of a vision system; these were em-\nployed in the past for air and land vehicle automation, like car driving [1], obstacle \navoidance ( [2], [3]) or formation flight ([4], [5], [6], [7]). More recently, mainly due \nto the increased computational power available, they are receiving more interest in the \nfield of navigation. The use of vision for navigation is often referred to as visual \nodometry, which core tool is the estimation of the pose of the vision system with re-\nspect to the observed scene. Pose estimation is often the concluding step in a sequence \nof different phases including: detection of significant features in the scene from cam-\nera images, and tracking of them between successive frames. The presence of noise \nand outliers in the acquired data represents the main, in the sense of most challenging, \nissue in solving the Pose Estimation problem. The presence of outliers depends main-\nly on inaccurate key points matching and/or tracking between left and right images, in \nthe stereo vision case, and in successive time instants. The outliers rejection problem \nis often solved via linear/nonlinear minimization techniques ( 2,L L? , etc) ([8])  \n\nor via iterative refinements ([9], [10], [11]), that is via images pre/post-processing \n\n\n\n292 F. Di Corato, M. Innocenti, and L. Pollini \n\ntechniques. Well-known robust approaches in estimating camera pose are RANSAC-\ntype algorithms [9], [10], which have no guarantee of optimality. Almost all outlier \nrejection schemes proposed in the literature act in a pre/post-processing phase, and \nmost of them perform the pose estimation algorithm by minimizing a squared norm of \nthe estimation error. \n\nThe concept of Entropy is not new in the field of estimation; it  has already been \napplied in the last decade in the field of autonomous navigation and robotics, and the \nmost well-known and recent works in such direction can be found in [12], where the \nconcept of alignment via maximization of the Mutual Information is used to perform \nrobust visual servoing and autonomous guidance tasks, in a previously visited scena-\nrio. Recently, integrated vision-inertial navigation systems are appearing in the litera-\nture; they differ mainly in the adopted coupling approach between vision and inertial \nmeasurements. Two large family exists: in the tightly coupled approach [13], [14], \n[15], each collected key point is added to the navigation filter state, its position is \nrefined over time and cooperates to the estimation phase. The second large family is \nthe loosely coupled approach [16] [17], in which the navigation filter is provided with \nposition fixes computed by the vision system, used in this case as an external aiding \nsensor like it happens with GPS or altimeters. In [16] the stochastic cloning approach \nis introduced and used and the relative pose estimation is computed via a classical \nLeast Square minimization. [17] uses a similar approach, but the filter is provided \nwith relative pose measurements, which are obtained via a robust 2-norm minimiza-\ntion, using the Huber cost function [18], in a framework of M-estimation. The work in \n[19] instead, reverses the point of view and uses the stereo vision system as the main \nnavigation sensor, while the processed IMU measurements are used to feed attitude \ncorrections to an EKF.  \n\nIn the present paper, we propose a loosely coupled approach, which uses a Stereo \nVision system and an Inertial Measurement Unit. The relative pose estimations given \nby the vision system are computed using an Entropy-Like cost function, which is ro-\nbust by nature with respect to the outliers in the data. The estimated pose is then used \nto give relative position fixes to the Indirect Kalman Navigation Filter in the frame-\nwork of the stochastic cloning [20] [16]. The main contribution of the paper is show-\ning that the adoption of the proposed robust pose estimation algorithm, which is  \nrobust to a large class of disturbances, provides a net improvement to the navigation \naccuracy and that there is still room for further improvements that better exploit the \npeculiar characteristics of the proposed pose estimation algorithm. \n\nThe paper is organized as follows: Section 2 introduces the adopted notation and \nthe necessary perturbed inertial navigation background; Section 3 describes the appli-\ncation of the proposed Entropy-based cost function to pose estimation and Section 4 \npresents a static comparison of performance with a state-of- the-art pose estimation \nalgorithm. Section 5 describes an error-state Extended Kalman Filter for integration \nof the proposed pose estimation algorithm with inertial navigation; finally Section 6 \npresents experimental results performed with a ground vehicle.  \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 293 \n\n2 Background on Perturbed Inertial Navigation Dynamics \n\nThis paper proposes a vision-inertial integrated navigation system that, as common in \nprecise inertial navigation, makes use of an error-state formulation where navigation \nerrors, rather than navigation states are estimated by the filter[21]. The adopted nota-\ntion is very common in the Inertial Navigation Literature: define ? as generic mo-\ntion/sensitivity variable, then ? indicates the estimated value of the true value , and   indicates the measured value. Thus, the relationship between true values and their \nmeasurements is defined as follows: \n\n \n,?  (1) \n\nwhere  is the actual navigation error, and  is the measurement error. In this work, \nthe measurement errors is modeled as a zero-mean Gaussian process with variance E . With the above notation, it is possible to write a set of perturbed navigation \nequations for attitude (represented here by the direction cosine matrix ), velocity in \nsome navigation frame (we used the NED reference frame for filter implementation \nbut any geodetic frame may be used)  , and position in ECEF frame  as: \n \n\n ? ,,\n (2) \n\nwhere  denotes the skew symmetric matrix whose elements are the components \nof the errors vector , which are functions of the attitude error [21]. Moreover, ,  and ,  are the bias terms in the measurements of gyroscopes and accelero-\nmeters, while  and  are gyroscope and accelerometer noises, represented here as \nzero-mean Gaussian processes with variances  and . \nFinally  and  are velocity and (global) position errors respectively. \n\nGiven the definition above of the navigation error variables, the continuous time e \nerror dynamics of the navigation equations resolved in the navigation frame [21] can \nbe locally approximated by a compact Linear Parameter Varying (LPV) system, as in \nEq. (3) : \n\n  (3) \n\nThe state vector  and the input vector  are defined respectively as (we \ndropped the function of time for compactness of notation): \n\n ? , ,  (4) \n  (5) \n\n\n\n294 F. Di Corato, M. Innocenti, and L. Pollini \n\nThe system matrices  and  in Equation  (3) come from linearization of the \nerror dynamics, thus they change with the selected navigation frame, and locally re-\nlate the evolution of the state  to the current estimation of the state . The reader in-\nterested in the derivation of the above equations can find all the details in [21]. The \nIMU biases dynamics in Eq. 3 were modeled as Brownian motions, with trivial dy-\nnamics: \n\n \n,,  (6) \n\nwhere E  and E . The covariance matrix of the Gaussian \nprocess noise , considering the sensors' noises uncorrelated and having the same \nnoise characteristics, is given by: \n\n E 0 0 00 0 00 0 00 0 0  (7) \nIn order to implement the filter dynamics in real-time, it is necessary to discretize the \ncontinuous time dynamics; in the remainder we will consider a time-discretized ver-\nsion of the above dynamics using the Euler integration method, with sample time . \nThe final discrete-time form of the LPV perturbed system of Equation (3) can then be \nwritten as: \n\n ,  (8) \nwhere: \n\n   (9) \n3 Least-Entropy Like Pose Estimation  \n\nLoosely coupled vision-aided inertial navigation with relative measurements requires \nthe estimation of the camera motion in between successive frames. This section \npresents first a general framework for pose estimation, then cast this problem into the \nframework of Least-Entropy Like (LEL) estimation[22][23], finally presents an anal-\nysis of performance using static images.  \n\n3.1 Stereo Vision and Pose Estimation \n\nIn a stereo vision system, each camera acquires an image, relevant 2-dimensional \nfeatures (points in the image plane) ,  are automatically extracted from the images \n(for the purpose of this work we used the SIFT algorithm), identical features, that is \nimage points belonging to the same object in the observed scene, are searched for in \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 295 \n\nthe right and left images, and finally a cloud of N 3D keypoints ,  is obtained by \ntriangulation of the two corresponding sets (one for the left and one for the right im-\nages) of N 2D features , . Several techniques exist for selection and tracking of \nimage features[5][4]; the feature selection and tracking approach used in the later \nsimulations use stereo vision and the Scale Invariant Feature Transform (SIFT) algo-\nrithm[24][3], that easily allows both to detect, and to match features for successive \ntriangulation. The stereo matching of features between left and right images is per-\nformed by comparing the squared distance between the SIFT descriptors of each fea-\nture in the two images, and selecting the couple with the lowest distance. Only those \nfeatures that are both in the left and right images are considered valid for triangulation \nand tracking. With the same distance-based approach it is possible to track the fea-\ntures that are present in the current and past images; this makes the selection of 3D \nkeypoints P ,  and ,  possible. Figure 1 shows a sample of two images with \nmatched features (red circles), unmatched features (blue circles) and green lines \nrepresenting left-right matches. \n\nTracking of 2D features in two successive time instants  and  produces two \nclouds of 3D keypoints ,  and ,  that are related by a rigid motion relationship. \nThis relationship represents, essentially, the camera motion, in terms of translation \n\n and rotation , between times  and . Thus the following relationship \nholds: \n\n , , ,  (10) \nwhere ,   3  is the transformation mapping the pose of the \ncamera at the time  in the pose of the camera at the time . The notation ,  is not actually a vector or matrix multiplication but denotes the application \nof the translation and rotation transformations ,    to the point , , as de-\nscribed in Eq. (10). Given any 3 dimensional parameterization of the rotation matrix, \nthe transformation matrix in Eq. (10) can be written as: , , \nbeing  the set of all possible motion parameters (angular displacements and transla-\ntions). The Pose Estimation problem then becomes the estimation of the unknown \nmotion parameters vector , given two clouds of N features at the time  and . \nThe solution of the problem can be found by using a minimization approach (either \nlinear or non-linear) over the estimation residuals , : \n , , ,  (11) \nthat is: \n\n arg , ,  (12) \nwhere  is a suitable cost function built upon the pose estimation residual; common \nchoices for   are the 2-norm or the infinity-norm. Due to triangulation and calibra-\ntion errors a number 4 of non-aligned points, tracked along the camera motion, \nare necessary for the problem to have a solution. \n\n\n\n296 F. Di Corato, M. Innocenti, and L. Pollini \n\n3.2 Robust Camera Pose Estimation Using LEL \n\nA very relevant and desirable behavior for any feature detector and tracker is its abili-\nty to recognize features in different images even if they were taken from viewpoints \ndistant one from the other (this means the capability to track features during camera \nmotion for long time). When the camera moves and rotates, the same objects of the \npictured scene produce different images on the camera plane: deformations and warp-\ning happens due to camera motion, change of the point of view, and perspective pro-\njection. Thus a good feature detector and tracker must be able to  recognize exactly \nthe same warped image regions. In order to achieve this property, covariant feature \ndetectors, such as SIFT, are designed to mod-out the effects of transformations be-\nlonging to some group [25]. Such characteristic induces a certain amount of loss of \ninformation in the detected features, thus some ambiguities could raise. Figure 1 \nshows one example where this information loss leads to a mismatch. As a result, the \nwhole set of features collected during the acquisition, matching and tracking phases \nmay be affected by a certain amount of outliers. In the following, a technique which is \nable to give a measure of the degree of dispersion of the data will be used to design a \nrobust pose estimator. \n\n \n\nFig. 1. Example of left-right matched features (red circles connected by the green lines) and an \nexample of a possible matching ambiguity that may happen with the use of co-variant feature \ndetectors (e.g. with SIFT). The matching ambiguity contaminates the data used for pose estima-\ntion with outliers (the large red dots).  \n\nA robust nonlinear alternative to Least-Square estimation was recently proposed \n[22]. The aim of such estimator is to give a representation of the dispersion of the \nresiduals; such function is built on the concept of Gibbs' entropy ([26]): this is the \nreason why such estimator was named Least-Entropy Like (LEL) estimator. Given a \nreference model, which allows to match given inputs with measured outputs, mini-\nmizing the LEL metric of the residuals means to drive the solution toward such direc-\ntions in which such residuals are in one configuration where not all the points have \nthe same probability to belong to the chosen model. In [22], [27] and [23] it is shown \nthat this selectivity turns out to be very important in such cases in which data are \n(heavily) corrupted by noise and outliers. All the implementation considerations  \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 297 \n\nregarding the parameterization and minimization of the Entropy-Like cost function are \ndescribed in detail in the references cited above. \n\nThe robust solution  to the problem of the stereo camera pose estimation be-\ntween two consecutive acquisitions can be solved by minimizing the Normalized En-\ntropy-Like function: \n\n arg ?  (13) \nwhere:  \n\n  ?  (14) \n ,  proj ,  (15) \nNotice that this approach uses the re-projected pose estimation residuals  in 2D, \ninstead of the pose estimation residual in 3D as in the most general form of equation \n(11). The re-projection error  involves image coordinates only that are invariant to \nchanges in depth [28]; this leads to a better estimation accuracy. The adopted pin-hole \ncamera model is represented, as common in computer vision, by the calibration ma-\ntrix  and the perspective projection operator proj : given a generic 3D point  \nwith coordinates , , , the perspective projection operator is defined as: \n    proj\n\n1\n (16) \n\nIn addition, this formulation of the Entropy-Like function employs the  Huber-like \n[18] function   to reduce the risk of incurring into a local minimum during solu-\ntion of Eq. (13).  \n\n \n,  , otherwise  (17) \n\nThe employment of the Huber-like function allows avoiding bad conditionings of the \nEntropy-Like cost function by limiting the upper bound of the denominator in (14),  \nand thus by avoiding the uncontrolled growth of the sum of the residuals norm due to \nnumerical sensitivities. \n\nNumerical solution of the optimization problem in Eq. (13) can be done in several \nways. The simulations and experiments presented in this paper adopted the Leven-\nberg-Marquardt as in [23][28]. As explained in [22] and [27], the Entropy-Like penal-\nty function is nonlinear and multiple local minima may exist. Thus, the minimization \nmust be computed with particular attention to the initial conditions. The scope of this \nwork is such that we expect to have an acceptable local estimate of the motion given \nby inertial mechanization alone performed over a short period of time (between two \n\n\n\n298 F. Di Corato, M. Innocenti, and L. Pollini \n\nsuccessive frames). Therefore, it is possible to initialize the nonlinear estimation with \nthe parameter ,  that can be extracted by the best available estimate of the relative \ntransformation: \n\n ,  (18) \nwhere  is the best (corrected by the filter in the past) estimate of the navigation at \ntime ,  is the navigation prediction at the current time . The arrow symbol \nin Eq. (18) means that the value of ,  is extracted by the transformation . \n3.3 Experimental Results for Pose Estimation Only \n\nLEL has already been shown to perform better than ICP [27], and a Monte Carlo \nAnalysis have shown that it can outperform the RANSAC-based Direct Linear Trans-\nform (DLT) [29], with nonlinear refinement via Bundle Adjustment [30]. The main \nresults are summarized here for completeness. Tests were performed both with simu-\nlated features and various level of image noise, and with real imagery; experiments \nwere performed outdoor with a hand-held fire wire stereo camera system at a resolu-\ntion of 516 388 pixels (a good trade-off between speed of image processing and \naccuracy of features selection and matching). An industrial 1.6 GHz PC with 1 GB \nRAM was used to collect the test videos; then, the video frames were processed off \u2013 \nline, together with the estimation algorithm.  \n\nFigure 2 show a sample image pair from an outdoor experiment; the green dots are \nthe matched SIFT features, the red circles are the re-projected features by using the \nLEL pose estimation result. Figure 3 shows the sorted 2-norm of the re-projection \nresiduals: \n\n , ,  proj , ,  (19) \ncomputed using the motion parameters  estimated by the two methods, LEL and \nrobust DLT. The camera calibration matrix K  was determined experimentally, P ,  \nare the 3D keypoints triangulated in the first position of the camera (at time t ), and p ,  are the image-space coordinates of the corresponding features on the image plane \nof the image acquired in the final position of the camera (at time t ). The measure-\nment unit of points p ,  is pixels. The features re-projections (red circle in Fig. 3) were \ncomputed as:  \n\n ? ,  proj ,  (20) \nIn addition, Figure 3 highlights the mismatching between the measured and estimated \nprojection, once the optimal transformation is applied to an outlier (marked with two \nred \u2018x\u2019 connected via the red line). It should be noticed that the robust DLT algorithm \ntries to exclude the outliers and the noisiest points from the dataset before solving the \npose estimation problem, while LEL performs both pose estimation and outlier rejec-\ntion in one step. Furthermore, it can be stated that LEL (which is run on the whole \ndataset) is able to perform as good as a 2-norm approach like DLT (that needs the \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 299 \n\ndataset to be purged by outliers and ambiguous points) [22]. Although no analytical \nguarantee is available yet, the LEL algorithm performs in general as good as the ro-\nbust DLT algorithm with nonlinear refinement (tuned with our best efforts), which \nwas used as benchmark. In some particular experiments the accuracy of the methods \ncannot be stated in an absolute fashion, since no ground truth was available in order to \ncompare algorithms.  \n\nFinally, a Monte Carlo analysis was performed to assess the robustness of the pro-\nposed algorithm to outliers; LEL provided less re-projection error then DLT for all the \ntested percentage of presence of outliers [28]. \n\n \n\nFig. 2. Outdoor experiment. Image pair with points correspondences and estimation results. The \ngreen dots are the matched SIFT features. The red circles are the re-projected features by using \nthe LEL pose estimation result. \n\n \n\nFig. 3. Outdoor experiment. Sorted re-projection errors. \n\n4 Navigation and Kalman Filtering with Relative Pose \nMeasurements \n\nUsually all aiding sensors produce absolute measures (with respect to a known and \nfixed reference) of the estimated variables (e.g. GPS measures ?  and ) while, in the \ncase of visual odometry, the motion measurements are relative only (i.e. only the \nrelative displacement between two successive images is measured). This section \n\n\n\n300 F. Di Corato, M. Innocenti, and L. Pollini \n\nsummarizes the equations used for the fusion of the relative motion measurements, \ngiven from the pose estimation algorithm, and the inertial data. \n\n4.1 Definition of the Relative Pose Pseudo-Measurement Error \n\nThe camera pose at time can be related, with respect to initial position (at time ),  \nto the inertial mechanization states (position and attitude) as: \n\n ,    (21) \nwhere ,  and  represents the position of the origin of the Naviga-\ntion/Body frame at time  seen from the initial Navigation frame (at time ). For the \npurposes of this paper, we assumed that the relative displacement (latitude and longi-\ntude) between successive images is small enough so that the navigation frame (NED) \ncan be considered orientation-invariant (with respect to the ECEF frame); thus a sim-\nple planar projection can be used (approximation of flat surface), to approximate mo-\ntion in the neighborhood of starting point. Thus the camera position can be obtained \nwith Eq. (22): \n\n  (22) \n\nwhere 0 0  represents the vector of coordinates in the ECEF frame \n(latitude, longitude, altitude) corresponding to the initial position of the vehicle, when \nthe navigation task began its execution (at time ).  is the radius of curvature nor-\nmal to the ellipsoid surface at the point of tangency at the given latitude  [21]. \n\nGiven two pairs of successive images at time  and , the relative motion, \nthat must be computed by the vision system,  is related to the absolute poses at \ntime  and  by: \n\n \n\n ,  ,  (23) \n \n\nIt is now necessary to define a filter output that can be used to construct a measure-\nment residual with the vision system output. Thus, first we construct a navigation \nposition error estimate using the planar projection operator ?  and an attitude error: \n   (24) \nwhere: \n\n \n\n0 0 , ? 0 0, 0 0 0 ,, , , , ,  (25) \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 301 \n\nIt is worth to highlight that ?   is the Jacobian of the function  with respect to \nthe estimated position in ECEF frame around r . Then we can estimate the relative \nnavigation error  between time  and  as: \n\n  (26) \n\nNote that  takes the same form of  except that it is computed with respect to \nthe state at time . ??y  is the estimate of the navigation error of the value T  computed by the inertial mechanization. \n\nSince the vision system actually measures , , it is possible to \ncompute a pseudo-measure of the relative pose error from the measured relative pose g  and its estimation g  reconstructed from the navigation equations, as a func-\ntion of the filter state.  In our case, such error can be written as: \n\n \n\n ,,  (27) \n \n\nWe aim at writing the pseudo-measure of relative pose error  as a function of \nthe filter state. \n\nThe estimated relative translation is: \n\n   (28) \nwhile, the measured relative translation is, by definition, equal to the actual data cor-\nrupted by noise ? : \n \n\n \n\n, , ,  ,  (29) \n \n\nThe pseudo-measure of the relative translation error can be rewritten as a function of \nthe states (current and of the past) of the indirect Kalman Filter only: \n\n \n\n,   ,   ,  \n(30) \n\n \n\n\n\n302 F. Di Corato, M. Innocenti, and L. Pollini \n\nwhere  is the attitude error at the time step . The previous equation was \nobtained by neglecting the cross products between error terms and by using the fact \nthat the attitude error  is defined for the matrix , via Equation (2). Thus, by \ntaking the transpose, we have: \n\n  (31) \n\nIt is not straightforward to obtain in the same manner, i.e. algebraically, the pseudo-\nmeasure of the relative rotation error ,  as a function of the filter state. It is \nconvenient to derive the equation relative to  ,  via partial derivatives instead, \nthat is: \n\n , , , ,  (32) \nThe relative pose measurement error do depend on the motion variables correspond-\ning to the current time (via ?  and ) and to some steps in the past (via ?  and \n\n). Thus it is necessary to augment the filter state with a memory of the past; this \nallow to keep track of the cross covariance of estimated navigation between the two \ntime instants [20][23]. \n\nThe state of the error navigation filter is augmented with one exact copy  of it-\nself when a reference frame is acquired. Suppose a new reference frame arrives at \ntime , the state of the Kalman Filter will be set to: \n\n  (33) \n\nand the state covariance matrix is set to: \n\n   (34) \nbeing . The state copy  is initialized to  and is kept constant \nduring the filter propagation, whereas the state vector  is propagated according to \nerror dynamics.  \n\n4.2 Kalman Filter Prediction Step  \n\nAt each time step inertial mechanization is performed to obtain a new estimate of the \nvehicle state (position, velocity and accelerometer biases): \n\n ,   (35) \nwhere  represents the discretized version of the standard INS mechanization [21], \nwhich maps corrected navigation states on the states at the next time step; variable  \n \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 303 \n\n is the estimation of the vehicle position and velocity (at the time ), before \nthe corrections, if any, produced by Kalman Filter are applied (i.e. the a priori  \nestimate). \n\nAccording to the above discussion, the indirect Kalman Filter prediction step is \nperformed using:  \n\n \n00 0  (36) \n\nThe propagation equation for the covariance matrix is, like for standard Kalman fil-\ntering: \n\n   (37) \nwhere Q is the process noise covariance matrix. After h steps (the time span needed to \nobtain the second image) the covariance matrix becomes: \n\n \n??  (38) \n\nNote the off-diagonal blocks that represent the cross-correlation between the navi-\ngation errors at the time t  and t . \n4.3 Kalman Filter Correction Step  \n\nWhen the vision system provides a new relative pose measurement, the update step is \nperformed, as follows: \n\n \n\n    ?x ?x K | ??y ??y  x x  ?x  P P K H H P  \n  \n\n(39) \n\nwhere  is the measurement noise covariance matrix. Variable  is the estimation \nof the vehicle position and velocity (at the time ), given the corrections produced \nby Kalman Filter (i.e. the a posteriori estimate). \n\n5 Experimental Results \n\nSimulation results with a comparison of the proposed navigation filter with the \nRANSAC-based Direct Linear Transform, with nonlinear refinement via Bundle  \n\n\n\n304 F. Di Corato, M. Innocenti, and L. Pollini \n\nAdjustment demonstrated already the viability of the LEL approach [28] where an  \ninertial grade gyroscope unit was assumed available, and only vision-estimated trans-\nlational motion was used to correct filter state. The simulations were performed by \ngenerating sample (noisy) accelerations and clean angular velocities. The result was a \nsample camera trajectory in 6DOF. The accelerations and angular velocities move-\nments were generated by using a VTOL quad rotor aircraft simulator, and, in order to \nemulate the presence of outliers in the data, random numbers were added to the im-\nage-space 2D coordinates. Both algorithms produced small errors (few centimeters) \nbut the DLT visual odometry solution resulted to be noisier. \n\nThis section presents a sample experiment performed outdoor in the Univ. of Pisa \nFaculty of Engineering parking lot using a wheeled ground vehicle. The cameras and \nhardware used was the same of the static experiments. A snapshot of about 80 \nseconds, where recognition of the actual travelled path was easier, was extracted from \na longer recording. The filter state was initially coarse aligned with gravity to estimate \ninitial roll and pitch angles of the camera-IMU system; then motion began and the \nvehicle was driven along a straight path, followed by a 180 degrees turn, and a suc-\ncessive almost straight path that brought the vehicle back to its initial position. \n\nFigure 4 shows the time histories of the estimated position, velocity and attitude \nangles during the motion of the vehicle. It appears clearly that the navigation filter \nproduces smooth estimation with minimal drift. The expected drift in pure inertial \nnavigation (i.e. without any aiding), according to the characteristics of the low-cost \ninertial sensor suite used, would be of several tens of meters in the same time range.  \nFigure 5 shows the estimated vehicle trajectory in the local geodetic frame. Three \ntrajectories are shown: the output of the integrated vision-inertial system, the result of \nrunning the visual odometry algorithm (integration of relative position fixes only, and \nno inertial data) on the pose estimation results provided by DLT and LEL. By know-\ning the actual path followed by the vehicle, it appears clearly that the best estimate in \nterms of navigation accuracy is given by the integrated visual-inertial navigation: the \npath starts and returns to the same point. The result of visual odometry for both DLT \nand LEL show instead a relevant drift in the position estimation. Nevertheless the \nintegrated navigation filter succeeds in filtering out these drifts.   \n\nFigure 6 shows a comparison of the estimates of relative camera motion performed \nby: DLT algorithm using visual features only, LEL algorithm using visual features \nonly, inertial mechanization. The latter represents the translation and rotation parame-\nters that are actually estimated by the filter just before a new image is acquired, and \nthat are used to initialize the solver for the LEL minimization problem. The figure \nproposes selections of the time range where the differences between the three are \nlarge. It appears that LEL and DLT pose estimation solutions are often very near to \neach other, even if LEL is often less noisy then DLT. In addition, the smoothing ef-\nfect performed by the Kalman filter on the noisy visual measurements is noticeable \nthroughout the entire time range of the experiment.  \n \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 305 \n\n \n\nFig. 4. Time histories of vehicle position (meters from a geodetic fixed reference frame), atti-\ntude and velocity in NED \n\n \n\nFig. 5. Trajectories in the local geodetic frame. Comparison of the output of the vision-inertial \nnavigation filter, with visual odometry (VO) performed integrating only the LEL and DLT \nrelative position fixes.  \n\n\n\n306 F. Di Corato, M. Innocenti, and L. Pollini \n\n \n\nFig. 6. Comparison of Inertial, DLT, and LEL estimates of relative camera motion \n\n6 Conclusions  \n\nA robust loose-coupling approach to vision-augmented inertial navigation, which \nmakes use of a novel cost function, the Entropy of relative squared residuals, was \nproposed. The LEL algorithm was shown with simulations and experimental tests to \nbe robust to the presence of noise and outliers in the visual features. An error-state \nKalman filter was designed and experimental results were presented; these show that \nusing the LEL approach for pose estimation, although may produce noisy estimates, \nallows to reduce the navigation drift, with respect to a robust technique based on 2-\nnorm minimization plus nonlinear refinement via Bundle Adjustment. \n\nAcknowledgments. Support for the work of the first author was provided by North-\nrop Grumman Italia Spa.  \n\nReferences \n\n1. Broggi, A.: Robust Real-Time Lane and Road Detection in Critical Shadow Conditions. \nIn: Proceedings of IEEE International Symposium on Computer Vision, Coral Gables, \nFlorida (1995) \n\n2. Watanabe, Y., Calise, A.J., Johnson, E.N.: Vision-Based Obstacle Avoidance for UAVs. \nIn: AIAA Guidance, Navigation and Control Conference and Exhibit, Hilton Head, South \nCarolina (2007) \n\n3. Pollini, L., Greco, F., Mati, R., Innocenti, M., Tortelli, A.: Stereo Vision Obstacle Detec-\ntion based on Scale Invariant Feature Transform Algorithm. In: AIAA Guidance Naviga-\ntion and Control Conference, Hilton Head, South Carolina (2007) \n\n\n\n Combined Vision \u2013 Inertial Navigation with Improved Outlier Robustness 307 \n\n4. Innocenti, M., Mati, R., Pollini, L.: Vision Algorithms for Formation Flight and Aerial Re-\nfueling with Optimal Marker Labeling. In: AIAA Modeling and Simulation Technologies \nConference, vol. 1, pp. 1\u201315 (2005) \n\n5. Campa, G., Mammarella, M., Napolitano, M.R., Fravolini, M.L., Pollini, L., Stolarik, B.: \nA comparison of Pose Estimation algorithms for Machine Vision based Aerial Refueling \nfor UAVs. In: Mediterranean Control Conference 2006, vol. 1, pp. 1\u20136 (2006) \n\n6. Giulietti, F., Pollini, L., Innocenti, M., Napolitano, M.: Dynamic and control issues of \nformation flight. Aerospace Science and Technology 9(1), 65\u201371 (2005) \n\n7. Pollini, L., Innocenti, M., Giulietti, F.: Formation Flight: a Behavioral Approach. In: \nAIAA Guidance, Navigation and Control Conference, Montreal, Canada, vol. 1 (2001) \n\n8. Hartley, R.I., Kahl, F.: Optimal algorithms in multiview geometry. In: Yagi, Y., Kang, \nS.B., Kweon, I.S., Zha, H. (eds.) ACCV 2007, Part I. LNCS, vol. 4843, pp. 13\u201334. Sprin-\nger, Heidelberg (2007) \n\n9. Milella, A., Siegwart, R.: Stereo-Based Ego-Motion Estimation Using Pixel Tracking and \nIterative Closest Point. In: Proceedings of the Fourth IEEE International Conference on \nComputer Vision Systems (2006) \n\n10. Nist\u00e9r, D.: Preemptive RANSAC for Live Structure and Motion Estimation. In: IEEE In-\nternational Conference on Computer Vision (2003) \n\n11. Olson, C.F., Matthies, L.H., Schoppers, M., Maimone, M.W.: Rover navigation using ste-\nreo ego-motion. Robotics and Autonomous Systems 43, 215\u2013229 (2003) \n\n12. Dame, A., Marchand, E.: Entropy-based visual servoing. In: IEEE International Confe-\nrence on Robotics and Automation, Kobe, Japan (2009) \n\n13. Jones, E., Soatto, S.: Visual-Inertial Navigation, Mapping and Localization: A Scalable \nReal-Time Causal Approach. International Journal of Robotics Research (2010) \n\n14. Mourikis, A., Trawny, N., Roumeliotis, S., Johnson, A., Ansar, A., Matthies, L.: Vision-\nAided Inertial Navigation for Spacecraft Entry, Descent, and Landing. IEEE Transactions \non Robotics 25(2), 264\u2013280 (2009) \n\n15. Bryson, M., Reid, A., Ramos, F., Sukkarieh, S.: Airborne vision-based mapping and classi-\nfication of large farmland environments. J. Field Robot. 27(5), 632\u2013655 (2010) \n\n16. Roumeliotis, S., Johnson, A., Montgomery, J.: Augmenting inertial navigation with image-\nbased motion estimation. In: Proceedings of IEEE International Conference on Robotics \nand Automation (2002) \n\n17. Tardif, J.-P., George, M., Laverne, M., Kelly, A., Stentz, A.: A new approach to vision-\naided inertial navigation. In: 2010 IEEE/RSJ International Conference on Intelligent Ro-\nbots and Systems (IROS) (2010) \n\n18. Huber, P.J., Ronchetti, E.M.: Robust Statistics, 2nd edn. John Wiley & Sons, Inc. (2009) \n19. Konolige, K., Agrawal, M., Sol\u00e0, J.: Large-Scale Visual Odometry for Rough Terrain. Ro-\n\nbotics Research; Springer Tracts in Advanced Robotics 66, 201\u2013212 (2011) \n20. Roumeliotis, S., Burdick, J.: Stochastic Cloning: A generalized framework for processing \n\nrelative state measurements. In: Proceedings of IEEE International Conference on Robot-\nics and Automation (2002) \n\n21. Rogers, R.: Applied Mathematics in Integrated Navigation Systems. American Institute of \nAeronautics and Astronautics (2007) \n\n22. Lowe, D.: Object Recognition from Local Scale-Invariant Features. In: Proc. of the Inter-\nnational Conference on Computer Vision (ICCV) (1999) \n\n23. Le, H., Kendall, D.G.: The Riemannian Structure of Euclidean Shape Spaces: A Novel \nEnvironment for Statistics. The Annals of Statistics 21(3), 1225\u20131271 (1993) \n\n24. Indiveri, G.: An Entropy-Like Estimator for Robust Parameter Identification. Entropy 11, \n560\u2013585 (2009) \n\n\n\n308 F. Di Corato, M. Innocenti, and L. Pollini \n\n25. Chakrabarti, C., De, K.: Boltzmann-Gibbs entropy: axiomatic characterization and applica-\ntion. Journal of Mathematics and Mathematical Sciences 23(4), 243\u2013251 (2000) \n\n26. Di Corato, F., Innocenti, M., Indiveri, G., Pollini, L.: An Entropy-Like Approach to Vision \nBased Autonomous Navigation. In: The Proceedings of the IEEE International Conference \non Robotics and Automation, Shanghai, China (2011) \n\n27. Di Corato, F., Innocenti, M., Pollini, L.: An Entropy-Like Approach to Vision-Aided Iner-\ntial Navigation. In: The Proceedings of the 18th IFAC World Congress, Milan, Italy (2011) \n\n28. Di Corato, F., Innocenti, M., Pollini, L.: Robust Vision-Aided Inertial Navigation via En-\ntropy-Like Relative Pose Estimation. Journal of Gyroscopy and Navigation 4(1), 1\u201313 \n(2013) \n\n29. Nist\u00e9r, D., Naroditsky, O., Bergen, J.: Visual Odometry. In: Proc. IEEE Conference on \nComputer Vision and Pattern Recognition (2004) \n\n30. Hartley, R.I., Zisserman, A.: Multiple View Geometry in Computer Vision. Cambridge \nUniversity Press (2000) \n\n31. Triggs, B., McLauchlan, P.F., Hartley, R.I., Fitzgibbon, A.W.: Bundle adjustment \u2013 A \nmodern synthesis. In: Triggs, B., Zisserman, A., Szeliski, R. (eds.) Vision Algorithms \n1999. LNCS, vol. 1883, pp. 298\u2013372. Springer, Heidelberg (2000) \n\n32. Vedaldi, A., Fulkerson, B.: Vlfeat: an open and portable library of computer vision algo-\nrithms. In: Proceedings of the International Conference on Multimedia (MM 2010) (2010) \n\n33. Lee, T.: Vision Lab Geometry Library. UCLA VisionLab (2008), \nhttp://vision.ucla.edu/vlg/ \n\n34. Innocenti, M., Pollini, L.: A Synthetic Environment for Dynamic Systems Control and \nDistributed Simulation. IEEE Control Systems Magazine 20(2), 49\u201361 (2000) \n\n35. Pollini, L., Greco, F., Mati, R., Innocenti, M.: Stereo Vision Obstacle Detection based on \nScale Invariant Feature Transform Algorithm. In: Guidance Navigation and Control Con-\nference (2007) \n\n36. Hornegger, J., Tomasi, C.: Representation issues in the ML estimation of camera motion. \nIn: The Proceedings of the Seventh IEEE International Conference on Computer Vision \n(1999) \n\n37. Schmidt, J., Niemann, H.: Using Quaternions for Parametrizing 3-D Rotations in Uncon-\nstrained Nonlinear Optimization. In: Proceedings of the Vision Modeling and Visualiza-\ntion Conference (2001) \n\n \n\n\n\nA Covariance Analysis of Vision-Aided Inertial\n\nNavigation: Free Fall Case\n\nAndrew Relyea1 and Meir Pachter2\n\n1 Air Force Research Laboratory, Eglin AFB, 32542, United States of America\nandrew.relyea.1@us.af.mil\n\n2 Air Force Institute of Technology, Wright-Patterson AFB, 45433,\nUnited States of America\nmeir.pachter@afit.edu\n\nAbstract. Inertial Navigation System (INS) aiding using bearing mea-\nsurements taken over time of stationary ground features is investigated.\nA vertical munition drop is considered. The objective is to quantify the\ntemporal development of the uncertainty in the navigation states pro-\nvided by a munition\u2019s INS which is aided by taking bearing measurements\nof ground objects which have been geolocated using ownship position.\nIt is shown that a munition in \u201cfree fall,\u201d by tracking its geolocated\nground features, will have the benefit of a considerable reduction in the\nuncertainty in the INS-provided navigation state.1\n\nKeywords: navigation, estimation, Kalman Filtering.\n\n1 Introduction\n\nVision, that is, optical measurements, has been extensively used in navigation in\nthe past [5], but with the necessity of possibly operating in a Global Positioning\nSystem (GPS) denied environments looming, research in vision aided navigation\nhas surged in popularity. In previous work [6], the location of the tracked ground\nobjects used for Inertial Navigation System (INS) aiding had been assumed\nknown and the degree of observability of the optical measurement arrangement\nwas quantified. In [2] INS aiding using optical tracking of a ground feature while\norbiting the ground feature was experimentally demonstrated. In the same vein,\nin [1], an algorithm called MonoSLAM was developed that used a single camera\nto perform Simultaneous Localization and Mapping (SLAM) which was aided\nby a 3-axes gyroscope. It was determined that positioning error growth was\nstopped once the system returned to a previously tracked feature and therefore\na stationary robot could repeat a task indefinitely without any degradation in\nlocalization accuracy.\n\nThis paper addresses the use of bearing measurements of unknown ground\nobjects to aid the INS of a munition in \u201cfree fall\u201d. In [6] it was shown that\n\n1 The views expressed in this paper are those of the authors and do not reflect the\nofficial policy or position of the United States Air Force, Department of Defense, or\nthe United States Government.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 309\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_17\n\n\n\n310 A. Relyea and M. Pachter\n\ntracking two known ground objects allows for full observability of the navigation\nstate and hence strong INS aiding action. In [8] it was shown that an aircraft,\nflying at a constant altitude and wings-level in the vertical plane, can use its\nown position, in a forward looking way, to geolocate ground objects as they\ncome into view a? la SLAM, and then, while flying towards and overflying these\nobjects, track them to aid its own navigation state estimate. This vision-based\nnavigation method which is akin to \u201cbootstrapping\u201d was mechanized through\nthe use of a linearized Kalman filter (KF), with the states coming from the INS\nserving as the nominal values in the entries of the time-dependent measurement\nmatrix used in the KF. When flying in the vertical plane cross country, this\nINS aiding scheme greatly decreased the uncertainty of the navigation state\u2019s\nestimate. This work was extended in [7] to show that the results of [8] apply in\nthree dimensional space for a wings-level cross country flight. This paper extends\nthat work to apply during free fall.\n\nIn this paper the focus is on INS aiding using SLAM, but not on SLAM per se;\nissues of image processing, to include autonomous, without human assistance,\nfeature detection and feature correspondence, are not addressed. It is assumed\nthat autonomous feature detection and tracking are possible-think of the SIFT\nimage processing algorithm [3] or by the stochastic process set forth in [10]. This\npaper focuses exclusively on gauging the performance of INS during a vertical\ndrop when the munition is using its own position to geolocate stationary ground\nobjects near the target for the purpose of using said features to aid the muni-\ntion\u2019s INS, and thus improve the munition\u2019s guidance and accuracy using passive\nmeans.\n\n2 Development\n\nThe following three dimensional scenario is considered\n\n\u2013 A vertical drop is considered and the munition has an initial velocity vector\nv(0) = 0.\n\n\u2013 The Earth is flat and nonrotating.\n\u2013 The munition\u2019s initial INS alignment is perfect.\n\u2013 The ground objects\u2019 elevations are known (assumed zero).\n\n2.1 Dynamics\n\nThe navigation frame is the \u201cinertial\u201d (Xn, Yn, Zn) frame and the munition\u2019s\nbody axes are (Xb, Yb, Zb). The munition\u2019s position is (x, y, z), and ?, ? and ?\nare the munition\u2019s Euler angles. A strapdown [9] INS arrangement is considered.\nWhen falling towards a non-rotating and flat Earth as shown in Figure 1, the\ndynamics of the INS errors, also known as the error equations, are shown in\nstate space notation as ?x? = A?x+ ??u, where the navigation state\u2019s position,\nvelocity and angles error\n\n?x = [ ?p ?v ?? ]T (1)\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 311\n\nZn\n\nXn\n\nXb\n\nYb\n\nZb\n\nf\n\nYn\n\nA/C pos\n(x, y, z)\n\nGround Feature \nPosition\n\nP = (xp, yp, zp)\n\n(xf, yf) \n\nFig. 1. The munition in 3-D space. The munition\u2019s longitudinal body axis is ?Zb.\n\nand the disturbances are the three acceleromters\u2019 and the three rate gyroscopes\u2019\nbiases\n\n?u = [ ?f\n(b)\nx ?f\n\n(b)\ny ?f\n\n(b)\nz ??\n\n(b)\nx ??\n\n(b)\ny ??\n\n(b)\nz ]\n\nT (2)\n\nConcerning the angular errors vector ??:\n\n?? = ??CnbCbn (3)\nand\n\n?? = ??\u00d7 (4)\nwhere ?? is the skew symmetric matrix formed from the vector ?? according to\nEq. (4).\n\nFor small Euler angles ?, ?, ?, the Directions Cosine Matrix (DCM) is approx-\nimated as:\n\nCnb (?, ?, ?) =\n\n?\n? 1 ?? ?? 1 ??\n?? ? 1\n\n?\n? (5)\n\nand therefore its perturbation\n\n?Cnb =\n\n?\n? 0 ??? ???? 0 ???\n??? ?? 0\n\n?\n? (6)\n\nDuring the vertical drop along the Zn axis, the nominal C\nb\nn = I3. Thus, using\n\nEq. (3) we calculate\n\n?? =\n\n?\n? 0 ?? ?????? 0 ??\n\n?? ??? 0\n\n?\n? (7)\n\n\n\n312 A. Relyea and M. Pachter\n\nand since ?? = ??\u00d7 we recover the errors in the A/C Euler angles\n?? = [??? ??? ??? ]T (8)\n\nHence, the navigation state\u2019s error vector is\n\n?x = [ ?x ?y ?z ?vx ?vy ?vz ??? ??? ??? ]T (9)\nThe INS error state equations are\n\n?x? =\n\n?\n?03\u00d73 I3\u00d73 03\u00d7303\u00d73 03\u00d73 F(n)3\u00d73\n03\u00d73 03\u00d73 03\u00d73\n\n?\n? ?x+\n\n?\n?03\u00d73 03\u00d73Cbn 03\u00d73\n03\u00d73 ?Cbn\n\n?\n? ?u (10)\n\nwhere F(n) = f (n)\u00d7 is the skew symmetric matrix form of the specific force\nvector. The nominal specific force components during a perfect vertical drop\nwill be time varying. Since f = a ? g, where g is the gravity vector sensed by\nthe accelerometer cluster, until the munition reaches terminal velocity all of the\nnominal specific forces are zero because the munition is accelerating at a rate g\nin the vertical direction. Therefore\n\nf (n) =\n\n?\n??\nf\n(n)\nx\n\nf\n(n)\ny\n\nf\n(n)\nz\n\n?\n?? =\n\n?\n?00\n0\n\n?\n? ? 0 ? t < tterm (11)\n\nOnce the munition reaches terminal velocity, at t = tterm, the accelerometers will\n\ndetect nominal specific forces such that f\n(n)\nx = ax, f\n\n(n)\ny = ay, and f\n\n(n)\nz = g where\n\ng is the acceleration of gravity and ax and ay are the acceleration components of\nthe munition along its Xb and Yb axes. Since a purely vertical drop is considered,\nax = ay = 0. Therefore,\n\nf (n) =\n\n?\n??\nf\n(n)\nx\n\nf\n(n)\ny\n\nf\n(n)\nz\n\n?\n?? =\n\n?\n?00\ng\n\n?\n? ? tterm ? t ? T (12)\n\nEqs. (10) - (12) represents the time-varying dynamics of navigation state\u2019s error,\n(?p, ?v, ??), under the assumption that the Earth is flat and non-rotating. The\nmeaning of the angular errors\u2019 vector ??, that is, its relationship to the Euler\nangles\u2019 errors, is determined by the munition\u2019s trajectory, that is, the nominal\nDCM, Cnb.\n\nHaving negative angle error states is unorthodox. In order for the navigation\nstate error to be\n\n?x = [ ?x ?y ?z ?vx ?vy ?vz ?? ?? ?? ]\nT (13)\n\nthe dynamics model from Eq. (10) is modified as follows\n\n?x? =\n\n?\n?03\u00d73 I3\u00d73 03\u00d7303\u00d73 03\u00d73 ?F(n)3\u00d73\n03\u00d73 03\u00d73 03\u00d73\n\n?\n? ?x+\n\n?\n?03\u00d73 03\u00d73Cbn 03\u00d73\n03\u00d73 Cbn\n\n?\n? ?u (14)\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 313\n\nand with perfect INS alignment and initialization\n\nC?nb = 0, 0 ? t ? T\n?x(0) = 0\n\nwhere T is the duration of the flight.\nSince this is a vertical drop and the nominal trajectory is such that the body\n\naxes are aligned with the navigation axes, the time history of the nominal navi-\ngation variables is\nx = 0, y = 0, and\n\nz(t) =\n\n{\nhrel ? g2 t2 ? 0 ? t < tterm\n\nhterm + vterm(tterm ? t) ? tterm ? t ? T\n}\n\n? = ? = ? = 0, where hrel is the release altitude, and hterm and vterm are\nthe altitude and velocity of the munition when the munition reaches terminal\nvelocity. These variables are non-dimensionalized as follows\n\nx ? x\nh\n, y ? y\n\nh\n, z ? z\n\nh\n,\n\nvx ? vx\nv\n, vx ? vx\n\nv\n, vz ? vz\n\nv\n,\n\n?fx ? ?fx\ng\n\n, ?fy ? ?fy\ng\n\n, ?fz ? ?fz\ng\n\n,\n\n??(b)x ? h\n??\n\n(b)\nx\n\nv\n, ??(b)y ? h\n\n??\n(b)\ny\n\nv\n, ??(b)z ? h\n\n??\n(b)\nz\n\nv\n,\n\nt ? t v\nh\n, T ? T v\n\nh\n\nhterm ? hterm\nh\n\nvterm ? vterm\nv\n\n,\n\nwhere h and v are a typical altitude and velocity when flying wings-level, t is\nthe current time, and T = 7 is the nondimensional fall duration.\n\nThe non-dimensional parameters are\n\ng ? hg\nv2\n\nand ax ?\nhax\nv2\n\n, ay ?\nhay\nv2\n\nChoosing the reference altitude and reference velocity\n\nh = 1000[m], v = 100\n[ m\nsec\n\n]\n,\n\nand taking g = 10\n[\n\nm\nsec2\n\n]\n, the non-dimensional parameter\n\ng = 1.\nIt is assumed that the sensor errors consist only of random biases that are\n\nGaussian distributed, and that the biases are constant over time. This allows\nthe state error vector to be augmened with the vector ?u; the augmented state\nvector is\n\n?xa =\n\n?\n? ?x. . .\n?u\n\n?\n?\n15\u00d71\n\n(15)\n\n\n\n314 A. Relyea and M. Pachter\n\nand the dynamics matrix is augmented by the ? matrix, as shown\n\nAa =\n\n[\nA ?\n\n06\u00d79 06\u00d76\n\n]\n15\u00d715\n\n(16)\n\nOne obtains a dynamic system in \u201cfree fall\u201d. When converted to discrete time,\nAa ? Aad = eAa?t, where ?t is the sampling interval. The augmented discrete\ntime state dynamics become\n\n?xa(l + 1) = Aad?xa(l), l = 0, . . . , N ? 1 (17)\nwhere l is the discrete time step counter and the non-dimensional time step\nis ?T = TN := ?T\n\nv\nh . The discrete-time dynamics matrix can be analytically\n\nderived.\nThis dynamics equation applies as long as the ground objects\u2019 positions are\n\nknown. Assuming the ground objects are stationary, but their position is not\nknown, two additional states, the x and y horizontal coordinates of the tracked\nground objects, must be added for each tracked ground object whose position\nwill be estimated on the fly. If the number of unknown ground features being\ntracked is n, then the augmented navigation state is\n\n?xa :=\n\n?\n??????\n\n?xa\n. . .\n?xp1\n...\n\n?ypn\n\n?\n??????\n(15+2n)\u00d71\n\n(18)\n\nand\n\nAad :=\n\n[\nAad 015\u00d72n\n\n02n\u00d715 I2n\u00d72n\n\n]\n(15+2n)\u00d7(15+2n)\n\n(19)\n\nIf, for example, one unknown ground feature is being tracked, then the dimen-\nsion of the augmented navigation state\u2019s error is 17 and if two ground features\nare being tracked during, then the dimension of the navigation state\u2019s error is\n19. On one hand, state augmentation reduces the degree of observability, which\ndecreases the strength of INS aiding action. On the other hand, however, the in-\nclusion of additional features to be tracked increases the number of measurement\nequations, which helps wash out the measurement error.\n\n2.2 Modeling/Calibrating the Free INS\n\nWith the dynamics from Subsection 2.1, the values for ?a and ?g, the uncertainty\nin the bias of the accelerometers and gyroscopes, respectively, are set such that\nduring wings level horizontal flight the munition\u2019s free INS is a 100kmhr class\nnavigation system; note that a non-dimensional hour is 360 units long. Since\nthe dynamics are not forced, that is, there is no process noise since the latter\nhas been relegated to the uncertainty in the initial state by augmenting the\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 315\n\ndynamics, the calibration is performed by using the solution to the Lyapunov\ndifference equation\n\nP(l + 1) = AadP(l)A\nT\nad, 0 ? l ? 360N ? 1 (20)\n\nwith\n\nP(0) =\n\n?\n?09\u00d79 0 00 diag(?2a, ?2a, ?2a) 0\n\n0 0 diag(?2g , ?\n2\ng , ?\n\n2\ng)\n\n?\n?\n15\u00d715\n\n(21)\n\nThe Lyapunov difference equation is linear and therefore there is a linear relation-\nship between the uncertainty in the sensors\u2019 biases and the ensuing uncertainty\nin the munition\u2019s x position:\n\nP1,1(360N) = ??\n2\na + ??\n\n2\ng (22)\n\nwhere the coefficients ? and ? are constants. Therefore, Eq. (20) was solved for\none non-dimensional hour twice to calculate the values of the constants ? and\n?. The first time, ?a was set to 1 and ?g was set to 0. The second time, ?a was\nset to 0 and ?g was set to 1. Then assigning the errors in the accelerometers and\ngyroscopes an equal role/\u201cguilt\u201d in the uncertainty of the munition\u2019s position at\ntime 360, the values for the variances of the sensors\u2019 biases are calculated as\n\n?a =\n1?\n2?\n\n= 1.0912\u00d7 10?3 (23)\n\n?g =\n1?\n2?\n\n= 9.0935\u00d7 10?6 (24)\n\n2.3 Measurement Equation\n\nFrom the geometry in Figure 1 the relationship of the inertial position of the\nmunition to that of the ground object P is\n\n?\n?xy\nz\n\n?\n? =\n\n?\n?xpyp\nzp\n\n?\n?? |RLOS |?\n\nx2f + y\n2\nf + f\n\n2\nCnb\n\n?\n? xfyf\n?f\n\n?\n? (25)\n\nwhere xf and yf are the projections of the ground feature\u2019s respective x and y\ncoordinates onto the focal plane of the camera and f is the camera\u2019s focal length.\nFor the case when the munition falls wings level with its longitudinal axis aligned\nwith the Xn axis, that is to say that the angle of attack is ??2 , the Euler angles\nare small. As such the DCM for relating the body frame to the navigation frame\nis given in Eq. (5). The first two equations in the relationship given by Eq. (25)\nare non-linearly dependent on the third. Now, the third equation yields\n\nzp ? z = |RLOS |?\nx2f + y\n\n2\nf + f\n\n2\n\n[\n0 0 1\n\n]\nCnb\n\n?\n? xfyf\n?f\n\n?\n?\n\n\n\n316 A. Relyea and M. Pachter\n\nand thus\n\n|RLOS |?\nx2f + y\n\n2\nf + f\n\n2\n=\n\nzp ? z\n[\n0 0 1\n\n]\nCnb\n\n?\n? xfyf\n?f\n\n?\n? (26)\n\nSubstituting Eq. (26) into Eq. (25) yields the two measurement equations for\nthe three dimensional case:\n\n[\nx\ny\n\n]\n=\n\n[\nxp\nyp\n\n]\n? zp ? z[\n\n0 0 1\n]\nCnb\n\n?\n? xfyf\n?f\n\n?\n?\n\n[\n1 0 0\n0 1 0\n\n]\nCnb\n\n?\n? xfyf\n?f\n\n?\n?\n\nMultiplying out the matrices yields\n[\nx\ny\n\n]\n=\n\n[\nxp\nyp\n\n]\n? (zp ? z) 1?f ? ?xf + ?yf\n\n[\nxf ? ?yf ? f?\nyf + xf? + f?\n\n]\n\nand nondimensionalizing such that\n\nxf ? xf\nf\n\nyf ? yf\nf\n\nyields [\nx\ny\n\n]\n=\n\n[\nxp\nyp\n\n]\n? (zp ? z) 1?1? ?xf + ?yf\n\n[\nxf ? ?yf ? ?\nyf + xf? + ?\n\n]\n\nWe obtain two separate measurement equations\n\nxp ? x = ?(zp ? z) xf ? ?yf ? ?\n1 + ?xf ? ?yf (27)\n\nyp ? y = ?(zp ? z) yf + xf? + ?\n1 + ?xf ? ?yf (28)\n\nDue to the small angles assumption, the denominator in Eqs. (27) and (28) can\nbe moved up such that\n\nxp ? x ? ?(zp ? z)(xf ? ?yf ? ?)(1 ? ?xf + ?yf ) (29)\nyp ? y ? ?(zp ? z)(yf + xf? + ?)(1 ? ?xf + ?yf ) (30)\n\nSince the munition is using ground objects to aid its INS, it can be assumed,\nwithout loss of generality, that zp = 0. Due to the small values of the angles, when\nthe former fraction is distributed out, the products of the angles are negligible,\nyielding\n\nxp ? x = z[xf ? ?(1 + x2f ) + ?xfyf ? ?yf ] (31)\nyp ? y = z[yf ? ?xfyf + ?(1 + y2f ) + ?xf ] (32)\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 317\n\nNext, perturb the states and the measurements\n\nx = xc ? ?x y = yc ? ?y z = zc ? ?z\n? = ?c ? ?? ? = ?c ? ?? ? = ?c ? ??\n\nxp = xpc ? ?xp yp = ypc ? ?yp\nxf = (xfm??xf ) yf = (yfm??yf )\n\nwhere the subscript c indicates the navigation states components provided by the\nINS and the subcript m indicates measured quantities. Inserting the perturbation\nequations into Eq. (31)(32) yields\n\nxpc?xc + ?x? ?xp = (zc ? ?z)\n(\n(xfm??xf )? (?c ? ??)(1 + (xfm??xf )2)\n\n+ (?c ? ??)(xfm??xf )(yfm??yf )? (?c ? ??)(yfm??yf )\n)\n\nAgain, due to the small error in the measurements, the products of these terms\ncan be neglected.\n\nxpc?xc + ?x? ?xp = (zc ? ?z)\n(\n(xfm??xf )? (?c ? ??)(1 + x2fm ? 2xfm?xf )\n\n+ (?c ? ??)(xfmyfm ? yfm?xf ? xfm?yf)? (?c ? ??)(yfm ? ?yf)\n)\n\n= (zc ? ?z)\n(\nxfm ? ?c(1 + x2fm) + ?cxfmyfm ? ?cyfm + (1 + x2fm)??\n\n? xfmyfm??+ yfm?? + (2?cxfm ? ?cyfm ? 1)?xf + (?c ? ?cxfm)?yf\n)\n\nSimilarly, inserting the perturbations in the second measurement equation, Eq.-\n(32), yields\n\nypc?yc + ?y ? ?yp = (zc ? ?z)\n(\n(yfm??yf )? (?c ? ??)(xfm??xf )(yfm??yf )\n\n+ (?c ? ??)(1 + (yfm??yf )2) + (?c ? ??)(xfm??xf )\n)\n\n= (zc ? ?z)\n(\n(yfm??yf )? (?c ? ??)(xfmyfm ? yfm?xf ? xfm?yf )\n\n+ (?c ? ??)(1 + y2fm ? 2yfm?yf) + (?c ? ??)(xfm??xf )\n)\n\n= (zc ? ?z)\n(\nyfm ? ?cxfmyfm + ?c(1 + y2fm) + ?cxfm + xfmyfm??\n\n? (1 + y2fm)??? xfm?? + (?cyfm ? ?c)?xf + (?cxfm ? 2?cyfm ? 1)?yf\n)\n\n\n\n318 A. Relyea and M. Pachter\n\nMoving all the error terms to the Right Hand Side (RHS) of the equation and\nall the non-error terms to the Left Hand Side (LHS) yields\n\nxpc?xc ? zc(xfm ? ?c(1 + x2fm) + ?cxfmyfm ? ?cyfm) = ??x+ ?xp\n? ?z(xfm ? ?c(1 + x2fm) + ?cxfmyfm ? ?cyfm)? zcxfmyfm??+ zcyfm??\n+ zc(1 + x\n\n2\nfm)?? + zc(2?cxfm ? ?cyfm ? 1)?xf + zc(?c ? ?cxfm)?yf\n\n(33)\n\nand\n\nypc?yc ? zc(yfm ? ?cxfmyfm + ?c(1 + y2fm) + ?cxfm) = ??y + ?yp\n? ?z(yfm ? ?cxfmyfm + ?c(1 + y2fm) + ?cxfm) + zcxfmyfm?? ? zcxfm??\n? zc(1 + y2fm)?? + zc(?cyfm ? ?c)?xf + zc(?cxfm ? 2?cyfm ? 1)?yf\n\n(34)\n\nFinally, nondimensionalizing such that\n\nxp ? xp\nh\n\nyp ? yp\nh\n\nzp ? zp\nh\n,\n\nthe nondimensional altitude is zc = zl. In addition, for the purpose of covari-\nance analysis, set all of the calculated values on the RHS equal to the nominal\nvalues. This causes all of the angles to go to zero, simplifying the measurement\nEqs. (33) and (34). Also, on the RHS set xfm := xf and yfm := yf .\n\nxpc?xc ? zc(xfm ? ?c(1 + x2fm) + ?cxfmyfm ? ?cyfm) =\n? ?x? ?zxf + ??(1 + x2f )zl ? ??xfyfzl + ??yfzl + ?xp ? ?xf zl\n\n(35)\n\nand\n\nypc?yc ? zc(yfm ? ?cxfmyfm + ?c(1 + y2fm) + ?cxfm) =\n? ?y ? ?zyf + ??xfyfzl ? ??(1 + y2f )zl ? ??xfzl + ?yp ? ?yfzl\n\n(36)\n\nNow the measurement equation can be written in state space form,\n\n?Z = Hu(l)?x (37)\n\nwhere ?Z is the difference between the expected measurement and the actual\nmeasurement, and the time dependent observation matrix H(l) for one unknown\nground feature is\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 319\n\nHu(l) =\n\n?\n?????????????????????????????\n\n?1 0\n0 ?1\n\n?xf ?yf\n0 0\n0 0\n0 0\n\n?xfyfzl ?(1 + y2f )zl\n(1 + x2f )zl xfyfzl\n\nyfzl ?xfzl\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 1\n\n?\n?????????????????????????????\n\nT\n\n(38)\n\nwhere the subscript u indicates that the position of the ground object being\ntracked is unknown. The nondimensional measurement error is [?xf , ?yf ]\n\nT .\nFor the sake of observability [6] two ground objects will be tracked. The\n\nobservation matrix for tracking two unknown ground features\n\nHuu(l)=?\n?????????????????????????????????\n\n?1 0 ?1 0\n0 ?1 0 ?1\n\n?xf1 ?yf1 ?xf2 ?yf2\n0 0 0 0\n0 0 0 0\n0 0 0 0\n\n?xf1yf1zl ?(1+y2f1)zl ?xf2yf2zl ?(1+y2f2)zl\n(1+x2f1)zl xf1yf1zl (1+x\n\n2\nf2)zl xf2yf2zl\n\nyf1zl ?xf1zl yf2zl ?xf2zl\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n\n?\n?????????????????????????????????\n\nT\n\n(39)\n\n\n\n320 A. Relyea and M. Pachter\n\n?0.03 ?0.02 ?0.01 0 0.01 0.02 0.03\n?0.01\n\n?0.008\n\n?0.006\n\n?0.004\n\n?0.002\n\n0\n\n0.002\n\n0.004\n\n0.006\n\n0.008\n\n0.01\nNormalized Ground Feature Locations Geometry 1\n\nNormalized X Position\n\nN\no\nr\nm\na\nl\ni\nz\ne\nd\n \nY\n \nP\no\ns\ni\nt\ni\no\nn\n\nTarget\nTracked Features\n\nFig. 2. The locations of the tracked ground features in the first geometry\n\n3 Performance of Aided INS\n\nThe munition is in a free fall, that is, vz(0) = 0 and its acceleration is ?g along\nthe Zn axis until it reaches terminal velocity. The nominal vertical drop is such\nthat hrel = 7500 [m]. The terminal vterm = 100\n\n[\nm\ns\n\n]\nso that the free fall is\n\n10 seconds and the total duration of the vertical drop is T = 80 seconds. The\nnominal trajectory is x(t) = 0, y(t) = 0 and\n\nz(t) =\n\n{\n7500? 5t2 ? 0 ? t < tterm\n\n7000? 100(t? tterm) ? tterm ? t ? T\n}\n\nOnce the terminal velocity has been reached there is no further acceleration\nand the vertical speed is constant. Two ground feature geometries were con-\nsidered. The first is shown in Figure 2. For this geometry, in the observation\nmatrix\n\nxf1(l) =\nxp1\nzl\n\n=\n.025\n\nzl\n\nxf2(l) =\nxp2\nzl\n\n=\n?.025\nzl\n\nyf1(l) = yf2(l) = 0, l = 0, . . . , N\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 321\n\n?0.01 ?0.005 0 0.005 0.01 0.015 0.02 0.025 0.03\n?0.01\n\n?0.005\n\n0\n\n0.005\n\n0.01\n\n0.015\n\n0.02\n\n0.025\n\n0.03\nNormalized Ground Feature Locations Geometry 2\n\nNormalized X Position\n\nN\nor\n\nm\nal\n\niz\ned\n\n Y\n P\n\nos\niti\n\non\n\nTarget\nTracked Features\n\nFig. 3. The locations of the tracked ground features in the second geometry\n\nThe second geometry is shown in Figure 3. For this geometry, in the observa-\ntion matrix\n\nxf1(l) =\nxp1\nzl\n\n=\n.025\n\nzl\n\nxf2(l) = yf1(l) = 0\n\nyf2(l) =\nyp2\nzl\n\n=\n.025\n\nzl\n, l = 0, . . . , N\n\n3.1 Initialization\n\nIt is stipulated that initially, the INS has zero error in the navigation states,\nthat is, the INS alignment was perfect, and the states representing the biases in\nthe sensors are\n\n?f (b)x ? N(0, ?2a) ?f (b)y ? N(0, ?2a) ?f (b)z ? N(0, ?2a)\n??(b)x ? N(0, ?2g) ??(b)y ? N(0, ?2g) ??(b)z ? N(0, ?2g)\n\nThe x, y and z accelerometers are of the same quality, and also the x, y and z\ngyroscopes are of the same quality. Thus\n\n?x(0) ? N(0,P(0)) (40)\n\nwith the initial covariance matrix P(0) given by Eq. (21).\n\n\n\n322 A. Relyea and M. Pachter\n\n3.2 Transitioning between Measurement Epochs\n\nIn the pure free fall case, there are three measurement epochs. The first is while\nthe munition is accelerating toward the earth. The duration of the first epoch is\none nondimensional second. There is N = 100 discrete steps per nondimensional\nsecond.\n\nTherefore, in epoch 1 the observation matrixHuu(l), and the dynamics matrix\nAad19\u00d719 based on the nominal accelerometer values from Eq. (11) were used.\nIn the first epoch, the uncertainty of the states were propagated for one hundred\nsteps using the covariance propagate and update equations of the Kalman filter\n[4]\n\nP(l + 1)? = AadP(l)+Ad (41)\n\nK = P(l + 1)?Huu(l)T [Huu(l)P(l + 1)?Huu(l)T +R]?1 (42)\n\nP(l + 1)+ = (I19 ?KHuu(l))P(l + 1)? (43)\nwhere R is the measurement uncertainty caused by one pixel in the camera\u2019s\nfocal plane ?\n\n???\n?xf1\n?yf1\n?xf2\n?yf2\n\n?\n??? ? N(0,R)\n\nWe assume a 9 Megapixel camera with an aspect ratio of 1. However, recall from\nEqs. (35) and (36) that the measurement error terms on the RHS are multiplied\nby the time-varying altitude zl. Therefore, the nondimensional\n\nR = z2l\n\n?\n???\n\n1\n9 0 0 0\n0 19 0 0\n0 0 19 0\n0 0 0 19\n\n?\n???\u00d7 10?6 (44)\n\nwhere zl is squared to match R. If R was standard deviation of the noise instead\nof the variance then zl would not need to be squared.\n\nAt the conclusion of the first one hundred steps/the first measurement epoch\nthe munition reached terminal velocity. Thus the next time block required the\nuse of the dynamics matrix Aad19\u00d719 to be based on the nominal accelerometer\nvalues from Eq. (12). The second measurement epoch was 6 nondimensional\nseconds long. Without any further transitions, Eqs. (41)-(43) were repeated for\n101 ? l ? 700, using the updated dynamics matrix.\n\nWe assumed a camera Field of View (FOV) of 50 milliradians. Based on the\ngeometry set forth in Figure 2, the ground features leave the camera FOV when\nthe munition is 1000 meters above the ground, hfinal. Thus the third and final\nmeasurement epoch started when the munition reached hfinal in 70 seconds.\nIn the final 10 seconds of its flight the INS was not aided, and we reverted to\na free INS. As such the calculations using the KF equations, (41)-(43), were\nterminated and the calculation for the free INS, Eq. (20), was used for the last\n10 seconds.\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 323\n\n0 10 20 30 40 50 60 70 80\n0\n\n20\n\n40\nUnaided Position Std Dev For Vertical Drop\n\n? x\n (\n\nm\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n20\n\n40\n\n? y\n (\n\nm\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n20\n\n40\n\n? z\n(m\n\n)\n\nTime (sec)\n\nFig. 4. The development of the standard deviation of the position errors in the unaided,\nfree, INS\n\nThis process was completed for both geometries listed at the beginning of\nSection 3.\n\n4 Calculations\n\nInitially the standard deviations of the navigation states of the unaided INS\nwere plotted as a baseline in Figures 4-6. The standard deviations of the x, y\nand z positions were almost 27 meters after 70 dimensional seconds. There was\na large degree of aiding achieved with the optical tracking scheme, shown in\nFigures 7-9. After falling for 70 seconds the standard deviations in the x and y\npositions are 10 and 12 centimeters, respectively, with an uncertainty in the z\nposition of about 3.5 meters. But the position states were not the only navigation\nstates that were aided. Four of the other six navigation states showed significant\nreduction in uncertainty as well. What is truly remarkable is how much removing\nthe symmetry of the feature location geometry reduced the uncertainty, shown in\nFigures 10-12. The most significant reductions had to do with the z states. The\nz position uncertainty peaked at .13 millimeters, without degrading the other\ntwo position states. The same happened with the velocity states. The ? angular\nstate\u2019s peak uncertainty was cut almost in half from the max uncertainty in the\nfirst geometry.\n\n\n\n324 A. Relyea and M. Pachter\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nUnaided Velocity Std Dev For Vertical Drop\n\n? V\nx \n\n(m\n/s\n\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\n\n? V\ny \n\n(m\n/s\n\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\n\n? V\nz \n\n(m\n/s\n\n)\n\nTime (sec)\n\nFig. 5. The development of the standard deviation of the velocity errors in the unaided,\nfree, INS\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nx 10\n\n?4 Unaided Angular Std Dev For Vertical Drop\n\n? ?\n (\n\nra\nd)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nx 10\n\n?4\n\n? ?\n (\n\nra\nd)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nx 10\n\n?4\n\n? ?\n (\n\nra\nd)\n\nTime (sec)\n\nFig. 6. The development of the standard deviation of the angle errors in the unaided,\nfree, INS\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 325\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nAided Position Std Dev for Vertical Drop Geometry 1\n\n? x\n (\n\nm\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\n\n? y\n (\n\nm\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n5\n\n10\n\n15\n\n? z\n (\n\nm\n)\n\nTime (sec)\n\nFig. 7. The development of the standard deviation of the position errors in the aided\nINS for geometry 1\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.05\n\n0.1\nAided Velocity Std Dev for Vertical Drop Geometry 1\n\n? V\nx \n\n(m\n/s\n\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.05\n\n0.1\n\n? V\ny \n\n(m\n/s\n\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\n\n? V\nz \n\n(m\n/s\n\n)\n\nTime (sec)\n\nFig. 8. The development of the standard deviation of the velocity errors in the aided\nINS for geometry 1\n\n\n\n326 A. Relyea and M. Pachter\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nx 10\n\n?4 Aided Angular Std Dev for Vertical Drop Geometry 1\n\n? ?\n (\n\nra\nd)\n\n0 10 20 30 40 50 60 70 80\n0\n\n2\n\n4\nx 10\n\n?5\n\n? ?\n (\n\nra\nd)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nx 10\n\n?4\n\n? ?\n (\n\nra\nd)\n\nTime (sec)\n\nFig. 9. The development of the standard deviation of the angle errors in the aided INS\nfor geometry 1\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\nAided Position Std Dev for Vertical Drop Geometry 2\n\n? x\n (\n\nm\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\n\n? y\n (\n\nm\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n1\n\n2\nx 10\n\n?4\n\n? z\n (\n\nm\n)\n\nTime (sec)\n\nFig. 10. The development of the standard deviation of the position errors in the aided\nINS for geometry 2\n\n\n\nA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case 327\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.05\n\n0.1\nAided Velocity Std Dev for Vertical Drop Geometry 2\n\n? V\nx \n\n(m\n/s\n\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.05\n\n0.1\n\n? V\ny \n\n(m\n/s\n\n)\n\n0 10 20 30 40 50 60 70 80\n0\n\n1\n\n2\nx 10\n\n?3\n\n? V\nz \n\n(m\n/s\n\n)\n\nTime (sec)\n\nFig. 11. The development of the standard deviation of the velocity errors in the aided\nINS for geometry 2\n\n0 10 20 30 40 50 60 70 80\n0\n\n2\n\n4\nx 10\n\n?5 Aided Angular Std Dev for Vertical Drop Geometry 2\n\n? ?\n (\n\nra\nd)\n\n0 10 20 30 40 50 60 70 80\n0\n\n2\n\n4\nx 10\n\n?5\n\n? ?\n (\n\nra\nd)\n\n0 10 20 30 40 50 60 70 80\n0\n\n0.5\n\n1\nx 10\n\n?4\n\n? ?\n (\n\nra\nd)\n\nTime (sec)\n\nFig. 12. The development of the standard deviation of the angle errors in the aided\nINS for geometry 2\n\n5 Conclusion\n\nIt is clearly shown that using visual bearings-only measurements greatly reduces\nthe uncertainty in the INS provided navigation state estimate during a vertical\ndrop. This improvement will allow for more accurate guidance of the munition,\nand therefore a greater chance of the munition hitting its target. This is achieved\nusing a passive means and autonomous guidance.\n\n\n\n328 A. Relyea and M. Pachter\n\nReferences\n\n1. Davison, A., Reid, I., Molton, N., Stasse, O.: Monoslam: Real-time single cam-\nera slam. IEEE Transactions on Pattern Analysis and Machine Intelligence 29(6),\n1052\u20131067 (2007)\n\n2. Giebner, M.: Tightly-Coupled Image-Aided Inertial Navigation System via a\nKalman Filter. Master\u2019s thesis, AFIT, WPAFB, OH (2003)\n\n3. Ke, Y., Sukthankar, R.: Pca-sift: A more distinctive representation for local image\ndescriptors. In: 2004 IEEE Computer Society Conference on cumputer Vision and\nPattern Recognition (CVPR 2004), vol. 2, pp. 506\u2013513 (2004)\n\n4. Maybeck, P.S.: Stochastic Models, Estimation, and Control, vol. 2. Academic Press,\nNew York (1983)\n\n5. Pacher, M., Porter, A., Polat, M.: Inertial navigation system aiding using bearings-\nonly measurements of an unknown ground object. ION Journal Navigation 53(1),\n1\u201320 (2006)\n\n6. Pachter, M., Mutlu, G.: The Navigation Potential of Ground Feature Tracking. In:\nDynamics of Information Systems: Theory and Application, pp. 287\u2013303. Springer\n(2010)\n\n7. Relyea, A., Pachter, M.: A covariance analysis of vision-aided inertial navigation:\n3-d case (November 2011) (not currently submitted for publication)\n\n8. Relyea, A., Pachter, M.: A covariance analysis of vision-aided inertial navigation.\nIn: 51st IEEE Conference on Decision and Control, Maui, HI (December 2012)\n(submitted to CDC12)\n\n9. Titterton, D., Weston, J.: Strapdown Inertial Navigation Technology, 2nd edn. The\nInstitution of Engineernig and Technology, London (2004)\n\n10. Veth, M., Raquet, J., Pachter, M.: Stochastic constraints for efficient image corre-\nspondence search. IEEE Transactions on Aerospace and Electronic Systems 42(3),\n973\u2013982 (2006)\n\n\n\nInvestigation of a Symmetric Vibrating\n\nGyroscope Characteristics Using a Simplified\nDynamic Model\n\nIlia Rapoport1 and Daniel Choukroun2,3\n\n1 Control and Navigation, Elbit Systems, Electro-Optics ELOP Ltd, Rehovot, Israel\nilia.rapoport@gmail.com\n\n2 Mechanical Eng. Dept., Ben-Gurion University, POB 653, Beer-Sheva, Israel\ndanielch@bgu.ac.il\n\n3 Faculty of Aerospace Eng., Delft Univ. of Techn., 2629 HS, Delft, Netherlands\n\nAbstract. In this work a dynamical model for MEMS vibrational gy-\nroscopes is developed that generalizes a previous work, allows for sim-\npler but accurate qualitative and quantitative analysis of several sources\nof angular velocity measurement errors, and opens avenues for future\ndevelopments in MEMS vibrational gyroscopes designs. The proposed\nmodel equations govern the dynamics of the amplitudes rather than the\ndynamics of the rapid oscillatory processes. The characteristics of this\napproximate model are significantly slower than the driving frequency. It\nallows a linear time-invariant analysis of the angular velocity measure-\nment errors. These may be direct like a bias caused by the structural\ndamping, or indirect, due e.g. to the unmatched frequencies between the\ndrive and the sense channels. The approximate model was validated on a\nparticular numerical example by examination and comparison of the fre-\nquency responses. A simple proportional feedback control was designed\nfor both the drive and the quadrature loops, showing the potential im-\npact of the feedback gains on the low-frequencies error. Being a linear\ntime-invariant model, this model will easily lend itself to the development\nof more advanced control strategies.\n\n1 Introduction\n\nFor over three decades, microelectromechanical system (MEMS) gyroscopes have\nbeen a growing focus of research and development in science and technology (see\na review in [1]), many have been developed [2], and a few are on the market.\nIn the aerospace engineering field, their scope essentially focus on tactical sys-\ntems. They find very successful applications, such as attitude determination\non-board spacecraft with complementary sensors like star-trackers (see e.g.[3]).\nThis work is concerned with the derivation of a dynamical model for MEMS vi-\nbrational gyroscopes that generalizes a previous work[4], allows for simpler but\naccurate qualitative and quantitative analysis of several sources of angular ve-\nlocity measurement errors, and opens avenues for future developments in MEMS\nvibrational gyroscopes designs.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 329\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_18\n\n\n\n330 I. Rapoport and D. Choukroun\n\nThe paper presents an extended model of the vibrational gyroscope where\ncoupling in the damping and stiffness properties of the drive and sense axes\nare allowed. Following an alternative technique to \u201cstochastic averaging\u201d[5], a\nsimpler model is developed for the dynamics of the in-phase and quadrature\nsense vibration amplitudes, which keeps the slow dynamics essential character-\nistics. This simple but accurate model permits straightforward qualitative and\nquantitative analysis of systematic errors, such as a bias related to the coupling\ndamping coefficient, or of issues in operational mode, such as a narrow band-\nwidth in open-loop operations. The current results illustrate how the proposed\nmodel lends itself to a linear analysis of the impact of electronic sensing noise\non the gyro performances. Preliminary results on the noise to angular error fre-\nquency response emphasize the need for a careful design of the quadrature loop.\nThe proposed model clearly provides a promising platform for future develop-\nments of filtering and control strategies allowing e.g. mitigation of the gyro drift\nerror.\n\n2 Mathematical Model\n\nThe operation principle of vibrational gyroscopes relies, in essence, on the sensing\nof a Coriolis force. This force, which is acting on a mass driven in a controlled\nvibration along an axis (the drive axis) perpendicular to the angular velocity\nvector, is directed, and can thus be sensed, along an axis perpendicular to both\ndirections (the sense axis). The Coriolis force, which can be sensed by measuring\nthe vibration amplitude along the sense axis, is proportional to the angular\nvelocity. The observation of the amplitude of the sense axis vibration may thus\nprovide a measurement of the angular velocity.\n\n2.1 Full Gyroscope Model\n\nLet x(t) and y(t) denote the drive axis and the sense axis vibration signals,\nrespectively. The dynamics of x(t) and y(t) are governed by the following generic\nsystem of equations:\n\nm\n\n[\nx?\ny?\n\n]\n+\n\n[\nc11 c12\nc12 c22\n\n] [\nx?\ny?\n\n]\n+\n\n[\nk11 k12\nk12 k22\n\n] [\nx\ny\n\n]\n+ 4Agm?\n\n[\n0 ?1\n1 0\n\n] [\nx?\ny?\n\n]\n=\n\n[\nfx\nfy\n\n]\n(1)\n\nwhere fx(t) denotes the control force used to maintain the drive axis vibration at\na specified amplitude (called also the drive force), fy(t) denotes the sense force,\nwhich is zero in the open-loop operation and is used to keep the sensing signal y(t)\nat zero in a closed-loop operational mode [4], m is the mass, cij and kij are the\ndamping and stiffness coefficients, ?(t) is the rotation rate and Ag is a geometry\nterm taking e.g. the value of 0.5 for a suspended mass [4] and approximately 0.4\nfor a vibrating ring. As opposed to [4], where the coupling between the drive\nand sense axes only occurs as a result of the Coriolis force, we assume that\nadditional coupling happens as a result of the off-diagonal damping and stiffness\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 331\n\ncoefficients. However, resulting from the symmetry of the vibrational structure,\nthe following assumptions are made:\n\n|k11 ? k22| ? k11, |k12| ? k11 (2)\n|c11 ? c22| ? c11, |c12| ? c11 (3)\n\n2.2 Approximate Gyroscope Model\n\nFollowing the usual approach [2,4], the drive force is assumed to excite the\ndynamics of the drive axis at the resonance frequency, i.e.\n\nfx(t) = Fx(t) sin(?xt) (4)\n\nwhere\n\n?\nx\n\n?\n=\n\n?\nk11\nm\n\n(5)\n\nand the drive axis vibration is assumed to perfectly track a desired pattern\nthanks to a phase-locked loop and an automatic gain control that adjust Fx(t)\nuntil the desired amplitude is reached (an example of such an excitation scheme\ncan be found in [7]). Thus, it will be assumed that the drive axis vibration is\nexpressed as follows:\n\nx(t) = X0 cos(?xt) (6)\n\nNotice that the amplitudes reached by x(t) are typically orders of magnitude\ngreater than those of y(t). This allows neglecting the influence of y(t) on the\ndynamics of x(t), and facilitates the phase-locked loop regulation task. An ap-\nproximate gyroscope model is here developed for the dynamics of the sense axis\nvibration, y(t). This analysis will assume the following expressions for the sense\nforce fy(t) and for the vibration y(t):\n\nfy(t) = FYs(t) sin(?xt) + FYc(t) cos(?xt) (7)\n\ny(t) = Ys(t) sin(?xt) + Yc(t) cos(?xt) (8)\n\nThe term Yc(t) cos(?xt) is called the \u201cin-phase\u201d part of the y-signal, which is in\nphase with x(t) (see Eq. (6)), while the term Ys(t) sin(?xt) is called the \u201cquadra-\nture\u201d part of the y-signal, since it has a 90 deg phase difference with x(t). Using\nEqs. (6)-(8), expressing the time differentials of y(t) as given in Eq. (8), and\nsubstituting the resulted expressions into the sense axis equations in Eq. (1)\nyields the following two ordinary differential equations for the amplitudes Ys(t)\nand Yc(t):\n\nm(Y?s ? 2Y?c ?x ? Ys ?2x ) + c22(Y?s ? Yc ?x) + k22Ys?\n? ?\n\nx\n(c12 + 4Agm?)X0 = FYs (9)\n\nm(Y?c + 2Y?s ?x ? Yc ?2x ) + c22(Y?c + Ys ?x) + k22Yc + k12X0 = FYc (10)\n\n\n\n332 I. Rapoport and D. Choukroun\n\nBecause of the symmetry assumption (yielding Eqs. (2)(3)), it can be shown\nthat the characteristic frequency of the amplitude signals Ys(t) and Yc(t) is very\nslow compared to the vibration frequency ?x . This is sometimes called the slow\nenvelope approximation [6, p. 114]. As a consequence, it can be assumed that\nthe following relations hold:\n\n|Y? | ? |Y |?\nx\n\n(11)\n\n|Y? | ? |Y? |?\nx\n\n(12)\n\nwhere Y might denote Ys or Yc. Using Eqs. (11)(12) in Eqs. (9)(10) yields the\nfollowing approximate model for the dynamics of Yc(t) and Ys(t):\n\nm(?2Y?c ?x ? Ys ?2x ) + c22(?Yc ?x) + k22Ys ? ?x(c12 + 4Agm?)X0 = FYs (13)\nm(2Y?s ?x ? Yc ?2x ) + c22(Ys ?x) + k22Yc + k12X0 = FYc (14)\n\nFinally, defining the resonance frequency in the sense axis, ?\ny\n, and the \u201cquality\n\nfactor\u201d, Qy, as follows:\n\n?\ny\n\n?\n=\n\n?\nk22\nm\n\n(15)\n\nQy\n?\n=\n\n?\ny\n\n(c22/m)\n(16)\n\nEquations (13)(14) are rewritten as follows\n\nY?s +\n?\n\ny\n\n2Qy\nYs +\n\n(\n?2\n\ny\n? ?2\n\nx\n\n2?\nx\n\n)\nYc = ? k12\n\n2m?\nx\n\nX0 +\n1\n\n2m?\nx\n\nFYc (17)\n\nY?c +\n?\n\ny\n\n2Qy\nYc ?\n\n(\n?2\n\ny\n? ?2\n\nx\n\n2?\nx\n\n)\nYs = ?\n\n( c12\n2m\n\n+ 2Ag?\n)\nX0 ? 1\n\n2m?\nx\n\nFYs (18)\n\nEquations (17)(18) provide a simple approximate model governing the dynamics\nof Yc and Ys, i.e., the in-phase and quadrature amplitudes of the sense signal,\nrespectively. The inputs to this simple model are FYc, which denotes the in-\nphase signal control force, and FYs, which is the quadrature signal control force.\nIt is noticed that the angular velocity ? (that we want to measure) enters the\nin-phase amplitude dynamics. It is also noticed that the coefficient c12 enters\nthe in-phase amplitude dynamics in such a way that it can not be distinguished\nfrom the angular velocity. On the other hand, the coefficient k12 perturbs the\ndynamics of the quadrature signal. The proposed model features the following\nadvantages over the model introduced in [4]: the stiffness and damping coupling\nbetween the drive and the sense axes is not neglected (k12 ?= 0, c12 ?= 0), and the\nquadrature signal can be controlled (via FYc(t)). A more compact expression for\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 333\n\nEqs. (15)(18) is provided below:\n\n[\nY?s\nY?c\n\n]\n=\n\n[?? ??\n? ??\n\n] [\nYs\nYc\n\n]\n+\n\n[\n0 ??X0 0 0 ?\n\n?2AgX0 0 ?X02m ?? 0\n]\n?\n?????\n\n?\nk12\nc12\nFYs\nFYc\n\n?\n????? (19)\n\nwhere\n\n?\n?\n=\n\n?y\n2Qy\n\n(20)\n\n?\n?\n=\n\n?2\ny\n? ?2\n\nx\n\n2?x\n(21)\n\n?\n?\n=\n\n1\n\n2m?\nx\n\n(22)\n\nNotice that the coefficient ? can be approximated as follows:\n\n? =\n(?2\n\ny\n? ?2\n\nx\n)\n\n2?x\n? ?\n\ny\n? ?\n\nx\n(23)\n\nIn the above model, the parameters X0 and ?x are in direct control of the\ndesigner. The parameters ? (which depends on the mass and the damping co-\nefficient c22), Ag, and ? can be relatively accurately determined, and are thus\nconsidered known to the gyroscope designer. On the other hand, parameters\nlike the frequency mismatch, ?, and coupling coefficients like k12 and c12 should\nbe considered uncertain, possibly time-varying, e.g. under the influence of the\ntemperature. In Eq. (19), the parameters k12 and c12 appear as inputs. Indeed,\nthese signals being time invariant or time varying, one objective consists in in-\nvestigating the response of the system and to check how well the approximate\nmodel can predict the full model behavior. For that purpose the various single-\ninput-single-output transfer functions are required. They are provided next in\nthe form of a 2\u00d7 5 transfer matrix.\n\n1\n\ndc(s)\n\n[\n2AgX0? ??X0(s+ ?) X0?2m ?? ?(s+ ?)\n\n?2AgX0(s+ ?) ??X0? ?X02m (s+ ?) ??(s+ ?) ??\n]\n\n(24)\n\nwhere\n\ndc(s) = (s+ ?)\n2 + ?2 (25)\n\nThe appealing simplicity of this approximate model will help in analyzing the\neffect of these uncertain terms on the gyroscope\u2019s performances.\n\n2.3 Mode of Operation for Angular Velocity Measurement\n\nThere are two modes of operations: an open-loop mode and a closed-loop mode.\nIn the open-loop mode no control forces are applied, i.e. FYs = FYc = 0, and the\n\n\n\n334 I. Rapoport and D. Choukroun\n\nangular velocity results from the observation of the in-phase signal in steady-\nstate. In the ideal case, where k12 = c12 = 0 and ?y = ?x , and for a step ?0\nin ?, the approximate model allows for an easy development of the steady-state\nequation for Yc:\n\nYc(?) = ?4AgQy\n?\n\nx\n\nX0 ?0 (26)\n\nInspection of Eq. (26) suggests a usual approach of extracting the angular ve-\nlocity from the observed Yc(t)[4]:\n\n??(t) = ? ?x\n4AgQyX0\n\nYc(t) (27)\n\nwhich is done at any time t. Notice from Eq. (27) that the quality factor, i.e. the\ndamping coefficient, needs to be known in the open-loop operational mode. The\nresulting open-loop transfer functions are provided in Table 1. In the closed-loop\nmode, the objective is to bring the in-phase and quadrature signals to zero via\nfeedback. A simple manipulation of the approximate model, in the ideal case\n(k12 = c12 = 0 and ?y = ?x) for a step ?0 yields the following steady state\nrelationship:\n\n0 = 2Ag?0X0 ? 1\n2m?\n\nx\n\nFYs(?) (28)\n\nSolving Eq. (28) for ?0 provides the measurement equation for the closed-loop\nmode of operation:\n\n??(t) =\n1\n\n4Ag ?xmX0\nFYs(t) (29)\n\nat anytime t. Any deviation from this ideal case, i.e. c12 ?= 0, or k12 ?= 0, or\n?\n\nx\n?= ?\n\ny\nis expected to yield an error in the gyro angular velocity measurement.\n\nTable 1. Open-loop transfer functions with output ??\n\nInput HOL(s) = ??(s)\u00b7\n\n? [rad/sec]\n?x\n\n2Qy\n\n(s+?)\n\n(s+?)2+?2\n\nk12 [N/m]\n1\n\n8mAgQy\n\n?\n(s+?)2+?2\n\nc12 [Ns/m] ? ?x8mAgQy\n(s+?)\n\n(s+?)2+?2\n\nFY s [N ]\n1\n\n8mAgX0Qy\n\n(s+?)\n\n(s+?)2+?2\n\nFY c [N ]\n1\n\n8mAgX0Qy\n\n?\n(s+?)2+?2\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 335\n\n3 Numerical Study\n\nThe objective of this section is to compare the full and the approximate models\nvia their dynamical and frequency responses for the signals Ys(t), Yc(t) (equiv-\nalently the measured angular velocity), to inputs in ?, FY s, FY c, k12, and c12.\nThe following performance measures are used:\n\neC = max\n[0,T ]\n\n(|Y Fc (t)? Yc(t)|) (30)\n\neS = max\n[0,T ]\n\n(|Y Fs (t)? Ys(t)|) (31)\n\ne? = max\n[0,T ]\n\n(|??F (t)? ??(t)|) (32)\n\nThe superscript F denotes variables that are computed via the full model equa-\ntions, ?? denotes the measured angular velocity, and T is the simulation time,\nwhich is larger than the characteristic times of the simulated signals.\n\nFull Model Simulation. The computation of the angular velocity from the\nsense signal, y(t), requires computing the in-phase and quadrature amplitudes,\nY Fc and Y\n\nF\ns . These amplitudes are computed following standard steps of de-\n\nmodulation and low-pass filtering [4], which are detailed next for the sake of\nclarity.\n\ny? +\n?\n\ny\n\nQy\ny? + ?2\n\ny\ny =\n\n1\n\nm\n[FY s + (c12 + 4Agm?)X0 ?x ] sin(?xt)+ (33)\n\n+\n1\n\nm\n(FY c ? k12X0) cos(?xt) (34)\n\nzC(t) = y(t) cos(?xt) (35)\n\nzS(t) = y(t) sin(?xt) (36)\n\nY? Fc + 2?l?lY?\nF\nc + ?\n\n2\nl Y\n\nF\nc = Al ?\n\n2\nl zC (37)\n\nY? Fs + 2?l?lY?\nF\ns + ?\n\n2\nl Y\n\nF\ns = Al ?\n\n2\nl zS (38)\n\nwhere Eq. (34) results from Eq. (6) inserted in Eq. (1). The purpose of the de-\nmodulation steps is to extract the in-phase and quadrature amplitudes from the\nsense signal y(t). Equation (37) provides the output of the in-phase loop, while\nEq. (38) provides the output of the quadrature loop. The second-order low-pass\nfilter parameters, ?l, ?l, and Al, are chosen in order to filter out the high fre-\nquencies [i.e. (?\n\nx\n+ ?\n\ny\n) and (2?\n\nx\n)] components that arise from the demodulation\n\nsteps, Eqs. (35)(36), to maintain a cut-off frequency that is high enough (not to\ninterfere with the slow dynamics components), and to provide a zero dB Bode\ngain. The computation of the angular velocity is then performed as if we were in\nthe ideal case, i.e. c12 = k12 = ?y ? ?x = 0, by applying the same scaling gains\nto Y Fc (t) and F\n\nF\nYs(t), as is done in Eqs. (27)) and Eq. (29) for the open-loop and\n\nclosed-loop modes respectively. Therefore, in open-loop:\n\n\n\n336 I. Rapoport and D. Choukroun\n\n??F (t) = ? ?x\n4AgQyX0\n\nY Fc (t) (39)\n\nand in closed-loop,\n\n??F (t) =\n1\n\n4Ag ?xmX0\nFFYs(t) (40)\n\nThe numerical values for the simulation parameters appear in Table 2.\n\nTable 2. Simulation parameters values\n\nm Ag k11 k22 k12 c11, c22 c12 X0 ?l ?l Al\n[kg] [-] [N/m] [N/m] [N/m] [Ns/m] [Ns/m] [m] [rad/sec] [-] [-]\n\n5 \u00b7 10?90.4 177.65 177.67 4 \u00b7 10?7 2 \u00b7 10?7 2 \u00b7 10?12 10?5 6280 0.707 2\n\n3.1 Open-Loop Response\n\nStep Response. Several step responses were simulated for various values of the\ninput angular velocity, ?0, in the ideal case where c12 = k12 = ?y ? ?x = 0. The\nresults are summarized in Table 3 and Fig. 1. Table 3 shows that the adequation\nof the in-phase and quadrature signals in the full and approximate models is\nexcellent. Figure 1 depicts a typical response to a step of 1 [deg/sec] in the input\nangular velocity. Both the responses of the full and of the approximate models are\nfitting very well, up to an error due to remaining high frequency oscillations in\nthe full model variables that are not totally filtered out by the second-order low\npass filter. The lack of coupling between the in-phase and quadrature signals\nyields the (expected) exponential dynamics shown on Fig. 1. This is a clear\nillustration of the \u201cslow envelope approximation\u201d mentioned earlier. For this\nparticular choice of parameters, the resulting steady state error is of the order\nof 0.1 [deg/hr].\n\nTable 3. Deviations between Full and Approximate models for responses to steps in\nthe angular velocity. Ideal case. c12 = k12 = ?x ? ?y = 0.\n\n?0 [deg/sec] eC [m] eS [m] e? [rad/sec]\n\n10 3\u00d7 10?12 2\u00d7 10?12 6\u00d7 10?6\n3 2\u00d7 10?12 1\u00d7 10?12 6\u00d7 10?6\n0 2\u00d7 10?10 1\u00d7 10?12 6\u00d7 10?6\n\n?3 2\u00d7 10?10 1\u00d7 10?12 6\u00d7 10?6\n?10 3\u00d7 10?10 2\u00d7 10?12 6\u00d7 10?6\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 337\n\nFrequency Response. The frequency response of the gyroscope in open-loop\nwas investigated for each transfer function between the five inputs ?, k12, c12,\nFY s, and FY c, and the two outputs ?? and Ys. Figure 2 shows the Bode plots\nof the magnitude and phase introduced by the full model and the approximate\nmodel between the input angular velocity and the measured angular velocity for\nthe ideal case ? = 23 and ? = 0. There is a very good fit between the curves\nover all frequencies, except for the phase in the higher frequencies domain. There\nseems to be an additional lag around 1000 [rad/sec], which might stem from the\ndemodulator low-pass filter, whose crossover frequency is 6280 [rad/sec]. Using\nthe approximate model, the transfer function from the input to the measured\nangular velocity can easily be determined as the following function:\n\nHOL? (s) =\n??(s)\n\n?(s)\n=\n\n1\n\n1 + s?\n(41)\n\nwhich nicely explains the first-order shape of the frequency response of the full\nmodel. The next Bode plots correspond to the case of a coupled system where ? =\n10 [rad/sec]. Figures 3 and 4 depict the plots of the transfer functions from ? to\n?? and Ys. Here also, the approximate model is fitting the full model plots, except\nfor the phase in the high frequencies. We notice, on the magnitude plot in Fig. 3,\nthat the low frequency gain differs from 1 because of the discrepancy between ?\n\nx\n\nand ?\ny\n. Figures 5 and 6 depict the Bode plots of the transfer functions from k12.\n\nFigures 7 and 8 depict the Bode plots of the transfer functions from c12. Figures\n9 and 10 depict the Bode plots of the transfer functions from FY s. The Bode\nplots of the transfer functions related to FY c were omitted for the sake of brevity.\nThey are very similar to the plots of the input FY s. As a concluding remark,\nthe open-loop transfer functions of the open-loop system are in a very good\nadequation with the full model frequency response, as testified via numerical\nsimulations.\n\n4 Insight on Non-ideal Cases, Open-Loop Issues,\nand Improvement Directions\n\n4.1 Bias\n\nAs opposed to the stiffness coefficient k12, which can be canceled to a large extent\nby proper feedback control in the quadrature loop, the damping coefficient c12\nis traditionally not well known. Assume for simplicity that the angular velocity\nis zero and that the gyroscope works in closed-loop. If it works successfully,\nthen the vibrations are canceled, i.e., Ys = Yc = 0, and the approximate model\nprovides the following relationship between the control force FYs and c12:\n\nFYs = ?c12 ?xX0 (42)\nUsing Eq. (42) in Eq. (29) yields a non-zero measurement value for the angular\nvelocity and, thus, a bias:\n\n?bias =\nc12\n\n4mAg\n(43)\n\n\n\n338 I. Rapoport and D. Choukroun\n\nThis result, originally presented in [6, p.117], indicates the relation between the\ngyroscope bias and the unbalance in the structural damping. This term may\nvary with the temperature. As a result, the bias value might vary during the\ngyro operation time. Simulations show that the performance measures eC , eS , e?\nhardly changed, as compared with the ideal case (see Table 3), meaning that the\napproximate and the full model remain very close. Hence, the approximate model\ncan easily demonstrate the effect of c12 on the gyro bias, while such an analysis\nwould not be as straightforward using the full model.\n\n4.2 Bandwidth\n\nThe approximate model for the in-phase amplitude, Yc(t), is rewritten here for\nconvenience, assuming no frequency mismatch (? = 0), no damping unbalance\n(c12 = 0), and no feedback forces. In this special case originally presented in [6,\np.114] the resulting dynamical system is\n\nY?c + ?Yc = ?2Ag X0 ? (44)\nThe resulting dynamical system is a 1st order low-pass filter with the following\nbandwidth:\n\nBWOL =\n?y\n2Qy\n\n(45)\n\nTypical values for the drive frequency ?x and the quality factor vary around\n2\u00d7 105 [rad/sec] and 4\u00d7 104, respectively. Hence, a typical bandwidth in open-\nloop is around the value of 2 [rad/sec]. The open-loop dynamics is thus expected\nto have a narrow band. The associated long settling time results in unpractical\ngyro output time response characteristics during quick dynamics. In order to aug-\nment the gyroscope bandwidth a closed loop architecture with a proper feedback\ncontrol design is usually exploited.\n\n4.3 Importance of the Quadrature Loop Control\n\nWhen there is no frequency mismatch (?\nx\n= ?\n\ny\n), there is no coupling between\n\nthe in-phase and the quadrature signals dynamics, the latter is thus not excited,\nand there is no need to cancel it. But when the coupling exists, Yc will not only\nreact to the \u201ccorrect\u201d signal in ?, but also to the disturbance\n\n? Ys =\n(?2\n\ny\n? ?2\n\nx\n)\n\n2?\nx\n\nYs ? (?y ? ?x)Ys (46)\n\nFor even a small frequency mismatch of a few Hertz, the contribution of the above\ncoupling term can be stronger than that of Yc on itself. Excited by the permanent\ninput due to X0, the vibration Ys will enter, via the coupling term, the dynamics\nof Yc and act as a perturbation. It is thus essential to properly address the\nquadrature effect. Controlling the quadrature term might be achieved by either\ncanceling the value of Ys or by creating a decoupling between the dynamics of\nYs and Yc.\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 339\n\n4.4 Closed-Loop Design and Response to Noisy Inputs\n\nIn this section we show how the approximate model can be conveniently ap-\nplied to investigate the impact of the disturbances and noises on the response.\nLet ms(t) and mc(t) denote input perturbations that are added to the control\nforces FYs(t) and FYc(t), respectively. They are essentially mechanical-thermal\nnoises, modeled as white noise. Let ns(t) and nc(t) denote output noises, which\nare added to the signals coming from the in-phase and from the quadrature\nloops. They essentially consist of electronic noise from measurement electronics\nand are modeled as white noise. The approximate model is re-written here for\nconvenience:\n\nY?s + ?Ys + ?Yc = ? ?k12X0 + ?FYc +ms(t) (47)\nY?c + ?Yc ? ?Ys = ?\n\n[ c12\n2m\n\n+ 2Ag?(t)\n]\nX0 ? ?FYs +mc(t) (48)\n\nYs,m(t) = Ys(t) + ns(t) (49)\n\nYc,m(t) = Yc(t) + nc(t) (50)\n\nSince the influence of the mechanical-thermal noise has been studied in previous\nworks [1], we focus our discussion on the investigation of the measurement elec-\ntronic noise impact. A conventional feedback loop architecture consists in closing\nseparately the loops for the in-phase and for the quadrature signals. Thus, the\ndynamics of Ys and Yc will be controlled via the input signals FYc and FYs, re-\nspectively. The transfer functions from the noises ns(t) and nc(t) to the gyro\noutput, i.e. the measured angular velocity, ?? will be investigated next. Assume\nfor simplicity that proportional feedbacks are applied in both loops, with gains\nKs and Kc, i.e.\n\nFYs = Kc2?xmYc,m = Kc2?xm(Yc + nc) (51)\n\nFYc = Ks2?xmYs,m = Ks2?xm(Ys + ns) (52)\n\nand assume that the thermal-mechanical noises are zero. Then the measured\nangular velocity is expressed as follows:\n\n??(s) =\n?Kc\n2AgX0\n\n(s+ ?+Ks)(s+ ?) + ?\n2\n\n(s+ ?+Ks)(s+ ?+Kc) + ?2\nNc(s) (53)\n\n+\nKsKc?\n\n2AgX0\n\n1\n\n(s+ ?+Ks)(s+ ?+Kc) + ?2\nNs(s) (54)\n\n+\n(s+ ?+Ks)Kc\n\n(s+ ?+Ks)(s+ ?+Kc) + ?2\n?(s) (55)\n\nIn order to understand the impact of the input noises, a numerical investigation\nof the corresponding frequency response gains is presented next. The follow-\ning values were chosen: ? = 3, ? = 10 (corresponding to a frequency mismatch\n\n\n\n340 I. Rapoport and D. Choukroun\n\nof 10 [rad/sec]). The feedback gain for the in-phase loop, Kc, is chosen equal\nto 628. This ensures that the closed-loop bandwidth increase to approximately\n628 [rad/sec]. The following values of Ks were investigated: 0, 1, 10, 100, 1000.\nThe noises nc(t) and ns(t) are assumed white, identically distributed, uncorre-\nlated one another. Figure 11 shows the gyroscope closed-loop Bode plots, i.e., it\nshows the transfer function\n\n??(s)\n\n?(s)\n= 628\n\n(s+ 3 +Ks)\n\n(s+ 3 +Ks)(s+ 631) + 100\n(56)\n\nFigure 11 shows that the Bode gain is positively impacted by the increase in the\nquadrature control gain. The higher is the value of Ks, the closer is the Bode\ngain to 1 (0 dB). Figure 12 depicts several Bode plots of the transfer function\nfrom Nc(s) to ??(s), which is expressed as\n\n(\n? 1\n7.5\n\n10?7\n)\n\n??(s)\n\nNc(s)\n= 628\n\n(s+ 3 +Ks)(s+ 3) + 100\n\n(s+ 3 +Ks)(s+ 631) + 100\n(57)\n\nfor each Ks. For high values of Ks, the behavior is satisfactory with relatively\nlow values of the Bode gain. On the other hand, lower values in the gain Ks\nyield high values in the Bode gain at low frequencies, resulting in a poor gy-\nroscope drift performance. Notice that this phenomenon was observed in [10],\ntogether with the idea that the level of the low frequencies gain is related to the\ndifference between ?\n\nx\nand ?\n\ny\n. This phenomenon clearly emphasizes the need\n\nto design efficient quadrature loop control. In addition, Fig. 11 illustrates the\nknown phenomenon of noise amplification due to feedback. The magnitude Bode\nplot features a lead compensation effect above the open-loop crossover frequency\nand until the closed-loop crossover frequency. When applied to the measurement\nwhite noise, after being integrated, this element re-creates a white noise, which\nbecomes a gyro measurement error. Above the closed-loop crossover frequency,\nit is common practice to add a low-pass filter in order to avoid unnecessary noise\namplification. Figure 13 presents the same type of plots but for the quadrature\ncomponent of the measurement error, ns(t). Its transfer function is\n\n(\n? 1\n7.5\n\n10?8\n)\n\n??(s)\n\nNs(s)\n= 628\n\nKs\n(s+ 3 +Ks)(s+ 631) + 100\n\n(58)\n\nFigure 13 illustrates the limitation attached to the increase of the control gain\nKs: the measured angular velocity will include more high frequencies (noise)\nsince an increase of Ks increases the bandwidth. Figure 14 presents the Bode\nplots for the equivalent total transfer function from the measurement noises,\nnc(t) and ns(t). Since these noises are assumed independent and identically\ndistributed, the resulting Bode plot was obtained as the root-sum-of-squares of\nthe two previous Bode plots.\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 341\n\n0 0.05 0.1 0.15 0.2 0.25 0.3 0.35\n\n?6\n\n?5\n\n?4\n\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\nx 10\n\n?9\n\ntime  [sec]\n\nY c\n [\nm]\n\n \n\n \n\nFull Model\nApproximate Model\n\n0 0.05 0.1 0.15 0.2 0.25 0.3 0.35\n?5\n\n0\n\n5\n\n10\n\n15\n\n20\nx 10\n\n?3\n\ntime  [sec]\n\n??\n [\nra\nd/\nse\nc]\n  \n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 1. Comparison of the Full and Approximate models. Time histories of the in-phase\namplitudes, Yc, and of the angular velocity measurement errors. Ideal case: c12 = k12 =\n?x ? ?y = 0. The signals present the same transient, stay very close to each other, and\nthe measurement errors converge to small values.\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?35\n\n?30\n\n?25\n\n?20\n\n?15\n\n?10\n\n?5\n\n0\n\nFrequency [rad/sec]\n\nM\nag\n\nni\ntu\n\nde\n [d\n\nB]\n\n \n\n \n\nApproximate Model\nFull Model\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?100\n\n?80\n\n?60\n\n?40\n\n?20\n\n0\n\nFrequency [rad/sec]\n\nPh\nas\n\ne \n[d\n\neg\n]\n\n \n\n \n\nApproximate Model\nFull Model\n\nFig. 2. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the input angular velocity ? to the measured angular velocity\n??. Ideal case: c12 = k12 = ?x ? ?y = 0.\n\n\n\n342 I. Rapoport and D. Choukroun\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?40\n\n?30\n\n?20\n\n?10\n\n0\n M\n\nag\nni\n\ntu\nde\n\n [d\nB\n\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?120\n\n?100\n\n?80\n\n?60\n\n?40\n\n?20\n\n0\n\n P\nha\n\nse\n [d\n\neg\n]\n\nfrequency  [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 3. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the input angular velocity ? to the measured angular velocity\n??. ?x ? ?y = 10 [rad/sec].\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?220\n\n?200\n\n?180\n\n?160\n\n?140\n\n?120\n\n M\nag\n\nni\ntu\n\nde\n [d\n\nB]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?200\n\n?150\n\n?100\n\n?50\n\n0\n\n P\nha\n\nse\n [d\n\neg\n]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 4. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the input angular velocity ? to the quadrature amplitude Ys.\n?x ? ?y = 10 [rad/sec].\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 343\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?20\n\n?10\n\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n M\n\nag\nni\n\ntu\nde\n\n [d\nB]\n\nk\n12\n\n to ?\nm\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?200\n\n?150\n\n?100\n\n?50\n\n0\n\n P\nha\n\nse\n [d\n\neg\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 5. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the parameter k12 to the measured angular velocity ??. ?x? ?y =\n10 [rad/sec].\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?110\n\n?100\n\n?90\n\n?80\n\n?70\n\n M\nag\n\nni\ntu\n\nde\n [d\n\nB\n]\n\nfrequency  [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n60\n\n80\n\n100\n\n120\n\n140\n\n160\n\n180\n\n P\nha\n\nse\n [d\n\neg\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 6. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the parameter k12 to the quadrature amplitude Ys. ?x ? ?y =\n10 [rad/sec].\n\n\n\n344 I. Rapoport and D. Choukroun\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n125\n\n130\n\n135\n\n140\n\n145\n\n150\n\n155\n\n160\n\n165\n M\n\nag\nni\n\ntu\nde\n\n [d\nB]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n80\n\n100\n\n120\n\n140\n\n160\n\n180\n\n P\nha\n\nse\n [d\n\neg\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 7. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the parameter c12 to the measured angular velocity ??. ?x? ?y =\n10 [rad/sec].\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?60\n\n?40\n\n?20\n\n0\n\n20\n\n40\n\n M\nag\n\nni\ntu\n\nde\n [d\n\nB\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?200\n\n?150\n\n?100\n\n?50\n\n0\n\n P\nha\n\nse\n [d\n\neg\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 8. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the parameter c12 to the quadrature amplitude Ys. ?x ? ?y =\n10 [rad/sec].\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 345\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n125\n\n130\n\n135\n\n140\n\n145\n\n150\n\n155\n\n160\n\n165\n M\n\nag\nni\n\ntu\nde\n\n [d\nB]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n80\n\n100\n\n120\n\n140\n\n160\n\n180\n\n P\nha\n\nse\n [d\n\neg\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 9. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the force quadrature amplitude FY s to the measured angular\nvelocity ??. ?x ? ?y = 10 [rad/sec].\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?60\n\n?40\n\n?20\n\n0\n\n20\n\n40\n\n M\nag\n\nni\ntu\n\nde\n [d\n\nB\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?200\n\n?150\n\n?100\n\n?50\n\n0\n\n P\nha\n\nse\n [d\n\neg\n]\n\nfrequency [rad/sec]\n\n \n\n \n\nFull Model\nApproximate Model\n\nFig. 10. Comparison of the full and approximate models. Bode plots of the open-loop\ntransfer function from the force quadrature amplitude FY s to the quadrature amplitude\nYs. ?x ? ?y = 10 [rad/sec].\n\n\n\n346 I. Rapoport and D. Choukroun\n\n?3\n\n?2.5\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\nM\n\nag\nni\n\ntu\nde\n\n (d\nB)\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n?90\n\n?45\n\n0\n\n45\n\nPh\nas\n\ne \n(d\n\neg\n)\n\n \n\n \n\nGyroscope Closed Loop Transfer Function\n\nFrequency  (rad/sec)\n\nK\nYs\n\n =0\n\nK\nYs\n\n =1\n\nK\nYs\n\n =10\n\nK\nYs\n\n =100\n\nK\nYs\n\n =1000\n\nFig. 11. Bode plots of the closed-loop transfer function from the input angular velocity\nto the measured angular velocity. Performances comparison of the approximate model\nfor various values of the quadrature channel control gain.\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n10\n4\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\nFrequency [Hz]\n\nG\nai\n\nn\n\n \n\n \n\nK\nYs\n\n =0\n\nK\nYs\n\n =1\n\nK\nYs\n\n =10\n\nK\nYs\n\n =100\n\nK\nYs\n\n =1000\n\nFig. 12. Bode plots of the closed-loop transfer function from the in-phase measurement\nnoise to the measured angular velocity. Performances comparison of the approximate\nmodel for various values of the quadrature channel control gain.\n\n\n\nInvestigation of a Symmetric Vibrating Gyroscope Characteristics 347\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n10\n4\n\n10\n?6\n\n10\n?5\n\n10\n?4\n\n10\n?3\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\nFrequency [Hz]\n\nG\na\n\nin\n\n \n\n \n\nK\nYs\n\n =0\n\nK\nYs\n\n =1\n\nK\nYs\n\n =10\n\nK\nYs\n\n =100\n\nK\nYs\n\n =1000\n\nFig. 13. Bode plots of the closed-loop transfer function from the quadrature measure-\nment noise to the measured angular velocity. Performances comparison of the approx-\nimate model for various values of the quadrature channel control gain.\n\n10\n?2\n\n10\n?1\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\n10\n4\n\n10\n0\n\n10\n1\n\n10\n2\n\n10\n3\n\nFrequency [Hz]\n\nG\nai\n\nn\n\n \n\n \n\nK\nYs\n\n =0\n\nK\nYs\n\n =1\n\nK\nYs\n\n =10\n\nK\nYs\n\n =100\n\nK\nYs\n\n =1000\n\nFig. 14. Bode plots of the closed-loop transfer function for the total (in-phase and\nquadrature) measurement noise to the measured angular velocity. Performances com-\nparison of the approximate model for various values of the quadrature channel control\ngain.\n\n\n\n348 I. Rapoport and D. Choukroun\n\n5 Conclusion\n\nThis work presented an approximate dynamic model for vibratory gyros. The\nmodel has the merits of simplicity and accuracy. The simplicity allows a relatively\neasy analysis of imperfection effects in the gyro measurement output. It provides\na clear insight on fundamental known phenomenons like the presence of a drift,\nwhich originates in the combined action of structural damping and unmatched\nfrequencies between the drive and the sense channels. The accuracy of the model\nwas thoroughly illustrated vis simulations of the frequency responses of the full\nand the approximate models. It is suggested that this model will prove useful\nin the development of a control strategy for gyro performance improvement, in\nparticular for drift mitigation. A future work will tackle the problem of control\nsynthesis for this type of systems, including a sensitivity analysis with respect\nto the measurement noise.\n\nReferences\n\n1. Yazdi, N., Ayazi, F., Najafi, K.: Micromachined Inertial Sensors. Proceedings of\nthe IEEE 86(8), 1640\u20131659 (1998)\n\n2. Ayazi, F., Najafi, K.: A HARPSS Polysilicon Vibrating Ring Gyroscope. Journal\nof Microelectromechanical Systems 10(2), 169\u2013179 (2001)\n\n3. Brady, T., Buckley, S., Dennehy, C.J., Gambino, J., Maynard, A.: The Intertial\nStellar Compass: a Multifunction, Low Power, Attitude Determination Technology\nBreakthrough. In: AAS-2003-003, 26th AAS Guidance and Control Conference\nAdvances in the Astronautical Sciences, Guidance and Control 2003, Breckenridge,\nCO, February 5\u20139, vol. 113, pp. 39\u201356 (2003)\n\n4. Leland, R.P.: Mechanical Thermal Noise in MEMS Gyroscopes. IEEE Sensors Jour-\nnal 5(3), 493\u2013500 (2005)\n\n5. Roberts, J.B., Spanos, P.D.: Stochastic Averaging: an approximate method of solv-\ning random vibration problems. Int. J. Non-linear Mech. 21(2), 111\u2013134 (2007)\n\n6. Putty, M.W.: A Micromachined Vibrating Ring Gyroscope, Ph.D. Dissertation,\nFaculty of Electrical Engineering, University of Michigan, Ann Arbor, MI (1995)\n\n7. Gallacher, B.J., Burdess, J.S., Harish, K.M.: A Novel Excitation Scheme for MEMS\nGyroscopes Using Parametric Pumping for Near Inertial Grade Performance. Proc.\nof SPIE 6113, 611305 (2006)\n\n8. Zheng, Q., Dong, L., Gao, Z.: Control and Rotation Rate Estimation of Vibrational\nMEMS Gyroscopes. In: IEEE International Conference on Control Applications,\nOctober 1-3 (2007)\n\n9. Izadian, A., Dawson, J., Famouri, P.: Input-Output Synchronization for Bias Drift\nReduction oF MEMS Gyroscopes. In: American Control Conference, June 11-13,\npp. 3751\u20133754 (2008)\n\n10. Gorman, J., Shapiro, B. (eds.): Feedback Control of MEMS to Atoms, Chapter 8 -\nDissecting Tuned MEMS Vibratory Gyros, Kim,D., M\u2019Closkey, R.T., pp. 211\u2013267.\nSpringer (2012)\n\n\n\nPart III \nSpacecraft Guidance,  \n\nNavigation and Control \n \n\n  \n\n\n\nZero ?v Solution to the Angles-Only Range\n\nObservability Problem during Orbital Proximity\nOperations\n\nItzik Klein1,? and David K. Geller2,??\n\n1 Rafael, P.O., Box 2250, Haifa 31021\nitzikkl@rafael.co.il\n\n2 Utah State University, Logan, Utah, 84322, USA\ndavid.geller@usu.edu\n\nAbstract. During orbital proximity operations, research has shown that\nangles-only navigation during coasting flight suffers from a lack of range\nobservability. To circumvent this deficiency, previous research has re-\nquired a prior information on the target geometry or the implementa-\ntion of special translational maneuvers. This paper shows that the range\nobservability problem during coasting flight can be solved by properly\nincluding the offset of the camera from the vehicle center-of-mass in\nthe problem formulation, and by applying appropriate vehicle rotations.\nRange observability without translational maneuvers (zero ?v) or a pri-\nori knowledge of the target geometry is clearly demonstrated using a\npseudo 6 degree-of-freedom simulation. Results for v-bar station-keeping,\nflyby orbits, and circumnavigation (football) orbits are presented.\n\nKeywords: Angle Only Navigation.\n\n1 Introduction\n\nMany past space programs have required relative navigation for rendezvous and\nproximity operations including Gemini, Apollo, Soyuz and the Space Shuttle[13],\n[20], [26]. In all of these programs, radar systems were used as the primary rel-\native navigation device. Soyuz used multiple radar systems to determine range,\nrange rate and relative attitude [4]. The Space Shuttle used radar as well as a\nlaser ranging device and a centerline camera for close-in proximity operations\n[14]. In all cases, these radar-based systems are too heavy and power intensive for\nsmaller spacecraft. Recently, a growing interest in autonomous rendezvous and\ndocking[10], [25],[9],[7],[8],[24],[15] has produced a series of experimental space-\ncraft in an attempt to develop rendezvous and proximity operations technology\nthat would be more appropriate for smaller unmanned spacecraft [6].\n\n? Dr., Research Fellow, Rafael, itzikkl@rafael.co.il\n?? Visiting Professor, Technion\u2019s Department of Aerospace Engineering.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 351\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_19\n\n\n\n352 I. Klein and D.K. Geller\n\nThe eXperimental Satellite System -11 (XSS-11) was a micro-satellite used\nto successfully demonstrate rendezvous and proximity operations relying pri-\nmarily on a Light Detection and Ranging (LIDAR) sensor for relative position\nmeasurements [1].\n\nThe Demonstration of Autonomous Rendezvous Technology (DART) space-\ncraft [17] was equipped with a camera and a laser to illuminate reflectors placed\non the target. Unfortunately software errors caused DART to collide with the\ntarget satellite before it could accomplish its mission objectives.\n\nAnother vehicle, Orbital Express [22], was equipped with three cameras, the\nsame laser based sensor used on DART, and a laser range finder. Orbital Express\nwas able to successfully complete several proximity and docking operations [3].\n\nA more recent example includes the European Space Agency (ESA) Auto-\nmated Transfer Vehicle (ATV) [16]. The ATV program is designed to perform\nautomated phasing, approach, rendezvous and docking to the ISS, followed by\ndeparture and deorbit maneuverings [11]. Recently, three ATVs successfully com-\npleted their missions and several more ATVs are planned to be launched in the\nnear future.\n\nUsing a camera is one of the simplest and useful sensors to perform relative\nnavigation. It is a simple low-cost, low power, and low mass/volume solution to\nthe relative orbital navigation problem. Such an approach is known as angles-\nonly relative navigation for rendezvous and proximity operations.\n\nAngles-only navigation relies on the ability of a sensor to measure the azimuth\nand elevation angles to an object of interest relative to the sensor location. By\nmeasuring these angles under the right circumstances, the relative position and\nvelocity of the object may be estimated [21,18]. However, angles-only navigation\ngenerally lacks the ability to determine the range between the sensor and the\nobject of interest. This drawback has been well demonstrated [23]. By measur-\ning the azimuth and elevation angles to the target, the LOS from the camera to\nthe target satellite can be determined, but it is generally not possible to deter-\nmine where the chaser is located along the LOS, even when accounting for the\ndynamics of the problem.\n\nIn the recent past, two approaches have been suggested to overcome this range\nobservability problem. In the first approach, a nominal or special translational\nmaneuver is executed to help determine the unknown range parameter [19,5].\nSuch translational maneuvers however require additional propellant and increase\nsatellite?v requirements. In the second approach, knowledge of target spacecraft\nsize, shape, or location of known features is used to determine the unknown\nrange parameter. This however requires a priori information about the target\nspacecraft [24].\n\nIn this paper, a solution to the range observability problem that does not\nrequire translational maneuvers nor a priori knowledge of target spacecraft ge-\nometry is demonstrated. The proposed solution includes small vehicle rotational\nmaneuvers and a camera center-of-mass offset in the formulation of the estima-\ntion problem. To date, all angles-only navigation results have assumed that the\ncamera is either located at the vehicle center-of-mass or that the chaser/target\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 353\n\nseparation distances are sufficiently large that the center-of-mass to camera offset\nis of no significance. This paper will show that by properly including the camera\noffset in the problem formulation, the range observability problem is solved with\nsmall vehicle rotations.\n\nIn [19] it is shown how range observability is achieved in terrestrial hiking\napplications. Hikers obtain a bearing measurement to a distant landmark and\ndraw a line on a map emanating from the landmark representing all possible hiker\npositions. When a second landmark is available, a second line is drawn, and the\nhiker location is determined by the intersection of the two lines. In the absence\nof a second landmark (as is the case in rendezvous and proximity operations),\nthe hikers can use a pedometer or knowledge of the length of their stride to\nwalk for a known distance normal to the line-of-sight of the first landmark. By\ntaking a second bearing measurement, only one position will satisfy the known\ndistance they walked. In this way, the hiker can estimate position, using a single\nlandmark.\n\nThis hiker analogy is also valid for rotational maneuvers where the distance\ntraveled by the camera between bearing measurements is determined by the\ncamera offset and a known vehicle rotational maneuver. In this way, it will be\nshown that when the vehicle separation distances are small (e.g., < 100 m), very\naccurate estimates of the range can be achieved. Results of pseudo 6-degree-of-\nfreedom simulations are presented for v-bar station-keeping, flyby orbits, and\ncircumnavigation orbits, and the sensitivity of the navigation error to key prob-\nlem parameters is determined.\n\n2 Problem Formulation\n\n2.1 The Hill Clohessy Wiltshire Equations\n\nThe Hill Clohessy Wiltshire (HCW) equations [2] represent the chaser satellite\ndynamics relative to a target satellite in a near-circular orbit:\n\nx? = ?2?z? + ax\ny? = ??2y + ay\n\nz? = 3?2z + 2?x?+ az\n\n(1)\n\nwhere [ax ay az ]T is the chaser thrust vector, and ? is the target orbital angular\nrate given by\n\n? =\n\n?\n?\n\na3\n(2)\n\n? = 398601[km3/s2] is the Earth gravitational parameter, and a is the semi-\nmajor axis. The coordinate system associated with the HCW equations is the\nLocal Vertical Local Horizontal (LVLH) coordinate frame depicted in Figure 1.\nThe origin is located at the center-of-mass of the target satellite, the x-axis is the\ndownrange or local horizontal direction, the y-axis is the cross-track direction,\nand the z-axis is the altitude or local vertical direction.\n\n\n\n354 I. Klein and D.K. Geller\n\nFig. 1. LVLH coordinate frame\n\nThe HCW equations (1) can also be written in state-space form where the\nstate vector X = [x y z x? y? z? ]T consist of the relative position and velocity\nvectors. Thus, the state-space model is\n\nX? = AX +Bu (3)\n\nwhere\n\nA =\n\n[\n03 I3\nA21 A22\n\n]\n, A21 =\n\n?\n?0 0 00 ??2 0\n0 0 3?2\n\n?\n? A22 =\n\n?\n? 0 0 ?2?0 0 0\n2? 0 0\n\n?\n? (4)\n\nB =\n\n[\n03\nI3\n\n]\nu =\n\n[\nax ay az\n\n]T\n(5)\n\nIn the absence of thrust, the HCW equations have an analytic closed form solu-\ntion [23]\n\nX = ?X0 (6)\n\nwhere ? is the associated state transition matrix and X0 is the initial conditions\nvector.\n\n2.2 Angles-Only Navigation\n\nFor angles-only navigation problems, the relative azimuth ? and elevation ?\nangles are commonly modeled by assuming that the camera is mounted at the\nchaser center-of-mass as shown in Figure 2. In this case, ? and ? are defined by\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 355\n\ntan (?) =\ny\n\nx\ntan (?) =\n\nz?\ny2 + x2\n\n(7)\n\nwhere x, y, and z are the components of the relative position between the target\ncenter-of-mass and the chaser satellite center-of-mass in the LVLH frame as given\nin Eq. (1).\n\nFig. 2. Azimuth and elevation angles in LVLH coordinate frame\n\n3 The Range Observability Problem\n\n3.1 Range Observability without a Camera Offset\n\nWhen the camera is assumed to be mounted at the the chaser center-of-mass,\nthe azimuth and elevation angles defined in Figure 2 can be recast in the form\nof a line-of-sight (LOS) unit vector measurement ir,\n\nir =\n\n?\n? cos (?) cos (?)cos (?) sin (?)\n\nsin (?)\n\n?\n? (8)\n\nSimilarly, the time-varying azimuth ? (?) and elevation ? (?) measurements, over\nan observation time, will produce a LOS time-history ir (?),\n\nir (?) =\n\n?\n? cos [? (?)] cos [? (?)]cos [? (?)] sin [? (?)]\n\nsin [? (?)]\n\n?\n? (9)\n\nThe time-history of the LOS unit vector is simply the relative position vector\ndivided by the range separating the two spacecraft\n\nir(?) =\nr (?)\n\n?r (?)? (10)\n\n\n\n356 I. Klein and D.K. Geller\n\nSince the solution to the linear HCW equations given in Eq. (6) can be written\nin the form [\n\nr (?)\nv (?)\n\n]\n=\n\n[\n?rr (?) ?rv (?)\n?vr (?) ?vv (?)\n\n] [\nr0\nv0\n\n]\n(11)\n\nthe time-history of the LOS unit vector in Eq. (10) can be written as\n\nir (?) =\n?rr (?) r0 + ?rv (?) v0\n??rr (?) r0 + ?rv (?) v0? (12)\n\nThe observability problem asks whether or not the initial position and velocity\nof the chaser can be uniquely determined from the time-history of the LOS unit\nvector, i.e. from angle measurements alone. To answer this question, Woffinden\nand Geller [23] show that if the initial conditions are scaled by an arbitrary\nvalue, ?, the resulting LOS time-history, i?r (?), is no different than the LOS\ntime-history ir (?) produced by the unscaled initial conditions\n\ni?r (?) =\n?rr (?) ?r0 + ?rv (?) ?v0\n\n??rr (?) ?r0 + ?rv (?) ?v0? =\n?rr (?) r0 + ?rv (?) v0\n??rr (?) r0 + ?rv (?) v0? = ir (?) (13)\n\nThus, the initial position and velocity of the chaser cannot be uniquely de-\ntermined from the time-history of the LOS unit vector, and, in particular, the\nrange to the target is unobservable.\n\n3.2 Range Observability with a Camera Offset\n\nThe purpose of this paper is to show that the state vector, including the range,\nis observable when the camera is offset from the chaser center-of-mass. Thus, the\nkey to demonstrating observability is to first properly model the position of the\ncamera with respect to the center-of-mass of the chaser.\n\nIf the camera is located at the center-of-mass of the chaser, the position vector\nof the camera with respect to the target in the camera frame rCamerac is defined\nby\n\nrCamerac = T\nBody?CameraTLV LH?BodyrLV LH (14)\n\nwhere rLV LH denotes the relative position of the chaser center-of-mass with\nrespect to the target satellite center-of-mass in the LVLH frame, TLVLH?Body\n\nis the transformation matrix from the LVLH frame to the body frame, and\nTBody?Camera is the transformation matrix from the body frame to the camera\nframe.\n\nNow, let the position of the camera with respect to the chaser center-of-mass\nin the chaser body frame be defined as\n\ndBody =\n[\ndx dy dz\n\n]T\n(15)\n\nWith a camera offset, Eq. (14) becomes\n\nrCamerac = T\nBody?CameraTLVLH?BodyrLV LH + TBody?CameradBody (16)\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 357\n\nWithout loss of generality, it is assumed that\n\nTBody?Camera = I (17)\n\nand Eq. (16) reduces to\n\nrCamerac = r\nBody\nc = T\n\nLVLH?BodyrLV LH + dBody (18)\n\nDenoting the position of the camera with respect to the target in the LVLH\nframe simply as rc, we have\n\nrc = r\nLV LH\nc = r\n\nLV LH + TBody?LVLHdBody (19)\n\nThe corresponding azimuth and elevation relative angles are then given by\n\ntan (?c) =\n[rc]y\n[rc]x\n\ntan (?c) =\n[rc]z?\n\n[rc]\n2\ny + [rc]\n\n2\nx\n\n(20)\n\nNotice that when the camera offset vector is zero, the angles in Eq.(20) reduce\nto those without the camera offset as defined in Eq.(7).\n\nAdditionally, the time varying azimuth ?c (?) and elevation ?c (?) measure-\nments, over an observation time, will produce a LOS time-history irc (?),\n\nirc (?) =\n\n?\n? cos [?c (?)] cos [?c (?)]cos [?c (?)] sin [?c (?)]\n\nsin [?c (?)]\n\n?\n? (21)\n\nSince the time-history of the LOS unit vector is\n\nirc(?) =\nrc (?)\n\n?rc (?)? (22)\n\nEq. (11) can again be utilized to produce\n\nirc (?) =\n?rr (?) r0 + ?rv (?) v0 + T\n\nBody?LVLHdBody\n\n??rr (?) r0 + ?rv (?) v0 + TBody?LVLHdBody? (23)\n\nThe aim of this paper is to show that the position/velocity state vector, in-\ncluding the range, is observable when the camera offset dBody is non-zero, i.e.,\nthat there exists only one set of initial conditions, r0, v0, that will produce the\nobserved LOS time-history, irc (?).\n\n4 Extended Kalman Filter\n\nBased on the dynamics model and measurement model in Section 2, an extended\nKalman filter is developed for this problem. The dynamic model of the filter is\nbased upon the HCW equations in Eq. (3), hence it is a linear model. However,\nthe measurement model is based on the nonlinear angle measurements as given\n\n\n\n358 I. Klein and D.K. Geller\n\nin Eq.(20). The first step in the Kalman filter is the prediction of the state and\nits associated covariance as given by [27]:\n\nThe state and state error covariance propagation equations are\n\nx??k+1 = ?x?\n+\nk (24)\n\nP?k+1 = ?P\n+\nk ?\n\nT +Qk (25)\n\nwhere Pk is the state error covariance matrix, ? is the state transition matrix,\nand Qk is the power-spectral density of the process noise. The state and state\nerror covariance update equations are given by\n\nx?+k+1 = x?\n?\nk+1 +Kk+1\n\n[\nzk+1 ? h(x??k+1)\n\n]\n(26)\n\nP+k+1 = (I ?Kk+1Hk+1)P?k+1 (27)\nwhere the measurement zk+1 consist of the angles ?c and ?c, and the estimated\nmeasurements h(x??k+1) are given by Eq. (20).\n\nThe Kalman gain is given by\n\nKk+1 = P\n?\nk+1H\n\nT\nk+1\n\n(\nHk+1P\n\n?\nk+1H\n\nT\nk+1 +Rk+1\n\n)?1\n(28)\n\nwhere the superscript (\u00b7)? represents the predicted quantity (before measure-\nment update), the superscript (\u00b7)+ represents the updated quantity (after mea-\nsurement update). The covariance of the measurement noise is denoted by Rk+1.\n\nThe process noise covariance matrix Qk can be obtained by\n\nQk =\n\n\u02c6\n?(?)BQaB\n\nT?T (?)d? (29)\n\nA trapezoidal integration of the above equation yields [12]:\n\nQk ? 1\n2\n\n[\n?kBQaB\n\nT?Tk +BQaB\nT\n]\n?t (30)\n\nwhere\n\nQa = qaI3\u00d73 (31)\n\nThe corresponding measurement sensitivity matrix is obtained by differenti-\nating the relative azimuth and elevation angles given Eq. (20) with respect to\nthe relative position vector\n\nH =\n\n[ ??\n?rc\n??\n?rc\n\n]\n=\n\n?\n??\n\n? [rc]y\n[rc]\n\n2\nxy\n\n[rc]x\n[rc]\n\n2\nxy\n\n0 03x3\n\n? [rc]x[rc]z?rc?2?[rc]2xy ?\n[rc]y [rc]z\n\n?rc?2\n?\n\n[rc]\n2\nxy\n\n?\n[rc]\n\n2\nxy\n\n?rc?2 03x3\n\n?\n?? (32)\n\nwhere [rc]\n2\nxy = [rc]\n\n2\nx + [rc]\n\n2\ny.\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 359\n\nThe initial state error covariance, P0, will be defined in the next section. The\ncorresponding initial state of the true orbit is\n\nX0 = x\nOrbit\n0 + ?x0 (33)\n\nwhere xOrbit0 is the exact initial condition of the desired orbit, and ?x0 is a\nrandom initial condition with zero mean and covariance P0.\n\nTo explore the observability of angles-only navigation, with and without cam-\nera offset, we examine the observability Gramian of the linearized system and\nboth the variance of the estimated range error and the variance of the position\nerror perpendicular to the LOS.\n\nThe observability Gramian is defined as[12]:\n\nM =\n\nN?\ni=1\n\n?T (i, 0)HT (i)H(i)?(i, 0) (34)\n\nThe variance of the estimated range error, i.e., the LOS position error variance\nis given by\n\n?2los = HlosPH\nT\nlos, Hlos =\n\n[\nrTc / ?rc? 01x3\n\n]\n(35)\n\nand the variance of the position error perpendicular to the LOS\n\nPperp = HperpPH\nT\nperp, Hperp =\n\n[\nI3\u00d73 ? (rc) (rc)T / ?rc?2 03\u00d73\n\n]\n(36)\n\n?2perp = Tr (Pperp) (37)\n\n5 Relative Orbit Types\n\nIn orbital relative motion there are natural relative trajectories that are very\nuseful for rendezvous and inspection. In this research we employ three of them:\n1) v-bar, 2) flyby and 3) football orbits.\n\n5.1 V-bar Station-Keeping\n\nV-bar station-keeping refers to the case where the chaser is station-keeping on the\ntarget local-horizontal in the direction of the inertial velocity vector at a position\nforward or behind the target. Figure 3 presents a v-var approach scenario from\nstep 1 to 4, while v-bar station-keeping may be observed when the chaser is fixed\nin one of the points relative to the target\n\nThe initial position/velocity state vector for this scenario is:\n\nXvbar0 =\n[\nx0 0 0 0 0 0\n\n]T\n, x0 = 1m, 10m (38)\n\n\n\n360 I. Klein and D.K. Geller\n\nFig. 3. V-bar approach scenario for rendezvous and docking\n\n5.2 Flyby Orbit\n\nIn the flyby trajectory, the chaser approaches or moves away from the target\nalong a linear trajectory above or below the target as observed in the LVLH\nframe. This trajectory requires the chaser to be in a co-elliptic inertial orbit\nwith the target as shown in Figure 4. The initial state vector for this scenario is:\n\nXflyby0 =\n[\nx0 0 z0\n\n3\n2h0? 0 0\n\n]T\n, z0 = 1m, or 10m (39)\n\nwhere x0 is the initial required downrange position.\n\n2\n\nInertial LVLH\n1\n\n3\n\n4\n\n3 24 1\n\nAltitude\n\nDownrange\n\nz0\n\nz0\n\nFig. 4. Flyby, co-elliptic approach scenario\n\n5.3 Circumnavigating (Football) Orbit\n\nWhen the target and chaser have the same orbital periods, a repeating relative\nmotion of the chaser near the target occurs. This is also known as a football or-\nbit. In the football orbit, the chaser is placed on the v-bar at a given downrange\ndistance from the target with an initial velocity required for a football orbit\ntrajectory as shown in Figure 5. This unique elliptical relative motion is often\nemployed to keep the chaser in a holding pattern downrange from the target for\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 361\n\nstation keeping, or in a circumnavigation orbit for target inspections. The initial\nposition/velocity state vector for this scenario is:\n\nXfootball0 =\n[\nx0 0 0 0 0\n\n1\n2x0?\n\n]T\n, x0 = 1m, or 10m (40)\n\n?v\n\n?v\n\n2\n\nInertial\nLVLH\n\n1\n\n3\n\n4\n\n3\n\n2\n\n4\n\n1\n\nDownrange\n\nAltitude\n\nTarget\n\nChaser\n\nTarget\n\nChaser\n\nFig. 5. Circumnavigation football orbit scenario\n\n5.4 Initial Relative Position Errors\n\nThe variances of the initial relative state errors are the same for all of the above\norbits and depend only on the initial relative distance of target. When the initial\nchaser location is 1m away from the target, the initial state error covariance is\n\nP0,1m = Diag\n[\n(0.1m)2 (0.1m)2 (0.1m)2 (10?4m/s)2 (10?4m/s)2 (10?4m/s)2\n\n]\n(41)\n\nWhen the initial chaser location is 10m away from the target, the initial state\nerror covariance is\n\nP0,10m = Diag\n[\n(1m)2 (1m)2 (1m)2 (10?3m/s)2 (10?3m/s)2 (10?3m/s)2\n\n]\n(42)\n\nWhile these initial state errors are not associated with any particular mission\nor navigation system, they are reasonable and primarily used to demonstrate\nrange observability. Values for the initial true trajectory errors are obtained by\nsampling the above covariance matrices.\n\n6 Range Observability under Vehicle Rotation\n\nThe observability problem was examined for three types of relative motion or-\nbits \u2013 v-bar station-keeping, flyby orbits, and football orbits (also known as a\ncircumnavigation orbits). In each case, the chaser was commanded to rotate per-\npendicular to the LOS, back and forth, through a prescribed angle for a period\n\n\n\n362 I. Klein and D.K. Geller\n\nof 10 minutes, a time period sufficient to determine whether or not the range is\nobservable.\n\nFor each type of orbit, a sensitivity analysis was conducted for a range of\nseveral key problem parameters. The parameters and their assigned values are\nsummarized in Table 1. The chaser distance is the initial range between the\nchaser center-of-mass and the target center-of-mass. The measurement noise,\n?Noise, is the 1-? value of the camera angle measurement noise. The camera offset\nis the distance of the camera from the chaser center-of-mass . The maximum\nchaser rotation angle, Crotation, is the maximum chaser rotation angle. The time\nto rotate, Ctime, is the time it takes for the camera to complete its maximum\nturn. These last two parameters define the angular rotation rate of the chaser.\nIn all cases, the power-spectral density of the acceleration process noise is given\nby qa = 10\n\n?10km2/sec3. This value of qa produces approximately 6m meters of\nposition error in LEO during the 10 minutes rotation period.\n\nTable 1. Sensitivity analysis parameters\n\nType Values\n\nOrbit type v-bar, flyby, football\n\nChaser distance [m] 1, 10\n\nMeasurement noise [rad], 1? 0.001, 0.0001\n\nCamera offset [m] 0.1, 0.2, 0.5\n\nMaximum chaser rotation angle [deg] 10, 45\n\nTime to rotate [sec] 30, 60\n\nTo quantify navigation performance, the LOS position error variance and the\nvariance of the position error perpendicular to the LOS are employed as measures\nof range observability. When the camera is located at the chaser center-of-mass,\nthe range is not observable and the LOS position error variance is constant or\ndiverging. When the camera is offset from the chaser center-of-mass, the LOS\nposition error variance approaches zero indicating range observability. This is\nverified by examining the condition number of the observability Gramian..\n\nTo show this, 10 minute simulations were run. Perfect initial conditions were\nused as defined for each orbit in Eqs. (38)-(40). Additionally, the measurement\nnoise covariance in the Kalman filter was assigned, but the actual measurements\nwere perfect measurements. The chaser rotation sequence is composed of four\nrotations: a positive rotation about the body y-axis, , a positive rotation about\nthe body z-axis, and equal but opposite rotation about the body y-axis, and a\nfinal equal but opposite rotation about the body z-axis.\n\n6.1 V-bar Station-Keeping\n\nFor this first scenario,Crotation = 10 deg,Ctime = 30 sec, and ?Noise = 0.001 rad.\nThe chaser is initial located on the v-bar at a distance 1m from the target or 10m\nfrom the target. Figure 6 shows the 3-? LOS position estimation errors (left),\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 363\n\nthe 3-? position estimation errors perpendicular to the LOS (middle) and log of\nthe condition number of the observability Gramian matrix (right). The results\nfor the 1m v-bar position are shown on the top and the results for the 10m v-bar\nposition are shown on the bottom. When the camera offset is zero (dark blue\ncurves) the LOS position error diverges regardless of the chaser distance from\nthe target. On the other hand, when the camera offset relative to the chaser\ncenter-of-mass is non-zero, the LOS position error convergences as the chaser\nrotations are employed, regardless of the distance from the target. That is, the\nrange becomes observable. As the camera offset is increased, the LOS position\nerror decreases further providing improved range estimation. A small penalty\nfor obtaining range observability is reflected in a slightly increased variance of\nthe position error perpendicular to the LOS compared with the zero offset case.\nThe results of the Gramian condition number support the observed behavior of\nthe LOS position error (range) variance, and the conclusion that the range is\nobservable.\n\n0 100 200 300 400 500 600\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n0.35\n\n0.4\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\nTime [sec]\n\n0.5m Offset\n0.2m Offset\n0.1m Offset\nZero Offset\n\n0 100 200 300 400 500 600\n0\n\n0.001\n\n0.002\n\n0.003\n\n0.004\n\n0.005\n\n0.006\n\n0.007\n\n0.008\n\n0.009\n\n0.01\n\n3 \n?\n\nP\ner\n\np \n[m\n\n]\n\nTime [sec]\n0 100 200 300 400 500 600\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\n22\n\nTime [sec]\n\nLo\ng \n\n o\nf C\n\non\ndi\n\ntio\nn\n\nN\num\n\nbe\nr  \n\n   \n   \n\n   \n\n0 100 200 300 400 500 600\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\nTime [sec]\n\n0.5m Offset\n0.2m Offset\n0.1m Offset\nZero Offset\n\n0 100 200 300 400 500 600\n0\n\n0.005\n\n0.01\n\n0.015\n\n0.02\n\n0.025\n\n0.03\n\n3 \n?\n\nP\ner\n\np \n[m\n\n]\n\nTime [sec]\n\n0 100 200 300 400 500 600\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\n22\n\n24\n\nTime [sec]\n\nLo\ng \n\n o\nf C\n\non\ndi\n\ntio\nn\n\nN\num\n\nbe\nr  \n\n   \n   \n\n   \n\nFig. 6. V-bar station-keeping position estimation performance. LOS 3 ? ? position\nestimation errors (left), the 3 ? ? position estimation errors perpendicular to LOS\n(middle) and log of the condition number of the observability Gramian matrix (right)\nare shown as a function of the v-bar position, 1m (top), and 10m (bottom), and the\ncamera offset.\n\nNext, the effect of the rotation angle and the rotation rate on navigation per-\nformance was examined. In all cases, the camera measurement noise is ?Noise =\n0.001rad and the chaser is on the v-bar, 1m from the target. In addition, three\ndifferent values for the camera offset are selected. The results in Figure 7 show\nthat larger chaser rotation angles improve the range observability. This is due\nto the fact that the larger rotation angles provide a larger camera displacement\nand a better baseline for the (pseudo-stereo) angle measurements. Figure 7 also\n\n\n\n364 I. Klein and D.K. Geller\n\nshows that faster rotation rates improve performance. In this case, the faster\nrotation rates merely provide more useful measurements at large angles. The\neffect of the rotation angle and the rotation rate on the perpendicular error is\nopposite their effect on the LOS position error, i.e., larger rotations and faster\nrotation rates produces slightly larger errors. Finally, it can also be seen that as\ncamera offset is increased, the LOS position variance decreases, while the error\nperpendicular to the LOS variance increases slightly. The above analysis was\nrepeated with the chaser on the v-bar at a position 10m from the target, and\nthe same trends were observed.\n\n 10deg, Slow  10deg, Fast  45deg, Slow  45deg, Fast\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n0.12\n\n0.14\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\n0.1m Offset\n0.2m Offset\n0.5m Offset\n\n 10deg, Slow  10deg, Fast  45deg, Slow  45deg, Fast\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\nLo\ng \n\nof\n C\n\non\ndi\n\ntio\nn \n\nN\num\n\nbe\nr\n\n0.1m Offset\n0.2m Offset\n0.5m Offset\n\nFig. 7. 3? ? LOS position estimation errors (left) and log of the condition number of\nthe observability Gramian matrix (right) at the end of the 10 min simulation with the\nchaser on the v-bar, 1m from the target\n\n6.2 Monte Carlo Results\n\nA subset of the scenarios examined above were re-examined with 800 sample\nMonte-Carlo runs to validate the single run analysis. At the beginning of each\nrun, the initial position and velocity errors were randomly sampled from the\ncovariance matrices given in Eqs. (41)-(42) based on the initial chaser-target\nseparation. The Monte-Carlo results indeed confirmed that range observability\nis achieved with a camera offset and also provided confirmation of the above\nsingle-run analysis.\n\nV-bar Station-Keeping. For example, consider the case where the chaser is\non the v-bar, 1m from the target, and the camera measurement noise is ?Noise =\n0.001rad. Figure 8 shows the final position estimation errors as determined by\nthe the Monte Carlo analysis. These results can be compared to the single-run\nresults in Figure 6 . The Monte Carlo LOS position errors match the single run\nresults very nicely. The Monte Carlo perpendicular position errors are slightly\ndifferent, but nonetheless very small.\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 365\n\n10deg, Fast 45deg,Fast\n0\n\n0.01\n\n0.02\n\n0.03\n\n0.04\n\n0.05\n\n0.06\n\n0.07\n\n0.08\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\n0.1m Offset\n0.5m Offset\n\n10deg, Fast 45deg,Fast\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\nx 10\n\n-3\n\n3 \n?\n\nP\nre\n\np \n[m\n\n]\n\n0.5m Offset\n0.1m Offset\n\nFig. 8. Monte-Carlo results for the v-bar station keeping trajectory. 3?? LOS position\nerrors (left) and 3 ? ? position errors perpendicular to LOS (right) at the end of the\n10 min simulation with the chaser on the v-bar, 1m from the target.\n\nFigure 9 shows the final 3 ? ? position errors as a function of rotation angle\n(10deg/45deg), camera offset (0.1m/0.5m), initial separation (1m/10m), and\nmeasurement noise (0.001rad / 0.0001rad), where the bottom plot is an ex-\npanded view of the upper plot. In all cases, a fast rotation rate is being used.\nThe observed trends are the same observed in the single runs: 1) larger rotation\nangles produce smaller LOS position errors; 2) larger the camera offset produces\nsmaller LOS position errors; 3) smaller measurement noise reduces position and\nvelocity errors, and 4) smaller separation distances produces smaller position\nand velocity errors.\n\nFigure 10 presents 3? ? LOS position errors for eight different cases at the\nend of the 10 min simulation. It is observed that the log of the Gramian matrix\ncondition number trends are the same as the 3 ? ? LOS position errors and\nmentioned earlier.\n\nFlyby Orbit. Figure 11 shows the final 3 ? ? position errors as a function\nof rotation angle (10deg/45deg), camera offset (0.1m/0.5m), and measurement\nnoise (0.001rad/0.0001rad) for a 1m flyby orbit above the target. The trends\nare identical to the results of the single-runs and identical to the results of the\nv-bar Monte Carlo analysis, and the numerical values of the final position errors\nare comparable to previous results.\n\nCircumnavigating (Football) Orbit. Figure 12 shows the final 3?? position\nerrors as a function of rotation angle (10deg/45deg), camera offset (0.1m/0.5m),\nand measurement noise (0.001rad/0.0001rad) for a 1m football orbit as the\nchaser passes in front of the target. The trends are again identical to the re-\nsults of the single-runs and identical to the results of the v-bar Monte Carlo\nanalysis, and the numerical values of the final position errors are comparable to\nprevious results.\n\n\n\n366 I. Klein and D.K. Geller\n\n0.1m,10deg 0.5m,10deg 0.1m,45deg 0.5m,45deg\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\n0.1m,10deg 0.5m,10deg 0.1m,45deg 0.5m,45deg\n0\n\n0.005\n\n0.01\n\n0.015\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\n10m V-bar,?Noise=0.001rad\n\n10m V-bar,?Noise=0.0001rad\n\n1m V-bar,?Noise=0.001rad\n\n1m V-bar,?Noise=0.0001rad\n\nFig. 9. Monte-Carlo results for the v-bar station keeping trajectory. 3?? LOS position\nerrors at the end of the 10 min simulation with the chaser on the v-bar. Bottom plot\nzooms into the lower part of theis an expanded view of the upper plot.\n\n 10deg  45deg \n0\n\n0.01\n\n0.02\n\n0.03\n\n0.04\n\n0.05\n\n0.06\n\n0.07\n\n0.08\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\n0.1m Offset, ?Noise=0.001rad\n\n0.1m Offset, ?Noise=0.0001rad\n\n0.5m Offset, ?Noise=0.001rad\n\n0.5m Offset, ?Noise=0.0001rad\n\nFig. 10.Monte-Carlo results for the v-bar station keeping trajectory. 3?? LOS position\nerrors at the end of the 10 min simulation with the chaser on the v-bar.\n\n 10deg  45deg \n0\n\n0.01\n\n0.02\n\n0.03\n\n0.04\n\n0.05\n\n0.06\n\n0.07\n\n0.08\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\n0.1m Offset, ?Noise=0.001rad\n\n0.1m Offset, ?Noise=0.0001rad\n\n0.5m Offset, ?Noise=0.001rad\n\n0.5m Offset, ?Noise=0.0001rad\n\nFig. 11. Monte-Carlo results for flyby orbit. 3 ? ? LOS position errors at the end of\nthe 10 min simulation with the chaser on a flyby orbit above the target.\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 367\n\n 10deg  45deg \n0\n\n0.01\n\n0.02\n\n0.03\n\n0.04\n\n0.05\n\n0.06\n\n0.07\n\n0.08\n\n0.09\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\n0.1m Offset, ?Noise=0.001rad\n\n0.1m Offset, ?Noise=0.0001rad\n\n0.5m Offset, ?Noise=0.001rad\n\n0.5m Offset, ?Noise=0.0001rad\n\nFig. 12. Monte-Carlo results for a football orbit. 3? ? LOS position errors at the end\nof the 10 min simulation with the chaser on a football orbit moving upward in the\nradial direction from the v-bar.\n\n0.5m Offset, Fast 0.5m Offset,Fast\n0\n\n0.005\n\n0.01\n\n0.015\n\n0.02\n\n0.025\n\n0.03\n\n3 \n?\n\nLO\nS\n [m\n\n]\n\nFootball\nFlyby\nV-bar\n\nFig. 13. Monte-Carlo results for v-bar station-keeping, flyby orbit, and football orbit.\n3? ? LOS position errors at the end of the 10 min simulation are shown.\n\nPerformance Comparison. Figure 13 shows a comparison of the final LOS\nposition errors for the v-bar, flyby, and football orbits. For the specified rotation\nsequence, the v-bar trajectory produced the best performance. The flyby and\nfootball orbit results can undoubtedly be improved by considering other rotation\nsequences.\n\n7 Conclusions\n\nDuring orbital proximity operations, past research has shown that angles-only\nnavigation during coasting flight suffers from a lack of range observability. This\npaper has shown that the angles-only range observability problem during coast-\ning flight is solved by properly including the offset of the camera from the chaser\n\n\n\n368 I. Klein and D.K. Geller\n\ncenter-of-mass in the problem formulation, and by applying appropriate vehi-\ncle rotations. Although this result is significant, it is limited, since the ability\nto estimate range diminishes with chaser-target separation distance. It has also\nbeen shown that the ability to estimate range improves with larger camera offset\ndistances, larger maneuvers, and faster maneuvers. In all cases examined, the po-\nsition estimation error perpendicular to the line-of-sight remains approximately\nunchanged.\n\nAcknowledgments. This research was conducted with support and funding\nfrom the Lady Davis Fellowship Trust and the Asher Space Research Fund.\n\nReferences\n\n1. Allen, A.M., Langley, C., Mukherji, R., Taylor, A.B., Umasuthan, M., Barfoot, T.:\nRendezvous lidar sensor system for terminal rendezvous, capture, and berthing to\nthe international space station. In: Proceedings of SPIE, Vol. 6958, SPIE Confer-\nence on Sensors and Systems for Space Applications II. SPIE (2008)\n\n2. Clohessy, W.H., Wiltshire, R.: Terminal guidance system for satellite rendezvous.\nJournal of the Aero/Space Sciences 27(3), 653\u2013658 (1960)\n\n3. Dennehy, C.J., Carpenter, J.R.: A summary of the rendezvous, proximity opera-\ntions, docking, and undocking (rpodu) lessons learned from the defense advanced\nresearch project agency (darpa) orbital express (oe) demonstration system mission.\nNASA/TM-2011 217088 (2011)\n\n4. Fehse, W.: Automated Rendezvous and Docking Spacecraft. Cambridge University\npress, New York (2003)\n\n5. Gillis, R., Geller, D., Chavez, F.R.: Proximity operations using low thrust propul-\nsion and angles-only measurements in geosynchronous orbits. In: AAS Annual\nGuidance and Control Conference, AAS, Breckenridge (2011)\n\n6. Gillis, W.R.: Low Thrust Assisted Angles Only Navigation. Graduate Thesis, Utah\nState University (2011)\n\n7. Howard, R.T., Bryan, T.C.: Video guidance sensor for automated capture. In: Space\nPrograms and Technologies Conference, AIAA, Huntsville (1992)\n\n8. Howard, R.T., Bryan, T.C., Book, M.L.: On-orbit testing of the video guidance\nsensor. In: Proceedings of SPIE, The International Society for Optical Engineering,\nvol. 3707, pp. 290\u2013300. SPIE, Bellingham (1999)\n\n9. Junkins, J.L., Hughes, D.C., Wazni, K.P., Pariyapong, V.: Vision-based naviga-\ntion for rendezvous and docking and proximity operations. In: 22nd Annual AAS\nGuidance and Control Conference, Breckenridge, AAS, CO (1999)\n\n10. Kim, S., Crassidis, J.L., Cheng, Y., Fosbury, A.M.: Kalman filtering for relative\nspacecraft attitude and position estimation. Journal of Guidance, Control, and\nDynamics 30(1), 133\u2013143 (2007)\n\n11. Lee, D., Pernicka, H.: Integrated system for autonomous proximity operations and\ndocking. International Journal of Aeronautical and Space Science (1), 43\u201356 (2011)\n\n12. Maybeck, P.S.: Stochastic models, estimation and control, vol. 1. Navtech Book\nand Software store (1994)\n\n13. Parten, R.P., Mayer, J.P.: Development of the gemini operational rendezvous plan.\nJournal of Spacecraft and Rockets 5(9), 1023\u20131028 (1968)\n\n\n\nZero ?v Solution to the Angles-Only Range Observability Problem 369\n\n14. Don, J.P.: Shuttle rendezvous and proximity operations. In: Proceedings of the\nInternational Symposium, Space dynamics, Toulouse, France, pp. 833\u2013851 (1989)\n\n15. Petit, A., Marchand, E., Kanan, i.: Vision-based space autonomous rendezvous:\nA case study. In: IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, pp.\n619\u2013624. IEEE, San Francisco (2011)\n\n16. Pinard, D., Reynaud, S., Delpy, P., Strandmoe, S.E.: Accurate and autonomous\nnavigation for the atv. Aerospace Science and Technology, 490\u2013498 (2007)\n\n17. Rumford, T.E.: Demonstration of autonomous rendezvous technology (dart)\nproject summary. In: Proceedings of SPIE, SPIE Space System Technology and\nOperations, vol. 5088, SPIE, Orlando (2003)\n\n18. Sabol, C., Vallado, D.: A fresh look at angles-only orbit determination. In:\nAAS/AIAA Astrodynamics Specialist Conference, Vol. AAS 99-363, Girdwood,\nAlaska (1999)\n\n19. Schmidt, J., Geller, D., Chavez, F.R.: Viability of angles-only navigation for or-\nbital rendezvous operation. In: AIAA-2010-7755, AIAA Guidance, Navigation, and\nControl Conference, Toronto, Ontario, AIAA, Toronto (2010)\n\n20. Smith, D.W., Lampkin, B.A.: Sextant sighting measurements from on board the\ngemini xi1 spacecraft. NASA Technical Note (1968)\n\n21. Vallado, D.: Fundamentals of Astrodynamics and Applications, vol. 2. Microcosm\nPress and Kluwer Academic Publishers (2004)\n\n22. Weismuller, T., Leinz, M.: Gnc technology demonstrated by the orbital express\nautonomous rendezvous and capture sensor system. In: AAS 29th Annual Guidance\nand Control Conference, AAS, Breckenridge (2006)\n\n23. Woffinden, D., Geller, D.: Observability criteria for angles-only navigation. IEEE\nTransactions on Aerospace and Electronic Systems 45(3), 1194\u20131208 (2009)\n\n24. Woffinden, D.C., Geller, K.D.: Relative angles-only navigation and pose estimation\nfor autonomous orbital rendezvous. Journal of Guidance, Control, and Dynam-\nics 30(5), 1455\u20131469 (2007)\n\n25. Yim, J.R., Crassidis, J.L., Junkins, J.L.: Autonomous orbit navigation of two space-\ncraft system using relative line of sight vector measurements. American Astronau-\ntical Society 4(257) (2004)\n\n26. Young, K.A., Alexander, J.D.: Apollo lunar rendezvous. Journal of Spacecraft and\nRockets 7(9), 1083\u20131086 (1970)\n\n27. Zarchan, P., Musoff, H.: Fundamentals of Kalman filtering: a practical approach,\n2nd edn. The American Institute of Aeronautics and Astronautics, Inc. (2005)\n\n\n\nGround Based Navigation of Spacecraft in Lunar\n\nTransfer Trajectory, with Application\nto Chandrayaan-2\n\nSanat Kumar Biswas? and Hari B. Hablani??\n\nIndian Institute of Technology Bombay, Mumbai, India\nsanatb.88@gmail.com, hbhablani@aero.iitb.ac.in\n\nAbstract. Navigation plays a major role in space missions. For a cis-\nlunar space mission, such as Chandrayaan-2, deep space radar, inertial\nnavigation system and optical navigation system are used to determine\nthe position and velocity of the spacecraft.\n\nIn the present work, a mathematical model of Chandrayaan-2 mo-\ntion is developed which includes J2 effect of the Earth and the Moon,\nsolar gravitational perturbation and solar radiation pressure. Based on\nthis model a nominal lunar transfer trajectory is simulated. Models for\nground-based measurements (azimuth, elevation, range and range rate)\nare described. Time delays due to finite speed of electromagnetic waves\nare considered in the measurement. Effects of tropospheric and iono-\nspheric refraction on measurements are incorporated in the simulation.\nTropospheric errors are corrected using Saastamoinen zenith range cor-\nrection model and ionospheric range errors are corrected using dual-\nfrequency measurements. MATLAB codes are developed to simulate the\nobservations from four ground station facilities, viz. Indian Deep Space\nNetwork, (IDSN) Byalalu, Karnataka, India as well as Deep Space Com-\nmunication Complex, Goldstone, California, USA, Deep Space Com-\nmunication Complex, Madrid, Spain and Deep Space Communication\nComplex, Canberra, Australia.\n\nThe polar measurements are used in Extended Kalman Filter (EKF)\nalgorithm to estimate position and velocity of Chandrayaan-2 in the iner-\ntial Cartesian frame. To compensate for the time delay in measurements,\nthe states are propagated till the time corresponding to the delayed mea-\nsurements and then updated. These updated states are then propagated\nfurther till the current time to obtain the current estimates. This tech-\nnique results in 11.79 km of range uncertainty (1?) and 6.93 m/s of speed\nuncertainty (1?) at the time of arrival at the insertion point to the lunar\nparking orbit of Chandrayaan-2.\n\nKeywords: Spacecraft, ground based navigation, estimation, Kalman\nfilter.\n\n? Former M.Sc. Student, Department of Aerospace Engineering.\n?? Professor, Department of Aerospace Engineering.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 371\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_20\n\n\n\n372 S.K. Biswas and H.B. Hablani\n\n1 Introduction\n\nNavigation is the process of monitoring position and velocity of a vehicle moving\nfrom one place to another. Navigational techniques involve locating the position\nof a vehicle of interest with respect to a suitable reference frame. For missions\nlike Chandrayaan-2, position and velocity are measured using ground tracking\nsystem. These quantities along with acceleration due to thrust are also measured\nby on board accelerometer, gyroscope and celestial navigation. Dynamic model\nof the spacecraft motion is well established in literature. Highly accurate gravity\nmodels of the Earth and the Moon have been developed [5]. Several nonconser-\nvative forces like solar radiation pressure, atmospheric drag have been modeled\nvery accurately [5]. The uncertainties in position and velocity of spacecraft are\nthe result of the uncertainties in injection position and velocity, measurement\nerrors and guidance corrections. Another significant factor contributing to the\nuncertainty in the translunar trajectory is the translational noise, which is the\nresult of imperfectly coupled rotational maneuvers, venting, etc. This may be\nmodeled as process noise [2]. For all these reasons, propagation of initial condi-\ntions results in huge uncertainties in final position and velocity. To reduce the\nuncertainties, various estimation techniques are used. The estimation process\ninvolves collecting tracking data (azimuth, elevation, range and range rate) from\nground stations and using them batch-wise in least square estimation algorithm\nor sequentially in Extended Kalman Filter algorithm. For on board navigation,\nspacecraft position is measured using optical navigation system and Inertial Nav-\nigation System (INS) and then Kalman filter is used to estimate position and\nvelocity.\n\nThe field of cislunar navigation is researched extensively since sixties. Recent\nnotable works are Chandrayaan-1 precise orbit determination and investigation\nof on board navigation errors of lunar trajectory of Orion space vehicle [2]. Clark\net al have documented design and analysis of navigation system for the Orion\ntranslunar and transearth phases of the mission [2]. They have shown that, with\ninfrequent ground station measurement updates, the on board navigation system\nis capable of estimating the position and velocity with 3 km and 0.06 m/s of\nuncertainty (1?) respectively at the end of the lunar transfer trajectory. Lightsey\net al have demonstrated autonomous cislunar navigation simulation in [6].\n\nVighnesam et al [8] have documented precise orbit computation technique\nused in Chandrayaan-1 mission. For orbit propagation in ground based naviga-\ntion system, EGM-96 Earth gravitational model and LP100K lunar gravitational\nmodel were used. The trajectory was generated by integrating the equation of\nmotion using Gauss-Jackson-Merson\u2019s 8th order method. Least square estima-\ntion technique was used to estimate position and velocity of Chandrayaan-1.\n\nIn the present work gravitational harmonics of the Earth and the Moon higher\nthan J2 are not considered in the mathematical model of spacecraft motion.\nAdditionally solar gravitational perturbation and solar radiation pressure have\nbeen considered. For integration, Runge-Kutta 4th order method is used. For\nestimation of Chandrayaan-2 state vector, Extended Kalman Filter is used.\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 373\n\n2 Dynamic Model of Spacecraft Motion in Lunar\nTransfer Trajectory\n\nThe motion of the spacecraft is influenced by the Sun, the Earth and the Moon\nduring the flight along a lunar transfer trajectory. Nonetheless, for high navi-\ngation accuracy in a real application, the influence of the Sun\u2019s gravity, solar\nradiation pressure, nonuniform gravitational fields of the Earth and the Moon\nhave to be considered. the principle aim of the project is to study the navigational\naspects of Chandrayaan-2 and not trajectory generation, so simpler equation of\nmotion is discussed neglecting higher order gravitational harmonics of the Earth\nand the Moon to generate nominal trajectory.\n\n2.1 Acceleration of the Spacecraft due to the Gravitational Fields\nof the Earth, the Moon and the Sun\n\nIf it is assumed that, the spacecraft moves entirely under the Earth\u2019s gravita-\ntional influence, then according to Newton\u2019s Law of Gravitation the equation of\nmotion of the spacecraft will be,\n\nr?+\nGM?\nr3\n\nr = 0 (1)\n\nwhere, r is the position vector of the spacecraft with respect to center of the\nEarth and G is universal gravitational constant. To incorporate gravitational\neffect of the Moon in the equation of motion Cowell\u2019s perturbation technique is\nused. In Cowell\u2019s perturbation technique the Earth and the spacecraft are treated\nas a single system and the acceleration due to the other bodies (the Sun and the\nMoon in this case) are considered as a disturbance [1]. The main acceleration\ndue to the central body Earth is given by the equation 1. The perturbation due\nto external mass M (the Sun or the Moon) is [5]\n\nr? = GM\n\n(\ns? r\n\n|s ? r|3 ?\ns\n\ns3\n\n)\n(2)\n\nHere s is the position vector of mass M . Using this equation, solar gravitational\nperturbation and lunar gravitational perturbation is calculated separately and\nare added with to the right side of the equation 1 and then integrated numerically\nto obtain the trajectory.\n\n2.2 Gravitational Harmonics\n\nThe acceleration due to nonuniform shape and density of the Earth is [5],\n\nx? =\n?\nn,m\n\nx?nm y? =\n?\nn,m\n\ny?nm z? =\n?\nn,m\n\nz?nm (3)\n\n\n\n374 S.K. Biswas and H.B. Hablani\n\nwhere\n\nx?nm =\nGM\n\nR?2\n(?Cn0Vn+1,1) ,m = 0\n\n=\nGM\n\nR?2\n1\n\n2\n(?CnmVn+1,m+1 ? SnmWn+1,m+1)\n\n+\n(n?m+ 2)!\n(n?m)! (+CnmVn+1,m?1 + SnmWn+1,m?1), m > 0\n\ny?nm =\nGM\n\nR?2\n(Cn0Wn+1,1), m = 0\n\n=\nGM\n\nR?2\n1\n\n2\n(?CnmWn+1,m+1 + SnmVn+1,m+1)\n\n+\n(n?m+ 2)!\n(n?m)! (?CnmWn+1,m?1 + SnmVn+1,m?1), m > 0\n\nz?nm =\nGM\n\nR?2\n(n?m+ 1).(?CnmVn+1,m ? SnmWn+1,m)\n\nHere Cnm terms are gravitational coefficient terms, V nm and Wnm terms are\ncalculated using the recursive relations given in [5]. These acceleration terms are\ngiven in the earth fixed frame. The same formulation can be used to calculate\nacceleration due to nonuniform shape of the Moon. In trajectory simulation of\nChandrayaan-2 C20 terms of the Earth and the Moon (which are the Earth and\nthe Moon J2 terms) are considered. Higher order terms are neglected in our\nsimulation.\n\n2.3 Solar Radiation Pressure\n\nAcceleration due to solar radiation pressure is given by [5]\n\nr? = ?P?CR A\nm\n\nr?\nr?3\n\nAU2 (4)\n\nwhere P? =Solar radiation pressure\nCR =Solar radiation pressure coefficient of the spacecraft\nr? =Position of the spacecraft with respect to the Sun in ECI frame\nThis formulation is used in the present work to simulate acceleration due to solar\nradiation pressure.\n\n2.4 Lunar Transfer Trajectory Simulation\n\nCowell\u2019s perturbation technique is used to simulate the nominal trajectory of\nChandrayaan-2. In this simulation, solar gravitational perturbation, solar radi-\nation pressure, lunar gravitational perturbation, J2 effect of the Earth and J2\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 375\n\nFig. 1. Trajectory of Chandrayaan-2 using Cowell\u2019s perturbation technique\n\neffect of the moon are considered. The gravitational coefficient of the Earth is\ntaken from JGM-3 gravity model [5] and the graviational coefficient of the moon\nis taken from LP150Q lunar gravity model [7].\n\nFigure 1 shows the transfer trajectory of Chandrayaan-2 in the ECI frame.\nThis trajectory is generated by intigrating the equations mentioned in section\n2.1. For the simulation of tracking data and estimation, this trajectory is used.\n\n3 Ground Tracking Station Measurement Model\n\n3.1 Azimuth and Elevation Measurement\n\nIf r and R be the position vectors of the spacecraft and the ground tracking\nstation respectively in ECI frame then, the angle measurements can be modeled\nusing the vector d = r ? R from the ground station to the spacecraft. Due\nto the finite velocity of electromagnetic wave, the geometric relative position\nd0 = r(t)?R(t) at the time of signal reception is different from the true signal\npath, which can be expressed as the vector\n\nd = r(t? ?) ?R(t) (5)\nHere R(t) is the ground station position at the reception time, r(t ? ?) is the\nposition of the spacecraft at the transmission time, ? is the signal travel time\nand c is the speed of electromagnetic wave. For the simulation purpose ? can be\ncalculated by solving the implicit light-time equation [5]\n\nc? = |r(t? ?)?R(t)| (6)\nThis equation can be solved iteratively and the solution gives the true signal\n\npath in the inertial frame which is different from the apparent direction to the\n\n\n\n376 S.K. Biswas and H.B. Hablani\n\nspacecraft for a moving ground station. Neglecting the special relativistic effects,\nthe observed direction is given by the vector [5]\n\nd? = d+ ?dV (7)\n\nwhere V is the inertial velocity of the ground station relative to the geocenter.\nThus the apparent position [5]\n\nd? ? r(t? ?d)?R(t? ?d) (8)\nFrom this vector d? the elevation and azimuth are measured. For simulation\nperpuse, we will consider azimuth and elevation calculated from d? vector as the\nangle measurments.\n\n3.2 Range Measurement and Associated Time Delay\n\nIn classical two-way ranging technique, signal is radiated from the ground station\nto the spacecraft. The spacecraft transponder receives the signal and transmits\nback to the ground station. The ground station receives the transponded signal\nand determines the signal travel time ? . The signal travel time consists of up-link\nlight time ?u and down-link light time ?d. The down-link light time equation is\ngoverned by equation 6. The up-link light time equation is expressed as [5]\n\nc?u = |r(t? ?d)?R(t? ?d ? ?u)| (9)\nThis equation has to be solved iteratively after solving down-link light time\nequation. The two-way range measurement ? can be modeled as [5]\n\n? =\n1\n\n2\n(?u + ?d)\n\n=\nc\n\n2\n(?u + ?d) (10)\n\nHere ?u is the up-link range ?(t ? ?) and ?d is the down-link range ?(t). Using\nTaylor series expansion, we can write\n\n?(t? ?) = ?(t? ?\n2\n? ?\n\n2\n)\n\n= ?(t? ?\n2\n)? ?\n\n2\n??+\n\n(?\n2\n\n)2\n??? ....? (11)\n\nand\n\n?(t) = ?(t? ?\n2\n+\n\n?\n\n2\n)\n\n= ?(t? ?\n2\n) +\n\ntau\n\n2\n??+\n\n(?\n2\n\n)2\n??+ ....? (12)\n\nFrom the equations 11 and 12 neglecting higher order terms one can write,\n\n?\n(\nt? ?\n\n2\n\n)\n? 1\n\n2\n[?(t? ?) + ?(t)]\n\n=\n1\n\n2\n(?u + ?d) (13)\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 377\n\nThis equation shows that, average two-way range at time t is nearly equal to the\ngeometric range between the spacecraft and the ground station at time\n\n(\nt? ?2\n\n)\n.\n\nFrom this observation, one can conclude that the range measurement is delayed\nby ?2 second.\n\n3.3 Range Rate Measurement and Associated Time Delay\n\nDoppler frequency shift is utilized to measure the range rate of the spacecraft.\nTwo-way Doppler measurements are obtained by integrating Doppler counts over\na count-time interval tc. The measured range rate is modeled as the difference\nof the two-way ranges at the end and at the beginning of the count-time interval\n[4]. It can be shown that the average range rate measurement can be modeled\nas [5]\n\n???(t) =\nc\n\n2\n\n(?2u + ?2d)? (?1u + ?1d)\ntc\n\n(14)\n\nIt has been shown in [4] that, the average range rate at time t2 can be approxi-\nmated as\n\n???(t2) ? ??\n(\nt1 +\n\nti\n2\n? 1\n\n2\n(?2d + ?1d)\n\n)\n\n= ??\n\n(\nt2 ? 1\n\n2\n(ti + ?2d + ?1d)\n\n)\n(15)\n\nThis equation shows that, the Doppler measurement is delayed by 12 (tc+?2d+?1d)\nsecond.\n\n4 Tracking Data from Ground Station\n\nSimulation of tracking data generated with the ground station radars is done as-\nsuming Chandrayaan-2 is following the trajectory generate simulation described\nin section 2.1. The simulation results are obtained using the equations and pro-\ncedure described in section 3.1 and section 3. The tracking data, time delay and\napproximation errors are generated for four ground tracking stations: Byalalu,\nGoldstone, Madrid and Canberra. Tracking data simulation program was verified\nby generating tracking data of a polar satellite and the data were compared with\nthe tracking data provided in [5]. The following figures show the tracking data of\nChandrayaan-2 for IDSN Byalalu. Results for Goldstone, Madrid and Canberra\nare included in the Appendix. In figures 2 and 3 the azimuths and elevations\ncalculated from true and apparent position vectors (section 3.1) are compared to\nstudy the effect of light-time. From the figures 2 and 3 it can be concluded that\nthe errors due to the finite speed of electromagnetic wave (section 3) in azimuth\nand elevation measurements are negligible. Here zero azimuth in the figure 2\ncorresponds to zero elevation in figure 3. For zero elevation the spacecraft is out\nof view of the ground station, so at that time no measurements are available.\n\n\n\n378 S.K. Biswas and H.B. Hablani\n\nFig. 2. Azimuth measurement from IDSN, Byalalu and error in measurement due to\nfinite speed of electromagnetic wave\n\nFig. 3. Elevation measurement from IDSN, Byalalu and error in measurement due to\nfinite speed of electromagnetic wave\n\nduring this time the spacecraft is tracked by other ground stations. Here mea-\nsurements corresponding to elevation less than 15o are rejected because, lower\nelevation angle associates with higher error due to troposphere and ionosphere.\nAverage range and range rate are calculated using equations 10 and 14 respec-\ntively. These range and range rates are compared with the instantaneous range\nand range rate at time (t? ?2 ) and\n\n(\nt2 ? 12 (ti + ?2d + ?1d)\n\n)\nrespectively. Figures\n\n5 and 6 indicate that range rate delay is always higher than range delay because\nof the Doppler integration time tc.Figures 8 and 10 show that the error due to\nTaylor series approximation is small as expected.\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 379\n\nFig. 4. Up-link and down-link light time delay from IDSN, Byalalu\n\n5 Sources of Error in Ground Station Measurements\n\nThe main sources of error in ground station measurements are tropospheric and\nionospheric interaction with electromagnetic wave and electronic noise. Elec-\ntronic noise can be treated as white noise and can be accounted for using filter\nor estimation algorithms. But the errors in the range and elevation caused by\ntroposphere and ionosphere has to be accounted for with rigorous modeling of\nthe errors as done below.\n\n5.1 Tropospheric Refraction\n\nTropospheric refraction introduces range and elevation measurement errors. Goad\net al modified a general and accurate Hopfield tropospheric refraction model, to\nuse Saastamoinen zenith range correction [5]. According to Hopfield model, the\ndry troposphere height h1 is determined from\n\nh1[m] =\n0.011385\n\nN1 \u00b7 10?6 p[hPa] (16)\n\nand the wet tropospheric height h2 is expressed as\n\nh2[m] =\n0.011385\n\nN2 \u00b7 10?6\n[\n\n1255\n\nT [K] + 0.05\n\n]\ne[hPa] (17)\n\nHere N1 and N2 are the dry and wet tropospheric refractivity, respectively, T is\naverage temperature of the troposphere in Kelvin, p is the atmospheric pressure\nand e is the partial pressure of water vapor. The tropospheric range correction\n?? is given by [5]\n\n?? = C?\n\n2?\nj=1\n\nNj\n106\n\n9?\ni=1\n\n?ijr\ni\nj\n\ni\n(18)\n\n\n\n380 S.K. Biswas and H.B. Hablani\n\nFig. 5. Delay in range measurement\n\nFig. 6. Delay in range rate measurement\n\nwhere C?=0.99841 for radio frequencies, and for measured elevation angle E, rj\nis defined as\n\nrj =\n?\n(R? + hj)2 ? (R?cosE)2 ?R?sinE (19)\n\nThe coefficients of the polynomial (18) are defined in [5] The tropospheric cor-\nrection of the elevation angle ?E is given by [5]\n\n?E = CE\n4cosE\n\n?\n\n?\n? 2?\nj=1\n\nNj\n106hj\n\n(\n7?\n\ni=1\n\n(\n?ijr\n\ni+1\nj\n\ni(i+ 1)\n+\n\n?ijr\ni\nj\n\ni\n(?? rj)\n\n))?\n? (20)\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 381\n\nFig. 7. Range measurement from IDSN, Byalalu\n\nFig. 8. Range error due to the Taylor series approximation\n\nwhere, CE=0.99841 for radio frequencies. The elevation correction coefficients\nare defined in [5].\n\n5.2 Ionospheric Refraction\n\nRange error due to ionospheric refraction can be calculated from the following\nequation [3]\n\n?? =\n40.3\n\nf2\nTECslant (21)\n\n\n\n382 S.K. Biswas and H.B. Hablani\n\nFig. 9. Range rate measurement from IDSN, Byalalu\n\nFig. 10. Range rate error due to Taylor series approximation, Byalalu\n\nwhere, TECslant =\nTEC\ncosi and TEC is the total electron count along the signal\n\npath. i is defined as [3]\n\ni = sin?1\nR?\n\nR? + h\ncosE (22)\n\nh is the mean ionospheric height and E is the measured elevation. Ionospheric\nerror correction can also be done using two signal frequencies [3]. Let the range\nmeasurements for the two frequencies f1 and f2 be\n\n?f1 = ?true +\n40.3\n\nf21\nTECslant (23)\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 383\n\n?f2 = ?true +\n40.3\n\nf22\nTECslant (24)\n\nHere ?true is the true range. Subtracting 24 from 23,\n\n?f1 ? ?f2 = 40.3TECslant\n(\n\n1\n\nf21\n? 1\n\nf22\n\n)\n(25)\n\nand\n\nTECslant = (?f1 ? ?f2) f\n2\n1f\n\n2\n2\n\n40.3(f21 ? f22 )\n(26)\n\nAfter calculating TECslant one can use equation 21 to determine the range error,\nor calculate ?true directly from either equation 23 or 24. But we have assumed\nin our work here that the ground station have the facility for dual frequency\nmeasurements.\n\n5.3 Tropospheric Error Correction\n\nLet the errors due to troposphere in range and elevation be ?? and ?E, respec-\ntively. If the true range and elevation be ?t and Et, then from section 5.1 we can\nwrite\n\n?? = f1(Et +?E) (27)\n\n?E = f2(Et +?E) (28)\n\nThe functions f1 and f2 are described in section 5.1. The above equations can\nbe solved iteratively to calculate the range and elevation error from the true\nrange and elevation measurement. Now the actual measurement from the ground\nstation is (? = ?t + ?? + ??ion) and E = Et + ?E. ??ion is the range error\ndue to ionosphere. We can use these as measurements in the range and elevation\ncorrection model to calculate range and elevation error. The results are shown\nin the subsequent figures. Here the error after correction corresponding to the\nelevation greater than 15o.\n\n5.4 Ionospheric Error Correction\n\nFor ionospheric error simulation, electron density data are collected from NASA\nwebsite for IDSN Byalalu, DSN Goldstone, Madrid and Canberra on September,\n20, 2011 for 24 hours with 1 hour interval. We assume that for the next 2-3 days\nthe daily variation of electron density will be same. Electron density is integrated\nto calculate TEC, and using the formulations described in 5.2 range error is\ncalculated for two frequencies (2GHz and 2.1GHz) assuming all the four ground\nstations have this facility. Using the range measurements for the two frequencies,\nthe ionospheric error is corrected (section 5.2). The TEC, electron density plot\nand the errors in range shown here corresponds to Byalalu tracking station.\nThe figures 14 and 15 are not continuous because the electron density data are\ncollected with one hour interval. Nonetheless, simulation using low resolution\ndata demonstrates that using dual frequency correction the ionospheric range\nerror can be corrected significantly (fig. 16).\n\n\n\n384 S.K. Biswas and H.B. Hablani\n\nFig. 11. Error in range and elevation measurement due to troposphere\n\nFig. 12. Error in elevation measurement after correction\n\n6 Spacecraft Position and Velocity Estimation\n\nAfter correction of the ground station observations using the procedure described\nin 5 estimation algorithm is used in practice to determine the position and\nvelocity of the spacecraft. This is because the atmospheric corrections may not\neliminate the errors perfectly and electronic white noise always contaminate the\nobservations. Generally least square estimation or Kalman Filter algorithm is\nused for estimation. In the current study, Extended Kalman Filter Algortihm\n(EKF) is used to estimate the position and velocity of Chandrayaan-2.\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 385\n\nFig. 13. Electron density variation with height for 20th September 2011\n\nFig. 14. Variation of TEC during lunar transfer at Byalalu\n\n6.1 Extended Kalman Filter with Delay in Measurements\n\nTo compensate for the time delay in the measurements in the current study, the\nstates are propagated till the time corresponding to the measurement and then\nstates are updated. After that, the updated states are propagated till the current\ntime. A block diagram of this scheme is shown in 17. In the block diagram ZRR\nand ZRAE are the range rate measurement and azimuth, elevation and range\nmeasurement vector respectively. ?rr and ?r are the delay in range rate and\nrange respectively. The range rate delay ?rr is greater than range delay ?r due\nto the count time interval tc (section 3.3). For this reason, states are updated\nusing range rate measurement at (t??rr) and the updated states are propagated\n\n\n\n386 S.K. Biswas and H.B. Hablani\n\nFig. 15. Range error due to ionosphere for two frequencies\n\nFig. 16. Range error after tropospheric and ionospheric correction\n\ntill (t? ?r). The range, azimuth and elevation measurements are associated with\nthe time (t? ?r) (section 3.2). The states are updated using these measurements\nat (t? ?rr) and propagated till the time t.\n\n6.2 Estimation of Position and Velocity\n\nThe correction for tropospheric and ionospheric errors are done to each set of\nmeasurements sequentially and used for estimation of position and velocity of\nthe spacecraft. The algorithm used for estimation is explained in section 6.1. The\nuncertainties in tracking data are given in the following table [5]. The initial po-\nsition and velocity vector estimates are based on the first set of measurements.\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 387\n\nFig. 17. Block diagarm of Kalman Filter algorithm for delay compensation\n\nTable 1. Measurement uncertainties\n\nMeasured quantity 1? of noise\n\nRange 10m\n\nRange rate 0.1 cm/s\n\nAngles 0.01o\n\nFig. 18. Position estimation error in the ECI frame\n\nMeasurements from Byalalu and other tracking stations are used in the esti-\nmation simulation. Simulation results of the estimation process are illustrated\nand discussed below. Figures 18 and 19 show that the estimation errors are\nconfined within 3? limit but the accuracy of the filter deteriorates with time.\nThis is because the azimuth and elevation noise. At the arrival to the Moon,\nthe position uncertainty due to azimuth and elevation noise is roughly 76 km.\n\n\n\n388 S.K. Biswas and H.B. Hablani\n\nFig. 19. Velocity estimation error in the ECI frame\n\nFig. 20. Magnitude of position and velocity estimation errors in the ECI frame\n\nTable 2. Estimation errors and uncertainties at the time of arrival at the Moon\n\nAxis Position 1? of Velocity 1? of\nerror (km) uncertainty (km) error (m/s) uncertainty (m/s)\n\nX -28.77 6.54 1.29 4.36\n\nY -14.25 4.22 0.55 2.41\n\nZ -0.22 9.57 0.83 5.01\n\nUsing the Kalman filter this uncertainty is contained within 10 km (fig. 20). The\nerrors and uncertainties at the time of arrival to the vicinity of the Moon after\nestimation are shown in the table 2.\n\n\n\nGround Based Navigation of Spacecraft in Lunar Transfer Trajectory 389\n\n7 Conclusion\n\nThe aim of this project is to understand navigational aspects of Chandrayaan-2\nmission, simulate tracking data generated by ground tracking stations consider-\ning practical measurement and error models, and estimate position and velocity\nof Chandrayaan-2 from these data. Lunar transfer trajectory is simulated con-\nsidering J2 effect of the Earth and the Moon, solar gravitational perturbation\nand solar radiation pressure. Range, range rate, azimuth and elevation Measure-\nment models for ground tracking station are developed, and time delays due to\nthe finite speed of electromagnetic wave, tropospheric and ionospheric errors are\nincluded in the measurement simulation. Correction procedure for tropospheric\nand ionospheric errors is discussed. It is shown that, as known, using dual fre-\nquency measurements, ionospheric range error can be corrected satisfactorily for\nhigher elevation angles. An estimation algorithm is proposed to compensate for\nthe delay in measurements. Final position uncertainty of the spacecraft is 11.79\nkm and velocity uncertainty is 6.93 m/s. The accuracy of the estimation pro-\ncess is not as per the practical requirements. More advanced filter algorithm is\nrequired to improve the accuracy. In this present study the error in elevation\ndue to the ionosphere is not considered and the range noise uncertainty is as-\nsumed to be constant. For L-band and S-band signals, this error is comparable\nto the elevation noise. Further study is required to incorporate the ionospheric\nerror in elevation and range noise characteristics. In recent years, research on\nautonomous navigation of spacecraft has become very important. Lightsey et al\nhave shown the performance of autonomous navigation system in case of com-\nmunication failure with ground station [6]. Extensive research has to be done on\non-board autonomous navigation system. Injection error in transfer trajectory\ndeviates the spacecraft from the desired trajectory. Several mid-course correc-\ntions are performed to keep the spacecraft in the desired trajectory. There is a\nscope of research on mid-course correction and guidance of the interplanetary\nspacecraft in transfer trajectory.\n\nReferences\n\n1. Battin, R.H.: An Introduction to the Mathematics and Methods of Astrodynamics.\nAIAA (1987)\n\n2. D\u2019Souza, C., Crain, T., Clark, F.D., Getchius, J.: Orion cislunar guidance guidance\nand navigation. In: AIAAGuidance, Navigation and Control Conference and Exhibit\n(2007)\n\n3. Grewal, M.S., Weill, L.R., Andrews, A.P.: Global Positioning Systems, Inertial Nav-\nigation, and Integration. John Wiley & Sons, Inc. (2007)\n\n4. Kruger, B.: The range rate error due to the averaging techniques of doppler mea-\nsurements. Tech. rep., Goddard Space Flight Center (1965)\n\n5. Montenbruck, O., Gill, E.: Satellite Orbits Models, Methods, and Applications.\nSpringer (2000)\n\n6. Mun?oz, S., Christian, J.A., Lightsey, E.G.: Development of an end to end simulation\ntool for autonomous cislunar navigation. In: Navigation, and Control Conference.\nAIAA (2009)\n\n\n\n390 S.K. Biswas and H.B. Hablani\n\n7. Roncoli, R.B.: Lunar constants ans models document. Tech. rep., Jet Propulsion\nLaboratory (2005)\n\n8. Vighnesam, N.V., Sonney, A., Gopinath, N.S.: India\u2019s first lunar mission\nchandrayaan-1 initial phase orbit determination. Acta Astronautica 67(4) (2010)\n\n9. Vighnesam, N.V., Sonney, A., Subramaniam, B., Gopinath, N.S.: Precise orbit com-\nputation of india\u2019s first lunar mission chandrayaan-1 using accelerometer and track-\ning data during early phase. In: 21st ISSFD (2009)\n\n\n\n \n\n\u00a9 Springer-Verlag Berlin Heidelberg 2015 \nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control, \n\n391 \n\nDOI: 10.1007/978-3-662-44785-7_21 \n \n\nRobust Kalman Filtering with Single and Multiple Scale \nFactors for Small Satellite Attitude Estimation \n\nHalil Ersin Soken1,*, Chingiz Hajiyev2, and Shin-ichiro Sakai3 \n\n1 The Graduate University for Advanced Studies (SOKENDAI), Sagamihara, Kanagawa, Japan \nersin_soken@ac.jaxa.jp \n\n2 Istanbul Technical University, Istanbul, Turkey \ncingiz@itu.edu.tr  \n\n3 Japan Aerospace Exploration Agency (JAXA), Sagamihara, Kanagawa, Japan \nsakai@isas.jaxa.jp \n\nAbstract. In case of normal operational conditions for a satellite, a convention-\nal Kalman Filter gives sufficiently good attitude estimation results. On the other \nhand, when there is a fault in the measurements then the Kalman filter fails \nabout providing the required accuracy and may even collapse by time. In this \npaper, a Robust Kalman filtering method is proposed for the attitude estimation \nproblem. By using the proposed method both the Extended Kalman Filter and \nUnscented Kalman Filter are modified and the new algorithms, which are ro-\nbust against the measurement malfunctions, are called as the Robust Extended \nKalman Filter (REKF) and Robust Unscented Kalman Filter (RUKF), respec-\ntively. The adaptation is performed following both single and multiple scale \nfactor based schemes. As an application example the proposed algorithms are \napplied for attitude estimation of a small satellite and the performance of the \nrobust Kalman filters are compared in case of different measurement faults. \n\nKeywords: robust Kalman filtering, REKF, RUKF, measurement fault, attitude \nestimation, small satellite. \n\n1 Introduction \n\nThe Kalman Filter (KF) plays an important role in the attitude estimation procedure of \nthe spacecrafts [1, 2]. Regarding the obstacles met during the development process of \nthe attitude estimation systems, various types of KFs have been developed. One of \nthese difficulties is the inherent nonlinear dynamics and kinematics of the satellites \nsimilarly to the many real world systems. The Extended Kalman Filter (EKF) was \nproposed so as to overcome this problem and since then it has been used instead of \nthe linear Kalman filter for estimating the attitude of the satellite [2]. \n\nEven though still being a popular spacecraft attitude estimator, the EKF has some \ndisadvantages, especially in case of high nonlinearity, which appears to be a common \nproblem in the attitude determination applications [2]. On the other hand, the Un-\nscented Kalman Filter (UKF) algorithm is a new filtering method which has become \npopular after the millennium especially because of its advantages over the well known \n\n\n\n392 H.E. Soken, C. Hajiyev, and S. Sakai \n\n \n\nEKF. The essence of the UKF is the fact that; the approximation of a nonlinear distri-\nbution is easier than the approximation of a nonlinear function or transformation [3]. \nThe UKF introduces sigma points to catch higher order statistic of the system and \navoid the linearization step of the EKF. As a result it satisfies both better estimation \naccuracy and convergence characteristic [4]. Moreover, the UKF is more robust \nagainst the initial attitude estimation errors than the EKF [5]. \n\nOne of the main problems for the attitude estimation via both the EKF and UKF is \nhaving an algorithm which does not have capability of the adaptation to the changing \nconditions of the measurement system. As known, space is a severe environment so \nmalfunctions such as abnormal measurements, increase in the background noise etc. \nare always a potential threat for the onboard sensors. The main issue is such faults in \nthe measurements affect the instantaneous filter outputs and may cause the attitude \nestimator diverge in long term. Hence the KF algorithm that is used as the attitude \nestimator must be built robust via using an adaptive approach [6].  \n\nIn literature there are several methods to adapt the linear KF. Unquestionably, the \npioneering methods in this area have been proposed by Mehra [7, 8]. Specifically the \ncovariance matching technique discussed in [8] may be considered as the fundamental \nof the algorithm proposed in this paper. The main drawback of these studies, and as \nwell their successors that examine the adaptation of the KF [9-13], they are generally \nappropriate for discrete-time linear systems and cannot be used as a method for the \nadaptation of the EKF or UKF without any correction of modification. \n\nIn this sense, researches on the Adaptive Extended Kalman Filter (AEKF) or \nAdaptive Unscented Kalman Filter (AUKF), which can be used for nonlinear systems, \nshould be examined. In [14] basically the method proposed in [11] is generalized for \nnonlinear systems and a two-stage AEKF is presented for a loosely coupled INS/GPS \nsystems. The main drawback of this AEKF approach is using a single fading factor \nfor the adaptation procedure. This is not a healthy procedure since each term of the \ninnovation sequence has a different effect on the filter performance, especially in a \ncase where one of the sensors is faulty but the others are working properly. In [15], \ntwo distinct methods are described as the AUKF algorithms. In the first method, the \nMIT rule is used to derive the adaptive law and a cost function is defined in order to \nminimize the difference between the filter computed covariance and the actual inno-\nvation covariance. The algorithm is used for the Q-adaptation (process noise cova-\nriance adaptation) but it is stated that a similar approach may be followed for the  \nR-adaptation (measurement noise covariance adaptation). As a deficiency, the pre-\nsented algorithm requires calculation of the partial derivatives and that introduces a \nrelatively large computational burden as it is also stated by authors themselves. In the \nsecond method, two UKFs are run in parallel within master and slave filter manner. \nIts computational demand is lower than the first method but as it is known [5], despite \nbeing free of the Jacobian calculations, the computational burden of the UKF is not \nlow because of the sigma point calculations. Therefore, using two UKF algorithms in \na parallel manner still increases the required computation burden significantly. Hence \nthe main problem for both of the methods presented in [15] is high computational \nload. Nonetheless in [16, 17] Saga-Husa noise statistics estimator is integrated with \nthe UKF in order to build an AUKF. Although it may be possible to have satisfactory \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 393 \n\n \n\nresults for the target tracking problem, this method has an unstability issue; when the \nnoise covariance loses its semi-positive definiteness the filter diverges.  \n\nThe EKF and UKF may be also built adaptive by using the fuzzy logic techniques \n[18-20]. However, although it is possible to get satisfactory results for some specific \ncases, the essence of this kind of fuzzy methods is human experience and heuristic \ninformation; in out of experience cases they may not work. \n\nIn this paper, a Robust Kalman filtering method is proposed for the attitude estima-\ntion problem. The proposed method is applied for both the EKF and UKF and the new \nalgorithms, which have an extension for the adaptation against measurement malfunc-\ntions, are called as the Robust Extended Kalman Filter (REKF) and Robust Unscented \nKalman Filter (RUKF), respectively. The applied adaptation scheme is similar to the \none given in [6]. However, in this paper the attitude estimation problem is generalized \nand instead of the Euler angles the quaternions are used as the attitude representation \nmethod. As well, the robust Kalman filters are examined for different measurement \nsystem failure cases. As introduced, there are some application examples for the UKF \nprocess noise adaptation in literature and similar complex procedures are suggested \nfor the measurement noise adaptation. In contrast with these existing studies, this \npaper introduces a simple method for the measurement noise covariance matrix scal-\ning. Moreover in order to show the clear effects of disregarding only the data of the \nfaulty sensor we performed the adaptation by using both single and multiple scale \nfactors which are two different approaches for the same problem. The algorithms are \ntested for the attitude and attitude rate estimation problem of a small satellite which \nhas only three magnetometers as the attitude reference source.  Using only magneto-\nmeters is a common preference for the small satellite applications (especially for the \ncubic pico satellites); and having only a limited number of sensors onboard increases \nthe significance of the given robust Kalman filtering methods. Throughout the study, \nresults of these proposed algorithms are compared and discussed for different types of \nmeasurement malfunctions. \n\n2 Satellite Equations of Motion and the Sensor Model \n\n2.1 Satellite Equations of Motion \n\nThe kinematics equation of motion of the satellite via the quaternion attitude repre-\nsentation can be given as [21], \n\n1\n( ) ( ( )) ( )\n\n2 BR\nt t t= ?q ? q  .                                            (1)     \n\nHere q  is the quaternion vector formed of four attitude parameters, \n\n[ ]1 2 3 4 Tq q q q=q  and ( )BR? ? is the skew symmetric matrix as; \n\n\n\n394 H.E. Soken, C. Hajiyev, and S. Sakai \n\n \n\n0\n\n0\n( )\n\n0\n\n0\n\nBR\n\nr q p\n\nr p q\n\nq p r\n\np q r\n\n?? ?\n? ??? ?? =\n? ??\n? ?? ? ?? ?\n\n? ,                                          (2) \n\n \n\nwhere, p , q and r are the components of BR?  vector which indicates the angular \nvelocity of the body frame with respect to the reference frame. On the other hand, the \nbody angular rate vector with respect to the inertial axis frame should be stated sepa-\n\nrately as; .\nT\n\nBI x y z? ? ?? ?= ? ??   BI? and BR? can be related via, \n\n[ ]00 0 .TBR BI A ?= + ?? ?                                            (3) \n\nHere 0?  denotes the angular velocity of the orbit with respect to the inertial frame, \n\nfound as ( )1/ 230 0/ r? ?= ; ? is the gravitational constant, 0r  is the distance between \nthe centre of mass of the satellite and the Earth. Moreover A is the attitude matrix \nwhich is related to the quaternions by; \n\n \n\n2 2 2 2\n1 2 3 4 1 2 3 4 1 3 2 4\n\n2 2 2 2\n1 2 3 4 1 2 3 4 2 3 1 4\n\n2 2 2 2\n1 3 2 4 2 3 1 4 1 2 3 4\n\n2( ) 2( )\n\n2( ) 2( ) .\n\n2( ) 2( )\n\nq q q q q q q q q q q q\n\nA q q q q q q q q q q q q\n\nq q q q q q q q q q q q\n\n? ?? ? + + ?\n? ?= ? ? + ? + +? ?\n? ?+ ? ? ? + +? ?\n\n               (4) \n\nIn case of using quaternions for the kinematic modeling of the satellite\u2019s motion, \nthe UKF in standard format cannot be implemented straightforwardly. The reason of \nsuch drawback is the constraint of quaternion unity given by 1T =q q . If the kinemat-\nics equation (Eq.1) is used in the filter directly, than there is no guarantee that the \npredicted quaternion mean of the UKF will satisfy this constraint. \n\nOne of the documented methods to overcome this problem is to use an uncon-\nstrained three component vector in order to represent an attitude-error quaternion \ninstead of using all four components of the quaternion vector.  In this paper we pre-\nferred to use the vector of Generalized Rodrigues Parameters (GRP) for representing \nthe local error-quaternion. For details readers may refer to [5]. \n\nFirst let us rewrite the quaternion vector by 4\nTT q? ?= ? ?q g , so [ ]1 2 3\n\nT\n= q q qg . \n\nAfter that when the local error-quaternion is denoted by 4\nTT q? ? ?? ?= ? ?q g  , the \n\nvector of GRP may be given as [5], \n\n[ ]4/ ( )f a q? ? ?= +p g .                                               (5) \n\nHere a is a parameter from 0 to1 and f is the scale factor. When 0a =  and 1f =  then \nEq. (5) gives the Gibbs vector and when 1a =  and 1f =  then Eq. (5) gives the  \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 395 \n\n \n\nstandard vector of modified Rodrigues parameters. In [5] - as well as in this paper -   f  \nis chosen as 2( 1)f a= + . The inverse transformation from ? p to ? q is given by \n\n2 22 2\n\n4 22\n\n(1 )a f f a\nq\n\nf\n\n? ?\n?\n\n?\n\n? + + ?\n=\n\n+\n\np p\n\np\n  ,                                     (6a) \n\n1\n4( )f a q? ? ?\n\n?= +g p  .                                                (6b) \n\nFor a full-state attitude estimator where attitude and attitude rates are estimated \njointly, we also need dynamic knowledge. The dynamic equations of the satellite can \nbe derived based on the Euler\u2019s equations;  \n\n           ( ) ,BI d BI BIJ Jdt = ? \u00d7N\n? ? ?                                            (7) \n\nwhere J  is the inertia matrix consists of   principal moments of inertia as \n\n( ), ,x y zJ diag J J J=  and dN is the vector of disturbance torque affecting the satellite \nwhich can be given as a sum of \n\n              d gg ad sp md= + + +N N N N N  .                                       (8) \n\nHere ggN  is the gravity gradient torque, adN is the aerodynamic disturbance torque, \n\nspN  is the solar pressure disturbance torque and  mdN  is the residual magnetic torque \n\nwhich is caused by the interaction of the satellite\u2019s residual dipole and the Earth\u2019s \nmagnetic field [21].   \n\n2.2 Sensor Models \n\nMagnetometer is a favorite sensor type for attitude estimation especially in small \nsatellite applications. The model for the magnetometer measurements is given by (let \nus assume that magnetometers are already calibrated with one of the in-orbit or on-\nground estimation methods [4,22]), \n\n( )\n( )\n( )\n\n( )\n( )\n( )\n\n1\n\n2 1\n\n3\n\n,\n\n,\n\n,\n\nx\n\ny\n\nz\n\nB t B t\n\nB t A B t\n\nB t B t\n\n?\n? ? ? ?\n? ? ? ?= +? ? ? ?\n? ? ? ?? ? ? ?\n\nq\n\nq\n\nq\n\n,                                         (9) \n\nwhere ( )1B t , ( )2B t and ( )3B t  represent the Earth magnetic field vector components \nin the orbit frame as a function of time and can be modeled as given in [23]. \n\nTherefore, ( ),xB tq , ( ),yB tq  and ( ),zB tq  show the measured Earth magnetic \nfield vector components in the body frame as a function of time and varying quater-\nnion vector. Furthermore, concerning the Eq.(7), 1?  is the zero mean Gaussian white \nnoise with the characteristic of  \n\n\n\n396 H.E. Soken, C. Hajiyev, and S. Sakai \n\n \n\n2\n1 1 3 3\n\nT\nk j x m kjE I? ? ? ?? ? =? ? .                                             (10) \n\n3 3xI is the identity matrix with the dimension of  3 3\u00d7  , m? is the standard deviation \nof each magnetometer error and kj?  is the Kronecker symbol. \n\n3 Robust Kalman Filtering for Satellite Attitude Estimation \n\nThe EKF and UKF work accurately when there is no fault in the measurement system. \nOn the contrary, in case of a fault such as abnormal measurements, step-like changes \nor sudden shifts in the measurement channel etc. the filter deteriorates and the estima-\ntion outputs become faulty. \n\nTherefore, a robust algorithm must be introduced such that the filter is insensitive \nto the measurements in case of malfunctions and the estimation process is corrected \nwithout affecting the remaining good estimation behavior.   \n\nThe robustness of the filter is secured by scaling the measurement noise covariance \nmatrix in case of fault. In this sense two different approaches may be used: Scaling by \na single scale factor or scaling by a scale matrix built of multiple scale factors. In \ngeneral, despite its relative simplicity, using single scale factor is not a healthy proce-\ndure since the filter should be insensitive just to the measurements of the faulty sen-\nsor, not to the all sensors including the ones working properly [6]. In contrast a matrix \nbuilt of multiple scale factors might be preferred since in this method the relevant \nterms of the measurement noise covariance are fixed, individually.  \n\nThe robust algorithm affects characteristic of the filter only when the condition of \nthe measurement system does not correspond to the model used in the synthesis of the \nfilter. Otherwise the UKF or EKF work with the regular algorithm.  \n\nThis section gives the detailed discussion about the adaptation procedures of the \nEKF and UKF which makes them robust against any kind of measurement malfunc-\ntion. The conventional algorithms for the UKF and EKF are not presented here for \nbrevity and for details reader may refer to [2,5,24].  \n\n3.1 Robust Unscented Kalman Filter \n\nIt is known that the UKF innovation sequence can be determined by,  \n\n( ) ( ) ( )\u02c61 1 1 ,k k k k+ = + ? +e y y                                         (11) \n\nwhere, ( )1k +y is the measurements vector and ( )\u02c6 1k k+y  is the predicted observa-\ntion vector.  \n\nThe essence of the adaptation procedure against the measurement malfunctions is \nto compare the real and theoretical values of the innovation covariance matrix. When \nthere is a sensor fault in the system, the real error will exceed the theoretical one. In \nthis case we may ensure the robustness of the filter against the sensor fault by adapt-\ning the R matrix, which is a diagonal matrix, formed of the measurement process \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 397 \n\n \n\nnoise covariances. The adaptation procedure basically aims at finding an appropriate \nmultiplier for the R, such that the real and theoretical values of the innovation cova-\nriance match. As discussed, this multiplier might be either as a single factor or a ma-\ntrix formed of multiple factors. In case we use a single factor, matching the real and \ntheoretical values of the innovation covariance means that we basically increase all \nthe terms of the R matrix and impose to the UKF that the measurements are faulty. \nHowever we do not isolate which sensor is malfunctioning. On the contrary when we \nuse multiple scale factors we correct the necessary term of the R matrix (the term \nwhich corresponds to the sensor with the faulty measurement). In other word we \nmake UKF disregard just the measurements of this sensor which is not reliable at that \nsampling time.  \n\nSingle Scale Factor. As stated the essence of the adaptation is the covariance match-\ning. For single scale factor approach we match the trace of the covariances such that \n\n( ) ( ) ( ) ( ) ( )1 1 1 1T yytr e k e k tr P k k S k R k? ?? ?+ + = + + +? ? ? ?  ,                 (12) \n\nwhere ( )1yyP k k+ is the observation covariance,  ( )1R k + is the measurement noise \ncovariance and ( )S k is the introduced single scale factor. [ ]tr ? is the trace of the re-\nlated matrix. We may rewrite the equation as \n\n( ) ( ) ( ) ( ) ( )1 1 1 1T yytr e k e k tr P k k S k tr R k? ?? ?+ + = + + +? ?? ?? ? ? ? .               (13) \n\nThen, regarding  ( ) ( ) ( ) ( )1 1 1 1T Ttr e k e k e k e k? ?+ + = + +? ?   the single scale factor can \nbe obtained  \n\n( )\n( ) ( ) ( )\n\n( )\n1 1 1\n\n.\n1\n\nT\nyye k e k tr P k k\n\nS k\ntr R k\n\n? ?+ + ? +? ?=\n+? ?? ?\n\n                             (14) \n\nThe scale factor affects the Kalman gain as; \n\n( ) ( ) ( ) ( ) ( ) 11 1 1 1xy yyK k P k k P k k S k R k\n?\n\n? ?+ = + + + +? ? .                     (15) \n\nHere ( )1K k + is the Kalman gain and ( )1xyP k k+ is the cross correlation matrix. \nIn case of sensor fault the scalar scale factor will take a larger value and that will \n\nincrease all terms of the innovation covariance. Eventually the Kalman gain will de-\ncrease and the measurements will be disregarded in the state update process (or taken \ninto consideration with lesser weight than the regular case). In such approach the \ninformation about the faulty sensor isolation does not have any significance; all of the \ncurrent information from the measurements is left out and the UKF relies mostly on \nthe propagation information during the estimation.   \n\n\n\n398 H.E. Soken, C. Hajiyev, and S. Sakai \n\n \n\nMultiple Scale Factor. Firstly, we add a matrix built of multiple scale factors, ( )S k , \ninto the algorithm in order to tune the measurement noise covariance matrix and \nmatch the real and theoretical innovation covariances, \n\n( ) ( ) ( ) ( ) ( )\n1\n\n1\n1 1 1 1 .\n\nk\nT\n\nyy\nj k\n\nj j P k k S k R k\n?? = ? +\n\n+ + = + + +? e e                  (16) \n\nHere, ? is the width of the moving window. Left hand side of the equation represents \nthe real innovation covariance while the right hand side stands for the theoretical in-\nnovation covariance. Then, if we re-arrange the equation, it is clear that we can get \nthe scale matrix by [25], \n\n( ) ( ) ( ) ( ) ( )1\n1\n\n1\n1 1 1 1 .\n\nk\nT\n\nyy\nj k\n\nS k j j P k k R k\n??\n\n?\n\n= ? +\n\n? ?\n= + + ? + +? ?\n? ?\n\n? e e                   (17) \n\nIn case of a measurement fault for one of the sensors then the corresponding term of \nthe scale matrix will be a relatively larger term and that will increase the measurement \nnoise covariance of this sensor in the R matrix. Eventually this faulty measurement \nwill be disregarded (or regarded with a lower gain) by the filter. On the other hand, \nthe scale matrix affects the estimation procedure only when the measurements are \nfaulty. Otherwise, in case of normal operation, the scale matrix will be a unit matrix \n\nas ( ) z zS k I \u00d7= , where z is the size of the innovation vector.  \nNonetheless, as ? is a limited number because of the number of the measurements \n\nand the computations performed with the computer implies errors such as the approx-\n\nimation and round off errors;  ( )S k  matrix  that is calculated by the use of Eq. (17) \nmay not be diagonal and may have diagonal elements which are \u201cnegative\u201d or lesser \n\nthan \u201cone\u201d. ( )S k matrix should be diagonal because only its diagonal terms have \nsignificance on the adaptation since each diagonal term corresponds to the noise cova-\n\nriance of each measurement (for the adaptation procedure ( )S k  matrix is multiplied \nwith the diagonal R matrix). Besides the measurement noise covariance matrix must \n\nbe positive definite (that is why the multiplier ( )S k  matrix cannot have negative \nterms) and also any term of this matrix cannot decrease in time for this specific prob-\nlem since there is no possibility for increasing the performance of the onboard sensor \n\n(that is why the multiplier ( )S k  matrix cannot have terms less than one). \nTherefore, in order to avoid such situations, composing the scale matrix by the fol-\n\nlowing rule is suggested: \n\n( )1 2, , , zS diag s s s? ? ? ?= \u2026                                             (18) \n\n{ }max 1, 1,i iis S i z? = = .                                           (19)  \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 399 \n\n \n\nHere, iiS  represents the ith diagonal element of the matrix ( )S k . Apart from that \npoint, if the measurements are faulty, ( )S k? will change and so affect the Kalman \ngain as; \n\n( ) ( ) ( ) ( ) ( ) 11 1 1 1xy yyK k P k k P k k S k R k\n??? ?+ = + + + +? ? .                     (20) \n\nIn case of any kind of malfunction, the element(s) of the scale matrix, which cor-\nresponds to the faulty component(s) of the innovation vector, increases and so the \nterms in the related column(s) of the Kalman gain decreases. As a consequence, the \neffect of the faulty innovation term on the state update process reduces and accurate \nestimation results can be obtained even in case of measurement malfunctions. \n\n3.2 Robust Extended Kalman Filter \n\nThe adaptation procedure of the EKF is not different from the one for the UKF. Basi-\ncally this time we apply the same method by using the EKF equations.  \n\nFirstly we can easily show that the single scale factor for the EKF is calculated as \n \n\n( )\n( ) ( )\n\n( )\n1 1 ( 1) ( 1 ) ( 1)\n\n.\n1\n\nT Te k e k tr H k P k k H k\nS k\n\ntr R k\n\n? ?+ + ? + + +? ?=\n+? ?? ?\n\n                 (21) \n\n \n\nHere ( 1 )P k k+ is the predicted covariance matrix and ( 1)H k + is the measurement \nmatrix constituted of the partial derivatives. \n\nNonetheless in order to derive the equation for the multiple scale factor, similarly \nwith the UKF, we compare the real and theoretical values of the innovation covari-\n\nance matrix and add a scale matrix, ( )S k , into the algorithm as, \n\n( ) ( ) ( ) ( )\n1\n\n1\n1 1 ( 1) ( 1 ) ( 1) 1\n\nk\nT T\n\nj k\n\nj j H k P k k H k S k R k\n?? = ? +\n\n+ + = + + + + +? e e  .     (22) \n\nThen, the definition for the scale matrix is, \n\n( ) ( ) ( ) ( )1\n1\n\n1\n1 1 ( 1) ( 1 ) ( 1) 1\n\nk\nT T\n\nj k\n\nS k j j H k P k k H k R k\n??\n\n?\n\n= ? +\n\n? ?\n= + + ? + + + +? ?\n? ?\n\n? e e .    (23) \n\nAfter that we use the Eq. (18, 19) to correct and diagonalize the scale matrix. Finally \nthe Kalman gain is tuned as; \n\n( ) ( ) ( ) 11 ( 1 ) ( 1) ( 1) ( 1 ) ( 1) 1T TK k P k k H k H k P k k H k S k R k ??? ?+ = + + + + + + +? ? (24) \n\n\n\n400 H.E. Soken, C. Hajiyev, and S. Sakai \n\n \n\n3.3 Fault Detection Procedure \n\nAs aforementioned, we use the robust Kalman filters only in case of the fault and in \nall other cases, the filters run following their regular algorithms. The fault detection is \nrealized via a kind of statistical information. In order to achieve that, following two \nhypotheses may be proposed: \n\n\u2022 o? ; the system is normally operating \n\u2022 1? ; there is a malfunction in the estimation system. \n\nThen we may introduce the following statistical functions for the RUKF and REKF \nrespectively, \n\n( ) ( ) ( ) ( )1( ) 1 1 1 1 ,T yyk k P k k R k k?\n?\n\n? ?= + + + + +? ?e e                    (25) \n\n( ) ( ) ( )1( ) 1 ( 1) ( 1 ) ( 1) 1 1 .T Tk k H k P k k H k R k k? ?? ?= + + + + + + +? ?e e       (26) \n\nThese functions have 2? distribution with z degree of freedom, where z  is the \ndimension of the innovation vector. \n\nIf the level of significance, ,?  is selected as, \n\n{ }2 2, ;zP ?? ? ?> =           0 1?< < ,                                   (27) \n\nthe threshold value, 2,z??  can be determined. Hence, when the hypothesis 1?  is cor-\nrect, the statistical value of ( )k?  will be greater than the threshold value 2,s?? , i.e.: \n\n( ) 20 ,: sk ?? ? ??             k?  \n\n                ( ) 21 ,: sk ?? ? ?>               k?   .                                     (28) \n\n4 Robust Kalman Filtering for Satellite Attitude Estimation \n\nIn this section, the proposed robust Kalman filtering algorithms are tested via simula-\ntions for a small satellite model. Besides, the same simulation scenarios are repeated \nby using the conventional UKF or EKF algorithms and the results are compared. \n\nThe simulations are realized for 7000 seconds with a sampling time of \n0.1sec.t? =  This period coincides with approximately 1 orbit of the satellite. None-\n\ntheless the orbit of the satellite is assumed as circular. Other orbit parameters are; the \nmagnetic dipole moment of the Earth, 157.943 10 . ;eM x Wb m=  the Earth Gravita-\ntional constant, 14 3 23.98601 10 / ;x m s? =  the orbit inclination, 31 ;i =  the spin \nrate of the Earth, 57.29 10 / ;e x rad s?\n\n?=  the magnetic dipole tilt, 11.7 ;? =  the \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 401 \n\n \n\ndistance between the centre of mass of the satellite and the Earth, 0 7450 .r km=  The \ninertia matrix for the used small satellite model is 2(310 180 180) . .J diag kg m=  \n\nFor the magnetometer measurements, the sensor noise is characterized by zero \nmean Gaussian white noise with a standard deviation of 300m nT? = . As the filter \nparameters for the UKF and RUKF, ? is selected as 2? = ? , where 2( 1)f a= + and\n\n1a = .  For the REKF and RUKF the size of the moving window is taken as 30? = .  \nThe initial attitude errors in the simulations are set to 50 degrees for all three axes. \n\nBesides, the initial value of the covariance matrix is taken as \n4 4 4\n\n0 0.5 0.5 0.5 10 10 10P diag\n? ? ?? ?= ? ? while the process noise covariance \n\nmatrix is selected as 7 7 7 12 12 1210 10 10 10 10 10Q diag ? ? ? ? ? ?? ?= ? ? .  \n\nNonetheless, for the fault detection procedure, 2,z??  is taken as 7.81 and this value \ncomes from chi-square distribution when the degree of freedom is 3 and the reliability \nlevel is 95%.  \n\nThree different scenarios are taken into consideration for simulating the fault in the \nmeasurements; the continuous bias, fault of zero output and measurement-noise in-\ncrement. For each scenario a series of simulations are run by the REKF, RUKF and as \nwell the conventional EKF and UKF algorithms. \n\n4.1 Continuous Bias Failure \n\nIn this scenario, a constant value is added to the measurements of the magnetometer \naligned in the x axis between the 3000th and 3200th seconds for a period of 200 sec-\nonds such that; \n\n                      ( ) ( ), , 20000x xB t B t nT= +q q       3000 3200sect = \u2026   \n\nThe constant term, selected as 20000nT , almost doubles the magnetometer output. \nIn Fig.1 the attitude estimation error of the UKF and RUKF are given for the pitch \n\nangle. The RUKF that uses single scale factor is plotted with dotted line and labeled \nas RUKFs while the RUKF with multiple scale factors is plotted with dashed line and \nlabeled as RUKFm. Apparently, in case of fault the estimation accuracy for the con-\nventional UKF algorithm deteriorates. The RUKF with single scale factor lessens the \neffect of the fault but still the filter is not fully recovered and after the measurement \nfault ends at 3200th sec. the RUKFs estimations show a fluctuating behavior. The rea-\nson for a filter that is not fully recovered is disregarding the measurements of all three \nmagnetometers as a result of increasing all terms of the R matrix via multiplication \nwith a single large scale factor (see Fig.2 for the variation of the single scale factor). \nInstead of isolating the faulty sensor and leaving out just its measurements, the \nRUKFs considers all of the measurement as faulty and throughout this period it most-\nly relies on the propagation values. In this case especially for a filter with relatively \nhigher process noise covariance, Q, the estimation errors accumulate and the filter \nstarts to diverge from the actual values. The Table 1, which  gives the  absolute values  \n\n\n\n402 H.E. Soken, C. Hajiyev\n\n \n\nFig. 1. Pitch angle estima\n\n \n\nFig. 2. Variation of the \n\nv, and S. Sakai \n\nation error for the UKF and RUKF in case of continuous bias \n\n \n\nsingle scale factor for the RUKF in case of continuous bias \n\n \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 403 \n\n \n\nTable 1. Absolute Estimation Errors in case of continuous bias: Regular UKF, RUKF with \nsingle scale factor (SSF) and RUKF with multiple scale factor (MSF) \n\n \n \n \nParameter \n\nAbs. Err. Values \nfor Regular \n\nUKF \n\nAbs. Err. Values \nfor RUKF with \n\nSSF \n\nAbs. Err. Values \nfor RUKF with \n\nMSF \n3050 s. 3150 s. 3050 s. 3150 s. 3050 s. 3150 s. \n\n(deg)?  10,580 10,835 0,1901 0,4936 0,0207 0,0430 \n(deg)?  0,6945 5,1327 0,1116 1,8268 0,0033 0,0178 \n(deg)?  0,6131 0,8453 0,0862 2,6225 0,0041 0,0030 \n\nTable 2. Absolute Estimation Errors in case of continuous bias: Regular EKF, REKF with \nsingle scale factor (SSF) and REKF with multiple scale factor (MSF) \n\n \n \n \nParameter \n\nAbs. Err. Values \nfor Regular \n\nEKF \n\nAbs. Err. Values \nfor REKF with \n\nSSF \n\nAbs. Err. Values \nfor REKF with \n\nMSF \n3050 s. 3150 s. 3050 s. 3150 s. 3050 s. 3150 s. \n\n 7,1599 5,9440 3,7358 2,2637 0,5298 0,6140 \n\n 2,2395 2,2887 0,1460 1,8108 0,1000 0,2523 \n\n 1,9778 2,1547 1,4322 5,5227 0,1291 0,0056 \n\n \n \n\nof error at 3050th and 3150th seconds, supports this interpretation. Clearly the estima-\ntion error for the RUKFs at the 3150\n\nth sec is higher than the one at the 3050th sec. \nHence the single scale factor approach may be useful only for faults which lasts a \nshort period. On the contrary the RUKF with the multiple scale factors does not have \nsuch limitation and keeps its estimation accuracy without being affected from the \nfault. An examination on the scale matrix at an instant between the 3000th and 3200th \nseconds of the simulation shows that the algorithm works properly; \n\n(4427 1 1.59).S diag? = Since the fault is in the measurements of the magnetome-\nter aligned in the x axis, the correction must be applied to the first term of the R ma-\ntrix as in this case. The large first diagonal term of the scale matrix decreases the \nterms in the first column of the Kalman gain and so the faulty innovation term (the \nfirst term of the innovation vector) is disregarded in the state update process. \n\nIn Fig.3 the estimation results for the REKF and EKF are given. Likewise the \nRUKFm, the REKFm is not affected from the measurement fault and sustains reliable \nestimation results for the whole period. Although the REKF with single scale gives \nsatisfactory results for a short period starting from 3000th sec. it deteriorates later on \nbecause of disregarding even the healthy measurements.  Table 2 may be seen for \nmore detailed investigation. \n\nNonetheless, a comparison between the performances of the UKF and EKF (or \nRUKF vs. REKF) shows that the UKF algorithms outperform the EKF algorithms in \n\n(deg)?\n(deg)?\n(deg)?\n\n\n\n404 H.E. Soken, C. Hajiyev\n\n \n\nterms of accuracy and the c\naccuracy with less than 2deg\nis an expected result for high\n\nFig. 3. Pitch angle estima\n\n4.2 Measurement Noise\n\nIn this scenario, the measur\ntiplied with a constant betw\nonds. In fault case the\n\n300 100 .\nx\n\nf\nm nT? = \u00d7  \nIn Fig.4, the estimation \n\nserved, again the UKF fail\nand the noisy measurement\nthe fault itself. For this sim\naccuracy less than 0.1 deg. \nsurement noise increment b\nwith single and multiple fac\ncase this time single scale f\nSince the noise in the meas\nwith the robust algorithm f\ntake values that are closer \non the magnitude of the noi\n\nv, and S. Sakai \n\nconvergence speed. Obviously the EKF can satisfy attit\ng error approximately 1500 seconds later than the UKF. T\nh initial attitude error as already discussed in literature [5]\n\nation error for the EKF and REKF in case of continuous bias \n\ne Increment Failure \n\nrement noise of the magnetometer aligned in x axis is m\nween the 3000th and 3200th seconds for a period of 200 s\ne standard deviation of this magnetometer becom\n\nresults for the UKF and RUKF are given. As can be \nls about giving accurate estimation results in case of f\nts make the estimations deteriorate for a longer period t\n\nmulation case it takes 3000 seconds for the filter to sati\nafter the fault removes. On the other hand in case of m\n\nboth approaches for robust Kalman filtering that are scal\nctors give accurate estimation results. Unlike the first fa\nfactor works properly because of the fault\u2019s characteris\nsurements is random the filter does not work continuou\nfor whole 200 seconds and moreover the scale factor m\nto the one. In other words the filter tunes itself depend\nise and does not disregard the measurements for the who\n\ntude \nThis \n].  \n\n \n\nmul-\nsec-\nmes \n\nob-\nfault \nthan \nisfy \n\nmea-\nling \n\nfault \nstic. \nusly \nmay \nding \nole  \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 405 \n\n \n\n \nFig. 4. Pitch angle estimation error for the UKF and RUKF in case of measurement noise  \nincrement \n\n \n\nFig. 5. Variation of the single scale factor for the RUKF in case of measurement noise  \nincrement \n\n\n\n406 H.E. Soken, C. Hajiyev, and S. Sakai \n\n \n\nfault period; it only does when the 2,z?? threshold is exceeded and the magnitude of \nthe noise is high such that the scale factor takes large values. Variation of the single \nscale factor confirms that (Fig. 5). Hence specifically for this fault scenario the \nRUKFs and RUKFm do not have any significant difference in the sense of estimation \naccuracy (Table 3).  \n\nTable 3. Absolute Estimation Errors in case of measurement noise increment: Regular UKF, \nRUKF with single scale factor (SSF) and RUKF with multiple scale factor (MSF) \n\n \n \n \n\nParameter \n\nAbs. Err. Val-\nues for Regular \n\nUKF \n\nAbs. Err. Values \nfor RUKF with \n\nSSF \n\nAbs. Err. Val-\nues for RUKF \n\nwith MSF \n3050 s. 3150 s. 3050 s. 3150 s. 3050 s. 3150 s. \n\n(deg)?  3,4186 4,3199 0,0010 0,0242 0,0269 0,0412 \n(deg)?  0,2853 1,3830 0,0134 0,0048 0,0062 0,0174 \n(deg)?  0,9533 0,9003 0,0026 0,0049 0,0017 0,0015 \n\n \nThe performed simulations have proved that the REKF is also capable of overcom-\n\ning the deteriorating effect of the measurement noise increment. For the simulation \nwith the REKF, the REKFm gives slight more accurate estimations than the REKFs \n(Fig. 6 and Table 4). \n\n \nFig. 6. Pitch angle estimation error for the EKF and REKF in case of measurement noise  \nincrement \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 407 \n\n \n\nTable 4. Absolute Estimation Errors in case of measurement noise increment: Regular EKF, \nREKF with single scale factor (SSF) and REKF with multiple scale factor (MSF) \n\n \n \n \nParameter \n\nAbs. Err. Values \nfor Regular \n\nEKF \n\nAbs. Err. Values \nfor REKF with \n\nSSF \n\nAbs. Err. Values \nfor REKF with \n\nMSF \n3050 s. 3150 s. 3050 s. 3150 s. 3050 s. 3150 s. \n\n(deg)?  0,1332 0,2110 2,7516 2,3680 0,7954 0,9315 \n(deg)?  1,1840 0,1027 0,1554 0,6464 0,1114 0,3182 \n(deg)?  1,5309 0,7592 0,6777 0,3859 0,2131 0,0266 \n\n4.3 Zero Output Failure \n\nThe third failure case, which is fault of zero output, is simulated by simply making the \nmeasurement output of one of the magnetometers zero so it measures 0nT for 200 \nseconds between the 3000th and 3200th seconds.  In order to test the algorithm this \ntime the fault is implemented to the magnetometer aligned in the z axis:    \n\n( ) 1, 0z zB t ?= +q           3000 3200sect = \u2026  \n\nIn Fig.7 the estimation results for the UKF and RUKF are given. Obviously, same \nas the first simulation scenario, the UKF cannot achieve accurate estimation whereas \nthe RUKF with the single scale factor can overcome the fault only for a short period. \nBecause of taking none of the measurements into consideration the RUKFs estima-\ntions get worse when the robust algorithm runs longer than 50 seconds. The single \nscale factor behaves in a similar manner with its trend for the continuous bias fault \nscenario (Fig. 8). Moreover, the results show us when the filter is not robust the zero \noutput failure has a high detractive impact on the estimation accuracy that lasts for a \nvery long period. Even though the filter\u2019s response may vary when it is designed with \ndifferent parameters (such as the Q matrix) simulations show that a fault may affect \nthe filter for a longer period than its length. Therefore if the magnetometer measures 0 \neven for just few seconds, it is not possible to compensate that with a filter other than \nthe robust ones. In this sense the estimation results for the RUKFm clearly signify the \nimportance of using the proposed algorithm. The RUKFm is not affected from the \nfault and can perform accurate estimation even when the fault lasts long by simply \ndisregarding the measurements of the faulty magnetometer and working on the basis \nof the measurements from two properly operating magnetometers (Table 5 may be \nseen for further examination).  The sample for the multiple scale factors in case of \nfault validates that the RUKFm disregards the measurements of the magnetometer \naligned in the z axis as it supposed to be (1.44 1 4024).S diag? =   \n\nIn Fig.9 and Table 6 the estimation results for the EKF and REKF are given. Same \nas the UKF, the EKF fails at giving accurate estimation results for a longer period \nthan the fault itself whereas the REKFm is superior to REKFs regarding the estimation \naccuracy.   \n\n\n\n408 H.E. Soken, C. Hajiyev\n\n \n\nFig. 7. Pitch angle estimati\n\nFig. 8. Variation of the si\n\nv, and S. Sakai \n\nion error for the UKF and RUKF in case of zero output failure\n\n \n\ningle scale factor for the RUKF in case of zero output failure \n\n \ne \n\n\n\n Robust K\n\n \n\nTable 5. Absolute Estimation \nsingle scale factor (SSF) and R\n\n \n \n\n \nParameter \n\nAbs. E\nfor \n\nU\n3050 s\n\n(deg)?  9,7561\n(deg)?  7,0059\n(deg)?  9,6897\n\n \n\nFig. 9. Pitch angle estimati\n\nTable 6. Absolute Estimation \nsingle scale factor (SSF) and R\n\n \n \n\n \nParameter \n\nAbs. E\nfor \n\nE\n3050 s\n\n(deg)?  53,686\n(deg)?  5,2576\n(deg)?  30,024\n\nKalman Filtering with Single and Multiple Scale Factors \n\nErrors in case of zero output failure: Regular UKF, RUKF w\nRUKF with multiple scale factor (MSF) \n\nErr. Values \nRegular \nUKF \n\nAbs. Err. Values \nfor RUKF with \n\nSSF \n\nAbs. Err. Values \nfor RUKF with \n\nMSF \n. 3150 s. 3050 s. 3150 s. 3050 s. 3150 s. \n\n1 42,492 0,0321 0,2176 0,0892 0,0567 \n\n9 8,1779 0,0293 0,3733 0,0521 0,0576 \n\n7 41,673 0,0114 0,1908 0,0163 0,0191 \n\nion error for the EKF and REKF in case of zero output failure\n\n Errors in case of zero output failure: Regular EKF, REKF w\nREKF with multiple scale factor (MSF) \n\nErr. Values \nRegular \nEKF \n\nAbs. Err. Values \nfor REKF with \n\nSSF \n\nAbs. Err. Values \nfor REKF with \n\nMSF \n. 3150 s. 3050 s. 3150 s. 3050 s. 3150 s. \n\n6 148,50 2,8558 1,8026 1,5884 1,2380 \n\n6 0,8919 0,0760 2,2197 0,2049 0,4120 \n\n4 45,173 0,9518 3,6684 0,3210 0,0242 \n\n409 \n\nwith \n\n \n\ne \n\nwith \n\n\n\n410 H.E. Soken, C. Hajiyev, and S. Sakai \n\n \n\n5 Conclusion \n\nIn this paper, a covariance scaling based Robust Kalman filtering method is proposed \nfor the attitude estimation problem and applied to the both EKF and UKF. The simu-\nlation results show that both the RUKF and REKF perform well when a specific mea-\nsurement fault is the point at issue. On the other hand, the conventional filters (the \nUKF and EKF) fails at giving accurate estimation results for the period of the fault \nand as well for some additional time that is necessary for filter to converge again. \nMoreover, the RUKF outperforms all other filters including the REKF for all simula-\ntion cases when the initial attitude error is high as in case.  \n\nAcknowledgments. This work was supported in part by Japanese Government with \nMONBUKAGAKUSHO scholarship and also by Japan Aerospace Exploration Agen-\ncy (JAXA) with a research grant. \n\nReferences \n\n1. Lefferts, E.J., Markley, F.L., Shuster, M.D.: Kalman Filtering for Spacecraft Attitude Es-\ntimation. Journal of Guidance, Control and Dynamics 5, 417\u2013422 (1982) \n\n2. Markley, F.L., Crassidis, J.L., Cheng, Y.: Nonlinear Attitude Filtering Methods. In: AIAA \nGuidance, Navigation, and Control Conference and Exhibit, San Francisco (2005) \n\n3. Julier, S.J., Uhlmann, J.K., Durrant-Whyte, H.F.: A New Approach for Filtering Nonlinear \nSystems. In: American Control Conference, Seattle, vol. 3, pp. 1628\u20131632 (1995) \n\n4. Soken, H.E., Hajiyev, C.: UKF-Based Reconfigurable Attitude Parameters Estimation and \nMagnetometer Calibration. IEEE Transactions on Aerospace and Electronic Systems 48, \n2614\u20132627 (2012) \n\n5. Crassidis, J.L., Markley, F.L.: Unscented Filtering for Spacecraft Attitude Estimation. \nJournal of Guidance, Control and Dynamics 26, 536\u2013542 (2003) \n\n6. Soken, H.E., Hajiyev, C.: Pico Satellite Attitude Estimation via Robust Unscented Kalman \nFilter in the Presence of Measurement Faults. ISA Transactions 49, 249\u2013256 (2010) \n\n7. Mehra, R.K.: On the Identification of Variances and Adaptive Filtering. IEEE Transactions \non Automatic Control 15, 175\u2013184 (1970) \n\n8. Mehra, R.K.: Approaches to Adaptive Filtering. IEEE Transactions on Automatic Con-\ntrol 17, 693\u2013698 (1972) \n\n9. Mohamed, A.H., Schwarz, K.P.: Adaptive Kalman Filtering for INS/GPS. Journal of Geo-\ndesy 73, 193\u2013203 (1999) \n\n10. Geng, Y., Wang, J.: Adaptive Estimation of Multiple Fading Factors in Kalman Filter for \nNavigation Applications. GPS Solutions 12, 273\u2013279 (2008) \n\n11. Kim, K.H., Lee, J.G., Park, C.G.: Adaptive Two-Stage Kalman Filter in the Presence of \nUnknown Random Bias. International Journal of Adaptive Control and Signal \nProcessing 20, 305\u2013319 (2006) \n\n12. Odelson, B.J., Rajamani, M.R., Rawlings, J.B.: A new Autocovariance Least-Squares Me-\nthod for Estimating Noise Covariances. Automatica 42, 303\u2013308 (2006) \n\n13. Dunik, J., Simandl, M., Straka, O.: Methods for Estimating State and Measurement Noise \nCovariance Matrices: Aspects and Comparison. In: 15th IFAC Symposium on System \nIdentification, Saint-Malo, pp. 972\u2013977 (2009) \n\n\n\n Robust Kalman Filtering with Single and Multiple Scale Factors 411 \n\n \n\n14. Kim, K.H., Lee, J.G., Park, C.G.: Adaptive Two-Stage Extended Kalman Filter for a Fault-\nTolerant INS-GPS Loosely Coupled System. IEEE Transactions on Aerospace and Elec-\ntronic Systems 45, 125\u2013137 (2009) \n\n15. Han, J., Song, Q., He, Y.: Adaptive Unscented Kalman Filter and Its Applications in Con-\ntrol. In: Moreno, V.M., Pigazo, P. (eds.) Kalman Filter: Recent Advances and Applica-\ntions, pp. 1\u201324. InTeh Publishing, Rijeka (2009) \n\n16. Liu, J., Lu, M.: An Adaptive UKF Filtering Algorithm for GPS Position Estimation. In: \n5th International Conference on Wireless Communications, Networking and Mobile Com-\nputing, Beijing, pp. 1\u20134 (2009) \n\n17. Shi, Y., Han, C., Liang, Y.: Adaptive UKF for Target Tracking with Unknown Process \nNoise Statistics. In: 12th International Conference on Information Fusion, Seattle, pp. \n1815\u20131820 (2009) \n\n18. Jwo, D., Wang, S.: Adaptive Fuzzy Strong Tracking Extended Kalman Filtering for GPS \nNavigation. IEEE Sensors Journal 7, 778\u2013789 (2007) \n\n19. Jwo, D., Tseng, C.: Fuzzy Adaptive Interacting Multiple Model Unscented Kalman Filter \nfor Integrated Navigation. In: 18th IEEE International Conference on Control Applications \nPart of 2009 IEEE Multi-Conference on Systems and Control, Saint Petersburg, pp. 1684\u2013\n1689 (2009) \n\n20. Jwo, D., Chung, F.: Fuzzy Adaptive Unscented Kalman Filter for Ultra-Tight GPS/INS In-\ntegration. In: The International Symposium on Computational Intelligence and Design, \nHangzhou, pp. 229\u2013235 (2010) \n\n21. Wertz, J.R.: Spacecraft Attitude Determination and Control. Kluwer Academic Publishers, \nDordrecht (1988) \n\n22. Alonso, R., Shuster, M.D.: Complete Linear Attitude-Independent Magnetometer Calibra-\ntion. Journal of Astronautical Science 50, 477\u2013490 (2002) \n\n23. Sekhavat, P., Gong, Q., Ross, I.M.: Unscented Kalman Filtering: NPSAT I Ground Test \nResults. In: AIAA Guidance, Navigation, and Control Conference and Exhibit, Colorado \n(2006) \n\n24. Filipski, M.N., Varatharajoo, R.: Evaluation of a Spacecraft Attitude and Rate Estimation \nAlgorithm. Aircraft Engineering and Aerospace Technology 82, 184\u2013193 (2010) \n\n25. Soken, H.E., Hajiyev, C., Sakai, S.: Robust Kalman Filtering for Small Satellite Attitude \nEstimation in the Presence of Measurement Faults. European Journal of Control 20, 64\u201372 \n(2014) \n\n \n\n\n\nSpacecraft Attitude Determination with\n\nSun Sensors, Horizon Sensors and Gyros:\nComparison of Steady-State Kalman Filter\n\nand Extended Kalman Filter\n\nVaibhav V. Unhelkar and Hari B. Hablani\n\nIndian Institute of Technology Bombay, Powai, Mumbai, India\nv.unhelkar@iitb.ac.in, hbhablani@aero.iitb.ac.in\n\nAbstract. Attitude determination, along with attitude control, is crit-\nical to functioning of every space mission. In this paper, we investigate\nand compare, through simulation, the application of two autonomous se-\nquential attitude estimation algorithms, adopted from the literature, for\nattitude determination using attitude sensors (sun sensor and horizon\nsensors) and rate-integrating gyros. The two algorithms are: the direc-\ntion cosine matrix (DCM) based steady-state Kalman Filter, and the\nclassic quaternion-based Extended Kalman Filter. To make the analy-\nsis realistic, as well as to improve the attitude determination accuracies,\ndetailed sensor measurement models are developed. Modifications in the\nattitude determination algorithms for estimation of additional states to\naccount for sensor biases and misalignments are presented. A modular\nsix degree-of-freedom closed-loop simulation, developed in house, is used\nto observe and compare the performances of the attitude determination\nalgorithms.\n\nKeywords: Attitude Determination, Kalman Filter, Horizon Sensors.\n\n1 Introduction\n\nMaintaining a desired orientation in space, with a specified level of accuracy, is\na mission requirement for every spacecraft. Attitude determination along with\nattitude control is responsible for satisfying this requirement. Based on the func-\ntion of the spacecraft the level of pointing accuracy required varies. During the\npast four decades, extensive research has been done in the area of spacecraft\nattitude determination. Various algorithms exist in the literature, with varied\nlevel of complexity and applicability [1]. The choice of algorithm for a mission\ndepends on pointing accuracy requirements, the type of sensors available and\ncapability of the on-board computer.\n\nHere, we consider analysis of the attitude determination subsystem for Low\nEarth Orbit satellites using sun sensors, horizon sensors and fiber optic gyros\nto achieve three-axis pointing accuracy requirement of 0.1 deg. To make the\nanalysis of these algorithms realistic, as well as to improve the accuracy of the\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 413\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_22\n\n\n\n414 V.V. Unhelkar and H.B. Hablani\n\nattitude determination algorithms, detailed models of measurements with sun\nsensor, horizon sensor and gyros are utilized. Instead of treating measurement\nerrors as white noise, an effort is made to develop realistic systemic errors and\nnoise models. For instance, horizon sensor modeling includes errors arising from\nEarth\u2019s oblateness, atmospheric radiance and sensor electronics.\n\nFurther, a modular six degree-of-freedom closed-loop MATLAB-Simulink R\u00a9\n\nsimulation is developed, which comprises true attitude kinematics and dynam-\nics, sensor models, orbit propagation, attitude determination and control. This\nsimulation setup is used to compare the performances of the attitude determi-\nnation algorithms developed. The modular design of simulation allows a straight\nforward approach to include or exclude sensors and to test different attitude\nestimators and controllers.\n\nTwo attitude estimation algorithms are considered, which mainly vary with\nrespect to their attitude representations and computational requirements. First,\na steady-state Kalman Filter, adopted from [2], is analyzed and simulated to\nobtain estimates of satellite attitude and gyro drift rate bias. Direction cosine\nmatrix and Euler angles are used to represent the attitude, for ease of physical\ninterpretation. The steady-state formulation does away with expensive matrix\ncovariance computations, but if dictated by mission requirements the formula-\ntion can be easily modified to its recursive gain counterpart. This is followed\nup with the analysis and simulation of the classic quaternion-based Extended\nKalman Filter of Lefferts, Markley and Shuster [3] for the on-board sensor suite\nconsidered . The classic EKF is modified to estimate exponentially-correlated\nradiance error in horizon sensor measurements. Lastly, the effect of sensor mis-\nalignments on attitude estimation performance is assessed through simulations,\nand Pittelkau\u2019s remedy to mitigate the performance degradation due to the mis-\nalignments, i.e., alignment Kalman filter [4], is presented.\n\nReference Frames\n\nWe consider three frames of reference. The Earth-centered Inertial (ECI) frame is\nan inertial frame with origin at the Earth\u2019s center. The coordinate axes xI and zI\npoint towards the direction of the vernal equinox and the north pole, respectively,\nand yI completes the right-handed coordinate system. The Local Vertical Local\nHorizontal (LVLH) frame describes the current orbit frame of the satellite, and\nhas its origin at the center of mass of the satellite. The coordinate axis zL points\ntowards the center of the earth (direction of the nadir), yL points opposite to\nthe satellite\u2019s angular momentum, and xL completes the right-handed triad. The\ninstantaneous LVLH frame is used as reference to measure the local attitude of\nthe satellite. Body frame is an orthogonal coordinate system fixed to the satellite\nbody with origin at its center of mass.\n\nThe symbols x? and x\u00d7 denote the estimate and the cross-product matrix\nassociated with x, respectively.\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 415\n\n2 Sensor Models\n\nThis section briefly describes the sensor models for the sensor suite considered.\nAs these sensors have been used in various space missions, sufficient technical\nresearch exists regarding their characteristics and performance [5,6]. However,\nin spite of the literature, usually additional analysis is required to arrive at\ncustomized and realistic model of these sensors (especially so for the attitude\nsensors) based on the sensor configuration of a particular spacecraft.\n\n2.1 Rate-Integrating Gyros\n\nGyros are inertial sensors which measure change in attitude as opposed to the\nabsolute attitude. Gyros are of various types, such as, mechanical gyros, ring\nlaser gyros, fiber optic gyros, and can be classified based on their accuracy,\nmechanisms and form of output. Rate gyros measure angular rate directly, while\nthe rate-integrating gyros (RIG) measure integrated angular rate [1]. In our atti-\ntude determination study, we consider application of fiber optic rate-integrating\ngyros, which provide incremental angle vector.\n\nThe measurement equation which, essentially, corresponds to the inertial rate\nof the body expressed in body frame ?BBI corrupted by various noise sources is\ngiven as,\n\n?m = Amalgn?\nB\nBI + b+ ?g (1)\n\nb? = ?u (2)\n\nwhere, the subscript \u2018m\u2019 denotes the measured rate, b denotes the gyro drift-rate\nbias, Amalgn denotes the misalignment and scale factor matrix matrix, and ?g\n(random-walk rate vector) and ?u (drift acceleration) are two continuous time\nwhite noise vectors. These equations when converted to discrete time yield [7],\n\n?? = ?? + Tgyrobk + ?k + ?q,k (3)\n\nwhere ?in = Amalgn?\nB\nBI (4)\n\n?? =\n\n? (k+1)Tgyro\nkTgyro\n\n?in(t)dt (5)\n\nThe term ?? expresses the true change in the spacecraft attitude, whereas the\n?? denotes the rate-integrating gyro output during one gyro sample period\n(Tgyro). The zero-mean noise due to ?g(t) and ?u(t) is expressed by ?k. The\nvariance of ?k is a 3 \u00d7 3 diagonal matrix for which the diagonal element is\n?2? = ?\n\n2\nvTgyro+?\n\n2\nuT\n\n3\ngyro/3, where ?\n\n2\nv (rad\n\n2/s) and ?2u (rad\n2/s3) are power spectral\n\ndensities of the scalar elements of ?g and ?u, respectively. The gyro drift-rate\nbias evolves in discrete-time as,\n\nbk = bk?1 +?k (6)\n\nwhere, ?k is a zero-mean discrete random-rate noise vector, with variance of each\nelement being ?2? = ?\n\n2\nuTgyro [2]. The term ?q,k, a discrete-time white noise with\n\n\n\n416 V.V. Unhelkar and H.B. Hablani\n\nvariance ?2e , represents the quantization error of the gyro. Lastly, scale factor\nand misalignment errors occur due to mounting errors of the system, or due to\nintrinsic sensor errors. We use the notation of Pittelkau [4] to define the scale\nfactor and misalignment matrix, where ?j denotes the scale factor error, while\n?ij denotes the axis misalignment,\n\nAmalign =\n\n?\n?(1 + ?x) ??yz ?zy?xz (1 + ?y) ??zx\n\n??xy ?yx (1 + ?z)\n\n?\n? (7)\n\nFor simulations presented later, we have used parameters of a fiber optic gyro\n(Table 1). Initial value of gyro drift rate bias is taken as 0.05 deg/hr.\n\nTable 1. Gyro Parameters\n\nParameter Value Units\n\n?v 7.27 ?rad/s\n1/2\n\n?u 3\u00d7 10?4 ?rad/s3/2\n?e 15 ?rad\n\n2.2 Sun Sensors\n\nSun sensors measure the direction of the sun relative to the spacecraft, and pro-\nvide an attitude reference. These sensors measure the impinging solar energy\non their surface and determine the angle made by the sun with respect to the\nsensor, which in turn is used to arrive at the sun vector. The sun vector, along\nwith a sun model, can also be used to determine the yaw attitude of the space-\ncraft. However, as the sun sensors measure the radiation from the sun they can\nfunction only in the sun-lit phase of the orbit.\n\nThe model of sun sensor being used for a particular satellite depends on the\ntype of the sensor, its positioning and error characteristics. For our analysis, we\nassume six solar cells (represented by blue circles in Fig. 1) placed on each side\nof the satellite. This configuration and the sun vector construction algorithm is\nadapted from that of the Pratham student-satellite [8], and has the advantage\n\nFig. 1. Sun Sensor Configuration\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 417\n\nthat in the sun-lit phase the sun is usually visible to three of the sun sensors.\nEach of the individual cell measures, with some noise, the cosine of the angle\nmade between the Sun vector (s) and the solar cell vector (ci). The measurement\nmodel for one individual solar cell is given by\n\nui = ciB \u00b7 sB + ?c, ?i = 1 : 6 (8)\n\nThe noise in the measurement arises due to the sensor mechanism, electron-\nics, and quantization, the strength of which depends on the type of the sensor.\nLastly, each of the cell has a limited field-of-view, hence the measurement model\nequation (Eq. 8) is valid only within the FOV of each sensor. The sensor param-\neters for simulation have been taken corresponding to that of a single-axis solar\ncell [6], as listed in Table 2.\n\nTable 2. Sun Sensor Parameters\n\nParameter Value Units Remark\n\n?c 0.05 deg Standard Deviation of ?c\nFOV 80 deg Field-of-View (conical)\n\nTc 1 s Sample Time\n\nThese measurements are then used to determine the Sun vector through el-\nementary linear transformation [8], which is then used in the attitude determi-\nnation formulations. The measured Sun vector can be represented as,\n\nsm,B = sB + s?m,B (9)\n\nwhere, s?m,B is a random zero-mean Gaussian variable, with noise covariance,\nRc = ?\n\n2\nc I3\u00d73.\n\n2.3 Horizon Sensors\n\nHorizon sensors, essentially, measure the direction of Earth (nadir) by observing\nthe shape of the Earth\u2019s limb as seen from the spacecraft and comparing it with\na modeled shape, to arrive at the spacecraft attitude. These can be classified\ninto two types - scanning and static - which differ in their mechanism to sense\nthe Earth\u2019s horizon, error characteristics and field-of-view. The horizon sensors\nmeasure roll and pitch angles. Thus, in the sun-lit phase, along with the sun\nsensor the horizon sensor provide complete attitude information. We consider\nscanning-type horizon sensors, and follow the work presented in [9,10,11] for\ntheir analysis and error characteristics.\n\n\n\n418 V.V. Unhelkar and H.B. Hablani\n\nScanning type horizon sensors consist of moving optical scanners mounted on\nthe spacecraft, which scan and detect the Earth\u2019s limb. The sensor electronics\nconverts the radiation information to scan width of Earth\u2019s limb. This mea-\nsurements of scan width are then processed to obtain measurements of roll and\npitch. The scanning type sensors though relatively less accurate have a much\nlarger field-of-view than the static horizon sensors.\n\nMathematical Model. The horizon sensor configuration considered involves\ntwo optical scanners mounted on opposite sides of the spacecraft in the pitch-\nyaw plane. These two scanners measure four semi-scan angles - (??0R,??1R,??0L,\nand ??1L) - corresponding to the space-to-earth and earth-to-space transition\nof left and right scanners. For a detailed description of the sensor configuration\nthe reader is directed to [11]. In order to generate the scan width measurements\nbased on the semi-scan angles due to an oblate earth model, we use the equations\nspecified in [11] and [12], along with the model of oblate earth by Liu [5], with\nappropriate modifications to suit our coordinate convention. Once the four semi-\nscan angles are obtained, the roll and pitch angles are obtained as follows [11],\n\n? =\n1\n\n4\nK (??0R + ??1R ? ??0L ? ??1L) (10)\n\n? =\n1\n\n4\ncos ? (??0R ? ??1R + ??0L ? ??1L) (11)\n\nwhere, K and ? are known parameters which depend on spacecraft\u2019s altitude\nand sensor hardware parameters.\n\nThe horizon sensor measurements are affected both by the noises in elec-\ntronics and the errors arising from the limitation in accurately modeling the\nEarth\u2019s limb. The major sources of horizon sensor errors are Earth\u2019s oblate-\nness, variation of Earth\u2019s radiation, electronic noise, quantization error, and\nsensor bias and misalignment [9]. Errors due to Earth\u2019s oblateness are systemic\nand highly predictable. Thus, by using an appropriate model of Earth\u2019s shape\nthese errors can be largely eliminated. We follow the approach described in\n[11] to account for errors due to oblateness. Earth\u2019s radiation suffers from sea-\nsonal and latitudinal variations, which are partly systemic and partly stochastic\n[13]. The systemic variations can be largely corrected based on modeling of sen-\nsor optics and Earth\u2019s radiation. The available horizon sensor hardware largely\ncompensates for these systemic variations internally; however, stochastic errors\nof the order of 0.06 deg still persist post corrections [9]. Sensor bias, misalign-\nment and electronic noise are inherent sensor errors that arise due to the sensor\nhardware.\n\nFor simulation, the roll and pitch angles obtained from Eq. (10-11) are cor-\nrupted with bias, white noise (to simulate the electronic noise) and noise due to\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 419\n\nradiance. Radiance models exist in literature based on analytical modeling of the\nEarth\u2019s atmosphere and data observed from various space missions [10,14]. In\norder to obtain the radiance errors in roll and pitch, these radiance models are\nthen used along with the model of sensor optics, signal processing and electronics.\nHowever, this procedure involves detailed knowledge of the sensor hardware.\nHence, we approximate the noise due to radiance as an exponentially correlated\nnoise in both the roll and pitch axes [15]. This model, though approximate,\nmodels the radiance errors as varying with time with a specified steady-state\nRMS value. The discrete time equation for horizon sensor noise due to radiance\nvariation (w? and w?) is thus given as,\n\nw?,k+1 = aw?,k + l\n?\n1? a2?k (12a)\n\nw?,k+1 = aw?,k + l\n?\n1? a2?k (12b)\n\nwhere l denotes the steady-state RMS value of radiance variation error and is\ntaken as 0.06 deg [9], ?k is the discrete time white noise with variance equal\nto unity, and the parameter a is defined in terms of the horizon sensor sample\nperiod (Ths) and the correlation time of exponentially auto-correlated noise (?w),\n\na = exp\n\n[?Ths\n?w\n\n]\n(13)\n\nTo account for the cyclic variation with latitude occuring every orbit, the\nparameter ?w is selected as one-eighth of the orbital period. Sensor noise due\nto radiance variation for a sample simulation run is illustrated in Fig. 2. Errors\ndue to sensor bias and static misalignment errors are added as constant bias (b?\nand b?) of magnitude 0.02 deg in each axis. Other random errors arising from the\nsensor hardware are modeled as discrete white (?? and ??) noise with its 3? value\nas 0.042 deg. The measurements are sampled every 1 s. The values of parameters\ndescribing sensor bias and random errors are chosen based on brochure of Sodern\nHorizon Sensors [16].\n\nFig. 2. Horizon sensor noise due to Radiance Variation\n\n\n\n420 V.V. Unhelkar and H.B. Hablani\n\nHorizon sensor measurement equations containing error from all the sources\nconsidered above can be written as,\n\n?m,hs =\n\n[\n1\n\n4\nK (??0R + ??1R ? ??0L ? ??1L)\n\n]\n+ w? + b? + ?? (14)\n\n?m,hs =\n\n[\n1\n\n4\ncos ? (??0R ? ??1R + ??0L ? ??1L)\n\n]\n+ w? + b? + ?? (15)\n\nOblateness Corrections. The horizon sensor errors described above contain\nboth systemic as well as stochastic terms. To improve the accuracy of mea-\nsurements, the systemic errors are predicted through analytical models, and\nsubtracted from the measurements to mitigate the systemic errors. Earth\u2019s\noblateness is one of the major systemic error which can be largely eliminated\nby proper modeling. Following the formulation of [11] oblateness corrections are\ncalculated.\n\nFig. 3. Horizon Sensor : Oblateness Corrections\n\nThese oblateness corrections are added to the sensor measurements to remove\nthe noise due to the Earth\u2019s oblateness. The variation of oblateness correction for\norbit considered in our simulation is illustrated in Fig. 3. Corrections for other\nsystemic errors, such as bias and residual noise due to radiance variation, can be\ndone through on-board estimation techniques [17] or through post-processing of\nmeasurement residuals [9].\n\nHorizon Sensor Parameters. A horizon sensor with clockwise scanning pat-\ntern is considered with realistic sensor parameters based on [9,16]. Table 3 lists\nthe sensor parameters used during the simulation of the scanning type horizon\nsensors. Note that the sensor field-of-view is limited.\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 421\n\nTable 3. Scanning Horizon Sensor Parameters\n\nParameter Value Units Remark\n\n? 20 deg Canting Angle\n\n?c 45 deg Semi-cone Angle\n\nFOV 25 deg Field-of-View\n\nl 0.06 deg Radiance noise RMS (each axis)\n\nbhs 0.02 deg Bias (each axis)\n\n3?hs 0.042 deg White noise (each axis)\n\nThs 1 s Sample Time\n\n3 Development of Simulation\n\nIn order to validate and compare the attitude determination formulations, a\nsix degree-of-freedom closed-loop simulation setup (Fig. 4), similar to that of\nPratham student-satellite [8], is developed using MATLAB?-Simulink. A con-\ntroller is included to observe the pointing accuracy obtained by the attitude\ndetermination and control sub-system.\n\nFig. 4. Overview of Simulation\n\nThe design of the simulation is kept modular, so that it can be utilized to\ntest different sets of sensors and attitude determination algorithms. The overall\nsimulation sample rate is selected as 20 Hz, as it is sufficient to capture the\nsystem dynamics in simulation. Further, various sub-systems are simulated at\ndifferent sample rates in order to account for their different sample times (see\nTable 4).\n\nStandard equations for various simulation blocks as shown in Fig. 4 have been\nused [5]. Environmental torques due to gravity-gradient, solar radiation pressure\nand aerodynamic disturbance are considered. A sun-synchronous circular orbit\n\n\n\n422 V.V. Unhelkar and H.B. Hablani\n\nTable 4. Simulation rates of different sub-systems\n\nSub-system Simulation Rate\n\nTrue Attitude Dynamics 20 Hz\n\nTrue Orbit Propagation 20 Hz\n\nSensors (Gyro) 10 Hz\nSensors (SS & HS) 1 Hz\n\nOn-board Models 10 Hz\n\nAttitude Estimator 10 Hz\n\nController 10 Hz\n\nwith altitude of 720 km and 98.28 deg inclination is considered, which is similar\nto that of the Oceansat-2 satellite [18]. Earth\u2019s gravity model which incorporates\nterms due to the Earth\u2019s oblateness upto J2 zonal harmonics is used for orbit\npropagation [6]. The complete simulation setup has been validated with the\nhelp of conservation of angular momentum check in absence of external torques.\nOther models being standard, we here describe briefly the controller and rate\nestimation filter employed in our simulation.\n\n3.1 Controller\n\nA controller is required for the purpose of simulation, in order to observe the\nclosed-loop performance of the attitude estimator. Here, we use a basic PID con-\ntroller for our simulations. The gains of the PID controller are selected to obtain\nthe desired damping ratio (?) of 0.707, and natural frequency (?n) correspond-\ning to a time period of half minute, i.e., (0.5)(60)s. The parameter ? influences\nthe integral gain, and helps to eliminate the steady-state error of the controller.\nThe values of the normalized controller gains, for the listed specifications, are\nlisted in Table 6.\n\nTable 5. Controller Parameters\n\n? 0.7\n\n? 0.707\n\n?n\n2?\n\n(0.5)(60)\n= 0.2094\n\nTable 6. Normalized Controller Gains\n\nad (2 + ?)??n 0.3998\n\nap ?\n2\nn(1 + 2??\n\n2) 0.0746\n\nai ???\n3\nn 0.0045\n\nBased on the values of controller gains the control torque vector is determined\nusing the attitude and rate error, and satellite\u2019s moment of inertia, I.\n\ngcon = I\n\n(\nap?err + ai\n\n?\n?errdt+ ad?err\n\n)\n(16)\n\n?err = ?com ? ?? (17)\n?err = ?com ? ?? (18)\n\nLastly, for all the simulation results presented the commanded attitude and\nangular rates align the spacecraft body frame with the LVLH frame.\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 423\n\n3.2 Rate Filter\n\nEstimate of inertial angular velocity of the spacecraft is required for control of\nthe satellite. However, in the attitude estimation algorithms presented next, we\nonly estimate the gyro drift rate bias and satellite attitude. Using the estimates\nof gyro drift rate bias the gyro measurement can be corrected for bias error;\nhowever, the measurements still include the random noise. The rate integrating\ngyros along with the above Kalman filter provide incremental attitude vector.\nSince the gyros work at a very high rate the incremental angles are related to ?\nas follows\n\n???k = ??k ? Tgyrob?k (19)\n\n??kf ? ???k\nTgyro\n\n(20)\n\nIn order to remove the high frequency noise associated with above calculation\nof ?, a discrete low pass filter with bandwidth (?c) is used,\n\n??k,lpf =\nTgyro?c\n\nTgyro?c + 2\n??k,kf +\n\nTgyro?c\nTgyro?c + 2\n\n??k?1,kf ? Tgyro?c ? 2\nTgyro?c + 2\n\n??k?1,lpf (21)\n\nThis filtered estimate is used to arrive at the control torque, which results in\na relatively smoother control action which is beneficial for actuator hardware. In\nour simulation the filter bandwidth is chosen as ten times that of the controller\nbandwidth.\n\n4 Steady-State Kalman Filter\n\nA steady-state three-axis Kalman Filter [2,7] is first presented for attitude de-\ntermination. The filter provides the estimate of the spacecraft attitude and the\ngyro drift-rate bias. The gyro measurements, which are available at a very high\nrate, are used as the process model for the filter. The attitude sensors are used\nfor correction of the attitude estimate and gyro drift-rate bias, and represent the\nmeasurement model. The prediction step using the rate integrating gyro mea-\nsurements takes place at a higher rate, while the correction step is used only\nafter a predetermined update interval (Tup).\n\nPropagation equations, as they occur at a different rate, are described by us-\ning the subscript k. At the n-th gyro interval correction step is applied using\nthe attitude sensors. In the following analysis, the indices (?) and (+) indicate\nthe estimates prior to and post measurement updates from attitude sensors,\nrespectively. The choice of update interval depends on the sensor error charac-\nteristics, sensor sampling rate and required pointing accuracy, and is discussed\nsubsequently.\n\n\n\n424 V.V. Unhelkar and H.B. Hablani\n\n4.1 Prediction\n\nBased on the gyro measurement model (Eq. 3) the propagation equations for\nthe filter, which utilize the gyro measurements ??, are given as:\n\n???k = ??k ? Tgyrob?k (22)\nb?k = b?k?1 (23)\n\nIn order to obtain incremental inertial attitude from the attitude estimates,\nfollowing propagation equations for the direction cosine matrix are used [19],\n\nC?k,I = C?k,k?1C?k?1,I (24)\n\nC?k,k?1 = I3\u00d73 ??[??\u00d7] + ???k???\nT\nk ? ????k?2I3\u00d73\n\n2\n(25)\n\n4.2 Steady-State Kalman Gains\n\nTo obtain the correction equations, we first need to determine the Kalman Filter\ngains. The gains depend on innovation covariance, error covariance of the process\nand measurement noise. Following the steady-state analysis of [2], the Kalman\nGains for each axis are represented using three non-dimensional parameters -\ndependent on the sensor errors ?u, ?v, ?n and the correction update interval Tup\n\n- characterizing the readout noise (Se =\n?e\n?n\n\n), random-walk noise (Su =\nT 3/2up ?u\n\n?n\n),\n\nand drift angle Sv =\nT 1/2up ?v\n\n?n\n. Based on the steady-state covariance analysis, the\n\nsteady-state Kalman Filter gains are,\n\nKhs = (??n)\n?2\n\n?\n?P??(?)P?b(?)\nP??(?)\n\n?\n? =\n\n?\n? 1? ?\n\n?2\n\n(?Tup)\n?1Su\n\n(Se/?)\n2\n\n?\n? (26)\n\nwhere,\n\n? = (1 + S2e +\n1\n\n4\nS2v +\n\n1\n\n48\nS2u)\n\n1\n2 (27)\n\n? = ? +\n1\n\n4\nSu +\n\n1\n\n2\n(2?Su + S\n\n2\nv +\n\n1\n\n3\nS2u)\n\n1\n2 (28)\n\n4.3 Correction\n\nIn order to utilize the attitude sensors (sun and horizon sensors) the measure-\nments of roll, pitch, and yaw, are transformed and represented as,\n\nC?n.att,I =\n(\nI3\u00d73 ? [?att\u00d7]\n\n)\nC?n,I (29)\n\nwherein the subscript \u2018att\u2019 refers to both the horizon and sun sensors and ?att\nquantifies the total noise in the attitude measurements. In order to obtain a\nthree-axis equivalent of the small angle error residual, we observe that\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 425\n\n?att ? ??0 (?) ? C?n.att,IC?I,n.gyro (30a)\n? I3\u00d73 ? [?att ? ??n.gyro]\u00d7 (30b)\n= I3\u00d73 ? [?att/gyro\u00d7] (30c)\n\nHence, ?att/gyro characterizes the required difference, and can be obtained in\n\nterms of the available matrices C?n.att,I (from measurement) and C?I,n.gyro (from\nestimator),\n\n?\u00d7att/gyro = I3\u00d73 ? C?n.att,IC?I,n.gyro (31)\nThe correction equation in terms of ?att/gyro for attitude and bias are given\n\nas,\n\n?att/update =\n\n?\n?(1? ?\n\n?2\nx )?att/gyro,x\n\n(1? ??2y )?att/gyro,y\n(1? ??2z )?att/gyro,z\n\n?\n? (32)\n\nC?0.gyro,I(+) = (I3\u00d73 ? [?att/update]\u00d7)C?n.gyro,I (33)\n\nb?0(+) = b?0(?)?\n?\n?Su,x(?xTup)\n\n?1?att/gyro,x\nSu,y(?yTup)\n\n?1?att/gyro,y\nSu,z(?zTup)\n\n?1?att/gyro,z\n\n?\n? (34)\n\nThe filter thus provides estimates of inertial attitude which can be transformed\nto other frames as per the requirement of the attitude control sub-system. The\nestimates of bias are used to correct the gyro measurement. Note that since the\nKF gains in the three axes are independent of each other, asynchronous sun and\nhorizon sensor measurements can also be used by the steady-state Kalman filter.\nNext, we discuss the initialization of the filter, selection of the update parameter\nand the filter\u2019s simulated performance.\n\n4.4 Initialization\n\nTo reduce the filter transients, the filter should be initialized with the best at-\ntitude estimate available. This a priori estimate can be obtained from the Sun\nand horizon sensor measurements. These measurements are used to initialize the\nattitude states of the filter. The drift bias states of the filter should be initial-\nized with the drift bias value specified in the specification sheet or as obtained\nthrough ground testing of the gyro.\n\n4.5 Update Interval\n\nIn the above formulation, all but one variables influencing Kalman gains are de-\npendent on the sensor characteristic. The parameter Tup also influences Kalman\nGains, and can be chosen by the designer. The achievable values of Tup will be\nlimited due to the sample time of attitude sensors (Ths and Tc), and compu-\ntational capability of the on-board computer. Based on steady-state covariance\n\n\n\n426 V.V. Unhelkar and H.B. Hablani\n\nanalysis, variation of achievable estimate covariance with respect to Tup is ob-\ntained, as shown in Figs. 5-6. Both pre- and post-update covariance estimates\nat steady-state and corresponding standard deviation of attitude sensor errors\nare shown. Using the plots, the parameter Tup is chosen as 2s, since it provides\nestimation accuracy of ? 0.01 deg at steady-state.\n\nFig. 5. Tup anlaysis : Attitude Fig. 6. Tup anlaysis : Gyro Bias\n\n4.6 Estimator Performance\n\nThe results of the three-axes attitude determination algorithm developed above\nare now presented. The filter is propagated at a rate of 10 Hz and the attitude\nsensor measurement corrections are effected every 2s. The rate low-pass filter\nwith cut-off frequency ?c = 0.32 Hz is used. Horizon sensor measurements are\ncorrected for oblateness prior to being used in the filter and no gyro misalign-\nments are considered. Initial estimation errors, tabulated in Table 7, have been\nincluded as per section 4.4.\n\nTable 7. Initial Estimation Errors\n\nAttitude Estimation Error(deg)\n\n? ? ?\n\n0.1 0.1 0.1\n\nDrift Bias Estimation Error (deg/hr)\n\nbx by bz\n0.03 0.03 0.03\n\nTest Case: As a theoretical test case, we observe the performance of the filter\nin presence of white noise in attitude sensors, where the model in the Kalman\nfilter completely matches with the measurements. The estimation performance\nis within the predicted bounds (Figs. 7-8); however, long duration transients\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 427\n\n(up to 20% of the orbit period) persist before the steady-state is arrived at. Due\nto the coupling between the roll and yaw axis, and propagation due to the gyro\nmeasurements, performance in the eclipse region is also satisfactory.\n\nFig. 7. Steady-state KF with white\nmeasurement noise : Attitude\n\nFig. 8. Steady-state KF with white\nmeasurement noise : Gyro Bias\n\nPerformance with Realistic Measurement Errors: Next, using the estima-\ntor parameters specified earlier, we obtain the performance of the steady-state\nKF in presence of all sensor errors except gyro misalignments. As observed in\nFigs. 9-10, the estimation performance has degraded considerably as compared\nto the theoretical test case. However, this is expected as the bias and radiance\nvariations in horizon sensor measurements are not being compensated for in the\nestimation algorithm.\n\nFig. 9. Steady-state KF : Attitude Fig. 10. Steady-state KF : Gyro bias\n\n\n\n428 V.V. Unhelkar and H.B. Hablani\n\n5 Extended Kalman Filter\n\nThis section briefly describes the quaternion-based extended Kalman filter (EKF)\nof Lefferts, Markley and Shuster [3] for satellite attitude determination. As with\nthe steady-state KF, this filter too estimates the satellite attitude and gyro drift\nrate bias.\n\n5.1 Formulation\n\nThe quaternion-based EKF estimates the attitude quaternion (qBI , 4 elements)\nand gyro bias (b, 3 elements) resulting in seven states. However, the covariance\npropagation is achieved through error state to avoid the quaternion singularity.\nThe error states for quaternion (?q = q? q??1) and bias (?b = b? b?) result in\na six-element state vector: ?x = [?q,?b]?. Process model for error state is then\ngiven as ?x? = F?x+Gw, where,\n\nF =\n\n[?[?\u00d7] ?1/2I3\u00d73\n03\u00d73 03\u00d73\n\n]\n(35)\n\nG =\n\n[?1/2I3\u00d73 03\u00d73\n03\u00d73 I3\u00d73\n\n]\n(36)\n\nw =\n[\n?v ?u\n\n]?\n(37)\n\nThe development of the quaternion EKF in [3] provides freedom while using\nthe attitude sensors, in the sense that the measurements can be used either as\nscalar angles or reference vectors. Through simulation it was observed that use\nof either approaches produces similar performance; hence, here we present only\none of them. Sensor models presented earlier represent the measurement models.\nHere, we list the measurement noise covariance (R) and sensitivity (H) matrices\ncorresponding to the two attitude sensors,\n\nSun Sensor\n\nRk = E[v\n?\nkvk] = ?\n\n2\nc (I3\u00d73) (38)\n\nHk =\n\n?\n?2(r1 \u00d7 z?k)\n\n? 01\u00d73\n2(r2 \u00d7 z?k)? 01\u00d73\n2(r3 \u00d7 z?k)? 01\u00d73\n\n?\n? (39)\n\nwhere, ri = [?i1, ?i2, ?i3]\n?, the symbol ?ij representing the Kronecker delta; and\n\nz?k(= s?B = [C(q?)]sI) corresponds to the modeled sun vector in the body frame.\nThe sensitivity matrix Hk is derived through application of the corresponding\ngeneral expressions provided in (Eq. 151-157) of [3].\n\nHorizon Sensor\n\nRk =\n\n[\n?2? 0\n0 ?2?\n\n]\n(40)\n\nHk =\n\n[\n2(r1 \u00d7 z?k)? 01\u00d73\n2(r2 \u00d7 z?k)? 01\u00d73\n\n]\n(41)\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 429\n\nwhere z?k corresponds to the modeled value of the nadir vector in the body frame;\nand horizon sensor measurement is represented as [??m, ?m]? to correspond to\nthe definition of the nadir vector. As expected these measurements depend only\non the attitude and not on the gyro bias. For further details of this filter and\nthe standard Kalman Filter equations the reader is directed to reference [3].\n\n5.2 Estimator Performance\n\nWe present the performance of the quaternion-based EKF using similar measure-\nment models and parameters as to that for the steady-state KF. As the mea-\nsurements from different sensors need not be synchronous, each measurement\nupdate is applied independently, using Murell\u2019s approach [20]. While calculating\nfilter gains we need to specify P0. When the sun and horizon sensors are used\nto provide the initial estimates, value of P0 corresponding to the accuracy of\nthese sensors is used. The initial drift bias state covariances can be obtained\nfrom ground testing of the gyro.\n\nTest Case: The Kalman filter is optimal in presence of measurement errors\nbeing white noise. Hence, similar to the case of steady-state KF, as a theoretical\ntest case, we first observe the performance of the EKF in presence of only white\nnoise in attitude sensors. The absence of yaw (sun sensor) measurements, during\nthe eclipse phase, results in increased state covariance in yaw estimates. Due to\nthe exact correspondence between the measurement noise and its model being\nwhite, the assumptions of EKF are satisfied, resulting in the expected estimation\nperformance, shown in Figs. 11-12.\n\nFig. 11. EKF (white noise) : Attitude Fig. 12. EKF : Gyro bias\n\nPerformance with Realistic Measurement Errors: Having verified the fil-\nter through a simplified measurement model, we observe its performance in pres-\nence of the complete measurement models except for misalignments. Similar to\n\n\n\n430 V.V. Unhelkar and H.B. Hablani\n\nthe case of steady-state KF, the performance of the filter deteriorates. The ob-\nserved estimation accuracy in presence of colored noise and bias in measurement\nis given as seen in Figs. 13-14.\n\nFig. 13. EKF : Attitude Fig. 14. EKF : Gyro bias\n\n6 Estimation of Additional States\n\nThe horizon sensor measurements used in both the steady-state KF and quater-\nnion-based EKF described earlier contain errors such as biases and radiance\nvariations, which are not just white noise. These filters, however, work under\nthe assumption that the errors entering the measurement model are white - re-\nsulting therefore in sub-optimal estimation performance. Better estimates of the\nattitude requires augmentation of the state vector, albeit without any additional\nmeasurements. This may result in the system becoming unobservable, degrading\nthe attitude performance. Attempts to estimate biases of attitude sensors [17]\nand the noise due to radiance variation [21] have been reported earlier in the\nliterature, and mixed results have been obtained. Hence, the augmented state\nvector filter should be implemented only after verifying the performance of the\nestimator through analysis and simulation. We proceed with the state vector\naugmentation for the quaternion-based EKF instead of the steady- state KF,\ndue to its relatively straight-forward formulation and ease of implementation.\nA similar approach of state vector augmentation for estimation of misalignment\nand scale factor errors has been developed by Pittelkau.\n\n6.1 Horizon Sensor Error Estimation\n\nThe state vector is augmented with the noise terms corresponding to the horizon\nsensor radiance error (w?, w?) : x(t) = [qBI ,?bg, w?, w?]\n\n?. The discrete-time\nmodel for radiance errors in roll and pitch is given by Eq. (12a-12b). This can\nbe represented as a differential equation,\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 431\n\nw??(t) = ??w? + ??,w (42)\nw??(t) = ??w? + ??,w (43)\n\nwhere the parameter ? and the PSD of ? are obtained by comparing the con-\ntinuous model with the discrete-time equation: ? = 1?w , PSD of ??,wand ??,w =\nl2(1?a2)\n\nThs\n. The evolution of these error parameters is independent of the attitude\n\nand gyro bias, and the same is reflected in the modified process model,\n\nd\n\ndt\n\n?\n???\nqBI\n?bg\nw?\nw?\n\n?\n??? =\n\n?\n???\n?[?\u00d7] ?1/2I3\u00d73 03\u00d71 03\u00d71\n03\u00d73 03\u00d73 03\u00d71 03\u00d71\n01\u00d73 01\u00d73 ?? 0\n01\u00d73 01\u00d73 0 ??\n\n?\n???\n\n?\n???\nqBI\n?bg\nw?\nw?\n\n?\n???+\n\n?\n???\n?1/2?v\n?u\n??,w\n??,w\n\n?\n??? (44)\n\nPropagation equation for the quaternion and bias is the same as for the filter\ndescribed earlier. The propagation for the radiance variation is done using the\ndiscrete counterpart of the process model described above. Sun sensor measure-\nment equations and corresponding noise covariance (Eq. 38) remains the same.\nHorizon sensor measurements are corrected for noise due to oblateness. In the\ncurrent formulation, an estimate of the horizon sensor noise due to radiance vari-\nation is developed so as to subtract it from the horizon sensor measurements.\nThe corresponding sensitivity matrix is given as,\n\nHk =\n\n[\n2(r1 \u00d7 z?k)? 01\u00d73 0 ?1\n2(r2 \u00d7 z?k)? 01\u00d73 1 0\n\n]\n(45)\n\nRadiance Noise Estimation. The initial estimate of the attitude and gyro\nbias are specified to be the same as before, whereas since no estimate of residual\nerror due to radiance variation is available its initial value is taken as zero. The\nsteady-state RMS value of radiance noise is used to define P0, the initial state\ncovariance. As seen in Figs. 15-16, the estimation error of the radiance noise is\nwithin the covariance bounds. However, the predicted bounds for the most part\nof the orbit are the same as l, the steady-state RMS of the radiance noise.\n\nAlthough the radiance noise is estimated to certain accuracy, the improve-\nments in attitude estimation are not significant even with the application of this\nmodified filter (Fig. 6.1). Similar results were reported in [21] wherein with real\nattitude data a similar augmented filter was able to estimate the radiance noise\nbut improved the attitude estimation performance only marginally.\n\nBias Estimation. Apart from radiance noise, the horizon sensor measurements\nalso have a constant bias which may arise due to sensor electronics or static\nmisalignment. Since our filter currently does not estimate the bias, the attitude\nestimate might improve with estimation of this bias, even though the magnitude\nof this bias is relatively smaller than the radiance noise. Hence, we try to estimate\nthe horizon sensor bias using the augmented filter, instead of the radiance noise.\n\n\n\n432 V.V. Unhelkar and H.B. Hablani\n\nFig. 15. Horizon Sensor Radiance\nNoise : Estimation Error\n\nFig. 16. Horizon Sensor Radiance\nNoise : True v/s Estimate\n\nFig. 17. Effect of Radiance Estimation : Attitude\n\nThe formulation to estimate radiance noise can be adapted to estimate horizon\nsensor bias, by choosing the parameter ? in the process model of the filter as zero.\nThe filter is initialized similar to the case of radiance estimation. The horizon\nsensor bias estimation performance is portrayed in Figs. 18-19.\n\nFig. 18. Horizon Sensor Bias :\nEstimation Error\n\nFig. 19. Horizon Sensor Bias : True v/s\nEstimate\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 433\n\nImprovements in attitude estimation accuracy are obtained due to estimation\nof the horizon sensor bias. As seen in Fig. 20, the attitude estimation accuracy\nis generally within the predicted covariance, and yaw estimates do not degrade\nmuch during eclipse.\n\nFig. 20. Effect of Bias Estimation : Attitude\n\n6.2 Misaligned Sensors\n\nIn the simulation discussed till now, no sensor misalignments were considered.\nPresence of misalignment in either the gyro or the attitude sensors may result\nin incorrect estimates of both the attitude and gyro drift rate bias. Both batch\nand sequential misalignment estimation method exist in the literature. Here, we\nconsider application of the misalignment estimation Kalman filter developed by\nPittelkau [4], which is called the Alignment Kalman Filter (AKF). This filter is\nsuited for on-board real time estimation of sensor misalignments and scale factor\nerrors.\n\nThe AKF, too, is an augmentation of the quaternion-based EKF. The aug-\nmented state vector is given as x = [?qv,?bg, ?g,bHS ]\n\n?, where, the parameter\n?g (= [?x, ?yz, ?zy, ?xz, ?y, ?zx, ?xy, ?yx, ?z ]\n\n?) denotes the gyro misalignments and\nscale factor terms, and bHS (= [b?, b?]\n\n?) denotes the two components of hori-\nzon sensor bias . The alignment Kalman filter, thus, attempts to estimate ad-\nditional states - misalignment of sensors - along with the attitude and sensor\nbiases. However, the number of measurements used for correction of the state\nvector still remain the same. Naturally, this causes concerns of observability of\nthe state vector and potential degradation of the estimate. In order to make\nthe system observable, and prevent ill effects of state augmentation, in-flight\nattitude maneuvers are performed. These maneuvers are of higher frequency\nthen the spacecraft dynamics, and for on-board implementation require capa-\nble actuators. The system is made observable by subjecting the spacecraft to\n\n\n\n434 V.V. Unhelkar and H.B. Hablani\n\nnon-harmonic sinusoidal angular rates. Hence, the rate command for the attitude\ncontroller is modified to be as,\n\n?BBO = (0.05 deg / sec)\n\n?\n?sin[2?(0.0100)]sin[2?(0.0085)]\nsin[2?(0.0080)]\n\n?\n? (46)\n\nThe process model for the above state vector is given as,\n\nd\n\ndt\n\n?\n???\nqBI\n?bg\n?g\nbHS\n\n?\n??? =\n\n?\n???\n?[?\u00d7] ?1/2I3\u00d73 1/2?g 03\u00d72\n03\u00d73 03\u00d73 03\u00d79 03\u00d72\n09\u00d73 09\u00d73 09\u00d79 09\u00d72\n02\u00d73 02\u00d73 02\u00d79 02\u00d72\n\n?\n???\n\n?\n???\nqBI\n?bg\n?g\nbHS\n\n?\n???+\n\n?\n???\n?1/2(I3\u00d73 +M)?v\n\n?u\n?g\n?b\n\n?\n???\n(47)\n\nwhere, M denotes the gyro misalignment and scale factor matrix,\n\nM =\n\n?\n? ?x ??yz ?zy?xz ?y ??zx\n??xy ?yx ?z\n\n?\n? (48)\n\nand ?g is defined in terms of the inertial rates,\n\n?g =\n\n?\n??x ??y ?z 0 0 0 0 0 00 0 0 ?x ?y ??z 0 0 0\n0 0 0 0 0 0 ??x ?y ?z\n\n?\n? (49)\n\nThe propagation equations for ?g and bHS is the same as that of the ?bg due\nto analogous continuous time equations. The propagation of the full quaternion\nis also done similar to that of the 6-state EKF, except that rate-integrating gyro\nmeasurements are compensated not just for drift rate bias but also misalignments\nand scale factors using available estimates. The measurement sensitivity matrix\nis expanded to account for the additional states; for instance, for horizon sensor\nthe sensitivity matrix is given as,\n\nHk =\n\n[\n2(r1 \u00d7 z?k)? 01\u00d73 01\u00d79 0 ?1\n2(r2 \u00d7 z?k)? 01\u00d73 01\u00d79 1 0\n\n]\n(50)\n\nWhen the spacecraft is subjected to sinusoidal rate maneuvers, as specified\nin Eq. 46, the misalignment states are expected to become observable, resulting\nin improvement in attitude estimation performance. Further, the attitude and\ngyro drift rate bias performance is within the Kalman filter covariance bounds\n(Figs. 21-22).\n\nThe estimation of scale factors and misalignment in all the three axes is pos-\nsible. Within two orbits the scale factor and miaslignment estimation errors\nachieve steady-state (Figs. 23-24), after which the maneuvers are terminated\nand normal spacecraft operation is resumed.\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 435\n\nFig. 21. AKF : Attitude Fig. 22. AKF : Gyro Bias\n\nFig. 23. Gyro Scale Factors :\nEstimation Error\n\nFig. 24. Gyro Misalignment (x-axis) :\nEstimation Error\n\n7 Conclusions and Comments\n\nSequential on-board attitude estimation algorithms for the sensor suite - sun\nsensor, horizon sensor and gyros - are studied, analyzed and simulated. As the\nattitude estimation algorithms are tested through simulation, an effort is made\nto consider detailed models of sensors and to test the algorithms in presence\nof realistic sensor errors. A standard, realistic model of rate-integrating gyro is\nused which includes time varying drift-rate bias, static misalignment, scale fac-\ntor errors and quantization noise. Horizon sensor modeling includes effects of\nEarth\u2019s oblateness, atmospheric radiance, bias and electronic noise. An approxi-\nmate model of noise due to atmospheric radiance, treating it as an exponentially\nauto-correlated noise, is considered. A modular six degree-of-freedom closed-\nloop simulation has been developed, and performance of the attitude estimation\nalgorithms using this simulation is presented.\n\n\n\n436 V.V. Unhelkar and H.B. Hablani\n\nTwo attitude estimation algorithms - the DCM-based steady-state KF and\nquaternion-based EKF - are simulated. Modifications in the standard algorithms\nhave been made, to customize them for the sensors under consideration. The\nsteady-state filter is observed to work for the current sensor suite if only white\nnoise is present in the attitude sensors. Hence, the steady-state KF, which is\ncomputationally efficient, may be a preferred choice in the case of the sensors\nprimarily exhibiting such noise characteristics, such as the star trackers [7]. Fur-\nther, depending on sensor error characteristics and required estimation accuracy,\nthe steady-state KF may not be suitable during the eclipse phase of the orbit.\n\nThe quaternion-based EKF, too, in its original form works only for attitude\nsensors with white noise. Hence, there is a need to estimate other errors in the\nattitude sensors through augmentation of the state vector. The quaternion-based\nEKF offers a natural framework for estimation of additional states. Through es-\ntimation of horizon sensor bias, but not that of radiance noise, improvement\nin estimator performance is observed. Even during the eclipse phase of the or-\nbit, when the sun sensor measurements are not available, the filter performance\nis satisfactory. The performance of steady-state KF may also be improved by\nestimation of horizon sensor bias; however, the quaternion-based EKF offers a\nsimpler way of augmenting the state vector and can better handle asynchronous\nmeasurements. Hence, we recommend the use of the quaternion-based EKF with\naugmented state vector. Lastly, to account for sensor misalignment and scale fac-\ntor errors, the alignment Kalman filter is studied and simulated. Due to satellite\nmaneuvers, the AKF is able to estimate the misalignment parameters, resulting\nin desired attitude estimation performance.\n\nReferences\n\n1. Markley, F.L.: Spacecraft attitude determination methods. In: Israel Annual Con-\nference on Aerospace Sciences (2000)\n\n2. Markley, F.L., Reynolds, R.G.: Analytic steady-state accuracy of a spacecraft at-\ntitude estimator. Journal of Guidance, Control, and Dynamics 23(6), 1065\u20131067\n(2000)\n\n3. Leerts, E.J., Markley, F.L., Shuster, M.D.: Kalman ltering for spacecraft attitude\nestimation. Journal of Guidance 5(5), 417\u2013429 (1982)\n\n4. Pittelkau, M.E.: Kalman filtering for spacecraft system alignment calibration. Jour-\nnal of Guidance, Control, and Dynamics 24(6), 1187\u20131195 (2001)\n\n5. Wertz, J.R. (ed.): Spacecraft Attitude Determination and Control. Computer Sci-\nences Corporation (1978)\n\n6. Sidi, M.J.: Spacecraft Dynamics and Control. Cambridge University Press (1997)\n7. Hablani, H.B.: Autonomous inertial relative navigation with sight-line-stabilized\n\nintegrated sensors for spacecraft rendezvous. Journal of Guidance, Control, and\nDynamics 32(1) (2009)\n\n8. Joshi, J., et al.: Conceptual design report - ADCS, PRATHAM. Technical report,\nIndian Institute of Technology Bombay (2009)\n\n9. Alex, T.K., Shrivastava, S.K.: On-board corrections of systematic errors of earth\nsensors. IEEE Transactions on Aerospace and Electronic Systems 25(3), 373\u2013379\n(1989)\n\n\n\nS/C Attitude Determination with Sun Sensors, Horizon Sensors and Gyros 437\n\n10. Alex, T.K., Seshamani, R.: Generation of infrared earth radiance for attitude de-\ntermination. Journal of Guidance, Control, and Dynamics 12(2), 257\u2013277 (1989)\n\n11. Hablani, H.B.: Roll/pitch determination with scanning horizon sensors - oblateness\nand altitude corrections. Journal of Guidance, Control, and Dynamics 18(6), 1355\u2013\n1364 (1995)\n\n12. Tekawy, J.A., Wang, P., Gray, C.W.: Scanning horizon sensor attitude corrections\nfor earth oblateness. Journal of Guidance, Control and Dynamics 19(3), 706\u2013708\n(1996)\n\n13. Hashmall, J.A., Sedlak, J., Andrews, D., Luquette, R.: Empirical correction for\nearth sensor horizon radiance variation. In: Proceedings, AAS/GSFC 13th In-\nternational Symposium on Space Flight Dynamics, Goddard Space Flight Cen-\nter,Greenbelt, Maryland (May 1998)\n\n14. Phenneger, M.C., Singhal, S.P., Lee, T.H., Stengle, T.H.: Infrared horizon\nsensor modeling for attitude determination and control: analysis and mission ex-\nperience. NASA technical memorandum. National Aeronautics and Space Admin-\nistration,Scientific and Technical Information Branch (1985)\n\n15. Crassidis, J.L., Markley, F.L., Kyle, A.M., Kull, K.: Attitude determination im-\nprovements for GOES. In: Proceedings, Flight Mechanics/ Estimation Theory Sym-\nposium, Goddard Space Flight Center, Greenbelt, Maryland, NASA Conference\nPublication 3333, pp. 161\u2013175 (May 1996)\n\n16. STD 16, EADS Sodern Earth Sensor Brochure,\nwww.sodern.com/sites/docs_wsw/RUB_52/STD16.pdf\n\n17. Deutschmann, J., Bar-Itzhack, I.Y.: Extended kalman filter for the attitude esti-\nmation of the earth radiation budget satellite. In: Proceedings, Flight Me chan-\nics/Estimation Theory Symposium, Goddard Space Flight Center, Greenbelt,\nMaryland, NASA Conference Publication 3050, pp. 333\u2013346 (1989)\n\n18. ISRO Oceansat-2 Brochure. Oceansat-2-Brochure-1.pdf,\nhttp://www.isro.org/pslv-c14/pdf/\n\n19. Hughes, P.C.: Spacecraft Attitude Dynamics. Dover Publications (2004)\n20. Crassidis, J., Junkins, J.: Optimal Estimation of Dynamic Systems. Chapman\n\n& Hall/CRC Applied Mathematics and Nonlinear Science Series. Chapman\n&Hall/CRC (2004)\n\n21. Sedlak, J.: Improved earth sensor performance using a sequentially correlated noise\nmodel. In: Proceedings, Flight Mechanics Symposium, Goddard Space Flight Cen-\nter, Greenbelt, Maryland, NASA Conference Publication, pp. 71\u201383 (May 1999)\n\nwww.sodern.com/sites/docs_wsw/RUB_52/STD16.pdf\nhttp://www.isro.org/pslv-c14/pdf/\n\n\nQuaternion Data Fusion\n\nYang Cheng1, William D. Banas2, and John L. Crassidis2\n\n1 Mississippi State University, Mississippi State, MS 39762\ncheng@ae.msstate.edu\n\n2 University at Buffalo, Buffalo, NY 14260\n{wdbanas,johnc}@buffalo.edu\n\nAbstract. A numerical method for solving a class of constrained min-\nimization problems encountered in quaternion data fusion is presented.\nThe quaternion constraints are handled by the method of Lagrange mul-\ntipliers. The number of the stationary points of the minimization problem\nis finite and all of them are found by solving via homotopy continuation\na system of polynomial equations. The global minimizer is the stationary\npoint that minimizes the loss function of the minimization problem. A\nnumerical example of two-quaternion data fusion is given to illustrate the\nviability of the method as a global minimization method for quaternion\ndata fusion.\n\nKeywords: quaternion, data fusion, homotopy continuation.\n\n1 Introduction\n\nAttitude quaternion [7] is the attitude parameterization of choice for spacecraft\nattitude estimation for several reasons: 1) it is free of singularities, 2) the atti-\ntude matrix is quadratic in the quaternion components, and 3) the kinematics\nequations is bilinear and an analytic solution exists for the propagation. How-\never, the components of the attitude quaternion are not independent of each\nother and the norm of the attitude quaternion must be unity. This unity-norm\nconstraint leads to problems for data fusion involving quaternions. The objective\nof data fusion is to find the optimal estimate from data of various sources.\n\nReference [5] addresses the problem of fusing or averaging a set of quaternions.\nThe fused or averaged quaternion is defined as the optimal solution to a con-\nstrained minimization problem subject to one equality constraint (the quater-\nnion constraint). The method of Lagrange multipliers is used to convert the\nconstrained minimization problem to an unconstrained minimization problem.\nThe Lagrange multiplier is the maximum eigenvalue of a 4\u00d74 symmetric matrix\ncomposed from the quaternions and weights [3]. The optimal average quaternion\nis the eigenvector corresponding to the maximum eigenvalue [3].\n\nReference [3] addresses a more general data fusion problem in which the state\nvector of interest consists of one quaternion and a set of unconstrained param-\neters, for example, gyro biases. The data fusion problem is also formulated as a\nconstrained minimization problem subject to one equality constraint. The La-\ngrange multiplier is now the maximum eigenvalue of an 8\u00d78 asymmetric matrix\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 439\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_23\n\n\n\n440 Y. Cheng, W.D. Banas, and J.L. Crassidis\n\nor the maximum root of the 8th-degree secular equation [3]. Given the Lagrange\nmultiplier, the optimal state estimate is obtained by solving a linear system of\nequations [3].\n\nThis paper addresses an even more general data fusion problem in which the\nstate vector includes two or more quaternions as well as a set of unconstrained\nparameters. Such a problem appears in formation flying involving multiple ve-\nhicles in which two or more relative attitudes need to be determined or fused[1].\nThe data fusion problem is again defined as a constrained minimization problem,\nbut now subject to two or more equality constraints. The multiple quaternion\nconstraints significantly increase the difficulty of the minimization problem. To\nour knowledge, no closed form solution exists for the minimization problem and\nfew properties of the Lagrange multipliers are known. The latter makes it dif-\nficult to choose the initial guess of the Lagrange multipliers when solving the\nproblem using an iterative method.\n\nIn this paper, a numerical method is presented for the constrained minimiza-\ntion problem subject to multiple quaternion constraints based on the solution\nof polynomial systems. Unlike the iterative gradient-based methods, which can\nonly find a local minimum of the minimization problem, this method first finds\nall the stationary points and then selects the global minimum from them. In\naddition, the method provides insights to the properties, the number of local\nminima in particular, of the minimization problem.\n\nThe organization of the remainder of this paper is as follows. First, one-\nquaternion data fusion is reviewed. Next, the problem statement and formal\nsolution of the multi-quaternion data fusion problem are given. Then, the nu-\nmerical solution of the polynomial system is presented. Finally, a numerical\nexample is given, followed by the conclusions.\n\n2 One-Quaternion Data Fusion\n\nThe objective of data fusion is to fuse n estimates xi of a state vector x to yield a\nsingle (better) estimate of the state vector. Throughout this paper, it is assumed\nthat quaternion is part of the state vector and that the optimal estimate is the\nsolution to a constrained minimization problem of which the loss function is\nquadratic in the state vector. While the solution to one-quaternion data fusion\nproblem has been studied in [5,3], the problems and solutions of one-quaternion\ndata fusion are reviewed in this section for sake of completeness.\n\nThe vector and scalar parts of a quaternion are defined by q ?\n[\n?T q4\n\n]T\n,\n\nwhich are assumed to satisfy the unity-norm constraint ||?||2 + q24 = qTq = 1.\nThe attitude matrix is related to the quaternion by\n\nA(q) = ?T (q)?(q) =\n(\nq24 ? ||?||2\n\n)\nI3\u00d73 + 2??T ? 2 q4[?\u00d7] (1)\n\nwhere I3\u00d73 is a 3\u00d73 identity matrix and [?\u00d7] is the cross-product matrix defined\nby\n\n[?\u00d7] ?\n?\n? 0 ?q3 q2q3 0 ?q1\n?q2 q1 0\n\n?\n? (2)\n\n\n\nQuaternion Data Fusion 441\n\n?(q) ?\n[\nq4I3\u00d73 + [?\u00d7]\n\n??T\n]\n, ?(q) ?\n\n[\nq4I3\u00d73 ? [?\u00d7]\n\n??T\n]\n\n(3)\n\nThe simplest case of one-quaternion data fusion is now reviewed, where the\nith state estimate xi = qi. The loss function is chosen as [5]\n\nJ(q) =\n1\n\n2\n\nn?\ni=1\n\nqT?(qi)Wqqi?T (qi)q (4)\n\nwhere Wqqi is a 3\u00d7 3 positive definite weighting matrix. The three-dimensional\nvector ?T (qi)q has been widely to measure the attitude error in spacecraft atti-\ntude estimation and the magnitude of ?T (qi)q is the absolute value of the sine\nof the half-error angle [5]. The quaternion constraint qTq = 1 is handled using\nthe method of Lagrange multipliers, which gives the augmented loss function as\n\nJ(q) =\n1\n\n2\n\nn?\ni=1\n\nqT?(qi)Wqqi?T (qi)q+\n?\n\n2\n(qTq? 1) (5)\n\nwhere ? is the Lagrange multiplier. The necessary conditions for minimization\nof Eq. (5) are\n\n(F + ?I4\u00d74)q = 0 (6a)\n\nqTq = 1 (6b)\n\nwhere\n\nF ?\nn?\n\ni=1\n\n?(qi)Wqqi?T (qi) (7)\n\nA vector satisfying the the necessary conditions is called a stationary point.\nEquation (6a) indicates that q and ? are the eigenvector and eigenvalue of F ,\nrespectively. Since the loss function for the quaternion satisfying Eq. (6) equals\n??/2, the optimal average quaternion is the eigenvector corresponding to the\nmaximum eigenvalue of ?F .\n\nWhen the ith state estimate xi is composed of a quaternion qi, which is\nsubject to the constraint qTi qi = 1, and other quantities bi, which are free of\nconstraints, the loss function is given by\n\nJ(x) =\n1\n\n2\n\nn?\ni=1\n\n?xTi Wi?xi (8)\n\n\n\n442 Y. Cheng, W.D. Banas, and J.L. Crassidis\n\nwith\n\nx ?\n[\nq\nb\n\n]\n(9a)\n\n?xi ?\n\n?\n??\n\nT (qi)q\n\nb? bi\n\n?\n? (9b)\n\nWi ?\n?\n?Wqqi Wqbi\nWTqbi Wbbi\n\n?\n? (9c)\n\nwhere Wi is positive definite. The vector b can be of any dimension, denoted by\nnb, and the same attitude error vector expression ?\n\nT (qi)q has been used as in\nthe previous case. Note that although q and?q represent the same attitude, they\ngive attitude error vectors in opposite directions. For nonzero Wqbi , [qT , bT ]T\nand [?qT , bT ]T yield different values of the loss function. Only when Wqbi = 0\nor x = q (b is empty), \u00b1q or \u00b1?T (qi)q yield the same loss function.\n\nThe augmented loss function is now\n\nJ(x) =\n1\n\n2\n\nn?\ni=1\n\n?xTi Wi?xi +\n?\n\n2\n(qTq? 1) (10)\n\nThe necessary conditions for minimization of Eq. (10) are?\n?Bqq + ?I4\u00d74 Bqb\n\nBTqb Bbb\n\n?\n?\n?\n?q\nb\n\n?\n? =\n\n?\n?c\nd\n\n?\n? (11a)\n\nqTq = 1 (11b)\n\nwhere\n\nB =\n?\n?Bqq Bqb\nBTqb Bbb\n\n?\n? ?\n\n?\n?\n?n\n\ni=1 ?(qi)Wqqi?T (qi)\n?n\n\ni=1 ?(qi)Wqbi\n?n\n\ni=1 WTqbi?T (qi)\n?n\n\ni=1 Wbbi\n\n?\n? (12a)\n\nc ?\nn?\n\ni=1\n\n?(qi)Wqbibi (12b)\n\nd ?\nn?\n\ni=1\n\nWbbibi (12c)\n\nSolving the second subequation of Eq. (11a) leads to\n\nb = B?1bb (d? BTqbq) (13)\nWith b eliminated using Eq. (13), Eq. (11) reduces to\n\n(G + ?I4\u00d74)q = g (14a)\nqTq = 1 (14b)\n\n\n\nQuaternion Data Fusion 443\n\nwhere\n\nG ? Bqq ? BqbB?1bb BTqb (15a)\ng ? c? BqbB?1bb d (15b)\n\nEquation (14) is the key equation to solve in one-quaternion data fusion. Given\nxi and Wi, the one-quaternion data fusion procedure is as follows:\n1. Compute Bqq, Bqb, Bbb, c, d using Eq. (12)\n2. Compute G and g using Eq. (15)\n3. Solve Eq. (14) for the optimal q? and ??\n4. Compute the optimal b? using Eq. (13)\n\nNote that for nonzero g, q? and ?q? cannot both be solutions of Eq. (14). The\nLagrange multiplier ?? is known to be the maximum real eigenvalue of an 8\u00d7 8\nasymmetric matrix or the maximum root of the 8th-degree secular equation [3].\nGiven ??, the optimal q? can be obtained by solving (G + ??I4\u00d74)q? = g [3].\n\n3 Multi-quaternion Data Fusion\n\nIn multi-quaternion data fusion, the state vector is assumed to consist of m\nquaternions q(j), j = 1, . . . ,m, with q(j)Tq(j) = 1, and a set of unconstrained\nquantities b. Define\n\nx ?\n\n?\n?Q\nb\n\n?\n? (16a)\n\nxi ?\n\n?\n?Qi\nbi\n\n?\n? (16b)\n\nQ ?\n\n?\n??\nq(1)\n\n...\n\nq(m)\n\n?\n?? (16c)\n\nQi ?\n\n?\n???\nq\n(1)\ni\n...\n\nq\n(m)\ni\n\n?\n??? (16d)\n\n?(Qi) ?\n\n?\n????\n?\n(\nq\n(1)\ni\n\n)\n. . .\n\n?\n(\nq\n(m)\ni\n\n)\n\n?\n???? (16e)\n\nNote that ?(Qi) is a block-diagonal matrix. The loss function is of the form of\nEq. (8), repeated here:\n\nJ(x) =\n1\n\n2\n\nn?\ni=1\n\n?xTi Wi?xi (17)\n\n\n\n444 Y. Cheng, W.D. Banas, and J.L. Crassidis\n\nwhere\n\n?xi ?\n\n?\n??\n\nT (Qi)Q\n\nb? bi\n\n?\n? (18a)\n\nWi ?\n?\n?WQQi WQbi\nWTQbi Wbbi\n\n?\n? (18b)\n\nAugmenting the constraint function with the m quaternion constraints gives\n\nJ(x) =\n1\n\n2\n\nn?\ni=1\n\n?xTi Wi?xi +\n1\n\n2\n\nm?\nj=1\n\n?j\n\n(\nq(j)Tq(j) ? 1\n\n)\n(19)\n\nwith ?j , j = 1, . . . ,m, the Lagrange multipliers.\nThe necessary conditions for minimization of Eq. (19) are\n\n?\n?BQQ + ? BQb\n\nBTQb Bbb\n\n?\n?\n?\n?Q\nb\n\n?\n? =\n\n?\n?C\nd\n\n?\n? (20a)\n\nq(j)Tq(j) = 1, j = 1, . . . ,m (20b)\n\nwhere\n\n? =\n\n?\n??\n?1I4\u00d74\n\n. . .\n\n?mI4\u00d74\n\n?\n?? (21)\n\nBQQ ?\nn?\n\ni=1\n\n?(Qi)WQQi?T (Qi) (22a)\n\nBQb ?\nn?\n\ni=1\n\n?(Qi)WQbi (22b)\n\nBbb ?\nn?\n\ni=1\n\nWbbi (22c)\n\nC ?\nn?\n\ni=1\n\n?(Qi)WQbibi (22d)\n\nd ?\nn?\n\ni=1\n\nWbbibi (22e)\n\nSolving the second subequation of Eq. (20a) leads to\n\nb = B?1bb (d? BTQbQ) (23)\n\n\n\nQuaternion Data Fusion 445\n\nWith b eliminated using Eq. (23), Eq. (20a) reduces to\n\n(H+ ?)Q = h (24a)\nq(j)Tq(j) = 1, j = 1, . . . ,m (24b)\n\nwhere\n\nH ? BQQ ? BQbB?1bb BTQb (25a)\nh ? C? BQbB?1bb d (25b)\n\nEquation (24) is the key equation to solve in multi-quaternion data fusion. Given\nxi and Wi, the multi-quaternion data fusion procedure is as follows:\n1. Compute BQQ, BQb, Bbb, C, d using Eq. (22)\n2. Compute H and h using Eq. (25)\n3. Solve Eq. (24) for the optimal Q? and ??j , j = 1, . . . ,m\n4. Compute the optimal b? using Eq. (23)\n\nNote that for nonzero h, if Q? is the solution of Eq. (24), its \u201cconjugate\u201d with\none or more q(j)? replaced by ?q(j)? is not a solution of Eq. (24) because the\nattitude error vectors in the loss function given by Eq. (17) are dependent on\nthe signs of the quaternions.\n\nEquation (24) or the equivalent of it may be solved using an iterative gradient-\nbased algorithm, but it cannot guarantee that Q? and ??j are globally optimal.\nSince little is known about ??j , choosing an appropriate initial guess for the\ngradient-based algorithm is not easy.\n\nNoting that Eq. (24) is a system of polynomial equations in Q and ?j , we\nare motived to solve Eq. (24) using the homotopy continuation method [2,4],\nwhich is capable of finding all the isolated solutions, real and complex, of the\npolynomial system. The globally optimal Q? and ?? are then given by the real\nsolution that minimizes J(x). The advantage of the method is that it guarantees\nthat the globally optimal solution is one of the isolated solutions as long as it\nexists and is unique. The detail of the numerical solution is given in the next\nsection.\n\n4 Numerical Solution for Multi-quaternion Data Fusion\n\nDefine the 5m-dimensional vector\n\ny ?\n[\nQ\n?\n\n]\n=\n\n?\n?????????\n\nq(1)\n\n...\n\nq(m)\n\n?1\n...\n\n?m\n\n?\n?????????\n\n(26)\n\n\n\n446 Y. Cheng, W.D. Banas, and J.L. Crassidis\n\nwhere m is the number of quaternions in the state vector. The 5m-dimensional\nvector y is required to satisfy the following 5m polynomial equations (also\nEq. (24)):\n\n(H+ ?)Q = h (27a)\nq(j)Tq(j) = 1, j = 1, . . . ,m (27b)\n\nFor a well-posed data fusion problem, this polynomial system has a finite\nnumber of isolated solutions, which can be found via homotopy continuation\n[2,4]. The idea of homotopy continuation is to cast the target polynomial system\nin a parameterized family of systems, one of which (the start system) has known\nor easily found solutions[6,8]. After choosing this family, one chooses a path from\nthe start system to the target system, constructs a homotopy between the two,\nand tracks the solution paths. The homotopy continuation method finds all the\nreal and complex solutions to a polynomial system. Since only real solutions of\nthe polynomial system are of interest, the complex solutions found by the solver\nare discarded.\n\nFor illustration purposes, an example of homotopy continuation of one equa-\ntion in one unknown is given[6]. To solve\n\nf(x) = x5 + ax+ b = 0 (28)\n\nwhere a and b are two constants, one may construct the continuation equation\nas\n\nh(x, t) = x5 + atx+ [tb? (1? t)q5], 0 ? t ? 1 (29)\nwhere q is a complex constant. The target system (the original equation) corre-\nsponds to t = 1 and the start system corresponds to t = 0, given by\n\nh(x, 0) = x5 ? q5 (30)\nThe five complex solutions to the start system are obvious. The solution of h(x, t)\ncan be viewed as a function of t, denoted by x(t), 0 ? t ? 1. Geometrically, x(t)\nare paths originating from x(0) and ending at x(1). With x(0) given, x(?t),\nwhere ?t is a small step size, can be found using the Euler or Newton method.\nStep by step, the paths are tracked until t = 1.\n\nAlthough the idea of homotopy continuation is simple, several important is-\nsues need to be handled with care. These include but are not limited to deter-\nmination of the number of paths, path crossing, path divergence to infinity, and\nsingular solutions[6]. A singular solution has a singular Jacobian matrix, defined\nas the derivatives of the equations with respect to the unknowns[6]. Thanks to ho-\nmotopy continuation based solvers such as HOM4PS[4], Bertini[2], PHCpack[9],\nand HomLab[8], solving a system of polynomial equations via homotopy con-\ntinuation is easy for a user, who only needs to provide a model description of\nthe polynomial system that can be processed by the solver but does not need to\nprovide a starter system.\n\nBy definition, the real solutions of the polynomial system in Eq. (27) are\nthe stationary points of the constrained minimization problem. The globally\n\n\n\nQuaternion Data Fusion 447\n\noptimal solution is the one that minimizes the loss function. The local minimizers\nof the minimization problem are the stationary points with positive definite\nHessian. Because the loss function is quadratic in the attitude quaternions, the\nHessian without considering the m quaternion constraints is (H + ??), where\n?? is evaluated at the ?? in y?. The dimension of (H + ??) is (4m) \u00d7 (4m).\nSince one attitude only has three degrees of freedom and m attitudes only have\n3m degrees of freedom, this Hessian should not be used. Instead, a (3m)\u00d7 (3m)\nHessian is defined as\n\nH? = P?T (H+ ??)P? (31)\nwith the (3m)\u00d7 (4m) P? satisfying\n\nP?TP? = I(3m)\u00d7(3m) (32)\nP?TC? = 0(3m)\u00d7m (33)\n\nwhere\n\nC? =\n\n?\n??\nq?(1) \u00b7 \u00b7 \u00b7 04\u00d71\n...\n\n. . .\n...\n\n04\u00d71 \u00b7 \u00b7 \u00b7 q?(m)\n\n?\n?? (34)\n\nThe columns of the (4m) \u00d7 m matrix C? correspond to the gradients of the\nquaternion constraints. The matrix P? can be found using the QR decomposition\nof C?. A stationary point is a local minimizer if H? is positive definite.\n\nA stationary point or local minimizer is the global minimizer if gives the\nglobal minimum of the loss function of multi-quaternion data fusion, whose data-\ndependent part is equivalent to\n\nJeq(Q) =\n1\n\n2\nQTHQ? hTQ (35)\n\nThe loss functions J and Jeq have the same stationary points and minima, but\nthey are not equal to each other in general. Evaluating the equivalent loss func-\ntion at a local minimum and substituting Eq. (27) gives\n\nJeq(Q\n?) =\n\n1\n\n2\nQ?THQ? ? hTQ?\n\n=\n1\n\n2\nQ?THQ? ?Q?T (H + ??)Q?\n\n= ?1\n2\nQ?THQ? ?\n\nm?\nj=1\n\n??j\n\n(36)\n\nAn alternative form of Jeq is given by\n\nJeq = ?1\n2\nQ?Th? 1\n\n2\n\nm?\nj=1\n\n??j (37)\n\nIt follows that if h = 0, Jeq = ?1/2\n?m\n\nj=1 ?\n?\nj , completely determined by the\n\noptimal Lagrange multipliers ??j . In this case, the globally optimal solution has\nthe maximum sum of the associated Lagrange multiplers.\n\n\n\n448 Y. Cheng, W.D. Banas, and J.L. Crassidis\n\nTo find the globally optimal Q? and ??j , j = 1, . . . ,m, the following procedure\nis used:\n\n1. Find all real solutions y? of the polynomial system given by Eq. (27)\n2. Extract Q? and ??j , j = 1, . . . ,m, from y\n\n?\n\n3. For j = 1, . . . ,m, find the set of Q? and ??j with the minimum value of the\nequivalent loss function given by Eq. (35)\n\n5 Numerical Example\n\nAn example of fusing two estimates of a 11-dimensional state vector is presented.\nThe 11-dimensional state vector consists of two four-dimensional quaternions and\na three-dimensional bias vector (in deg/hr). The optimal quaternions and gyro\nbias vector minimizes the loss function given by Eq. (17).\n\nThe numerical result of a typical run is given, in which the numerical values\nof x1 and x2 are\n\nx1 =\n\n?\n??\nq\n(1)\n1\n\nq\n(2)\n1\n\nb1\n\n?\n?? =\n\n?\n?????????????????\n\n?0.000277382573244\n?0.000204231576920\n0.000192024591025\n0.999999922237461\n?0.000351386991909\n0.000409974757656\n0.500076203448043\n0.865981234896502\n2.498888167313556\n1.419147803026932\n1.515444247510682\n\n?\n?????????????????\n\n,x2 =\n\n?\n??\nq\n(1)\n2\n\nq\n(2)\n2\n\nb2\n\n?\n?? =\n\n?\n?????????????????\n\n0.000460180571557\n?0.000137458850112\n0.000082907410592\n0.999999881232627\n0.000201400729929\n0.000114725959778\n0.499722080513250\n0.866185770215148\n4.262501700209700\n2.678350976663482\n?0.290141003402079\n\n?\n?????????????????\n\n(38)\nThe individual blocks of the weighting matrices for the two estimates as defined\nby Eq. (18b) are given by\n\nWQQ1 =?\n???????????\n\n2.6028 ?1.1934 ?0.0338 0.0005 ?0.2992 0.4473 ?0.4107 0.2368\n?1.1934 2.6220 0.0618 0.0002 0.3700 ?0.3078 0.4449 ?0.2566\n?0.0338 0.0618 1.6481 ?0.0003 0.0046 ?0.0102 0.0071 ?0.0041\n0.0005 0.0002 ?0.0003 0.0000 ?0.0000 0.0001 ?0.0000 0.0000\n?0.2992 0.3700 0.0046 ?0.0000 1.8740 0.3170 0.0723 ?0.0412\n0.4473 ?0.3078 ?0.0102 0.0001 0.3170 1.4845 ?0.1206 0.0691\n?0.4107 0.4449 0.0071 ?0.0000 0.0723 ?0.1206 1.0865 ?0.6273\n0.2368 ?0.2566 ?0.0041 0.0000 ?0.0412 0.0691 ?0.6273 0.3622\n\n?\n???????????\n\u00d7 107\n\n(39)\n\n\n\nQuaternion Data Fusion 449\n\nWQQ2 =?\n???????????\n\n2.6470 0.2882 ?0.1381 ?0.0012 0.7717 0.0829 1.4650 ?0.8454\n0.2882 1.7538 ?0.0554 0.0001 0.3028 0.0258 0.3218 ?0.1858\n?0.1381 ?0.0554 1.2859 ?0.0001 ?0.1252 ?0.0097 ?0.0964 0.0556\n?0.0012 0.0001 ?0.0001 0.0000 ?0.0003 ?0.0000 ?0.0006 0.0004\n0.7717 0.3028 ?0.1252 ?0.0003 1.8273 ?0.0658 0.4699 ?0.2715\n0.0829 0.0258 ?0.0097 ?0.0000 ?0.0658 1.2899 ?0.0125 0.0071\n1.4650 0.3218 ?0.0964 ?0.0006 0.4699 ?0.0125 2.8015 ?1.6164\n?0.8454 ?0.1858 0.0556 0.0004 ?0.2715 0.0071 ?1.6164 0.9326\n\n?\n???????????\n\u00d7 107\n\n(40)\n\nWQb1 =\n\n?\n???????????\n\n?87.1316 718.0253 ?7.1995\n0.1239 ?17.8754 ?34.1459\n?8.9145 5.1567 ?718.6707\n?405.9057 29.0107 ?0.2878\n189.8244 ?194.0680 237.5290\n?136.9964 ?141.7521 135.0680\n2.7172 ?0.0123 25.9761\n\n?41.2554 36.2763 ?20.9183\n\n?\n???????????\n\n(41)\n\nWQb2 =\n\n?\n???????????\n\n40.2161 52.0082 ?26.7553\n?0.0091 151.4475 18.2024\n360.3686 ?207.9424 ?460.4823\n?178.0111 73.2052 0.1814\n?394.2257 ?29.2972 ?255.2308\n147.3439 ?663.7105 ?257.5989\n106.0858 0.2612 ?571.5016\n?42.6669 ?377.3766 217.8556\n\n?\n???????????\n\n(42)\n\nWbb1 =\n?\n?0.2034 0.0278 0.00020.0278 5.4026 0.0075\n0.0002 0.0075 0.1230\n\n?\n? (43)\n\nWbb2 =\n?\n? 0.2462 ?0.0091 ?0.0131?0.0091 0.1299 0.0334\n?0.0131 0.0334 0.1574\n\n?\n? (44)\n\nFrom the estimates and weighting matrices, the corresponding polynomial sys-\ntem in Eq. (27) is formed, where H and h are given by\n\n\n\n450 Y. Cheng, W.D. Banas, and J.L. Crassidis\n\nH =?\n???????????\n\n4.9966 ?0.9375 ?0.1396 ?0.0006 0.3153 0.5017 0.9629 ?0.5558\n?0.9375 4.2338 0.0170 0.0003 0.6291 ?0.2846 0.6949 ?0.4009\n?0.1396 0.0170 2.9294 ?0.0004 ?0.0986 ?0.0165 ?0.0739 0.0426\n?0.0006 0.0003 ?0.0004 0.0000 ?0.0003 0.0000 ?0.0006 0.0004\n0.3153 0.6291 ?0.0986 ?0.0003 3.5923 0.2349 0.4678 ?0.2697\n0.5017 ?0.2846 ?0.0165 0.0000 0.2349 2.7710 ?0.1418 0.0812\n0.9629 0.6949 ?0.0739 ?0.0006 0.4678 ?0.1418 3.8214 ?2.2053\n?0.5558 ?0.4009 0.0426 0.0004 ?0.2697 0.0812 ?2.2053 1.2726\n\n?\n???????????\n\u00d7 107\n\n(45)\n\nh =\n\n?\n???????????\n\n28.9572\n?510.8195\n?17.3103\n?0.1430\n184.0905\n16.0382\n347.8748\n?200.7379\n\n?\n???????????\n\n(46)\n\nGiven H and h, Eq. (27) is solved using the polyhedral homotopy continuation\nmethod of HOM4PS 2.0 [4], which is chosen for its high speed relative to the other\nhomotopy continuation based solvers. On a Macintosh computer with a 3 GHz\nIntel Core 2 Duo processor, the real and complex solutions of the equations are\nfound in less then 0.5 seconds.\n\nFor this specific run, 52 solutions are real and 12 solutions are complex. Note\nthat because h is nonzero, [q(1)T ,q(2)T ]T , [?q(1)T ,q(2)T ]T , [q(1)T ,?q(2)T ]T , and\n[?q(1)T ,?q(2)T ]T are not equivalent. Recall that they yield different attitude\nerror vectors in the loss function. If one of them solves Eq. (27), the other three\ndo not.\n\nIt should be pointed out that the number of real solutions depends on both\nH and h. For different values of H and h, the observed number of real solutions\nvaries from 48 to 64 but is always even. The observed total number of real and\ncomplex solutions is always 64, however.\n\nThe local minimizers are found by checking the positive definiteness of the\nHessians given by Eq. (31) at the stationary points. The number of local mini-\nmizers (including the global minimizer) is four in all runs and does not depend\non the values of H and h. The global minimizer as well as the other three local\nminimizers for this specific run are given in Table 1. The data of the global\nminimizer are given in column 1. The data of the three local minimizers are in\ncolumns 2-4.\n\nThe 8\u00d78 matrices (H+??) corresponding to the four local minimizers have six\nlarge positive eigenvalues and two small eigenvalues. The two small eigenvalues of\n(H+??) are seven orders of magnitude less than the six large eigenvalues. Both\nsmall eigenvalues are positive for the global minimizer. For the other three local\nminimizers, one or two of the small eigenvalues are negative. The eigenvalues of\n\n\n\nQuaternion Data Fusion 451\n\nTable 1. Global and Local Minimizers\n\nQ?\n\n?0.000082243849\n0.000070491751\n?0.000131920776\n?0.999999985432\n0.000017062159\n?0.000187251357\n?0.499941870375\n?0.866058941927\n\n0.000071570723\n?0.000103146338\n0.000131512371\n0.999999983471\n?0.000003434267\n0.000187114822\n0.499960737563\n0.866048050556\n\n?0.000086071033\n0.000077016986\n?0.000143351102\n?0.999999983055\n?0.000141582193\n0.000255151458\n0.499730976390\n0.866180619784\n\n0.000075397906\n?0.000109671573\n0.000142942697\n0.999999980927\n0.000155210084\n?0.000255287992\n?0.499712105367\n?0.866191504511\n\n?? ?4.953412878868?4.015817997239\n?5.016727156338\n?4.006374995955\n\n?5.452070929468\n?4.505033071226\n\n?5.515385202667\n?4.514476066556\n\nb?\n3.776978219338\n1.417500286987\n1.442498556379\n\n3.184611496826\n1.453817987354\n?0.205862220233\n\n3.660908235836\n1.394096956034\n0.712077571903\n\n3.300681480455\n1.477221318092\n0.524558761517\n\nJeq 4.464238890976 4.518110168723 4.953453955162 5.026211225024\nJ 4.815951252845 4.869822531936 5.305166316980 5.377923588248\n\nthe 6\u00d7 6 Hessians are positive for all four local minimizers (including the global\nminimizer).\n\n6 Conclusions\n\nIn quaternion data fusion, the optimal quaternion estimate is usually obtained as\nthe solution to a minimization problem subject to one or more quaternion norm\nconstraints. The necessary condition for the local minima of the minimization\nproblem is a system of polynomial equations with a finite number of isolated\nreal and complex solutions, which can be all found via homotopy continuation.\nThe global minimizer is then chosen from them as the one that minimizes the\nloss function of the minimization problem. The homotopy continuation based\nquaternion data fusion method does not depend on the initial guess of the state\nor Lagrange multipliers and is guaranteed to find the globally optimal solution of\nthe minimization problem. The method is appropriate for small-scale quaternion\ndata fusion problems.\n\nReferences\n\n1. Andrle, M.S., Crassidis, J.L., Linares, R., Cheng, Y., Hyun, B.: Deterministic rela-\ntive attitude determination of three-vehicle formations. Journal of Guidance, Con-\ntrol, and Dynamics 32(4), 1077\u20131088 (2009)\n\n2. Bates, D.J., Hauenstein, J.D., Sommese, A.J., Wampler, C.W.: Bertini: Software for\nnumerical algebraic geometry, http://www.nd.edu/~sommese/bertini\n\n3. Crassidis, J.L., Cheng, Y., Nebelecky, C.K., Fosbury, A.M.: Decentralized attitude\nestimation using a quaternion covariance intersection approach. Journal of the As-\ntronautical Sciences 57(1-2), 113\u2013128 (2009)\n\n4. Lee, T.L., Li, T.Y., Tsai, C.H.: Hom4PS-2.0, a software package for solving poly-\nnomial systems by the polyhedral homotopy continuation. Computing 83, 109\u2013133\n(2008)\n\nhttp://www.nd.edu/~sommese/bertini\n\n\n452 Y. Cheng, W.D. Banas, and J.L. Crassidis\n\n5. Markley, F.L., Cheng, Y., Crassidis, J.L., Oshman, Y.: Averaging quaternions. Jour-\nnal of Guidance, Control, and Dynamics 30(4), 1193\u20131196 (2007)\n\n6. Morgan, A.: Solving Polynomial Systems Using Continuation for Engineering and\nScientific Problems. Englewood Cliffs, Prentice Hall (1987)\n\n7. Shuster, M.D.: A survey of attitude representations. Journal of the Astronautical\nSciences 41(4), 439\u2013517 (1993)\n\n8. Sommese, A.J., Wampler, C.W.: The Numerical Solution of Systems of Polynomials\nArising in Engineering and Science. World Scientific, River Edge (2005)\n\n9. Verschelde, J.: Algorithm 795: PHCpack: a general-purpose solver for polynomial\nsystems. ACM Transactions on Mathematical Software 25(2), 251\u2013276 (1999)\n\n\n\nLinear Covariance Techniques for Closed-Loop\n\nAttitude Determination and Control Analysis\n\nNoam Leiter1,? and David K. Geller2,??\n\n1 Technion-IIT, Haifa 32000, Israel\nnoaml@technion.ac.il\n\n2 Utah State University, Logan, Utah, 84322, USA\ndavid.geller@usu.edu\n\nAbstract. During the 2011-2012 winter semester, graduate students in\nthe Department of Aerospace Engineering, Technion were asked to repro-\nduce the results of an attitude estimation paper by Prof. Itzhack Bar-\nItzhack, \u201cTrue Covariance Simulation of the EUVE Update Filter\u201d, as\na homework assignment for a special topics course on linear covariance\nanalysis. The students reproduced both the expected filter errors and\nthe true filter errors as reported by Bar-Itzhack using covariance analy-\nsis. Bar Itzhack\u2019s work was then extended to determine the closed-loop\npointing/control errors, again using linear covariance techniques. The\ncontrol problem included star-tracker and gyro errors, magnetic torquer\nactuation errors, random disturbance moments, a suboptimal Kalman\nfilter with model replacement, and a simple proportional-derivative con-\ntrol law. Using an augmented state formulation, covariance techniques\nwere used to determine the variances of the expected and true attitude\nestimation errors, the variances of the true pointing errors of the closed-\nloop system, and the variance of the required control effort. Results were\nverified by nonlinear Monte Carlo analysis. The linear covariance analy-\nsis proved to be a very useful and fast analysis tool for the preliminary\ndesign of attitude determination and control systems.\n\nKeywords: Linear Covariance Techniques, Attitude Control.\n\n1 Introduction\n\nIn 1989, Bar-Itzhack andHarman presented a paper,\u201cTrue Covariance Simulation\nof the EUVE Update Filter\u201d, at the Flight Mechanics/Estimation Symposium at\nthe NASA Goddard Space Flight Center[2]. The Extreme Ultra-Violet Explorer\n(EUVE) attitude estimation problem involved 24 true states - attitude (3), mis-\nalignment states (12) of four sensors (two star-trackers, one sun sensor, and one\ngyro package), gyro bias (3), gyro scale-factor (3), and gyro non-orthogonal mis-\nalignment (3) - as well as gyro noise and gyro bias noise. The proposed suboptimal\n6 state attitude estimation filter consisted of 6 states - attitude (3) and gyro bias\n\n? Graduate Student, Department of Aerospace Engineering.\n?? Visiting Professor, Technion\u2019s Department of Aerospace Engineering.\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 453\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_24\n\n\n\n454 N. Leiter and D.K. Geller\n\n(3). The Bar-Itzhack paper clearly demonstrated the usefulness of true covariance\nanalysis in determining the difference between the suboptimal filter covariance\nand the true estimation error covariance.\n\nThese results are extended in this paper by adding a closed-loop control sys-\ntem to the problem, formulating the associated closed-loop covariance analysis\nequations, and determining the covariance of the closed-loop control/pointing\nerrors and the covariance of the control effort. The closed-loop control prob-\nlem included magnetic torquers, a proportional-derivative (PD) control law, and\nnine new true states - attitude rate (3), control torque misalignment (3), and\ncontrol torque biases (3). Random torque disturbances and control torque ac-\ntuation noise were also incorporated. The original 6-state suboptimal filter was\nnot modified.\n\nHistorically, linear covariance theory has been applied to general estima-\ntion problems [8,5,16], design and analysis of orbit determination algorithms\n[24,12,18,7], inertial navigation systems[23,14,6,13], and attitude determination\nsystems[2,15,10]. The covariance analysis approaches are more commonly known\nas true covariance analysis [2], consider analysis [27,1,24], or generalized covari-\nance analysis [15,4]. In all cases however, the effects of closed-loop control on the\noverall performance of the system is not considered.\n\nRecent developments in linear covariance theory have combined the develop-\nments of Battin [3] and Maybeck [16] with continuous feedback control and model\nreplacement[19] (e.g., state propagation using gyro measurements) to produce\nlinear covariance tools that can be applied to many different types of closed-\nloop GN&C problems[9]. Specific applications include autonomous rendezvous\n[9,25], powered lunar descent[17], and launch vehicle ascent trajectory analysis\n[20]. While linear covariance theory for closed-loop GN&C systems has been\nsuccessfully applied to these applications, a clear demonstration of its value and\nusefulness in the context of a closed-loop spacecraft attitude control problem is\nwarranted.\n\nThe objectives of this paper are to demonstrate the usefulness of linear covari-\nance analysis in closed-loop attitude control system design and analysis, and to\ndemonstrate the accuracy and efficiency of linear covariance analysis by direct\ncomparison to nonlinear Monte Carlo analysis. The variance of the expected and\ntrue attitude estimation errors as reported in Bar Itzhack\u2019s original paper [2] will\nbe reproduced, and the variances of the true attitude control errors and required\ncontrol effort will be presented.\n\nTo develop a linear covariance simulation, the truth models for the dynamics,\nsensors, and actuators must first be defined. This is accomplished in Section 2.\nBiases, scale-factors, misalignment, etc., and other colored noise processes are\nincorporated into the truth models as additional true states. Next, the naviga-\ntion state vector, and the associated navigation algorithms are defined in Section\n3. The navigation algorithms are derived from a filter design model that is dis-\ncarded after the navigation algorithms are developed. Note that the navigation\ndesign model and the truth models are generally similar, but not identical. Next,\nthe control laws are defined and presented in Section 3. Here again, the guidance\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 455\n\nand control algorithms are derived from a design model that is discarded once the\nalgorithms are developed. The output of the guidance and control algorithms,\nalong with potential compensation for actuator modeling errors, represents the\nactuator command defined in the truth model. All models and algorithms are lin-\nearized about the mean or nominal state time-history. Since the dynamics of the\ntrue states and the dynamics of the navigation states are coupled, an augmented\nstate vector is created by appending the navigation state vector to the true state\nvector. This is described in Section 4 and results is a dimensionally large linear\ntime-varying model of the entire closed-loop system. The mathematical details\nof this process are provided in [9]. The linear covariance analysis and non-linear\nMonte Carlo analysis of a closed-loop attitude determination and control system\nare presented in Section 5 followed by conclusions in Section 6.\n\n2 The EUVE Attitude Model1\n\nThe EUVE was a NASA satellite launched to a low Earth orbit on June 7\n1992, operating till January 31 2001. The EUVE was designed to perform two\nmissions: 1) an all-sky survey of extreme ultraviolet sources, and 2) spectroscopy\nof particular ultraviolet sources.\n\nIn this study we examine the overall closed-loop performance of the navigation\nand control system during the all-sky survey. The EUVE payload for the all-sky\nsurvey consists of three telescopes pointing perpendicular to the body x-axis.\nDuring the survey the satellite is spin stabilized about the x-axis and is nominally\naligned with the Earth-Sun vector, requiring a precession of approximately 1 [deg]\nper day. In the analysis that follows, the system is examined over a 600 [sec] time\nperiod, therefore the precession is negligible and the Earth-Sun vector is assumed\nconstant.\n\n2.1 EUVE Attitude Control Dynamics Model\n\nThe actual EUVE attitude control system includes two magneto-torquers, aligned\nwith the x-body and z-body axes, two wobble control actuators and one passive\nx-axis nutation damper. Assuming rigid body motion, the angular dynamics are\ngiven by\n\nJ?? = Tmag +Tnutation +Twobb +Tdist ? [?\u00d7]J?\nwhere J = J0 + ?J is the inertia tensor of the EUVE in x-y-z body frame [26]:\n\nJ0 =\n\n?\n?850 0 00 700 0\n\n0 0 700\n\n?\n? [kg \u00b7m2] , ?J = ?10 \u00b7\n\n?\n?0 0 10 0 0\n1 0 0\n\n?\n? [kg \u00b7m2]\n\n1 The model described is not the model of the final EUVE mission. We have tried to\nreproduce the mission model as known to Bar-Itzhack 3 years before the launch.\n\n\n\n456 N. Leiter and D.K. Geller\n\nTnutation is the torque applied by the passive nutation damper with a damping\ntime constant of 10 [hr][26]. This torque is dominant in stabilizing the spin x-\naxis when the Earth-Sun vector alignment is initially acquired, or during the\nspectroscopy mission when large magnitude attitude changes between targets are\nnecessary. This torque is however negligible for the spin axis/x-axis regulation\nproblem over the 600 [sec] time period of interest in this paper. Twobb is the\ntorque applied by the two wobble control actuators, which consist of two movable\nmasses. The position of the masses is adjusted to suppress the wobble effect of\nthe cross product moment of inertia [26].\n\nTwobb ?= [?\u00d7] ?J? ? ?J??\nTherefore the attitude dynamics examined in this study are\n\n?? = J?10 (Tmag +Tdist ? [?\u00d7] J0?) (1)\nwhere Tdist is a zero mean continuous Gaussian white noise random disturbance\nmoment\n\nTdist = ?d, E\n[\n?d (t) ?\n\nT\nd (t\n\n?)\n]\n= Sd \u00b7 ? (t? t?) . (2)\n\nand Tmag is a torque applied by the magneto-torquers\n\nTmag = d\u00d7B = TN + ?Tmag\nwhere B is Earth magnetic field and d is the magnetic dipole vector in the x-y-z\nbody frame.\n\nThe nominal angular velocity of the EUVE in the survey mission is\n\n?N =\n[\n?N 0 0\n\n]T\nand the nominal attitude dynamics are\n\n??N = 0 = J\n?1\n0 (TN ? [?N\u00d7]J0?N ) = J?10 TN .\n\nTherefore the nominal control torque TN is zero. The remaining perturbation\ndynamics are given by\n\n?? ? ? ? ?N (3)\n\n??? = J?10 (?Tmag + ?d ? [?\u00d7]J0?) (4)\nand the perturbing torque is\n\n?Tmag = (I ? [?act\u00d7]) ?u+ bact + ?act (5)\nwhere ?act is zero mean continuous Gaussian white noise with the variance\n\nE\n[\n?act (t) ?\n\nT\nact (t\n\n?)\n]\n= Sact \u00b7 ? (t? t?) , (6)\n\n?u is the desired control torque, and bact and ?act are the control bias and\nmisalignment, initially random and constant thereafter, i.e., b?act = ??act = 0.\nThe linearized attitude dynamics are then given by\n\n??? = J?10 ([J0?N\u00d7]? [?N\u00d7]J0) ?? + J?10 (?u+ bact + ?act + ?d) (7)\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 457\n\nand the attitude kinematics are governed according to the following differential\nequation[21]\n\nq?? =\n1\n\n2\nq? ? q?\n\nwhere q? is the attitude (unit) quaternion\n\nq? =\n\n[\nq0\nq\n\n]\n=\n\n[\ncos ?2\n\nsin ?2 \u00b7 n?\n]\n, q?? ? q? =\n\n[\n1\n0\n\n]\n(8)\n\nn? is the axis of rotation and q? is the angular velocity quaternion:\n\nq? =\n\n[\n0\n?\n\n]\n(9)\n\nThe linearized attitude kinematics are given by\n\n?? ? ? ? ?N = [??x, ??y, ??z]T (10)\n\n??? = ?? ? [?N\u00d7] ?? (11)\nwhere ?? is a small angle rotation from the nominal vehicle attitude to the\n\ntrue vehicle attitude.\n\n2.2 Star-Trackers Measurement Model\n\nThe EUVE is equipped with two star-trackers aligned with the body y-axis and\nz-axis, producing four measurements equivalent to the pixel locations of a single\nstar in each star-tracker focal plane plus random noise ?i. If the unit vectors to\na single star in each of the two star-tracker frames are denoted by sst1z and s\n\nst2\ny ,\n\nthe four star-tracker measurements are given by projections of the star-vectors\nonto the star-trackers focal planes plus random noise 2.\n\nz?1 = i\nT\nxst1\n\nsst1z + ?1 , z?2 = i\nT\nyst1\n\nsst1z + ?2\n\nz?3 = i\nT\nxst2\n\nsst2y + ?3 , z?4 = i\nT\nzst2\n\nsst2y + ?4\n\n(12)\n\nThe star-vector in the star-tracker coordinate frame can be related to the known\nstar location in the inertial frame via the transformation\n\nsst = Ts?t2stTB2s?tTB?2BTI2B?s\nI (13)\n\nTs?t2st is the transformation from the nominal star-tracker frame to the actual\ntracker frame\n\nTs?t2st ?= I ? [?\u00d7] (14)\n2 It is assumed that at any given time a known star is acquired in the boresight of\nboth trackers.\n\n\n\n458 N. Leiter and D.K. Geller\n\nwhere ? is a small unknown orthogonal tracker misalignment:\n\n? = [?x, ?y , ?z]\nT\n. (15)\n\nFor both star-trackers the nominal misalignment is zero and the misalignment\nis initially random and constant thereafter, i.e., ??1 = ??2 = 0.\n\nTB2s?t is a known constant transformation from the body frame to the nominal\nstar-tracker frame, TI2B? is a known transformation from the inertial frame to\nthe nominal body frame, and TB?2B is the transformation from nominal body\nframe to the actual body frame\n\nTB?2B\n?= I ? [??\u00d7] (16)\n\nThe linearized star-tracker measurement equations [2] are then given\n\n?z1 =\n([\n\nixst1\u00d7\n]\nsB?z\n\n)T\n?? +\n\n([\nixst1\u00d7\n\n]\nsB?z\n\n)T\n?1 + ?1 (17)\n\n?z2 =\n([\n\niyst1\u00d7\n]\nsB?z\n\n)T\n?? +\n\n([\niyst1\u00d7\n\n]\nsB?z\n\n)T\n?1 + ?2 (18)\n\n?z3 =\n([\n\nixst2\u00d7\n]\nsB?y\n\n)T\n?? +\n\n([\nixst2\u00d7\n\n]\nsB?y\n\n)T\n?2 + ?3 (19)\n\n?z4 =\n([\n\nizst2\u00d7\n]\nsB?y\n\n)T\n?? +\n\n([\nizst2\u00d7\n\n]\nsB?y\n\n)T\n?2 + ?4 (20)\n\nsB?z = TI2B?s\nI\n1 , s\n\nB?\ny = TI2B?s\n\nI\n2 (21)\n\nwhere sI1 and s\nI\n2 are the known locations of two stars in the field of view of\n\nthe z- and y-star-trackers, respectively.\n\n2.3 Gyro Measurement Model\n\nThe gyro measurement is given by:\n\n?? = (I ? [??\u00d7] + U (??))? (22)\nwhere ?? is a small orthogonal misalignment\n\n?? = [?x, ?y, ?z]\nT (23)\n\nand ?? is a small non-orthogonal misalignment:\n\n?? = [?x, ?y, ?z]\nT , U (??) =\n\n?\n?0 ?z ?y0 0 ?x\n0 0 0\n\n?\n? . (24)\n\nAdding bias, noise and scale factors produces\n\n?? = (I +D (f?)) (I ? [??\u00d7] + U (??))? + b? + ?? (25)\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 459\n\nwhere f? is the scale factor vector\n\nf? = [fx, fy, fz]\nT\n, D (f?) = diag (fx, fy, fz) (26)\n\nand ?? is zero mean continuous Gaussian white noise with the variance\n\nE\n[\n?? (t) ??\n\nT (t?)\n]\n= S? \u00b7 ? (t? t?) . (27)\n\nThe gyro bias is a random process driven by zero mean continuous Gaussian\nwhite noise\n\nb?? = ?b, E\n[\n?b (t) ?\n\nT\nb (t\n\n?)\n]\n= Sb \u00b7 ? (t? t?) . (28)\n\nAll misalignment and scale factors are initially random and constant thereafter\n\n??? = ??? = f?? = 0 (29)\n\nIf we define the measurement perturbation relative to the nominal state as\n\n??? ? ?? ? ?N (30)\nthe linearized gyro measurement equation is\n\n??? ?= ?? + b? + ?? +D (?N ) f? + [?N\u00d7] ?? +W (?N )?? (31)\nwhere\n\nD (?) ? diag (?) , W (?) ?\n?\n? 0 ?z ?y?z 0 0\n\n0 0 0\n\n?\n? (32)\n\n2.4 State Space Representation\n\nThe state space of the true perturbations from the nominal state is:\n\n?x ? x? xN =\n[\n??T ??T bTact ?\n\nT\nact b\n\nT\n? ?\n\nT\n? ?\n\nT\n? f\n\nT\n? ?\n\nT\n1 ?\n\nT\n2\n\n]T\n(33)\n\nThe linearized dynamics are given by\n\n?x? = A \u00b7 ?x+G \u00b7 ?u+B \u00b7 ? (34)\nwhere ? is continuous white process noise\n\n? =\n[\n?T? ?\n\nT\nb ?\n\nT\nact ?\n\nT\nd\n\n]T\n, E\n\n[\n? (t) ?T (t?)\n\n]\n= S? \u00b7 ? (t? t?) . (35)\n\nThe linearized star-tracker measurement equation is\n\n?z? = H \u00b7 ?x+ v (36)\nwhere the measurement noise is given by\n\nv = [?1, ?2, ?3, ?4]\nT\n, E [v (ti)v (tj)] = R \u00b7 ?ij . (37)\n\nand the linearized gyro measurement equation is\n\n??? = Hgyro \u00b7 ?x+ ??\nA, G, B, H and Hgyro are provided in the appendix.\n\n\n\n460 N. Leiter and D.K. Geller\n\n3 EUVE Navigation and Control Design\n\n3.1 Reduced Order Filter Algorithm\n\nThe filter design model assumes that the true misalignments, scale factors and\ncontrol bias are zero.\n\nbactf = ?actf = ??f = ??f = f?f = ?1f = ?2f = 0 (38)\n\nThus, the design model is a reduction of the full EUVE model with only 9 states,\n??f . ??f , and b?f . The dynamics of the linearized filter design model are\n\n???f ?= ??f ? [?N\u00d7] ??f (39)\n\n???f ?= J?10 ([J0?N\u00d7]? [?N\u00d7] J0) ??f + J?10\n(\n?u+ ?actf + ?df\n\n)\n(40)\n\nb??f = ?bf (41)\n\nwhere ??f ? ?f ? ?N , and ??f ? ?f ? ?N . The linearized star-tracker mea-\nsurement equations are\n\n?zf1 =\n([\n\nixst1\u00d7\n]\nsB?z\n\n)T\n??f + ?f1 , ?zf2 =\n\n([\niyst1\u00d7\n\n]\nsB?z\n\n)T\n??f + ?f2\n\n?zf3 =\n([\n\nixst2\u00d7\n]\nsB?y\n\n)T\n??f + ?f3 , ?zf4 =\n\n([\nizst2\u00d7\n\n]\nsB?y\n\n)T\n??f + ?f4\n\n(42)\n\nand the linearized gyro measurements are\n\n???f ? ??f ? ?N ?= ??f + b?f + ??f (43)\nA standard linearized Kalman filter algorithm can be developed to estimate\n\n???f , ???f , and b??f from the reduced order linearized dynamics in Eqs. 39-41\nand the linearized measurement equations in Eqs. 42-43; however, we postpone\nthe develop of the Kalman filter until later when model replacement [19] will be\nused to replace the rotational dynamics model with the gyro measurements.\n\n3.2 The Control Law\n\nFor this study, a simple continuous regulator is used for the attitude control\nlaw3.\n\n?u = ?K?\n(\n??f ? ?N\n\n)\n?K? (??f ? ?N ) = ?K????f ?K????f (44)\n\nwhere K? and K? are constant gain matrices derived from the controller fre-\nquency ?c, damping ratio ?, and vehicle inertia tensor J0:\n\nK? = ?\n2\nc \u00b7 J0 , K? = 2 \u00b7 ? \u00b7 ?c \u00b7 J0 (45)\n\n3 This is not the control method used for the actual EUVE mission.\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 461\n\n3.3 Reduced Order Filter Algorithm and Model Replacement\n\nWhen the uncertainties in the rotational dynamics model (Eq. 40) are significant\n(e.g., spacecraft inertia and external disturbances), it is often prudent to replace\nthe rotational dyanmics model with gyro data. In this situation, the dynamical\nmodel for the filter design becomes\n\n???f ?= ??f ? [?N\u00d7] ??f (46)\n\nb??f = ?bf (47)\n\nwhere\n??f = ???f ? b?f ? ??f (48)\n\nand the estimate of the spacecraft angular velocity is simply\n\n???f = ???f ? b??f (49)\nWhen this estimate for the angular velocity is substituted into the control law\n\nin Eq. 44, the desired control moment is slightly modified and becomes\n\n?u = ?K????f +K?b??f ?K????f (50)\nwhere ???f are the actual gyro measurements given by Eq. 31.\n\nUsing this model replacement, the state space and state dynamics for the filter\ndesign become\n\n?xf =\n[\n??Tf b\n\nT\n?f\n\n]T\n(51)\n\n?x?f = Af \u00b7 ?xf +G? \u00b7 ???f +Bf \u00b7 ?f (52)\nwhere Af , G?, and Bf are provided in the appendix, and ?f is zero mean con-\ntinuous white noise\n\n?f =\n\n[\n??f\n?bf\n\n]\n, E\n\n[\n?f (t) ?\n\nT\nf (t\n\n?)\n]\n= Sf \u00b7 ? (t? t?) (53)\n\nThe filter design model for the star-tracker measurements remains unchanged\nand repeated here for convenience\n\n?z?f = Hf \u00b7 ?xf + vf (54)\nwhere Hf is provided in the appendix, and vf is zero mean discrete white noise\n\nvf = [?1, ?2, ?3, ?4]\nT\n, E [vf (ti)vf (tj)] = Rf?ij (55)\n\nUsing this new design model, a Kalman filter algorithm can be developed.\nFirst, the state propagation equations are given by\n\n? ??xf = Af \u00b7 ?x?f +G? \u00b7 ??? (56)\n\n\n\n462 N. Leiter and D.K. Geller\n\nSince the estimated filter navigation error is given by\n\n??f ? x?f ? xf = ?x?f ? ?xf (57)\n\n???f = Af \u00b7 ??f ?Bf \u00b7 ?f (58)\nthe navigation error is expected to have zero mean and covariance given by\n\nPf = E\n[\n??f \u00b7 ??Tf\n\n]\n. (59)\n\nThus, the filter state error covariance propagation is given by\n\nP?f = AfPf + PfA\nT\nf +BfSfB\n\nT\nf (60)\n\nThe Kalman filter update equations for the post measurement state and co-\nvariance corrections are\n\nKf = PfH\nT\nf\n\n(\nHfPfH\n\nT\nf +Rf\n\n)?1\n(61)\n\n?x?+f = ?x?f +Kf (?z?? ?z?f ) (62)\n\nP+f = (I ?KfHf )Pf (I ?KfHf )T +KfRfKTf (63)\nwhere\n\n?z?f = Hf \u00b7 ?x?f (64)\nThis filter is no longer optimal because the covariance propagation and gain\n\ncalculation are now based on a reduced model [22] with model replacement [11].\nOne of the objectives of linear covariance analysis is to determine the effects of\nthese suboptimal schemes on the true navigation error. This will be measured\nby comparing the filter covariance Pf to the true covariance Ptrue of the true\nfilter state error\n\n?x?f ? x?f ?MxN (65)\nwhereM is a mapping from the entire true state to the true values of the reduced\nfilter states. M is also provided in the appendix.\n\n4 Linear Covariance Analysis\n\n4.1 EUVE Linear Covariance Model\n\nFor linear covariance analysis, the linearized navigation state vector ?x?f (65) is\nappended to the true state vector ?x (33) to form the augmented state vector\nX ? Rn+n?.\n\nX ?\n[\n?x\n?x?f\n\n]\n(66)\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 463\n\nThus we have ?x = MxX and ?x?f = MfX where Mx and Mf are appropriate\nmappings from the augmenented state to the true state and navigation state,\nrespectively. The dynamics for the augmented state vector are defined as\n\nX? = AX+ B? (67)\n\n? =\n[\n?T? ?\n\nT\nb ?\n\nT\nact ?\n\nT\nd\n\n]T\n(68)\n\nwhere\n\nA =\n[\nA+GGx GGf\n\nAfX Af\n\n]\n, B =\n\n[\nB +GBu\n\nBfX\n\n]\n(69)\n\nand where Gf , Gx, Bu, BfX and AfX are provided in the appendix. Note that\nbecause\n\nE [?x] = E [x? xN ] = 0 (70)\n\nE [?x?f ] = E [x?f ?MxN ] = 0 (71)\nthe mean of the augmented state vector is E [X] = 0 and the covariance of the\naugmented system can be calculated as\n\nCA = E\n[\nX (t)XT (t)\n\n]\n(72)\n\nThus, the entire closed-loop system is represented by the linear time-varying\ndifferential equation in Eq. (67). A variety of linear system analysis can now be\napplied to this system. For covariance analysis, the following propagation and\nupdate equations will be utilized:\n\nC?A = ACA + CAAT + BS?BT (73)\n\nC+A = (I +KH)CA (I +KH)T +KRfKT (74)\n\nK =\n[\n\n0\nKf\n\n]\n, H = [H ,?Hf ]\n\nThe initial conditions are defined as4:\n\nCA0 =\n\n[\nPdisp0 0Nx\u00d7Nf\n0Nf\u00d7Nx 0Nf\u00d7Nf\n\n]\n, Pdisp0 = E\n\n[\n?x0?x0\n\nT\n]\n\n4 The filter state is initiated with the state nominal values and zero variance.\n\n\n\n464 N. Leiter and D.K. Geller\n\n4.2 Performance Evaluation\n\nThe overall closed-loop performance of the GN&C system is evaluated by exam-\nining the covariance matrix of the augmented state with the appropriate linear\nmappings. The true state dispersions ?x = MxX are extracted from the aug-\nmented state covariance matrix as follows\n\nDtrue = E\n[\n?x (t) ?xT (t)\n\n]\n= MxCAM\n\nT\nx (75)\n\nThe covariance of the true state dispersion accounts for navigation errors,\nguidance/control execution errors, and all external disturbances/noise sources.\nIn a similar manner, the covariance matrix of the navigation state dispersion\n?x?f = MfX can be extracted from the augmented covariance matrix.\n\nDnav = E\n[\n?x?f (t) ?x?\n\nT\nf (t)\n\n]\n= MfCAM\n\nT\nf (76)\n\nSince the true filter estimation error is the difference between the navigation\nstate vector and the corresponding true state vector,\n\netrue ? x?f ?Mx = \u02c6?xf ?M?x = MtrueX (77)\nthe covariance matrix of the true filter estimation error is given by\n\nPtrue = E\n[\netruee\n\nT\ntrue\n\n]\n= MtrueCAM\n\nT\ntrue (78)\n\nwhere Mtrue = Mf ?MMx.\nFinally, the control effort can be determined by substituting Eqs. 49 and 31\n\ninto Eq. 44 to obtain, ?u = Mu \u00b7 ?X+Bu \u00b7?. The covariance of the control effort\nis then given by:\n\nPu = E\n[\n?u?uT\n\n]\n= MuCAMu\n\nT +BuS?B\nT\nu (79)\n\nwhere Mu = Gx \u00b7Mx +Gf \u00b7Mf .\n\n5 Results\n\n5.1 Setup\n\nThe nominal value of the initial true state is given by m0 with the only non-zero\nvalues being ?x (0) = ?0 and ??x (0) = ?N . The initial filter state is xf (0) =\nMm0. The initial covariance of the true state, Pdisp0 , is a 30 X 30 diagonal\nmatrix, and the initial navigation filter covariance is Pf0 = MPdisp0M\n\nT . Pdisp0\nis provided in the appendix. The power-spectral-density of the true model process\nnoise is\n\nS? =\n\n?\n???\nq? \u00b7 I3\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 qb \u00b7 I3\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 qact \u00b7 I3\u00d73 03\u00d73\n03\u00d73 03\u00d73 03\u00d73 qd \u00b7 I3\u00d73\n\n?\n???\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 465\n\nand the power-spectral density of the filter model process noise is:\n\nSf =\n\n[\nq? \u00b7 I3\u00d73 03\u00d73\n03\u00d73 qb \u00b7 I3\u00d73\n\n]\n\nThe variance of the measurement noise is\n\nR = Rf = ?\n2\nst \u00b7 I4\u00d74\n\nStar-tracker measurements are produced every 10 [sec]. All initial non-zero\nnominal values, initial uncertainties, process noise power-spectral densities and\nother system parameters are given in Table 1.\n\nTable 1. Setup Values\n\nSymbol Value Units Description\n\n?0 ?60 deg Initial nominal x-angle\n?N 0.2 deg/sec Nominal x-angular velocity\n\n?? 5 \u00b7 10?2 deg Initial attitude 1? ?\n?? 10\n\n?3 deg/sec Initial angular velocity 1? ?\n?bact 10\n\n?4 N \u00b7m Initial actuator bias 1? ?\n??act 1 arcsec Initial actuator misalignment 1? ?\n?b? 1 arcsec/sec Initial gyro bias 1? ?\n??? 8 arcsec Initial gyro (orthogonal) misalignment 1? ?\n??? 8 arcsec Initial gyro (non-orthogonal) misalignment 1? ?\n?f? 10\n\n?3 Initial gyro scale factor 1? ?\n?? 24 arcsec Initial star-tracker misalignment 1? ?\nq?\n\n(\n4.25 \u00b7 10?2)2 arcsec2/sec Gyro drift noise strength\n\nqb\n(\n4.44 \u00b7 10?5)2 arcsec2/sec3 Gyro bias noise strength\n\nqact 10\n?4 N2 \u00b7m2 \u00b7 sec Actuator noise strength\n\nqd 10\n?4 N2 \u00b7m2 \u00b7 sec Disturbance noise strength\n\n?st\n14\n\n3600\n?\n\n180\nrad Measurement noise 1? ?\n\n?c\n2?\n100\n\nrad\nsec\n\nController frequency\n\n?\n?\n2/2 Controller damping ratio\n\n5.2 Linear Covariance Results\n\nAttitude Navigation Errors. The linear covariance attitude navigation errors\nare examined in Fig.1. The ?x steady state filter 1? ? error is 2.9 [arcsec] while\nthe true navigation 1? ? error is 17.2 [arcsec]. The ?y and ?z steady-state filter\n1 ? ? error is 3.9 [arcsec] while the true navigation 1 ? ? error is 24.3 [arcsec].\nSince both star-trackers measure ?x and provide only one measurement of ?y\nand ?z each, there are effectively twice as many measurements of ?x. Thus the\nsteady-state errors for ?x are reduced by a factor of\n\n?\n2. In all cases, it is clear\n\nthat the suboptimal, reduced order filter is underestimating the true navigation\nerror.\n\n\n\n466 N. Leiter and D.K. Geller\n\n0 100 200 300 400 500 600\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nTime (sec)\n\n? ?\nx\n\n1?? Attitude Nav Errors (arcsec)\n\n0 100 200 300 400 500 600\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nTime (sec)\n\n? ?\ny ,\n\n ?\n? z\n\nFig. 1. Attitude navigation error based on linear covariance analysis. The dotted red\ncurve shows the filter 1? ? error, and the solid blue curve shows the true 1? ? error.\n\nA comparison of the above pitch angle navigation error variance ??y with Bar-\nItzhack and Harman\u2019s true covariance results is shown in Fig. 2. Although the\nBar-Itzhack and Harman\u2019s work included a fine sun sensor that was not included\nin this study, the results are remarkably similar.\n\nAttitude Dispersions. Although the above results for the attitude navigation\nerrors are important, the ultimate goal is to limit the attitude control system\npointing errors, i.e., the attitude dispersions from their desired nominal values.\nThe true and filter state 1 ? ? attitude dispersions are shown in Fig. 3. These\nresults should be compared to the 180 arcsec pointing accuracy requirement\nfor the all-sky survey. Since the attitude navigation errors are relatively small\ncompared to the pointing errors, it is concluded that the pointing errors are\nprimarily due to actuator errors and random disturbances.\n\nGyro Bias Errors. The variance of the gyro bias errors are examined in Fig.4.\nThe 1?? filter x-axis steady-state gyro bias estimation error is 0.01 [arcsec/sec],\nsignificantly less than the true 1 ? ? bias estimation error of 0.72 [arcsec/sec].\nThis is a consequence of the reduced filter state. Since the x-axis gyro scale-factor\nis not included in the filter design model, and since the spacecraft is rotating\nprimarily about the x-axis, the error in the gyro measurement produced by the\ntrue scale-factor, fx?N , incorrectly appears in the filter as an x-axis gyro bias.\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 467\n\n(a) Bar Itzhack\u2019s true covariance analysis results for the filter and true\n1? ? pitch error\n\n0 100 200 300 400 500 600\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n35\n\n40\n\n45\n\n50\n\nTime (sec)\n\nP\nitc\n\nh \nE\n\nrr\nor\n\n (\nar\n\ncs\nec\n\n)\n\n(b) The authors linear covariance analysis results for the filter and true\n1? ? error\n\nFig. 2. Pitch error comparison - true error (solid), filter error (dashed)\n\n\n\n468 N. Leiter and D.K. Geller\n\n0 100 200 300 400 500 600\n0\n\n50\n\n100\n\n150\n\n200\n\nTime (sec)\n\n? ?\nx\n\n1?? Attitude Dispersions (arcsec)\n\n0 100 200 300 400 500 600\n0\n\n50\n\n100\n\n150\n\n200\n\nTime (sec)\n\n? ?\ny ,\n\n ?\n? z\n\nFig. 3. True attitude dispersions. The dotted red curve shows the filter 1?? dispersion,\nand the solid blue curve shows the true 1? ? dispersion.\n\nThis dramatic difference is not seen in the true and filter steady-state y-axis and\nz-axis gyro errors.\n\nThe above pitch gyro drift estimation errors\n(\nb?y\n\n)\nare also in good agreement\n\nwith Bar-Itzhack and Harman\u2019s true covariance results.\n\nControl Effort and Magnetic Dipole Demand. The variance of the 1 ?\n? control effort is shown in Fig.5. After an initial transient, the steady-state\nvariance in each of the 3 axes is approximatety 0.0038 [N \u00b7m]. In this example,\nthe steady-state control effort is primarily in repsonse to actuator errors and\nrandom disturbances.\n\n5.3 Nonlinear Monte Carlo Analysis\n\nIn Monte Carlo analysis, the covariance of the true dispersion and error states\nare computed by simply generating N samples of each state as a function of\ntime, and then estimating the covariances as\n\nDtrue(t) ? 1\nN ? 1\n\nN?\ni=1\n\n?x(t)?xT (t) (80)\n\nDnav(t) ? 1\nN ? 1\n\nN?\ni=1\n\n?x?(t)?x?T (t) (81)\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 469\n\n0 100 200 300 400 500 600\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nb ?\nx\n\n1?? Gyro Bias (arcsec/sec)\n\n0 100 200 300 400 500 600\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nb ?\ny ,\n\n b\n?\n\nz\n\nFig. 4. Gyro drift estimation error based on linear covariance analysis. The dotted red\ncurve shows the filter 1? ? error, and the solid blue curve shows the true 1? ? error.\n\n0 100 200 300 400 500 600\n3.5\n\n3.6\n\n3.7\n\n3.8\n\n3.9\n\n4\n\n4.1\n\n4.2\n\n4.3\n\n4.4\n\nx 10\n?3\n\nTime (sec)\n\nC\non\n\ntr\nol\n\n E\nffo\n\nrt\n [N\n\n?\nm\n\n]\n\n \n\n \n?\n\nu\nx\n\n?\nu\n\ny\n\n?\nu\n\nz\n\nFig. 5. 3-axis 1? ? control effort\n\n\n\n470 N. Leiter and D.K. Geller\n\nPtrue(t) ? 1\nN ? 1\n\nN?\ni=1\n\n?e(t)?eT (t) (82)\n\nFor this application, the Monte Carlo simulation consisted of the nonlinear\ndynamics given in Eq. 1 , the nonlinear gyro and star-tracker measurements given\nby Eq.12 and 25, an extended Kalman filter with the same reduced filter state\nand model replacement, and a PD control law based on the estimated attitude\nquaternion and the estimated angular rate with gyro bias compensation.\n\nThe initial conditions for the simulation were generated by sampling the Gaus-\nsian probability density function given by\n\nx0 ? N (m0, Pdisp0 )\nN = 1000 Monte Carlo runs were performed and system performance was eval-\nuated using Eq. 80, 81 and 82. The Monte Carlo results were then used to verify\nthe linear covariance analysis results.\n\nThe x-axis true navigation errors of 10 Monte Carlo runs with the 3 ? ?\nenvelope (of the 1000 runs) are illustrated in Fig.6, as well as the comparison with\nthe linear covariance results. The x-axis true estimation error as determined by\nthe linear covariance analysis matches the Monte Carlo results with a maximum\ndeviation ?max = 5.23 [arcsec], where ?max is the maximum difference between\nthe Monte Carlo and linear covariance 1? ? data.\n\nThe x-axis true dispersions of 10 Monte Carlo runs with a 3? ? envelope are\nexamined in Fig.7. The x-axis true dispersions from the linear covariance analysis\nmatch the Monte Carlo results with a maximum deviation ?max = 7.88 [arcsec]\n\nThe x-axis control effort dispsersion for 10 Monte Carlo runs and the 3? ?\nlinear covariance data are illustrated in Fig.7. The 1? ? x-axis control effort\ndetermined by the linear covariance analysis matches the 1? ? Monte Carlo\nresults with a maximum deviation ?max = 1.1 \u00b7 10?3 [N \u00b7m]\n\n5.4 Sensitivity Analysis\n\nLinear covariance analysis also provides the capabilty to quickly examine the\nsensitivity of the system performance to initial errors, measurement noise, and\nprocess noise. This analysis enables a system designer to focus on the most\nsignificant error sources. To do this, the covariance matrix of the augmented\nstate is presented as a sum of these three contributions\n\nCA = C0 + CQ + CR (83)\n\nThe sensitivity dynamics can then be obtained from Eq. 73\n\nC?0 = AC0 + C0AT (84)\n\nC?R = ACR + CRAT (85)\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 471\n\n0 100 200 300 400 500 600\n?100\n\n?50\n\n0\n\n50\n\n100\n\n? x\n N\n\nav\n E\n\nrr\nor\n\n [a\nrc\n\nse\nc]\n\nsec\n\n0 100 200 300 400 500 600\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n1?\n? \n\n[a\nrc\n\nse\nc]\n\nsec\n\n \n\n \n\n?\nmax\n\n= 5.23 [arcsec]\n\nLinCov\nMC\n\nFig. 6. True attitude estimation errors. Monte Carlo results with 3?? statistics (blue)\nare shown in the top figure. A comparison of the 1?? Monte Carlo results to the 1??\nlinear covariance analysis results is shown in the bottom figure.\n\n0 100 200 300 400 500 600\n?1000\n\n?500\n\n0\n\n500\n\n1000\n\n? x\n D\n\nis\npe\n\nrs\nio\n\nn \n[a\n\nrc\nse\n\nc]\n\nsec\n\n0 100 200 300 400 500 600\n120\n\n140\n\n160\n\n180\n\n200\n\n1?\n? \n\n[a\nrc\n\nse\nc]\n\nsec\n\n \n\n \n\n?\nmax\n\n= 7.88 [arcsec]\n\nLinCov\nMC\n\nFig. 7. True attitude dispersions. Monte Carlo results with 3 ? ? statistics (blue) are\nshown in the top figure. A comparison of the 1 ? ? Monte Carlo results to the 1 ? ?\nlinear covariance analysis results is shown in the bottom figure.\n\n\n\n472 N. Leiter and D.K. Geller\n\n0 100 200 300 400 500 600\n?0.02\n\n?0.01\n\n0\n\n0.01\n\n0.02\n\nC\non\n\ntr\nol\n\n E\nffo\n\nrt\n [N\n\n?\nm\n\n]\n\nsec\n\n0 100 200 300 400 500 600\n0\n\n2\n\n4\n\n6\nx 10\n\n?3\n\n1?\n? \n\n[N\n?\n\nm\n]\n\nsec\n\n \n\n \n\n?\nmax\n\n= 1.1e?003 [N?m]\n\nLinCov\nMC\n\nFig. 8. Control effort dispersion. Monte Carlo results with 3 ? ? statistics (blue) are\nshown in the top figure. A comparison of the 1 ? ? Monte Carlo results to the 1 ? ?\nlinear covariance analysis results is shown in the bottom figure.\n\nC?Q = ACQ + CQAT + BS?BT (86)\nand the updated sensitivity equations are obtained from Eq. 74\n\nC+0 = (I +KH)C0 (I +KH)T (87)\n\nC+R = (I +KH)CR (I +KH)T +KRfKT (88)\n\nC+Q = (I +KH)CQ (I +KH)T (89)\nFig. 9 shows how each source of error contributes to the true x-axis atti-\n\ntude estimation error. In this case, the initial errors are the main contribu-\ntion to the x-axis attitude estimation error. This is a consequence of the initial\nstar-tracker misalignment (24 [arcsec]) being unobservable. Since there are two\ntracker measurements of ?x, the steady-state error due to tracker misalignment\nis 24 [arcsec] /\n\n?\n2, or approximately 17 [arcsec].\n\nFig. 10 shows how each source of error contributes to the x-axis pointing\ndispersion. In this case, the initial errors and the process noise (actuator errors\nand disurbances) are the main contributions to the x-axis pointing dispersion.\n\nSimilar sensitivity results can be obtained for any performance indicator that\ncan be extracted from the augmented state.\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 473\n\n0 100 200 300 400 500 600\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\nTime (sec)\n\nar\ncs\n\nec\n\n \n\n \nTotal\nInitial\nMeasurement\nProcess\n\nFig. 9. True x-axis 1? ? attitude estimation error sensitivity analysis\n\n0 100 200 300 400 500 600\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n120\n\n140\n\n160\n\n180\n\n200\n\nTime (sec)\n\nar\ncs\n\nec\n\n \n\n \nTotal\nInitial\nMeasurement\nProcess\n\nFig. 10. x-axis 1? ? pointing dispersion sensitivity analysis\n\n\n\n474 N. Leiter and D.K. Geller\n\n6 Conclusions\n\nIt has been shown using nonlinear Monte Carlo analysis that Bar Itzhack and\nHarman\u2019s application of true covariance analysis [2] for estimating the true navi-\ngation errors of a reduced order filter with model replacement produces accurate\nresults and can thus be used for preliminary attitude filter design. An extension\nof Bar Itzhack and Harman\u2019s true covariance analysis approach using an aug-\nmented state to include true state dispersions, i.e., attitude control and pointing\nerrors, was also implemented. The variances of the true attitude and angular\nvelocity disperison errors based on the extended linear covariance analysis was\nvalidated using nonlinear Monte Carlo analysis showing that linear covariance\nanalysis can be a useful tool in preliminary attitude determination and control\nsystem design. It was also demonstrated that the extended covariance analysis\ncan provide useful system design sensitivity analysis.\n\nAcknowledgments. This research was conducted with support and funding\nfrom the Lady Davis Fellowship Trust and the Asher Space Research Fund.\n\nReferences\n\n1. Ambrosius, B.A.C., Hesper, E.T., Wakker, K.F.: Application of global position-\ning system for hermes rendezvous navigation. Journal of Guidance, Control, and\nDynamics 16(1), 197\u2013205 (1993)\n\n2. Bar-Itzhack, I.Y., Harmann, R.R.: Covariance simulation of the euve update filter.\nIn: Flight Mechanics/Estimation Theory Symposium, pp. 225\u2013237. NASAGoddard\nSpace Flight Center, Greenbelt (1989)\n\n3. Battin, R.H.: An Introduction to the Mathematics and Methods of Astrodynamics.\nAIAA Education Series. AIAA, New York (1987)\n\n4. Carpenter, J.R., Markley, F.L.: Generalized linear covariance analysis. In: AAS/\nAIAA F. Landis Markley Astrodynamics Symposium AAS 08-273. NASA Goddard\nSpace Flight Center, Cambridge (2008)\n\n5. Crassidis, J.L., Junkins, J.L.: Optimal Estimation of Dynamic Systems. Chapman\nand Hall CRC, New York (2004)\n\n6. Edwards, R.M.: Gravity model performance in inertial navigation. Journal of Guid-\nance, Control, and Dynamics 5(1), 73\u201378 (1986)\n\n7. Euler, E.A.: Orbit determination covariance analysis for the cassini solstice mission.\nIn: AIAA-2010-8264, AIAA/AAS Astrodynamics Specialist Conference, Toronto,\nOntario, August 2-5. NASA Goddard Space Flight Center (2010)\n\n8. Gelb, A.: M.I.T. Press, Cambridge (1974)\n\n9. Geller, D.K.: Linear covariance techniques for orbital rendezvous analysis and au-\ntonomous onboard mission planning. Journal of Guidance, Control, and Dynam-\nics 29(6) (November 2006)\n\n10. Ha, J.C.V.D.: Attitude determination covariance analysis for geostationary transfer\norbits. Journal of Guidance, Control, and Dynamics 9(2), 156\u2013163 (1986)\n\n11. Haessig, D.: Separate-bias estimation with reduced-order Kalman filters. Auto-\nmatic Control. IEEE (1998)\n\n\n\nLinear Covariance Techniques for Closed-Loop Attitude Determination 475\n\n12. Ionasescu, R.: Orbit determination covariance analysis for the cassini solstice\nmission. In: AIAA-2010-8264, AIAA/AAS Astrodynamics Specialist Conference,\nToronto, Ontario, August 2-5. NASA Goddard Space Flight Center (2010)\n\n13. Jekili, C.: Precision free-inertial navigation with gravity compensation by an on-\nboard gradiometer. Journal of Guidance, Control, and Dynamics 29(3), 73\u201378\n(2006)\n\n14. Kreigsman, B.A., Mahar, K.B.: Gravity model errors in mobile inertial-navigation\nsystems. Journal of Guidance, Control, and Dynamics 9(3), 312\u2013318 (1986)\n\n15. Markley, F.L., Seidewitz, E., Nicholson, M.: A general model for the attitude\ndetermination error analysis. In: NASA Conference Publication 3011: Flight Me-\nchanics/Estimation Theory Symposium. NASA Goddard Space Flight Center,\nGreenbelt (1988)\n\n16. Maybeck, P.S.: Stochastic Models, Estimation, and Control, vol. 1. Navtech Book\nand Software Store, New York (1994)\n\n17. Moesser, T., Geller, D., Robinson, S.: Guidance and navigation linear covariance\nanalysis for lunar powered descent. AAS Paper 11-532 (August 2011)\n\n18. Park, R., Chodas, P., Roundhill, I.: Covariance analysis of cassini titan flyby using\nsar and altimetry data. In: AIAA-2006-6398, AIAA/AAS Astrodynamics Specialist\nConference and Exhibit, Keystone, Colorado, August 21-24. NASA Goddard Space\nFlight Center (2006)\n\n19. Pittelkau, M.E.: Rotation vector in attitude estimation. Journal of Guidance, Con-\ntrol, and Dynamics 26(6), 855\u2013860 (2003)\n\n20. Rose, T., Geller, D.: Linear covariance techniques for powered ascent. AIAA-2010-\n8175 (August 2010)\n\n21. Shuster, M.: A survey of attitude representations. Navigation (1993)\n22. Simon, D.: Reduced Order Kalman Filtering Without Model Reduction. Control\n\nand Intelligent Systems 35(2), 1\u201316 (2007)\n23. Stastny, N.B., Bettinger, R.A., Chavez, F.R.: Lincov analysis of an automated\n\ncelectial inertial navigation approach for geo satellites. In: AIAA 2008-6756,\nAIAA/AAS Astrodynamics Specialists Conference, Honolulu Hawaii, pp. 184\u2013196.\nAIAA (2008)\n\n24. Tabley, B.D., Schutz, B.E., Born, G.E.: Statistical Orbit Determination, pp. 387\u2013\n435. Elsevier Academic Press, London (2004)\n\n25. Woffinden, D.C.: Angles-Only Navigation for Autonomous Orbital Redezvous. Dis-\nsertation, Utah Sate University (December 2008),\nhttp://digitalcommons.usu.edu/etd/12/\n\n26. Wong, E.C.: Attitude Control System for the Extreme Ultrqviolet Explorer Satel-\nlite. The Journal of the Astronautical Sciences 33(4), 401\u2013415 (1985)\n\n27. Woodbury, D., Junkins, J.: On the consider kalman filter. In: AIAA-2010-7752,\nAIAA Guidance, Navigation, and Control Conference, Toronto, Ontario, August\n2-5. AIAA (2010)\n\nhttp://digitalcommons.usu.edu/etd/12/\n\n\n476 N. Leiter and D.K. Geller\n\nAppendix - Matrices\n\nA =\n\n?\n?? [?N\u00d7] I3\u00d73 03\u00d73 03\u00d73 03\u00d71803\u00d73 A? J?10 03\u00d73 03\u00d718\n\n024\u00d73 024\u00d73 024\u00d73 024\u00d73 024\u00d718\n\n?\n?\n\nA? = J\n?1\n0 [J0?N\u00d7]? J?10 [?N\u00d7]J0\n\nG =\n\n?\n? 03\u00d73J?10\n024\u00d73\n\n?\n? , B =\n\n?\n?????\n\n03\u00d73 03\u00d73 03\u00d73 03\u00d73\n03\u00d73 03\u00d73 J?10 J\n\n?1\n0\n\n06\u00d73 06\u00d73 06\u00d73 06\u00d73\n03\u00d73 I3\u00d73 03\u00d73 03\u00d73\n015\u00d73 015\u00d73 015\u00d73 015\u00d73\n\n?\n?????\n\nH =\n\n?\n???\n\n[\nixST1\u00d7\n\n]\nsB?z\n\n[\niyST1\u00d7\n\n]\nsB?z\n\n[\nixST2\u00d7\n\n]\nsB?y\n\n[\nizST2\u00d7\n\n]\nsB?y\n\n021\u00d71 021\u00d71 021\u00d71 021\u00d71[\nixST1\u00d7\n\n]\nsB?z\n\n[\niyST1\u00d7\n\n]\nsB?z 03\u00d71 03\u00d71\n\n03\u00d71 03\u00d71\n[\nixST2\u00d7\n\n]\nsB?y\n\n[\nizST2\u00d7\n\n]\nsB?y\n\n?\n???\n\nT\n\nAf =\n\n[? [?N\u00d7] ?I3\u00d73\n03\u00d73 03\u00d73\n\n]\n, G? =\n\n[\nI3\u00d73\n03\u00d73\n\n]\n, Bf =\n\n[?I3\u00d73 O3\u00d73\nO3\u00d73 I3\u00d73\n\n]\n\nHf =\n\n[ [\nixST1\u00d7\n\n]\nsB?z\n\n[\niyST1\u00d7\n\n]\nsB?z\n\n[\nixST2\u00d7\n\n]\nsB?y\n\n[\nizST2\u00d7\n\n]\nsB?y\n\n03\u00d71 03\u00d71 03\u00d71 03\u00d71\n\n]T\n\nGx =\n[\n03\u00d73 ?K? 03\u00d76 ?K? ?K? [?N\u00d7] ?K?W (?N ) ?K?D (?N ) 03\u00d76\n\n]\n\nGf =\n[?K? K? ] Bu = [?K? 03\u00d79 ] BfX =\n\n[\nI3\u00d73 03\u00d79\n03\u00d73 03\u00d79\n\n]\n\nAfX =\n\n[\n03\u00d73 I3\u00d73 03\u00d76 I3\u00d73 [?N\u00d7] W (?N ) D (?N ) 03\u00d76\n03\u00d73 03\u00d73 03\u00d76 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d76\n\n]\n\nMx =\n[\nINx\u00d7Nx 0Nx\u00d7Nf\n\n]\n, Mf =\n\n[\nONx\u00d7Nf INf\u00d7Nf\n\n]\n\nM =\n\n[\nI3\u00d73 03\u00d79 03\u00d73 03\u00d715\n03\u00d73 03\u00d79 I3\u00d73 03\u00d715\n\n]\n\nPdisp0 =\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n?2?I3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d76\n03\u00d73 ?2?I3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d76\n03\u00d73 03\u00d73 ?2bact I3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d76\n03\u00d73 03\u00d73 03\u00d73 ?2?act I3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d76\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 ?2b? I3\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d76\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 ?2?? I3\u00d73 03\u00d73 03\u00d73 03\u00d76\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 ?2?? I3\u00d73 03\u00d73 03\u00d76\n03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 03\u00d73 ?2f? I3\u00d73 03\u00d76\n06\u00d73 06\u00d73 06\u00d73 06\u00d73 06\u00d73 06\u00d73 06\u00d73 06\u00d73 ?2?I6\u00d76\n\n?\n\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n\n\n\nReaction Wheel Parameter Identification and\n\nControl through Receding Horizon-Based Null\nMotion Excitation\n\nAvishai Weiss1, Frederick Leve2, Ilya V. Kolmanovsky1, and Moriba Jah2\n\n1 University of Michigan, Ann Arbor, MI, USA\n{avishai,ilya}@umich.edu\n\n2 Space Vehicles Directorate, Kirtland Air Force Base, NM, USA\nAFRL.RVSV@kirtland.af.mil\n\nAbstract. Additional actuator motion, constrained to the null-space of\nthe Reaction Wheel Array (RWA) of an over-actuated spacecraft, can\nbe exploited for learning system parameters without inducing large per-\nturbations to the controlled body (e.g., spacecraft bus). In this paper\na receding horizon optimization approach is developed to generate such\na null-motion excitation (NME) that facilitates the identification of the\nactuator misalignments with perturbations that are local to the nominal\ntrajectory and decreasing with the decrease in size of the parameter es-\ntimation error. The receding horizon approach minimizes an objective\nfunction that penalizes the parameter error covariance and the null-\nmotion excitation. The potential of the receding horizon approach to\noutperform the baseline null motion excitation algorithm proposed in an\nearlier publication is demonstrated through simulations.\n\nKeywords: Receding Horizon Control, Null-Motion, Null-Space,\nParameter Identification, Reaction Wheel Assembly.\n\n1 Introduction\n\nThe on-orbit estimation of spacecraft parameters, such as Reaction Wheel Array\n(RWA) alignments, can reduce assembly, integration, and test (AI&T) time and\nefforts necessary with detailed ground-based system identification of spacecraft.\nDue to a possible loss of communications, or other operational constraints, it\nmay not be possible to apply an arbitrary tumble to a satellite for system iden-\ntification. In these situations, the conditions required by many existing adaptive\ncontrol and estimation techniques (see [1], [2], [3], [4], [5], [6], [7], [8], [9], [10]\nand references therein) to achieve both asymptotic tracking and asymptotic pa-\nrameter identification may not be satisfied.\n\nAn approach to enhance on-board parameter identification via null motion\nexcitation (NME) has been first proposed in [11]. In [11], an overactuated space-\ncraft with an RWA is considered, and it is shown that the spacecraft actuators\ncan be coordinated in such a way that the convergence of estimates of param-\neters characterizing RWA alignments is enhanced, while the disturbance to the\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 477\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_25\n\n\n\n478 A. Weiss et al.\n\nnominal spacecraft attitude maneuver is minimized. In other words, it is demon-\nstrated that information about parameters can be gained by adding NME to a\nnominal forced trajectory relative to the case of the forced trajectory by itself\n(i.e., passive system identification case). A local gradient approach was used in\n[11] to optimize the NME.\n\nIn this paper, a receding horizon optimization is exploited to generate the\nNME. At each time instant, the NME sequence is optimized over a finite predic-\ntion horizon to minimize a cost functional that penalizes the predicted parameter\nerror covariance and the NME excitation. The first element of the optimized se-\nquence is applied to the spacecraft. The optimization is repeated at the next time\ninstant using the updated error covariance matrix as an initial condition. The\nproposed approach can be viewed as an on-board Design of Experiments (DoE)\nprocedure, used to enhance persistence of excitation conditions without causing\nlarge disturbances. It is related to our earlier work on receding horizon opti-\nmization for simultaneous tracking and parameter identification in automotive\nsystems [12,13].\n\nThe receding horizon approach of this paper is compared to the local gradient\napproach of [11], and it is shown that the potential for faster convergence exists\nat the price of higher computational cost. The differences between the receding\nhorizon approach proposed in this paper and the local gradient method of [11]\nare in the minimization of a cost function that penalizes the total covariance\n(i.e., parameter and measurement) matrix over the prediction horizon of Nc\nsteps ahead while the approach in [11] corresponds to minimizing the parameter\nerror estimated only one step ahead and by assuming perfect measurements.\n\nFig. 1. Four skewed RWA arrangement\n\n2 Spacecraft Dynamics Model\n\nWe consider a rigid spacecraft bus actuated by a Reaction Wheel Array (RWA)\nconsisting of four axially symmetric flywheels with negligible friction. See Fig-\nure 1. The total angular momentum of the spacecraft relative to its center of\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 479\n\nmass with respect to an inertial frame FE and resolved in a bus-fixed principal\nframe FB is given by\n\n?\n\nHsc/c/E\n\n????\nB\n= J? + h, (1)\n\nwhere J is the spacecraft inertia matrix resolved in FB, ? is the angular velocity\nof FB with respect to FE, resolved in FB, and h is the angular momentum of\nthe RWA resolved in FB. We assume zero external torque, and thus, the total\nangular momentum is conserved.\n\nThe inertial time derivative of (1) yields\n\nE\u2022\n?\n\nH sc/c/E\n\n??????\nB\n\n= J?? + ?\u00d7J? + h?+ ?\u00d7h = 0, (2)\n\nwhere ?\u00d7 is the skew-symmetric matrix representing the cross-product, and\n\nh? =\n?h\n\n??\n?? = J?(?)??, (3)\n\nwhere J?(?) is the Jacobian matrix, which is a function of actuator alignments\nparameterized by a vector ?, and ? = [?1 ?2 ?3 ?4]\n\nT ? R4 is a column vector of\nfour flywheel rates.\n\nFollowing [11], we re-parameterize h is terms of components of RWA alignment\nunit vectors as\n\nh = Y1(?)?, (4)\n\nwhere\nY1 = Iw\n\n[\n?1I3 ?2I3 ?3I3 ?4I4\n\n]\n,\n\nI3 denotes the 3\u00d7 3 identity matrix, and where ? ? R12 is the parameter vector\nto be identified.\n\nThe NME approach is based on augmenting an excitation signal n(t) ? R4 to\nthe nominal RWA control signal, D(t) ? R4, so that\n\n?? = D(t)? ? (??(t))n(t), (5)\nwhere I4 denotes the 4\u00d74 identity matrix, ? (??(t)) =\n\n(\nI4 ? J??(??)J?(??)\n\n)\n, and J??\n\nis the pseudo-inverse of J?, J?(??)J\n?\n?(??) = I3. Note that the implementation of\n\n(5) is based on estimated alignments, ??, with the motivation that if ?? = ?, then\n?? = D(t) and the effects of NME signal are zeroed out. Thus the overactuation\ncapability of a 4 flywheel RWA system can be used to enhance the parameter\nidentifiability. The computation of the excitation signal n(t) is discussed in the\nnext section.\n\n3 Receding Horizon Optimization of the Null Motion\nExcitation\n\nA discrete-time receding horizon approach is used for the optimization of NME\nsignal n(t) in (5). We use the notation a(t+k|t) to denote the predicted value of\n\n\n\n480 A. Weiss et al.\n\na variable a at the discrete time instant t+k when the prediction is made at the\ndiscrete time instant t. Using this notation, and based on (5), the discrete-time\nupdate equations for the flywheel rates have the form\n\n?(t+ k + 1|t) = ?(t+ k|t) +D(t)?T ? ? (??(t))n(t + k|t)?T, (6)\n\nwhere ?T is the sampling period, ??(t) ? R12 is the vector of the estimated\nreaction wheel alignment parameters, and n ? R4 is the null motion excitation\nsignal that we determine through the receding horizon optimization.\n\nWith the motivation of simplifying the optimization problem, and with the\njustification that the nominal control law and adaptation are sufficiently slow, we\ndo not predict D and the parameter estimate changes over the horizon, thereby\nassuming D(t + k|t) = D(t) and that ??(t + k|t) = ??(t). Thus, in our approach,\nthe term\n\n? (??(t)) =\n(\nI ? J??(??)J?(??)\n\n)\n,\n\nremains constant over the prediction horizon.\nThe optimization of the NME sequence is performed over a receding horizon\n\nof length Nc so that n(t+ k|t), k = 0, 1, \u00b7 \u00b7 \u00b7 , Nc minimizes a cost functional of\nthe form\n\nJ =\n\nNc?\nk=0\n\n[\ntrace(P (t+ k|t)) + ? \u00b7 nT(t+ k|t)n(t+ k|t)]. (7)\n\nIn (7), P denotes the parameter error covariance matrix and ? is a weight pe-\nnalizing the size of NME. Once the sequence is computed, the first element of it,\nn(t) = n(t|t) is applied as an excitation and the process is repeated at the next\ntime instant, t+ 1.\n\nBy combining (1) and (4), one obtains a linear regression model for identifying\nthe parameter vector ?,\n\ny = Y1(?)? + \t,\n\ny =\n?\n\nHsc/c/E\n\n????\nB\n? J?, (8)\n\nwhere\n?\n\nHsc/c/E\n\n????\nB\n? J? represents the measurement, with the added measure-\n\nment noise, \t. The assumption of y being a measured signal is reasonable given\nthat ? is measured, J is known, the spacecraft orientation is measured and the\n\ntotal angular momentum vector\n?\n\nHsc/c/E is conserved and is known at the initial\ntime1. It should be noted that because both noise processes are assumed to be\nGaussian zero mean, the addition of Gaussian variables associated with the RWA\nencoder and gyro noises is also a Gaussian random variable. It is assumed that\nall flywheel and gyro biases are removed separately from the attitude determi-\nnation system. It should also be noted that the addition of two measurements\n\n1 In case\n?\n\nHsc/c/E is unknown at the initial time, it can be estimated along with ? using\nthe approach developed in this paper.\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 481\n\ndoes not make use of the measurement covariance optimally in the Kalman filter\n(i.e., the difference in accuracy of the two different sets of measurements is not\nexploited). Differencing of the measurements rather than considering separately\nwas done to reduce the computation of the measurement covariance from a 7\u00d77\nmatrix to a 3\u00d7 3.\n\nTo compute P (t + k|t) in (7), we use Recursive Least Squares (RLS)-based\nprediction of the parameter error covariance matrix, based on the equations\n\nK(t+ k|t) =\nP (t+ k ? 1|t)Y1(t+ k|t)T \u00d7\n\n(\nY1(t+ k|t)P (t+ k ? 1|t)Y1(t+ k|t)T +R\n\n)?1\n,\n\nP (t+ k|t) =\n(I12 ?K(t+ k|t)Y1(t+ k|t))P (t+ k ? 1|t)\u00d7 (I12 ?K(t+ k|t)Y1(t+ k|t))T\n\n+K(t+ k|t)RK(t+ k|t)T,\n(9)\n\nwhere I12 denotes the 12 \u00d7 12 identity matrix and R = E[\t(k)\t(k)T] is the\nmeasurement noise covariance matrix. Note that Joseph\u2019s form of the a poste-\nriori error covariance matrix update is used in (9) due to its better numerical\nconditioning properties.\n\nIn [11] a gradient type algorithm is used to update the parameter estimates.\nHere, for consistency with the RLS approach, updates of the form\n\n??(t+ 1) = ??(t) +K(t+ 1|t)(y(t+ 1)? Y1(?(t+ 1))??(t)), (10)\n\nare employed to extract parameter estimates.\n\n4 Simulation Setup\n\nSimulations are now presented to demonstrate the improved performance of\nthe new receding horizon solution for the NME. The four flywheel RWA to be\nsimulated has a non-orthogonal skew arrangement shown in Figure 1.\n\nThe spacecraft and simulated maneuver parameters are\n\nJ = diag(10, 20, 60) [kgm2],\nIw = 0.001 [kgm\n\n2],\n?(0) = [0 0 0 0]T [rad/sec],\n?(0) = [0 0 0]T [rad/sec],\n\nD(t) = [0 sin(0.05t+ ?2 ) sin(0.01t+\n?\n4 ) 0]\n\nT [rad/sec].\n\nNote that based on the initial conditions of the simulation,\n?\n\nHsc/c/E\n\n????\nB\n= 0.\n\nThe initial parameter estimates and true RWA alignment parameters are given,\nrespectively, by\n\n\n\n482 A. Weiss et al.\n\n??(0) =\n\n?\n???????????????????\n\n0.7121\n0.0928\n0.6959\n0.0928\n0.7121\n0.6959\n0.6845\n0.7290\n\n0\n0.9916\n0.1292\n\n0\n\n?\n???????????????????\n\n, ? =\n\n?\n???????????????????\n\n0.7037\n0.0693\n0.7071\n0.0693\n0.7037\n0.7071\n0.9952\n0.0980\n\n0\n0\n\n?0.7071\n0.7071\n\n?\n???????????????????\n\n. (11)\n\nThe initial parameter error covariance matrix is assumed to be of the form,\n\nP (0|0) = 1\n3\nI12,\n\nwhere I12 is the 12\u00d712 identity matrix. The covariance of the measurement noise\n\t in (8) has been estimated assuming 0.0005 rad/sec independent error standard\ndeviations in measuring the components of the angular velocity vector ?, and 2\nrad/sec independent error standard deviations in measuring the components of\n? so that\n\nR = 10?3 \u00d7 diag(0.0290, 0.1040, 0.9040).\n\n4.1 Case 1: Baseline Adaptation Algorithm with no NME\n\nThe first case to be simulated is the baseline adaptation algorithm of reference\n[11] which is specified, in continuous-time as,\n\n??\n? = ?Y1(?)\n\nT [?J? ? Y1(?)??], (12)\n\nand where we choose ? = 10I12. In this case, there is no excitation in the null-\nspace, and n(t) = 0.\n\nResults. The angular velocity of the spacecraft and RWA flywheel rates are\nshown in Figures 2 and 3. The parameter error, shown in Figure 4, does not\nconverge to zero. This is because the forced trajectory followed by the spacecraft\ndoes not ensure persistency of excitation. The angular momentum error of the\nspacecraft-RWA array system in Figure 5 asymptotically approaches zero.\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 483\n\n0 1000 2000 3000 4000 5000\n?20\n\n?15\n\n?10\n\n?5\n\n0\n\n5\nx 10\n\n?3\n\nTime (sec)\n\n?\n\nFig. 2. The time histories of the spacecraft angular velocity components with an adap-\ntation algorithm (12) and no NME\n\n0 1000 2000 3000 4000 5000\n?50\n\n0\n\n50\n\n100\n\n150\n\n200\n\nTime (sec)\n\n?\n\nFig. 3. The time histories of the RWA flywheel rates with an adaptation algorithm\n(12) and no NME\n\n\n\n484 A. Weiss et al.\n\n0 1000 2000 3000 4000 5000\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\n?\n?\n\n??\n\nFig. 4. The time histories of the parameter estimation errors with an adaptation algo-\nrithm (12) and no NME\n\n0 1000 2000 3000 4000 5000\n?0.03\n\n?0.02\n\n?0.01\n\n0\n\n0.01\n\nTime (sec)\n\nh\n?\nh?\n\nFig. 5. The time history of the angular momentum error with an adaptation algorithm\n(12) and no NME\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 485\n\n4.2 Case 2: Baseline Adaptation Algorithm and Local\nGradient-Based NME Solution\n\nFollowing [11], the local gradient-based NME signal is now augmented to enhance\nexcitation and facilitate parameter identification. The parameters are estimated\nby (12), and NME signal, n(t), is generated in the direction of the gradient with\nrespect to ?(t) of the objective function\n\nf =\n\n3na?\ni=1\n\n3na?\nj=1\n\nqTi (t)qj(t), (13)\n\nwhere na = 4 is the number of RWA actuators, and qi(t) and qj(t) are, respec-\ntively, the ith and jth columns of the matrix\n\nQ(t) =\n\n(\nY T1 (t)Y1(t) +\n\nNb?1?\ni=1\n\nY T1 (t? i)Y1(t? i)\n)\n. (14)\n\nHere Nb designates the past time window over which Q(t) is computed, and\nY1(t) depends on ?(t). The NME from this algorithm adds excitation to the\nsystem along the trajectory thereby providing more information and making it\npossible to identify the parameters of the system without considerably degrading\ncommanded torque tracking performance. The objective function in (13) differs\nfrom that of the proposed receding horizon approach. Specifically, (13) does not\nexploit prediction and minimization with respect to an NME sequence defined\nover the multi-step prediction horizon. Furthermore, (13) assumes perfect mea-\nsurements and does not penalize explicitly null space actuation.\n\nResults. The angular velocity of the spacecraft and RWA flywheel rates are\nshown in Figures 6 and 7. The parameter error using this method is shown in\nFigure 8. Note that unlike the case without NME, the parameter error converges\nto zero, however, it has not converged sufficiently over the time interval of 5000\nsec. The angular momentum error converges with oscillations at the steady state\nas shown in Figure 9. The flywheel actuation is shown in Figures 7 and the\nadditional null motion added is shown in Figure 10. More details and discussion\nof the convergence of the parameters and the trajectory can be found in reference\n[11].\n\n\n\n486 A. Weiss et al.\n\n0 1000 2000 3000 4000 5000\n?0.02\n\n?0.015\n\n?0.01\n\n?0.005\n\n0\n\n0.005\n\n0.01\n\nTime (sec)\n\n?\n\nFig. 6. The time histories of the spacecraft angular velocity components with the\nbaseline NME algorithm and adaptation algorithm given by (12)\n\n0 1000 2000 3000 4000 5000\n?100\n\n?50\n\n0\n\n50\n\n100\n\n150\n\nTime (sec)\n\n?\n\nFig. 7. The time histories of the RWA rates with the baseline NME algorithm and\nadaptation algorithm given by (12)\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 487\n\n0 1000 2000 3000 4000 5000\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\n?\n?\n\n??\n\nFig. 8. The time histories of the parameter estimation errors with the baseline NME\nalgorithm and adaptation algorithm given by (12)\n\n0 1000 2000 3000 4000 5000\n?0.03\n\n?0.02\n\n?0.01\n\n0\n\n0.01\n\n0.02\n\n0.03\n\nTime (sec)\n\nh\n?\nh?\n\nFig. 9. The time history of the angular momentum error with the baseline NME algo-\nrithm and adaptation algorithm given by (12)\n\n\n\n488 A. Weiss et al.\n\n0 1000 2000 3000 4000 5000\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\nn\n\nFig. 10. The time history of the excitation signal n with the baseline NME algorithm\nand adaptation algorithm given by (12)\n\n4.3 Case 3: RLS Adaptation Algorithm and Receding Horizon\nNME Solution\n\nThe final case in simulation is that of the NME solution found from a receding\nhorizon optimization. Given that the method of choosing NME here is local\nbut based off a larger than a single time-step horizon and that its objective\nfunction balances the NME actuation and error covariance, we expect that the\nreceding horizon approach may perform superior to the local-gradient method\nin Section 4.2. Note also that in the receding horizon case, the noise in the\nmeasurements is accounted for in the covariance prediction.\n\nResults. To ensure that the excitation is maintained over time, the weight ?\nin (7) is made time-varying and decreased at a linear rate to a constant value.\nSee Figure 11. See also reference [13] for additional remarks. We set ?T = 1\nsec and we use the horizon Nc = 10 in (7). While shorter horizons can reduce\nthe computational time and effort, for the assumed levels of measurement noise\nshorter horizons produce slower parameter error convergence.\n\nThe angular velocity of the spacecraft and RWA flywheel rates are shown in\nFigures 12 and 13. The parameter error for the receding horizon method of NME\nexhibits faster parameter error convergence over 5000 sec time interval versus the\nlocal gradient approach, compare Figures 14 and 8. In addition, the angular mo-\nmentum error is smaller than with the local-gradient method, compare Figures\n15 and 9. Finally, the additional actuation is an order of magnitude less with\nthe receding horizon approach than with the local gradient method, which is\nevident by comparing the null motion added in Figure 16 and Figure 10. Figure\n17 demonstrates that the error covariance matrix is decreasing through plotting\nof the maximum 1-? bounds on the covariance matrix. We emphasize that these\nresults are not due to the difference between the parameter update laws (10)\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 489\n\nand (12); For instance, by setting n(t) = 0 and executing (10), the parameter\nestimates do not converge to zero, as shown in Figure 18.\n\nEven though the results are dependent on the choices of each algorithm pa-\nrameters, they do indicate that the receding horizon approach has a potential\nto induce null motion excitation that facilitates fast parameter adaptation and\nsmaller perturbations to the spacecraft albeit at a higher computational cost.\n\nThe analysis of observability has been left out in this paper. For a detailed\ntreatment of the observability of redundant/over-actuated systems see reference\n[14].\n\n0 1000 2000 3000 4000 5000\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nTime (sec)\n\n?\n\nFig. 11. The time history of the weight ?\n\n0 1000 2000 3000 4000 5000\n?20\n\n?15\n\n?10\n\n?5\n\n0\n\n5\nx 10\n\n?3\n\nTime (sec)\n\n?\n\nFig. 12. The time histories of the spacecraft angular velocity components with the\nreceding horizon NME algorithm\n\n\n\n490 A. Weiss et al.\n\n0 1000 2000 3000 4000 5000\n?50\n\n0\n\n50\n\n100\n\n150\n\n200\n\nTime (sec)\n\n?\n\nFig. 13. The time histories of the RWA rates with the receding horizon NME algorithm\n\n0 1000 2000 3000 4000 5000\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\n?\n?\n\n??\n\nFig. 14. The time histories of the parameter estimation errors with the receding horizon\nNME algorithm\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 491\n\n0 1000 2000 3000 4000 5000\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\nx 10\n\n?3\n\nTime (sec)\n\nh\n?\nh?\n\nFig. 15. The time history of the angular momentum error with the receding horizon\nNME algorithm\n\n0 1000 2000 3000 4000 5000\n?0.2\n\n?0.1\n\n0\n\n0.1\n\n0.2\n\nTime (sec)\n\nn\n\nFig. 16. The time history of the signal n with the receding horizon NME algorithm\n\n\n\n492 A. Weiss et al.\n\n0 1000 2000 3000 4000 5000\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\n1?\n\nFig. 17. The time history of the maximum 1? standard deviation with the receding\nhorizon NME algorithm\n\n0 1000 2000 3000 4000 5000\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\n?\n?\n\n??\n\nFig. 18. The time histories of the parameter estimation errors without NME algorithm\n\n\n\nRWA Identification and Control via Receding Horizon-Based NME 493\n\n5 Conclusion\n\nThe Null Motion Excitation (NME) takes advantage of the spacecraft actua-\ntion redundancy (over-actuation) to provide excitation for parameter estimation\nwhile minimizing the disturbance to the nominal spacecraft maneuver. A spe-\ncific approach to NME is proposed in this paper. This approach is based on\nthe receding horizon optimization of the excitation input to minimize the pre-\ndicted estimation error covariance. Simulation results for the case of identifying\nalignments in the Reaction Wheel Assembly demonstrate that the receding hori-\nzon approach ensures faster parameter convergence versus zero excitation case,\nand that it has a potential to outperform a previously proposed algorithm in\n[11], albeit at a higher on-board computational cost. We note that the proposed\napproach may be viewed a variant of Design of Experiments (DoE) technique\nwherein nominal control signals are augmented with bounded excitation signals\nthat improve parameter identifiability while satisfying the imposed constraints\nand minimizing the impact on the nominal spacecraft motion. The receding\nhorizon framework is beneficial as it facilitates re-optimizing the excitation tra-\njectory every time the error covariance matrix estimate and parameter estimates\nare updated from the actual measurements. Our simulation results for the case\nof a spacecraft actuated by a reaction wheel array demonstrate clearly that the\napproach is effective even though the current parameter estimates are used in\ndetermining the null space and in minimizing the spacecraft disturbance. While\nwe consider the application of this null motion excitation strategy over finite\nintervals of time only, we note that more general receding horizon controllers\ncan be applied over an infinite time interval and can incorporate the penalty\non tracking error in addition to the estimation error in the cost function. The\nanalysis of closed-loop properties of such \u2019dual adaptive\u2019 controllers is beyond\nthe scope of the present paper and is left to future research.\n\nSeveral assumptions were made to simplify the treatment of the problem,\nthat will be relaxed in future publications. Various enhancements will be pur-\nsued. In particular, an approach which uses a Gaussian sum in place of the pre-\ndicted covariance for an objective function will be investigated. This is needed for\naccommodating certain sensors such as electro-optical sensors for which the mea-\nsurement noise has a Poisson rather than a Gaussian distribution. Other devel-\nopments will be concerned with applying this type of solution that incorporates\nNME to a slew of different problems (e.g., CMG gimbal axis alignments). In\naddition, future work will compare the energy, power, and time associated with\nseparate identification maneuvers versus that of this approach.\n\nAcknowledgments. The authors gratefully acknowledge the contribution from\nthe Air Force Office of Scientific Research under the lab task (LRIR11RV15COR)\nto support this research.\n\n\n\n494 A. Weiss et al.\n\nReferences\n\n1. MacKunis, W., Dupree, K., Fitz-Coy, N., Dixon, W.: Adaptive satellite attitude\ncontrol in the presence of inertia and CMG gimbal friction uncertainties. Journal\nof the Astronautical Sciences 56(1), 121\u2013134 (2008)\n\n2. Dixon, W.: Nonlinear control of engineering systems: A Lyapunov-based approach.\nBirkhauser (2003)\n\n3. Mercker, T., Akella, M.: Onboard adaptive compensation for large-scale misalign-\nments in responsive space systems. In: AAS Guidance and Control Conference,\nBreckenridge, Co. (2010)\n\n4. Ahmed, J., Coppola, V., Bernstein, D.: Asymptotic tracking of spacecraft atti-\ntude motion with inertia matrix identification. In: Proceedings of the 36th IEEE\nConference on Decision and Control, vol. 3, pp. 2471\u20132476. IEEE (2002)\n\n5. Chaturvedi, N., Bernstein, D., Ahmed, J., Bacconi, F., McClamroch, N.: Globally\nconvergent adaptive tracking of angular velocity and inertia identification for a 3-\nDOF rigid body. IEEE Transactions on Control Systems Technology 14(5), 841\u2013853\n(2006)\n\n6. Ma, O., Dang, H., Pham, K.: On-Orbit Identification of Inertia Properties of Space-\ncraft Using a Robotic Arm. Journal of Guidance, Control, and Dynamics 31(6)\n(2008)\n\n7. Chakrabortty, A., Arcak, M., Tsiotras, P.: Robust design of a spacecraft attitude\ntracking control system with actuator uncertainties. In: 47th IEEE Conference on\nDecision and Control, CDC 2008, pp. 1587\u20131592. IEEE (2009)\n\n8. Costic, B., Dawson, D., De Queiroz, M., Kapila, V.: A quaternion-based adaptive\nattitude tracking controller without velocity measurements. In: Proceedings of the\n39th IEEE Conference on Decision and Control, vol. 3, pp. 2424\u20132429. IEEE (2002)\n\n9. Astrom, K., Wittenmark, B.: Adaptive control. Addison-Wesley Longman Publish-\ning Co., Inc., Boston (1994)\n\n10. Sastry, S., Bodson, M.: Adaptive control: stability, convergence, and robustness\n(1989)\n\n11. Leve, F., Jah, M.: Spacecraft actuator alignment determination through null mo-\ntion excitation. In: Proceedings of 62nd International Astronautical Congress\n(2011)\n\n12. Kolmanovsky, I., Winstead, V.: A receding horizon optimal control approach to\nactive state and parameter estimation in automotive systems. In: Proceedings of\n2006 IEEE Conference on Control Applications, pp. 2796\u20132801. IEEE (2006)\n\n13. Kolmanovsky, I., Filev, D.P.: Optimal finite and receding horizon control for iden-\ntification in automotive systems. In: Alberer, D., Hjalmarsson, H., del Re, L. (eds.)\nIdentification for Automotive Systems. LNCIS, vol. 418, pp. 327\u2013348. Springer,\nHeidelberg (2012)\n\n14. Pittelkau, M.E.: Calibration and attitude determination with redundant inertial\nmeasurement units. Journal of Guidance, Control, and Dynamics 28(4), 743\u2013752\n(2005)\n\n\n\nSpacecraft Constrained Maneuver Planning\n\nUsing Positively Invariant Constraint\nAdmissible Sets\n\nAvishai Weiss1, Christopher Petersen1, Morgan Baldwin2,\nRichard Scott Erwin2, and Ilya V. Kolmanovsky1\n\n1 University of Michigan, Ann Arbor, MI, USA\n{avishai,cdpete,ilya}@umich.edu\n\n2 Space Vehicles Directorate, Kirtland Air Force Base, NM, USA\nAFRL.RVSV@kirtland.af.mil\n\nAbstract. The paper considers spacecraft motion planning based on\nthe use of safe positively invariant sets. In this approach, a connectivity\ngraph is constructed between a set of forced equilibria, forming a virtual\nnet that is centered around a nominal orbital position. The connectivity\nbetween two equilibria is determined based on safe positively invariant\nsets in order to guarantee that transitions between equilibria can be\neffected while spacecraft actuator limits are adhered to and debris colli-\nsions are avoided. A graph search algorithm is implemented to find the\nshortest path around the debris. Simulation results are presented that\nillustrate this approach.\n\n1 Introduction\n\nOrbital debris is a growing problem, with about 40% of ground-trackable ob-\njects originating from explosions that now number approximately 5 per year [1].\nSpacecraft maneuver planning procedures thus have to address debris avoidance\nrequirements. While obstacle avoidance is a standard problem in robotics [2,3],\nthe related spacecraft problems have several unique features. In particular, the\nspace environment is relatively uncluttered, thus permitting for a variety of ma-\nneuvers. Spacecraft dynamics are quite different from those of typical robots.\nManeuver efficiency with respect to time and fuel consumption is a critical con-\nsideration. The states of the spacecraft and the debris can only be estimated,\noften with a significant estimation error. Finally, computational algorithms must\nbe fast and optimized given moving objects and the limited computing power on-\nboard most spacecraft. These unique features of spacecraft maneuver planning\nproblems provide the motivation for the development of specialized algorithms.\n\nIn [4], we have introduced an on-board maneuver planning approach based on\nthe use of constraint-admissible positively invariant sets to determine connectiv-\nity between a set of forced and unforced spacecraft equilibria forming a virtual\nnet in the vicinity of the spacecraft. Two equilibria are connected if a choice\nof a Linear Quadratic (LQ) feedback gain can be made that results in a tran-\nsition between the equilibria which avoids the debris collision and satisfies the\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 495\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_26\n\n\n\n496 A. Weiss et al.\n\nlimits on thrust. The connectivity graph for all the equilibria in the net is con-\nstructed and real-time graph search algorithms are used to optimize maneuver\ntime or fuel consumption while avoiding debris collisions. While safe positively\ninvariant sets around both forced and unforced equilibria are used in maneuver\nconstruction, we note that the spacecraft does not spend any finite amount of\ntime at selected forced equilibria, and that the switch to the next set-point in\nthe sequence occurs immediately once appropriate conditions are satisfied. We\nalso note that fuel consumption or maneuver time optimization is performed at\nthe graph search stage.\n\nUnlike the open-loop trajectory optimization approaches, we do not rely on\nprecise assignment of spacecraft position to the time instants along the trajec-\ntory, but instead switch to the next set-point and controller gain once appropriate\nconditions are satisfied. While this approach is conservative, it facilitates fault-\ntolerant and disturbance-tolerant execution of the maneuvers. Furthermore, by\nusing disturbance-invariant sets [5] in the construction, we can assure robustness\nto unmeasured (but set-bounded) disturbances and uncertainties. This extension\nto handling unmeasured disturbances and uncertainties using techniques of [5]\nis not pursued here but will be reported elsewhere.\n\nTo facilitate the on-board computations of the connectivity graph, a fast\ngrowth distance computation procedure between two ellipsoidal sets has been\nproposed in [4]. In this approach, using the Karush-Kuhn-Tucker conditions,\nthe growth distance computations are reduced to a root finding problem for\nthe scalar value of the Lagrange multiplier. Then a predictor-corrector dynamic\nNewton-Raphson algorithm is used to update the Lagrange multiplier thereby\nrapidly estimating the growth distance from different equilibria in the virtual\nnet to the debris.\n\nIn this paper, we incorporate limited thrust requirements into the computation\nof thrust limit on the growth distance, and we simulate maneuvers that adhere\nto the limited thrust constraints. Even though the computation of thrust limits\non the growth distance can be performed offline for the nominal operating con-\nditions, fast computational procedures are beneficial in case of thruster failures,\ndegradations, and restrictions on thrust directions (e.g., caused by the presence\nof other spacecraft nearby), all of which can lead to changing constraints on\nthrust during spacecraft missions. We show that in the case of polyhedral norm\nbounds on thrust the problem of finding thrust limit on growth distance is easily\nand explicitly solvable.\n\nThe related literature on spacecraft trajectory optimization with obsta-\ncle/debris avoidance is surveyed in [4]. Previous research addresses topics in\nspacecraft trajectory optimization [6], collision avoidance strategies based on\nrisk assessment [7], the use of artificial potential functions [8,9], and the use of\nconventional and mixed integer linear programming techniques [10,11,12,13].\n\nThe paper is organized as follows. In Sections 2-6, we develop and introduce\nthe relative motion model, the virtual net, an LQ controller with gain switching,\npositively invariant sets, and debris representation. In Section 7, we build upon\nthese concepts with growth distances and connectivity graphs in order to develop\n\n\n\nSpacecraft Constrained Maneuver Planning 497\n\nthe static debris avoidance approach. Section 8 addresses cost matrices. Finally,\nSection 9 presents simulations that illustrate these approaches for avoiding both\nstatic and moving debris. The moving debris case is handled by covering its path\nin the relative frame by a union of a finite number of static debris. Concluding\nremarks are made in Section 10.\n\n2 Relative Motion Model\n\nThe spacecraft relative motion model presents spacecraft dynamics in the (non-\ninertial) Hill\u2019s frame, where the origin is a target location on a nominal circular\norbit.\n\n2.1 Nonlinear Equations of Motion\n\nThe relative position vector of the spacecraft with respect to a target location\non an orbit is expressed as\n\n?\n?\nr = xi?+ yj? + zk?,\n\nwhere x, y and z are the components of the position vector of the spacecraft\nrelative to the target location and i?, j?, k? are the unit vectors of the Hill\u2019s frame.\nThe Hill\u2019s frame has its x-axis along the orbital radius, y-axis orthogonal to the\nx-axis and in the orbital plane, and z-axis orthogonal to orbital plane.\n\nThe position vector of the spacecraft with respect to the center of the Earth\n\nis given by\n?\n\nR =\n?\n\nR0 + ?\n?\nr , where\n\n?\n\nR0 is the nominal orbital position vector. The\nnonlinear equation of motion for the spacecraft (relative to an inertial frame) is\ngiven by\n\n??\n\nR = ??\n?\n\nR\n\nR3\n+\n\n1\n\nmc\n\n?\n\nF , (1)\n\nwhere\n?\n\nF is the vector of external forces applied to the spacecraft, R = |\n?\n\nR|, mc\nis the mass of the spacecraft, and ? is the gravitational constant.\n\n2.2 Linearized CWH Equations\n\nFor ?r ? R, the linearized Clohessy-Wiltshire-Hill (CWH) equations [14] ap-\nproximate the relative motion of the spacecraft on a circular orbit as\n\nx?? 3n2x? 2ny? = Fx\nmc\n\n,\n\ny? + 2nx? =\nFy\nmc\n\n,\n\nz? + n2z =\nFz\nmc\n\n,\n\n(2)\n\nwhere Fx, Fy, Fz are components of the external force vector (excluding gravity)\n\nacting on the spacecraft, n =\n?\n\n?\nR30\n\ndenotes the mean motion of the nominal\n\n\n\n498 A. Weiss et al.\n\norbit, and R0 is the nominal orbital radius. The linearized dynamics account for\ndifferences in gravity between the spacecraft and nominal orbital location, and\nfor relative motion effects.\n\nThe spacecraft relative motion dynamics in the orbital plane (x and y) and in\nthe out-of-orbital plane (z) are decoupled. The in-plane dynamics are Lyapunov\nunstable (2 eigenvalues at the origin and 2 eigenvalues on the imaginary axis at\n\u00b1nj), while the out-of-plane dynamics are Lyapunov stable (2 eigenvalues on\nthe imaginary axis at \u00b1nj). The in-plane dynamics are completely controllable\nfrom Fy input but are not controllable from Fx input. The out-of-plane dynamics\nare controllable from Fz input. These dynamics are clearly different from typical\nground robots.\n\nAssuming a sampling period of ?T sec, we can convert the model (2) to a\ndiscrete-time form\n\nX(t+ 1) = AX(t) +BU(t), (3)\n\nwhere X(t) = [x(t), y(t), z(t), x?(t), y?(t), z?(t)]T is the state vector at the\ntime instant t ? Z+, U(t) = [Fx(t), Fy(t), Fz(t)]T is the control vector\nof thrust forces at the time instant t ? Z+, and A = exp(Ac?T ), B =??T\n0\n\nexp(Ac(?T ? ?))d?Bc are the discretized matrices obtained based on the\ncontinuous-time system realization (Ac, Bc) in (2).\n\n3 Virtual Net\n\nThe virtual net comprises a finite set of equilibria, Xe(r), corresponding to a\nfinite set of prescribed spacecraft relative positions r ? N = {r1, r2, . . . , rn} ?\nR3 and constant control inputs,\n\nXe(rk) =\n[\nrk 0\n\n]T\n=\n\n[\nrx,k ry,k rz,k 0 0 0\n\n]T\n, k = 1, \u00b7 \u00b7 \u00b7 , n. (4)\n\nNote that for the equilibria in the virtual net velocity states are zero, and n is\nthe number of equilibria in the virtual net. See Figure 1. We assume that for all\nr ? N , the corresponding values of control necessary to support the specified\nequilibria in steady-state satisfy the imposed thrust limits.\n\n4 LQ Controller with Gain Switching\n\nA conventional Linear-Quadratic (LQ) feedback\n\nU = K(X ?Xe(r)) + ?r = KX +H(K)r, (5)\n\ncan control the spacecraft thrust to arrive at a commanded equilibrium (4),\nwhere\n\n? =\n\n?\n??3n\n\n2mc 0 0\n0 0 0\n0 0 n2mc\n\n?\n? ,\n\n\n\nSpacecraft Constrained Maneuver Planning 499\n\nDebris\n\nFig. 1. The virtual net for debris avoidance. Dots correspond to positions rk, k =\n1, . . . , n, at equilibria, Xe(r), on a virtual net. The ellipsoid represents the debris po-\nsition and uncertainty.\n\nH(K) = ? ?K\n[\nI3\n03\n\n]\n,\n\nand where I3 denotes the 3\u00d7 3 identity matrix while 03 denotes the 3 \u00d7 3 zero\nmatrix. The LQ controller provides an asymptotically stable closed-loop system\nbut does not enforce debris avoidance constraints.\n\nTo provide greater flexibility in handling constraints, a multimode controller\narchitecture is employed [15]. Specifically, we assume that a finite set of LQ gains\nK ? K = {K1, \u00b7 \u00b7 \u00b7 ,Km} is available to control the spacecraft. By using a large\ncontrol weight in the LQ cost functional, motions with low fuel consumption\nyet large excursions can be generated; using a large control weight in the LQ\ncost, motions with short transition time can be generated [16]. We assume that\na preference ordering has been defined and the gains are arranged in the order of\ndescending preference, from K1 being the highest preference gain to Km being\nthe lowest preference gain.\n\n5 Positively Invariant Sets\n\nThe ellipsoidal set\n\nC?(r,K) = {X ? R6 : 1\n2\n(X ?Xe(r))TP (K)(X ?Xe(r)) ? 1} ? R6, (6)\n\nwhere\n\nA?(K)TPA?(K)? P < 0, (7)\n\nA?(K) = (A + BK), and P = P (K) > 0 is positively invariant for the closed-\nloop dynamics. Positive invariance implies that any trajectory of the closed-loop\nsystem that starts in C?(r,K) is guaranteed to stay in C?(r,K) as long as the\nsame LQ gain K is used and the set-point command r is maintained. To achieve\nthe positive invariance, the matrix P can be obtained as the solution of the\n\n\n\n500 A. Weiss et al.\n\ndiscrete-time Riccati equation in the LQ problem or as the solution of the above\nLyapunov equation for the closed-loop asymptotically stable system. We note\nthat, because the system is linear, the positive invariance of C?(r,K) implies the\npositive invariance of the scaled set\n\nC(r,K, ?) = {X ? R6 : 1\n2\n(X ?Xe(r))TP (K)(X ?Xe(r)) ? ?2}, ? ? 0.\n\nGeometrically, the set C(r,K, ?) corresponds to an ellipsoid scaled by the value\nof ? and centered around Xe(r), r ? N .\n\n6 Debris Representation\n\nWe use a set, O(z,Q), centered around the position z ? R3, to over-bound the\nposition of the debris, i.e.,\n\nO(z,Q) = {X ? R6 : (SX ? z)TQ(SX ? z) ? 1}, (8)\n\nwhere Q = QT > 0 and\n\nS =\n\n?\n?1 0 0 0 0 00 1 0 0 0 0\n0 0 1 0 0 0\n\n?\n? . (9)\n\nThe set O(z,Q) can account for the debris and spacecraft physical sizes and also\nfor the uncertainties in the estimation of the debris/spacecraft position. Note\nthat the set O(z,Q) has an ellipsoidal shape in the position directions and it\nis unbounded in the velocity directions. Ellipsoidal sets, rather than polyhedral\nsets, are used here to over-bound the debris, since ellipsoidal bounds are typically\nproduced by position estimation algorithms, such as the Extended Kalman Filter\n(EKF).\n\n7 Debris Avoidance Approach\n\nConsider now ri ? N , representing a possible position on the net that the space-\ncraft can move to as a part of the debris avoidance maneuver. Suppose that the\ncurrent state of the spacecraft is X(t0) at the time instant t0 ? Z+. If there\nexists a ? ? 0 and Kj ? K such that\n\nX(t0) ? C(ri,Kj, ?) and O(z,Q) ? C(ri,Kj , ?) = ?, (10)\n\nthe spacecraft can move to the position ri ? N by engaging the control law\nwith r(t) = ri and K(t) = Kj , t ? t0, and without hitting the debris confined\nto O(z,Q). This idea underlies our subsequent approach to debris avoidance,\nwhere we maintain the spacecraft within a tube formed by positively invariant\nsets that do not intersect with debris.\n\n\n\nSpacecraft Constrained Maneuver Planning 501\n\nTo avoid a non-stationary debris, its path can be covered by a union of a finite\nnumber of ellipsoidal sets,\n\nD =\nl=nd?\nl=1\n\nO(zl, Ql), (11)\n\nwhere the center of the lth set is denoted by zl ? R3, and the lth set shape is\ndefined by Ql = Q\n\nT\nl > 0. Then, the debris avoidance condition for the closed-\n\nloop trajectory that emanates from X(0) with the set-point ri and gain Kj is\ngiven by\n\nX(0) ? C(ri,Kj , ?) and O(zl, Ql) ? C(ri,Kj , ?) = ?, for all l = 1, \u00b7 \u00b7 \u00b7 , nd.\n(12)\n\nThe same approach, with larger nd, can be used to handlemultiple non-stationary\ndebris. Note, however, that this approach is conservative as it does not account\nfor the debris progressions along their paths versus time. It is appropriate for\ndebris moving at high relative velocity. The case of debris moving at a low relative\nvelocity will be considered in other publications.\n\n7.1 Growth Distances\n\nThe minimum value of ? ? 0 for which O(z,Q)?C(r,K, ?) \t= ? is referred to\nas the growth distance [17]. This growth distance can also be viewed as the least\nupper bound on the values of ? for which O(z,Q) and C(r,K, ?) do not intersect.\nSee Figure 2. We use the notation ?g(r,K,Q, z) to reflect the dependence of the\ngrowth distance on the set-point r ? N , the control gain K ? K and the obstacle\nparameters Q and z.\n\nNote that the growth distance depends on the position of the debris which\nmay be unknown in advance. Consequently, growth distance computations have\nto be performed online.\n\nSince spacecraft have limited thrust, we additionally define a maximum value\nof ? = ?u(r,K) for which X ? C(r,K, ?u(r,K)) implies that the thrust U =\nKX + H(K)r satisfies the imposed thrust limits. We refer to ?u as the thrust\nlimit on growth distance. Unlike ?g, the value of ?u does not depend on the\nposition or shape of the debris and can be pre-computed off-line.\n\nFinally, we define the thrust limited growth distance\n\n??(r,K,Q, z) = min{?g(r,K,Q, z), ?u(r,K)}. (13)\nNote that X(t0) ? C(ri,Kj, ??(ri,Kj, Q, z)) implies that the ensuing closed-loop\nspacecraft trajectory under the control (5), where r(t) = ri and K(t) = Kj for\nt ? t0, satisfies the thrust limits and avoids collisions with a debris confined to\nO(z,Q).\n\nThe above definitions were given for the case of a single stationary debris,\nO(z,Q). In the case of multiple debris, the growth distance is replaced by\nthe multi-growth distance, which is the minimum growth distance to each of\nO(zl, Ql), l = 1, \u00b7 \u00b7 \u00b7 , nd.\n\n\n\n502 A. Weiss et al.\n\nDebris\n\nz\n\nO(z,Q)\n\nri\n\nS C(ri ,K,???x\n\nS?\n\nFig. 2. The positively invariant set is grown till touching the debris. The spacecraft\ncan move from any of the equilibria on the virtual net inside the positively invariant\nset C(r,K, ?) to Xe(ri) marked by \u2019x\u2019 without colliding with the debris.\n\n7.2 Growth Distance Computations\n\nDefine X? = X ? Xe(r) and ? = 2?2. The problem of determining the growth\ndistance ?g(r,K,Q, z), reduces to the constrained optimization problem\n\nmin\n?,X?\n\n?\n\nsubject to X?TPX? ? ?\n((S(X? +Xe(r)) ? z)TQ((S(X? +Xe(r)) ? z) ? 1,\n\n(14)\n\nwhere we find the minimum size invariant ellipsoid that shares a common point\nwith the debris. To solve this optimization problem, we use the Karush-Kuhn-\nTucker (KKT) conditions [18,19]. Note that standard linear independence con-\nstraint qualification conditions hold given that P > 0. We define\n\nL = ?+ ?1(X?TPX? ? ?) + ?2((S(X? +Xe(r)) ? z)TQ(S(X? +Xe(r)) ? z)? 1),\nwhere ?1 and ?2 are Lagrange multipliers. The stationarity of the Lagrangian\n(setting partial derivative equal to zero) with respect to ? yields ?1 = 1. The\nstationarity of the Lagrangian with respect to X? yields\n\nX? = X?(?2, r, z) = ?(P + ?2STQS)?1STQ(SXe(r) ? z)?2, (15)\nwhere the scalar ?2 ? 0 is to be determined. Note that P > 0, STQS ? 0, ?2 ? 0\n(as the Lagrange multiplier corresponding to an inequality constraint) imply that\n(P +?2S\n\nTQS) is invertible. The problem reduces to finding a nonnegative scalar\n?2, which is the root of\n\nF (?2, r, z) = (SX ? z)TQ(SX ? z)? 1 = 0, (16)\nwhere\n\nX = X?(?2, r, z) +Xe(r).\n\n\n\nSpacecraft Constrained Maneuver Planning 503\n\nThe scalar root finding problem (16) has to be solved online multiple times\nfor different r ? N , and in the case of avoiding a predicted debris path also for\ndifferent z\u2019s. To solve this problem fast, while reusing previously found solutions\nas approximations, a dynamic Newton-Raphson\u2019s algorithm is used [20,19,21].\nThis algorithm uses predictor-corrector updates to track the root as a function\nof z and r, and is given by\n\n?k+1,+2 = ?\nk\n2 + {\n\n?F\n\n??2\n(?k2 , z\n\nk, rk)}?1{?F (?k2 , zk, rk)?\n?F\n\n?z\n(?k2 , z\n\nk, rk)(zk+1 ? zk)\n\n? ?F\n?r\n\n(?k2 , z\nk, rk)(rk+1 ? rk)},\n\n?k+12 = max{0, ?k+1,+2 }.\n\nTo implement the algorithm, we take advantage of the known functional form\nfor F and explicitly compute the partial derivatives,\n\n?X?\n\n??2\n= (P + ?2S\n\nTQS)?1\n{?STQ(SXe(r) ? z)? STQSX?} ,\n\n?F\n\n??2\n= 2(SX ? z)TQ(S ?X?\n\n??2\n),\n\n?X?\n\n?r\n= (P + ?2S\n\nTQS)?1\n{?STQS?}?2,\n\n?F\n\n?r\n= 2(SX? ? z + r)TQ(S ?X?\n\n?r\n+ I3),\n\n?X?\n\n?z\n= (P + ?2S\n\nTQS)?1STQS??2,\n\n?F\n\n?z\n= 2(SX? ? z + r)TQ(S ?X?\n\n?z\n? I3), (17)\n\nwhere, Xe(r) = ?r,\n\n? =\n\n[\nI3\n0\n\n]\n,\n\nand I3 denotes the 3\u00d7 3 identity matrix. Note that S? = I3.\nFigure 3 illustrates growth distance tracking. For the first 20 iterations, rk\n\nis held constant to enable initial convergence of the algorithm. Then, rk varies\nthrough the virtual net. One iteration of the Newton-Raphson algorithm per\nvalue of rk is used to update the root, ?k+12 . Figure 3b demonstrates that the\ngrowth distance tracking is accurate. The growth distance is occasionally zero\nindicating an overlap between several rk and the debris. Figure 3c illustrates the\ntrajectory of rk in three dimensions.\n\n7.3 Thrust Limit on Growth Distance Computations\n\nSuppose that the thrust limits are expressed in the form ||LU || ? 1 for an ap-\npropriately defined matrix L and norm || \u00b7 ||. The computational procedures\n\n\n\n504 A. Weiss et al.\n\n0 50 100 150 200\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nIteration Number\n\nr x\n,r\n\ny,\nr z\n\nr\nx\n\nr\ny\n\nr\nz\n\n(a)\n\n0 50 100 150 200\n0\n\n2\n\n4\n\n6\n\n8\n\nIteration Number\n\nG\nro\n\nw\nth\n\n d\nis\n\nta\nnc\n\ne\n\napprox\nactual (fmincon)\n\n(b)\n\n(c)\n\nFig. 3. (a) Components of r, rx, ry and rz varying versus the iteration number. (b)\nGrowth distance versus iteration number computed by dynamic Newton-Raphson al-\ngorithm. (c) The trajectory of r and the debris.\n\nto determine ?u(r,K) involve solving a bilevel optimization problem where\n||L(KX + H(K)r)|| is maximized subject to the constraint X ? C(r,K, ?),\nand bisections are performed on the value of ? so that the maximum value is\n\n\n\nSpacecraft Constrained Maneuver Planning 505\n\ndriven to 1. As we demonstrate in this section, in special cases this computation\ncan be greatly simplified.\n\nSuppose that the thrust constraints are prescribed in terms of polyhedral\nnorm bounds, specifically\n\neTi (KX +Hr) ? umax, i = 1, 2, \u00b7 \u00b7 \u00b7 ,m, (18)\n\nwhere ei are the vertices of the unit norm polytope, and umax is the norm bound.\nThe infinity norm, for instance, has m = 6, and\n\ne1 =\n\n?\n? 10\n\n0\n\n?\n? e2 =\n\n?\n??10\n\n0\n\n?\n? e3 =\n\n?\n? 01\n\n0\n\n?\n?\n\ne4 =\n\n?\n? 0?1\n\n0\n\n?\n? e5 =\n\n?\n? 00\n\n1\n\n?\n? e6 =\n\n?\n? 00\n?1\n\n?\n? . (19)\n\nIn the case of non-polyhedral norm bounds, such as the 2-norm, an approxima-\ntion by a polyhedral norm bound may be employed.\n\nThe thrust limit on the growth distance is then determined based on solving,\nfor i = 1, \u00b7 \u00b7 \u00b7 , n, the optimization problems\n\nmaximize eTi (KX +Hr)\nsubject to 12 (X ?Xe(r))TP (X ?Xe(r)) ? c.\n\n(20)\n\nIf the value of c is found for which the solutions X?i of (20) satisfy\nmaxi{eTi (KX?i +Hr)} = umax, then ?u(r,K) =\n\n?\nc.\n\nThe problem (20) can be solved by diagonalizing P , using an orthogonal\nmatrix, V ,\n\nP = V T?V, ? = diag[?21, \u00b7 \u00b7 \u00b7 , ?26], ?i > 0.\nBy defining, z = X ?Xe(r), and ? so that\n\nz = V T??\n1\n2 ?,\n\nit follows that\n\nzTPz = ?T??\n1\n2V PV T??\n\n1\n2 ?\n\n= ?T?.\n\nThe problem (20) can now be re-written as\n\nmaximize hTi ? + e\nT\ni ?r\n\nsubject to 12?\nT? ? c, (21)\n\nwhere\n\nhTi = e\nT\ni KV\n\nT??\n1\n2 .\n\n\n\n506 A. Weiss et al.\n\nThe solution to the constrained maximization problem (21) of maximizing the\ninner-product of two vectors over a unit 2-norm ball is given by\n\n?i =\nhi\n\n||hi||\n?\n2c, (22)\n\nwhere || \u00b7 || denotes the vector 2-norm. The maximum value of the objective\nfunction in (20) is given by\n\n||hi||\n?\n2c+ eTi ?r.\n\nConsequently, to satisfy (18), we let\n\nc =\n\n??\n?\n\n0, if ? i : umax ? eTi ?r,\nmin\ni\n\n1\n\n2\n\n(\numax ? eTi ?r\n\n||hi||\n)2\n\n, otherwise.\n(23)\n\nThus, the problem of finding the thrust limit on the growth distance for\npolyhedral norm bounds has an explicit solution given by (23). Even though the\ncomputation of thrust limits on the growth distance can be performed offline for\nthe nominal operating conditions, fast computational procedures are beneficial\nin case of thruster failures, degradations, and restrictions on thrust directions\n(e.g., caused by the presence of other spacecraft nearby), all of which can lead\nto changing constraints on thrust during spacecraft missions.\n\nWe note that the condition umax ? maxi{eTi ?r} is satisfied if the available\nthrust can maintain the equilibrium Xe(r) in steady-state. We also note, that,\nbased on the form of ? , c is independent of ry, the in-track component of the\nequilibrium in the virtual net. Hence the computations of ?u(r,K) need only be\nperformed with ry = 0.\n\nWhen a spacecraft does not have independent thrusters in x, y and z direc-\ntions, a 2-norm thrust limit is more practical. Unfortunately, (20) is, in general,\na non-convex problem. In this case, the 2-norm bound can be approximated by\na polyhedral norm bound (18), with the vertices ei selected on the unit 2-norm\nball in R3. We note that higher accuracy of this approximation requires a higher\nnumber of vertices in (18), which thus, complicates (23).\n\n7.4 Connectivity Graph and Graph Search\n\nWe now introduce a notion of connectivity between two vertices of the virtual\nnet, ri ? N and rj ? N . The vertex ri is connected to the vertex rj if there\nexists a gain K ? K such that\n\nXe(ri) ? intC(rj ,K, ??(rj ,K,Q, z)), (24)\n\nwhere int denotes the interior of a set. The connectivity implies that a spacecraft\nlocated close to an equilibrium corresponding to ri can transition to an equilib-\nrium Xe(rj) by using limited thrust and avoiding collision with the debris. We\n\n\n\nSpacecraft Constrained Maneuver Planning 507\n\nnote that if ri is connected to rj this does not imply that, in turn, rj is connected\nto ri. We also note that connectivity depends on the existence of an appropriate\ncontrol gain from the set of gains K but the condition (24) does not need to hold\nfor all gains.\n\nThe on-line maneuver is computed according to the following procedure (for\nsimplicity, described here for the case of a single debris):\n\nStep 1: Determine the debris location and shape (i.e., z and Q).\nStep 2: By using fast growth distance computations, determine the thrust\n\nlimited growth distance based on (13), with ?g computed online and\n?u precomputed offline.\n\nStep 3: Construct a graph connectivity matrix between all ri, rj ? N . In\nthe graph connectivity matrix, if two vertices are not connected, the\ncorresponding matrix element is zero; if they are connected the cor-\nresponding matrix element is 1. In parallel, build the control gain\nselectivity matrix, which identifies the index of the highest preference\ngain K for which ri and rj are connected. This gain will be applied if\nthe edge connecting ri and rj is traversed.\n\nStep 4: Perform graph search (using any standard graph search algorithm) to\ndetermine a sequence of connected vertices r[k] ? N and control gains\nK[k] ? K, k = 1, \u00b7 \u00b7 \u00b7 , lp, such that r[1] satisfies the initial constraints,\nr[lp] satisfies the final constraints, and a cost function (see Section 8)\nis minimized.\n\nAfter the path has been determined as a sequence of the set-points and the\ncorresponding control gains, the execution of the path proceeds by checking if\nthe current state, X(t) is in the safe positively invariant set corresponding to\nthe next reference r+ and next control gain K+ in the sequence; if it is, then\nthe controller switches to this reference and control gain:\n\nX(t) ? C(r+,K+, ??(r+,K+, Q, z)) ? r(t) = r+, K(t) = K+. (25)\n\nWe note that the time and effort to execute the above procedure can be reduced\nsystematically by employing various heuristics.\n\n8 Cost Matrices\n\nAs described in the previous section, the connectivity graph matrix is comprised\nof ones and zeros, and thus, graph search that uses it as a cost matrix results in\na minimum length path between desired ri, rj ? N .\n\nIn order to produce time efficient and thrust efficient paths, offline we simulate\ntransitions between all ri, rj ? N for each K ? K and record the time and fuel\nconsumption to reach a box with side of 1m around the target vertex. The results\nare merged into time and fuel matrices that store the respective minimum value,\nwhile in parallel, the control selectivity matrix identifies which gain K produced\nsaid minimum.\n\n\n\n508 A. Weiss et al.\n\nStep 3 in the motion planning procedure is augmented so that the graph\nconnectivity matrix is multiplied elementwise with a desired cost matrix. Vertices\nthat are not connected retain a corresponding matrix element of zero, while\nvertices that are connected now contain a matrix element of time or fuel cost.\n\n9 Simulation Results\n\nSimulations are now provided that illustrate the debris avoidance approach.\nWe consider a nominal circular orbit of 850 km and discretize the HCW\nequations with a sampling period, ?T , of 30 seconds. We construct an ap-\nproximately 2 km cubed virtual net. We let K = {K1,K2,K3}, where\nK1,K2,K3 are the LQ gains associated with state and control weight matri-\nces Q = diag(100, 100, 100, 107, 107, 107), and R1 = 2 \u00d7 105I3, R2 = 2 \u00d7 107I3,\nand R3 = 2 \u00d7 109I3. These gains are chosen to represent preferences for fuel\nconsiderations, maneuver time considerations, and a compromise between them.\nWe impose a maximum thrust constraint of 10 N in each axis. In all simulations,\nDijkstra\u2019s algorithm is used to find the shortest cost path from initial node to\nfinal node.\n\nWe consider an ellipsoidal set O(z1, Q1) over-bounding a debris centered at\nz1 = [0.3 0.4 0.5]\n\nT km, where Q1 = 100I3. The spacecraft\u2019s initial condition is\nX(0) = Xe(r0), where r0 = [0.32 0 1.61]\n\nT km. The target equilibrium node is\nXe(0).\n\nFigure 4 shows the path the spacecraft takes under closed-loop control in order\nto avoid the debris and the time history of thrust magnitude. The spacecraft is\nable to complete the desired maneuver well within maximum thrust constraints\nwhile successfully avoiding the debris. In Figure 5 we rerun the simulation for a\ngrid of initial conditions. The figure clearly demonstrates the initial conditions\nfor which the maneuver path is perturbed from that which the spacecraft would\nhave taken had there been no debris.\n\nNext, we add a second debris O(z2, Q2) centered at z2 = [0.3 ? 0.4 0.5]T,\nwhere Q2 = 100I3. In calculating the growth distance, we take the minimum\ndistance to each of O(zi, Qi), i = 1, 2 . Figure 6 shows the path the spacecraft\ntakes under closed-loop control in order to avoid both debris and the time history\nof thrust magnitude.\n\nFinally, we consider the case of a non-stationary debris where we cover its\npath by the union of static debris (11). A union of ellipsoidal sets over-bounds\nthe debris\u2019 motion, where the debris positions zi are generated by sampling the\nrelative motion of the debris with the initial condition [0 0.5 0 0 0.0006 0]T, and\nwhere Qi = 200I3, i = 1 . . . nd. The spacecraft\u2019s initial condition is X(0) =\nXe(r0), where r0 = [0 1 0]\n\nT km. The target equilibrium node is Xe(rd), where\nrd = [0 ? 1 0]T km. We use the single gain K2 and do not include fuel or\ntime cost matrices in the simulation, searching for a minimum length path.\nFigure 7 demonstrates that the spacecraft is able to avoid the closed debris path\nby \u2018hopping\u2019 under it.\n\nIn Figure 8, we repeat the simulation for time efficient and thrust efficient\npaths and allow allK ? K. Table 1 summarizes the total time, thrust and nodes\n\n\n\nSpacecraft Constrained Maneuver Planning 509\n\n(a) Debris Avoidance Path.\n\n0 500 1000 1500 2000 2500 3000\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nTime, sec\n\nT\nhr\n\nus\nt, \n\nN\n\n(b) Time history of thrust magnitude.\n\nFig. 4. (a) Debris avoidance path for a single debris. The green x marks the initial\nnode. The blue x marks the final node. The red ellipsoid represents the debris. The\nblue line is the path the spacecraft takes in order to avoid the debris. The blue ellipsoids\nrepresent the safe positively invariant sets along the path. (b) The time history of thrust\nmagnitude.\n\n\n\n510 A. Weiss et al.\n\n0.5\n0\n\n0.5\n1\n\n0.5\n0\n\n0.5\n1\n\n2\n\n1\n\n0\n\n1\n\n2\n\ny (km)x (km)\n\nz \n(k\n\nm\n)\n\nFig. 5. Debris avoidance paths for many initial conditions. Each green x marks an intial\ncondition. The blue x marks the final node. The red ellipsoid represents the debris. The\nblue lines are the paths that the spacecraft takes from each initial condition in order\nto avoid the debris. We do not show the invariant set ellipsoids for visual clarity.\n\ntraversed for the three paths. Note that the minimum length path now \u2018hops\u2019\nover the debris path instead of under it, as now that it has access to K1 it finds\na shorter path. Also note that the time efficient path takes longer to complete\nthan the minimum length path. While the cost matrices described in Section\n8 calculate time and thrust to travel between all vertices in the virtual net,\nthe execution of the path does not require the spacecraft to reach intermediate\nvertices, rather, switching to the next reference once the current state enters\nthe next reference\u2019s invariant set (25). As such, the cost matrices only provide\na heuristic for selecting efficient paths. In Figure 9 we require the paths to\ntravel through intermediate vertices to show that, in this case, the cost matrices\naccurately determine efficient paths. The results are summarized in Table 2.\n\nTable 1. Total Time, Thrust, and Nodes Traversed for all Maneuver Paths for a Union\nof Static Debris\n\nTotal Time Total Thrust Total # of Nodes Gains used\n\nMinimum Length Path 2611.5 s 1472.85 N\u00b7s 6 K1\nTime Efficient Path 2841 s 1264.95 N\u00b7s 6 K1,K2\nThrust Efficient Path 9177 s 671.297 N\u00b7s 11 K2,K3\n\n\n\nSpacecraft Constrained Maneuver Planning 511\n\n(a) Debris Avoidance Path.\n\n0 500 1000 1500 2000 2500 3000\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nTime, sec\n\nT\nhr\n\nus\nt, \n\nN\n\n(b) Time history of thrust magnitude.\n\nFig. 6. (a) Debris avoidance path for 2 pieces of debris. The green x marks the initial\nnode. The blue x marks the final node. The red ellipsoids represents the 2 pieces of\ndebris. The blue line is the path the spacecraft takes in order to avoid the debris.\nThe blue ellipsoids represent the invariant sets along the path. (b) The time history of\nthrust magnitude.\n\n\n\n512 A. Weiss et al.\n\n(a) Debris Avoidance Path.\n\n0 500 1000 1500 2000 2500 3000 3500\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\nTime, sec\n\nT\nhr\n\nus\nt, \n\nN\n\n(b) Time history of thrust magnitude.\n\n0 1000 2000 3000 4000\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n3000\n\nTime, sec\n\nT\not\n\nal\n T\n\nhr\nus\n\nt, \nN\n\ns\n\n(c) Cumulative Thrust.\n\nFig. 7. (a) Debris avoidance path for a non-stationary debris using the union method.\nThe green x marks the initial node. The blue x marks the final node. The red ellipsoids\nrepresent the debris path. The blue line is the path the spacecraft takes in order to\navoid the debris. The blue ellipsoids represent the maximally grown invariant sets, C,\nalong the path. (b) The time history of thrust magnitude. (c) Cumulative thrust vs\ntime.\n\n\n\nSpacecraft Constrained Maneuver Planning 513\n\n(a) Debris Avoidance Path.\n\n0 2000 4000 6000 8000 10000\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\n16\n\n18\n\n20\n\nTime, sec\n\nT\nhr\n\nus\nt, \n\nN\n\n \n\n \n\nShortest Path\nTime Eff Path\nFuel Eff Path\n\n(b) Time history of thrust magnitude.\n\n0 2000 4000 6000 8000 10000\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n3000\n\nTime, sec\n\nT\not\n\nal\n T\n\nhr\nus\n\nt, \nN\n\ns\n\n \n\n \n\nShortest Path\nTime Eff Path\nFuel Eff Path\n\n(c) Cumulative Thrust.\n\nFig. 8. (a) Multiple debris avoidance paths for a non-stationary debris using the union\nmethod. (b) The time history of thrust magnitude. (c) Cumulative thrust vs time.\n\n\n\n514 A. Weiss et al.\n\n(a) Debris Avoidance Path.\n\n0 0.5 1 1.5 2 2.5 3 3.5\n\nx 10\n4\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n14\n\nTime, sec\n\nT\nhr\n\nus\nt, \n\nN\n\n \n\n \n\nShortest Path\nTime Eff Path\nFuel Eff Path\n\n(b) Time history of thrust magnitude.\n\n0 0.5 1 1.5 2 2.5 3 3.5\n\nx 10\n4\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n3000\n\n3500\n\nTime, sec\n\nT\not\n\nal\n T\n\nhr\nus\n\nt, \nN\n\ns\n\n \n\n \n\nShortest Path\nTime Eff Path\nFuel Eff Path\n\n(c) Cumulative Thrust.\n\nFig. 9. (a) Multiple debris avoidance paths that travel through intermediate nodes\nfor a non-stationary debris using the union method. (b) The time history of thrust\nmagnitude. (c) Cumulative thrust vs time.\n\nTable 2. Total Time, Thrust, and Nodes Traversed for all Maneuver Paths that Travel\nThrough Intermediate Nodes for a Union of Static Debris\n\nTotal Time Total Thrust Total # of Nodes Gains used\n\nMinimum Length Path 10457.5 s 3006.13 N\u00b7s 6 K1\nTime Efficient Path 9862 s 2017.11 N\u00b7s 6 K1,K2\nThrust Efficient Path 32812.5 s 1083.58 N\u00b7s 11 K2,K3\n\n\n\nSpacecraft Constrained Maneuver Planning 515\n\n10 Conclusion\n\nWe described a technique for spacecraft relative motion maneuvering that uses\npositively-invariant sets in order to avoid collisions with debris, obstacles or\nmoving debris paths, while adhering to specified thrust limits. The approach is\nbased on maintaining the spacecraft trajectory within a tube formed by safe\npositively-invariant sets around forced and unforced equilibria in an appropri-\nately constructed virtual net. The maneuver construction procedure exploits fast\ngrowth distance computations to determine equilibria connectivity; graph search\nbased on optimal cost matrices is then employed to obtain a sequence of equi-\nlibria (essentially waypoints) to be commanded to the spacecraft. The switch to\nthe next commanded equilibrium occurs immediately once appropriate condi-\ntions are satisfied and without waiting to settle to an equilibrium. For the case\nwhere thrust limits can be specified as polyhedral norm bounds, we have shown\nthat the thrust limit on the growth distance can be easily computed; it is, in\nfact, feasible to perform these computations onboard a spacecraft in order to\naccount for thruster failure or degradation.\n\nReferences\n\n1. Committee for the Assessment of NASA\u2019s Orbital Debris Programs; National Re-\nsearch Council, editor, Limiting Future Collision Risk to Spacecraft: An Assessment\nof NASA\u2019s Meteoroid and Orbital Debris Programs. The National Academies Press\n(2011)\n\n2. LaValle, S.M.: Planning Algorithms. Cambridge University Press (1996)\n3. Maia, M.H., Galvao, R.K.H.: On the use of mixed-integer linear predictive con-\n\ntrol with avoidance constraints. International Journal of Robust and Nonlinear\nControl 19, 822\u2013828 (2008)\n\n4. Baldwin, M., Weiss, A., Kolmanovsky, I., Erwin, R.S.: Spacecraft Debris Avoid-\nance using Constraint Admissible Positively Invariant Sets. In: Proceedings of AAS\nSpace Flight Mechanics Meeting, Charleston, South Carolina, pp. Paper AAS 12\u2013\n250 (2012)\n\n5. Kolmanovsky, I., Gilbert, E.: Theory and computation of disturbance invariant\nsets for discrete-time linear systems. Mathematical Problems in Engineering 4(4),\n317\u2013367 (1998)\n\n6. Epenoy, R.: Fuel optimization for continuous-thrust orbital rendezvous with col-\nlision avoidance constraint. Journal of Guidance, Control, and Dynamics 34(2)\n(2011)\n\n7. Sanchez-Ortiz, N., Bello-Mora, M., Klinkrad, H.: Collision avoidance manoeuvres\nduring spacecraft mission lifetime: Risk reduction and required ? V. Advances in\nSpace Research 38 (2006)\n\n8. Martinson, N., Munoz, J., Wiens, G.: A new method of guidance control for au-\ntonomous rendezvous in a cluttered space environment. In: Proceedings of AIAA\nGuidance, Navigation, and Control Conference, Hilton Head, SC (August 2007)\n\n9. Martinson, N.: Obstacle avoidance guidance and control algorithms for spacecraft\nmaneuvers. In: Proceedings of AIAA Guidance, Navigation, and Control Confer-\nence, Chicago, IL (August 2009)\n\n\n\n516 A. Weiss et al.\n\n10. Mueller, J.B., Griesemer, P.R., Thomas, S.: Avoidance maneuver planning in-\ncorporating station-keeping constraints and automatic relaxation. In: AIAA In-\nfotech@Aerospace 2010, Atlanta, GA (April 2010)\n\n11. Ulybyshev, Y.: Trajectory optimization for spacecraft proximity operations with\nconstraints. In: AIAA Guidance, Navigation, and Control Conference, Portland,\nOR (August 2011)\n\n12. Richards, A., Schouwenaars, T., How, J., Feron, E.: Spacecraft trajectory planning\nwith avoidance constraints using mixed-integer linear programming. AIAA Journal\nof Guidance, Control, and Dynamics 25(4) (2002)\n\n13. Mueller, J.B.: Onboard planning of collision avoidance maneuvers using robust\noptimization. In: AIAA Infotech@ Aerospace Conference, Seattle, AIAA, Wash-\nington, DC, Seattle, WA (April 2009)\n\n14. Clohessy, W., Wiltshire, R.: Terminal guidance system for satellite rendezvous. J.\nAerospace Sci. 27(9), 653\u2013658 (1960)\n\n15. Kolmanovsky, I., Gilbert, E.: Multimode regulators for systems with state and\ncontrol constraints and disturbance inputs. In: Stephen Morse, A. (ed.) Control\nUsing Logic-Based Switching. LNCIS, vol. 222, pp. 104\u2013117. Springer, Heidelberg\n(1997)\n\n16. Park, H., Di Cairano, S., Kolmanovsky, I.: Linear Quadratic Model Predictive\nControl approach to spacecraft rendezvous and docking. In: Proceedings of 21st\nAAS/AIAA Space Flight Mechanics Meeting, New Orleans, Louisiana, USA, pp.\nPaper AAS\u2013142 (2011)\n\n17. Ong, C.J., Gilbert, E.G.: Growth distances: New measures for object separation\nand penetration. IEEE Transactions on Robotics and Automation 12(6), 888\u2013903\n(1996)\n\n18. Luenberger, D.G., Ye, Y.: Linear and nonlinear programming, vol. 116. Springer\n(2008)\n\n19. Bazaraa, M.S., Sherali, H.D., Shetty, C.M.: Nonlinear programming: theory and\nalgorithms. Wiley-interscience (2006)\n\n20. Guddat, J., Vazquez, F.G., Jongen, H.T.: Parametric optimization: singularities,\npathfollowing and jumps. Teubner (1990)\n\n21. Quoc, T.D., Savorgnan, C., Diehl, M.: Adjoint-based predictor-corrector sequen-\ntial convex programming for parametric nonlinear optimization. SIAM Journal on\nOptimization 22(4), 1258\u20131284 (2012)\n\n\n\nA Comparison of Nonlinear PI and PID\n\nInertia-Free Spacecraft Attitude Control Laws\n\nMarc Camblor2, Avishai Weiss1, Gerardo Cruz1,\nYousaf Rahman1, Sergio Esteban2,\n\nIlya V. Kolmanovsky1, and Dennis S. Bernstein1\n\n1 Department of Aerospace Engineering, University of Michigan, Ann Arbor, MI\n48109-2140, USA\n\n{avishai,gecruz,yousafrm,ilya,dsbaero}@umich.com\n2 Department of Aerospace Engineering, Universidad de Sevilla, 41092 Sevilla, Spain\n\nmarcamchi@alumn.us.es, sesteban@us.es\n\nAbstract. We compare four spacecraft attitude control laws that re-\nquire no prior modeling of the spacecraft mass distribution. All four\ncontrol laws are based on rotation matrices, which provide a singularity-\nfree attitude representation and unwinding-free operation without dis-\ncontinuous switching. We apply these control laws to motion-to-rest\nand motion-to-spin maneuvers. Simulation results are given to illustrate\nthe robustness of the control laws to uncertainty in the spacecraft iner-\ntia. For motion-to-rest maneuvers about a principal axis with bounded\ntorque, we compare the settling time of the inertia-free control laws with\nthe time-optimal bang-bang control law operating under known inertia.\nWe also investigate closed-loop performance in the presence of attitude-\ndependent torque disturbances, actuator nonlinearities, sensor noise, and\nactuator bias.\n\nKeywords: Attitude control, unmodeled inertia, rotation matrix,\nSO(3).\n\n1 Introduction\n\nThe development of a spacecraft attitude control system is often a labor-intensive\nprocess due to the need for an accurate model of the spacecraft inertia. Determin-\ning and predicting the mass properties of a spacecraft may be difficult due to fuel\nusage, deployment, structural articulation, and docking. To alleviate this need,\nthis paper focuses on spacecraft attitude control laws that require no modeling\nof the spacecraft\u2019s mass distribution. An adaptive inertia-free attitude control\nlaw is given in [1] for minimum-time maneuvers. Inertia-free control laws for\nmotion-to-rest and tracking are given in [2\u20134].\n\nAttitude control laws can use various parameterizations of the rotation group\nSO(3). Euler angles are conceptually the simplest, but cannot represent all angu-\nlar velocities due to singularities corresponding to gimbal lock. A related obstacle\narises in the use of Rodrigues parameters and modified Rodrigues parameters,\n\nc\u00a9 Springer-Verlag Berlin Heidelberg 2015 517\nD. Choukroun et al. (eds.), Advances in Estimation, Navigation, and Spacecraft Control,\nDOI: 10.1007/978-3-662-44785-7_27\n\n\n\n518 M. Camblor et al.\n\nwhich have singularities at 180-deg and 360-deg rotation angles, respectively.\nThe most common attitude representation is based on quaternions, which can\nrepresent all attitudes and all angular velocities, but provide a double cover\nof SO(3), that is, each physical attitude is represented by two elements of the\n4-dimensional sphere S3. A continuous controller designed on the set of quater-\nnions can thus inadvertently command the spacecraft to needlessly rotate 360\ndegrees to reach the commanded attitude. This is the unwinding problem [5].\nThe inertia-free, quaternion-based control laws in [3, 6, 7] exhibit unwinding.\n\nThere are several approaches to avoiding unwinding. The traditional approach\nis to implement a logic statement that confines the quaternions to a hemisphere\nof S3 [8]. This approach introduces a discontinuous control law, which can lead\nto chattering in the presence of noise. This issue and associated complications\nare addressed in [9].\n\nIn the present paper we avoid unwinding by representing attitude in terms\nof rotation matrices, which constitute a one-to-one representation of physical\nattitude without attitude or angular-velocity singularities [10]. Attitude control\non SO(3) thus provides the ability to implement continuous control laws that do\nnot exhibit unwinding [11\u201313]. Inertia-free control laws on SO(3) are developed\nin [14, 15]. Lie groups are used for control in [16].\n\nSince SO(3) is a compact manifold, every continuous vector field on it nec-\nessarily possesses more than one equilibrium, in fact, at least four. This means\nthat global convergence on SO(3) under continuous, time-invariant control is im-\npossible. Consequently, the objective of [12, 13, 15] is almost global stabilization,\nwhere the spurious equilibria are saddle points. Although the spurious equilib-\nria can slow the rate of convergence, this approach avoids the complications of\ndiscontinuous control laws.\n\nAlthough the derivation of the inertia-free controller in [15] and the present\npaper is based on rotation matrices, the attitude error given by the S-parameter\ndefined by (7) can be computed from any attitude parameterization, such as\nquaternions or modified Rodrigues parameters, and thus these results are not\nconfined to rotation matrices per se.\n\nThe goal of this paper is to compare four continuous, inertia-free attitude\ncontrol laws based on rotation matrices. These control laws are called SO(3)/0,\nSO(3)/3, SO(3)/6, and SO(3)/9, where the last number represents the number\nof integrators in the control law. These control laws take the form of nonlinear\nPD/PID control laws tailored to the nonlinear characteristics of spacecraft dy-\nnamics. Since linearized rigid-body dynamics comprise a double integrator about\neach principal axis, we expect (as in the case of linear systems) that asymptotic\ntracking of attitude ramp commands (that is, spin commands) about each prin-\ncipal axis is possible without integral action. The primary role of integral control\nin spacecraft attitude dynamics is thus to reject constant disturbances.\n\nIn the simplest case of PD control, the inertia-free SO(3)/0 control law is\ngiven in [14]. In contrast, the SO(3)/9 control given in [15] is also inertia free\nbut employs three integrators inside the feedback loop as well as six integra-\ntors for inertia estimation. The control laws SO(3)/3 and SO(3)/6 are ad hoc\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 519\n\nsimplifications of SO(3)/9. The goal of this paper is to numerically investigate\nand compare the closed-loop performance of these control laws under various\ncommand-following and disturbance-rejection scenarios as well as under vari-\nous off-nominal conditions involving rate-sensor noise and unmodeled actuator\nnonlinearities, such as saturation, on-off, and deadzone.\n\nWe consider two basic scenarios, namely, motion-to-rest (M2R) maneuvers\nand motion-to-spin (M2S) maneuvers, where \u201crest\u201d and \u201cspin\u201d refer to motion\nrelative to an inertial frame. If the M2R and M2S maneuvers begin from zero\nangular velocity, then we use the terminology rest-to-rest (R2R) and rest-to-spin\n(R2S), respectively. A M2S maneuver aims to bring the spacecraft from an arbi-\ntrary initial angular velocity and attitude to a specified constant angular velocity\nrelative to an inertial frame. In other words, the goal is to have the spacecraft\nrotate at a constant rate about a body-fixed axis whose inertial direction is fixed.\n\nAlthough the spacecraft inertia is unknown, and thus the directions of the\nprincipal axes of inertia are unknown, we consider commanded spins about both\nprincipal and non-principal axes (without knowing whether the commanded axis\nof rotation is principal or non-principal) in order to demonstrate how these con-\ntrol laws perform in various scenarios. For example, a commanded spin about\na principal axis has the advantage that, once the spacecraft reaches the com-\nmanded spin, no additional torque is needed in the absence of disturbances\nexcept possibly to stabilize a spin about the minimum and intermediate axes,\nwhere the latter is naturally unstable and the former is unstable due to energy\ndissipation, although we do not model this effect. Furthermore, as shown in [17,\np. 377], a spin about a non-principal axis with constant torque and for which all\ncomponents of the angular velocity are nonzero is unstable and thus stabiliza-\ntion is required. Finally, a commanded spin about a non-principal axis requires\nconstant, nonzero torques and thus is more sensitive to torque saturation than a\ncommanded spin about a principal axis. In summary, a commanded spin about\na non-principal axis places significantly higher demands on the control law in\nterms of stabilization and control authority.\n\nThroughout this paper, all control torques are assumed to be provided by\nthrusters or gas jets without onboard stored momentum.\n\n2 Spacecraft Model\n\nThe spacecraft equations of motion are given by Euler\u2019s and Poisson\u2019s equations\n\nJ?? = (J?)\u00d7 ? +Bu+ zdist, (1)\nR? = R?\u00d7, (2)\n\nwhere ? ? R3 is the angular velocity of the spacecraft frame relative to the\ninertial frame resolved in the spacecraft frame, ?\u00d7 is the cross-product matrix\nof ?, J ? R3\u00d73 is the inertia matrix of the spacecraft, the components of the\nvector u ? R3 represent three independent torque inputs, and the nonsingular\nmatrix B ? R3\u00d73 determines the applied torque about each axis of the spacecraft\n\n\n\n520 M. Camblor et al.\n\nframe due to u. The rotation matrix R = OIn/SC ? R3\u00d73 is the physical rotation\nmatrix that transforms the inertial frame into the spacecraft frame resolved\nin the spacecraft frame, and where OIn/SC is the orientation (direction cosine)\nmatrix that transforms components of a vector resolved in the spacecraft frame\ninto the components of the same vector resolved in the inertial frame. The vector\nzdist ? R3 represents disturbance torques, such as the gravity gradient torques\nmodeled by (25) below.\n\nThe objective of the attitude control problem is to determine control inputs\nsuch that the spacecraft attitude given by R follows a commanded attitude\ntrajectory given by the possibly time-varying C1 rotation matrix Rd(t). For\nt ? 0, Rd(t) is given by\n\nR?d(t) = Rd(t)?d(t)\n\u00d7, Rd(0) = Rd0, (3)\n\nwhere ?d is the commanded possibly time-varying angular velocity vector re-\nsolved in the desired body frame specified by Rd(t). The error between R(t) and\n\nRd(t) is given by the attitude-error rotation matrix R?\n?\n= RTdR, which satisfies\n\nthe differential equation ??R = R???\u00d7, where the angular-velocity error ?? is defined\nby ??\n\n?\n= ? ? R?T?d. We rewrite (1) in terms of ?? as\n\nJ ??? = J(?? + R?T?d)\u00d7 (?? + R?T?d) + J(?? \u00d7 R?T?d ? R?T??d) +Bu+ zdist. (4)\n\nA scalar measure of attitude error is given by the eigenaxis error\n\ne(t)\n?\n= cos?1(12 [tr R?(t)? 1]).\n\n3 Control Laws\n\n3.1 SO(3)/9\n\nTo estimate the spacecraft inertia, we introduce the notation J? = L(?)?, where\n? ? R6 is defined by\n\n?\n?\n=\n\n[\nJ11 J22 J33 J23 J13 J12\n\n]T\n(5)\n\nand\n\nL(?)\n?\n=\n\n?\n??1 0 0 0 ?3 ?20 ?2 0 ?3 0 ?1\n\n0 0 ?3 ?2 ?1 0\n\n?\n? .\n\nNext, let J? ? R3\u00d73 denote an estimate of J , and define the inertia-estimation\nerror J?\n\n?\n= J ? J? . Letting ??, ?? ? R6 represent J? , J? , respectively, as in (5), it\n\nfollows that ?? = ? ? ??. Likewise, let z?dist ? R3 denote an estimate of zdist, and\ndefine the disturbance-estimation error z?dist\n\n?\n= zdist ? z?dist.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 521\n\nAssuming that the disturbance is harmonic, zdist can be modeled by\n\nd? = Adistd, zdist = Cdistd, (6)\n\nwhere Adist ? Rnd\u00d7nd and Cdist ? R3\u00d7nd are known matrices. In this model,\nd(0) is unknown, which is equivalent to the assumption that the amplitude and\nphase of all harmonic components in the disturbance are unknown; however,\nthe spectrum of d is assumed to be known. To provide asymptotic rejection of\nharmonic disturbances, the matrix Adist is chosen to include eigenvalues of all\nfrequency components that may be present in zdist, where the zero eigenvalue\ncorresponds to a constant disturbance. Since zdist is harmonic, Adist is chosen\nto be skew symmetric. Let d? ? Rnd denote an estimate of d, and define the\ndisturbance-state estimation error d?\n\n?\n= d? d?.\n\nThe role of tr(A ? AR?) in the stability analysis below is explained by the\nfollowing result.\n\nLemma 1. [15] Let A ? R3\u00d73 be a diagonal positive-definite matrix, and let R\nbe a rotation matrix. Then, the following statements hold:\n\ni) For all i, j = 1, 2, 3, Rij ? [?1, 1].\nii) tr(A?AR) ? 0.\niii) tr(A?AR) = 0 if and only if R = I.\n\nThe attitude error S is defined by [11, 13\u201315]\n\nS\n?\n=\n\n3?\ni=1\n\nai(R?\nTei)\u00d7 ei, (7)\n\nwhere a1, a2, a3 are distinct positive numbers and e1, e2, e3 ? R3 are the standard\nbasis vectors.\n\nTheorem 1. [15] Let Kp be a positive number, let K1 ? R3\u00d73, Q ? R6\u00d76, and\nD ? Rnd\u00d7nd be positive definite, let A = diag(a1, a2, a3) be a diagonal positive-\ndefinite matrix, and define the attitude error S by (7). Then the Lyapunov\ncandidate\n\nV (??, R?, ??, d?)\n?\n= 12 (?? +K1S)\n\nTJ(?? +K1S) +Kptr (A?AR?) + 12 ??TQ?? + 12 d?TDd?\n\nis positive definite, that is, V is nonnegative, and V = 0 if and only if ?? = 0,\nR? = I, ?? = 0, and d? = 0.\n\nTheorem 2. [15] Let Kp be a positive number, let Kv ? R3\u00d73, K1 ? R3\u00d73,\nQ ? R6\u00d76, and D ? Rnd\u00d7nd be positive definite, assume that ATdistD + DAdist\nis negative semidefinite, let A = diag(a1, a2, a3) be a diagonal positive-definite\nmatrix with distinct diagonal entries, define S and V as in Theorem 1, and let\n?? and d? satisfy\n\n??? =Q?1[LT(?)?\u00d7 + LT(K1S? + ?? \u00d7 ? ? R?T??d)](?? +K1S), (8)\n\n\n\n522 M. Camblor et al.\n\nwhere\n\nS? =\n\n3?\ni=1\n\nai[(R?\nTei)\u00d7 ??]\u00d7 ei, (9)\n\nand\n\n??\nd = Adistd?+D\n\n?1CTdist(?? +K1S), z?dist = Cdistd?. (10)\n\nFurthermore, let\n\nu = B?1(v1 + v2 + v3), (11)\n\nwhere\n\nv1\n?\n= ?(J??)\u00d7 ? ? J?(K1S? + ?? \u00d7 ? ? R?T??d), (12)\n\nv2\n?\n= ?z?dist, v3 ?= ?KpS ?Kv(?? +K1S). (13)\n\nThen,\n\nV? (??, R?, ??, d?) =? (?? +K1S)TKv(?? +K1S)?KpSTK1S\n+ 12 d?\n\nT(ATdistD +DAdist)d? (14)\n\nis negative semidefinite. Furthermore, the equilibrium manifold (??, R?, (??, d?)) =\n(0, I,Q0) of the closed-loop system given by (4) and (8)-(13) is locally asymp-\ntotically stable, and the remaining equilibrium manifolds given by (0,Ri,Qi),\nfor i ? {1, 2, 3} are unstable. Finally, the set of all initial conditions converg-\ning to these equilibrium manifolds forms a lower dimensional submanifold of\nR\n\n3 \u00d7 SO(3)\u00d7 R6 \u00d7 R3.\nSaturation techniques for SO(3)/9 are discussed in [18].\n\n3.2 SO(3)/6\n\nThe control law SO(3)/6 is a simplification of the SO(3)/9 control law (11)\u2013(13)\nwith v2 and thus (10) omitted. In particular, this control law has the form\n\nu = ?B?1[(KpI +KvK1)S +Kv?? + J?K1S? + (J??)\u00d7 ? + J?(?? \u00d7 ?)? J?R?T??d].\n(15)\n\n3.3 SO(3)/3\n\nThe control law SO(3)/3 is a simplification of the SO(3)/9 control law (11)\u2013(13)\nwith the inertia estimate (8) omitted and with Adist = 0. In particular, this\ncontrol law has the form\n\nu = ?B?1\n[\n(KpI +KvK1)S +KiCdistD\n\n?1CTdist\n\n? t\n0\n\n[??(s) +K1S(s)] ds+Kv??\n\n]\n,\n\n(16)\n\nwhere the integral gain Ki is a positive number.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 523\n\n3.4 SO(3)/0\n\nThe SO(3)/0 control law for almost global stabilization [14, 15] is given by\n\nu = ?B?1(KpS +Kv??), (17)\nwhere the positive number Kp and the positive-definite matrix Kv ? R3\u00d73 are\nproportional (attitude) and derivative (angular velocity) gains, respectively.\n\nNote that the control law (17) is inertia-free. The stabilizing effect of this\ncontrol law on the attitude of a rigid spacecraft follows from the Lyapunov\nfunction\n\nV (?, R?)\n?\n= 12?\n\nTJ? +Kptr(A?AR?), (18)\n\nwhere A\n?\n= diag(a1, a2, a3) and for which V? (?, R?) = ??TKv?. The invariant set\n\ntheorem is used in [14] to ensure almost global asymptotic stability.\nBy choosing Kv to be a function of ?, the control law (17) satisfies the fol-\n\nlowing saturation bounds [15, 18].\n\nProposition 1. Let ? and ? be positive numbers, let A = diag(a1, a2, a3) have\ndistinct positive diagonal entries, and let Kp and Kv(?) be given by\n\nKp =\n?\n\ntrA\n(19)\n\nand\n\nKv(?) = ?\n\n?\n??\n\n1\n1+|?1| 0 0\n\n0 11+|?2| 0\n\n0 0 11+|?3|\n\n?\n?? . (20)\n\nThen, for all t ? 0, the control torque given by (17) satisfies\n\n?u(t)?? ? ?+ ?\n?min(B)\n\n. (21)\n\nFor the remainder of the paper, Kp and Kv are assumed to be given by (19)\nand (20). Alternative forms of the gain Kv(?) are given in [19].\n\n4 Modeling Inertia Variations\n\nIf the inertia tensor is resolved in a non-principal body-fixed frame, then the\ndiagonal entries of the resulting inertia matrix are the moments of inertia and\nthe off-diagonal entries are the products of inertia. The off-diagonal entries of\nthe inertia matrix are thus a consequence of an unknown rotation between a\nprincipal body-fixed frame and an arbitrarily chosen body-fixed frame.\n\nFigure 1 shows the triangular region of feasible principal moments of inertia of\na rigid body. There are five cases that are highlighted for the principal moments\n\n\n\n524 M. Camblor et al.\n\nof inertia ?1 ? ?2 ? ?3 > 0, where ?1, ?2, ?3 satisfy the triangle inequality\n?1 < ?2 + ?3. Let m denote the mass of the rigid body. The point ?1 = ?2 = ?3\n\ncorresponds to a sphere of radius r? =\n?\n\n5?1\n2m ; the point ?1 = ?2 = 2?3 corresponds\n\nto a cylinder of length l and radius r, where l = 3r and r =\n?\n\n2?1\nm ; and the\n\npoint ?1 =\n6\n5?2 = 2?3 is a brick whose side lengths are l1, l2, l2 and whose\n\ninertia is located at the centroid of the triangular region. The remaining two\ncases in Figure 1 are limiting cases. In particular, the thin disk is a cylinder\nwith zero length, positive radius, and infinite density, while the thin cylinder is\na cylinder with positive length, zero radius, and infinite density. Note that the\ninertia matrix of the thin disk is positive definite, whereas the inertia matrix\nof the thin cylinder is positive semidefinite but not positive definite. Table 1\nsummarizes the parameters and densities for each of these rigid bodies.\n\nk\n\n65\n\nFig. 1. Feasible region of the principal moments of inertia ?1, ?2, ?3 of a rigid body\nsatisfying 0 < ?3 ? ?2 ? ?1, where ?1 < ?2 + ?3. The shaded region shows all feasible\nvalues of ?2 and ?3 in terms of the largest principal moment of inertia ?1. The open\ndots and dashed line segment indicate nonphysical, limiting cases.\n\n5 M2R Examples\n\nFor all of the examples in this section, we assume that the nominal body-fixed\nframe is a principal body-fixed frame. However, the body-fixed frame is not a\nprincipal-axis frame for the off-nominal cases considered below. The nominal\nspacecraft shape is chosen to be a brick corresponding to the centroid of the\ntriangular region in Figure 1. For all cases considered, we choose ?1 = 10 kg-m\n\n2,\nwhich for the centroidal brick yields the inertia J3 = diag(10, 25/3, 5). Conse-\nquently, the inertias J1, J2, J4, and J5 of the sphere, cylinder, thin disk, and thin\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 525\n\nTable 1. Parameters and densities for the inertia matrices considered in Figure 1. Note\nthat the parameters for all shapes are set by the ratio ?1/m, where ?1 is the principal\nmoment of inertia and m is the mass.\n\nShape Parameters Density\n\nSphere r? =\n?\n\n5?1\n2m ? =\n\n4\n3?m\n\n2/5(5?12 )\n2/5\n\nCylinder l = 3r, r =\n?\n\n2?1\nm ? = 3?m\n\n2/5(2?1)\n2/5\n\nBrick l1 =\n?\n\n2?1\nm , l2 =\n\n?\n4?1\nm , l3 =\n\n?\n8?1\nm ? = 8m\n\n2/5?\n2/5\n1\n\nThin disk l = 0, r =\n?\n\n2?1\nm ? = ?\n\nThin cylinder r = 0, l =\n?\n\n12?1\nm ? = ?\n\ncylinder are given, respectively, by J1 = diag(10, 10, 10), J2 = diag(10, 10, 5),\nJ4 = diag(10, 5, 5), and J5 = diag(10, 10, 0.1), where all units are kg-m\n\n2. The\ninertia matrix J3 corresponding to the centroid of the inertia region serves as\nthe nominal inertia matrix, while a perturbation J(?) of Ji in the direction of\nJj has the form J(?) = (1 ? ?)Ji + ?Jj , where ? ? [0, 1] is the perturbation\nparameter. To facilitate numerical integration, J5 is chosen to be a nonsingular\napproximation of the inertia of a thin cylinder.\n\nFor all examples in the remainder of the paper, let ? = ? = 1, K1 = I3, Ki =\n0.015, A = diag(1, 2, 3), B = I3, Cdist = I3, D = I3, and Q = I6. Furthermore, Kp\nand Kv are defined in (19) and (20), respectively. To evaluate the performance\nfor R2R examples, we use the settling-time metric\n\nk0 = min\nk>100\n\n{k : for all i ? {1, . . . , 100}, e((k ? i)Ts) < 0.05 rad}, (22)\n\nwhere k is the simulation step, Ts is the integration step size, and e(kTs) is the\neigenaxis error at the kth simulation step. This metric is thus the minimal time\nsuch that the eigenaxis error in the 100 most recent simulation steps is less than\n0.05 rad.\n\n5.1 M2R Examples without Disturbances\n\nTo illustrate the inertia-free property of the control laws, the inertia of the\nspacecraft is varied using\n\nJij(?) = (1? ?)Ji + ?Jj , (23)\nwhere ? ? [0, 1] for i, j ? {(1, 5), (3, 1), (3, 5), (3, 4)}.\n\nNext, we examine the robustness of the thrusters to misalignment relative to\nthe principal axes. To model this misalignment, the inertia matrix is rotated\nby an angle ? about either the x-axis, y-axis, or z-axis. For each rotation, J3 is\ntransformed by\n\nJ ?3 = O(?)J3O(?)T, (24)\n\n\n\n526 M. Camblor et al.\n\nwhere O(?) is a direction cosine matrix.\nFigure 2 shows how the thruster misalignment angle ? affects the settling\n\ntime, where ? is varied from ?180 deg to 180 deg. Figure 2 also shows how the\nR2R settling time depends on ?. Both inertia robustness studies are shown for\nSO(3)/3 and SO(3)/9.\n\n5.2 M2R Examples with Disturbances\n\nFigure 3 illustrates how the control laws handle body-constant disturbance\ntorques about the minor axis. Note that SO(3)/0 and SO(3)/6 are not able\nto reject constant torque disturbances.\n\nNext, we consider a gravity gradient disturbance torque ?g modeled by [17,\npp. 386\u2013390]\n\n?g = 3n\n2(OSC/Le3)\u00d7J(OSC/Le3), (25)\n\nwhere n\n?\n=\n\n?\n?/r3 is the orbital mean motion, ? is the gravitational parameter,\n\nr is the orbit radius, e3 is the third column of the 3 \u00d7 3 identity matrix, and\nOSC/L ? R3\u00d73 is the orientation matrix of the spacecraft frame FSC relative to\nthe local-vertical-local-horizontal frame FL. The satellite orbit is circular with\nan altitude of 300 km.\n\nFigure 4 shows that SO(3)/3 and SO(3)/9 can reject gravity gradient dis-\nturbances for a R2R maneuver. Furthermore, Figure 5 shows the closed-loop\nperformance of SO(3)/3 and SO(3)/9 for a commanded inertial attitude in the\npresence of a gravity gradient disturbance.\n\nNext, we consider an inertially constant disturbance torque. Figure 6 shows\nthe performance of all four controllers as the disturbance magnitude is increased.\nThe settling time is computed for the control laws that can reject the inertially\nconstant disturbance, whereas the steady-state error is computed for those that\nbring the spacecraft to rest with an incorrect attitude.\n\n5.3 M2R Examples with Input Nonlinearities\n\nNext, we consider the effect of three nonlinearities, namely, torque cut-off satu-\nration, control-torque deadzone, and thrusters operating in on-off mode with the\ninput torque given by the on-off control law u(t) = umaxsign(v(t)), where v(t) is\nthe torque commanded by the SO(3) control law. Figure 7 shows the effect of in-\ncreasingly restrictive saturation levels for all of the control laws. Figure 8 shows\nhow each controller performs the same M2R maneuver using on-off actuation.\nFigure 9 illustrates how the settling time changes as a function of the width of\nthe unknown control-torque deadzone.\n\nWe also consider the effect of sensor noise corrupting the angular-velocity\nmeasurement. Two types of noise are considered, namely, gyro bias, that is, a\nconstant error in the measurement of ?, as well as zero-mean white gyro noise\nwith a signal-to-noise ratio of 20. Figure 10 shows the performance of all four\ncontrollers when either gyro bias or stochastic gyro noise is present. SO(3)/3,\nSO(3)/6, and SO(3)/9 are able to reduce the attitude error below 0.05 rad.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 527\n\n?200 ?150 ?100 ?50 0 50 100 150 200\n56\n\n57\n\n58\n\n59\n\n60\n\n61\n\n? (deg)\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\nx\n\ny\n\nz\n\n(a) SO(3)/3. Variations in the settling time are within 7%.\n\n?200 ?150 ?100 ?50 0 50 100 150 200\n27.2\n\n27.4\n\n27.6\n\n27.8\n\n28\n\n? (deg)\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\nx\n\ny\n\nz\n\n(b) SO(3)/9. Variations in the settling time are within 2%.\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1\n40\n\n50\n\n60\n\n70\n\n80\n\n?\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\nSphere to thin cylinder\n\nCentroid to sphere\n\nCentroid to thin cylinder\n\nCentroid to thin disk\n\n(c) SO(3)/3. Variations in the settling time are within 30%.\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1\n\n20\n\n30\n\n40\n\n50\n\n?\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\nSphere to thin cylinder\n\nCentroid to sphere\n\nCentroid to thin cylinder\n\nCentroid to thin disk\n\n(d) SO(3)/9. Variations in the settling time are within 44%.\n\nFig. 2. R2R settling time with no disturbance for SO(3)/3 and SO(3)/9 as a function\nof the principal-frame/body-frame rotation angle ? for misalignments about each of\nthe three principal axes of J3 (a), (b), and the perturbation parameter ? for various\ncombinations of inertia matrices (c), (d). The commanded maneuver is a 40-deg ro-\ntation about the body-fixed direction [1 1 1]T. Each controller is implemented with a\nsingle tuning for all inertia cases. Convergence is achieved for all four cases.\n\n\n\n528 M. Camblor et al.\n\n0 0.5 1 1.5\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nDisturbance (N-m)\n\nS\nte\n\na\nd\ny\n\nS\nta\n\nte\nE\n\nrr\no\nr\n\n(r\na\nd\n) SO(3)/0\n\nSO(3)/6\n\n(a) R2R steady-state error for\nSO(3)/0 and SO(3)/6.\n\n0 0.2 0.4 0.6 0.8 1\n0\n\n50\n\n100\n\n150\n\nDisturbance (N-m)\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\nSO(3)/3\n\nSO(3)/9\n\n(b) R2R settling time for SO(3)/3\nand SO(3)/9.\n\nFig. 3. Body-constant torque-disturbance rejection about the minor axis. The com-\nmanded maneuver is a 40-deg rotation about the body-fixed direction [1 1 1]T. Note that\nthe performance of SO(3)/6 is substantially better than the performance of SO(3)/0,\nand the performance of SO(3)/3 improves relative to SO(3)/9 as the magnitude of the\ntorque disturbance increases.\n\nHowever, SO(3)/0 is not able to achieve the commanded attitude in the presence\nof either gyro bias or zero-mean white measurement noise.\n\n6 M2S Examples\n\n6.1 M2S Examples without Disturbances\n\nNext, we consider M2S maneuvers. For spins about a principal axis, Euler\u2019s equa-\ntion becomes a linear second-order system, and thus integrators in the controller\nare not required to stabilize spin commands. As shown in Figure 11, SO(3)/0 can\nstabilize spins about a principal axis. Figure 12 shows, however, that SO(3)/0\ncannot follow spin commands about a non-principal axis.\n\n6.2 M2S Examples with Disturbances\n\nFigure 13 shows that SO(3)/3 and SO(3)/9 can achieve spins about a non-\nprincipal axis in the presence of constant torque disturbances.\n\nFigure 14 shows that SO(3)/6 is able to follow spin commands about a non-\nprincipal axis, albeit with large settling times. In the presence of a torque distur-\nbance, SO(3)/6 cannot follow spin commands, and the resulting spin is about an\nincorrect axis. Consistent with [17, pp. 377], Figure 14 also confirms that non-\nprincipal-axis spins are unstable, since the spacecraft attitude diverges when the\ninput torque is switched off.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 529\n\n0 100 200 300 400\n0\n\n0.5\n\n1\n\n1.5\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(a) SO(3)/3. Eigenaxis\nattitude error.\n\n0 100 200 300 400\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(b) SO(3)/3. Torque input\n\n0 1000 2000 3000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nM\na\ng\nn\nifi\n\ned\n(N\n\n-m\n)\n\nu1\n\nu2\n\nu3\n\n(c) SO(3)/3. Torque input\nzoomed.\n\n0 1000 2000 3000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nG\nra\n\nv\nit\ny\n\nG\nra\n\nd\nie\n\nn\nt\n\nT\no\nrq\n\nu\ne\n\n(N\n-m\n\n)\n\n?g1\n\n?g2\n\n?g3\n\n(d) SO(3)/3. Gravity gradient\ndisturbance torque.\n\n0 50 100 150 200 250\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(e) SO(3)/9. Eigenaxis error.\n\n0 50 100 150 200 250\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(f) SO(3)/9. Torque input.\n\n0 1000 2000 3000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nM\na\ng\nn\nifi\n\ned\n(N\n\n-m\n)\n\nu1\n\nu2\n\nu3\n\n(g) SO(3)/9. Torque input\nzoomed.\n\n0 1000 2000 3000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nG\nra\n\nv\nit\ny\n\nG\nra\n\nd\nie\n\nn\nt\n\nT\no\nrq\n\nu\ne\n\n(N\n-m\n\n)\n\n?g1\n\n?g2\n\n?g3\n\n(h) SO(3)/9. Gravity gradient\ndisturbance torque.\n\nFig. 4. Gravity gradient disturbance rejection for SO(3)/3 and SO(3)/9. The com-\nmanded maneuver is a 90-deg rotation about the body-fixed direction [0 1 0]T. The\nspacecraft is stabilized, and the disturbance torque is rejected. Note that the control\ninput is the mirror image of the disturbance torque once that the commanded attitude\nis achieved.\n\n\n\n530 M. Camblor et al.\n\n0 2000 4000 6000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nG\nra\n\nv\nit\ny\n\nG\nra\n\nd\nie\n\nn\nt\n\nT\no\nrq\n\nu\ne\n\n(N\n-m\n\n)\n\nSphere: ? = 0\n\n? = 0.3\n\n? = 0.6\n\nThin cylinder: ? = 1\n\n(a) SO(3)/3. Gravity gradient\ndisturbance torque.\n\n0 2000 4000 6000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\n(N\n-m\n\n)\n\nSphere: ? = 0\n\n? = 0.3\n\n? = 0.6\n\nThin cylinder: ? = 1\n\n(b) SO(3)/3. Torque input.\n\n0 2000 4000 6000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nG\nra\n\nv\nit\ny\n\nG\nra\n\nd\nie\n\nn\nt\n\nT\no\nrq\n\nu\ne\n\n(N\n-m\n\n)\n\nSphere: ? = 0\n\n? = 0.3\n\n? = 0.6\n\nThin cylinder: ? = 1\n\n(c) SO(3)/9. Gravity gradient\ndisturbance torque.\n\n0 2000 4000 6000\n?2\n\n?1\n\n0\n\n1\n\n2 x 10\n?5\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\n(N\n-m\n\n)\n\nSphere: ? = 0\n\n? = 0.3\n\n? = 0.6\n\nThin cylinder: ? = 1\n\n(d) SO(3)/9. Torque input.\n\nFig. 5. Gravity-gradient disturbance rejection for SO(3)/3 and SO(3)/9. The com-\nmanded motion is along a circular orbit with R(0) = I and the commanded attitude\nRd = I . Note that the inertially constant pointing command is achieved despite the\npresence of an attitude-dependent sinusoidal disturbance due to gravity gradients. Note\nthat the control input is the mirror image of the disturbance torque.\n\n0 0.5 1 1.5 2\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nDisturbance (N-m)\n\nS\nte\n\na\nd\ny\n\nS\nta\n\nte\nE\n\nrr\no\nr\n\n(r\na\nd\n) SO(3)/0\n\nSO(3)/6\n\n(a) R2R steady-state error for\nSO(3)/0 and SO(3)/6.\n\n0 0.2 0.4 0.6 0.8 1\n20\n\n40\n\n60\n\n80\n\n100\n\n120\n\n140\n\nDisturbance (N-m)\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(r\na\nd\n)\n\nSO(3)/3\n\nSO(3)/9\n\n(b) R2R settling time for\nSO(3)/3 and SO(3)/9.\n\nFig. 6. Inertially constant disturbance-torque rejection about the inertially fixed direc-\ntion [0 0 1]T. The maneuver is a 40-deg rotation about the body-fixed direction [1 1 1]T.\nThe control laws SO(3)/0 and SO(3)/6 bring the spacecraft to rest with an attitude\noffset, whereas SO(3)/3 and SO(3)/9 bring the spacecraft to rest with the commanded\nattitude. Note that SO(3)/6 and SO(3)/9 perform substantially better than SO(3)/0\nand SO(3)/3.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 531\n\n0 0.1 0.2 0.3 0.4\n0\n\n50\n\n100\n\n150\n\n200\n\nTorque Saturation Level (N-m)\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\n(a) SO(3)/0.\n\n0 1 2 3 4\n20\n\n40\n\n60\n\n80\n\n100\n\n120\n\nTorque Saturation Level (N-m)\n\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\nSO(3)/3\n\nSO(3)/6\n\nSO(3)/9\n\n(b) SO(3)/3, SO(3)/6, and SO(3)/9.\n\nFig. 7. R2R settling time as a function of the control-torque saturation level on all\nthree axes. The maneuver is a 40-deg rotation about the body-fixed direction [1 1 1]T.\nNote that, at low saturation levels, SO(3)/0 stabilizes the spacecraft, whereas SO(3)/3,\nSO(3)/6, and SO(3)/9 fail. Saturation does not affect the performance of SO(3)/0 for\nsaturation levels greater than 0.3 N-m.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(a) SO(3)/0.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(b) SO(3)/3.\n\n0 50 100 150\n0\n\n0.5\n\n1\n\n1.5\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(c) SO(3)/6.\n\n0 50 100 150\n0\n\n0.5\n\n1\n\n1.5\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(d) SO(3)/9.\n\nFig. 8. Performance comparison using on-off thrusters. The maneuver is a 40-deg rota-\ntion about the body-fixed direction [1 1 1]T. The tuning parameters and control-torque\nmagnitude are the same in all four cases.\n\n\n\n532 M. Camblor et al.\n\n0 0.05 0.1 0.15 0.2\n0\n\n50\n\n100\n\n150\n\n200\n\nDeadzone width (N-m)\nS\net\n\ntl\nin\n\ng\nT\n\nim\ne\n\n(s\nec\n\n)\n\nSO(3)/0\n\nSO(3)/3\n\nSO(3)/6\n\nSO(3)/9\n\nFig. 9. R2R settling time for all four control laws as a function of the width of an\nunknown control-torque deadzone. The maneuver is a 40-deg rotation about the body-\nfixed direction [1 1 1]T. Note that, for deadzones of small width, SO(3)/0 fails to\nstabilize the spacecraft, whereas SO(3)/3, SO(3)/6, and SO(3)/9 can stabilize at much\nhigher control-torque deadzones.\n\n7 Comparison to Classical Optimal Control\n\nClassical optimal control laws have been applied extensively to spacecraft rota-\ntional maneuvers [20\u201322]. These control laws are based on the minimum princi-\nple, and, unlike the inertia-free SO(3) control laws considered in this paper, they\nassume exact knowledge of the inertia properties of the spacecraft. Nevertheless,\nit is useful to compare the performance of these control laws to the SO(3) control\nlaws in order to assess the effect of inertia uncertainty modeling information.\n\nFor 3-axis maneuvers, the control laws given in [20\u201322] involve complicated\nswitching strategies. For simplicity, we therefore assume that the commanded\nmaneuver is about the major axis only, giving double integrator dynamics, and\nwith the direction and moment of inertia of the major axis assumed to be known.\nUsing the classical time-optimal control law\n\nu = ?umaxsign\n(\n? ? J\n\n2umax\n??|??|\n\n)\n, (26)\n\nwhere umax > 0 is the control-torque magnitude and ? is the rotation angle about\nthe major axis, we simulate the closed-loop system and compare the settling\ntime to that of the SO(3) control laws operating in on-off mode with the same\nmagnitude as (26). Note that the inertia in (26) is the true spacecraft inertia.\nTo determine the performance of (26) under imperfect modeling information,\nwe then introduce uncertainty about both the major moment of inertia and the\ndirection of the major axis. Comparisons with the SO(3) control laws provide\na baseline tradeoff between settling time and modeling accuracy. The results of\nthese comparisons are shown in Figures 15 and 16.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 533\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(a) SO(3)/0. Gyro bias.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(b) SO(3)/3. Gyro bias.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(c) SO(3)/6. Gyro bias.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nTime (sec)\nE\n\nig\nen\n\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(d) SO(3)/9. Gyro bias.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(e) SO(3)/0. Zero-mean white\ngyro measurement noise.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(f) SO(3)/3. Zero-mean white\ngyro measurement noise.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(g) SO(3)/6. Zero-mean white\ngyro measurement noise.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(h) SO(3)/9. Zero-mean white\ngyro measurement noise.\n\nFig. 10. (a)\u2013(d) Controller performance in the presence of a gyro bias of [0 0 0.01]T\n\nrad/sec. (e)\u2013(h) Comparison of controller sensitivity to zero-mean white gyro measure-\nment noise with a signal-to-noise ratio of 20. All four controllers are able to bring the\nspacecraft to rest. However, SO(3)/0 is not able to stabilize to the correct attitude with\neither gyro bias or white noise. In all simulations, the maneuver is a 40-deg rotation\nabout the body-fixed direction [1 1 1]T. The tuning parameters and signal-to-noise\nratio are kept the same.\n\n\n\n534 M. Camblor et al.\n\n0 100 200 300\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nx\nis\n\nA\ntt\n\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(a) Eigenaxis error.\n\n0 100 200 300\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\nTime (sec)\n\nA\nn\ngu\n\nla\nr\n\nV\nel\n\no\nci\n\nty\n(r\n\na\nd\n/\nse\n\nc) ?1\n?2\n\n?3\n\n(b) Angular velocity components.\n\n0 100 200 300\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nts\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(c) Torque inputs.\n\n0 100 200 300\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nN\no\nrm\n\n(N\n-m\n\n)\n\n(d) Torque input 2-norm.\n\n0 100 200 300\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\nTime (sec)\n\n||\nS\n||\n\n(r\na\nd\n)\n\n(e) 2-norm of S.\n\nFig. 11. R2S maneuver for SO(3)/0 with ?d = [0 0 0.3]\nT rad/sec. The spacecraft is\n\ninitially at rest with R = I and Rd(0) = I . The controller is able to follow the spin\ncommand, which is about a principal axis.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 535\n\n0 100 200 300\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(a) Eigenaxis error.\n\n0 100 200 300\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\nA\nn\ngu\n\nla\nr\n\nV\nel\n\no\nci\n\nty\n(r\n\na\nd\n/\nse\n\nc) ?1\n?2\n\n?3\n\n(b) Angular velocity components.\n\n0 100 200 300\n?1\n\n?0.5\n\n0\n\n0.5\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nts\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(c) Torque inputs.\n\n0 100 200 300\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nN\no\nrm\n\n(N\n-m\n\n)\n\n(d) Torque input 2-norm.\n\n0 100 200 300\n0\n\n1\n\n2\n\n3\n\n4\n\n5\n\nTime (sec)\n\n||\nS\n||\n\n(r\na\nd\n)\n\n(e) 2-norm of S.\n\nFig. 12. R2S maneuver for SO(3)/0 with ?d = [0.2 ?0.5 0.3]T rad/sec. The spacecraft\nis initially at rest with R = I and Rd(0) = I . The controller spins the spacecraft with\nthe commanded angular rate but about an incorrect axis, as shown by the attitude\nerror. Thus SO(3)/0 cannot follow the spin command, which is about a non-principal\naxis.\n\n\n\n536 M. Camblor et al.\n\n0 100 200 300\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(a) SO(3)/3. Eigenaxis error.\n\n0 100 200 300\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\nA\nn\ngu\n\nla\nr\n\nV\nel\n\no\nci\n\nty\n(r\n\na\nd\n/\nse\n\nc) ?1\n?2\n\n?3\n\n(b) SO(3)/3. Angular velocity\ncomponents.\n\n0 100 200 300\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nts\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(c) SO(3)/3. Torque inputs.\n\n0 100 200 300\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nN\no\nrm\n\n(N\n-m\n\n)\n\n(d) SO(3)/3. Torque input\n2-norm.\n\n0 100 200 300\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(e) SO(3)/9. Eigenaxis error.\n\n0 100 200 300\n?1\n\n?0.5\n\n0\n\n0.5\n\nTime (sec)\n\nA\nn\ngu\n\nla\nr\n\nV\nel\n\no\nci\n\nty\n(r\n\na\nd\n/\nse\n\nc) ?1\n?2\n\n?3\n\n(f) SO(3)/9. Angular velocity\ncomponents.\n\n0 100 200 300\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nts\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(g) SO(3)/9. Torque inputs.\n\n0 100 200 300\n0\n\n1\n\n2\n\n3\n\n4\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nN\no\nrm\n\n(N\n-m\n\n)\n\n(h) SO(3)/9. Torque input\n2-norm.\n\nFig. 13. R2S maneuver for ?d = [0.2 ?0.5 0.3]T rad/sec with gravity gradient distur-\nbance and the body-constant disturbance torque d = [0 0 0.2]T N-m for SO(3)/3 and\nSO(3)/9. The spacecraft is initially at rest with R = I and Rd(0) = I . The controller\nrejects the disturbances and follows the spin command.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 537\n\n0 200 400 600\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n(a) SO(3)/6. Eigenaxis error.\n\n0 200 400 600\n?1\n\n?0.5\n\n0\n\n0.5\n\nTime (sec)\n\nA\nn\ngu\n\nla\nr\n\nV\nel\n\no\nci\n\nty\n(r\n\na\nd\n/\nse\n\nc) ?1\n?2\n\n?3\n\n(b) SO(3)/6. Angular velocity.\n\n0 200 400 600\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nts\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(c) SO(3)/6. Torque inputs.\n\n0 200 400 600\n0\n\n1\n\n2\n\n3\n\n4\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nN\no\nrm\n\n(N\n-m\n\n)\n\n(d) SO(3)/6. Torque input norm.\n\n0 200 400 600 800 1000\n0\n\n1\n\n2\n\n3\n\n4\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(e) SO(3)/3. Eigenaxis error.\n\n0 200 400 600 800 1000\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nTime (sec)\n\nA\nn\ngu\n\nla\nr\n\nV\nel\n\no\nci\n\nty\n(r\n\na\nd\n/\nse\n\nc) ?1\n?2\n\n?3\n\n(f) SO(3)/3. Angular velocity.\n\n0 200 400 600 800 1000\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(g) SO(3)/3. Torque inputs.\n\n0 200 400 600 800 1000\n0\n\n0.5\n\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\nN\no\nrm\n\n(N\n-m\n\n)\n\n(h) SO(3)/3. Torque input\nnorm.\n\nFig. 14. R2S maneuver for SO(3)/6 and SO(3)/3 with ?d = [0.2 ?0.5 0.3]T rad/sec.\nThe spacecraft is initially at rest with R = I and Rd(0) = I . The controllers follow the\nspin command. In the case of SO(3)/3, the torque input is switched off at time t = 500\nsec to show the instability of the commanded spin about a non-principal axis.\n\n\n\n538 M. Camblor et al.\n\n0 20 40 60\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(a) SO(3)/0 control law.\n\n0 50 100 150\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(b) SO(3)/3 control law.\n\n0 20 40 60\n0\n\n0.5\n\n1\n\n1.5\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(c) SO(3)/6 control law.\n\n0 20 40 60\n0\n\n0.5\n\n1\n\n1.5\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(d) SO(3)/9 control law.\n\n0 5 10 15 20\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(e) Bang-bang control law.\n\nFig. 15. Convergence-time comparison for the SO(3) control laws using on-off thrusters\nand the classical optimal bang-bang control law. The maneuver is a 30-deg rotation\nabout the body-fixed principal-axis direction [1 0 0]T. The torque on-level umax = 0.5\nN-m is the same for all controllers. The inertia used in the optimal bang-bang control\nlaw is the true spacecraft inertia J .\n\n0 5 10 15 20\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime (sec)\n\nE\nig\n\nen\na\nxi\n\ns\nA\n\ntt\nit\nu\nd\ne\n\nE\nrr\n\no\nr\n\n(r\na\nd\n)\n\n?\n\n(a) Eigenaxis error.\n\n0 5 10 15 20\n?0.2\n\n?0.1\n\n0\n\n0.1\n\n0.2\n\nTime (sec)\n\nA\nn\ngu\n\nla\nr\n\nV\nel\n\no\nci\n\nty\n(r\n\na\nd\n/\nse\n\nc) ?1\n?2\n\n?3\n\n(b) Angular velocity.\n\n0 5 10 15 20\n?0.5\n\n0\n\n0.5\n\nTime (sec)\n\nT\no\nrq\n\nu\ne\n\nIn\np\nu\nt\n\n(N\n-m\n\n)\n\nu1\n\nu2\n\nu3\n\n(c) Torque input.\n\nFig. 16. Performance of the classical optimal bang-bang control law in the presence\nof an inertia error. The actual bang-bang inertia matrix is rotated relative to the\ntrue spacecraft inertia matrix. This inertia misalignment is a 5-deg rotation about the\nbody-fixed direction [0 1 0]T. The commanded maneuver is a 30-deg rotation about\nthe body-fixed direction [1 0 0]T. Note that a slight inertia misalignment leads to failure\nof the bang-bang control law.\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 539\n\nTable 2. Summary of controller capabilities. Motion to rest (M2R), gravity gradient\ndisturbances (GG), constant torque disturbance (in body frame) (BD), constant torque\ndisturbance (in inertial frame) (ID), torque saturation level (SAT), unknown control-\ntorque deadzone (DZ), and on-off thruster actuation (ON/OFF). The notation used is,\nY, N: Yes or no; L, S: based on Lyapunov theory or based on simulation.\n\nManeuver SO(3)/0 SO(3)/3 SO(3)/6 SO(3)/9\n\nM2R Y/L Y/S Y/S Y/L\nM2R + ID N/S Y/S N/S Y/L\nM2R + GG + BD N/S Y/S N/S Y/L\nM2R + SAT Y/S Y/S Y/S Y/S\nM2R + DZ Y/S Y/S Y/S Y/S\nM2R + ON/OFF Y/S Y/S Y/S Y/S\nM2R + GYRO BIAS N/S Y/S Y/S Y/S\nM2R + WHITE NOISE N/S Y/S Y/S Y/S\nM2S N/S Y/S Y/S Y/L\nM2S + BD N/S Y/S N/S Y/L\nM2S + SAT N/S Y/S Y/S Y/S\n\n8 Conclusions\n\nWe compared four inertia-free PID-type spacecraft attitude control laws\n(SO(3)/0, SO(3)/3, SO(3)/6, SO(3)/9) under M2R and M2S command scenarios\nwith various types of disturbances. All four controllers are able to achieve M2R\nand M2S around a principal axis in the absence of disturbances. In addition,\nSO(3)/3 and SO(3)/9 can achieve M2R and M2S in the presence of inertially\nconstant and body-constant disturbances, and M2R in the presence of iner-\ntially time-varying disturbances around both principal and non-principal axes.\nNote that SO(3)/3 needs six fewer integrators than SO(3)/9, although SO(3)/9\nachieves the commanded motion in less time.\n\nFurthermore, all four controllers achieve M2R in the presence of torque satura-\ntion. For this objective, SO(3)/0 can stabilize the spacecraft with a significantly\nlower level of saturation than SO(3)/3, SO(3)/6, and SO(3)/9. For M2S ma-\nneuvers, SO(3)/0 is not effective, although SO(3)/3, SO(3)/6, and SO(3)/9 are\neffective for arbitrary spin axes. Table 2 summarizes the cases for which each\nSO(3) control law is able or not able to achieve the commanded maneuver.\n\nFor an unknown control-torque deadzone nonlinearity, we found that SO(3)/6\nand SO(3)/9 are less sensitive to this nonlinearity. For on-off control torques,\nSO(3)/3 is the most accommodating. We also compared performance when sen-\nsor noise is present. In this case, SO(3)/3, SO(3)/6, and SO(3)/9 can stabilize\nM2R maneuvers despite gyro bias or white noise.\n\nFuture research will focus on a Lyapunov foundation for SO(3)/3 as well as\nextensions to spacecraft with wheels. Preliminary results are given in [19, 23].\n\n\n\n540 M. Camblor et al.\n\nReferences\n\n1. Junkins, J.L., Akella, M.R., Robinett, R.D.: Nonlinear Adaptive Control of Space-\ncraft Maneuvers. AIAA J. Guid. Contr. Dyn. 20, 1104\u20131110 (1997)\n\n2. Egeland, O., Godhavn, J.M.: Passivity-Based Adaptive Attitude Control of a Rigid\nSpacecraft. IEEE Transactions on Automatic Control 39, 842\u2013846 (1994)\n\n3. Ahmed, J., Coppola, V.T., Bernstein, D.S.: Asymptotic Tracking of Spacecraft\nAttitude Motion with Inertia Identification. AIAA J. Guid. Contr. Dyn. 21, 684\u2013\n691 (1998)\n\n4. Wen, J.T.Y., Kreutz-Delgado, K.: The Attitude Control Problem. IEEE Transac-\ntions on Automatic Control 36, 1148\u20131162 (1991)\n\n5. Bhat, S.P., Bernstein, D.S.: A Topological Obstruction to Continuous Global Sta-\nbilization of Rotational Motion and the Unwinding Phenomenon. Sys. Contr.\nLett. 39, 63\u201370 (2000)\n\n6. Wie, B., Barba, P.M.: Quaternion Feedback for Spacecraft Large Angle Maneuvers.\nAIAA J. Guid. Contr. Dyn. 8, 360\u2013365 (1985)\n\n7. Joshi, S.M., Kelkar, A.G., Wen, J.T.: Robust Attitude Stabilization Using Nonlin-\near Quaternion Feedback. IEEE Trans. Autom. Contr. 40, 1148\u20131161 (1995)\n\n8. Crassidis, J.L., Vadali, S.R., Markley, F.L.: Optimal Variable-Structure Control\nTracking of Spacecraft Maneuvers. AIAA J. Guid. Contr. Dyn. 23, 564\u2013566 (2000)\n\n9. Mayhew, C.G., Sanfelice, R.G., Teel, A.R.: Quaternion-Based Hybrid Control for\nRobust Global Attitude Tracking. IEEE Trans. Autom. Contr. 56, 2555\u20132566\n(2011)\n\n10. Chaturvedi, N., Sanyal, A.K., McClamroch, N.H.: Rigid Body Attitude Control:\nUsing Rotation Matrices for Continuous, Singularity-free Control Laws. IEEE\nContr. Sys. Mag. 31(3), 30\u201351 (2011)\n\n11. Koditschek, D.E.: The Application of Total Energy as a Lyapunov Function for\nMechanical Control Systems. In: Proc. AMS-IMS-SIAM Joint Summer Research\nConference, AMS Dynamics and Control of Multibody Systems, pp. 131\u2013157 (1988)\n\n12. Chaturvedi, N.A., McClamroch, N.H., Bernstein, D.S.: Asymptotic Smooth Stabi-\nlization of the Inverted 3D Pendulum. IEEE Trans. Automa. Contr. 54, 1204\u20131215\n(2009)\n\n13. Chaturvedi, N.A., McClamroch, N.H., Bernstein, D.S.: Stabilization of a 3D Axi-\nally Symmetric Pendulum. Automatica 44, 2258\u20132265 (2008)\n\n14. Chaturvedi, N.A.: Global Dynamics and Stabilization of Rigid Body Attitude Sys-\ntems. PhD thesis, University of Michigan, Ann Arbor, MI (2007)\n\n15. Sanyal, A., Fosbury, A., Chaturvedi, N., Bernstein, D.S.: Inertia-Free Spacecraft\nAttitude Tracking with Disturbance Rejection and Almost Global Stabilization.\nAIAA J. Guid. Contr. Dyn. 32, 1167\u20131178 (2009)\n\n16. Bullo, F., Lewis, A.D.: Geometric Control of Mechanical Systems. Springer (2005)\n17. Wie, B.: Space Vehicle Dynamics and Control, vol. 2. AIAA (2008)\n18. Cruz, G., Yang, X., Weiss, A., Kolmanovsky, I., Bernstein, D.S.: Torque-saturated,\n\nInertia-free Spacecraft Attitude Control. AIAA\u20132011\u20136507 (August 2011)\n19. Weiss, A., Kolmanovsky, I., Bernstein, D.S., Sanyal, A.: Inertia-Free Spacecraft\n\nAttitude Control Using Reaction Wheels. AIAA J. Guid. Contr. Dyn. 36, 1425\u2013\n1439 (2013)\n\n20. Junkins, J.L., Turner, J.D.: Optimal Spacecraft Rotational Maneuvers. Elsevier,\nAmsterdam (1986)\n\n21. Bai, K.D., Wie, B.: Time-Optimal Three-Axis Reorientation of a Rigid Spacecraft.\nAIAA J. Guid. Contr. Dyn. 16, 446\u2013452 (1993)\n\n\n\nInertia-Free Spacecraft Attitude Control Laws 541\n\n22. Bai, X., Junkins, J.L.: New Results for Time-Optimal Three-Axis Reorientation of\na Rigid Spacecraft. AIAA J. Guid. Cont. Dyn. 32, 1071\u20131076 (2009)\n\n23. Agarwal, K., Weiss, A., Kolmanovsky, I., Bernstein, D.S.: Inertia-Free Spacecraft\nAttitude Control with Control-Moment-Gyro Actuation. In: Proc. AIAA Guid.\nNav. Contr. Conf. AIAA-2012-5003-282 (August 2012)\n\n\n\nEditors Biography\n\nDaniel Choukroun received the B.Sc. (summa cum\nlaude), M.Sc., and Ph.D. degrees in 1997, 2000, and\n2003, respectively, from Technion \u2013 Israel Institute of\nTechnology, Faculty of Aerospace Engineering. He also\nreceived the title Engineer under Instruction from the\nEcole Nationale de l\u2019Aviation Civile, France, in 1994,\nand a Master in Space Systems Engineering from Delft\nUniversity of Technology, Netherlands, in 2011. From\n1998 to 2003, he was a teaching and research assistant\nin the field of automatic control at Technion\u2014Israel In-\n\nstitute of Technology. From 2003 to 2006, he has been a postdoctoral fellow and\na lecturer at the University of California at Los Angeles in the Department of Me-\nchanical and Aerospace Engineering. Since 2006, he has been with the Department\nof Mechanical Engineering at Ben-Gurion University of the Negev, Israel. Between\n2010 and 2014 he was with the Faculty of Aerospace Engineering at Delft Univer-\nsity of Technology, The Netherlands, on a leave from Ben-Gurion University. He\nwas Invited Lecturer at MAST - Master in Aerospace Science and Technology, Uni-\nversitat Politecnica de Catalunya, Barcelona, Spain (2009), Visiting Assistant Pro-\nfessor at Universit\u00e9 Paul Sabatier and LAAS/CNRS \u2013 Laboratoire d\u2019Architecture et\nd\u2019Analyse de Syst\u00e8mes, Toulouse, France (2010), and Invited Lecturer at the Eu-\nropean Space Agency graduate students courses for the European Student Earth\nOrbiter mission (2013).\n\nDr. Choukroun received the Miriam and Aaron Gutwirth Special Excellency\nAward for achievement in research from Technion\u2014Israel Institute of Technology.\nHis is co-author on the best paper awarded at the 2nd CEAS Specialist Conference\non Guidance, Navigation, and Control Conference in the graduate student competi-\ntion.\n\nHe has authored and co-authored more than 60 papers in archival journals,\ninternational conference proceedings, and collective volumes, and has edited two\ncollective volumes. His research has been supported by the Israel Science Founda-\ntion (ISF), the European Space Agency (ESA Education Office), and the German\n\n\n\n544 Editors Biography\n\nSpace Center (DLR/Oberpfaffenhofen). He is a member of the AIAA Technical\nCommittee on Guidance Navigation and Control, of the CEAS-Council of Euro-\npean Aerospace Societies Technical Committee on Guidance, Navigation and Con-\ntrol, and of the EUCASS-European Conference of AeroSpace Sciences Board. Dr.\nChoukroun serves as technical editor in Guidance and Control for the IEEE Trans-\nactions on Aerospace and Electronic Systems, and as Guidance and Control field\neditor for the CEAS Space Journal.\n\n\n\nEditors Biography 545\n\nJulie Thienel received her BS in Aerospace Engineering\nfrom the University of Arizona in 1986. She received an\nMS in Applied Physics from the Johns Hopkins Univer-\nsity in 1989, and a PhD in Aerospace Engineering from\nthe University of Maryland in 2004.\n\nDr. Thienel started with the NASA Goddard Space\nFlight Center in 1986 and worked in spacecraft guid-\nance, navigation and control. From 2006-2010 she was\non the faculty of the Aerospace Engineering Depart-\nment of the US Naval Academy. In 2010 she returned\nto NASA Goddard as a proposal manager, leading new\nbusiness efforts for missions and instruments.\n\nDr. Thienel is an Associate Fellow of the AIAA, and has served on the AIAA\nGuidance, Navigation, and Control technical committee. Dr. Thienel served as the\nTechnical Chair of the AIAA GNC conference in 2009 and as the General Chair\nin 2012. She is the recipient of numerous NASA Goddard awards and holds a US\nPatent on a GPS/Magnetometer navigation system.\n\n\n\n546 Editors Biography\n\nMoshe Idan received his B.Sc. and M.Sc. degrees from\nthe Faculty of Aerospace Engineering at the Technion\nin 1983 and 1986, respectively. He earned his Ph.D.\nfrom the Department of Aerospace Engineering at Stan-\nford University in 1990. Since 1991, Dr. Idan has been\nwith the Faculty of Aerospace Engineering at the Tech-\nnion. In 2000-2001 he was a visiting research scholar at\nthe School of Aerospace Engineering at Georgia Tech,\nand in 2007-2009 he spent a two year sabbatical at the\nDepartment of Mechanical and Aerospace Engineering\n\nin UCLA. Dr. Idan is an Associate Fellow of the AIAA, serves as an international\nmember the Guidance Navigation and Control technical committee of the AIAA,\nand is an Associate Editor for Guidance and Control for the IEEE Transactions on\nAerospace and Electronic Systems. His current research interests include robust and\nadaptive flight control system design techniques and applications, innovative future\nair traffic control concepts, and control and estimation of systems with non-Gaussian\nnoises.\n\n\n\nEditors Biography 547\n\nYaakov Oshman received his B.Sc. (summa cum laude)\nand D.Sc. degrees, both in Aeronautical Engineering, from\nthe Technion\u2014Israel Institute of Technology, Haifa, Is-\nrael, in 1975 and 1986, respectively.\n\nFrom 1975 to 1981 he was with the Israeli Air Force,\nwhere he worked in the areas of structural dynamics and\nflutter analysis and flight testing. In 1987 he was a Re-\nsearch Associate at the Department of Mechanical and\nAerospace Engineering of the State University of New\nYork at Buffalo, where he was, in 1988, a Visiting Pro-\nfessor. Since 1989 he has been with the Department of\n\nAerospace Engineering at the Technion\u2014Israel Institute of Technology, where he\nis presently a Professor and Dean, and incumbent of the Louis and Helen Rogow\nChair in Aeronautical Engineering.\n\nDr. Oshman is a member of the Technion\u2019s Asher Space Research Institute. He\nheaded the Technion\u2019s Philadelphia Flight Control Laboratory (1993 \u2013 1996). Dur-\ning the 1996/7 and 1997/8 academic years he spent a sabbatical with the Guidance,\nNavigation and Control Center of NASA\u2019s Goddard Space Flight Center, where he\nworked in research and development of spacecraft attitude estimation algorithms.\nHe has consulted to RADA Electronic Industries Ltd., RAFAEL Advanced Defense\nSystems Ltd., Israeli Ministry of Defense, and Israel Aerospace Industries (MBT\nMissile Division). His research has been supported by the Israeli Aircraft Indus-\ntries, the Israeli Ministry of Defense, the U.S. Air Force Office of Scientific Re-\nsearch (AFOSR), RAFAEL Advanced Defense Systems Ltd., and the Israeli Science\nFoundation (ISF), as well as by various Technion research grants.\n\nDr. Oshman served as President of the Israeli Association for Automatic Con-\ntrol, a national member organization of the International Federation of Automatic\nControl (IFAC), between 2003\u20142008. He was a member of the national board of\nthe Israeli Society of Aeronautics and Astronautics between 2004\u20142009. He was\na member of the AIAA Guidance, Navigation, and Control Technical Committee\nbetween 2002\u20142008, an International Advisor (member of the editorial board) of\nthe AIAA Journal of Guidance, Control and Dynamics between 2002\u20142009, and a\n(founding) Technical Editor for Guidance and Control Systems for the IEEE Trans-\nactions on Aerospace and Electronic Systems between 2005\u20142011. He was a mem-\nber of the Board of Governors of the IEEE Aerospace and Electronic Systems So-\nciety (AESS) between 2008\u20142010, and serves as Chair of the Israeli Chapter of\nIEEE/AESS since 2010.\n\nDr. Oshman\u2019s research interests are in advanced estimation, tracking, information\nfusion and control methods and their applications in aerospace guidance, naviga-\ntion, and control systems, including structural estimation and control, flow control,\nand health monitoring/fault detection and isolation (FDI) systems. He has published\nover 150 journal and conference papers and book chapters, and numerous technical\nreports in these areas. He is a co-author of the paper that was awarded the Best Paper\nAward of the 2002 AIAA Astrodynamics Specialist Conference, and a co-author and\nadvisor of the paper that was awarded the Best Paper Award of the 2004 AIAA Guid-\n\n\n\n548 Editors Biography\n\nance, Navigation and Control Conference. He received the Technion\u2019s Raymond and\nMiriam Klein Research Prize for his research on enhanced air-to-air missile tracking\nusing target orientation observations (2002), the Technion\u2019s Meir Hanin Research\nPrize for his work on spacecraft angular velocity estimation (2004), which has been\nput to use in the Israeli AMOS-2 communication satellite, and multiple Technion\nawards for outstanding teaching. He has been on the program committees of over a\ndozen international conferences.\n\nDr. Oshman is a Fellow of the American Institute of Aeronautics and Astronau-\ntics (AIAA), and a Fellow of the Institute of Electrical and Electronics Engineers\n(IEEE).\n\n\n\nAuthor Index\n\nAguiar, A. Pedro 209\n\nBaldwin, Morgan 495\nBanas, William D. 439\nBar-Shalom, Yaakov 21\nBerman, Zeev 179, 191\nBernstein, Dennis S. 517\nBiswas, Sanat Kumar 371\n\nCamblor, Marc 517\nChagas, Ronan Arraes Jardim 135, 235\nCheng, Yang 439\nChoukroun, Daniel 329\nCichella, Venanzio 209\nCrassidis, John L. 439\nCruz, Gerardo 517\n\nDi Corato, Francesco 291\nDobrokhodov, Vladimir 209\n\nEsteban, Sergio 517\nEtzion, Joseph 3\n\nFern\u00e1ndez, Javier 95\nFridman, Leonid M. 159\n\nGeller, David K. 351, 453\nGhabcheloo, Reza 209\n\nHablani, Hari B. 371, 413\nHajiyev, Chingiz 391\nHalevi, Yoram 79\nHexner, Gy\u00f6rgy 65\nHovakimyan, Naira 209\n\nIdan, Moshe 95\nInnocenti, Mario 291\n\nJah, Moriba 477\n\nKaminer, Isaac 209\nKlein, Itzik 351\nKolmanovsky, Ilya V. 477, 495, 517\n\nLeiter, Noam 453\nLeve, Frederick 477\nLustosa, Leandro Ribeiro 275\n\nNegrete-Chavez, Daniel Yitzjak 159\n\nPachter, Meir 309\nPascoal, Ant\u00f3nio Manuel 209\nPeled-Eitan, Liat 43\nPetersen, Christopher 495\nPollini, Lorenzo 291\n\nRahman, Yousaf 517\nRapoport, Ilia 329\nRelyea, Andrew 309\nRusnak, Ilan 43, 65\n\nSakai, Shin-ichiro 391\nScott Erwin, Richard 495\nSoken, Halil Ersin 391\nSpeyer, Jason L. 95\nStoica, Adrian-Mihail 259\n\nTemeltas, Hakan 119\nTian, Xin 21\n\n\n\n550 Author Index\n\nUlas, Cihan 119\nUnhelkar, Vaibhav V. 413\n\nWaldmann, Jacques 135, 235, 275\nWeiss, Avishai 477, 495, 517\nWeiss, Haim 65\n\nXargay, Enric 209\n\nYaesh, Isaac 259\nYuan, Ting 21\n\n\n\tPreface\n\tContents\n\tPart I Estimation\n\tSteady-State Time Constant of the Kalman Filter\n\t1 Kalman Equations in Steady State\n\t2 Steady-State Solution of First-Order Filter\n\t3 Dynamic Response of First-Order Filter\n\t4 Steady-State Solution of Second-Order Filter\n\t5 Summary\n\tReferences\n\n\tTrack-to-Track Fusion in Linear and Nonlinear Systems\n\t1\nIntroduction\n\t2\nTrack-to-Track Fusion Configurations and the Impact of Information Feedback\n\t2.1\nT2TF without Memory\n\t2.2\nT2TF with Memory\n\n\t3\nImpact of Crosscorrelation on the Track-to-Track Fusion without Memory and No Feedback\n\t4\nThe Information Matrix Fusion\n\t4.1\nIMF with Full Communication Rate \u2013 IMFfcr\n\t4.2\nIMF with Reduced Communication Rate \u2013 IMFrcr\n\t4.3\nGeneralized Information Matrix Fusion for Asynchronous T2TF\n\n\t5\nHeterogenous Track-to-Track Fusion\n\t5.1\nThe Heterogenous Track-to-Track Fusion Problem \n\t5.2\nThe LMMSE Fuser\n\t5.3\nThe ML Fuser\n\n\t6\nExample\n\t7\nConclusions\n\n\tState Dependent Difference Riccati Equation BasedEstimation for 2D Spiraling Target Maneuver\n\t1 Introduction\n\t2 Problem Statement and Approach to the Solution\n\t2.1 Estimator for Linear System\n\t2.2 Estimators for Nonlinear System\n\n\t3 The Constant Acceleration Target Maneuver Model\n\t4 Kinematic Equations of Spiraling Target\n\t4.1 The Kinematics as a Function of Velocity\n\n\t5 The Variance and Spectrum of the Glint Noise\n\t6 Incorporation of the Kinematic Constraint\n\t6.1 Velocity Based Snap Kinematic Equation\n\n\t7 Planar Spiraling Target Maneuver Trajectory Model\n\t8 The SDDRE Based Discrete Estimator\n\t9 Simulation Results\n\t10 Conclusions\n\tReferences\n\n\tA Guaranteed Bound Filter for Polynomial Systems\n\t1\nIntroduction\n\t2\nProblem Statement\n\t3\nThe Data Processing Step\n\t4\nThe Time Update Step\n\t4.1\nCalculating A() and B()\n\n\t5\nOutline of the Filter Algorithm\n\t6\nAn Example\n\t7\nSummary and Conclusions\n\n\tReference Basis Model Updating \u2013 Following the Baruchand Bar-Itzhack Approach\n\t1 Introduction\n\t2 The General Model Updating Problem\n\t3 Reference Basis Model Updating\n\t3.1 Orthogonalization\n\t3.2 Stiffness Updating\n\t3.3 Alternative Formulation \u2013 Mass Matrix Update\n\n\t4 Generalized Reference Basis\n\t5 Generalized Reference Basis with Connectivity Constraints\n\t5.1 Connectivity\n\t5.2 Implicit Parameterization by Weighting Matrix Adjustment\n\t5.3 A Posteriori Connectivity Assignment\n\n\t6 Direct Method \u2013 Manifold Distance Minimization\n\t7 Conclusion\n\tReferences\n\n\tStochastic Estimation and Control for Linear Systems with Cauchy Noise\n\t1\nIntroduction\n\t2\nScalar Estimation Problem Formulation\n\t3\nOne Step\n\tMeasurement Update\n\tTime Update\n\tConditional pdf Factorization\n\n\t4\nThe General Form of the Cauchy Estimator\n\t4.1\nNumerical Example\n\n\t5\nStochastic Control Problem for Cauchy Uncertainties\n\t5.1\nDeterministic-Stochastic Decomposition of the State Dynamics\n\t5.2\nPerformance Index\n\t5.3\nCauchy Model Predictive Controller\n\t5.4\nLEG Model Predictive Control\n\t5.5\nNumerical Examples\n\t5.6\nMulti-step Numerical Examples\n\n\t6\nVector-State Cauchy Estimation\n\t6.1\nFormulation\n\t6.2\nCharacteristic Function for the Un-normalized Conditional pdf\n\t6.3\nConditional Mean and Variance\n\t6.4\nPropagation to k=2 and the Second Measurement Update\n\t6.5\nGeneral Form of Xk|Yk()\n\t6.6\nThe pdf of the Measurement History, the Conditional Mean, and the Conditional Variance\n\t6.7\nThe Two State Estimator\n\t6.8\nNumerical Examples of the Vector-State Cauchy Estimator\n\n\t7\nConclusions: Vector Cauchy Estimation and Control\n\n\tPlanar-Feature Based 3D SLAM Using RandomizedSigma Point Kalman Filters\n\t1 Introduction\n\t2 Sigma Point Kalman Filter\n\t2.1 Unscented Transformation\n\t2.2 Cubature Transformation\n\t2.3 Sigma Point Kalman Filters: UKF and CKF\n\t2.4 Problem Statement\n\n\t3 Randomized SPKF Based Slam\n\t3.1 Stochastic Integration Rule (SIR)\n\t3.2 Randomized Sigma Point Kalman Filter\n\t3.3 SLAM Based on RSPKF\n\n\t4 Performance Evaluat?ons\n\t4.1 Simulation Results in 2D\n\t4.2 Experimental Results in 3D\n\n\t5 Conclusion\n\tReferences\n\n\tA Novel Linear, Unbiased Estimator to Fuse Delayed Measurements in Distributed Sensor Networks with Application to UAV Fleet\n\t1\nIntroduction\n\t2\nCoordinate Frames\n\t3\nDistributed Estimation\n\t4\nDelayed Measurements\n\t4.1\nMeasurement Grouping\n\t4.2\nThe Reiterated Kalman Filter\n\t4.3\nMeasurement Transportation ChagasPhD\n\n\t5 UAV Fleet Problem Formulation\n\t6 Simulations and Results \n\t6.1\nResults Analysis\n\n\t7\nConclusions\n\n\tHigher Order Sliding Mode Controllers with Adaptation\n\t1\nIntroduction\n\t1.1 Motivation\n\t1.2 Objective\n\n\t2\nMain Result\n\t2.1\nSystem Description\n\t2.2\nDescription of the Adaptive Algorithm\n\t2.3\n (t, k(t)) Stability Proof\n\t2.4\nHigher Order Adaptive Sliding Mode Controller\n\n\t3\nExperimental Results\n\t3.1\nAdaptive Twisting Control (ATWC)\n\t3.2\nAdaptive Terminal Control (ATEC)\n\t3.3\nAdaptive Sub-optimal Control (ASC)\n\t3.4\nAdaptive Fourth Order Sliding Mode Controller (AFOSMC)\n\t3.5\nDiscussion of Results\n\n\t4\nA Comparison between Adaptive SMC and Augmented Order SMC (AOSMC)\n\t5\nConclusions\n\n\n\tPart II Navigation\n\tThe Early Eighties: Development of In-Flight TransferAlignment \u2013 Challenges and Methods\n\t1 Introduction\n\t2 The Early Years (1974\u20131980): From Conceptual Study toDesign and Implementation\n\t3 Years 1980\u20131985: It Works! Integrations, Tests and FirstImprovements\n\t4 Post 1985: Still a Lot to Do\n\tReferences\n\n\tEfficient Error Model Construction\n\t1 Introduction\n\t2 The General Structure of Direct Predictors\n\t3 Direct Predictor Analysis\n\t4 Direct Predictor Errors Due to Finite Data Length\n\t5 Optimization Techniques for Direct Bound Implementation\n\t6 Recommendations for Practical Applications and Summary\n\n\tTime-Critical Cooperative Path Following  of Multiple UAVs: Case Studies\n\t1\nIntroduction\n\t2\nProblem Formulation\n\t2.1\nPath Following for a Single UAV\n\t2.2\nTime-Critical Coordination and Network Model\n\n\t3\n3D Path Following Control law\n\t4\nTime-Critical Coordination\n\t4.1\nDistributed Coordination Law\n\t4.2\nOverall Time-Critical Cooperative Path-Following System\n\n\t5\nSimulation Results\n\t5.1\nPath-Following with Simultaneous Arrival\n\t5.2\nSequential Auto-Landing\n\n\t6\nConclusions\n\n\tObservability Analysis for the INS Error Model with GPS/Uncalibrated Magnetometer Aiding\n\t1\nIntroduction\n\t2\nCoordinate Frames\n\t3\nINS Error Model\n\t4\nSensors Model\n\t5\nObservability Analysis\n\t5.1\nObservability Analysis of Piece-Wise Constant Systems\n\t5.2\nObservability Analysis for an IMU Mounted on a Stabilized Platform\n\t5.3\nObservability Analysis for a Strapdown IMU\n\n\t6\nSimulation and Results\n\t6.1\nResults Analysis\n\n\t7\nConclusions\n\n\tLeveling Loop Design and State Multiplicative Noise Kalman Filtering\n\t1\nIntroduction\n\t2\nLeveling Loop Problem\n\t2.1\nThe Uncoupled Estimation\n\t2.2\nCoupled Estimation\n\n\t3\nThe Discrete\u2013Time Model\n\t4\nThe General Estimation Problem\n\t5\nEstimation Problem Solution\n\t6\nExample\u2013Coupled Leveling\n\t7\nExample\u2013Leveling by Inertial Navigation\n\t8\nConclusions\n\n\tA Novel Imaging Measurement Model for Vision and Inertial Navigation Fusion with Extended Kalman Filtering\n\t1\nIntroduction\n\t2\nReference Frames and Earth Model\n\t3\nMathematical Notation\n\t4\nKalman Filter Formulation\n\t4.1\nINS Psi-Angle Error Model Revisited\n\t4.2\nGNSS Tightly Coupled Integration\n\t4.3\nSighting Device\n\n\t5\nSimulation Results\n\t5.1\nSingle-Sided Observations\n\t5.2\nDouble-Sided Observations\n\n\t6\nConclusions\n\n\tCombined Vision \u2013 Inertial Navigationwith Improved Outlier Robustness\n\t1 Introduction\n\t2 Background on Perturbed Inertial Navigation Dynamics\n\t3 Least-Entropy Like Pose Estimation\n\t3.1 Stereo Vision and Pose Estimation\n\t3.2 Robust Camera Pose Estimation Using LEL\n\t3.3 Experimental Results for Pose Estimation Only\n\n\t4 Navigation and Kalman Filtering with Relative PoseMeasurements\n\t4.1 Definition of the Relative Pose Pseudo-Measurement Error\n\t4.2 Kalman Filter Prediction Step\n\t4.3 Kalman Filter Correction Step\n\n\t5 Experimental Results\n\t6 Conclusions\n\tReferences\n\n\tA Covariance Analysis of Vision-Aided Inertial Navigation: Free Fall Case\n\t1\nIntroduction\n\t2\nDevelopment\n\t2.1\nDynamics\n\t2.2\nModeling/Calibrating the Free INS\n\tMeasurement Equation\n\n\t3\nPerformance of Aided INS\n\t3.1\nInitialization\n\t3.2\nTransitioning between Measurement Epochs\n\n\t4\nCalculations\n\t5\nConclusion\n\n\tInvestigation of a Symmetric Vibrating Gyroscope Characteristics Using a Simplified Dynamic Model\n\t1\nIntroduction\n\t2\nMathematical Model\n\t2.1\nFull Gyroscope Model\n\t2.2\nApproximate Gyroscope Model\n\t2.3\nMode of Operation for Angular Velocity Measurement\n\n\t3\nNumerical Study\n\t3.1\nOpen-Loop Response\n\n\t4 Insight on Non-ideal Cases, Open-Loop Issues, and Improvement Directions\n\t4.1\nBias\n\t4.2\nBandwidth\n\t4.3\nImportance of the Quadrature Loop Control\n\t4.4\nClosed-Loop Design and Response to Noisy Inputs\n\n\t5\nConclusion\n\n\n\tPart III Spacecraft Guidance,\nNavigation and Control\n\tZero v Solution to the Angles-Only Range Observability Problem during Orbital Proximity Operations\n\t1\nIntroduction\n\t2\nProblem Formulation\n\t2.1\nThe Hill Clohessy Wiltshire Equations\n\t2.2\nAngles-Only Navigation\n\n\t3 The Range Observability Problem\n\t3.1\nRange Observability without a Camera Offset\n\t3.2\nRange Observability with a Camera Offset\n\n\t4\nExtended Kalman Filter\n\t5\nRelative Orbit Types\n\t5.1\nV-bar Station-Keeping\n\t5.2\nFlyby Orbit\n\t5.3\nCircumnavigating (Football) Orbit\n\t5.4\nInitial Relative Position Errors\n\n\t6\nRange Observability under Vehicle Rotation\n\t6.1\nV-bar Station-Keeping\n\t6.2\nMonte Carlo Results\n\n\t7\nConclusions\n\t8\nReferences\n\n\tGround Based Navigation of Spacecraft in Lunar Transfer Trajectory, with Application to Chandrayaan-2\n\t1\nIntroduction\n\t2\nDynamic Model of Spacecraft Motion in Lunar Transfer Trajectory\n\t2.1\nAcceleration of the Spacecraft due to the Gravitational Fields of the Earth, the Moon and the Sun\n\t2.2\nGravitational Harmonics\n\t2.3\nSolar Radiation Pressure\n\t2.4\nLunar Transfer Trajectory Simulation\n\n\t3\nGround Tracking Station Measurement Model\n\t3.1\nAzimuth and Elevation Measurement\n\t3.2\nRange Measurement and Associated Time Delay\n\t3.3\nRange Rate Measurement and Associated Time Delay\n\n\t4\nTracking Data from Ground Station\n\t5\nSources of Error in Ground Station Measurements\n\t3.1\nTropospheric Refraction\n\t3.2\nIonospheric Refraction\n\t3.3\nTropospheric Error Correction\n\t3.4\nIonospheric Error Correction\n\n\t6\nSpacecraft Position and Velocity Estimation\n\t6.1\nExtended Kalman Filter with Delay in Measurements\n\t6.2\nEstimation of Position and Velocity\n\n\t7\nConclusion\n\n\tRobust Kalman Filtering with Single and Multiple ScaleFactors for Small Satellite Attitude Estimation\n\t1 Introduction\n\t2 Satellite Equations of Motion and the Sensor Model\n\t2.1 Satellite Equations of Motion\n\t2.2 Sensor Models\n\n\t3 Robust Kalman Filtering for Satellite Attitude Estimation\n\t3.1 Robust Unscented Kalman Filter\n\t3.2 Robust Extended Kalman Filter\n\t3.3 Fault Detection Procedure\n\n\t4 Robust Kalman Filtering for Satellite Attitude Estimation\n\t4.1 Continuous Bias Failure\n\t4.2 Measurement Noise Increment Failure\n\t4.3 Zero Output Failure\n\n\t5 Conclusion\n\tReferences\n\n\tSpacecraft Attitude Determination with Sun Sensors, Horizon Sensors and Gyros: Comparison of Steady-State Kalman Filter and Extended Kalman Filter\n\t1\nIntroduction\n\t2 Sensor Models\n\t2.1\nRate-Integrating Gyros\n\t2.2\nSun Sensors\n\t2.3\nHorizon Sensors\n\n\t3\nDevelopment of Simulation\n\t3.1\nController\n\t3.2\nRate Filter\n\n\t4\nSteady-State Kalman Filter\n\t4.1\nPrediction\n\t4.2\nSteady-State Kalman Gains\n\t4.3\nCorrection\n\t4.4\nInitialization\n\t4.5\nUpdate Interval\n\tEstimator Performance\n\n\t5\nExtended Kalman Filter\n\t5.1 Formulation\n\t5.2\nEstimator Performance \n\n\t6\nEstimation of Additional States\n\t6.1\nHorizon Sensor Error Estimation\n\t6.2\nMisaligned Sensors\n\n\t7\nConclusions and Comments\n\n\tQuaternion Data Fusion\n\t1\nIntroduction\n\t2\nOne-Quaternion Data Fusion\n\t3\nMulti-quaternion Data Fusion\n\t4\numerical Solution for Multi-quaternion Data Fusion\n\t5\nNumerical Example\n\t6\nConclusions\n\n\tLinear Covariance Techniques for Closed-Loop Attitude Determination and Control Analysis\n\t1\nIntroduction\n\t2 The EUVE Attitude Model\n\t2.1\nEUVE Attitude Control Dynamics Model\n\t2.2\nStar-Trackers Measurement Model\n\t2.3\nGyro Measurement Model\n\t2.4\nState Space Representation\n\n\t3\nEUVE Navigation and Control Design\n\t3.1\nReduced Order Filter Algorithm \n\t3.2\nThe Control Law\n\t3.3\nReduced Order Filter Algorithm and Model Replacement\n\n\t4\nLinear Covariance Analysis\n\t4.1\nEUVE Linear Covariance Model\n\t4.2\nPerformance Evaluation\n\n\t5\nResults\n\t5.1\nSetup\n\t5.2\nLinear Covariance Results\n\t5.3\nNonlinear Monte Carlo Analysis \n\t5.4\nSensitivity Analysis\n\n\t6\nConclusions\n\n\tReaction Wheel Parameter Identification and Control through Receding Horizon-Based Null Motion Excitation\n\t1\nIntroduction\n\t2\nSpacecraft Dynamics Model\n\t3\nReceding Horizon Optimization of the Null Motion Excitation\n\t4\nSimulation Setup\n\t5\nConclusion\n\n\tSpacecraft Constrained Maneuver Planning Using Positively Invariant Constraint Admissible Sets\n\t1\nIntroduction\n\t2\nRelative Motion Model\n\t2.1\nNonlinear Equations of Motion\n\t2.2\nLinearized CWH Equations\n\n\t3\nVirtual Net\n\t4\nLQ Controller with Gain Switching \n\t5\nPositively Invariant Sets\n\t6\nDebris Representation\n\t7\nDebris Avoidance Approach\n\t7.1\nGrowth Distances\n\t7.2\nGrowth Distance Computations\n\t7.3\nThrust Limit on Growth Distance Computations\n\t7.4\nConnectivity Graph and Graph Search\n\n\t8\nCost Matrices\n\t9\nSimulation Results\n\t10\nConclusion\n\n\tA Comparison of Nonlinear PI and PIDInertia-Free Spacecraft Attitude Control Laws\n\t1 Introduction\n\t2 Spacecraft Model\n\t3 Control Laws\n\t3.1 SO(3)/9\n\t3.2 SO(3)/6\n\t3.3 SO(3)/3\n\n\t4 Modeling Inertia Variations\n\t5 M2RExamples\n\t5.1 M2R Examples without Disturbances\n\t5.2 M2R Examples with Disturbances\n\t5.3 M2R Examples with Input Nonlinearities\n\n\t6 M2SExamples\n\t6.1 M2S Examples without Disturbances\n\t6.2 M2S Examples with Disturbances\n\n\t7 Comparison to Classical Optimal Control\n\t8 Conclusions\n\tReferences\n\n\n\tEditors Biography\n\tAuthor Index\n\n\n\n"}