{"content": "\n\n\nSpringer Optimization and Its Applications\n\nVOLUME 73\n\nManaging Editor\nPanos M. Pardalos (University of Florida)\n\nEditor\u2013Combinatorial Optimization\nDing-Zhu Du (University of Texas at Dallas)\n\nAdvisory Board\nJ. Birge (University of Chicago)\n\nC.A. Floudas (Princeton University)\n\nF. Giannessi (University of Pisa)\n\nH.D. Sherali (Virginia Polytechnic and State University)\n\nT. Terlaky (McMaster University)\n\nY.Ye (Stanford University)\n\nAims and Scope\nOptimization has been expanding in all directions at an astonishing rate\n\nduring the last few decades. New algorithmic and theoretical techniques have\n\nbeen developed, the diffusion into other disciplines has proceeded at a rapid\n\npace, and our knowledge of all aspects of the field has grown even more\n\nprofound. At the same time, one of the most striking trends in optimization is\n\nthe constantly increasing emphasis on the interdisciplinary nature of the\n\nfield. Optimization has been a basic tool in all areas of applied mathematics,\n\nengineering, medicine, economics, and other sciences.\n\nThe series Springer Optimization and Its Applications publishes under-\ngraduate and graduate textbooks, monographs, and state-of-the-art expository\n\nwork that focus on algorithms for solving optimization problems and also\n\nstudy applications involving such problems. Some of the topics covered\n\ninclude nonlinear optimization (convex and nonconvex), network flow\n\nproblems, stochastic optimization, optimal control, discrete optimization,\n\nmultiobjective programming, description of software packages, approxima-\n\ntion techniques and heuristic approaches.\n\nFor further volumes:\nhttp://www.springer.com/series/7393\n\n\n\n\n\nGiorgio Fasano \u2022 Ja?nos D. Pinte?r\n\nEditors\n\nModeling and Optimization\nin Space Engineering\n\n\n\nEditors\nGiorgio Fasano\nThales Alenia Space SpA\nTurin, Italy\n\nJa?nos D. Pinte?r\nPinte?r Consulting Services Inc.\nHalifax, Nova Scotia\nCanada\n\nLibrary of Congress Control Number: 2012946722\n\nMSC 2010 codes: 49-06, 05B40, 37N05, 37N40, 65K05, 70M20, 90-08, 90BXX, 90C11, 90C26, 90C29,\n\n90C30\n\n# Springer Science+Business Media New York 2013\nThis work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part\nof the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations,\nrecitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission or\ninformation storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar\nmethodology now known or hereafter developed. Exempted from this legal reservation are brief excerpts\nin connection with reviews or scholarly analysis or material supplied specifically for the purpose of being\nentered and executed on a computer system, for exclusive use by the purchaser of the work. Duplication\nof this publication or parts thereof is permitted only under the provisions of the Copyright Law of the\nPublisher\u2019s location, in its current version, and permission for use must always be obtained from\nSpringer. Permissions for use may be obtained through RightsLink at the Copyright Clearance Center.\nViolations are liable to prosecution under the respective Copyright Law.\nThe use of general descriptive names, registered names, trademarks, service marks, etc. in this\npublication does not imply, even in the absence of a specific statement, that such names are exempt\nfrom the relevant protective laws and regulations and therefore free for general use.\nWhile the advice and information in this book are believed to be true and accurate at the date of\npublication, neither the authors nor the editors nor the publisher can accept any legal responsibility for\nany errors or omissions that may be made. The publisher makes no warranty, express or implied, with\nrespect to the material contained herein.\n\nPrinted on acid-free paper\n\nSpringer is part of Springer Science+Business Media (www.springer.com)\n\nISBN 978-1-4614-4468-8 ISBN 978-1-4614-4469-5 (eBook)\nDOI 10.1007/978-1-4614-4469-5\nSpringer New York Heidelberg Dordrecht London\n\nISSN 1931-6828\n\n\n\nPreface\n\nSince the very beginnings of modern space exploration activities, the simultaneous\n\nconsideration of key mission objectives and options\u2014including technical feasibil-\n\nity, mission safety, and cost-efficiency aspects\u2014has been essential. Space engineer-\n\ning projects have required, inter alia, the analysis and optimization of trajectories,\n\nfuel consumption, cargo handling, and other aspects of mission logistics, with\n\nparamount consideration given to crew and environmental safety. The experimental\n\nand commercial revenues expected from space activities such as the ones associated\n\nwith the International Space Station have given rise to further challenging\n\ncost\u2013benefit as well as risk analysis issues. The ambitious goals of future interplan-\n\netary explorations including manned missions will also require advanced analysis\n\nand optimization of the systems and resources involved.\n\nWhile the necessary depth and quality of the decisions required in space engi-\n\nneering is ever increasing, we have also witnessed continuing innovation regarding\n\nboth theoretical advances and ready-to-use tools for actual applications. The results\n\nof scientific innovation and algorithmic developments are supported and enhanced\n\nby today\u2019s advanced computational modeling and optimization environments.\n\nSince the earliest space engineering applications, the solution of increasingly hard\n\noptimization problems has become necessary, giving rise to complex analytical and\n\ncomputational issues. Until just a few years ago, the common numerical approaches\n\nwere essentially limited to handle certain continuous (linear or convex nonlinear)\n\noptimization and linearly structured combinatorial and mixed integer-continuous\n\noptimization problems. Recent advances in the area of computational global opti-\n\nmization allow the handling of (often) more realistic non-convex problem\n\nformulations. Furthermore, the consideration of integer decision variables in more\n\nflexible nonlinear modeling frameworks gives rise to often even harder (again, non-\n\nconvex) combinatorial and mixed integer-continuous optimization problems.\n\nThe solution of such computational challenges is becoming gradually more viable\n\nas a direct result of algorithmic advances and software development. The book\n\nemphasizes these new paradigms, by providing an in-depth discussion of mathe-\n\nmatical modeling and algorithmic aspects of real-world space engineering\n\napplications.\n\nv\n\n\n\nClassic and more recent space engineering problems\u2014including cargo\n\naccommodation and object placement, flight control of satellites, system design\n\nand trajectory optimization, interplanetary transfers with deep-space maneuvers,\n\nlow energy transfers, magnetic cleanliness modeling, propulsion system design,\n\nsensor system placement, space traffic logistics, and are discussed. Novel points of\n\nview related e.g., to computational global optimization and optimal control and to\n\nmultidisciplinary design optimization are also given proper emphasis. A particular\n\nattention is paid (also) to scenarios expected in the context of future interplanetary\n\nexplorations.\n\nThe literature dealing with advanced modeling issues and optimization problems\n\narising in space engineering mostly consists of works that address specialists. At the\n\nsame time, there are only a few works available that cover a wide range of technical\n\naspects and applications and target a broader readership. The present edited volume\n\nis aimed at meeting some of the resulting needs, by discussing current and prospec-\n\ntive applications of advanced optimization to handle some of the major challenges\n\nin space engineering in an expository manner. The contributing authors are well-\n\nrecognized researchers and practitioners working in modeling and optimization\n\nrelated (also) to space engineering.\n\nThe book offers an in-depth exposition of the mathematical modeling, algorith-\n\nmic and numerical solution aspects of all topics covered. A proper emphasis is\n\nplaced upon recently developed modeling paradigms and computational\n\ntools, including global as well as local optimization, multidisciplinary design, and\n\noptimal control theory.\n\nModeling and Optimization in Space Engineering primarily addresses\nresearchers and practitioners in the field of space engineering. It will be useful\n\nalso for aerospace graduate and postgraduate students willing to broaden their\n\nhorizon, by studying real-world applications and challenging problems that they\n\nwill be likely to meet in their professional activities. The contributed chapters are\n\nmore focused on practical aspects than on theoretical rigor: for the latter readers\n\nwill be referred (as needed) to the cited extensive literature. With this in mind,\n\nresearchers and practitioners in mathematical modeling, operations research, math-\n\nematical programming, optimization and optimal control will also benefit from the\n\ncase studies presented.\n\nThe approaches discussed can be extended also to application areas that are not\n\nnecessarily related to space applications. The book can be also used as a reference\n\nto assist researchers and practitioners in developing novel applications. Readers\n\nwill obtain a broad overview of some of the most challenging space engineering\n\noperational scenarios of today and tomorrow. This aspect will also benefit managers\n\nin the aerospace field, as well as in other advanced industrial sectors.\n\nGiorgio Fasano Ja?nos D. Pinte?r\n\nTurin, Italy Halifax, Nova Scotia, Canada\n\nvi Preface\n\n\n\nAbout the Editors\n\nGiorgio Fasano is a researcher and practitioner at Thales Alenia Space with more\n\nthan 25 years of experience in the field of optimization, in support to space\n\nengineering. He holds a MSc degree in Mathematics, he is also a Fellow of the\n\nInstitute of Mathematics and its Applications, has been awarded the Chartered\n\nMathematician (IMA, UK), as well as the Chartered Scientist (Science Council,\n\nUK) designations. He is a Co-editor of Operations Research in Space and Air\n(Ciriani et al., Eds., Kluwer Academic Publ., 2003), and author of several specialist\n\npublications on optimization in space. He was a Finalist at the EURO 2007\n\nExcellence in Practice Award. He currently works as technical manager of the\n\nCAST (Cargo Accommodation Support Tool) project, funded by the European\n\nSpace Agency. His interests include Mixed Integer Programming, Global Optimi-\n\nzation, and Optimal Control.\n\nJa?nos D. Pinte?r is a researcher and practitioner with four decades of experience in\n\nthe area of systems modeling and optimization, including algorithm and software\n\ndevelopment. He holds MSc, PhD and DSc degrees in Mathematics, with\n\nspecializations in the Operations Research area. He has authored and edited\n\nbooks including the award-winning monograph Global Optimization in Action.\n\nHe also wrote nearly 200 journal articles, book chapters, and other technical\n\ndocuments. Dr. Pinte?r is an active member and officer of several professional\n\norganizations (CORS, EUROPT, HORS, INFORMS), and he serves on the editorial\n\nboard of international professional journals including the Journal of Global Opti-\n\nmization. Dr. Pinte?r is the principal developer or co-developer of a range of\n\nnonlinear optimization software products. These products are used worldwide by\n\nresearchers and practitioners in academia, and at business and research\n\norganizations. For more information, please visit www.pinterconsulting.com.\n\nvii\n\n\n\n\n\nAcknowledgements\n\nFirst of all, we wish to thank all contributing authors for their high-quality research\n\nwork and diligent efforts to make the timely completion and publication of this\n\nvolume possible. We also express our thanks to our coauthors of joint works cited in\n\nour own contributed chapters.\n\nIn addition to the review and editorial activities done by ourselves, several\n\ncolleagues assisted us with valuable comments and suggestions. We wish to express\n\nour special thanks to Roberto Armellin, Pierluigi Di Lizia, Fabio Schoen, and\n\nFrancesco Topputo.\n\nOne of the editors (GF) thanks also Gualtiero Brambati, Mario Cardano, Piero\n\nMessidoro, and Annamaria Piras of Thales Alenia Space Italia S.p.A., for their\n\nsupport of the research and development activities related to modeling and optimi-\n\nzation in a range of space engineering applications. GF also wishes to thank Jane\n\nAlice Evans, Editorial Consultant, for her commitment and support of the book\n\nreview activity.\n\nWe have been very glad to work with Vaishali Daimle, Senior Editor of Springer\n\nScience+Business Media for Mathematics on this book project, from its initial\n\ndiscussions to its completion.\n\nGiorgio Fasano Ja?nos D. Pinte?r\n\nTurin, Italy Halifax, Nova Scotia, Canada\n\nix\n\n\n\n\n\nContents\n\n1 Model Development and Optimization for Space\n\nEngineering: Concepts, Tools, Applications, and Perspectives . . . . . . 1\n\nGiorgio Fasano and Ja?nos D. Pinte?r\n\n2 Practical Direct Collocation Methods for Computational\n\nOptimal Control . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\n\nVictor M. Becerra\n\n3 Formation Flying Control for Satellites: Anti-windup\n\nBased Approach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61\n\nJosep Boada, Christophe Prieur, Sophie Tarbouriech,\n\nChristelle Pittet, and Catherine Charbonnel\n\n4 The ESA NLP Solver WORHP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85\n\nChristof B\u20acuskens and Dennis Wassel\n\n5 Global Optimization Approaches for Optimal\n\nTrajectory Planning . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111\n\nAndrea Cassioli, Dario Izzo, David Di Lorenzo,\n\nMarco Locatelli, and Fabio Schoen\n\n6 Indirect Methods for the Optimization\n\nof Spacecraft Trajectories . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141\n\nGuido Colasurdo and Lorenzo Casalino\n\n7 Trajectory Optimization for Launchers\n\nand Re-entry Vehicles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159\n\nFrancesco Cremaschi\n\n8 Global Optimization of Interplanetary Transfers\n\nwith Deep Space Maneuvers Using Differential Algebra . . . . . . . . . . . . . 187\n\nPierluigi Di Lizia, Roberto Armellin, Francesco Topputo,\n\nFranco Bernelli-Zazzera, and Martin Berz\n\nxi\n\n\n\n9 A Mixed Integer Linear Programming Model\n\nfor Traffic Logistics Management at the International\n\nSpace Station . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 215\n\nGiorgio Fasano\n\n10 Global Optimization Approaches to Sensor Placement:\n\nModel Versions and Illustrative Results . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 235\n\nGiorgio Fasano and Ja?nos D. Pinte?r\n\n11 Space Module On-Board Stowage Optimization\n\nby Exploiting Empty Container Volumes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 249\n\nGiorgio Fasano and Maria Chiara Vola\n\n12 Optimization Models for the Three-Dimensional Container\n\nLoading Problem with Practical Constraints . . . . . . . . . . . . . . . . . . . . . . . . . . . 271\n\nLeonardo Junqueira, Reinaldo Morabito,\n\nDenise Sato Yamashita, and Horacio Hideki Yanasse\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft . . . . . . . . . . . . . . . 295\n\nKlaus Mehlem\n\n14 Integrated Design-Trajectory Optimization\n\nfor Hybrid Rocket Motors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 343\n\nDario Pastrone and Lorenzo Casalino\n\n15 Mathematical Models of Placement Optimisation:\n\nTwo- and Three-Dimensional Problems and Applications . . . . . . . . . . . 363\n\nYuri Stoyan and Tatiana Romanova\n\n16 Optimization of Low-Energy Transfers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 389\n\nFrancesco Topputo and Edward Belbruno\n\nxii Contents\n\n\n\nChapter 1\n\nModel Development and Optimization\n\nfor Space Engineering: Concepts, Tools,\n\nApplications, and Perspectives\n\nGiorgio Fasano and Ja?nos D. Pinte?r\n\nAbstract The theory and methodology of finding the best possible solution to a\n\nbroad range of optimization problems has been of interest since the beginnings of\n\nmodern operations research. The key theoretical results regarding important model\n\ntypes and algorithmic frameworks have been followed by optimization software\n\nimplementations that are used to handle a large and still growing variety of\n\napplications. Our discussion is focused on the practice of nonlinear\u2014specifically\n\nincluding also global and mixed integer optimization, in the context of space\n\nengineering applications. We review some of the prominent solution approaches,\n\nmodel development tools, and software implementations of optimization (solver)\n\nengines and then relate our discussion to selected applications in space engineering.\n\nThe review portion of this work cites contributions by our coauthors to the present\n\nvolume (Fasano and Pinte?r, Modeling and Optimization in Space Engineering,\n\nSpringer Science + Business Media, New York, 2012) while also drawing on an\n\nextensive list of other sources.\n\nKeywords Optimization models and methods \u2022 Continuous nonlinear (global and\n\nlocal) optimization \u2022 Mixed-integer linear and nonlinear models \u2022 Modeling\n\nlanguages and systems \u2022 Solution strategies and optimization software \u2022 LGO solver\n\nsuite for nonlinear optimization \u2022 Current and prospective optimization applications\n\nin space engineering\n\nG. Fasano\n\nThales Alenia Space Italia S.p.A., Str. Antica di Collegno 253, Turin 10146, Italy\n\ne-mail: giorgio.fasano@thalesaleniaspace.com\n\nJ.D. Pinte?r (*)\nPinte?r Consulting Services Inc., Halifax, NS, Canada\n\ne-mail: janos.d.pinter@gmail.com\n\nMSC Classification (2000) 68 T20, 90 C11, 90 C30, 90 C59, 90 C90, 90-02, 90-08\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_1,\n# Springer Science+Business Media New York 2013\n\n1\n\nmailto:giorgio.fasano@thalesaleniaspace.com\nmailto:janos.?d.pinter@gmail.com\n\n\n1.1 Introduction\n\n1.1.1 Modeling and Optimization:\nAn Operations Research Framework\n\nOperations research (OR) provides a scientifically established objective framework\n\nand methodology to assist analysts and decision makers in finding feasible or\n\noptimized decisions across a vast range of decision-making issues. Decision\n\nproblems can be frequently modeled by constrained optimization models: we\n\nwant to find the best possible decision that satisfies a given set of constraints. In\n\nthe present discussion, we shall consider the continuous optimization model defined\n\nby the following ingredients:\n\n\u2022 x: decision vector, an element of the real Euclidean n-space Rn\n\n\u2022 l, u: explicit, finite n-vector bounds of x that define an interval (\u201cbox\u201d) in Rn\n\n\u2022 f(x): continuous objective function, f:Rn!R\n\u2022 g(x): m-vector of continuous constraint functions, g:Rn!Rm\n\nApplying these notations, a very general class of optimization models can be\n\nconcisely formulated as follows:\n\nmin f \u00f0x\u00de x 2 D :\u00bc x : l ? x ? u; g\u00f0x\u00de ? 0f g ? Rn (1.1)\nIn (1.1) all vector inequalities are interpreted component-wise: l, x, u, are all\n\nn-component vectors, and the 0 in g(x) ? 0 denotes an m-component zero vector.\nThe set of feasible vectors D is defined by l, u, and g. The set of the general\nconstraints g could be empty, leading to a box-constrained model. Formally more\ngeneral optimization models that include also \u00bc and ? constraint relations and/or\nexplicit lower bounds on the admissible constraint function values can be simply\n\nreduced to the concise model form (1.1).\n\nThis model evidently subsumes, e.g., all linear and convex nonlinear program-\n\nming models, under corresponding additional specifications regarding the model\n\nfunctions f and g. It is also easy to demonstrate that (1.1) formally subsumes the\nentire class of pure combinatorial optimization problems formulated with binary\n\ndecision variables (and thereby it also covers models with finitely bounded discrete\n\nvariables). Consequently, all mixed integer-continuous optimization problems\n\n(formulated with both discrete and continuous decision variables) are also covered\n\nby the concise model form (1.1).\n\n1.1.2 Nonlinear Optimization\n\nThe present discussion focuses on nonlinear models since these are essential tools\n\nin the context of space engineering applications\u2014as clearly shown also by the\n\ncontributed chapters briefly reviewed later on. Therefore we will assume that some\n\n2 G. Fasano and J.D. Pinte?r\n\n\n\nor all of the functions f and g (the latter component-wise) are nonlinear. Additional\nanalytical properties such as the convexity, Lipschitz continuity (implied, e.g., by\n\nsmooth model structure), or continuous (first, second) differentiability of the model\n\ncomponent functions are often verified or postulated, in order to apply certain types\n\nof numerical methods to handle the corresponding problem instance.\n\nIf we can assume that D is nonempty, then the optimal solution set X* in the\nmodel (1.1) is non-empty, since this is implied by the continuity of f. This funda-\nmental existence result does not mean that an element of X* (or all of its elements)\nis (are) easy to find. In fact, the majority of practically motivated constrained\n\noptimization models require numerical solution approaches\u2014as opposed to finding\n\ntheir solution by purely analytical or symbolic methods. This remark is certainly\n\nvalid in the context of global optimization (GO). If we have to drop the convexity\n\nassumption regarding the model functions {f, g} in (1.1), then the resulting model\ninstance frequently will become multi-extremal.\n\nTo illustrate this point by an example, one can think of solving a square system\n\nof nonlinear equations g(x) \u00bc 0, g:Rn!Rn assuming that x?D:\u00bc{x: l ? x ? u}\n?Rn. Then it is entirely possible that this system has no solutions at all or that it\nhas one \u201ctrue\u201d (global) solution, as well as a number of (local) \u201cpseudosolutions\u201d\n\nwith non-negligible residual errors. (There are also many other possible scenarios,\n\nof course, but we will consider the one above to illustrate the present discussion.)\n\nThe possible multi-modality aspect of the problem implies that local scope\n\noptimization strategies may not work satisfactorily\u2014unless started \u201csufficiently\n\nclose\u201d to the \u201ctrue\u201d solution. Technically, \u201csufficiently close\u201d means to have\n\naccess to a point in the region of attraction of the globally optimal solution\n\npoint: this region is specific to the model instance and often also to the local\n\nscope optimization method used. Therefore the postulated \u201cclose guess\u201d require-\n\nment may be elusive in the example mentioned: this explains why classical\n\nnumerical methods may or may not work to handle this practically important\n\nproblem type.\n\nThere are many other structurally similar optimization problems with a typically\n\nmassive multimodal structure. A few important examples are the fitting of a\n\nnonlinear model to a given data set [1\u20134], data classification [2], or the finding of\n\noptimized object configurations [5\u20139]. Obviously, these general problem classes\n\ncan be directly related also to numerous space engineering applications; several\n\nfurther examples will be reviewed later on primarily based on contributions to\n\nCiriani et al. [10] and Fasano and Pinte?r [11]. Hence, in many such cases, one has to\n\nuse global\u2014as opposed to local\u2014scope search strategies.\n\nFor completeness, first we list a selection of textbooks that present in-depth\n\ndiscussions of local nonlinear optimization models, methods, and their applications:\n\nconsult, e.g., Bazaraa et al. [12], Peressini et al. [13], Bertsekas [148], Chong and\n\nZak [14], Edgar et al. [15], Diwekar [16], Boyd and Vandenberghe [17], Hillier and\n\nLieberman [18], and Nocedal and Wright [19].\n\nIn contrast to local search strategies, the objective of global optimization is to\n\nfind the absolutely best solution of optimization models that (could) have also local\n\noptima. In recent decades, GO has become a mature field of mathematical\n\n1 Model Development and Optimization for Space Engineering. . . 3\n\n\n\nprogramming. There are several hundred books written on the subject: consult, e.g.,\n\nHorst and Pardalos [20], Horst and Tuy [21], Kearfott [22], Mockus et al. [23],\n\nPinte?r [2], Floudas et al. [24], Strongin and Sergeyev [25], Pardalos and Romeijn\n\n[26], Zabinsky [27], and Liberti and Maculan [28]. For various GO applications in\n\nengineering design, consult e.g. Grossmann [29], Papalambros and Wilde [30], and\n\nPinte?r [31]. The edited volumes Ciriani et al. [10] and Fasano and Pinte?r [11] are\n\nspecifically devoted to space engineering and related applications: we will review\n\nwork from these volumes later on.\n\nFor examples of in-depth GO review articles, we mention Neumaier [32] and\n\nFloudas and Gounaris [33]; the reviews by Pinte?r [34, 35] focus on software and test\n\nproblems, including also extensive lists of applications with detailed numerical\n\nexamples. Rios and Sahinidis [36] present a substantial comparative study of\n\nderivative-free nonlinear (often global) optimization methods and their software\n\nimplementations.\n\nThe consideration of integer decision variables, possibly in combination with\n\ncontinuous ones, adds significant difficulty to handling the resulting global optimi-\n\nzation problems. Grossmann [29], Floudas [37], Nowak [38], Tawarmalani and\n\nSahinidis [39], and Li and Sun [40] discuss mixed-integer linear and nonlinear\n\noptimization models and solution strategies; see also the recent review by Burer and\n\nLetchford [41].\n\nThe above mentioned works advocate exact approaches to solve nonlinear\n\noptimization problems with corresponding theoretical (deterministic or stochastic)\n\nconvergence properties. In many cases\u2014due to the difficulty of the models to solve,\n\nthe real or perceived lack of suitable software, and various other practical\n\nconsiderations\u2014instead of exact approaches, heuristic strategies are proposed and\n\napplied. Therefore we also provide a few references related to prominent heuristic\n\napproaches, mostly to solve combinatorial\u2014but also continuous\u2014optimization\n\nproblems. Consult, e.g., Michalewicz [42], Osman and Kelly [43], Glover and\n\nLaguna [44], Rudolph [45], Voss et al. [46], Rothlauf [47], Jones and Pevzner\n\n[48], and Michalewicz and Vogel [49]; see also the e-book by Weise [50] that is\n\nfocused on heuristic strategies in the broader GO context.\n\n1.1.3 Optimization Modeling Systems and Solver Engines\n\nMany of the real-world problems tackled by an OR-based approach are complicated,\n\nand the \u201cbest possible\u201d model development and solution procedure may not be clear\n\nat the beginning of the project. This general statement is certainly valid also for\n\nmany (if not all) space engineering projects. Under such circumstances, interdisci-\n\nplinary teams of decision makers, domain experts, and model and algorithm\n\ndevelopers have to work together in an \u201citerative\u201d fashion. The team repeatedly\n\nhas to modify the model formulation and solution procedure until the resulting\n\nsystem model properly captures the essence of the decision problem, it can be\n\n4 G. Fasano and J.D. Pinte?r\n\n\n\nadequately supported by data, its computational solution is viable, and the results are\n\ndeployable in the real-world setting of the decision problem. The above facts and\n\ncircumstances imply the essential need for suitable modeling systems\n\n(environments, languages) and corresponding robust and efficient optimization\n\nsolvers.\n\nIn formulating and solving an optimization model in this context, a key aspect\n\nto consider is the choice of the software platform(s) to use. In many professional\n\nresearch and industrial environments, platform acceptance by the organization,\n\ncompatibility with the available hardware and operating system platforms as well\n\nas with other software, ease of use, quality of software documentation, and\n\ntechnical support will often dominate other (perhaps more technical) aspects.\n\nDriven by practical considerations and requirements, research engineers and\n\nscientists frequently may want \u201conly\u201d a high-quality solution to an optimization\n\nproblem that can be obtained rather quickly, as opposed to finding a rigorously\n\nguaranteed solution in days, weeks, months, or even more time. However, let us\n\nalso note here that there are cases when high-fidelity solutions are absolutely\n\nnecessary almost regardless of the computational cost. Hence, the choice of the\n\n\u201cmost suitable\u201d tools strongly depends on specific user criteria. The modeling\n\nenvironments and software revised below serve a broad range of users, including\n\ntheir optimization needs.\n\nTo start with the core optimization software implementations, there exists a\n\nrange of compiler platform-based solvers, with more or less built-in model devel-\n\nopment functionality. Typically, the optimization engine itself is developed in C or\n\nFORTRAN, while the user interface and related features are implemented using\n\nC++, C#, Delphi, Java, Visual Basic, or perhaps some other language. Such solver\n\nimplementations can be built directly into decision support systems and\n\napplications due to their customizability and often relatively small hardware +\n\nsoftware \u201cfootprint.\u201d At the same time, these stand-alone solver implementations\n\noften require the most expertise to use. For reviews, consult, e.g., Leyffer and\n\nMahajan [51] regarding software for nonlinear (mostly local) optimization and\n\nPinte?r [52] on software for global optimization.\n\nThe core solver engines referred to above are frequently linked to optimization\n\nmodeling languages (ML). An ML is a model development environment specifi-\n\ncally tailored for the optimization of (possibly) complex, large-scale systems:\n\nconsult, e.g., Kallrath [53]. MLs have a language compiler with model\n\npreprocessing, error-checking, and other model development facilities. MLs sup-\n\nport the transparent creation of scalable model instances with corresponding data\n\nsets, assuming that the key model structure can be well represented. Thereby MLs\n\nassist the development of possibly very large models that are easier to maintain and\n\nto adapt to new scenarios as needed.\n\nMLs incorporate as additional options a collection of high-performance\n\nsolvers. These solver engines are collectively aimed at handling the range of\n\nlinear and nonlinear, continuous, discrete, and mixed-integer optimization\n\nproblems, often with tailored approaches to more special problem classes from\n\n1 Model Development and Optimization for Space Engineering. . . 5\n\n\n\nthe main optimization areas. Modeling environments often include a substantial\n\nlibrary of illustrative models that can effectively assist users to develop their own\n\nmodels. Without going into details, we also mention the options and facilities of\n\nMLs that support solver testing and benchmarking.\n\nExamples of prominent commercial modeling systems include AIMMS\n\n(by Paragon Decision Technology [146]), AMPL (AMPL LLC [141]), the Excel\n\nSolver Platform (Frontline Systems [142]), GAMS (GAMS Development Corpora-\n\ntion), the IBM ILOG CPLEX Optimization Studio (IBM), LINGO (LINDO\n\nSystems [144]), and MPL (Maximal Software [145]). For current information\n\nregarding these MLs, visit the websites of the modeling system developers listed\n\nin the references.\n\nThere has been also a very remarkable development in the optimization context\n\nof high-level integrated scientific and technical computing (ISTC) systems such as\n\nMaple [54], Mathematica [55], and MATLAB [56]. These systems incorporate\nsubstantial ready-to-use function libraries, and they support the complete model\n\ndevelopment process by offering integrated computing, programming, project\n\ndocumentation, and model visualization facilities. ISTCs also offer optimization\n\nfeatures, either as built-in functions or as add-on products. The online help facilities\n\nand tutorials of ISTCs assist rapid prototyping and modeling (also) in an interdisci-\n\nplinary team context. We see a significant role for ISTCs in the development and\n\nsolution of advanced optimization models with modules that can represent entire\n\nsubsystem models. A typical application example is the optimal parameterization\n\n(calibration) of a system model that\u2014for each studied parameter setting\u2014requires\n\nthe evaluation of an embedded numerical procedure, the solution of a set of\n\ndifferential or differential-algebraic equations, deterministic or stochastic simula-\n\ntion, and so on.\n\nThe modeling environments briefly reviewed above will meet the needs and\n\nrequirements of different types of users to various extents. The main categories\n\ninclude educational users (instructors and students); research scientists,\n\nengineers, consultants, and other practitioners (possibly, but not necessarily\n\nequipped with an in-depth optimization related background); optimization\n\nexperts, software application developers, and other \u201cpower users.\u201d The pros and\n\ncons of the individual software products\u2014in terms of hardware and software\n\nplatform demands, ease of use, model prototyping options, detailed code devel-\n\nopment and maintenance features, optimization model checking and processing\n\ntools, availability of solver options and other auxiliary tools, program execution\n\nspeed, overall level of system integration, quality of related documentation and\n\ntechnical support, customization options, and communication with end users\u2014\n\nmake the corresponding modeling and solver approaches more or less attractive\n\nfor the user groups listed above.\n\nTo illustrate the preceding discussion, in the next section, we introduce the LGO\n\nsolver suite and its current implementations linked to most of the modeling systems\n\nreviewed earlier. The acronym LGO abbreviates a Lipschitz(-continuous) global\n\noptimizer program system.\n\n6 G. Fasano and J.D. Pinte?r\n\n\n\n1.2 The LGO Solver Suite for Nonlinear Optimization\n\n1.2.1 Solver Options\n\nLGO seamlessly integrates a suite of derivative-free global and local optimization\n\nstrategies. The theoretical foundations of the global search components in LGO are\n\ndescribed by Pinte?r [2]. Specifically, this book presents an in-depth discussion of\n\nboth adaptive deterministic partition strategies and of stochastic search methods to\n\nsolve GO problems under basic continuity or Lipschitz-continuity assumptions (as\n\ndiscussed briefly in Sect. 1.1). The theoretically exhaustive global search capability\n\nof these deterministic or stochastic strategies guarantees their global convergence\n\n(to a point of X* or\u2014under proper analytical conditions\u2014to all points of X*).\nThe LGO program system has been continuously developed since the late 1980s.\n\nLGO can be used as a compiler platform-based optimization engine or as a solver\n\noption linked to various modeling environments. Several of these implementations\n\nhave been described in Pinte?r [34, 35, 57, 58], Pinte?r and Kampas [6, 59], Pinte?r\n\net al. [60], as well as in platform-specific user manuals. Next, we shall briefly\n\nreview the key features of the core LGO program system. For a more detailed\n\ndescription we refer to the current User\u2019s Guide [61].\n\nThe current LGO implementation integrates the following solver modules:\n\n\u2022 Regularly spaced sampling, as a global presolver (RSS)\n\n\u2022 Branch-and-bound global search method (BB)\n\n\u2022 Global adaptive random search (GARS)\n\n\u2022 Multi-start-based global random search (MS)\n\n\u2022 Constrained local search (LS) by the generalized reduced gradient method\n\nThe global search methods implemented in LGO\u2014with the exception of the\n\nrecently added RSS module\u2014are based on the exposition by Pinte?r [2]. The\n\nintegration of RSS with LGO is discussed in detail by Pinte?r [62], and Pinte?r and\n\nHorva?th [63]. The generalized reduced gradient algorithm is described in numerous\n\ntextbooks: consult, e.g., Edgar et al. [15]. Therefore\u2014and also due to the intended\n\noverall scope of this chapter\u2014only a brief overview of the solver options is\n\npresented here.\n\nRSS generates non-collapsing space filling designs in the search box region [l, u]\n(recall (1.1)), and it produces a corresponding global solution estimate. This\n\ninformation is passed along to LGO\u2019s other\u2014global and local\u2014solvers for refine-\n\nment. RSS can be especially useful in solving hard GO problems under severe\n\nlimitations regarding the number of model function evaluations.\n\nThe branch-and-bound search method (BB) is an implementation of a well-\n\nestablished optimization approach. The BB implementation in LGO combines\n\nfeasible set partition steps with both deterministic and randomized sampling.\n\nPure random search (PRS) is a simple \u201cfolklore\u201d approach to global optimization.\n\nThe GARS option implements an adaptive stochastic search procedure which\u2014while\n\n1 Model Development and Optimization for Space Engineering. . . 7\n\n\n\ntheoretically globally convergent\u2014typically leads to a significant performance\n\nimprovement over PRS and other passive search approaches.\n\nThe multi-start (MS) global search option applies a similar stochastic search\n\nstrategy to GARS; however, the total sampling effort is distributed among several\n\nglobal scope searches. Each of these leads to a starting point for subsequent local\n\nsearch. In general, this search strategy requires the most computational effort (due\n\nto its multiple local search phases); however, in complicated models, it often finds\n\nthe best numerical solution. For this reason, MS is the recommended default LGO\n\nsolver option for global scope optimization.\n\nEach of the global scope solver modules is expected to generate a \u201csufficiently\n\nclose\u201d approximation of the global solution point(s), before LGO is switched to\n\nlocal search. This \u201cparadigm switch\u201d is dictated by practical requirements, not by\n\nconvergence theory: as such, it can lead to (much) faster optimization program\n\ntermination. However, theoretical global convergence is guaranteed only by using\n\nproper global search ad infinitum. If we wish to find a rigorously guaranteed close\napproximation of the solution by LGO\u2019s global scope solvers, then LGO runtimes\n\ncan be expected to grow at an exponential rate as a function of model size\n\n(characterized by the number of variables and model functions). For clarity, a\n\nsimilar comment applies to all other theoretically rigorous global search methods.\n\nTherefore the addition of a much quicker local search option is a practically\n\nimportant feature of LGO.\n\nIn a typical optimization run, the LGO user selects one of the global (BB, GARS,\n\nMS) solver options: the corresponding global search phase is then automatically\n\nfollowed by the local search (LS) option. It is also possible to use the LS option in\n\nstand-alone mode, started from an automatically set (default) or a user-supplied\n\ninitial solution \u201cguess.\u201d For algorithmic and practical reasons, an initial LS phase\n\nprecedes all global search options. If RSS is invoked then it follows LS, then RSS is\n\nfollowed by a second LS phase before launching the global search mode chosen.\n\nIdeally\u2014and also in many practical cases\u2014each of BB, GARS, and MS\n\nfollowed by LS will return identical answers, except perhaps small numerical\n\ndifferences. However, LGO users may wish to try using each of the global search\n\noptions when solving complicated problems to see which one gives the best\n\nnumerical results with given (or perhaps modified) option and parameter settings.\n\nFor small to moderate size problems defined by analytically given (i.e. \u201ceasily\n\ncomputable\u201d) functions, the corresponding runtimes are seconds or at most\n\nminutes. Hence, in such cases, trying several solver modes and option settings is\n\nentirely feasible.\n\nThe global solver options all use an aggregated merit (exact penalty) function.\n\nAs one of the possible approximations of the constraints g, the objective function\nf(x) is augmented by terms of the form ci max [gi(x), 0]\n\n2. In the corresponding (still\n\ncontinuous or Lipschitz-continuous) problem formulation,\n\nmin f \u00f0x\u00de \u00fe\nX\n\ni\nci max gi\u00f0x\u00de; 0\u00bd ?2 subject to x 2 D0: \u00bc l; u\u00bd ? (1.2)\n\n8 G. Fasano and J.D. Pinte?r\n\n\n\nD0 replaces the constraint set D of (1.1) in the global search phase. The aggregated\nmerit function shown in (1.2) attempts to balance the aims of reducing the original\n\nobjective function and of satisfying the constraints gi(x) ? 0 for i \u00bc 1,. . .,m. The non-\nnegativemultipliers ci associatedwith the constraints gi can be either directly assigned\nor adaptively selected, to enforce the (approximate) numerical feasibility and\n\noptimality of the solution found. (Note that instead of using the l2-norm as shown by\n(1.2), other lp-norms can also be used for a suitably chosen 1 ? p ? 1.) The outlined\naggregation of constraints and objective function is automatically supported by LGO.\n\nAs noted above, the local search phase is based on an implementation of the\n\ngeneralized reduced gradient algorithm. This search strategy is aimed at \u201clocally\n\nprecise search\u201d: therefore its usage is recommended also as the last search phase,\n\nfollowing one of the global searches. The application of LS typically results in an\n\nimproved solution, since it is aimed at attaining or maintaining feasibility and\u2014\n\nsimultaneously\u2014at improving the objective function value. LGO\u2019s use as a local\n\nsolver only can be recommended, when one or several good initial solution\n\nestimates are directly available, or whenever the LGO user knows that local search\n\nsuffices (as, e.g., in the case of provably convex models).\n\nAdditional search strategies and solver options are also considered for future\n\ninclusion in the LGO solver suite as dictated by user demands.\n\nDue to its derivative-free optimization strategies, LGO can be primarily\n\nrecommended to solve continuous GO problems, in which the unavailability or\n\ntedious generation of model function derivatives excludes the possibility of apply-\n\ning more specifically tailored approaches. (It is worth pointing out that in most truly\n\nglobal scope search algorithms local derivative information plays little or no role.)\n\nLet us emphasize that LGO can handle optimization models with a \u201cblack box\u201d\n\nstructure: this category specifically includes many advanced models developed in\n\nISTC systems as highlighted earlier.\n\n1.2.2 LGO Program Structure\n\nThe core of LGO has been originally developed for use in conjunction with\n\nFORTRAN development environments. Specifically, LF77, LF90, and LF95 by\n\nLahey Computer Systems [64, 65] have been mostly used for development (for the\n\ncurrent release version of LF95 visit www.lahey.com). Subsequently, LGO has\n\nbeen ported to many other compiler platforms. LF95 directly supports links to other\n\nprogramming languages under Windows operating systems (OS) such as Borland\n\nC/C++ and Delphi, Microsoft Visual C/C++, and Visual Basic. Digital, Compaq,\n\nIntel Visual FORTRAN, G77, G95, GCC, GFORTRAN, and Salford FORTRAN\n\n(FTN95) are further examples of compiler platforms that have been tested to run\n\nLGO. LGO can also be used on Mac, Linux, and UNIX platforms, since its core\n\ncode is fully portable. For instance, GCC and GFORTRAN or G95 are freely\n\navailable for all hardware and OS platforms mentioned above.\n\n1 Model Development and Optimization for Space Engineering. . . 9\n\nhttp://www.lahey.com\n\n\nLGO can be used as an executable program, a static object file, or as a dynamic\n\nlink library (dll). There are secondary and somewhat compiler-dependent\n\ndifferences among the LGO delivery versions: such details are outside of the\n\nscope of the present discussion. The changes between delivery versions are straight-\n\nforward, and the core LGO solver functionality is identical in all cases. For\n\nillustration, we will review the object file delivery-based LGO version that is\n\nused with a FORTRAN development environment. (In this case, all program files\n\ndiscussed below have a FOR filename extension; if a C compiler is used, then the .\n\nFOR filename extensions should be replaced by .C extensions).\n\nTo establish a standard application program structure, the following files are\n\nwritten by the model developer, using the templates and sample programs provided\n\nwith LGO.\n\n\u2022 LGOMAIN is the main (driver) program that defines or retrieves from an input\n\nfile (to be discussed below) LGO\u2019s static calling parameters before activating\n\nLGO. Here the adjective static refers to model descriptors and LGO solver\n\noptions defined only once during a given LGO application run. LGOMAIN\n\ncan also include additional user actions such as links to other program files\n\nand to external applications, to report generation, and to the further optional use\n\nof LGO results.\n\n\u2022 LGOFCT defines the model objective f and constraint functions g that describe\nthe dynamic components of an optimization problem. Here dynamic means that\n\nLGOFCT will be called in every iteration of LGO, to evaluate all model\n\nfunctions for the algorithmically generated sequence of input variable arguments\n\nx. Again, this file may include calls to other application programs such as\nexternal modules and procedures, in order to evaluate the model functions.\n\n\u2022 LGO.IN is an optionally used LGO input parameter (text) file that stores LGO\u2019s\n\nstatic calling parameters. If LGO.IN is used, then the basic role of LGOMAIN is\n\nto read the static information and then to call LGO.\n\nThe source code files LGOMAIN and LGOFCT are to be compiled and linked to\n\nthe LGO object or dll file using a suitable FORTRAN or C compiler. At runtime,\n\nLGOMAIN calls LGO: the latter iteratively calls LGOFCT. LGO\u2019s operations can be\n\npartially controlled by the static input parameter file, or by parameters defined in\n\nLGOMAIN: this setup structure facilitates the repeated executions of LGO runs under\n\nvarious model specifications and/or solver parameterizations. Of course, LGOFCT\n\ncan also be changed if necessary to test or to develop different model variants.\n\nDuring the LGO run three types of result files can be (optionally and automati-\n\ncally) generated. The first one of these files, called LGO.SUM, presents a concise\n\nsummary of the results obtained: the optimized decision variables and the function\n\nvalues at these arguments. This information is sufficient in \u201croutine\u201d LGO\n\napplications: this way the model developer can avoid browsing through a possibly\n\nsignificant amount of runtime details. The second (optional) report file, called LGO.\n\nOUT, provides more detailed information related to the complete optimization\n\nprocess. Specifically, it shows which solver options have been called, how they\n\nperformed (showing their corresponding final results), and which stopping criterion\n\n10 G. Fasano and J.D. Pinte?r\n\n\n\nhas led to the termination of the LGO run. Therefore its analysis can be useful, e.g.,\n\nduring the development of a new application or to test various LGO input parameter\n\nsettings. The third (optional) report file, called LGO.LOG, records the entire\n\nsequence of the input vector arguments (x) generated, together with the resulting\nfunction values f(x) and g(x). Using this option could lead to a huge amount of\nstored information: hence, it should be used carefully, mostly during model devel-\n\nopment or when tracking down some possible (model or solver) error. This option\n\nmay also be useful in such cases when the number of model function evaluations is\n\nvery limited due to resource limitations: hence, all generated information can be\n\nvaluable for the model developer.\n\nBoth LGOMAIN and LGOFCT can be provided as compiled object or dll files,\n\npossibly written in other languages as noted above. These program modules can\n\nalso be connected to additional program files or even to executable programs. In\n\nsuch cases, LGO can perform true \u201cblack box\u201d optimization, assuming proper\n\ninput/output communication among LGO, LGOMAIN, and LGOFCT.\n\nTo summarize the above discussion, the interdependence structure of the LGO\n\nprogram components is shown by Fig. 1.1.\n\n1.2.3 Connectivity to Other Modeling Environments:\nCurrent Implementations\n\nLGO can be made available as a solver engine option in various modeling\n\nenvironments, typically as a dll or object file. In the simplest case, this requires\n\nonly a call to LGO, with proper communication between the modeling platform and\n\nthe solver. As noted earlier, optimization modeling systems are equipped with\n\nmodel interpreter capabilities and with a range of other features to support trans-\n\nparent and scalable model development.\n\nDue to certain platform-specific compatibility requirements the linked solver\n\noptions are not necessarily identical regarding all features. Without going into\n\n[An optional input parameter file]\n\nLGO.IN\n\n?\nLGOMAIN ? LGO ? LGOFCT\n\n?\nLGO.SUM   LGO.OUT   LGO.LOG\n\n[Optionally generated result files] \n\nFig. 1.1 LGO application program structure\n\n1 Model Development and Optimization for Space Engineering. . . 11\n\n\n\nunnecessary details, we list below the currently existing LGO solver implementations\n\nfor modeling systems, listed in order of release.\n\n\u2022 LGO solver suite for nonlinear optimization (compiler platform\n\nimplementations)\n\n\u2022 GAMS/LGO\n\n\u2022 MathOptimizer Professional for Mathematica\n\u2022 TOMLAB/LGO for MATLAB\n\n\u2022 Global Optimization Toolbox for Maple\n\n\u2022 MPL/LGO\n\n\u2022 AIMMS/LGO\n\n\u2022 AMPL/LGO\n\n\u2022 Excel/LGO\n\n\u2022 MATLAB/LGO\n\nAll listed solver products are directly available for personal computers running\n\ncurrently used MS Windows operating systems. Several of these are also\n\nimplemented, and all can be made available upon request, across all major hard-\n\nware and operating system platforms.\n\n1.2.4 An Illustrative Example\n\nTo illustrate the model development and solution procedure using LGO, we will\n\nconsider the solution of a transcendental system of equations g(x) \u00bc 0 g:Rn!Rn\nassuming that all variables take values from a given n-dimensional interval [l, u]?Rn.\nAs noted earlier, such equation systems may not have solutions at all, or they\n\ncould have a single solution, or several solutions, or possibly even infinite sets of\n\nsolutions. In lack of a good initial \u201csolution guess,\u201d local scope search strategies\n\n(such as Newton\u2019s method and its various extensions) may fail to find the solution(s)\n\nin this important class of problems. In order to (hopefully) avoid the scenario\n\nof multiple solutions, we can attempt to find the solution that has minimal lp-norm\nor\u2014more generally\u2014the solution closest to a given point in Rn. (As discussed\nearlier, 1 ? p ? 1 is chosen by the model developer.) If the lp-norm criterion\nstill does not guarantee the uniqueness of the solution vector, then other modeling\n\nconstraints can be imposed. We will assume that such added constraints are not\n\nneeded, and\u2014as an example\u2014we look for the minimal l2-norm solution of the\nmodel type shown below.\n\nmin xj jj j2 gi\u00f0x\u00de \u00bc 0 j \u00bc 1; . . . ; n x 2 D0 :\u00bc l; u\u00bd ? (1.3)\n\nObviously, (1.3) is a specific case of (1.1), with a convex objective function\n\nand with possibly complicated non-convex constraints. The model instance used\n\nfor illustration is described below, for n \u00bc 3, x \u00bc (x1, x2, x3); the symbols sin,\n\n12 G. Fasano and J.D. Pinte?r\n\n\n\ncos, ln, and exp below denote the sine, cosine, natural logarithm, and exponential\n\nfunctions:\n\nf \u00f0x\u00de \u00bc xj jj j2 \u00bc x12 \u00fe x22 \u00fe x32\n\ng1\u00f0x\u00de \u00bc sin x1 \u00fe x22 \u00fe x3\n? ?2 ? sin x1x2 ? 3x3\u00f0 \u00de\n\ng2\u00f0x\u00de \u00bc ln 1\u00fe x1 ? 2x2 \u00fe x3\u00f0 \u00de2\n? ?\n\n\u00fe cos x1x2 ? x3\u00f0 \u00de ? 1\ng3\u00f0x\u00de \u00bc sin exp x1 ? x3\u00f0 \u00de\u00f0 \u00de \u00fe sin x1x2 ? x3\u00f0 \u00de ? cos x2 ? x3\u00f0 \u00de\n\n\u00fe 1? sin 1\u00f0 \u00de\n? 5 ? xj ? 8 for j \u00bc 1; 2; 3\n\n(1.4)\n\nWe created (concocted) this little example for the present discussion: avid\n\nReaders will notice that x* \u00bc (0,0,0), f(x*) \u00bc 0 is the unique global solution. Of\ncourse, in general we do not know in advance if a system of equations like (1.4) has\n\na solution at all: thus a global scope search over [l, u] is justified. We believe that\nsuch situations are not infrequent in the real world of research. Figure 1.2 shows\n\nthat\u2014without specific insight\u2014the system of equations in (1.4) is far from trivial\n\neven if we knew that x3 \u00bc 0. (The figure has been generated using Mathematica).\n\nIn solving the model variants discussed above we used MathOptimizer Profes-\nsional: this is the LGO solver suite linked to the Mathematica model development\nenvironment.\n\nHere we do not want to go into details regarding the important issue of model\n\nscaling, but obviously the model functions in (1.4) could all be multiplied by\n\nindividual scaling factors, thereby making them more or less influential as a\n\nmodel component. (Specifically, if f(x) \u00bc ||x||2 dominates the other functions,\nthen in this illustrative example the objective of minimizing f(x) would easily\n\u201cdrive home\u201d the solver.) In order to make the model a bit more difficult numeri-\n\ncally, f is multiplied by 0.2. Notice that if its multiplier is 0, then we have a dummy\nobjective function and have to solve directly the system of equations g(x) \u00bc 0 in the\ngiven box [l, u]. The resulting system has multiple solutions: as an example, here is\na numerical solution found by LGO\u2019s local search mode started from the \u201cguess\u201d\n\n(7,7,-4) when we set f \u00bc 0:\n\n?5\n\n?5\n\n0\n\n5\n\n?5\n\n?1\n\n0\n\n0\n\n1\n\n2\n\n?2 ?5\n\n?5\n\n5\n\n0\n\n0\n\n5\n\n0\n\n6\n2\n\n?2\n0\n\n4\n2\n\n5\n\n5\n\n0\n?5\n\n5\n\n0\n\nFig. 1.2 Surface plots of the constraint functions in (1.4) assuming that x3 \u00bc 0\n\n1 Model Development and Optimization for Space Engineering. . . 13\n\n\n\nx1* ~ (1.363934386, 1.5414564089, 1.8782048276)\nMaximal constraint violation ~ 6.83127.10?7\n\nNumber of function evaluations \u00bc 366\nLet us remark that the number of function evaluations reported includes also the\n\nnecessary finite difference-based derivative estimates utilized by the LSmode in LGO.\n\nNext, for illustration, we tried to solve the system of equations locally using the\n\ndefinition f(x) \u00bc 0.2 ||x||2 for the objective function. Perhaps not too surprisingly,\nthis attempt has led to an infeasible local solution x2* as shown below:\n\nx2* ~ (0.6574644425, 1.1785306474, 1.3186902472)\n0.2 f(x2*) ~ 0.7120275896\nMaximal constraint violation ~ 0.8555029107\n\nNumber of function evaluations \u00bc 472\nFinally, we solved the same model version globally, using LGO\u2019s MSLS\n\noperational mode. The resulting numerical solution is displayed below.\n\nx3* ~ (6.1?10?9, 0, 2.3?10?9)\n0.2 f(x3*) ~ 8.5?10?18\nMaximal constraint violation ~ 6.9?10?9\nNumber of function evaluations \u00bc 12039\n\nThe LGO execution time in the last (longest) run is 0.03 s on a laptop computer\n\nrunning under Windows XP with Service Pack 3, 3 GB of RAM, and an Intel Core\n\n2 Duo CPU P8400 @ 2.26 GHz.\n\nA practically useful side benefit of using MathOptimizer Professional is that\nit automatically generates the LGOFCT and LGO.IN files, in addition to the result\n\nfiles LGO.OUT and LGO.SUM. The generated program files can be utilized also\n\ndirectly in conjunction with LGO (without using Mathematica).\nTo conclude this section, let us remark that the current standard LGO delivery\n\nversions can handle models with a few thousand variables and general constraints\n\n(in addition to the bound constraints). The dimension settings can be adapted to user\n\nrequirements as needed, within the limitations of the hardware / OS / compiler\n\nplatform(s) used. For further details regarding LGO and its implementations we\n\nrefer again to the cited works, as well as to a growing range of practical applications\n\nhandled by these implementations.\n\n1.3 Modeling and Optimization in Space Engineering:\n\nA Review of Applications and Perspectives\n\nIn order to offer some insight into the vast area of modeling and optimization needs\n\narising in space engineering, a fairly extensive set of case studies is reviewed in this\n\nsection broadly categorized into subsections. Recalling the discussion of Sect. 1.1,\n\nthis is where nonlinear programming (NLP), mixed-integer linear or nonlinear\n\n14 G. Fasano and J.D. Pinte?r\n\n\n\nprogramming (MILP and MINLP), global optimization (GO), multi-objective\n\noptimization (MO), andmultidisciplinary design optimization (MDO) are considered\n\nas essential tools to provide robust and efficient solutions to difficult optimization\n\nproblems. With respect to these concepts, in addition to the textbooks mentioned\n\nearlier, cf. also the Mathematical Programming Glossary [66]. Further references\non the closely related subject of optimal control theory are [67\u201373, 75\u201380].\n\nIn the following subsections, we will review a number of optimization\n\napplications contributed by our coauthors of the present edited volume [11]. To\n\nproperly extend the scope of our discussion, we will also review a number of further\n\ntopical studies from space engineering. The topics covered can be broadly\n\ncategorized into the following areas:\n\n\u2022 Mission analysis and trajectory planning\n\n\u2022 Planning and scheduling\n\n\u2022 Cargo loading and unloading\n\n\u2022 Payload accommodation\n\n\u2022 System design\n\n\u2022 Subsystem design\n\n\u2022 Ergonomic aspects\n\n\u2022 Payload performance\n\n\u2022 Observation data handling and remote monitoring\n\n\u2022 Cost and revenue management\n\nLet us point out that close connections are evident among these subject\n\ncategories. Hence, studies which consider several of the listed subjects can be\n\nentirely justifiable\u2014especially when optimized system (subsystem) performance\n\nis a focal point of the analysis.\n\n1.3.1 Mission Analysis and Trajectory Planning\n\nSince the very beginning of space engineering, great attention has been paid to\n\ntrajectory planning, in order to attain the expected key mission objectives (reaching\n\na specific target) within the technological and economic limits of the systems\n\navailable. The optimization-based approach was indispensable to make the mission\n\nfeasible, even regardless of performance and cost concerns. This perspective\n\nremains valid when coping with the significant space exploration challenges arising\n\ntoday or foreseen for the near future. More recently, trajectory optimization has also\n\nbeen aimed at reducing overall mission expenses while also improving mission\n\neffectiveness, in terms of experimental capability and/or cargo capacity.\n\nIn current launch systems, the propellant mass constitutes a large fraction of\n\nthe total weight at launch. Therefore a significant effort is devoted to minimizing\n\nthe amount of propellant, since such optimization enhances the launch vehicle\n\ncapabilities in terms of transported payload or achievable destinations in space.\n\n1 Model Development and Optimization for Space Engineering. . . 15\n\n\n\nOther important optimization objectives are also studied. For instance, regarding\n\nfuture manned interplanetary missions (such as a manned outpost on Mars), the\n\noutward/inward journey duration has to be made minimal, in compliance with\n\nstringent safety constraints.\n\nThese and similar problems are considered by optimal control theory: in fact,\n\ntrajectory (or, more generally, mission analysis) optimization represents a long-\n\nstanding prominent application. The accumulated professional literature is based on\n\nsignificant expertise: nonetheless, many tough challenges are still open to research,\n\nattracting the commitment of scientists and experienced practitioners.\n\nOptimal control theory benefits from two main approaches based either on direct\n\nor indirect methods. The indirect methods discussed in this book by Colasurdo and\n\nCasalino [84] have been successfully utilized by these authors in the second Global\n\nTrajectory Optimization Competition [81].\n\nThe present volume includes several contributions to trajectory optimization:\n\nthese are focused on complementary perspectives, in terms of the methodologies\n\nadopted and specific applications. In trajectory optimization problems, optimal\n\ncontrol, NLP, GO, MILP, and MINLP play an essential role as support\n\nmethodologies.\n\nBecerra [82] provides an introduction to direct collocation methods for compu-\n\ntational optimal control. In a direct collocation method, the system state is\n\napproximated using a set of basic functions, and the dynamics are collocated at a\n\ngiven set of points along the time period considered, resulting in a sparse NLP\n\nproblem. The chapter discusses local direct collocation methods, which are based\n\non low-order basis functions employed to discretize the state variables over a given\n\ntime period.\n\nCassioli et al. [83] deal with the application of global optimization techniques to\n\nthe design of interplanetary trajectories. This is an extremely hard problem, mainly\n\nbecause of the very large number of local minimizers present in real problems.\n\nDespite these challenges, it is possible to design low-cost high-energy trajectories\n\nwith little or no human supervision. The chapter analyzes those modeling\n\ntechniques that computational experiments have shown to be most successful,\n\nalong with some of the algorithms that might be used to solve such problems.\n\nColasurdo and Casalino [84] emphasize the use of indirect methods for the\n\noptimization of spacecraft trajectories. They present a general framework in order\n\nto apply the theory of optimal control to spacecraft trajectory design. This proce-\n\ndure allows for an almost automatic derivation of the boundary conditions which\n\nmust be satisfied by an optimal trajectory, depending on the specific constraints of\n\nthe problem studied. The general method of stating the optimal control problem\n\nmakes this indirect approach suitable to manage many specific features of the space\n\nmissions, such as impulsive and/or low-thrust engines, planetary flybys, (high-\n\naltitude) atmospheric flights, and so on.\n\nTopputo and Belbruno [85] investigate the optimization of low-energy transfers.\n\nThe key concepts of trajectory optimization are reviewed, and the direct transfer\n\nstrategy is briefly outlined. Next, the restricted three- and four-body problems are\n\ndescribed, and their properties are discussed. Two different types of low-energy\n\n16 G. Fasano and J.D. Pinte?r\n\n\n\ntransfers are then optimized: impulsive Earth\u2013Moon exterior low-energy transfers\n\nand low-energy, low-thrust transfers to the L1 periodic orbits of the Earth\u2013Moon\n\nsystem.\n\nDi Lizia et al. [86] propose the use of differential-algebraic techniques to\n\nglobally optimize multi-gravity-assist interplanetary trajectories with deep-space\n\nmaneuvers. A search-space pruning procedure is adopted, and the overall trajectory\n\ndesign is decomposed into a sequence of subproblems. First the entire parameter\n\nsearch space is partitioned into boxes (subintervals), and then the objective function\n\nand the constraints are represented by Taylor series approximations over these\n\nboxes, in terms of the design variables. Due to the polynomial representation of\n\nthe model functions, a relatively coarse grid can be used and efficient design space\n\npruning can be performed.\n\nCremaschi [87] reviews the problem of trajectory optimization of launch and\n\nreentry vehicles: such vehicles have to travel part of their trajectory within the\n\nEarth\u2019s atmosphere. This very complex problem is approximated by using simplified\n\nequations from physics. In a second step, the corresponding mathematical model\n\nis represented by a set of differential equations that may be then discretized and\n\nsolved by nonlinear programming. Both shooting and collocation methods are\n\nconsidered. (Let us remark here that the proper application of the shooting method\n\nmay require GO methodology as shown by [88].)\n\nB\u20acuskens and Wassel [89] describe the European Space Agency\u2019s (ESA) NLP\nsolver WORHP. WORHP is aimed at solving possibly very large-scale, sparse\n\nnonlinear optimization problems with millions of variables and constraints.\n\nWORHP\u2019s core solver engine is based on a sparse sequential quadratic program-\n\nming (SQP) and an interior point (IP) method implementation. In addition, it\n\nincludes sparse linear algebra tools, efficient routines for computing sparse\n\nderivatives, and update techniques for Hessian approximations.\n\n1.3.2 Planning and Scheduling\n\nSpace missions are undoubtedly among the most complex human undertakings:\n\ntherefore they require high-accuracy planning in order to minimize risks and costs\n\nboth before and during themission. This general statement is valid for many kinds of\n\ntopical applications that range from deep-space exploration, satellite constellations\n\nplanning, in-orbit infrastructures to future manned exploration programs. A notable\n\nexample is the International Space Station (ISS) by the National Aeronautics and\n\nSpace Administration (NASA, http://www.nasa.gov).\n\nSignificant contributions to this area of research are offered by a number of\n\ntopical studies using operations research tools. For example, Gabrel and Murat [90]\n\ndeveloped a mathematical programming-based approach to plan the missions of\n\nEarth observation satellites: the objective is to optimize the shots taken during a\n\ngiven time period, in order to satisfy specific imaging requirements. G\u20acurtuna and\nTre?panier [91] applied an Earth-based vehicle-routing optimization model to\n\n1 Model Development and Optimization for Space Engineering. . . 17\n\nhttp://www.nasa.gov\n\n\npromote a concept of on-orbit satellite service, such as refueling, maintenance, and\n\nfailure repairing. Lang [92] discusses an optimization-based approach to analyze\n\nthe launch capacity of commercial satellites, taking into account the aspects of\n\nvehicle selection, launch operation resource management, and contingency deci-\n\nsion making.\n\nThe ISS itself poses a significant number of planning and scheduling optimiza-\n\ntion problems. An important example deals with its permanent logistic support and\n\non-orbit resource resupply. An international fleet of vehicles provides the station\n\nwith the necessary upload and download activities. A traffic model based on an\n\nMILP formulation (in terms of a lot-sizing problem), aimed at optimizing ISS\n\nlogistic planning, is discussed in this book by Fasano [94]. The suggested approach\n\nhas been utilized to look into the introduction of the automated transfer vehicle\n\n(ATV) by the ESA (http://www.esa.int) in the already existing fleet of support\n\nvehicles, offering significant insights into its sizing during the design phase, and its\n\npotential utilization.\n\nThe extreme complexity of future manned or unmanned interplanetary\n\nmissions\u2014involving lunar bases and in-orbit infrastructures, planned on a\n\nmedium- or long-term multiphases paradigm\u2014is expected to give rise to difficult\n\ntraffic modeling issues that will necessarily require a systematic optimization\n\napproach.\n\nThe experimental activity on board of the ISS requires a detailed (again, short\n\nand medium term) scheduling optimization, in order to benefit from the available\n\nresources such as power, communication channels, data handling, payloads (exper-\n\nimental instruments) as much as possible. In addition to these, the capability to\n\nefficiently face off-nominal scenarios (such as failures or equipment\n\nmalfunctioning) by quick rescheduling is crucial to minimize the possible damage.\n\nAdvanced optimization methods are then expected to contribute to ad hoc decision\n\nsupport and troubleshooting systems.\n\nIn manned on-orbit laboratories, the crew (work) time itself represents a very\n\ncritical resource. As an example of related experience, the MIR station program by\n\nthe Russian Federal Space Agency (Roscosmos, http://www.roscosmos.ru) dealt\n\nwith the optimized scheduling of biomedical activity performed on board by the\n\nastronauts to execute the human posture experiment: for a topical discussion,\n\nconsult Fasano and Piras [95]. The experiment was based on the identification\n\n(via infrared flashes) of dedicated markers positioned on the astronaut\u2019s body while\n\nperforming well-defined physical exercises. This allowed the analysis of the posture\n\nand its variation during the stay in space. The critical aspects related to the flight\n\nprocedure were connected to the crew activity needed for the operations of fixing\n\nthe markers (up to four different types) on the body. Additionally, the marker\n\npositioning should be carried out as precisely as possible in order to minimize the\n\nmeasurement errors. Sequences of experiments were executed at different times\n\nduring the performance on orbit. The related optimization problem consisted in\n\nfinding the sequence of experiments that minimized the setting-up time to pass from\n\none to the next while guaranteeing the execution of all experiments. A traveling\n\nsalesman problem (TSP)-based approach based on an MILP model formulation was\n\n18 G. Fasano and J.D. Pinte?r\n\nhttp://www.esa.int\nhttp://www.roscosmos.ru\n\n\nfollowed: here each marker layout represented a single \u201ccity,\u201d taking into account a\nnumber of operational constraints. Regarding the TSP and approaches to its solu-\n\ntion, consult, e.g., Padberg and Rinaldi [96], Williams [97], or the Mathematical\nProgramming Glossary [66].\n\n1.3.3 Cargo Loading and Unloading\n\nWhile the human experts\u2019 time on board of a spaceship is an extremely valuable\n\nresource, in many cases the space available is just as important: hence, the solution\n\nof cargo accommodation (i.e., loading or packing) problems also becomes essential.\n\nFrequently, conditions that hold \u201cautomatically\u201d on the ground will not do so in\n\nspace: therefore stringent conditions are posed, e.g., on load balancing, stability,\n\nload bearing strength, and multi-drop operations. In addition to these complications,\n\nthe loading space and object geometries involved are often fairly complex.\n\nThe literature of optimized multidimensional loading and packing problems is\n\nextensive, and advanced methods are available to solve difficult instances effi-\n\nciently. Consult, e.g., Castillo et al. [8], Cagan et al. [98], Dyckhoff et al. [99],\n\nFekete and Schepers [100], Faroe et al. [101], Martello et al. [102, 103], and Pisinger\n\nand Sigurd [104, 105]. Most of the related research focuses on the orthogonal\n\nplacement of rectangles (parallelepipeds) into rectangles (parallelepipeds) or on\n\nplacing circles (spheres) into circles or rectangles (parallelepipeds). In addition,\n\nremarkable studies concerning specific nonstandard packing problems are available:\n\nconsult, e.g., Dowsland et al. [106], Egeblad et al. [107], Egeblad and Pisinger [108],\n\nFischetti and Luzzi [109], Gomes and Oliveira [110], Ibaraki et al. [111], Kallrath\n\n[112], Scheithauer et al. [113], Stoyan et al. [114], and Teng et al. [115]. Balancing\n\nconditions are also considered, e.g., by Egeblad et al. [116], Fasano [93], Fasano and\n\nPinte?r [9], Stoyan and Romanova [119] and Takadama et al. [117].\n\nJunqueira et al. [118] investigate the three-dimensional container loading opti-\n\nmization problem in the presence of stability, load bearing strength, and multi-drop\n\nconstraints. An MILP-based approach is applied, and computational results are\n\nreported, comparing the performance of the models adopted on instances from the\n\ntopical literature.\n\nStoyan and Romanova [119] investigate an NLP-based approach to study\n\ncomplex nonstandard two- and three-dimensional (2D and 3D) packing problems.\n\nA number of geometric items, called phi-objects, are introduced as mathematical\nrepresentations of real-world objects. The basic concept of phi-functions is devel-\noped as an analytical tool to describe placement constraints such as containment,\n\nnonoverlapping objects, allowable distances, prohibited areas, and object\n\ntranslations and rotations.\n\nThe CAST (Cargo Accommodation Support Tool) project has been aimed\n\nat cargo optimization of a spacecraft [120, 121]. The project was funded by ESA\n\nand developed by Thales Alenia Space to support all ATV missions. The cargo\n\naccommodation inside the ATV cargo carrier implies the loading of both fluids\n\n1 Model Development and Optimization for Space Engineering. . . 19\n\n\n\n(into storage tanks) and non-fluid items (dry cargo). The dry cargo accommodation\n\ninvolves different levels: small items have to be placed into bags, bags and large\n\nitems are placed into sectors situated inside the racks or on the front panels of the\n\nracks, and racks have to be placed into predefined locations inside the spacecraft\n\nmodule. Mass and volume limitations (at bag, rack, and overall carrier level) are set,\n\ntogether with specific positioning rules. Balancing conditions are also stated to\n\nguarantee the attitude control of the whole system.\n\nCAST\u2014differently from most off-the-shelf packing optimization tools\u2014has\n\nto deal with nonstandard packing issues. This specifically involves the consider-\n\nation of tetris-like items, curved domains, and additional constraints such as\nthose of balancing. A tetris-like item is a cluster of linked, mutually orthogonal\nparallelepipeds: this is more suitable to approximate large real-world items than\n\nsingle parallelepipeds [93]. The solution approach is based on a multilevel\n\nMILP-based heuristic procedure [120\u2013123]. This procedure breaks down the\n\noriginal problem into a set of subproblems, corresponding to the different\n\naccommodation levels (items, bags, racks). An ad hoc extension of CAST\n\n(Fasano and Pinte?r [9], [11]) is already in use. It has been tailored to the stowage\n\nproblem of the Columbus laboratory (ESA) attached to the ISS. Here we could\n\ntake advantage of the significant similarities to the ATV cargo accommodation\n\ncase studied in the framework of CAST [139, 140]. The specific problem of\n\nexploiting empty spaces of partially loaded containers by adding virtual items\n\noriginated in this context [124].\n\nWhile cargo optimization problems in space engineering are widely believed to\n\nbe extremely difficult, issues concerning the on-orbit unloading of vehicles and\n\nmodules (e.g., when docked at the ISS) are not any easier. An accurate operational\n\nscheme\u2014that keeps the spacecraft permanently balanced during the unloading\n\nphase (while the internal mass distribution changes)\u2014is mandatory. This key\n\nrequirement serves to guarantee that the ATV is able to leave the ISS at any time\n\n(for possible emergency reasons).\n\n1.3.4 Payload Accommodation\n\nThe payload accommodation problem (considered inside a space module) merges\n\nscheduling and packing considerations. A related study has been carried out for the\n\nColumbus laboratory (Fasano [149]). Formally, payloads consist of a set of\n\nfacilities with specific resource requirements: such payloads had to be\n\naccommodated by predefined locations inside the racks of the internal module.\n\nThe available on-board accommodation resources had to be used as efficiently as\n\npossible in order to optimize the experimental activity performed by the payloads.\n\nAn overall MILP model was developed to meet two main objectives. The first of\n\nthese was the identification of operational bottlenecks, in order to suggest different\n\nand more suitable on-board resource distributions. The second was the finding of\n\n20 G. Fasano and J.D. Pinte?r\n\n\n\nsatisfactory dynamic (time-dependent) solutions, i.e., feasible accommodations, in\ncompliance with payload operational constraints and with the overall availability of\n\nresources. The latter aspects included crew time, electrical power, and heat rejec-\n\ntion (i.e.,water and/or air cooling) constraints.\n\n1.3.5 System Design\n\nThe increasing complexity of space mission design and assessment defines a\n\nchallenging context of concurrent engineering scenarios that give rise to significant\n\nmultidisciplinary and multi-objective optimization (MDO and MOO) applications:\n\nconsult, e.g., Bandecchi et al. [125], Ciriani and Sarlo [126] and Cramer et al. [138].\n\nThe space systems considered consist of several subsystems: these are generally\n\nassociated to specific disciplines such as avionic, control, electrical, structural, and\n\nthermal engineering. The subsystem-specific optimization objectives may be in\n\nconflict when considered jointly: therefore a high-level perspective is required to\n\nelicit the necessary trade-offs, in order to find an overall (globally) satisfactory\n\nsolution. As the design complexity associated to each subsystem per se can be very\n\nhigh, the resulting MDO and MOO problems are frequently \u201cblack box\u201d global\n\noptimization challenges.\n\nThe literature of \u201cblack box\u201d GO is extensive: consult the related discussion\n\nand references in Sects. 1.1 and 1.2. In the context of the present topic, practically\n\nsignificant contributions are based on meta-heuristics and experimental design-\n\nbased approaches combined with optimization: consult, e.g., Rios and Sahinidis\n\n[36], Cassioli and Schoen [127], and Pinte?r and Horva?th [63], with many further\n\nreferences.\n\nA methodological study aimed at identifying an efficient approach to tackle\n\nconflicts at different subsystems levels (as arising in space engineering during\n\nthe design process) was conducted by Amata et al. [128]). Their research focused\n\non a typical scenario that space system engineering teams have to deal with. The\n\nintroduced MDOmethodology can be brought to a wide range of space engineering\n\napplications.\n\nThe Water vapour and temperature in Troposphere and Stratosphere (WATS)\n\nproject of ESA had been chosen for a detailed system design case study. The\n\ncomponent (mission analysis, power, and propulsion) subsystems were selected as\n\nreference disciplines to simulate a realistic\u2014even if somewhat simplified\u2014space\n\nengineering environment. The suggested MDO approach benefited from the simulta-\n\nneous application of optimization tools from neighborhood search, game theory, and\n\nmulti-criteria decision analysis. The heuristic neighborhood search approach was\n\naimed at finding a set ofParetian (i.e., nondominated) solutions at the highest (system)\nlevel. As the set of such solutions could be extremely high (even infinite), game theory\n\nand multi-criteria aspects were also introduced to explore a tractable set of solutions,\n\nsatisfactory from the overall point of view.\n\n1 Model Development and Optimization for Space Engineering. . . 21\n\n\n\nPastrone and Casalino [129] present an integrated design and trajectory\noptimization approach for hybrid rocket motors and describe a dedicated MDO-\n\nbased code. They use a few key parameters to define the design of the hybrid engine;\n\nnext, the trajectory optimization aspect is handled by continuous controls. To handle\n\nthe different aspects in a unified framework, a mixed optimization procedure has been\n\ndeveloped. To maximize overall mission performance, the direct optimization of\n\nengine design variables is coupledwith the resulting trajectory\u2019s indirect optimization.\n\nThe proposed optimization procedure is illustrated by interesting applications.\n\n1.3.6 Subsystem Design\n\nWithin the context of the discussion in Sect. 1.3.5, demanding optimization problems\n\nare often associated even with the design of (structural, thermal, avionic, power,\n\nsoftware and navigation control) sub-systems. Since the mathematical models\n\ninvolved are typically complex, a simulation approach is often preferred to the more\n\ndifficult ones based on optimizationmethodologies. This view is referred to as model-\n\nbased design (MBD); consult, e.g., Nicolescu and Mosterman [130]. An example of\n\nthe MBD approach is the determination of the structure and shape of reentry vehicles.\n\nAn interesting application is provided also by Boada et al. [150]. They propose an\n\nadvanced approach to control a formation flying mission acting both on attitude and\n\nrelative position. Optimization-based formulations are also frequently used, however.\n\nAn interesting example is discussed by Norstr\u00f8m et al. [131] regarding the optimal\n\ndesign of control software systems. Such systems are used, e.g., in satellites to activate\n\ncertain system functions, such as antenna deployment. The control software receives\n\ninformation from sensors and uses this information to trigger the required functions.\n\nLet us point out that both inadvertent activation and delayed response can have severe\n\nconsequences. Hence, the way sensor information is processed can strongly influence\n\nthe overall performance. The presented approach models various design options in\n\ndetail so that the software control flowcan beoptimized applyingdecision theory [132].\n\nNorstr\u00f8m et al. consider the decision of when to deploy a satellite antenna. More\n\nprecisely, the control software has to decide when to inspect the sensors and when to\n\ndeploy the antenna. The authors show how to optimize both the inspection time and the\n\ntime to deploy the antenna, given the inspection results. The consequences of the\n\ncontrol software-based decisions are quantified inmonetary loss associatedwith failure:\n\nthis approach allows the evaluation of the risk in terms of the expected monetary loss.\n\n1.3.7 Ergonomic Aspects\n\nIn manned space missions, the many related biological and biomedical issues also\n\ngive rise to tough optimization problems. As an example, microbial contamination\n\ncontrol inside a sealed module represents a challenging issue in manned interplan-\n\netary missions foreseen in the near future.\n\n22 G. Fasano and J.D. Pinte?r\n\n\n\nIn this context, an analytical study was carried out by Thales Alenia Space in the\n\nframework of the MIR mission [133]. The mathematical modeling paradigm was\n\nbased on the Lotka\u2013Volterra prey\u2013predator model scheme: consult, e.g., Brauer\n\nand Castillo-Chavez [134]. The microbial colonies were modeled as \u201cprey\u201d and\n\nthe possible environmental control actions such as air filtering and conditioning\n\n(in terms of temperature, humidity, and velocity) represented the activities of the\n\n\u201cpredators.\u201d The model also included contamination control efficiency targets:\n\nthe resulting problem was solved using optimal control tools.\n\n1.3.8 Payload Performance\n\nA primary aspect concerning payload performance is obviously related to optimal\n\non-board resource scheduling. As an example, the objective can be to maximize the\n\nnumber of experimental cycles executed during a given mission (or within a given\n\ntime period). The optimization of payload design itself will also be beneficial in\n\norder to maximize mission efficiency.\n\nA very interesting problem that belongs to this category is Laue\u2019s lens, a device\n\ndesigned for gamma-ray astrophysical observations: consult, e.g., Halloin and\n\nBastie [74]. The device consists of a set of different types of crystals, all placed\n\non a platform. The instrument efficiency strongly depends on the following aspects:\n\nthe partition of the crystal set into subsets of different typologies; the dimension,\n\nposition, and orientation of each crystal; the layout domain geometrical configura-\n\ntion (i.e., overall shape of the platform); and the areas where the crystals can be\n\nplaced. The related optimization problem will become a difficult MINLP that\n\n(evidently) can be similar in difficulty to several realistic cargo loading problems.\n\nIn certain cases, payload performance optimization may be achieved by\n\ninfluencing overall system behavior. This is the case for observation satellites\n\nwhere an efficient pointing error minimization (obtained by a very accurate attitude\n\ncontrol system) is mandatory.\n\nMehlem [135] discusses the problem of optimal magnetic cleanliness. Space-\n\ncraft quite often generates undesired magnetic fields that could disturb scientific\n\nexperiments, specifically including particle-based studies. The chapter discusses a\n\nrelated model development framework and an NLP-based solution approach.\n\n1.3.9 Observation Data Handling and Remote Monitoring\n\nSpace observation and telemetry lead to difficult optimization problems, focused on\n\nbest possible measurement accuracy and precision under technological and logistic\n\nconstraints. Similarly challenging issues arise in the areas of data handling and\n\ninterpretation. A well-known example is the paradigm of Global Positioning\n\nSystems (GPS): here measured data have to be analytically processed in real time.\n\n1 Model Development and Optimization for Space Engineering. . . 23\n\n\n\nThe position determination problem (on Earth) by using satellite distance\n\nmeasurements can be cast as a distance geometry exercise: the objective is to find\n\nthe intersection of spheres. This problem can be formulated and handled by GO:\n\nconsult, e.g., Migdalas et al. [136].\nFuture interplanetary exploration is expected to give rise to hard remote\n\nmonitoring issues. Examples are semiautonomous rover control or the observation\n\nof planetary regions. Addressing the latter issue, Fasano and Pinte?r [9] investigate\n\nthe optimized configuration of sensor cameras, to be placed in a suitably defined\n\nthree-dimensional cubic region E, in order to maximize the coverage of an\nembedded cube C?E. The sensing regions associated with each of the cameras\nare convex but not necessarily identical. In order to handle this practically impor-\n\ntant problem-type, mixed-integer linear and nonlinear programming (MILP and\n\nMINLP) model formulations are presented, with illustrative numerical results.\n\n1.3.10 Cost and Revenue Management\n\nAs space exploration ambitions are ever increasing, the space engineering commu-\n\nnity is (has to be) committed to take into account the economic aspects related to\n\nprospective projects and programs. Financial constraints have become of para-\n\nmount concern in recent times. This leads to the determination of key strategic\n\nand tactical choices regarding the feasibility and prioritization of space projects. As\n\nthe space engineering sector has to follow an extremely competitive paradigm, the\n\ncapability of optimizing research and development (R&D) projects as well as\n\nequipment utilization plans\u2014in terms of cost minimization and revenue maximiza-\n\ntion\u2014is a categorical imperative nowadays.\n\nFrom a commercial point of view, two main classes of space systems can be\n\nconsidered. Systems in the first category perform a continuing service over a certain\n\ntime period: examples are telecommunication satellites. Systems in the second\n\ncategory perform recurrent support: examples are launchers. The relevant cost\n\nand revenue plans can be formulated either in terms of nonlinear (noncontinuous)\n\ncontrol problems or\u2014after a discretization of the time period considered\u2014as MILP\n\nand MINLP models.\n\nThales Alenia Space carried out a survey on this important subject, taking as\n\nreference the Space Solar Power Scenario Study (conducted in 1998 by the German\n\nAerospace Center). The latter study focused on the realization of an orbiting solar\n\npower station. A specific cash-flow mathematical model was implemented by\n\nFasano adopting an MILP approach. In the study and similar analyses, various\n\noptimization objectives could be considered, depending on the perspective\n\nrequested: examples are minimal break-even-point distance, minimal utilization\n\ncosts, and maximal final revenue obtained.\n\n24 G. Fasano and J.D. Pinte?r\n\n\n\n1.3.11 Further Application Perspectives\n\nTo conclude the discussion of Sect. 1.3, we mention some other\u2014quite different,\n\nbut at the same time highly relevant\u2014application areas in which OR-based\n\nmodeling and optimization can play a significant role. These applications are\n\nincreasingly significant, even if (currently) they are from a relatively small portion\n\nof novel application areas. Further miscellaneous applications are also listed to\n\nindicate a wide range of perspectives. Most of the applications highlighted here can\n\nalso contribute to technological spin-offs in several non-space sectors.\n\nChallenging optimization issues arise in the context of guidance and navigation\n\nof vehicles: here typically well-tested classic methods such as Kalman filtering are\n\nusually adopted: consult, e.g., Welch and Bishop [137]. The increasingly used\n\nMBD poses ever more\u2014at least in terms of its subproblems\u2014nonlinear optimiza-\n\ntion frameworks.\n\nAs a second example, wemention the need for a nontrivial propulsion plan during\n\na launch mission. Given the overall available capacity of the boosters, the objective\n\nis to provide an optimized fuel supply sequence in order to keep the overall system\n\ncontinuously balanced, thereby making its control easier and more efficient.\n\nRisk analysis\u2014including worst case, what-if, and sensitivity analyses\u2014often\n\ncan be efficiently combined with advanced optimization tools. This is the case, for\n\ninstance, in many practical cargo accommodation tasks, since the actual mass of the\n\nitems to load may not be known exactly up to the last minute.\n\nIt is understood that the future manned space missions such as the ones\n\nconcerning lunar base habitation will require the resolution of many challenging\n\nissues of space urbanism and architecture, agriculture, and life science. Issues to\n\nconsider will include facility location, infrastructure interconnections, ergonomic\n\nand livableness conditions in the forthcoming artificial environments. These issues\n\nwill necessarily lead to very tough optimization problems, to be addressed at\n\ndifferent levels.\n\nIn spite of the tremendous challenges faced now and in the future, the ambitious\n\nlong-term objectives of space engineering will go well beyond the goal of \u201clanding\n\na man on the moon and returning him safely to the earth\u201d as conjectured by\n\nPresident J.F. Kennedy [143].\n\n1.4 Concluding Remarks\n\nIn this chapter we have reviewed an OR-based approach to the modeling and\n\nsolution of many important problems arising in the context of space engineering.\n\nIn Sect. 1.1, the introduction of a general model development framework is\n\nfollowed by highlighting several relevant model types and paradigms such as\n\nNLP and GO, MILP and MINLP, MOO and MDO. We also discuss corresponding\n\n1 Model Development and Optimization for Space Engineering. . . 25\n\n\n\noptimization software implementations, and\u2014as an illustration\u2014in Sect. 1.2 we\n\nintroduce the LGO solver suite for general constrained nonlinear (global and local)\n\noptimization. LGO integrates several algorithmic approaches with strong theoreti-\n\ncal convergence properties, including a new option that enables the handling of\n\ncomputationally expensive models under resource constraints. We also discuss a\n\nrange of model development environments and tools (Sects. 1.1 and 1.2) that can be\n\nput to good use also in space engineering applications. A fairly detailed review of\n\ncurrent and prospective OR applications in space research is provided in Sect. 1.3:\n\nthis review draws upon contributed chapters to the present volume, as well as on\n\nother important sources. We will be glad to lean about new application areas and\n\nchallenges.\n\nAcknowledgments First of all, we wish to thank all contributing authors to the present edited\n\nvolume [11], as well as our coauthors for their contributions to joint work listed in the References.\n\nThanks are also due to M. Parisch and C. Tomatis (Thales Alenia Space) for useful discussions and\n\nvaluable suggestions regarding the topics reviewed in Sect. 1.3.\n\nReferences\n\n1. Schittkowski, K.: Numerical Data Fitting in Dynamical Systems. Kluwer, Dordrecht (2002)\n\n2. Pinte?r, J.D.: Global Optimization in Action. Kluwer, Dordrecht (1996)\n\n3. Pinte?r, J.D.: Globally optimized calibration of nonlinear models: techniques, software, and\n\napplications. Optim. Method. Softw. 18, 335\u2013355 (2003)\n\n4. Pinte?r, J.D.: Calibrating artificial neural networks by global optimization. Expert Syst. Appl.\n\n39, 25\u201332 (2012)\n\n5. Pinte?r, J.D.: Globally optimized spherical point arrangements: model variants and illustrative\n\nresults. Ann. Oper. Res. 104, 213\u2013230 (2001)\n\n6. Pinte?r, J.D., Kampas, F.J.: Nonlinear optimization in Mathematica with MathOptimizer\nProfessional. Mathematica Educ. Res. 10, 1\u201318 (2005)\n\n7. Pinte?r, J.D., Kampas, F.J.: Benchmarking nonlinear optimization software in technical\n\ncomputing environments: global optimization in Mathematica with MathOptimizer Profes-\nsional. TOP (Off. J. Spanish Soc. Stat. Oper. Res.). Published online August 11 (2011). Doi:\n10.1007/s11750-011-0209-5\n\n8. Castillo, I., Kampas, F.J., Pinte?r, J.D.: Solving circle packing problems by global optimiza-\n\ntion: numerical results and industrial applications. Eur. J. Oper. Res. 191, 786\u2013802 (2008)\n\n9. Fasano, G., Pinte?r, J.D.: Global optimization approaches to sensor placement: model versions\n\nand illustrative results. In: Fasano, G., Pinte?r, J.D. (eds.) Modeling and Optimization in Space\n\nEngineering. Springer, New York (2013b)\n\n10. Ciriani, T.A., Fasano, G., Gliozzi, S., Tadei, R. (eds.): Operations Research in Space and Air.\n\nKluwer, Dordrecht (2003)\n\n11. Fasano, G., Pinte?r, J.D. (eds.): Modeling and Optimization in Space Engineering. Springer,\n\nNew York (2013a)\n\n12. Bazaraa, M.S., Sherali, H.D., Shetty, C.M.: Nonlinear Programming: Theory and Algorithms.\n\nWiley, New York (1993)\n\n13. Peressini, A.L., Sullivan, F.E., Uhl, J.J.: The Mathematics of Nonlinear Programming.\n\nSpringer, New York (1988)\n\n14. Chong, E.K.P., Zak, S.H.: An Introduction to Optimization, 2nd edn. Wiley, New York\n\n(2001)\n\n26 G. Fasano and J.D. Pinte?r\n\nhttp://dx.doi.org/10.1007/s11750-011-0209-5\n\n\n15. Edgar, T.F., Himmelblau, D.M., Lasdon, L.S.: Optimization of Chemical Processes, 2nd edn.\n\nMcGraw-Hill, New York (2001)\n\n16. Diwekar, U.: Introduction to Applied Optimization. Kluwer, Dordrecht (2003)\n\n17. Boyd, S., Vandenberghe, L.: Convex Optimization. Cambridge University Press, Cambridge\n\n(2004)\n\n18. Hillier, F.J., Lieberman, G.J.: Introduction to Operations Research, 8th edn. McGraw-Hill,\n\nNew York (2005)\n\n19. Nocedal, J., Wright, S.J.: Numerical Optimization, 2nd edn. Springer, New York (2006)\n\n20. Horst, R., Pardalos, P.M. (eds.): Handbook of Global Optimization, vol. 1. Kluwer, Dordrecht\n\n(1995)\n\n21. Horst, R., Tuy, H.: Global Optimization: Deterministic Approaches. Springer, Berlin (1996)\n\n22. Kearfott, R.B.: Rigorous Global Search: Continuous Problems. Kluwer, Dordrecht (1996)\n\n23. Mockus, J., Eddy, W., Mockus, A., Mockus, L., Reklaitis, G.: Bayesian Heuristic Approach\n\nto Discrete and Global Optimization. Kluwer, Dordrecht (1996)\n\n24. Floudas, C.A., Pardalos, P.M., Adjiman, C., Esposito, W.R., G\u20acum\u20acus?, Z.H., Harding, S.T.,\nKlepeis, J.L., Meyer, C.A., Schweiger, C.A.: Handbook of Test Problems in Local and Global\n\nOptimization. Kluwer, Dordrecht (1999)\n\n25. Strongin, R.G., Sergeyev, Y.D.: Global Optimization with Non-Convex Constraints. Kluwer,\n\nDordrecht (2000)\n\n26. Pardalos, P.M., Romeijn, H.E. (eds.): Handbook of Global Optimization, vol. 2. Kluwer,\n\nDordrecht (2002)\n\n27. Zabinsky, Z.B.: Stochastic Adaptive Search for Global Optimization. Kluwer, Dordrecht\n\n(2003)\n\n28. Liberti, L., Maculan, N. (eds.): Global Optimization: From Theory to Implementation.\n\nSpringer, New York (2005)\n\n29. Grossmann, I.E. (ed.): Global Optimization in Engineering Design. Kluwer, Dordrecht\n\n(1996)\n\n30. Papalambros, P.Y., Wilde, D.J.: Principles of Optimal Design, 2nd edn. Cambridge Univer-\n\nsity Press, Cambridge (2000)\n\n31. Pinte?r, J.D. (ed.): Global Optimization: Scientific and Engineering Case Studies. Springer,\n\nNew York (2006)\n\n32. Neumaier, A.: Complete search in continuous global optimization and constraint satisfaction.\n\nIn: Iserles, A. (ed.) Acta Numerica 2004, pp. 271\u2013369. Cambridge University Press,\n\nCambridge (2004)\n\n33. Floudas, C.A., Gounaris, C.E.: A review of recent advances in global optimization. J. Global\n\nOptim. 45, 3\u201338 (2009)\n\n34. Pinte?r, J.D.: Global optimization: software, test problems, and applications. In: Pardalos,\n\nP.M., Romeijn, H.E. (eds.) Handbook of Global Optimization, vol. 2, pp. 515\u2013569. Kluwer,\n\nDordrecht (2002)\n\n35. Pinte?r, J.D.: Nonlinear optimization in modeling environments: software implementations for\n\ncompilers, spreadsheets, modeling languages, and integrated computing systems. In:\n\nJeyakumar, V., Rubinov, A.M. (eds.) Continuous Optimization: Current Trends and Modern\n\nApplications, pp. 147\u2013173. Springer, New York (2005)\n\n36. Rios, L.M., Sahinidis, N.V.: Derivative-free optimization: a review of algorithms and com-\n\nparison of software implementations. Technical report, Department of Chemical Engineer-\n\ning, Carnegie Mellon University, Pittsburgh (to appear)\n\n37. Floudas, C.A.: Deterministic Global Optimization: Theory, Methods, and Applications.\n\nKluwer, Dordrecht (2000)\n\n38. Nowak, I.: Relaxation and Decomposition Methods for Mixed Integer Nonlinear Program-\n\nming. Springer, New York (2005)\n\n39. Tawarmalani, M., Sahinidis, N.V.: Convexification and Global Optimization in Continuous\n\nand Mixed-Integer Nonlinear Programming. Kluwer, Dordrecht (2002)\n\n40. Li, D., Sun, X.: Nonlinear Integer Programming. Springer, New York (2006)\n\n1 Model Development and Optimization for Space Engineering. . . 27\n\n\n\n41. Burer, S., Letchford,A.N.: Non-convexmixed-integer nonlinear programming: a survey. Techni-\n\ncal Report, Department of Management Sciences, University of Iowa. http://www.optimization-\n\nonline.org/DB_HTML/2012/02/3378.html (2012). Accessed on April 30, 2012\n\n42. Michalewicz, Z.: Genetic Algorithms + Data Structures \u00bc Evolution Programs, 3rd edn.\nSpringer, New York (1996)\n\n43. Osman, I.H., Kelly, J.P. (eds.): Meta-Heuristics: Theory and Applications. Kluwer, Dordrecht\n\n(1996)\n\n44. Glover, F., Laguna, M.: Tabu Search. Kluwer, Dordrecht (1997)\n\n45. Rudolph, G.: Convergence Properties of Evolutionary Algorithms. Verlag Dr. Kovac,\n\nHamburg (1997)\n\n46. Voss, S., Martello, S., Osman, I.H., Roucairol, C. (eds.): Meta-Heuristics: Advances and\n\nTrends in Local Search Paradigms for Optimization. Kluwer, Dordrecht (1999)\n\n47. Rothlauf, F.: Representations for Genetic and Evolutionary Algorithms. Physica-Verlag,\n\nHeidelberg (2002)\n\n48. Jones, N.C., Pevzner, P.A.: An Introduction to Bioinformatics Algorithms. MIT, Cambridge\n\n(2004)\n\n49. Michalewicz, Z., Vogel, D.B.: How to Solve It: Modern Heuristics, 2nd edn. Springer, New\n\nYork (2004)\n\n50. Weise, T.: Global Optimization Algorithms\u2014Theory and Application. An electronic book\n\navailable for download at http://www.it-weise.de/projects/book.pdf (2009)\n\n51. Leyffer, S., Mahajan, A.: Software for nonlinearly constrained optimization. Preprint\n\nANL/MCS-P1768-0610, Mathematics and Computer Science Division, Argonne National\nLaboratory, Argonne (2010)\n\n52. Pinte?r, J.D.: Software development for global optimization. In: Pardalos, P.M., Coleman, T.F.\n\n(eds.) Global Optimization: Methods and Applications. Fields Institute Communications,\n\nvol. 55, pp. 183\u2013204. American Mathematical Society, Providence (2009)\n\n53. Kallrath, J. (ed.): Modeling Languages in Mathematical Optimization. Kluwer, Dordrecht\n\n(2004)\n\n54. Maplesoft: Maple. Maplesoft, Waterloo (2012). www.maplesoft.com\n\n55. Wolfram Research: Mathematica. Wolfram Research, Champaign (2012). www.wolfram.com\n\n56. The MathWorks: MATLAB. The MathWorks, Natick (2012). www.mathworks.com\n\n57. Pinte?r, J.D.: LGO\u2014A program system for continuous and Lipschitz optimization. In: Bomze,\n\nI.M., Csendes, T., Horst, R., Pardalos, P.M. (eds.) Developments in Global Optimization,\n\npp. 183\u2013197. Kluwer, Dordrecht (1997)\n\n58. Pinte?r, J.D.: Nonlinear optimization with GAMS /LGO. J. Global Optim. 38, 79\u2013101 (2007)\n\n59. Pinte?r, J.D., Kampas, F.J.: O.R. model development and optimization with Mathematica. In:\n\nGolden, B., Raghavan, S., Wasil, E. (eds.) The Next Wave in Computing, Optimization, and\n\nDecision Technologies, pp. 285\u2013302. Springer, New York (2005)\n\n60. Pinte?r, J.D., Linder, D., Chin, P.: Global optimization toolbox for maple: an introduction with\n\nillustrative applications. Optim. Method. Softw. 21(4), 565\u2013582 (2006)\n\n61. Pinte?r Consulting Services: LGO\u2014A model development and solver system for global\u2013local\n\nnonlinear optimization. User\u2019s guide. Distributed by Pinte?r Consulting Services, Halifax\n\n(2012). www.pinterconsulting.com\n\n62. Pinte?r, J.D.: RSS + LGO ? a regularly spaced sampling method for experimental design\nintegrated with the LGO solver suite for nonlinear optimization. Project report, TA?MOP\n\n4.2.2-08/01-2008-0021 Project. Sze?chenyi Istva?n University, Gyo?r (2011)\n\n63. Pinte?r, J.D., Horva?th, Z.: Integrated experimental design and nonlinear optimization to handle\n\ncomputationally expensive models under resource constraints. J. Global Optim. Published\n\nonline March 15 (2012). doi: 10.1007/s10898-012-9882-7 (2012)\n\n64. Lahey Computer Systems: FORTRAN 95 User\u2019s Guide. Lahey Computer Systems, Incline\n\nVillage (2002). www.lahey.com\n\n65. Lahey Computer Systems: FORTRAN 95 Language Reference. Lahey Computer Systems,\n\nIncline Village (2002). www.lahey.com\n\n28 G. Fasano and J.D. Pinte?r\n\nhttp://www.optimization-online.org/DB_HTML/2012/02/3378.html\nhttp://www.optimization-online.org/DB_HTML/2012/02/3378.html\nhttp://www.it-weise.de/projects/book.pdf\nhttp://www.maplesoft.com\nhttp://www.wolfram.com\nhttp://www.mathworks.com\nhttp://www.pinterconsulting.com\nhttp://dx.doi.org/10.1007/s10898-012-9882-7\nhttp://www.lahey.com\nhttp://www.lahey.com\n\n\n66. INFORMS Computing Society. Mathematical Programming Glossary. http://glossary.\n\ncomputing.society.informs.org/ (2012)\n\n67. Becerra, V.M.: Optimal control. Scholarpedia 3(1), 5354 (2008)\n\n68. Becerra, V.M.: Solving optimal control problems at no cost with PSOPT. In: Proceedings of\n\nIEEE Multiconference on Systems and Control, Yokohama, Japan, 7\u201310 Sept 2010\n\n69. Betts, J.T.: Practical Methods for Optimal Control Using Nonlinear Programming. SIAM,\n\nPhiladelphia (2001)\n\n70. Betts, J.T.: Practical Methods for Optimal Control and Estimation Using Nonlinear Program-\n\nming. SIAM, Philadelphia (2010)\n\n71. B\u20acuskens, C., Maurer, H.: SQP-methods for solving optimal control problems with control\nand state constraints: adjoint variables, sensitivity analysis and real-time control. J. Comput.\n\nAppl. Math. 120, 85\u2013108 (2000)\n\n72. Elnagar, G., Kazemi, M.A., Razzaghi, M.: The pseudospectral Legendre method for\n\ndiscretizing optimal control problems. IEEE T. Automat. Contr. 40, 1793\u20131796 (1995)\n\n73. Hager, W.: Runge\u2013Kutta methods in optimal control and the transformed adjoint system.\n\nNumer. Math. 87, 247\u2013282 (2000)\n\n74. Halloin, H., Bastie, P.: Laue diffraction lenses for astrophysics: theoretical concepts.\n\nExp. Astron. 20, 151\u2013170 (2005)\n\n75. Hartl, R.F., Sethi, S.P., Vickson, R.G.A.: A survey of the maximum principles for optimal\n\ncontrol problems with state constraints. SIAM Rev. 37(2), 181\u2013218 (1995)\n\n76. Kirk, D.E.: Optimal Control Theory: An Introduction. Dover, Mineola (2004)\n\n77. Lebedev, L.P., Cloud, M.J.: The Calculus of Variations and Functional Analysis with\n\nOptimal Control and Applications in Mechanics. World Scientific, Singapore (2003)\n\n78. Lewis, F.L., Syrmos, V.L.: Optimal Control, 2nd edn. Wiley, New York (1995)\n\n79. Ross, I.M.: A primer on pontryagin\u2019s principle in optimal control. Collegiate Publishers,\n\nCarmel (2009)\n\n80. Sethi, S., Thompson, G.: Optimal Control Theory: Applications to Management Science and\n\nEconomics. Kluwer, Norwell (2000)\n\n81. GTOC2: 2nd Global Trajectory Optimization Competition. http://www.esa.int/gsp/ACT/\n\nmad/op/GTOC/index.htm (2006). Accessed on April 30, 2012\n\n82. Becerra, V.M.: Practical direct collocation methods for computational optimal control.\n\nIn: Fasano, G. Pinte?r, J.D., (eds.) Modeling and Optimization in Space Engineering. Springer,\n\nNew York (2013)\n\n83. Cassioli, A., Izzo, D., Di Lorenzo, D., Locatelli, M., Schoen, F.: Global optimization\n\napproaches for optimal trajectory planning. In: Fasano, G., Pinte?r, J.D. (eds.) Modeling and\n\nOptimization in Space Engineering. Springer, New York (2013)\n\n84. Colasurdo, G., Casalino, L.: Indirect methods for the optimization of spacecraft trajectories.\n\nIn: Fasano, G., Pinte?r, J.D. (eds.) Modeling and Optimization in Space Engineering. Springer,\n\nNew York (2013)\n\n85. Topputo, F., Belbruno, E.: Optimization of low energy transfers. In: Fasano, G., Pinte?r, J.D.\n\n(eds.) Modeling and Optimization in Space Engineering. Springer, New York (2013)\n\n86. Di Lizia, P., Armellin, R., Topputo, F., Bernelli-Zazzera, F., Berz, M.: Global optimization of\n\ninterplanetary transfers with deep space maneuvers using differential algebra. In: Fasano, G.,\n\nPinte?r, J.D. (eds.) Modeling and Optimization in Space Engineering. Springer, New York\n\n(2013)\n\n87. Cremaschi, F.: Trajectory optimization for launchers and re-entry vehicles. In: Fasano, G.,\n\nPinte?r, J.D. (eds.)Modeling andOptimization in Space Engineering. Springer, NewYork (2013)\n\n88. Kampas, F.J., Pinte?r, J.D.: Solving a System of ODEs by the \u201cShooting Method\u201d. An\n\nIllustrative Application of MathOptimizer Professional described in the User\u2019s Guide. Pinte?r\nConsulting Services, Canada (2007). www.pinterconsulting.com\n\n89. B\u20acuskens, C., Wassel, D.: The ESA NLP solver WORHP. In: Fasano, G., Pinte?r, J.D. (eds.)\nModeling and Optimization in Space Engineering. Springer, New York (2013)\n\n1 Model Development and Optimization for Space Engineering. . . 29\n\nhttp://glossary.computing.society.informs.org/\nhttp://glossary.computing.society.informs.org/\nhttp://www.esa.int/gsp/ACT/mad/op/GTOC/index.htm\nhttp://www.esa.int/gsp/ACT/mad/op/GTOC/index.htm\nhttp://www.pinterconsulting.com\n\n\n90. Gabrel, V., Murat, C.: Mathematical programming for earth observation satellite mission\n\nplanning. In: Ciriani, T., Fasano, G., Gliozzi, S., Tadei, R. (eds.) Operations Research in\n\nSpace and Air, pp. 103\u2013122. Kluwer, Dordrecht (2003)\n\n91. G\u20acurtuna, O., Tre?panier, J.: On-orbit satellite servicing: a space-based vehicle routing prob-\nlem. In: Ciriani, T., Fasano, G., Gliozzi, S., Tadei, R. (eds.) Operations Research in Space and\n\nAir, pp. 123\u2013142. Kluwer, Dordrecht (2003)\n\n92. Lang, D.E.: Launch capacity analysis for commercial communications satellites. In: Ciriani,\n\nT., Fasano, G., Gliozzi, S., Tadei, R. (eds.) Operations Research in Space and Air, pp.\n\n161\u2013178. Kluwer, Dordrecht (2003)\n\n93. Fasano, G.: A global optimization point of view to handle non-standard object packing\n\nproblems. J. Global Optim. (2012). DOI: 10.1007/s10898-012-9865-8 (to appear)\n\n94. Fasano, G.: A trafficmodel for the international space station: anMIP approach. In: Fasano, G.,\n\nPinte?r, J.D. (eds.) Modeling and Optimization in Space Engineering. Springer, New York\n\n(2013)\n\n95. Fasano, G., Piras, A.: Mission integration optimization techniques in support of timelining,\n\noperational sequence definition and resource exploitation. In: Proceedings of the 23rd\n\nAIDAA (Italian Association of Aeronautics and Astronautics) Conference, Rome, Italy,\n\n11\u201315 Sept 1995\n\n96. Padberg, M.W., Rinaldi, G.: A branch and cut algorithm for the resolution of large-scale\n\nsymmetric traveling salesman problems. SIAM Rev. 33, 60\u2013100 (1991)\n\n97. Williams, H.P.: Model Building in Mathematical Programming, 4th edn. Wiley, Chichester\n\n(2000)\n\n98. Cagan, J., Shimada, K., Yin, S.: A survey of computational approaches to three-dimensional\n\nlayout problems. Comput. Aided Des. 34, 597\u2013611 (2002)\n\n99. Dyckhoff, H., Scheithauer, G., Terno, J.: Cutting and packing. In: Dell\u2019Amico, M., Maffioli,\n\nF., Martello, S. (eds.) Annotated Bibliographies in Combinatorial Optimization, pp. 393\u2013412.\n\nWiley, Chichester (1997)\n\n100. Fekete, S., Schepers, J.: A combinatorial characterization of higher-dimensional orthogonal\n\npacking. Math. Oper. Res. 29, 353\u2013368 (2004)\n\n101. Faroe, O., Pisinger, D., Zachariasen, M.: Guided local search for the three-dimensional bin\n\npacking problem. INFORMS J. Comput. 15(3), 267\u2013283 (2003)\n\n102. Martello, S., Pisinger, D., Vigo, D.: The three-dimensional bin packing problem. Oper. Res.\n\n48(256), 267 (2000)\n\n103. Martello, S., Pisinger, D., Vigo, D., Den Boef, E., Korst, J.: Algorithm 864: general and\n\nrobot-packable variants of the three-dimensional bin packing problem. ACM T. Math. Softw.\n\n33(1) (2007)\n\n104. Pisinger, D., Sigurd, M.M.: The two-dimensional bin packing problem with variable bin sizes\n\nand costs. Discrete Optim. 2(2), 154\u2013167 (2005)\n\n105. Pisinger, D., Sigurd, M.M.: Using decomposition techniques and constraints programming\n\nfor solving the two-dimensional bin packing problem. INFORMS J. Comput. 19(1), 36\u201351\n\n(2006)\n\n106. Dowsland, K.A., Dowsland, W.B., Bennell, J.A.: Jostling for position: local improvement for\n\nirregular cutting patterns. J. Oper. Res. Soc. 49, 647\u2013658 (1998)\n\n107. Egeblad, J., Nielsen, B.K., Odgaard, A.: Fast neighbourhood search for two- and three-\n\ndimensional nesting problems. Eur. J. Oper. Res. 183(3), 1249\u20131266 (2007)\n\n108. Egeblad, J., Pisinger, D.: Heuristic approaches for the two- and three-dimensional knapsack\n\npacking problem. Comput. Oper. Res. 36, 1026\u20131049 (2009)\n\n109. Fischetti, M., Luzzi, I.: Mixed-integer programming models for nesting problems.\n\nJ. Heuristics 15(3), 201\u2013226 (2009)\n\n110. Gomes, A.M., Oliveira, J.F.: A 2-exchange heuristics for nesting problems. Eur. J. Oper. Res.\n\n141, 359\u2013570 (2002)\n\n111. Ibaraki, T., Imahori, S., Yagiura, M.: Hybrid metaheuristics for packing problems. In: Blum,\n\nC., Blesa Aguilera, M.J., Roli, A., Sampels, M. (eds.) Hybrid Metaheuristics: An Emerging\n\n30 G. Fasano and J.D. Pinte?r\n\n\n\nApproach to Optimization. Studies in Computational Intelligence (SCI), vol. 114,\n\npp. 185\u2013219. Springer, Berlin (2008)\n\n112. Kallrath, J.: Cutting circles and polygons from area-minimizing rectangles. J. Global Optim.\n\n43, 299\u2013328 (2009)\n\n113. Scheithauer, G., Stoyan, Y.G., Romanova, T.Y.: Mathematical modeling of interactions of\n\nprimary geometric 3D objects. Cybernet. Systems Anal. 41, 332\u2013342 (2005)\n\n114. Stoyan, Y.G., Scheithauer, G., Gil, N., Romanova, T.Y.: F-functions for complex\n2D-objects. 4OR (Quart. J. Belg. French Ital. Oper. Res. Soc.) 2, 69\u201384 (2004)\n\n115. Teng, H.F., Sun, S.L., Liu, D.Q.: Layout optimization for the objects located within a rotating\n\nvessel a three-dimensional packing problem with behavioural constraints. Comput. Oper.\n\nRes. 28(6), 521\u2013535 (2001)\n\n116. Egeblad, J.: Placement of two- and three-dimensional irregular shapes for inertia moment and\n\nbalance. In: Morabito R, Arenales MN, Yanasse HH (eds.). Int. Trans. Oper. Res. 16(6),\n\n789\u2013807 (2009) [Special issue on cutting, packing and related problems]\n\n117. Takadama, K., Tokunaga, F., Shimohara, K.: (2004) Capabilities of a multiagent-based cargo\n\nlayout system for H-II transfer vehicle. In: 16th IFAC Symposium on Automatic Control in\n\nAerospace (ACA\u201904), pp. 250\u2013255, St. Petersburg, Russia, 14\u201318 June 2004\n\n118. Junqueira, L., et al.: Optimization models for the three-dimensional container loading\n\nproblem with practical constraints. In: Fasano, G., Pinte?r, J.D. (eds.) Modeling and Optimi-\n\nzation in Space Engineering. Springer, New York (2013)\n\n119. Stoyan, Y.G., Romanova, T.: Mathematical models of placement optimisation: two- and\n\nthree-dimensional problems and applications. In: Fasano, G., Pinte?r, J.D. (eds.) Modeling and\n\nOptimization in Space Engineering. Springer, New York (2013)\n\n120. Bussolino, L., Fasano, G., Novelli, A.: The CAST project. In: Ciriani, T., Fasano, G., Gliozzi,\n\nS., Tadei, R. (eds.) Operations Research in Space and Air, pp. 13\u201326. Kluwer, Dordrecht\n\n(2003)\n\n121. Fasano, G., Barrera, M., Lavopa, C., Arguello, L., Steinkopf, M.: Cargo accommodation by\n\ninteractive engineering: the CAST project. In: 9th international workshop on simulation for\neuropean space programmes - SESP 2006- 434950, ESTEC Noordwijk, the Netherlands, 6\u20138\n\nNov 2006\n\n122. Fasano, G.: A multi-level MIP-based heuristic approach for the cargo accommodation of a\n\nspace vehicle.In: 6th ESICUP Meeting, Valencia, Spain, 25\u201329 Mar 2009\n\n123. Fasano, G., Lavopa, C., Negri, D., Vola, M.C., Castellazzo, A.: Packing optimization\n\nproblems in space engineering. In: SIMAI Biannual Congresses, Turin, June 25\u201328 (2012)\n\n124. Fasano, G., Vola, M.C.: Space module on-board stowage optimization by exploiting empty\n\ncontainer volumes. In: Fasano, G., Pinte?r, J.D. (eds.) Modeling and Optimization in Space\n\nEngineering. Springer, New York (2013)\n\n125. Bandecchi, M., Melton, B., Onagro, F.: Concurrent engineering applied to space mission\n\nassessment and design. ESA Bulletin 99, pp. 34\u201340 (1999)\n\n126. Ciriani, T.A., Sarlo, L.: Operations research applications in space systems development and\n\noperations. In: Ciriani, T., Fasano, G., Gliozzi, S., Tadei, R. (eds.) Operations Research in\n\nSpace and Air, pp. 3\u201312. Kluwer, Dordrecht (2003)\n\n127. Cassioli, A., Schoen, F.: Global optimization of expensive black box problems with a known\n\nlower bound. J. Global Optim. (2011) (to appear)\n\n128. Amata, G.B., Fasano, G., Arcaro, L., Della Croce, F., Norese, M.F., Palamara, S., Tadei, R.,\n\nFragnelli, F.: Multidisciplinary Optimisation in Mission Analysis and Design Process. Euro-\n\npean Space Agency, GSP 1-4487/03/NL/MV, Turin (2004)\n\n129. Pastrone, D., Casalino, L.: Integrated design-trajectory optimization for hybrid rocket motors.\n\nIn: Fasano, G., Pinte?r, J.D. (eds.) Modeling and Optimization in Space Engineering. Springer,\n\nNew York (2013)\n\n130. Nicolescu, G., Mosterman, P.: Model-Based Design for Embedded Systems (Computational\n\nAnalysis, Synthesis, and Design of Dynamic Systems). CRC, Boca Raton (2009)\n\n1 Model Development and Optimization for Space Engineering. . . 31\n\n\n\n131. Norstr\u00f8m, J.G., Cooke, R.M., Bedford, T.: Value of information based design of control\n\nsoftware. In: Ciriani, T., Fasano, G., Gliozzi, S., Tadei, R. (eds.) Operations Research in\n\nSpace and Air, pp. 179\u2013202. Kluwer, Dordrecht (2003)\n\n132. Edwards, W., Miles, R.F., von Winterfeldt, D. (eds.): Advances in Decision Analysis from\n\nFoundations to Applications. Cambridge University Press, Cambridge (2007)\n\n133. Fasano, G.: Simulation and control of microbial contamination within a manned space\n\nsystem. Technical report M95-MI-AI-0057, Thales Alenia Space Italia, Turin (1996)\n\n134. Brauer, F., Castillo-Chavez, C.: Mathematical Models in Population Biology and Epidemiol-\n\nogy. Springer, Heidelberg (2000)\n\n135. Mehlem, K.: Optimal magnetic cleanliness modeling of spacecraft. In: Fasano, G., Pinte?r,\n\nJ.D. (eds.) Modeling and Optimization in Space Engineering. Springer, New York (2013)\n\n136. Migdalas, A., Pardalos, P.M., V\u20acarbrand, P. (eds.): From Local to Global Optimization.\nKluwer, Dordrecht (2001)\n\n137. Welch, G., Bishop, G.: An introduction to the Kalman filter. SIGGRAPH 2001, Course 8.\n\nDepartment of Computer Science, University of North Carolina, Chapel Hill, NC, USA\n\n(2001)\n\n138. Cramer, E.J., Dennis, J.E., Frank, P.D., Lewis, R.M., Shubin, G.R.: Problem formulation for\n\nmultidisciplinary optimization. SIAM J. Optim. 4(4), 754\u2013776 (1994)\n\n139. Fasano, G., Lavopa, C., Negri, D., Vola, M.C.: MIP approach for solving the stowage\n\nproblem on-board the International Space Station. In: 23rd EURO Conference, Bonn,\n\nGermany, 5\u20138 July 2009\n\n140. Fasano, G., Saia, D., Piras, A.: Columbus stowage optimization by CAST (Cargo Accommo-\n\ndation Support Tool). Acta Astronaut. 67(3), 489\u2013496 (2010)\n\n141. Fourer, R., Gay, D.M., Kernighan, B.W.: AMPL: A Modeling Language for Mathematical\n\nProgramming. Brooks/Cole Publishing Company/Cengage Learning, Independence (2002).\n\nSee also www.ampl.com (2012)\n\n142. Frontline Systems: Premium Solver Platform Solver Engines. Frontline Systems, Incline\n\nVillage (2012). See www.solver.com (2012)\n\n143. Kennedy, J.F.: Speech given at Rice University, Houston. (Kennedy spoke about the subject\n\nalso on other occasions: cf. e.g. http://www.historyplace.com/speeches/jfk-space.htm, http://\n\nwww.hark.com/clips/nzpntrdvjl-this-nation-should-land-a-man-on-the-moon. Accessed 12\n\nSept 1962 (2012)\n\n144. LINDO Systems: LINGO. LINDO Systems Inc, Chicago (2012). www.lindo.com (2012)\n\n145. Maximal Software: MPL Modeling System. Maximal Software Inc, Arlington (2012). www.\n\nmaximal-usa.com (2012)\n\n146. Paragon Decision Technology: AIMMS. Paragon Decision Technology BV, Haarlem (2006).\n\nSee www.aimms.com (2012)\n\n147. TOMLAB Optimization: TOMLAB. TOMLAB Optimization AB, V\u20acastera?s (2006). www.\ntomopt.com (2012)\n\n148. Bertsekas, D.P.: Nonlinear Programming, 2nd edn. Athena Scientific Publishing, Cambridge,\n\nMA (1999)\n\n149. Fasano, G.: The space-module payload accommodation problem: an MIP formulation. In:\n\nCiriani, T.A., Leachman, R.C. (eds.) Optimization in Industry, 2, pp. 33\u201342. John Wiley &\n\nSons, Chichester (1994)\n\n150. Boada, J., Prieur, C., Tarbouriech, S., Pittet C., Charbonnel C.: Formation flying control for\n\nsatellites: anti-windup based approach. In: Fasano, G., Pinte?r, J.D. (eds.) Modeling and\n\nOptimization in Space Engineering. Springer, New York (2013)\n\n32 G. Fasano and J.D. Pinte?r\n\nhttp://www.ampl.com\nhttp://www.solver.com\nhttp://www.historyplace.com/speeches/jfk-space.htm\nhttp://www.hark.com/clips/nzpntrdvjl-this-nation-should-land-a-man-on-the-moon\nhttp://www.hark.com/clips/nzpntrdvjl-this-nation-should-land-a-man-on-the-moon\nhttp://www.lindo.com\nhttp://www.maximal-usa.com\nhttp://www.maximal-usa.com\nhttp://www.aimms.com\nhttp://www.tomopt.com\nhttp://www.tomopt.com\n\n\nChapter 2\n\nPractical Direct Collocation Methods\n\nfor Computational Optimal Control\n\nVictor M. Becerra\n\nAbstract The development of numericalmethods for optimal control and, specifically,\n\ntrajectory optimisation, has been correlated with advances in the fields of space\n\nexploration and digital computing. Space exploration presented scientists and\n\nengineers with challenging optimal control problems. Specialised numerical methods\n\nimplemented in software that runs on digital computers provided the means for solving\n\nthese problems. This chapter gives an introduction to direct collocation methods\n\nfor computational optimal control. In a direct collocation method, the state is\n\napproximated using a set of basis functions, and the dynamics are collocated at a\n\ngiven set of points along the time interval of the problem, resulting in a sparse\n\nnonlinear programming problem. This chapter concentrates on local direct collocation\n\nmethods, which are based on low-order basis functions employed to discretise the state\n\nvariables over a time segment. This chapter includes sections that discuss important\n\npractical issues such as multi-phase problems, sparse nonlinear programming solvers,\n\nefficient differentiation, measures of accuracy of the discretisation, mesh refinement,\n\nand potential pitfalls. A space relevant example is given related to a four-phase vehicle\n\nlaunch problem.\n\nKeywords Optimal control \u2022 Nonlinear programming \u2022 Collocation methods\n\n2.1 Introduction to Optimal Control Problems\n\nand Their Formulation\n\nOptimal control is the process of finding control and state trajectories for a dynamic\n\nsystem over a period of time to so that the performance of the system is optimal in\n\nsome specified sense. The index which is used to quantify the performance of the\n\nV.M. Becerra (*)\nSchool of Systems Engineering, University of Reading, Reading RG6 6AY, UK\n\ne-mail: v.m.becerra@reading.ac.uk\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_2,\n# Springer Science+Business Media New York 2013\n\n33\n\nmailto:v.m.becerra@reading.ac.uk\n\n\nsystem might include, for example, a measure of the control effort, a measure of the\n\ntracking error, a measure of energy consumption, a measure of the amount of time\n\ntaken to reach a target, or any other quantity of importance to the operation of\n\nthe system.\n\nThere are various types of optimal control problems, depending on the performance\n\nindex, the type of time domain (continuous, discrete), the presence of different types\n\nof constraints, and what variables are free to be chosen. The formulation of an\n\noptimal control problem usually requires:\n\n\u2022 A mathematical model of the system to be controlled\n\n\u2022 A specification of the performance index\n\n\u2022 A specification of all boundary conditions on states, and constraints to be\n\nsatisfied by states and controls\n\n\u2022 A statement of what variables are free\n\n2.1.1 Formulation\n\nIn the continuous time case, the dynamics of a system are typically defined by a set\n\nof ordinary differential equations (ODEs), which, if written in explicit form, can be\n\nexpressed as follows:\n\n_x\u00f0t\u00de \u00bc F\u00bdx\u00f0t\u00de; u\u00f0t\u00de; p; t?; t 2 \u00bdt0; tf ?; (2.1)\n\nwhere x : \u00bdt0; tf ? ! rnx is the state vector function, u : \u00bdt0; tf ? ! rnu is the control\nvector function, p 2 rnp is a vector of static parameters which are independent of t,\nand t ? [t0, tf] ? r is an independent variable, which is usually time.\n\nThe initial and terminal conditions can be expressed as a set of inequality\n\nconstraints, which are often called event constraints:\n\neL ? e\u00bdx\u00f0t0\u00de; u\u00f0t0\u00de; x\u00f0tf \u00de; u\u00f0tf \u00de; p; t0; tf ? ? eU: (2.2)\n\nSometimes, the problem involves time-dependent constraints on the states and/or\n\ncontrol variables, which can be written in the form of time-dependent inequality\n\nand are often called path constraints:\n\nhL ? h\u00bdx\u00f0t\u00de; u\u00f0t\u00de; p; t? ? hU; t 2 \u00bdt0; tf ?: (2.3)\n\nThere are often bound constraints on controls, states, and static parameters:\n\nuL ? u\u00f0t\u00de ? uU; t 2 \u00bdt0; tf ?;\nxL ? x\u00f0t\u00de ? xU; t 2 \u00bdt0; tf ?;\npL ? p ? pU:\n\n(2.4)\n\n34 V.M. Becerra\n\n\n\nThe following constraints allow for cases where the initial and/or final times are not\n\nfixed but are to be chosen as part of the solution to the problem:\n\nt0 ? t0 ? ?t0;\nt f ? tf ? ?tf ;\ntf ? t0 ? 0:\n\n(2.5)\n\nIn the above expressions, f , h, and e are functions defined as follows:\n\nF : rnx ?rnu ?rnp ? \u00bdt0; tf ?7!rnx\nh : rnx ?rnu ?rnp ? \u00bdt0; tf ?7!rnh\ne : rnx ?rnu ?rnx ?rnu ?rnp ?r?r 7!rne :\n\n(2.6)\n\nNote that some of the above inequality constraints could be equality constraints\n\nif the lower bounds are equal to the corresponding upper bounds.\n\nAn optimal control problem (henceforth called Problem 1) then involves finding\n\nall the free functions and variables: the controls u\u00f0t\u00de; t 2 \u00bdt0; tf ? , the states x\u00f0t\u00de;\nt 2 \u00bdt0; tf ?, the parameters vectorp, and the times t0, and tf, to minimise the following\nperformance index, while satisfying the above constraints (2.1)\u2013(2.5):\n\nJ1 \u00bc \u20191\u00bdx\u00f0t0\u00de; t0; x\u00f0tf \u00de; tf ?; (2.7)\n\nwhere \u20191 : r\nnx ?r?rnx ?r 7! r is the cost function. Sometimes, the perfor-\n\nmance index to be optimised has the form\n\nJ1 \u00bc \u20191\u00bdx\u00f0t0\u00de; t0; x\u00f0tf \u00de; tf ? \u00fe\nZ tf\nt0\n\nL\u00bdx\u00f0t\u00de; u\u00f0t\u00de; t?dt; (2.8)\n\nwhere L : rnx ?rnu ?r 7! r is often known as the running cost function.\nA problem involving an objective function with an integral such as Eq. (2.8) can\n\nbe reduced to the form of Problem 1 by adding an extra state whose time derivative\n\nis equal to the integrand L, and accounting for the integral as the value of the\nadditional state at the final time.\n\n2.1.2 Optimality Conditions\n\nThe optimality conditions of problems similar to Problem 1 are rather involved\n\nand have been studied over the years [7, 14]. For the purposes of the analyses to\n\nbe presented later in this chapter, a special case of Problem 1 will be considered.\n\nThe simplified problem (henceforth called Problem 2) has the following form.\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 35\n\n\n\nFind the control vector trajectory u : \u00bdt0; tf ? ? r 7! rnu tominimise the performance\nindex:\n\nJ \u00bc \u2019\u00bdx\u00f0tf \u00de; tf ?\n\nsubject to\n\n_x\u00f0t\u00de \u00bc f\u00bdx\u00f0t\u00de; u\u00f0t\u00de; t?\nx\u00f0t0\u00de \u00bc x0;\n\n(2.9)\n\nwhere [t0, tf] is the time interval of interest, which in this case is fixed. \u2019 : r\nnx ?r\n\n7! r is a terminal cost function, f : rnx ?rnu ?r 7! rnx .\nThe first-order necessary conditions for a minimum of the performance index J\n\nfollow [7]. Dynamic constraints\n\n_x\u00f0t\u00de \u00bc f\u00bdx\u00f0t\u00de; u\u00f0t\u00de; t?; (2.10)\n\nadjoint equation\n\n_l\u00f0t\u00de \u00bc ?rxH; (2.11)\ntransversality conditions\n\nl\u00f0tf \u00de \u00bc rx\u2019jt\u00bctf ;\nx\u00f0t0\u00de \u00bc x0;\n\n(2.12)\n\nand stationarity condition\n\nruH \u00bc 0; (2.13)\nwhere l : \u00bdt0; tf ? 7! ?nx is an adjoint function, and the Hamiltonian function H is\ndefined as follows:\n\nH\u00bdx\u00f0t\u00de; u\u00f0t\u00de; l\u00f0t\u00de; t? \u00bc l\u00f0t\u00deTf\u00bdx\u00f0t\u00de; u\u00f0t\u00de; t?: (2.14)\n\nIt is assumed here that the derivatives involved in the necessary optimality\n\nconditions (2.9)\u2013(2.13) exist and also that a solution \u00f0x\u00f0t\u00de; u\u00f0t\u00de; l\u00f0t\u00de\u00de; t 2 \u00bdt0; tf ? of\nProblem 2 exists which minimises the performance index [15].\n\n2.2 Nonlinear Programming\n\nNonlinear programming (NLP) [3, 15] involves finding a decision vector y 2 rny to\nminimise:\n\nf \u00f0y\u00de\n\n36 V.M. Becerra\n\n\n\nsubject to\n\nhl ? h\u00f0y\u00de ? hu;\nyl ? y ? yu;\n\nwhere f : rny 7! r is a twice continuously differentiable scalar function and h\n: rny 7! rnh is a twice continuously differentiable vector function.\n\nA particular case that is simple to analyse occurs when the NLP problem\n\ninvolves only equality constraints, such that the problem can be expressed as\n\nfollows. This is henceforth referred to as Problem 3. Choose y to minimise\n\nf \u00f0y\u00de\n\nsubject to\n\nc\u00f0y\u00de \u00bc 0;\n\nwhere c : rny 7! rnc is a twice continuously differentiable vector function and\nnc ? ny. Introduce the Lagrangian function:\n\nl\u00bdy; l? \u00bc f \u00f0y\u00de \u00fe lTc\u00f0y\u00de; (2.15)\n\nwhere l : rny ?rnc 7! r is a scalar function and l 2 rnc is a Lagrange\nmultiplier. The first-order necessary conditions for a point \u00f0y? ; l\u00de to be a local\nminimiser are as follows [3, 15]:\n\nryl\u00bdy? ; l? \u00bc ryf \u00f0y? \u00de \u00fe \u00bdcy\u00f0y? \u00de?Tl \u00bc 0;\nrll\u00bdy? ; l? \u00bc c\u00f0y? \u00de \u00bc 0;\n\n(2.16)\n\nwhere cy\u00f0y? \u00de \u00bc @c\u00f0y\u00de=@y is the Jacobian of the constraints evaluated aty?. Note that\nEq. (2.16) is a system of ny + nc Equations with ny + nc unknowns.\n\nIf the NLP problem also includes a set of inequality constraints, then the\n\nresulting problem (henceforth called Problem 4) is as follows.\n\nChoose y to minimise\n\nf \u00f0y\u00de\n\nsubject to\n\nc\u00f0y\u00de \u00bc 0;\nq\u00f0y\u00de ? 0;\n\nwhere q : rny 7! rnq is a twice continuously differentiable vector function. The\nLagrangian function is redefined to include the inequality constraints function:\n\nl\u00bdy; l; m? \u00bc f \u00f0y\u00de \u00fe lTc\u00f0y\u00de \u00fe mTq\u00f0y\u00de; (2.17)\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 37\n\n\n\nwhere m 2 rnq is a vector of Karush\u2013Kuhn\u2013Tucker multipliers. In this case, the\nfirst-order necessary conditions for a local minimiser are the well-known\n\nKarush\u2013Kuhn\u2013Tucker conditions [3], which can be expressed as follows:\n\nm ? 0;\nryl\u00bdy? ; l; m? \u00bc ryf \u00f0y? \u00de \u00fe \u00bdcy\u00f0y? \u00de?Tl\u00fe \u00bdqy\u00f0y? \u00de?Tm \u00bc 0;\nrll\u00bdy? ; l? \u00bc c\u00f0y? \u00de \u00bc 0;\n\nmTq\u00f0y? \u00de \u00bc 0: (2.18)\n\nMethods for the solution of NLP problems are well established. Often, these\n\nmethods involve the solution of a sequence of quadratic programming sub-\n\nproblems. A quadratic programming problem is a special type of NLP problem\n\nwhere the constraints are linear and the objective is a quadratic function. Current\n\nNLP implementations incorporate developments in numerical linear algebra that\n\nexploit sparsity in matrices, such that it is common to numerically solve NLP\n\nproblems involving variables and constraints in the order of hundreds of thousands.\n\nPopular implementations of NLP methods include SNOPT [11] and IPOPT [21].\n\n2.3 Indirect Methods for Solving Optimal Control Problems\n\nIndirect methods involve iterating on the necessary optimality conditions to seek\n\ntheir satisfaction. This usually involves attempting to solve nonlinear two-point\n\nboundary-value problems, through the forward integration of the plant equations\n\nand the backward integration of the adjoint equations (which can be ill-\n\nconditioned). These methods require to explicitly derive the necessary conditions\n\n(adjoint equations, transversality conditions, minimum principle). The region of\n\nconvergence of indirect methods tends to be quite narrow, so that these methods\n\nrequire good initial guesses, which includes guesses of the adjoint functions. In the\n\ncase of problems with inequality path constraints, indirect methods require a priori\n\nestimates of the sequence of constrained arcs, which may be difficult to guess.\n\n2.4 Direct Collocation Methods\n\nDirect collocation methods involve the discretisation of the differential equations\n\nusing, for example, trapezoidal, Hermite\u2013Simpson [4], or pseudospectral approxi-\n\nmations [9], by defining a grid of N points covering the time interval [t0, tf], t0 \u00bc t1<\nt2 \t \t \t<tN \u00bc tf . This way, the differential equations become a finite set of equality\nconstraints of the NLP problem.\n\n38 V.M. Becerra\n\n\n\nThe nonlinear optimisation problems that arise from direct collocation methods\n\nmay be very large, having possibly hundreds to tens of thousands of variables and\n\nconstraints. For instance, [6] describes a spacecraft low-thrust trajectory design\n\nwith 211,031 variables and 146,285 constraints. It is, however, interesting that such\n\nlarge NLP problems are easier to solve than boundary-value problems. The reason\n\nfor the relative ease of computation of direct collocation methods is that the\n\nassociated NLP problem is often quite sparse and efficient methods and software\n\nexist for its solution [21, 5]. With direct collocation methods there is no need to\n\nexplicitly derive the necessary conditions of the continuous problem. This makes\n\nthe method more attractive in complex cases. Moreover, direct collocation methods\n\ndo not require an a priori specification of the sequence of constrained arcs in\n\nproblems with inequality path constraints. As a result of the above advantages,\n\nthe range of problems that can be solved with direct methods is larger than the range\n\nof problems that can be solved via indirect methods.\n\nConsider the continuous domain [t0, tf] ? ?, and break this domain using\nintermediate nodes as follows:\n\nt0<t1 ? \t \t \t<tN \u00bc tf (2.19)\n\nsuch that the domain has been divided into theN segments \u00bdtk; tk\u00fe1?; j \u00bc 0; . . . ;N ? 1\n(Fig. 2.1).\n\nBy using direct collocation methods, it is possible to discretise Problem 1 to\n\nobtain a NLP problem. The following problem is henceforth referred to as Problem\n\n5. Choose y 2 rny to minimise:\n\nF\u00f0y\u00de (2.20)\n\nx(t0)\n\nu(t0)\nu(t1)\n\nx(t1)\n\nu(t2)\n\nx(t2)\n\nt1t0 t2\n\nx(tN)\nx(tN?1)\n\nu(tN?1) u(tN)\n\ntN?1 tN = tf\n\nFig. 2.1 Discretisation of the interval t ? [t0, tf] ? ?. The figure illustrates the idea that the\ncontrol u and state variables x are discretised over the resulting grid\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 39\n\n\n\nsubject to:\n\n0\n\nHL\n\neL\n\n2\n664\n\n3\n775 ?\n\nZ\u00f0y\u00de\nH\u00f0y\u00de\nE\u00f0y\u00de\n\n2\n664\n\n3\n775 ?\n\n0\n\nHU\n\neU\n\n2\n664\n\n3\n775 (2.21)\n\nyL ? y ? yU; (2.22)\n\nwhere F : rny 7! < is simply a mapping resulting from the evaluation of the\nperformance index (2.7), Z : rny 7! rnz is the mapping that arises from the\ndiscretisation of the differential constraints (2.1) over the grid points, H : rny 7!\nr\u00f0N\u00fe1\u00denh arises from the evaluation of the path constraints (2.3) at each of the grid\npoints, with associated bounds HL;HU 2 r\u00f0N\u00fe1\u00denh , and E : rny 7! rne is simply a\nmapping resulting from the evaluation of the event constraints (2.2). The form of\n\nProblem 5 is the same regardless of the method used to discretise the dynamics.\n\nWhat may change depending on the discretisation method used is the decision\n\nvector y and the differential defect constraints. This is discussed in more detail in\n\nsubsequent sections of this chapter.\n\n2.4.1 Local Methods\n\nSuppose that the solution of the ODE (2.1) is approximated by a polynomial ~x\u00f0t\u00de of\ndegree M over each interval t 2 \u00bdtk; tk\u00fe1?; j \u00bc 0; . . . ;N ? 1:\n\n~x\u00f0t\u00de \u00bc a\u00f0k\u00de0 \u00fe a\u00f0k\u00de1 \u00f0t? tk\u00de \u00fe \t \t \t \u00fe a\u00f0k\u00deM \u00f0t? tk\u00deM; (2.23)\n\nwhere the polynomial coefficients a\n\u00f0k\u00de\n0 ; a\n\n\u00f0k\u00de\n1 ; . . . ; a\n\n\u00f0k\u00de\nM\n\nn o\nare chosen such that the\n\napproximation matches the function at the beginning and at the end of the interval:\n\n~x\u00f0tk\u00de \u00bc x\u00f0tk\u00de\n~x\u00f0tk\u00fe1\u00de \u00bc x\u00f0tk\u00fe1\u00de\n\n(2.24)\n\nand the time derivative of the approximation matches the time derivative of the\n\nfunction at tk and tk + 1:\n\nd~x\u00f0tk\u00de\ndt\n\n\u00bc f\u00bdx\u00f0tk\u00de; u\u00f0tk\u00de; p; tk?;\nd~x\u00f0tk\u00fe1\u00de\n\ndt\n\u00bc f\u00bdx\u00f0tk\u00fe1\u00de; u\u00f0tk\u00fe1\u00de; p; tk\u00fe1?: (2.25)\n\n40 V.M. Becerra\n\n\n\nEquations (2.24) and (2.25) are called collocation conditions (Fig. 2.2).\nMany of the discretisations used in practice for solving optimal control problems\n\nbelong to the class of so-called classical Runge\u2013Kutta methods [5]. A general\n\nK-stage Runge\u2013Kutta method discretises the differential equation as follows:\n\nxk\u00fe1 \u00bc xk \u00fe hk\nXK\ni\u00bc1\n\nbifki; (2.26)\n\nwhere\n\nxki \u00bc xk \u00fe hk\nXK\nl\u00bc1\n\nailfkl; (2.27)\n\nfki \u00bc f\u00bdxki; uki; p; tki?; (2.28)\n\nwhere uki \u00bc u\u00f0tki\u00de, tki \u00bc tk \u00fe hkri, and ri \u00bc (0, 1].\n\n2.4.1.1 Trapezoidal Method\n\nThe trapezoidal method is based on a quadratic interpolation polynomial, such that\n\nEq. (2.23) becomes\n\n~x\u00f0t\u00de \u00bc a\u00f0k\u00de0 \u00fe a\u00f0k\u00de1 \u00f0t? tk\u00de \u00fe a\u00f0k\u00de2 \u00f0t? tk\u00de2: (2.29)\n\npolynomial approximation\n\ntrue solution x(tk+1)\n\nx(tk)\n\nu(tk)\nu(tk+1)\n\ntk+1tk\n\nFig. 2.2 The collocation concept. The solution of the ODE (2.1) is approximated by a polynomial\n\nof degree M over each interval, such that the approximation matches at the beginning and the end\nof the interval both in value and in first derivative\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 41\n\n\n\nEvaluating Eq. (2.29) at node tk,\n\n~x\u00f0tk\u00de \u00bc a\u00f0k\u00de0 \u00bc x\u00f0tk\u00de: (2.30)\n\nTaking the time derivative of the interpolant (2.29), evaluating it at tk and tk + 1, and\nmatching with the corresponding right-hand side of Eq. (2.1), results in the\n\nfollowing:\n\nd~x\u00f0tk\u00de\ndt\n\n\u00bc a\u00f0k\u00de1 \u00bc f\u00bdx\u00f0tk\u00de; u\u00f0tk\u00de; p; tk? \n fk;\nd~x\u00f0tk\u00fe1\u00de\n\ndt\n\u00bc a\u00f0k\u00de1 \u00fe 2a\u00f0k\u00de2 \u00f0tk\u00fe1 ? tk\u00de \u00bc f\u00bdx\u00f0tk\u00fe1\u00de; u\u00f0tk\u00fe1\u00de; p; tk\u00fe1? \n fk\u00fe1:\n\n(2.31)\n\nUsing Eqs. (2.30) and (2.31), the interpolating polynomial is\n\n~x\u00f0t\u00de \u00bc x\u00f0tk\u00de \u00fe fk\u00f0t? tk\u00de \u00fe 1\n2\n\n\u00f0fk\u00fe1 ? fk\u00de\n\u00f0tk\u00fe1 ? tk\u00de \u00f0t? tk\u00de\n\n2; (2.32)\n\nand its time derivative evaluated at tk is\n\nd~x\u00f0tk\u00de\ndt\n\n\u00bc fk \u00fe \u00f0fk\u00fe1 ? fk\u00de\u00f0tk\u00fe1 ? tk\u00de \u00f0t? tk\u00de: (2.33)\n\nEvaluating the interpolating polynomial (2.32) at tk\u00fe1 gives\n\n~x\u00f0tk\u00fe1\u00de \u00bc x\u00f0tk\u00de \u00fe fk\u00f0tk\u00fe1 ? tk\u00de \u00fe 1\n2\n\u00f0fk\u00fe1 ? fk\u00de\u00f0tk\u00fe1 ? tk\u00de\n\n\u00bc x\u00f0tk\u00de \u00fe 1\n2\n\u00f0fk \u00fe fk\u00fe1\u00de\u00f0tk\u00fe1 ? tk\u00de;\n\n(2.34)\n\nbut since ~x\u00f0tk\u00fe1\u00de \u00bc x\u00f0tk\u00fe1\u00de, then Eq. (2.34) can be expressed as follows:\n\nz\u00f0tk\u00de \u00bc x\u00f0tk\u00fe1\u00de ? x\u00f0tk\u00de ? hk\n2\n\u00f0fk \u00fe fk\u00fe1\u00de \u00bc 0; (2.35)\n\nwhere hk \u00bc tk\u00fe1 ? tk and z\u00f0tk\u00de \u00bc 0 is the differential defect constraint at node tk\nassociated with the trapezoidal method. Allowing j \u00bc 0; . . . ;N ? 1 , Eq. (2.35)\ngenerates Nnx differential defect constraints.\n\nNote that the trapezoidal method is a 2-stage Runge\u2013Kutta method with a11\n\u00bc a12 \u00bc 0, a21 \u00bc a22 \u00bc 1=2, b1 \u00bc b2 \u00bc 1=2, r1 \u00bc 0; and r2 \u00bc 1. Equation (2.35),\nwhich is known as the compressed form of the trapezoidal method, is often used in\noptimal control implementations as it results in an NLP problem with less variables\n\nand constraints, compared with the uncompressed form that results from applying\n\nEqs. (2.26)\u2013(2.28). The uncompressed form of the trapezoidal method is as follows:\n\n42 V.M. Becerra\n\n\n\nx\u00f0tk\u00fe1\u00de ? x\u00f0tk\u00de ? hk\n2\n\u00f0fk \u00fe fk2\u00de \u00bc 0;\n\nxk2 ? xk ? hk\n2\n\u00f0fk \u00fe fk2\u00de \u00bc 0; (2.36)\n\nwhere fk2 \u00bc f\u00bdxk2; u\u00f0tk\u00fe1\u00de; p; tk\u00fe1? . It is worth noting that the compressed and\nuncompressed forms are mathematically equivalent, but there are some differences\n\nin their convergence behaviour (see Sect. 2.4.1.4).\n\nUsing direct collocation with the compressed trapezoidal discretisation (2.35),\n\nthe decision vector for single-phase problems is given by\n\ny \u00bc\n\nvec\u00f0UN?1\u00de\nvec\u00f0XN\u00de\n\np\n\nt0\ntf\n\n2\n66664\n\n3\n77775\n; (2.37)\n\nwhere vec\u00f0A\u00de represents the vectorisation of matrixA, that is an operator that stacks\nall columns of the matrix, one below the other, in a single column vector,\n\nUN?1 \u00bc u\u00f0t0\u00de u\u00f0t1\u00de . . . u\u00f0tN?1\u00de\u00bd ? 2 rnu?N; (2.38)\n\nXN \u00bc x\u00f0t0\u00de x\u00f0t1\u00de . . . x\u00f0tN\u00de\u00bd ? 2 rnx?N\u00fe1: (2.39)\n\n2.4.1.2 Hermite\u2013Simpson Method\n\nThe Hermite\u2013Simpson method is based on a cubic interpolating polynomial, such\n\nthat Eq. (2.23) becomes:\n\n~x\u00f0t\u00de \u00bc a\u00f0k\u00de0 \u00fe a\u00f0k\u00de1 \u00f0t? tk\u00de \u00fe a\u00f0k\u00de2 \u00f0t? tk\u00de2 \u00fe a\u00f0k\u00de3 \u00f0t? tk\u00de3: (2.40)\n\nEvaluating Eq. (2.40) at node tk,\n\n~x\u00f0tk\u00de \u00bc a\u00f0k\u00de0 \n x\u00f0tk\u00de: (2.41)\n\nThe time derivative of the interpolating polynomial (2.40) is:\n\nd~x\u00f0t\u00de\ndt\n\n\u00bc a\u00f0k\u00de1 \u00fe 2a\u00f0k\u00de2 \u00f0t? tk\u00de \u00fe 3a\u00f0k\u00de3 \u00f0t? tk\u00de2: (2.42)\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 43\n\n\n\nEvaluating the time derivative of the interpolant (2.42) at the beginning tk, end tk + 1,\nand midpoint ?tk \u00bc \u00f0tk \u00fe tk\u00fe1\u00de=2 of the interval, and matching them with the\ncorresponding right-hand side of Eq. (2.1), results in the following expression:\n\nd~x\u00f0tk\u00de\ndt\n\n\u00bc a\u00f0k\u00de1 \n fk; (2.43)\n\nd~x\u00f0tk\u00fe1\u00de\ndt\n\n\u00bc a\u00f0k\u00de1 \u00fe 2a\u00f0k\u00de2 hk \u00fe 3a\u00f0k\u00de3 h2k \n fk\u00fe1; (2.44)\n\nd~x\u00f0?tj\u00de\ndt\n\n\u00bc a\u00f0k\u00de1 \u00fe 2a\u00f0k\u00de2 ?hk \u00fe 3a\u00f0k\u00de3 ?h2k \n ?fk; (2.45)\n\nwhere ?hk \u00bc ?tk ? tk and ?fk \u00bc f\u00bd~x\u00f0?tk\u00de; u\u00f0?tk\u00de; p;?tk? . Note that ?fk depends on the\ninterpolated state at the midpoint of the interval ~x\u00f0?tk\u00de (see Eq. (2.50) below), and\non the control also at the midpointu\u00f0?tk\u00de. Equations (2.41) and (2.43)\u2013(2.45) result in\nthe following interpolating polynomial:\n\n~x\u00f0t\u00de \u00bc x\u00f0tk\u00de \u00fe fk\u00f0t? tk\u00de \u00fe \u00f04\n?fk ? fk\u00fe1 ? 3fk\u00de\n\n2hk\n\u00f0t? tk\u00de2\n\n\u00fe 2\u00f0fk \u00fe fk\u00fe1 ? 2\n?fk\u00de\n\n3h2k\n\u00f0t? tk\u00de3: (2.46)\n\nEvaluating Eq. (2.46) at the end of the interval gives\n\n~x\u00f0tk\u00fe1\u00de \u00bc x\u00f0tk\u00de \u00fe fkhk \u00fe \u00f04\n?fk ? fk\u00fe1 ? 3fk\u00de\n\n2\nhk \u00fe 2\u00f0fk \u00fe fk\u00fe1 ? 2\n\n?fk\u00de\n3\n\nhk\n\n\u00bc x\u00f0tk\u00de \u00fe hk\n6\n\nfk \u00fe 4?fk \u00fe fk\u00fe1\n? ?\n\n;\n\n(2.47)\n\nbut from the collocation condition ~x\u00f0tk\u00fe1\u00de \u00bc x\u00f0tk\u00fe1\u00de , then Eq. (2.47) can be\nexpressed as follows:\n\nz\u00f0tk\u00de \u00bc x\u00f0tk\u00fe1\u00de ? x\u00f0tk\u00de ? hk\n6\n\nfk \u00fe 4?fk \u00fe fk\u00fe1\n? ? \u00bc 0; (2.48)\n\nwhere z\u00f0tk\u00de \u00bc 0 is the differential defect constraint at node tk associated with the\nHermite\u2013Simpson method. Evaluating Eq. (2.46) at the midpoint of the interval\n\n~x\u00f0?tk\u00de \u00bc x\u00f0tk\u00de \u00fe hk\n2\nfk \u00fe hk\n\n8\n\u00f04?fk ? fk\u00fe1 ? 3fk\u00de \u00fe hk\n\n12\n\u00f0fk \u00fe fk\u00fe1 ? 2?fk\u00de\n\n\u00bc x\u00f0tk\u00de \u00fe hk\n24\n\n5fk \u00fe 8?fk ? fk\u00fe1\n? ?\n\n:\n\n(2.49)\n\n44 V.M. Becerra\n\n\n\nSolving Eq. (2.47) for ?fk and replacing in Eq. (2.49) results in\n\n~x\u00f0?tk\u00de \u00bc 1\n2\nx\u00f0tk\u00de \u00fe x\u00f0tk\u00fe1\u00de\u00bd ? \u00fe hk\n\n8\nfk ? fk\u00fe1\u00bd ?: (2.50)\n\nEquation (2.50) gives the interpolated value of the state at the midpoint of the\n\ninterval, which is needed to evaluate ?fk . Note that the evaluation of Eq. (2.50) and\nthe substitution of ~x\u00f0?tk\u00de into Eq. (2.48) results in the so-called compressed\nHermite\u2013Simpson method. Allowing j \u00bc 0; . . . ;N ? 1 , Eq. (2.48) generates Nnx\ndifferential defect constraints. Using direct collocation with the compressed\n\nHermite\u2013Simpsonmethod, the decision vector for single-phase problems is given by\n\ny \u00bc\n\nvec\u00f0UN\u00de\nvec\u00f0?UN?1\u00de\nvec\u00f0XN\u00de\n\np\n\nt0\ntf\n\n2\n6666664\n\n3\n7777775\n; (2.51)\n\nwhere\n\n?UN?1 \u00bc u\u00f0?t0\u00de u\u00f0?t1\u00de . . . u\u00f0?tN?1\u00de\u00bd ? 2 rnu?N?1: (2.52)\n\nNote that the Hermite\u2013Simpson method is a 3-stage Runge\u2013Kutta method with\n\na11 \u00bc a12 \u00bc a13 \u00bc 0, a21 \u00bc 5=24; a22 \u00bc 1=3; a23 \u00bc ?1=24, a31 \u00bc 1=6; a32 \u00bc 2=3;\na33 \u00bc 1=6 , b1 \u00bc 1=6; b2 \u00bc 2=3; b3 \u00bc 1=6 , r1 \u00bc 0; r2 \u00bc 1=2; andr3 \u00bc 1 . If the\nmidpoint states are also considered decision variables and rewriting Eq. (2.50) as\n\nan equality constraint\n\n~x\u00f0?tk\u00de ? 1\n2\nx\u00f0tk\u00de \u00fe x\u00f0tk\u00fe1\u00de\u00bd ? ? hk\n\n8\nfk ? fk\u00fe1\u00bd ? \u00bc 0; (2.53)\n\nthen the use of Eq. (2.53) together with Eq. (2.48) results in the so-called uncom-\npressed or separated Hermite\u2013Simpson method.\n\nUsing direct collocation with the uncompressed Hermite\u2013Simpson method, the\n\ndecision vector for single-phase problems is given by\n\ny \u00bc\n\nvec\u00f0UN\u00de\nvec\u00f0?UN?1\u00de\nvec\u00f0XN\u00de\nvec\u00f0?XN?1\u00de\n\np\n\nt0\ntf\n\n2\n666666664\n\n3\n777777775\n; (2.54)\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 45\n\n\n\nwhere\n\n?XN?1 \u00bc x\u00f0?t0\u00de x\u00f0?t1\u00de . . . x\u00f0?tN?1\u00de\u00bd ? 2 rnx?N?1: (2.55)\n\n2.4.1.3 Optimality of the Discretised Problem\n\nAssume that Problem 2 is discretised using either the trapezoidal or the\n\nHermite\u2013Simpson methods described above. It is relatively easy to show that\n\nthe discrete necessary optimality conditions (2.16) of the equality constrained\n\nNLP problem that results converge to the continuous first-order necessary optimal-\n\nity conditions of Problem 2 (2.10)\u2013(2.13), when the maximum discretisation step\n\nsize goes to zero (N ! 1, so that h ! 0, with h \u00bc maxkhk). Similar equivalences\ncan be made between the Karush\u2013Kuhn\u2013Tucker conditions (2.18) corresponding,\n\nfor instance, to Problem 5, and the first-order optimality conditions of the associated\n\ncontinuous problem (Problem 1) [4, 14].\n\n2.4.1.4 Convergence\n\nThis section introduces some ideas on the convergence properties of direct colloca-\n\ntion methods for optimal control. The error in variable zk \n z(tk) with respect to a\nsolution z?(t) is of order n if there exist ?h; c>0 such that\n\nmax\nk\n\njj~zk ? z? \u00f0tk\u00dejj ? chn; 8h< ?h:\n\nIt is well known that the convergence of the trapezoidal method for integrating\n\ndifferential equations is of order 2, while the convergence of the Hermite\u2013Simpson\n\nmethod for integrating differential equations is of order 4 [13]. Moreover, it has\n\nbeen proved [12] that, provided the optimal control problem (Problem 2) satisfies\n\ncertain smoothness and coercivity conditions (which are well known [12]), (1) the\n\ndiscretisation has a strict local minimiser and an associated adjoint variable, (2) in\n\nparticular, the uncompressed trapezoidal method is of order 2 for optimal control\n\n(Problem 2) in the states x and Lagrange multipliers l, and (3) the uncompressed\nHermite\u2013Simpson method is of order 4 for optimal control in the states and\n\nLagrange multipliers, so that\n\nmax\nk\u00bc0;...N\n\njjxk ? x? \u00f0tk\u00dejj ? chk;\nmax\n\nk\u00bc1;...N\njjlk ? l? \u00f0tk\u00dejj ? chk:\n\n(2.56)\n\n46 V.M. Becerra\n\n\n\nwhere h\u00bcmaxkhk, c> 0, x? is the continuous state in the solution of Problem 2 and\nl? is the adjoint variable in the solution to Problem 2, xk is the discrete state in the\nNLP solution of the discretised Problem 2 and lk is the discrete Lagrange multiplier\nin the NLP solution of the discretised Problem 2, k \u00bc 2 in the uncompressed\ntrapezoidal case, and k \u00bc 4 in the uncompressed Hermite\u2013Simpson case.\n\nIn the compressed trapezoidal case, it has been proved in the case of a uniform\n\ngrid with interval length h that the convergence of the state is also of order 2, but the\nconvergence of the Lagrange multiplier is only order 2 at the midpoints but linear\n\n(order 1) at the grid points [10]:\n\nmax\nk\u00bc1;...N\n\njjlk ? l? \u00f0tk\u00dejj ? ch\nmax\n\nk\u00bc1;...N\njjlk ? l? \u00f0tk ? h=2\u00dejj ? ch2: (2.57)\n\nWith regard to the convergence of the controls, it has been proved that with the\n\ncompressed trapezoidal discretisation method, the controls converge with order 2 in\n\nthe inside grid points, these are all grid points except t0 and tf [10]:\n\nmax\nk\u00bc1;...N?1\n\njjuk ? u? \u00f0tk\u00dejj ? ch2: (2.58)\n\n2.4.2 Example: Simple Problem with Analytical Solution\n\nThis example from [12] serves to illustrate how a basic direct collocation method\n\ncan be implemented to solve a simple problem. Consider the problem of finding\n\nu(t), t ? [0, 1] to minimise the cost\n\nJ \u00bc x2\u00f01\u00de (2.59)\n\nsubject to the dynamic constraints\n\n_x1 \u00bc 0:5x1 \u00fe u;\n_x2 \u00bc u2 \u00fe xu\u00fe 5\n\n4\nx2;\n\n(2.60)\n\nthe boundary conditions:\n\nx1\u00f00\u00de \u00bc 1;\nx2\u00f00\u00de \u00bc 0;\n\n(2.61)\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 47\n\n\n\nand the following bounds:\n\n?10 ? u\u00f0t\u00de ? 10;\n10 ? x1\u00f0t\u00de ? 10;\n\n?10 ? x2\u00f0t\u00de ? 10:\n(2.62)\n\nThe analytical solution of the problem is as follows:\n\nx1\u00f0t\u00de \u00bc cosh\u00f01? t\u00de;\ncosh\u00f01\u00de\n\nu\u00f0t\u00de \u00bc ? \u00f0tanh\u00f01? t\u00de \u00fe 0:5\u00de cosh\u00f01? t\u00de\ncosh\u00f01\u00de : (2.63)\n\nThe code shown below uses Matlab [18] commands together with a NLP\n\nfunction from Matlab\u2019s Optimization Toolbox [19]. The following Matlab code is\n\nused to define the right-hand side of the state equations:\n\nfunction [ f ] = ex1derivs( x, u )\nx1 = x(1);\nx2 = x(2);\ndx1 = 0.5*x1 + u;\ndx2 = u\u02c62 + x1*u + 5.0/4.0*x1\u02c62;\nf = [dx1;dx2];\nend\n\nThe following Matlab code is used to define the objective function. The decision\n\nvector is y \u00bc [u(0), . . ., u(N), x1(0), . . ., x1(N), x2(0), . . ., x2(N)]T.\n\nfunction J = ex1obj( y, N )\nN1 = N+1;\nx2=y(2*N1+1:3*N1);\nJ = x2(end);\nend\n\nThe following Matlab code is used to define the constraints of the NLP problem.\n\nNote that only equality constraints associated with the differential defect constraints\n\nand with the event constraints are implemented here. The discretisation employed is\n\nthe compressed trapezoidal method.\n\n48 V.M. Becerra\n\n\n\nfunction [g, geq] = ex1con( y, N )\nt0=0; % Initial time\ntf=1.0; % Final time\nN1 = N+1; % Number of grid points\nh = (tf-t0)/N; % Integration step\nu = y(1:N1); % Control input\n% States\nx1=y(N1+1:2*N1);\nx2=y(2*N1+1:3*N1);\n\n% Differential defect constraints...\nZ = [];\nfor k=1:N1-1,\nxk = [x1(k), x2(k)]\u2019;\nxk1 = [x1(k+1),x2(k+1)]\u2019;\nfk = ex1derivs(xk,u(k));\nfk1 = ex1derivs(xk1,u(k+1) );\nz = xk1 - xk - h/2*( fk + fk1);\nZ = [Z; z];\n\nend;\n% Event constraints ...\nE = zeros(2,1);\nE(1) = x1(1)- 1.0;\nE(2) = x2(1)- 0.0;\ngeq = [Z; E];\ng = [];\n\nThe following Matlab code is used to define an initial guess for the solution of\n\nthe problem, to establish the bounds on the decision variables, and to call Matlab\u2019s\n\nSQP routine fmincon to search for numerical solution to the discretised problem for\n\ngiven tolerances and termination parameters. Note that fmincon is allowed to\n\ncompute numerically the derivatives required for the solution of the NLP problem,\n\nwhich are assumed to be dense.\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 49\n\n\n\nfunction ex1(N)\n% N = Number of intervals.\nN1 = N+1; %Number of grid points.\ntf = 1.0; % Final time\n% Initial guesses for states\nx1_guess = linspace( 1.0, 0.0, N1 );\nx2_guess = linspace( 0.0, 0.0, N1 );\n% Initial guess for control\nu_guess = zeros(N1,1);\n% Initial guess for decision vector\ny_guess = [ u_guess(:); x1_guess(:); x2_guess(:)];\nx1_min = -10.0*ones(N1,1); x1_max = 10.0*ones(N1,1);\nx2_min = -10.0*ones(N1,1); x2_max = 10.0*ones(N1,1);\nu_min = -10.0*ones(N1,1);\nu_max = 10.0*ones(N1,1);\nymin= [ u_min; x1_min; x2_min];\nymax= [ u_max; x1_max; x2_max];\noptions=optimset(\u2019LargeScale\u2019,\u2019off\u2019,\u2019Display\u2019, \u2019iter\u2019,...\n\u2019TolX\u2019,1e-5,\u2019TolFun\u2019,1e-5,\u2019TolCon\u2019,1e-5,\u2019MaxIter\u2019,2000, ...\n\u2019MaxFunEvals\u2019,100000);\ny = fmincon(\u2019ex1obj\u2019, y_guess, [],[],[],[], ymin,ymax,...\n\u2019ex1con\u2019,options, N );\n\nFigure 2.3 shows a comparison between state and control histories obtained with\n\nthe trapezoidal method and N \u00bc 10 equally spaced intervals, and the corresponding\nanalytical result. The maximum absolute error in x1 is 0.014353, while it is\n0.064556 in the control u. The resulting objective function value was J \u00bc 0.\n764773, while its analytical value computed up to ten significant figures is\n\n0.7615941557, giving an absolute error of 0.0031789 in the objective function.\n\nWhile the above code is useful to illustrate the basic concepts and to solve this\n\nsimple example, the code misses various key ingredients which are needed to make\n\na robust general purpose implementation that may be employed to solve industrial\n\nscale problems. These ingredients include:\n\n\u2022 Incorporation of other variables in the decision vector (such as initial and final time)\n\n\u2022 Scaling of variables and constraints\n\n\u2022 Efficient sparse differentiation\n\n\u2022 Use of sparse NLP\n\n\u2022 Alternative discretisations\n\n\u2022 Handling other types of constraints\n\n\u2022 Ability to handle multi-phase problems\n\n\u2022 Calculation of measures of accuracy of the solution\n\n\u2022 Automatic mesh refinement\n\nSome of these key aspects are discussed in subsequent sections of this chapter.\n\n50 V.M. Becerra\n\n\n\n2.5 Practical Aspects\n\nIt is worth discussing the following aspects associated to the practical use of direct\n\ncollocation methods for computational optimal control.\n\n2.5.1 Scaling\n\nThe numerical methods employed by NLP solvers are sensitive to the scaling of\n\nvariables and constraints. Scaling may change the convergence rate of an algorithm,\n\nthe termination tests, and the numerical conditioning of systems of equations that\n\nneed to be solved.\n\nModern optimal control codes often perform automatic scaling of variables and\n\nconstraints, while still allowing the user to manually specify some or all of the\n\nscaling factors. Scaling factors for controls, states, static parameters, and time, are\n\ntypically computed on the basis of the user-supplied bounds for these variables.\n\nFor finite bounds, the variables are scaled (and possibly translated) so that the\n\ntranslated and scaled values are within a given range, for example, [? 1, 1].\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1\n?1.5\n\n?1\n\n?0.5\n\n0\n\ntime\n\n0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1\ntime\n\nu\n\n0.65\n\n0.7\n\n0.75\n\n0.8\n\n0.85\n\n0.9\n\n0.95\n\nx 1\n\nu\nua\n\nx1\n\nx1a\n\nFig. 2.3 Comparison of state and control histories obtained with the trapezoidal in example 1\n\nusing N \u00bc 10 intervals with the corresponding analytical result\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 51\n\n\n\nThe scaling factor of each differential defect constraint is often taken to be equal to\n\nthe scaling factor of the corresponding state [5], which helps to improve the condi-\n\ntioning of the Jacobian of the constraints. Scaling factors for all other constraints are\n\noften computed as follows. The scaling factor for the ith constraint of theNLP problem\nis the reciprocal of the 2-norm of the ith row of the Jacobian of the constraints [5]. This\nis done so that the rows of the Jacobian of the constraints have a 2-norm equal to one.\n\nThe scaling factor for the objective function is often computed as the reciprocal of the\n\n2-norm of the gradient of the objective function evaluated at the initial guess.\n\n2.5.2 Sparse Nonlinear Programming\n\nMost realistic optimal control problems result, after discretisation, in large and\n\nsparse NLP problems. \u201cLarge\u201d means, in this context, that the underlying linear\n\nsystems of equations cannot be handled efficiently or accurately by NLP\n\nimplementations that use dense, direct matrix factorisations. \u201cSparse\u201d means that\n\nthe Jacobian of the constraints and the Hessian of the Lagrangian are sparse\n\nmatrices, that is matrices with few non-zero elements compared to the total number\n\nof elements. NLP solvers need to use linear equation solvers in their iterations.\n\nSparse NLP solvers employ sparse linear solvers. It is normally not possible to\n\nsolve large sparse NLP problems using dense NLP solvers. Hence it is extremely\n\nimportant for an optimal control solver that the underlying NLP solver is able to\n\nsolve large and sparse problems.\n\nThere are different types of large sparse NLP solvers. For instance, some\n\nimplementations such as SNOPT use sparse constraint Jacobian and a reduced\n\n(dense) Hessian [11]. On the other hand, other NLP methods use a sparse Hessian\n\n[20]. Some NLP solvers use the interior-point paradigm, which employs barrier\n\nfunctions as part of the strategy to enforce the satisfaction of constraints [21]. Other\n\nmethods, such as sequential quadratic programming (SQP) [11], use an active set\n\nstrategy together with a penalty-based approach for the same purpose. It is very\n\ndifficult to decide in general which method provides better results for optimal\n\ncontrol problems, but there are indications [5] that sparse SQP methods often\n\nprovide better results than interior-point methods, while methods using the sparse\n\nHessian usually provide better efficiency and convergence than those using a\n\nreduced Hessian. It is a good idea to provide optimal control packages with options\n\nto use different sparse NLP solvers.\n\n2.5.3 Efficient Sparse Differentiation\n\nModern optimal control software uses sparse finite differences [8] or sparse automatic\n\ndifferentiation routines to compute the derivatives needed by the NLP solver. The use\n\nof sparse differentiation is closely tied with the use of sparse NLP implementations.\n\n52 V.M. Becerra\n\n\n\nSparse finite differences exploit the structure of the Jacobian and Hessian matrices\n\nassociated with an optimal control problem, such that the individual elements of these\n\nmatrices can be computed very efficiently by perturbing groups of variables, as\n\nopposed to perturbing single variables.\n\nAutomatic differentiation1 is based on the application of the chain rule to obtain\n\nderivatives of a function given as a numerical computer program. Automatic differ-\n\nentiation exploits the fact that computer programs execute a sequence of elementary\n\narithmetic operations such as additions or elementary functions such as sine().\n\nBy applying the chain rule of differentiation repeatedly to these operations,\n\nderivatives of arbitrary order can be computed automatically and very accurately.\n\nSparsity can also be exploited with automatic differentiation for increased efficiency.\n\nOptimal control analysts are encouraged to use, whenever possible, sparse auto-\n\nmatic differentiation to compute the required derivatives, as they are more accurate\n\nand faster to compute than numerical derivatives and they are free of truncation\n\nerrors. The calculation of dense derivatives in automatic or numerical form is not\n\nadvisable when solving optimal control problems by direct collocation methods.\n\nWhen computing numerical derivatives, the structure may be exploited further\n\nby separating constant and variable parts of the derivative matrices. The constant\n\npart of the derivative is calculated once, and only its variable part is computed by\n\nsparse finite differences.\n\nIt is worth noting that the achievable sparsity is dependent on the discretisation\n\nmethod employed and on the problem itself [6].\n\n2.5.4 Measures of Accuracy of the Discretisation\n\nIt is important for optimal control codes implementing direct collocation methods\n\nto estimate the discretisation error. This can be reported back to the user and\n\nemployed as the basis of a mesh refinement scheme [5]. Define the error in the\n\ndifferential equation as a function of time:\n\ne\u00f0t\u00de \u00bc _~x\u00f0t\u00de ? f\u00bd~x\u00f0t\u00de; ~u\u00f0t\u00de; p; t?;\n\nwhere ~x is an interpolated value of the state vector given the grid-point values of the\nstate vector, ~x is an estimate of the derivative of the state vector given the state\nvector interpolant, and ~u is an interpolated value of the control vector given the grid-\npoint values of the control vector. The type of interpolation used depends on the\n\ncollocation method employed. The absolute local error corresponding to state i on a\nparticular interval t ? [tk, tk + 1], is defined as follows:\n\n?i;k \u00bc\nZ tk\u00fe1\ntk\n\njei\u00f0t\u00dejdt;\n\n1The following web site has a good deal of information about automatic differentiation: http://\n\nwww.autodiff.org/.\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 53\n\nhttp://www.autodiff.org/\nhttp://www.autodiff.org/\n\n\nwhere the integral is computed using an accurate quadrature method, such as the\n\ncomposite Simpson method. The local relative ODE error is defined as:\n\nek\u00bc maxi\n?i;k\n\nwi \u00fe 1 ;\n\nwhere\n\nwi\u00bc maxN\nk\u00bc1\n\nj~xi;kj; j _~xi;kj\n? ?\n\n:\n\nThe error sequence ek, or a global measure of the size of the error (such as the\nmaximum of the sequence ek) can be analysed by the user to assess the quality of\nthe discretisation. This information may also be useful to aid the mesh refinement\n\nprocess, as discussed below.\n\n2.5.5 Mesh Refinement\n\nGiven that the solution of optimal control problems may involve periods of time\n\nwhere the state and control variables are changing rapidly, it makes sense to use\n\nshorter discretisation intervals in such periods, while longer intervals are often\n\nsufficient when the variables are not changing much. This is the main idea behind\n\nautomatic mesh refinement methods, which detect when a solution needs shorter\n\nintervals in regions of the domain by monitoring the accuracy of the discretisation\n\nover the whole domain of the problem. Based on this observation, the solution grid\n\nis refined aiming to improve the discretisation accuracy in regions of the domain\n\nthat require it. The NLP problem is then solved again over the new mesh, using the\n\nprevious solution as an initial guess (which is interpolated over the new mesh), and\n\nthe result is re-evaluated. Typically several mesh refinement iterations are\n\nperformed until a given overall accuracy requirement, such as a specified upper\n\nbound on the discretisation error ( maxkek < emax ), is satisfied.\nIt is common to start with a low-order discretisation (such as the trapezoidal\n\nmethod) over a uniform coarse grid and then switch to a more accurate method\n\n(such as Hermite\u2013Simpson) after a few mesh refinement iterations. The mesh is\n\ntypically refined by adding a limited number of nodes to intervals that require more\n\naccuracy, so effectively subdividing existing intervals. A well-known algorithm for\n\nmesh refinement using local discretisations was proposed by Betts [5].\n\n2.5.6 Multi-phase Problems\n\nSome optimal control problems can be conveniently formulated as having a number\n\nof phases. Phases may be inherent to the problem (e.g. a spacecraft drops a section\n\nand enters a new phase). Phases may also be introduced by the analyst to allow for\n\n54 V.M. Becerra\n\n\n\npeculiarities in the solution of the problem, such as discontinuities in the control\n\nvariables, or constrained arcs (i.e. segments of time where state inequality\n\nconstraints become active). Many real world problems need a multi-phase approach\n\nfor their solution. Typically, the formulation for multi-phase problems involves the\n\nfollowing elements:\n\n1. An objective function which is the sum of individual objective functions for each\n\nphase\n\n2. Differential equations and path constraints for each phase, noting that the\n\ndynamics need not be the same in all phases\n\n3. Phase linkage constraints which relate the states and possibly the control\n\nvariables at the boundaries between the phases\n\n4. Event constraints which the initial and final conditions of each phase need to\n\nsatisfy\n\n2.5.7 Potential Pitfalls\n\nThere are some situations which can cause problems with direct collocation\n\nmethods. These include the following:\n\n1. Singular arcs. In some optimal control problems, extremal arcs satisfying\nEq. (2.13) occur where the matrix ?2H/?u2 is singular. These are called singular\narcs. The presence of singular arcsmay cause difficulties to computational optimal\n\ncontrol methods to find accurate solutions if the appropriate conditions are not\n\nenforced a priori [5]. See [7, 17] for further details on the handling of singular arcs.\n\n2. Discontinuous control. Although direct methods with local mesh refinement\ntend to concentrate nodes in regions where there are control discontinuities in\n\nthe solution, the accuracy of the solution may be reduced in some cases if the\n\ndiscontinuity is not handled appropriately, for instance, by separating the prob-\n\nlem into phases.\n\n3. State dependent path constraints. This type of constraint may lead to the dynam-\nics being a high-index differential-algebraic system, which will result in Jacobian\n\nrank deficiency and difficulties with the NLP solver, if not handled appropriately.\n\nThese problems may require special treatment by differentiating the constraint\n\nfunction until the control input appears explicitly, and then including the resulting\n\nset of constraints into the problem. In the case of inequality constraints, additional\n\nconditions are required at the boundaries of a constrained arc. See [7, 5] for\n\nfurther details on handling state-dependent constraints.\n\n2.6 Example: Space Vehicle Launch Problem\n\nThis problem consists of the launch of a space vehicle. See [16, 2] for a full\n\ndescription of the problem. The problem illustrates some of the aspects that are\n\ncommon in complex optimal control problems, including the presence of path\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 55\n\n\n\nconstraints, multiple phases, free final time, and terminal constraints. The flight of\n\nthe vehicle can be divided into four phases, with dry masses ejected from the\n\nvehicle at the end of phases 1, 2, and 3. The final times of phases 1, 2, and 3 are\n\nfixed, while the final time of phase 4 is free. The optimal control problem is to find\n\nthe control, u, that minimises the cost function\n\nJ \u00bc ?m\u00f04\u00de\u00f0tf \u00de: (2.64)\n\nIn other words, it is desired to maximise the vehicle mass at the end of phase 4.\n\nUsing the Earth-centred-inertial (ECI) reference, the dynamics are given by:\n\n_r \u00bc v;\n_v \u00bc ? mkrk3 r\u00fe\n\nT\n\nm\nu\u00fe D\n\nm\n;\n\n_m \u00bc ? T\ng0Isp\n\n;\n\n(2.65)\n\nwhere r\u00f0t\u00de \u00bc x\u00f0t\u00de y\u00f0t\u00de z\u00f0t\u00de? ?T is the position, v \u00bc vx\u00f0t\u00de vy\u00f0t\u00de vz\u00f0t\u00de\n? ?T\n\nis the Carte-\n\nsian ECI velocity, m is the gravitational parameter, T is the vacuum thrust, m is the\nmass, g0 is the acceleration due to gravity at sea level, Isp is the specific impulse of\n\nthe engine, u \u00bc ux uy uz\n? ?T\n\nis the thrust direction, and D \u00bc Dx Dy Dz\n? ?T\n\nis the\n\ndrag force, which is given by\n\nD \u00bc ? 1\n2\nCDArefrkvrel; kvrel; (2.66)\n\nwhere CD is the drag coefficient, Aref is the reference area, r is the atmospheric\ndensity, and vrel is the Earth relative velocity, where vrel is given as\n\nvrel \u00bc v? o? r; (2.67)\n\nwhere o is the angular velocity of the Earth relative to inertial space. The atmo-\nspheric density is modelled as follows:\n\nr \u00bc r0 exp\u00bd?h=h0?; (2.68)\n\nwhere r0 is the atmospheric density at sea level, h \u00bc krk ? Re is the altitude, Re is\nthe equatorial radius of the Earth, and h0 is the density scale height.\n\nThe vehicle starts on the ground at rest (relative to the Earth) at time t0, so that\nthe initial conditions are\n\nr\u00f0t0\u00de \u00bc r0 \u00bc 5; 605:2 0 3; 043:4\n? ?T\n\nkm;\n\nv\u00f0t0\u00de \u00bc v0 \u00bc 0 0:4076 0\n? ?T\n\nkm=s;\n\nm\u00f0t0\u00de \u00bc m0 \u00bc 301; 454 kg:\n(2.69)\n\n56 V.M. Becerra\n\n\n\nThe terminal constraints define the target transfer orbit, which is defined in orbital\n\nelements as\n\naf \u00bc 24; 361:14 km;\nef \u00bc 0:7308;\nif \u00bc 28:5 ?;\nOf \u00bc 269:8 ?;\nof \u00bc 130:5 ?:\n\n(2.70)\n\nThere is also a path constraint associated with this problem:\n\njjujj2 \u00bc 1: (2.71)\nThe following linkage constraints force the position and velocity to be continu-\n\nous and also account for discontinuity in the mass state due to the ejections at the\n\nend of phases 1, 2, and 3:\n\nr\u00f0p\u00de\u00f0tf \u00de ? r\u00f0p\u00fe1\u00de\u00f0t0\u00de \u00bc 0;\nv\u00f0p\u00de\u00f0tf \u00de ? v\u00f0p\u00fe1\u00de\u00f0t0\u00de \u00bc 0; \u00f0p \u00bc 1; . . . ; 3\u00de;\nm\u00f0p\u00de\u00f0tf \u00de ? m\u00f0p\u00dedry ? m\u00f0p\u00fe1\u00de\u00f0t0\u00de \u00bc 0;\n\n(2.72)\n\nwhere the superscript (p) represents the phase number, and m\n\u00f0p\u00de\ndry represents the\n\nejected mass at the end of phase p.\nFigure 2.4 shows the launch altitude, Fig. 2.5 shows the speed of the vehicle as\n\na function of time and Fig. 2.6 shows the control variables as a function of time.\n\n 6400\n\n 6450\n\n 6500\n\n 6550\n\n0  100  200  300  400  500  600  700  800  900  1000\n\nal\ntit\n\nud\ne \n\n(k\nm\n\n)\n\ntime (s)\n\nMultiphase vehicle launch\n\nalt\n\nFig. 2.4 Altitude for the vehicle launch problem\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 57\n\n\n\nThis problem has been solved using the author\u2019s open source optimal control\n\nsoftware PSOPT [1]. Note that the C\u00fe\u00fe source code associated with this problem\nis available for free2. The numerical values for the physical constants associated\n\nwith the model can be found in the code. Table 2.1 summarises statistics from the\n\n 1000\n\n 2000\n\n 3000\n\n 4000\n\n 5000\n\n 6000\n\n 7000\n\n 8000\n\n 9000\n\n 10000\n\n0 100 200 300 400 500 600 700 800 900 1000\n\nsp\nee\n\nd \n(m\n\n/s\n)\n\ntime (s)\n\nMultiphase vehicle launch\n\nspeed\n\nFig. 2.5 Speed for the vehicle launch problem\n\n?0.6\n\n?0.4\n\n?0.2\n\n 0\n\n 0.2\n\n 0.4\n\n 0.6\n\n 0.8\n\n 1\n\n0 100 200 300 400 500 600 700 800 900 1000\n\nu \n(d\n\nim\nen\n\nsi\non\n\nle\nss\n\n)\n\ntime (s)\n\nMultiphase vehicle launch\n\nu1\nu2\nu3\n\nFig. 2.6 Controls for the vehicle launch problem\n\n2See http://www.psopt.org.\n\n58 V.M. Becerra\n\nhttp://www.psopt.org\n\n\nmesh refinement process. The problem was solved in eight mesh refinement\n\niterations until the maximum relative ODE error emax was below 1?10?5, starting\nfrom a coarse uniform grid and resulting in a finer non-uniform grid.\n\nReferences\n\n1. Becerra, V.: Solving optimal control problems at no cost with PSOPT. Proceedings of IEEE\n\nMulti-conference on Systems and Control, Yokohama, Japan, September 7\u201310 (2010)\n\n2. Benson, D.A.: A Gauss pseudospectral transcription for optimal control. Ph.D. thesis, Depart-\n\nment of Aeronautics and Astronautics, MIT, Cambridge, MA (2004)\n\n3. Bertsekas, D.P., Bertsekas, D.P.: Nonlinear Programming, 2nd edn. Athena Scientific, MA\n\n(1999)\n\n4. Betts, J.T.: Practical Methods for Optimal Control Using Nonlinear Programming. SIAM,\n\nPhiladelphia (2001)\n\n5. Betts, J.T.: Practical Methods for Optimal Control and Estimation Using Nonlinear Program-\n\nming. SIAM, Philadelphia (2010)\n\n6. Betts, J.T., Erb, S.O.: Optimal low thrust trajectories to the moon. SIAM J. Appl. Dyn. Syst. 2,\n\n144\u2013170 (2003)\n\n7. Bryson, A., Ho, Y.C.: Applied Optimal Control. Halsted Press, Sydney (1975)\n\n8. Curtis, A.R., Powell, M.J.D., Reid, J.K.: On the estimation of sparse Jacobian matrices. J. Inst.\n\nMath. Appl. 13, 117\u2013120 (1974)\n\n9. Elnagar, G., Kazemi, M.A., Razzaghi, M.: The pseudospectral legendre method for\n\ndiscretizing optimal control problems. IEEE Trans. Automat. Control 40, 1793\u20131796 (1995)\n\n10. Engelsone, A., Campbell, S.: Adjoint estimation using direct transcription multipliers: Com-\n\npressed trapezoidal method. Optim. Eng. 9, 291\u2013305 (2008)\n\n11. Gill, P.E., Murray, W., Saunders, M.A.: SNOPT: an SQP algorithm for large-scale constrained\n\noptimization. SIAM Rev. 47(1), 99\u2013131 (2001)\n\n12. Hager, W.: Runge\u2013kutta methods in optimal control and the transformed adjoint system.\n\nNumer. Math. 87, 247\u2013282 (2000)\n\n13. Hairer, E., Norsett, S., Wanner, G.: Solving Ordinary Differential Equations I: Nonstiff\n\nProblems. Springer, Berlin (2002)\n\nTable 2.1 Mesh refinement statistics: multiphase vehicle launch\n\nIter DM M NV NC OE CE JE HE RHS emax CPUa\n1 TRP 20 208 200 83 716 47 0 25,776 1.264e ? 02 3.000e ? 01\n2 TRP 28 288 264 37 38 29 0 1,976 8.429e ? 03 2.100e ? 01\n3 H-S 36 464 360 44 45 40 0 4,500 3.594e ? 03 4.800e ? 01\n4 H-S 48 620 468 45 46 39 0 6,256 8.749e ? 04 5.900e ? 01\n5 H-S 64 828 612 40 41 40 0 7,544 2.002e ? 04 7.300e ? 01\n6 H-S 88 1,140 828 78 79 74 0 20,224 5.133e ? 05 1.760e + 00\n7 H-S 114 1,478 1,062 65 66 61 0 22,044 1.928e ? 05 1.840e + 00\n8 H-S 132 1,712 1,224 62 63 62 0 24,444 9.888e ? 06 2.150e + 00\nCPUb \u2013 \u2013 \u2013 \u2013 \u2013 \u2013 \u2013 \u2013 \u2013 \u2013 2.419e + 01\n\n\u2013 \u2013 \u2013 \u2013 \u2013 454 1,094 392 0 112,764 \u2013 3.225e + 01\n\nKey: Iter \u00bc iteration number, DM \u00bc discretisation method, M \u00bc number of nodes, NV \u00bc number\nof variables, NC \u00bc number of constraints, OE \u00bc objective evaluations, CE \u00bc constraint\nevaluations, JE \u00bc Jacobian evaluations, HE \u00bc Hessian evaluations, RHS \u00bc ODE right-hand\nside evaluations, emax \u00bc maximum relative ODE error, CPUa \u00bc CPU time in seconds spent by\nNLP algorithm, CPUb \u00bc additional CPU time in seconds spent by PSOPT\n\n2 Practical Direct Collocation Methods for Computational Optimal Control 59\n\n\n\n14. Hartl, R.F., Sethi, S.P., Vickson, R.G.: A survey of the maximum principles for optimal control\n\nproblems with state constraints. SIAMRev. 37(2), 181\u2013218 (1995). URL http://www.jstor.org/\n\nstable/2132823\n\n15. Luenberger, D.: Optimization by Vector Space Methods. Wiley, New York (1997)\n\n16. Rao, A., Benson, D., Huntington, G., Francolin, C.: User\u2019s manual for GPOPS version 1.3: A\n\nMatlab package for dynamic optimization using the Gauss pseudospectral method (2008)\n\n17. Sethi, S., Thompson, G.: Optimal Control Theory: Applications to Management Science and\n\nEconomics. Kluwer, Dordecht (2000)\n\n18. The Mathworks: Matlab Programming Fundamentals. Natick, MA (2012)\n\n19. The Mathworks: Optimisation Toolbox User\u2019s Guide. Natick, MA (2012)\n\n20. Vanderbei, R.J., Shanno, D.: An interior-point method for nonconvex nonlinear programming.\n\nComput. Optim. Appl. 13, 231\u2013252 (1999)\n\n21. W\u20acachter, A., Biegler, L.T.: On the implementation of a primal-dual interior point filter line\nsearch algorithm for large-scale nonlinear programming. Math. Program. 106, 25\u201357 (2006)\n\n60 V.M. Becerra\n\nhttp://www.jstor.org/stable/2132823\nhttp://www.jstor.org/stable/2132823\n\n\nChapter 3\n\nFormation Flying Control for Satellites:\n\nAnti-windup Based Approach\n\nJosep Boada, Christophe Prieur, Sophie Tarbouriech, Christelle Pittet,\n\nand Catherine Charbonnel\n\nAbstract Control theory has significantly evolved in the field of the nonlinear\n\ncontrol. However, the methods used in the aerospace industry lie usually on linear\n\ntechniques applied to linearized models. The increasing requirements in terms of\n\noperational reliability and performance ask for the development of new control\n\ntechniques more complex in order to meet the new demands. Therefore, the\n\nindustry is moving to the modern control theory looking for new nonlinear\n\napproaches. In particular, actuators saturation represents a nonlinear phenomenon\n\ncommon in almost all physical applications. This can then lead to performance\n\ndegradation, limit cycle appearance, non-desired equilibrium conditions, and even\n\nsystem instability. The objective of this chapter is to adapt and develop the anti-\n\nwindup compensator design to the control with high precision for the angular and\n\nJ. Boada\n\nAlbatros Aeronautics, Victoria, Spain\n\ne-mail: josep.boada@albaero.com\n\nC. Prieur (*)\nGipsa-lab, Department of Automatic Control, Grenoble Campus, 11 rue des Mathe?matiques,\n\n4638402 Saint Martin d\u2019He?res Cedex, France\n\ne-mail: christophe.prieur@gipsa-lab.fr\n\nS. Tarbouriech\n\nCNRS, LAAS, 7 avenue du Colonel Roche, F-31400 Toulouse, France\n\nUniv de Toulouse, LAAS, F-31400 Toulouse, France\n\ne-mail: tarbour@laas.fr\n\nC. Pittet\n\nCentre National d\u2019Etudes Spatiales (CNES), Toulouse, France\n\ne-mail: christelle.pittet@cnes.fr\n\nC. Charbonnel\n\nThales Alenia Space, Cannes, France\n\ne-mail: catherine.charbonnel@thalesaleniaspace.com\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_3,\n# Springer Science+Business Media New York 2013\n\n61\n\nmailto:josep.boada@albaero.com\nmailto:christophe.prieur@gipsa-lab.fr\nmailto:tarbour@laas.fr\nmailto:christelle.pittet@cnes.fr\nmailto:catherine.charbonnel@thalesaleniaspace.com\n\n\nthe linear axes of a satellite. In the aerospace application field, this situation meets\n\nwith the drag-free or the formation flying missions. These missions use high-\n\nprecision thrusters as actuators whose capacity appears to be critically low. More-\n\nover, thrusters have a particular modeling. Allocation functions adapted to the\n\nanti-windup design are then explored. In addition considering the current state of\n\nthe art of the anti-windup design, there is a strong necessity of using symmetrizing\n\ntechniques for the saturation. The main objective of this work consists in applying\n\nthe developed tools on an aerospace study case. As an example, a complete\n\nmethodology is proposed to control a formation flying mission controlling both\n\nattitude and relative position.\n\nKeywords Saturating thrusters \u2022 Anti-windup design \u2022 Control \u2022 Optimization\n\n3.1 Introduction\n\nFormation flying control problem has been an important field of research since the\n\n1990s. Several possible applications in the space exploration domain make this field\n\nvery interesting [1, 15, 24]. In these kinds of missions, one seeks to control the\n\nformation with a fine precision in both attitude and relative position. Consequently,\n\nthe actuator is based on a precise propulsive system. However, these kinds of\n\nactuators have a limited capacity which cannot be exceeded.\n\nThe control limitation due to the constraints of the actuators\u2019 maximum capacity\n\nrepresents a nonlinear phenomenon common in almost all physical applications.\n\nTraditionally, a classical solution, at least in industry, consists in imposing impor-\n\ntant margins in order to prevent the actuators from reaching their maximum\n\ncapacity, that is, to avoid saturation. In that manner, one tries to ensure the linearity\n\nof the system. However, this a posteriori validation is insufficient because, non-\n\nnominal disturbances, transitions between operational modes, and the presence of\n\nsystem failures can force the actuators to reach their limits. Actuator saturation can\n\nthen lead to performance degradation, limit cycle appearance, non-desired equilib-\n\nrium conditions, and even system instability [2, 18, 19, 26, 27].\n\nThe nonlinear techniques dealing with saturation can be classified in two main\n\nresearch lines. The first one seeks to introduce the nonlinear saturation in the synthesis\n\nprocess of the controller. The second one introduces an extra layer to the existing linear\n\ncontroller, accounting for the nonlinearities. This strategy, also called anti-windup\n\ndesign, allows the designer to keep the existing linear controller (already validated)\n\nand only to introduce a compensator which is only active when the nonlinearity arises\n\n[14, 17, 20, 29, 31, 33]. The design of such a compensator is generally cast in a static\n\noptimization problem of the controller parameters. Accompanying the development of\n\nsemi-definite programming and convex optimization [10], the synthesis problem can\n\nbe formulated as the optimization of a multi-objective criterion (corresponding to\n\nclosed-loop stability and performance specifications) subject to matrix inequalities\n\nconstraints associated to the dynamical system.\n\n62 J. Boada et al.\n\n\n\nThe objective of this chapter is to depict how the anti-windup compensator design\n\ncan be adapted to high-precision control of the linear and angular displacements of a\n\nsatellite. Consequently, in formation flying control problem, the introduction of the\n\nanti-windup becomes an interesting technique to ensure the mission requirements\n\nand its reliability. Moreover, let us point out that space missions involving thrusters\n\nas actuators are modeled in a particular way. The control variables of the physical\n\nsystems and the action provided by thrusters are not the same. An allocation function\n\nis included in the modeling of the actuators to distribute the control among the\n\nactuators [4, 11, 22]. In the classical linear approach, this function can be omitted;\n\nhowever, when the saturation of the actuators arises, its behavior has to be consid-\n\nered in the control design [4]. Allocation functions adapted to the anti-windup design\n\nhave to be explored. Moreover the presence of thrusters introduces a peculiar\n\nformulation of the saturation function. The saturation presents asymmetric bounds\n\nwith the minimum equal to zero. Considering the current state of the art of the anti-\n\nwindup design, there is a strong necessity of using symmetrizing techniques for\n\nthe saturation. The symmetrizing procedure and the allocation function defined are\n\nput along with the anti-windup design to be applied in a spacecraft mission\n\nconfiguration.\n\nFor anti-windup study purposes, the formation flying problem can be described\n\nby a block diagram as presented in Fig. 3.1. If yp appears as attitude and/or relative\nposition, the control loop would be illustrative of a formation flight configuration.\n\nRemark 1. yr \u00bc 0 for consistency reasons without loss of generality.\nIn this chapter a formation flying control problem is modeled and solved. This is\n\nthe relative position of a two-satellite formation. We prefer to focus on this problem\n\nto ease the presentation of the anti-windup methods. However, this reduction is not a\n\nnecessary simplification, and a more complete multi-variable system with a cou-\n\npling of the attitude and the relative position of two satellites could be tackled.\n\nFor more details on this last case, see [6], where the saturation effects are studied and\n\nsome anti-windup methods are developed. Let us emphasize that the anti-windup\n\ndesign problem considered corresponds to a multiobjective control optimization\n\nproblem, which consists in minimizing some performance criteria (closed-loop\n\n?2-gain, fuel consumption) and maximizing the size (via the choice of optimal\ncriteria) of the state space region of safe operation (guaranteed stability around the\n\norigin, attainability of the performance level), in presence of two hard nonlinear\n\nphenomena as the presence of both actuator saturation and allocation function.\n\nf\nT \u00af \u00afu\n\n0\nM\n\nyr\nyc up\n\nzp\n\nyp\n\nuc\nsat(0,u)(T)\n\nFig. 3.1 Control loop block diagram\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 63\n\n\n\nThus, this kind of mathematical programming approach can be viewed as\n\ncomplementary to on-line optimization-based methods, which require in general a\n\nhigh computational effort.\n\nThe chapter is organized as follows. First, in Sect. 3.2, the model of the relative\n\nposition between two satellites is presented. Only the control of an axis is consid-\n\nered. Then, in Sect. 3.3, the following anti-windup techniques are applied to the\n\nrelative position control: the Direct Linear Anti-Windup (DLAW), the Model\n\nRecovery Anti-Windup (MRAW), and the Extended Model Recovery Anti-windup\n\n(EMRAW). Simulations illustrate the benefits provided by the anti-windup\n\ncompensators. Some concluding remarks end the chapter.\n\n3.2 Relative Position Control\n\n3.2.1 Relative Position Plant Model\n\nThe first relative dynamics to be described is the relative position between two\n\nsatellites along the z-axis. Let us consider two satellites and two frames fixed to\neach satellite. ?sat1 is the first satellite associated frame and ?sat2 the second\nsatellite associated frame. From the third theorem of the rigid body dynamics,\n\nand assuming that the satellite is a point-mass system, the acceleration of a rigid\n\nbody is proportional to the sum of external forces:\n\n\u20aczi \u00bc m?1i\nX\n\n\u00f0Fi\u00de; (3.1)\n\nwhere zi is the displacement on the z-axis of satellite i. Hence, \u20aczi denotes the\nacceleration on this axis. mi denotes the mass of satellite i, and?(Fi) stands for the\nsum of external forces on satellite i.\n\nThe control objective is to cancel the lateral position error on the z-coordinate\nbetween the satellites (see Fig. 3.2). Therefore, the relative dynamics can be\n\ndescribed, applying (3.1) to the difference of the zi coordinate with i \u00bc 1, 2, that\nis, Dz \u00bc z1 ? z2. The control objective is then to satisfy Dz \u00bc 0. Denoting?(Fi) by\nFi for consistency reasons, it yields D\u20acz \u00bc ?m?12 F2 \u00fe m?11 F1.\n\nThe state space representation reads\n\n_xp \u00bc Apxp \u00fe Bpup \u00bc\n0 1\n\n0 0\n\n? ?\nDz\n\nD _z\n\n? ?\n\u00fe 0 0\n\nm?11 ?m?12\n\n? ?\nup\n\nyp \u00bc Cpxp \u00bc \u00bd1 0?xp \u00bc Dz\nzp \u00bc Czxp \u00bc \u00bd1 0?xp \u00bc Dz;\n\n8>>>><\n>>>>:\n\n(3.2)\n\nwhere the state variables included in the state vector xp are the relative position (Dz)\nand the relative velocity (D _z), up \u00bc [F1 F2]0 is the control input, yp \u00bc Dz is the\nmeasured output, and zp \u00bc Dz is the regulated output.\n\n64 J. Boada et al.\n\n\n\n3.2.2 Relative Position Controller\n\nA centralized controller is used. This means that a unique controller takes the\n\nmeasurements from all satellites in the formation and computes a vector yc which\ncontains the control output of each satellite. The controller is described through a\n\nstate space representation:\n\n_xc \u00bc Acxc \u00fe Bcuc\nyc \u00bc Ccxc \u00fe Dcuc:\n\n(\n(3.3)\n\nIn the relative position problem, the controller is an 1-input 2-outputs (Single\n\nInput Multiple Output or SIMO) linear system with a 5 dimension state vector. The\n\ncontroller input is uc \u00bc yp \u00bc Dz and its outputs are yc \u00bc \u00bdyc1 yc2?0 \u00bc \u00bdFc1 Fc2?0. Fc1\n(resp. Fc2) stands for the controller output for the first (resp. second) satellite.\n\n3.2.3 Relative Position Actuator Model\n\nThe satellite formation is actuated by a propulsive system composed of four\n\nproportional thrusters on each of the two satellites. To apply the required control\n\nforces (F1 and F2) using this propulsive system, thruster management functions\nhave to be introduced in the control loop. These functions are composed by an\n\nD\n\nSatellite 2\n\nSatellite 1\n\n?z\n\nz\n\nz\n\ny\n\ny\n\nx\n\nx\n\nT1(4)\n\nT1(3)T1(2)\n\nT2(1) T2(4)\n\nT2(3)T2(2)\n\nT1(1)\n\nsat1\n\nsat2\n\nFig. 3.2 Relative position control configuration\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 65\n\n\n\nallocation function that transforms the required control efforts (Fc1, Fc2) into\nthrusters forces, and an influence matrix that transforms the thruster outputs into\n\nforces applied on the system. Moreover, the actual forces delivered by each thruster\n\nare saturated. The general expression for the actuator is given as follows:\n\nup \u00bc Msat\u00f00;?u\u00de\u00f0f \u00f0yc\u00de\u00de; (3.4)\n\nwhereM is the influence matrix for each satellite, sat is the thruster saturation, and f\nis the allocation function. Let us briefly describe all these elements separately in the\n\nnext sections.\n\n3.2.3.1 The Influence Matrix\n\nThe influence matrix describes the geometric distribution of the thrusters. The\n\nphysical distribution of the thrusters is presented in Fig. 3.2. The influence matrices\n\nare then described as follows:\n\nM1 \u00bc \u00bd1 ? 1 ? 1 1?; M2 \u00bc \u00bd1 ? 1 ? 1 1?: (3.5)\n\nInfluence matrices M1 and M2 are associated to satellite 1 and satellite 2,\nrespectively.\n\n3.2.3.2 Thruster Saturation\n\nThe saturation function is modeled by\n\nsat\u00f00;?u\u00de\u00f0T\u00f0i\u00de\u00de \u00bc\n?u\u00f0i\u00de if T\u00f0i\u00de>?u\u00f0i\u00de\nT\u00f0i\u00de if 0 ? T\u00f0i\u00de ? ?u\u00f0i\u00de\n0 if T\u00f0i\u00de<0\n\n8><\n>:\n\n; i \u00bc 1; . . . ;m: (3.6)\n\nThe saturation bounds for the relative position control problem are u \u00bc 0 and\n?u \u00bc 1mN, and T \u00bc [T(1), . . ., T(m)]0 is the thrust applied on each satellite.\n\n3.2.3.3 Allocation Function\n\nThe allocation function (AF) used on real applications is a highly nonlinear\n\noptimized function. Indeed, finding an AF is a dynamic nonlinear optimization\n\nproblem, which can be solved using non-linear optimization techniques [22],\n\nfor example, quadratic programming. Another option is to manipulate a simple\n\n66 J. Boada et al.\n\n\n\nnonlinear AF based on a switching structure. This nonlinear allocation function lies\n\non the fact that the control output yc is treated component-wise, whereas the AF\ncomputes a set of thrust T for each component of the control output. They are\ndenoted by yc(k), and the set of thrusts associated is denoted by T\n\nk. Finally, the thrust\n\nvector applied is the sum of all Tkwith k\u00bc 1, . . .,mc. The switching structure can be\ndescribed by the following expression:\n\nf \u00f0yc\u00de \u00bc\n\nTk\u00f0i\u00de \u00bc\n0 if sign\u00f0M\u00f0k;i\u00de\u00de 6\u00bc sign\u00f0yc\u00f0k\u00de\u00de\n\nyc\u00f0k\u00de\nt\u00f0k\u00deM\u00f0k;i\u00de\n\nif sign\u00f0M\u00f0k;i\u00de\u00de \u00bc sign\u00f0yc\u00f0k\u00de\u00de\n\n8>><\n>>:\n\n; k \u00bc 1; . . . ;mc:\n\nT\u00f0i\u00de \u00bc\nXmc\n\nk\u00bc1T\nk\n\u00f0i\u00de; i \u00bc 1; . . . ;m:\n\nT \u00bc \u00bdT\u00f01\u00de . . . T\u00f0m\u00de?0;\n\n8>>>>>>>>><\n>>>>>>>>>:\n\n(3.7)\n\nwhere sign(?) stands for the function sign and t(k) stands for the number of thrusters\ngenerating an effort of the same sign as yc(k). t(k) is described as follows:\n\nt\u00f0k\u00de \u00bc\nXm\ni\u00bc1\n\nsign\u00f0M\u00f0k;i\u00de\u00de \u00bc sign\u00f0yc\u00f0k\u00de\u00de\nn o\n\n; (3.8)\n\nwhere {sign(M(k, i)) \u00bc sign(yc(k)))} is a boolean function that returns 1 if both\nelements are equal or 0 if they are not.\n\nThe relative position control problem presents m \u00bc 4 thrusters and k \u00bc 1 control\noutput. Then the switching AF (3.7) has the following form for both satellites:\n\nf \u00f0yc\u00de \u00bc\nT\u00f01\u00de \u00bc T\u00f04\u00de \u00bc\n\n0 if yc<0\n\nyc\n2\n\nif yc ? 0\n\n8<\n:\n\nT\u00f02\u00de \u00bc T\u00f03\u00de \u00bc\n0 if yc ? 0\nyc\n2\n\nifyc< 0:\n\n8<\n:\n\n8>>>>>>><\n>>>>>>>:\n\n(3.9)\n\nIn that case, the actuator is modeled as follows:\n\nup \u00bc Msat\u00f00;?u\u00de\u00f0f \u00f0yc\u00de\u00de \u00bc M1 00 M2\n\n? ?\nsat\u00f00;?u\u00de\n\nf \u00f0yc1\u00de\nf \u00f0yc2\u00de\n\n\" # !\n: (3.10)\n\nAnother AF is based on the pseudo-inverse matrix M? of the influence matrix M\nand is given by\n\nT \u00bc f \u00f0yc\u00de \u00bc M?yc; (3.11)\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 67\n\n\n\nIn this case, the control input up reads\n\nup \u00bc M1 00 M2\n\n? ?\nsat\u00f00;?u\u00de\n\nM?1yc1\nM?2yc2\n\n\" # !\n: (3.12)\n\nSee also [8] where a multi-saturation-based allocation function is suggested\n\n(together with an anti-windup approach that used [28]).\n\n3.2.4 Relative Position Closed-Loop Model\n\nWith the previously presented plant (3.2), controller (3.3) and actuator (3.10), the\n\nclosed-loop system describing the relative position control reads:\n\n_xp \u00bc Apxp \u00fe Bpup \u00bc\n0 1\n\n0 0\n\n\" #\nDz\n\nD _z\n\n2\n4\n\n3\n5\u00fe\n\n0 0\n\nm?11 ?m?12\n\n\" #\nup\n\n_xc \u00bc Acxc \u00fe BcCpxp\nyp \u00bc Cpxp \u00bc \u00bd1 0?xp \u00bc Dz\nzp \u00bc Czxp \u00bc \u00bd1 0?xp \u00bc Dz\n\nup \u00bc Msat\u00f00;?u\u00de\u00f0f \u00f0yc\u00de\u00de \u00bc\nM1sat\u00f00;?u\u00de\u00f0f \u00f0yc1\u00de\u00de\n\nM2sat\u00f00;?u\u00de\u00f0f \u00f0yc2\u00de\u00de\n\n2\n4\n\n3\n5\n\nyc \u00bc Ccxc \u00fe DcCpxp\n\n8>>>>>>>>>>>>>>>>>>>><\n>>>>>>>>>>>>>>>>>>>>:\n\n(3.13)\n\nwith f(yc) defined by (3.9).\nSystem (3.13) provides a benchmark for further simulations. However, the\n\nnonlinearity introduced by the AF (3.9) makes complex the characterization of\n\nconstructive conditions1 to compute the anti-windup compensator for this system.\n\nFor this reason an alternative formulation can be used based on Eq. (3.12) leading to\n\nthe closed-loop system:\n\n1In the sense that tractable numerical procedures can be associated to exhibit the matrices of the\n\nanti-windup compensator.\n\n68 J. Boada et al.\n\n\n\n_xp \u00bc Apxp \u00fe Bpup \u00bc\n0 1\n\n0 0\n\n\" #\nDz\n\nD _z\n\n2\n4\n\n3\n5\u00fe\n\n0 0\n\nm?11 ?m?12\n\n\" #\nup\n\n_xc \u00bc Acxc \u00fe BcCpxp\nyp \u00bc Cpxp \u00bc \u00bd1 0?xp \u00bc Dz\nzp \u00bc Czxp \u00bc \u00bd1 0?xp \u00bc Dz\n\nup \u00bc Msat\u00f00;?u\u00de\u00f0M?yc\u00de \u00bc\nM1sat\u00f00;?u\u00de\u00f0M?1yc1\u00de\n\nM2sat\u00f00;?u\u00de\u00f0M?2yc2\u00de\n\n2\n4\n\n3\n5\n\nyc \u00bc Ccxc \u00fe DcCpxp:\n\n8>>>>>>>>>>>>>>>>>>>><\n>>>>>>>>>>>>>>>>>>>>:\n\n(3.14)\n\n3.3 Anti-windup on the Relative Position Control\n\nThe relative position control problem has been modeled. Before dealing with the\n\nanti-windup computation purposes, let us consider the saturation function in (3.14).\n\nIt is asymmetric. Since most of the results on anti-windup synthesis consider\n\nsymmetric saturations, the saturation has to be symmetrized in order to adapt\n\nsome of these results. To do that the symmetrizing technique of [7] is applied.\n\nMore precisely, introducing the so-called symmetrizing vector Nzsym \u00bc ?u=2, con-\nsider the scheme depicted in Fig. 3.3.\n\nHence, we define\n\nNzvar \u00bc min max\u00f0i\u00de\u00f0jf \u00f0yc\u00dej\u00de;Nzsym\u00f0i\u00de\n? ?\n\n1\n\n..\n\n.\n\n1\n\n2\n664\n\n3\n775; i \u00bc 1; . . . ;m (3.15)\n\n+\n\n+\n\n+\n\n+\n\nf\nu?\n\n0\n\n\u00af\n\nM\n\nN?\n\nN?\n\nu?N?\n\n?N?\n\nFig. 3.3 Saturation bounds modification\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 69\n\n\n\nwhich verifies that MNzvar \u00bc 0. That corresponds to a variable kernel function\n(VKF) and solves the problems of extra consumption as exposed in [7]. Assuming\n\nthe consumption to be proportional to the integral of all the thrust responses one can\n\ncheck that the actual consumption can be reduced by adequately defining the VKF.\n\nFor more detail, the reader can consult [6]. With the saturation symmetrized, the\n\nclosed-loop system (3.14) we want to study in order to design anti-windup loops\n\ncan be written as:\n\n_xp \u00bc Apxp \u00fe Bpup \u00bc\n0 1\n\n0 0\n\n? ? Dz\nD _z\n\n\" #\n\u00fe 0 0\n\nm?11 ?m?12\n\n? ?\nup\n\n_xc \u00bc Acxc \u00fe Bcyp \u00fe vx\nyp \u00bc Cpxp \u00bc \u00bd1 0?xp \u00bc Dz\nzp \u00bc Czxp \u00bc \u00bd1 0?xp \u00bc Dz\n\nup \u00bc Msat\u00f0u0\u00de\u00f0M?yc\u00de \u00bc\nM1sat\u00f0u0\u00de\u00f0M?1yc1\u00de\nM2sat\u00f0u0\u00de\u00f0M?1yc2\u00de\n\n\" #\n\nyc \u00bc Ccxc \u00fe DcCpxp \u00fe vy\n\n8>>>>>>>>>>>>>>>><\n>>>>>>>>>>>>>>>>:\n\n(3.16)\n\nwith symmetric bounds u0 \u00bc 12 mN and where vx and vy are the output signals of the\nanti-windup compensator to be designed.\n\n3.3.1 Anti-windup Compensator Synthesis\n\nThree types of anti-windup compensators are investigated: the DLAW, the MRAW\n\nand the EMRAW.\n\nAll the results developed in the DLAW context are based upon the use of the\n\ndead-zone nonlinearities and associated modified sector conditions. Indeed, any\n\nsystem with saturation may be rewritten with dead-zone nonlinearity. Let us recall\n\nthat the dead-zone function is defined by f\u00f0u0\u00de\u00f0yc\u00de \u00bc yc ? sat\u00f0u0\u00de\u00f0yc\u00de: In this\ncontext, the anti-windup compensator is defined as follows:\n\naw\n\n_xaw \u00bc Aawxaw \u00fe Bawf\u00f0u0\u00de\u00f0yc\u00de\nvx \u00bc \u00bdInc 0? Cawxaw \u00fe Dawf\u00f0u0\u00de\u00f0yc\u00de\n\n? ?\n\nvy \u00bc \u00bd0 Im? Cawxaw \u00fe Dawf\u00f0u0\u00de\u00f0yc\u00de\n? ?\n\n;\n\n8>>><\n>>>:\n\n(3.17)\n\nwhere xaw 2 \u00c2naw is the anti-windup state, naw? 0,f\u00f0u0\u00de\u00f0yc\u00de, the dead-zone output is\nthe anti-windup input, v \u00bc \u00bdv0x v0y?0 2 \u00c2nc\u00fem is the anti-windup output and Aaw, Baw,\nCaw,and Daw are matrices of appropriate dimensions. Figure 3.4 presents the block\ndiagram describing the DLAW structure [14, 27].\n\n70 J. Boada et al.\n\n\n\nIn the sequel, we consider by simplicity that vy \u00bc 0 to avoid implicit loop, and\ntherefore we consider a dynamic DLAW into the form\n\naw\n_xaw \u00bc Aawxaw \u00fe Bawf\u00f0u0\u00de\u00f0yc\u00de\nvx \u00bc Cawxaw \u00fe Dawf\u00f0u0\u00de\u00f0yc\u00de;\n\n(\n(3.18)\n\nwhere xaw 2 \u00c2naw is the anti-windup state, naw ? 0, vx 2 \u00c2nc is the anti-windup\noutput, and Aaw, Baw, Caw, and Daw are matrices of appropriate dimensions.\n\n3.3.1.1 Static DLAW Synthesis\n\nIn the static case, one chooses naw \u00bc 0, and anti-windup matrices are null except\nDaw (Aaw \u00bc 0, Baw \u00bc 0, Caw \u00bc 0). Thus, the anti-windup output is given by vx\n\u00bc Dawf\u00f0u0\u00de\u00f0yc\u00de and vy \u00bc 0 [16].\n\nThe DLAW static gain Daw can be computed by using Lyapunov theory.\nIn particular, in order to characterize a domain of asymptotic stability for the\n\nclosed-loop system (including the plant, the controller with the static anti-windup\n\nloop and the linear closed-loop system without saturation), a quadratic Lyapunov\n\nfunction can be used to express some conditions in terms of linear matrix\n\ninequalities (LMIs). The main advantages of using quadratic Lyapunov function\n\nresulting into LMIs reside in the fact that the synthesis of the anti-windup loop can\n\nthen be carried out through the solution of convex optimization problems, which\n\ncan be solved by efficient software packages [3, 21]. Hence, the stability domain\n\ncan be optimized in some direction of interest, namely in the Dz direction. In this\n\n+\n\n+\n\n?\n\nDLAW\n\nyc\n\nvy\n\nyp\n\nvx\n\nud\n\nxc xp\n\nzp\n\nxaw\n\n?(u0)(yc)\n\nsat(u0)(yc)\n\n\u00b1u0\n\nFig. 3.4 Direct linear anti-windup structure\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 71\n\n\n\ncase, by using the conditions developed in [6] (see Theorem 3.1 in Chapter 3 of [6]),\n\nthe static anti-windup gain Daw obtained is:\n\nDaw\u00bc\n\n?0:32 ?0:32 0:32 0:32 ?1:65 ?1:65 1:65 1:65\n0:28 0:28 ?0:28 ?0:28 3:5 3:5 ?3:5 ?3:5\n2:95 2:95 ?2:95 ?2:95 ?6:39 ?6:39 6:39 6:39\n0:88 0:88 ?0:88 ?0:88 ?1:81 ?1:81 1:81 1:81\n\n376:78 376:78 ?376:78 ?376:78 ?665:5 ?665:5 665:5 665:5\n\n2\n66664\n\n3\n77775\n:\n\n(3.19)\n\nRegarding the structure of the static DLAW (3.19), we can observe the differ-\n\nence between the first four columns and the last four ones. That is due to the relation\n\nof the first four columns with the first satellite thrusters, and the relation of the last\n\nfour ones with the second satellite thrusters. In addition, it is important to remark\n\nthat there is a row (the fifth one) whose values outstand in comparison with the\n\nothers. Actually this line affects the state of the controller related to the integration.\n\nThe anti-windup mission is to attenuate the integral state of the controller which is\n\nthe more sensible state to the saturation effects. Therefore, it is normal to find a\n\nmore important effect on this controller state than on the others. With this anti-\n\nwindup technique, we thus recover the usual method of de-charging the integral\n\nstate, when a saturation occurs.\n\n3.3.1.2 Dynamic DLAW Synthesis\n\nUsing the results in [25], the matrices Aaw, Baw, Caw, and Daw of the dynamic\nanti-windup compensator Eq. (3.18) can be computed by solving some LMIs when\n\nwe choose the order of the anti-windup compensator naw \u00bc np \u00fe nc \u00fe nl. For more\ndetails see Propositions 3.1 and 3.2 in Chapter 3 of [6]. Nevertheless, in some cases\n\nthe order of this anti-windup compensator can be too large to be implemented in a\n\nreal on-board calculator. Thus, the goal now is to find a low-order anti-windup\n\ncompensator. In this case, the main difficulty resides in the choice of matrices Aaw\nand Caw, the matrices Baw and Daw remaining linearly computationable in the\nconditions. A way to do this is to use the full order anti-windup compensator\n\ncomputation as a guide on the choice of the poles for the fixed-order anti-windup\n\nsynthesis. The computation is decomposed in two steps. The first one consists in\n\ncomputing the full-order DLAW. From all the poles of the computed full-order\n\ncompensator, only the poles of Aaw sharing the same magnitude order as those of\nthe linear closed-loop system without saturation (named Al) are retained (see also\n[5, 9]). The second step consists in testing the conditions to obtain Baw and Daw,\nAaw and Caw being fixed from the first step (see, e.g, [20, 27]).\n\nAs in the static anti-windup case, the stability domain is maximized in the\n\nrelative position direction Dz. Table 3.1 shows the poles of the full-order dynamic\nDLAW and the poles of the linear closed-loop system Al. The selected poles for the\nfixed order DLAW synthesis are marked with ?.\n\n72 J. Boada et al.\n\n\n\n3.3.1.3 MRAW and EMRAW Synthesis\n\nThe MRAW consists in selecting the anti-windup compensator as a dynamical filter,\n\nincorporating a model of the plant [14]. The aim of this filter is to recover the\n\nunconstrained closed-loop dynamics. The plant control is limited by the saturation\n\nnonlinearity thus, recovering the missing control and filtering it throughout the anti-\n\nwindup compensator, we can recover themissing dynamics of the plant. This recovered\n\ndynamics allows the system to keep trackingwhat the closed-loop responsewould be in\n\nthe absence of saturation. The equations describing filter dynamics are stated by\n\n_xaw \u00bc Apxaw \u00fe Bp satu0\u00f0yc \u00fe v1\u00de ? yc\u00f0 \u00de\nyaw \u00bc Cpxaw\nv1 \u00bc g\u00f0xaw\u00de;\n\n8><\n>:\n\n(3.20)\n\nwhere xaw 2 \u00c2np is the anti-windup compensator state, yaw ? ?q and v1 ? ?m are\nits outputs, and g is nonlinear function suitably designed [30, 32]. The anti-windup\ncompensator structure is represented in Fig. 3.5. Notice that, by using the DLAW\n\nframework, the anti-windup loop is injected to the controller by considering vx and\nvy as follows:\n\nvx \u00bc ?Bcyaw\nvy \u00bc ?Dcyaw \u00fe v1; (3.21)\n\nwhere vx and vy are described by Fig. 3.4.\n\nTable 3.1 Full-order DLAW\n\neigenvalues in relative\n\nposition control\n\neig(Aaw)( ? ? selected) eig(Al)\n? 8. 28 ?106 \u00f0?2:61\t j2:88\u00de ? 10?1\n\n? 6. 21 ?106 \u00f0?1:62\t j2:02\u00de ? 10?1\n\n? 4. 74 ?104 \u00f0?8:23\t j8:23\u00de ? 10?3\n\n? 1. 93 ?102 ? 2:73 ? 10?3\n\n? 1. 61\n\u00f0?9:11\t j27:5\u00de ? 10?2\n\n? 0. 13\n? 4:38 ? 10?2\u00f0?\u00de\n\n\u00f0?8:97\t j5:17\u00de ? 10?3\u00f0?\u00de\n\n? 8:61 ? 10?3\u00f0?\u00de\n\n? 7:46 ? 10?3\u00f0?\u00de\n\n? 4:11 ? 10?3\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 73\n\n\n\nA first possible solution to the MRAW problem is to select v1 as a linear state\nfeedback from xaw designed completely disregarding the saturation effects. These\nsolutions are associated to local stability properties but, for exponentially stable\n\nplants, the global stability is possible [13]. Another type of solutions that one can\n\npropose within the MRAW compensation is to select v1 as a nonlinear function of\nthe anti-windup compensator state xaw. This type of solution is certainly the most\ndifficult to design and to implement, but it is the most advanced scheme within this\n\nframework. Reference [12] gives constructive conditions to find such a stabilizing\n\nlaw v1. See also [14, 27, 33], and references therein.\nThe EMRAW techniques is a combination of both the DLAW and MRAW\n\nstructures, as depicted in Fig. 3.6.\n\nThe EMRAW strategy is then described by the following equations:\n\nAW :\n\n_xaw \u00bc \u00f0Apxaw \u00fe Bpv1\u00de \u00fe Bpf\u00f0u0\u00de\u00f0yc \u00fe v1\u00de\nyaw \u00bc Cpxaw\nv1 \u00bc Fawxaw\nve \u00bc Eawf\u00f0u0\u00de\u00f0yc \u00fe v1\u00de;\n\n8>>>>><\n>>>>>:\n\n(3.22)\n\nwherexaw 2 \u00c2naw is the anti-windup compensator state with naw\u00bc np, yaw??q and v1\n??m are the outputs generated byMRAW stage, andve 2 \u00c2nc is the output issued by\nthe static DLAW stage (gain Eaw). Notice Eaw is a static DLAW as it feedbacks the\ndead-zone functionf\u00f0u0\u00de directly into the controller dynamics xc through the signal ve.\nFirst, an objective-based algorithm, as in [5], (or a coordinate-descending algorithm\n\nas in [23]), is applied to compute some gains, and then some stability conditions are\n\nsolved to compute the anti-windup loop. See [6, 9] for more details, and for the\n\nnumerical data of this design.\n\n+\n\n+\n\n+\n\n?\n\n? MRAW=\n\nyre f\n\nyaw\n\nyc\n\nzp\n\nyp\n\nxc xp\n\nxaw\n\nv1\n\n\u00b1u0\n\nv1?f(u0)(yc+v1)\n\nsat(yc+v1)\n\nFig. 3.5 MRAW control block diagram\n\n74 J. Boada et al.\n\n\n\n3.3.2 Simulations on Relative Position Control\n\nFirst, the closed-loop system (3.13) is simulated without anti-windup. System\n\n(3.13) is simulated from an initial condition of xp\u00f00\u00de \u00bc \u00bdDz D _z?0 \u00bc \u00bd?1 0?0 and2\nxc \u00bc 01\n5. Let us remind that Eq. (3.13) describes the relative position closed-loop\nsystem with the switching AF (3.9).\n\nIn Fig. 3.7, the solid line presents the Dz response of the system (3.13) (i.e.,\nnonlinear response). The dot-dashed line shows the response of the system without\n\nsaturation (i.e., linear response). One can realize the effects of the saturation as\n\noscillations are induced in the nonlinear response of Dz. The control output and the\nperformed thrust are also shown in Fig. 3.7. The thrustresponse is saturated and\n\nthe control output oscillates. The effects of the saturation on the system (3.13) fully\n\njustify the introduction of the anti-windupcompensator.\n\nIn Fig. 3.8, the time evolution of the relative position of both satellites using a\n\ncompensator developed by Thales Alenia Space (TAS), Cannes, France, is shown.\n\nIt can be observed that this ad hoc compensator succeeds in avoiding the\n\noscillations, even in presence of the nonlinearities in the closed loop. However,\n\nwhereas this control law performs very well in single-input single-output control\n\nproblems, it cannot be easily generalized to multivariable systems, and thus to the\n\nnon-simplified formation flying control problem for which relative position and\n\nattitude are coupled. This is an additional motivation to develop the anti-windup\n\ntechniques presented in this chapter.\n\nThe closed-loop system (3.16) is then simulated with the following anti-windup\n\ncompensators:\n\n\u2022 Static DLAW compensator (solid line)\n\n\u2022 Full order dynamic DLAW compensator (dashed line)\n\n+\n\n+\n\n+\n\n+\n\n?\n\n?\n\n?\n\nv1\n\nv1\n\nyp\n\nv1 ??(u0)(yc + v1)\n\nMRAW=\nEMRAW\n\nDLAW\n\nyref\n\nyaw\nxaw\n\nxawFaw\n\nEaw\nve\n\nxc\n\nyc\n\nxp\n\nzp\nsat(yc+v1)\n\n\u00b1u0\n\nFig. 3.6 Extended MRAW block diagram\n\n2Throughout the simulations, the controller state is considered to be always initialized at the origin.\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 75\n\n\n\n0 200 400 600 800 1000 1200 1400 1600 1800 2000\n?1\n\n0\n\n1\n\nTime [s]\n\n200 400 600 800 1000 1200 1400 1600 1800\nTime [s]\n\n200 400 600 800 1000 1200 1400 1600 1800\nTime [s]\n\n?0.04\n?0.02\n\n0\n0.02\n0.04\n\n?5\n\n0\n\n5\n\nNonlinear response without AW\nLinear response without AW\n\nNonlinear response without AW\nLinear response without AW\n\nNonlinear response without AW\nLinear response without AW\n\n?z\n [m\n\n]\ny c\n\n=\nF\n\n1 \n[N\n\n]\n\nT\nhr\n\nus\nt 1\n\n(1\n) [\n\nm\n]\n\nx 10?3\n\nFig. 3.7 Responses of the relative position without anti-windup compensator\n\n0 500 1000 1500\n?1\n\n?0.5\n\n0\n\nTime [s]\n\n0 500 1000 1500\nTime [s]\n\n0 500 1000 1500\nTime [s]\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\nIn\npu\n\nt 1\n [N\n\n]\n\n?2\n\n?1\n\n0\n\n1\n\nIn\npu\n\nt 2\n [N\n\n]\n?\nz \n\n[m\n]\n\nx 10?3\n\nx 10?3\n\nFig. 3.8 Responses of the relative position with compensator developed by TAS. Top: relative\nposition of both satellites. Middle: input of the first satellite. Down: input of the second satellite\n\n76 J. Boada et al.\n\n\n\n\u2022 Fixed order dynamic DLAW compensator (dot-dashed line)\n\n\u2022 MRAW compensator (line with dots)\n\n\u2022 EMRAW compensator computed with a coordinate-descending algorithm that\n\nis denoted Algorithm 3.2 (line with circles)\n\n\u2022 EMRAW compensator computed with an objective-based algorithm, that is\n\ndenoted Algorithm 3.3 (line with stars)\n\nFigure 3.9 shows the response of the relative position with the different anti-\n\nwindup compensators in the control loop. The Dz responses have been split in two\nsmall figures for clarity purposes. From a general overview of the Fig. 3.9 one can\n\nconclude that the oscillation observed in Fig. 3.7 has disappeared with the intro-\n\nduction of the anti-windup compensator.\n\nLet us start analyzing the response with DLAW. In Fig. 3.9 the response with a\n\ndynamic DLAW is smoother than in the static DLAW case which presents a drop on\n\nits slope. The anti-windup action, in the static case, ends as soon as there is no\n\nsaturation. Therefore, the drop appears. On the contrary, the dynamic DLAW keeps\n\nmodifying the controller action even without actuator saturation. In Fig. 3.10 the\n\nthrust response suddenly falls with the static DLAW case while it decreases progres-\n\nsively with the dynamic one. The advantage of a dynamic DLAW is then proven.\n\nAlso in Fig. 3.10, the thrust response with a full-order DLAW is noisy. The fast\n\ndynamics in the full-order case induces the high-frequency oscillation. The pres-\n\nence of fast and slow modes in the full-order DLAW generates numerical problems\n\nfor both LMI computation step (bad conditioning effects) and simulation step\n\n(numerical precision effects). On the contrary, the fixed-order DLAW does not\n\n0 500 1000 1500\n\n0 500 1000 1500\n\n?1\n\n?0.8\n\n?0.6\n\n?0.4\n\n?0.2\n\n0\n\n?1\n\n?0.5\n\n0\n\n0.5\n\nTime [s]\n\n600 800 1000 1200 1400 1600\n?0.02\n\n0\n\n0.02\n\n?z\n [m\n\n]\n?z\n\n [m\n]\n\nstatic DLAW\nfull order DLAW\nfixed order DLAW\nMRAW\n\nMRAW\nEMRAW objective?based (Alg. 3.3)\nEMRAW coordinate?descending (Alg. 3.2)\n\nFig. 3.9 Response of the relative position with several anti-windup compensators\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 77\n\n\n\npresent this oscillation because the fast dynamics were not chosen in the synthesis\n\nprocess. Therefore, the fixed-order provides a smooth response without high-\n\nfrequency oscillations.\n\nLet us analyze in Fig. 3.9 the Dz response with a MRAW/EMRAW: actually, fast\nresponses are attained. Moreover, the response Dz of the system (3.16) is faster with\nthe EMRAW. An explanation to this behavior is found in Figs. 3.11 and 3.12 where\n\nthe anti-windup output yaw and the reference signal yref are compared. The system\nresponse with the MRAW attains the reference, that is, yp\u00bc yref and yaw \u00bc 0, before\nthe response with the EMRAW. However, the reference yref for the MRAW is\nslower than the one for the EMRAW. Therefore, the actual response yp \u00bc Dz of the\nsystem (3.16) is faster with the EMRAW.\n\nAnother comment on the MRAW approach can be done by the analysis of the\n\nthrust response. In Fig. 3.10 large oscillations on the MRAW approach can be\n\nnoticed. However the closer it gets to the origin, the higher the bang-bang frequency\n\nand hence the stronger the noise induced into the thrust action.\n\nFinally, Fig. 3.13 presents the stability domain estimation for the different anti-\n\nwindup compensators. The MRAW case has been omitted.\n\nThe EMRAW computed with the coordinate-descending algorithm (based on\n\n[23]) provides a larger estimation. Despite slight differences, all the compensators\n\nensure (more or less) the same estimated maximal admissible Dzmax(0) (cutting\npoint with D _z \u00bc 0 axis). However, the estimation obtained with the full-order\n\n0 100 200 300 400 500 600 700 800 900 1000\n\n0 100 200 300 400 500 600 700 800 900 1000\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\nx 10\n\n?3\n\nTime [s]\n\nstatic DLAW\nfull order DLAW\nfixed order DLAW\n\nT\nhr\n\nus\nt 1\n\n(1\n) r\n\nep\non\n\nse\n [N\n\n]\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nT\nhr\n\nus\nt 1\n\n(1\n) r\n\nep\non\n\nse\n [N\n\n]\n\nx 10?3 MRAW\nEMRAW objective?based (Alg.3.3)\nEMRAW coordinate?descending (Alg. 3.2)\n\nFig. 3.10 Response of the first thruster with several Anti-windup compensators\n\n78 J. Boada et al.\n\n\n\nDLAW is smaller than the one obtained with the other compensators. This is due to\n\nsome numerical problems. The difference between the maximum and the minimum\n\neigenvalue of Aaw results on a bad conditioning of the LMIs conditions. As a\nconsequence, the stability domain analysis for the full-order DLAW is unfeasible.\n\nLet us make two final remarks on the stability domain estimation. First, notice\n\nthat the size of the stability domain without anti-windup (dots line) is clearly\n\n0 200 400 600 800 1000\n?1.2\n\n?1\n\n?0.8\n\n?0.6\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\nTime [s]\n\n600 700 800 900\n\n?0.1\n\n0\n\n0.1\n\nMRAW\nEMRAW objective?based (Alg. 3.3)\nEMRAW coordinate?descending (Alg. 3.2)\n\ny a\nw\n\n [m\n]\n\nFig. 3.11 Anti-windup output response for MRAW/EMRAW approaches\n\n100 200 300 400 500 600 700 800 900 1000\n?0.1\n\n?0.05\n\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\nTime [s]\n\nEMRAW coordinate?descending (Alg. 3.2)\nEMRAW objective?based (Alg. 3.3)\nMRAW\n\ny r\nef\n\n [m\n]\n\nFig. 3.12 Reference response for MRAW/EMRAW approaches\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 79\n\n\n\nsmaller. The second point is the conservatism of the estimation. Simulations show\n\nthat the system is stable (even without anti-windup) for an initial condition xp\u00f00\u00de\n\u00bc \u00bd?1 0?0 . However, considering the estimated domain the maximal admissible\ninitial condition is around xp\u00f00\u00de \u00bc \u00bd?0:15 0?0.\n\nTable 3.2 summarizes the main values characterizing the anti-windup\n\ncompensators. These values are:\n\n\u2022 The maximal admissible initial condition for the relative position Dzmax(0).\n\u2022 The time evolution for Dz in seconds.\n\u2022 The integral of the thrust response (value related to the consumption).\n\u2022 The order of the anti-windup (AW) compensator.\n\nTable 3.2 Summary values on the relative position control\n\nStatic DLAW Full-order DLAW Fixed-order DLAW\n\nDzmax\u00f00\u00de \u00bc 1ffiffirp [m] 0. 14 0. 13 0.15\nTime of response [s] 1, 570 1, 160 1, 390\n\nConsumption [Ns] 2. 017 1. 829 1. 82\n\nAW order 0 14 5\n\nMRAW EMRAW Algorithm 3.2 EMRAW Algorithm 3.3\n\nDzmax\u00f00\u00de \u00bc 1ffiffirp [m] 0. 17 0. 16\nTime of response [s] 750 580 630\n\nConsumption [Ns] 1. 679 1. 894 1. 8192\n\nAW order 2 2 2\n\n?0.2 ?0.15 ?0.1 ?0.05 0 0.05 0.1 0.15 0.2\n?5\n\n?4\n\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\n5\nx 10?3\n\n?z\n ti\n\nm\ne?\n\nde\nriv\n\nat\niv\n\ne \n[m\n\n/s\n]\n\nstatic DLAW\nfull order DLAW\nfixed order DLAW\nEMRAW objective?based (Alg. 3.3)\nEMRAW coordinate?descending (Alg. 3.2)\nwithout AW\n\n?z [m]\n\nFig. 3.13 Stability domain with several anti-windup compensators\n\n80 J. Boada et al.\n\n\n\nA certain trade-off has to be done in the optimized compensator design between\n\nperformance (consumption, speed of convergence) and size of the stability domain (r).\nThe time evolution appears as a remarkable value for the comparison. It has been\n\ndefined as the time when the Dz response has reached the 99 % of the gap between\nits initial condition and the origin. In these simulations the initial relative position is\n\nDz \u00bc ?1m. It has been understood as Dz \u00bc \t 0. 01 m.\nNote the important gap between the time evolution of the system with a DLAW\n\nor with a MRAW/EMRAW. With these last approaches the responses are certainly\n\nfaster. In addition, this improvement does not come with an undesirable increase of\n\nthe consumption.\n\nLet us remind that the value representing the consumption is just the integral of\n\nthe thrusters response with relation to the time, and not the actual consumption.\n\nThese values are however proportional.\n\nRemark 2. Because of its simplicity, its efficiency in terms of time evolution, and\nits guaranteed stability domain, the EMRAW structure arises as an interesting\n\narchitecture for the anti-windup computation. However, the initialization process\n\nfor the associated algorithms is not trivial. In addition, the anti-windup compensator\n\norder is restricted to the order of the plant.\n\nRemark 3. The full-order DLAW presents fast and slow modes. These modes\ngenerate numerical problems for both LMI computation step (bad conditioning\n\neffects) and simulation step (numerical precision effects). Therefore, the fixed-\n\norder DLAW is an interesting alternative to the full-order one. Although some\n\nstrategies are proposed in the literature, the choice of the Aaw poles is not strictly\nformalized.\n\nRemark 4. Even if in Table 3.2 the static DLAW presents the worst values of all\ncompensators, these values are not too much far from those obtained with other\n\napproaches. On the other hand, the static DLAW is easy to compute because of the\n\nassociated LMIs simplicity. It is also easy to implement because it is simply a static\n\ngain. Therefore, a systematic procedure can be designed for the static DLAW\n\ncomputation.\n\n3.4 Conclusion\n\nAnti-windup compensator design represents the core of this chapter. For ease of\n\nunderstanding and methods comparisons, the relative position control system has\n\nbeen taken as a simplified study case. Different anti-windup compensators have\n\nbeen evaluated for this problem. The closed-loop system modeling this control\n\nproblem has been initially provided. The simplicity of the system has allowed\n\nthe characterization of the main features of the anti-windup compensators. The\n\nsimulations have allowed to point out the interest of the EMRAW approach.\n\nSimilarly to the study presented in this chapter, the attitude and relative position\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 81\n\n\n\ncontrol system has also been studied. This application presents the particularity of\n\nbeing a multi-variable system with a coupling of the attitude over the relative\n\nposition. For more details on this last case, see [6].\n\nInteresting point for further research, regarding the EMRAW, concerns on the\n\nanti-windup order reduction. Indeed, one main drawback of the EMRAW is that\n\nthe plant and the anti-windup compensator are forced to have the same order.\n\nIn large-order models, this constraint is unacceptable for future physical\n\nimplementations. Therefore, it would be interesting to develop constructivemethods\n\nto reduce the anti-windup order, for example, eliminating secondary dynamics of the\n\nconsidered plant. In this scenario, the results could be related with the anti-windup\n\nsynthesis on an uncertain system.\n\nReferences\n\n1. Absil, O.: Science with pegase. In: Proceedings of 2nd TPF/Darwin International Conference,\n\nSan Diego, CA, USA (2004)\n\n2. Astr\u20acom, K.J., Rundqwist, L.: Integrator windup and how to avoid it. In: Proceedings of the\nAmerican Control Conference, Pittsburgh, PA, USA (1989)\n\n3. Balas, G., Chiang, R., Packard, A., Safonov, M.: Robust Control Toolbox user\u2019s guide. The\n\nMathWorks Inc., Natick, MA (2007)\n\n4. Berg, J.M., Hammet, K.D., Schwartz, C.A., Banda, S.S.: Analysis of the destabilizing effect of\n\ndaisy chained rate-limited actuators. IEEE Trans. Contr. Syst. Tech. 4, 171\u2013176 (1996)\n\n5. Biannic, J.M., Roos, C., Tarbouriech, S.: A practical method for fixed-order anti-windup\n\ndesign. In: Proceedings of 7th IFAC Symposium on Nonlinear Control Systems (NOLCOS),\n\nPretoria, South Africa (2007)\n\n6. Boada, J.: Satellite control with saturating inputs. Ph.D. thesis, ISAE, Toulouse, France (2010)\n\n7. Boada, J., Prieur, C., Tarbouriech, S., Pittet, C., Charbonnel, C.: Anti-windup design for\n\nsatellite control with microthrusteurs. In: Proceedings of AIAA GN&C conference, Chicago,\n\nIL, USA (2009)\n\n8. Boada, J., Prieur, C., Tarbouriech, S., Pittet, C., Charbonnel, C.: Multi-saturation anti-windup\n\nstructure for satellite control. In: Proceedings of the American Control Conference, Baltimore,\n\nMD, USA (2010)\n\n9. Boada, J., Prieur, C., Tarbouriech, S., Pittet, C., Charbonnel, C.: Extended model recovery\n\nanti-windup for satellite control. In: Proceedings of the 16th IFAC Symposium on Automatic\n\nControl in AeroSpace, Nara, Japan (2010)\n\n10. Boyd, S., Vandenberghe, L.S.P.: Convex Optimization. Cambridge Univesity Press,\n\nCambridge (2004)\n\n11. Durham, D.C.: Constrained control allocation. J. Guid. Contr. Dynam. 16, 717\u2013725 (1993)\n\n12. Galeani, A.R., Teel, A.R., Zaccarian, L.: Constructive nonlinear anti-windup design for\n\nexponentially unstable linear plants. Syst. Contr. Lett. 56(5), 357\u2013365 (2007)\n\n13. Galeani, S., Onori, A.R., Teel, A.R., Zaccarian, L.: Regional, semiglobal, global nonlinear\n\nanti-windup via switching design. In: Proceedings European Control Conference, Kos, Greece\n\n(2007)\n\n14. Galeani, S., Tarbouriech, S., Turner, M.C., Zaccarian, L.: A tutorial on modern anti-windup\n\ndesign. Eur. J. Contr. 15(3\u20134), 418\u2013440 (2009)\n\n15. Gaulocher, S.: Commande boucle ferme?e multivariable pour le vol en formation de vaisseaux\n\nspatiaux. Ph.D. thesis, Universite? de Toulouse, Toulouse, France (2007)\n\n82 J. Boada et al.\n\n\n\n16. Gomes da Silva, J.M. Jr., Tarbouriech, S.: Anti-windup design with guaranteed regions of\n\nstability: An LMI-based approach. IEEE Trans. Automat. Contr. 50(1), 106\u2013111 (2005)\n\n17. Grimm, G., Hatfield, J., Postlethwaite, I., Teel, A.R., Turner, M.C., Zaccarian, L.: Anti-windup\n\nfor stable linear systems with input saturation: An LMI-based synthesis. IEEE Trans. Automat.\n\nContr. 48(9), 1509\u20131525 (2003)\n\n18. Hu, T., Lin, Z.: Control Systems with Actuator Saturation. Analysis and Design. Birkhauser,\n\nBasel (2001)\n\n19. Kapila, V., Grigoriadis, K. (eds.): Actuator Saturation Control. Marcel Dekker, New York\n\n(2002)\n\n20. Kerr, M.L., Turner, M.C., Postlethwaite, I.: Practical approaches to low-order anti-windup\n\ncompensator design: A flight control comparison. In: IFAC World Congress, Seoul, Korea\n\n(2008)\n\n21. L\u20acofberg, J.: Yalmip: A toolbox for modeling and optimization in matlab. In: CACSD Confer-\nence, Taipei, Taiwan (2004)\n\n22. Nocedal, J., Wright, S.J.: Numerical Optimization. Springer, New York (1999)\n\n23. Peaucelle, D., Arzelier, D.: An efficient numerical solution for H2 static output feedback\nsynthesis. In: Proceedings of European Control Conference, Porto, Portugal (2001)\n\n24. Pirson, L., Charbonnel, C., Udrea, B., Rennie, M., McGuinness, P., Palomo, P.: Darwin\n\nprecursor demonstration mission: The ICC2 study, from GNC design to real-time test bench\n\nvalidation. In: Proceedings of 6th GNC ESA, Loutraki, Greece (2005)\n\n25. Roos, C., Biannic, J.M.: A convex characterization of dynamically-constrained anti-windup\n\ncontrollers. Automatica 44(8), 2449\u20132452 (2008)\n\n26. Stein, G.: Bode lecture: Respect the unstable. In: Proceedings of Conference on Decision and\n\nControl, Tampa, USA, December (1989)\n\n27. Tarbouriech, S., Turner, M.C.: Anti-windup synthesis: An overview of some recent advances\n\nand open problems. IET Control Theory Appl. 3(1), 1\u201319 (2009)\n\n28. Tarbouriech, S., Prieur, C., Gomes da Silva, J.M. Jr.: Stability analysis and stabilization of\n\nsystems presenting nested saturations. IEEE Trans. Automat. Contr. 51(8), 1364\u20131371 (2006)\n\n29. Tarbouriech, S., Garcia, G., Gomes da Silva, J.M. Jr., Queinnec, I.: Stability and stabilization\n\nof linear systems with saturating actuators. Springer, London (2011)\n\n30. Teel, A.R., Kapoor, N.: The ?2 antiwindup problem: Its definition and solution. In:\nProceedings of the 4th European Control Conference, Brussels, Belgium (1997)\n\n31. Turner, M.C., Postlethwaite, I.: A new perspective on static and low order anti-windup\n\nsynthesis. Internat. J. Control 77(1), 27\u201344 (2004)\n\n32. Zaccarian, L., Teel, A.R.: A common framework for anti-windup, bumpless transfer and\n\nreliable designs. Automatica 38(10), 1735\u20131744 (2002)\n\n33. Zaccarian, L., Teel, A.R.: Modern Anti-Windup Synthesis. Princeton University Press,\n\nPrinceton (2011)\n\n3 Formation Flying Control for Satellites: Anti-windup Based Approach 83\n\n\n\nChapter 4\n\nThe ESA NLP Solver WORHP\n\nChristof B\u20acuskens and Dennis Wassel\n\nAbstract We Optimize Really Huge Problems (WORHP) is a solver for\n\nlarge-scale, sparse, nonlinear optimization problems with millions of variables\n\nand constraints. Convexity is not required, but some smoothness and regularity\n\nassumptions are necessary for the underlying theory and the algorithms based on it.\n\nWORHP has been designed from its core foundations as a sparse sequential\n\nquadratic programming (SQP) / interior-point (IP) method; it includes efficient\n\nroutines for computing sparse derivatives by applying graph-coloring methods to\n\nfinite differences, structure-preserving sparse named after Broyden, Fletcher,\nGoldfarb and Shanno (BFGS) update techniques for Hessian approximations, and\nsparse linear algebra. Furthermore it is based on reverse communication, which\n\noffers an unprecedented level of interaction between user and nonlinear program-\n\nming (NLP) solver. It was chosen by ESA as the European NLP solver on the basis\n\nof its high robustness and its application-driven design and development philoso-\n\nphy. Two large-scale optimization problems from space applications that demon-\n\nstrate the robustness of the solver complement the cursory description of general\n\nNLP methods and some WORHP implementation details.\n\nKeywords Nonlinear optimization \u2022 Large-scale \u2022 Mathematical optimization\n\n\u2022 NLP\n\n4.1 Introductory Remarks\n\nNonlinear optimization has grown to a key technology in many areas of\n\naerospace industry, especially for solving discretized optimal control problems\n\nwith differential equation systems, like ordinary differential equations (ODEs),\n\nC. B\u20acuskens (*) \u2022 D. Wassel\nCenter for Industrial Mathematics, University of Bremen, Bremen, Germany\n\ne-mail: bueskens@worhp.de; dwassel@worhp.de\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_4,\n# Springer Science+Business Media New York 2013\n\n85\n\nmailto:bueskens@worhp.de\nmailto:dwassel@worhp.de\n\n\ndifferential-algebraic equations (DAEs), and partial differential equations (PDEs).\n\nApplications are satellite control, shape-optimization, aerodynamics, trajectory\n\nplanning, reentry problems, and interplanetary flights. One of the most extensive\n\nareas is the optimization of trajectories for aerospace applications; this book is\n\nproof to that notion. Nonlinear optimization problems arising from these\n\napplications typically are large and sparse. Previous methods for solving nonlinear\n\noptimization problems were originally developed for small- to medium-sized1 and\n\ndense problems. Many challenging optimization problems cannot be tackled by\n\nthese solvers due to their size.\n\nSolving large-scale problems requires an NLP solver to exploit as much of the\n\nproblem structure as possible. This implies efficient storage of sparse vectors and\n\nmatrices, special linear algebra methods for solving sparse, large-scale linear\n\nsystems of equations and efficient methods for approximation of sparse first and\n\nsecond derivatives.\n\nMost of the available optimization methods employ the Broyden, Fletcher,\nGoldfarb and Shanno (BFGS) update technique for the Hessian of the Lagrange\nfunction. This update technique has several advantages, such as guaranteeing the\n\npositive definiteness of the Hessian approximation, which has algorithmic benefits,\n\nand the ability to achieve superlinear convergence of the overall algorithm. Its most\n\nimportant advantage is that BFGS-type updates are very cheap to evaluate, while its\n\nmost important drawback is the fact that BFGS approximations are dense in general,\n\neven if the underlying optimization problem is sparse, which precludes their use in\n\nlarge-scale optimization. We Optimize Really Huge Problems (WORHP) has there-\n\nfore been designed to use exact Hessians, if available, or to approximate them numeri-\n\ncally efficient by sophisticated, graph-coloring-based finite-difference methods or by\n\nvarious sparse variations of the classical BFGS update; the structure-preserving sparse\nBFGS (SBFGS) update is a unique feature of WORHP.\n\nThis chapter is organized as follows:Wewill first give an overview about nonlinear\n\noptimization and some background aboutmethods for solving such problems. Thenwe\n\nintroduce the general methodology of the new solver WORHP and present its advan-\n\ntages and techniques inmore detail. Numerical results of some large-scale optimization\n\nproblems in space applications demonstrate the capabilities of the method.\n\n4.2 Nonlinear Optimization\n\nWORHP solves nonlinear optimization problems of the form\n\nmin\nx2Rn\n\nf \u00f0x\u00de\n\nsubject to\nl\n\nL\n\n !\n?\n\nx\n\ng\u00f0x\u00de\n\n !\n?\n\nu\n\nU\n\n ! (OP)\n\n1We regard problems with less than 1,000 variables and constraints as small and problems with up\n\nto 5,000 variables and constraints as medium-sized, although this is not a sharp definition.\n\n86 C. B\u20acuskens and D. Wassel\n\n\n\nwith bounds\n\nl; u 2 \u00f0R [ ?1f g\u00den;\nL;U 2 \u00f0R [ ?1f g\u00dem;\n\nand user-defined functions f : Rn ! R and g : Rn ! Rm . If either x or g are\nunbounded, the corresponding bound is ?1 (in practice,1 is replaced by a finite,\nlarge constant, such as 1020). One should note that each gi needs to have at least one\nfinite bound, since it is redundant otherwise and should be removed from the model.\n\nBoth the objective function f and the constraints g may be linear, quadratic, or\nnonlinear (no convexity is assumed). The theoretical foundation requires certain\n\nsmoothness and regularity assumptions, which unfortunately are next to impossible\n\nto ascertain for most problems of practical relevance. In practice, WORHP often\n\nfinds solutions even if the differentiability requirement is not satisfied.\n\nThe constraints g in Eq. (OP) may have mixed linear and nonlinear components,\ni.e., it may be of the form\n\ng\u00f0x\u00de \u00bc Ax\ngnl\u00f0x\u00de\n\n? ?\n\nwith a matrix A 2 Rk?n. Some NLP solvers impose this ordering of the constraints\ninto linear and nonlinear constraints on the user, while WORHP accepts constraints\n\nin arbitrary order, without any requirement to sort or classify them (though future\n\nversions are planned to offer an optional mechanism for tagging constraints as linear,\n\nwhich can be used to evaluate the constraint Jacobian in a more efficient way).\n\nProblem (OP) may be used to maximize an objective function by replacing the\nobjective f by its negative ? f.\n\nSpecial cases of Eq. (OP) are linear optimization problems (linear program-\n\nming), quadratic optimization problems (quadratic programming, QP), discretized\n\noptimal control problems, trajectory optimization problems, or constrained nonlin-\n\near least-squares problems.\n\nInternally, WORHP solves problems in standard mathematical form\n\nmin\nx2RN\n\nF\u00f0x\u00de\n\nsubject to Gi\u00f0x\u00de \u00bc 0; i \u00bc 1; . . . ;Me\nGj\u00f0x\u00de ? 0; j \u00bc Me \u00fe 1; . . . ;M;\n\n(NLP)\n\nwhich is equivalent to the initial problem formulation by a simple transformation;\n\nusually F \u00bc f and N \u00bc n, but in general G :\u00bc (G1, . . ., GM) 6\u00bc g and M > m, except\nfor special cases.\n\n4 The ESA NLP Solver WORHP 87\n\n\n\nFormulation (NLP) is convenient for expressing mathematical properties, while\n\nformulation (OP) is more convenient for the implementation of practical optimiza-\n\ntion problems.\n\nThe aim is to find a vector x? 2 RN, which satisfies the constraints G and uses the\nremaining degrees of freedom to minimize the given objective function F. The sets\n\nI\u00f0x?\u00de :\u00bc i 2 Me \u00fe 1; . . . ;Mf g\n??Gi\u00f0x?\u00de \u00bc 0\n\n? ?\n;\n\nJ\u00f0x?\u00de :\u00bc I\u00f0x?\u00de [ 1; . . . ;Mef g;\n(AS)\n\nare called set of active indices. To find x?, we introduce the Lagrangian\n\nL\u00f0x; l\u00de :\u00bc F\u00f0x\u00de \u00fe lTG\u00f0x\u00de;\n\nwhere l 2 RM is the vector of the Lagrange multipliers. The necessary first-order\noptimality conditions, also called KKT conditions, guarantee that if x? is a local\nminimum of Eq. (NLP) and moreover x? is regular (compare Mangasarian-\nFromowitz [14]), then there exists l? 2 RM such that the following holds:\n\nrxL\u00f0x?; l?\u00de \u00bc rxF\u00f0x?\u00de \u00fe \u00f0l?\u00deTrxG\u00f0x?\u00de \u00bc 0;\nl?i ? 0; i 2 I\u00f0x?\u00de;\nl?j \u00bc 0; j 62 J\u00f0x?\u00de;\n\n\u00f0l?\u00deTG\u00f0x?\u00de \u00bc 0:\n\n(KKT)\n\nIf additionally rxGi(x*), i 2 J(x*) are linearly independent, then l* is unique. This\ncriterion is called linear independence constraint qualification (LICQ) and is used to\n\nsearch for optimal solutions of Eq. (NLP).\n\n4.2.1 Sequential Quadratic Programming\n\nWORHP is a mixed SQP-IP solver: it uses sequential quadratic programming\n\n(SQP) on NLP level and an Interior-Point method on QP level, i.e., the quadratic\n\nsubproblems [see below, Eq. (QP)] generated by the SQP method. The general idea\n\nof SQP methods was first introduced by Wilson [17] in 1963 and revived by Han\n\n[10] in 1976. Since then they belong to the most frequently used algorithms for the\n\nsolution of practical optimization problems due to their robustness and their good\n\nconvergence properties. SQP methods can be proven to achieve global convergence\n\nand locally superlinear convergence rate; even locally quadratic convergence can\n\nbe achieved if the Hessian of the Lagrangian r2xxL(x, l) is available.\n\n88 C. B\u20acuskens and D. Wassel\n\n\n\nThe fundamental principle of SQP methods is to find KKT points, i.e., points that\n\nsatisfy the necessary optimality conditions. While sufficient optimality conditions\ncan be formulated, they are usually not tested, since this is computationally costly.\n\nIn rare cases, this can mislead NLP solvers to consider local maxima or saddle\n\npoints as minima, but this is mostly limited to constructed academic examples and\n\nhardly observed on practical problems.\n\nSQP methods essentially apply Newton\u2019s method (compare [7]) to find zeros of\n\nrxL(x, l) that satisfy the constraintsG, using a local linearization. In this basic form,\nquadratic subproblems of the form\n\nmin\nd2RN\n\n1\n\n2\ndTr2xxL\u00f0x; l\u00ded \u00ferxF\u00f0x\u00ded;\n\nsubject to Gi\u00f0x\u00de \u00fe rxGi\u00f0x\u00ded \u00bc 0; i \u00bc 1; . . . ;Me\nGj\u00f0x\u00de \u00fe rxGj\u00f0x\u00ded ? 0; j \u00bc Me \u00fe 1; . . . ;M\n\n(QP)\n\nare solved to obtain a search direction d.\nOften, the Hessian of the Lagrangian r2xx L(x, l) is replaced by an update of\n\nBFGS type, which has the additional benefit that only strictly convex quadratic\n\nprograms have to be solved. This strategy works well for small- to medium-sized\n\nproblems, but it turns out to be infeasible for large-scale problems, since the update\n\nformulae generally yield dense matrices, which in turn lead to dense Hessian\n\napproximations. To solve large-scale problems, one is thus forced to fall back to\n\nthe exact Hessian of the Lagrangian. This matrix may be indefinite and thus lead to\n\nnon-convex quadratic subproblems, which makes a regularization step (compare\n\nSect. 4.2.1.6) necessary. On the upside, it facilitates solution of optimal control\n\nproblems (OCPs) when using full discretization\u2014one of WORHP\u2019s intended major\n\napplication areas\u2014because discretization invariance may be achieved with the\n\nHessian, i.e., the number of iterations needed to solve a given OCP remains\n\nconstant irrespective of the discretization grid.\n\nComputation of derivatives is a crucial element in nonlinear optimization.\n\nBasically first derivatives, i.e., the gradient of the objective function and the\n\nJacobian of the constraints, are necessary in order to find a descent direction.\n\nThe overall SQP algorithm is an iterative process that defines a series of points\n\nx[k] (called iterates) that (ideally) converge to an optimal point. It consists very\nroughly of following steps:\n\n1. Check termination criteria (see Eq. (KKT) and Sect. 4.2.2.3).\n\n2. Locally approximate Eq. (NLP) by Eq. (QP) and solve it (see Sects. 4.2.1.1,\n\n4.2.1.2 and 4.2.1.6).\n\n3. Use the solution from 2 to define the new iterate, employing either a merit\n\nfunction (Sect. 4.2.1.3) or a filter method (Sect. 4.2.1.5) to find a suitable step\n\nsize (Sect. 4.2.1.4).\n\n4 The ESA NLP Solver WORHP 89\n\n\n\n4.2.1.1 Interior-Point Methods\n\nInterior-point (IP) methods were originally designed to solve linear optimization\n\nproblems, but where later generalized to solve other classes of problems as well\n\n(even NLPs).\n\nApplied to problems of the form Eq. (QP) whose solution is needed by the NLP\n\nsolver, IP methods transform problems of the form\n\nmin\nx2Rn\n\n1\n\n2\nxTQx\u00fe cTx\n\ns.t. Ax \u00bc b;\nCx ? d\n\nwith Q \u00bc r2xx L(x[k], l[k]), c \u00bc rx F(x), A \u00bc rx\u00f0Gi\u00de\u00f0x\u00bdk?\u00de; i \u00bc 1; . . . ;Me; and\nC \u00bc rx\u00f0Gj\u00de\u00f0x\u00bdk?\u00de; j \u00bc Me \u00fe 1; . . . ;M into the form\n\nmin\n\u00f0x;s\u00de2Rn\u00fem\n\n1\n\n2\nxTQx\u00fe cTx\n\ns.t. Ax \u00bc b;\nCx\u00fe s \u00bc d;\n\ns ? 0:\n\n(IP)\n\nThe fundamental concept in IP methods is to eliminate the inequality constraints\n\nCx ? d by introducing (strictly positive) slack variables s, and adding them to the\nobjective function using a log-barrier term, where n > 0 weights the penalty term:\n\nmin\n\u00f0x;s\u00de2Rn\u00fem\n\n1\n\n2\nxTQx\u00fe cTx? n\n\nXm\ni\u00bc1\n\nlog si\n\ns.t. Ax \u00bc b;\nCx\u00fe s \u00bc d:\n\n\u00f0IPlog\u00de\n\nThen a sequence of equality constrained nonlinear programs is solved while\n\nsimultaneously the weight parameter n > 0 in the objective function tends to\nzero. The optimal solution fulfills s > 0, because the objective function would\nbecome infinite otherwise. This property of IP methods has coined their name, since\n\nthe log-barrier term forces the iterates to stay strictly in the interior of the feasible\n\nregion defined by the inequality constraints. This also implies one major technical\n\nrestriction of IP method, namely the requirement that the initial guess has to be\n\nfeasible.\n\n90 C. B\u20acuskens and D. Wassel\n\n\n\nThe KKT conditions for the barrier problem are\n\nQx\u00fe ATy\u00fe CTz \u00bc ?c;\nAx \u00bc b;\n\nCx\u00fe s \u00bc d;\n\n? n\nsi\n\u00fe zi \u00bc 0; i \u00bc 1; . . . ;m;\n\n\u00f0IPKKT\u00de\n\nwhere y and z are Lagrange multipliers for the constraints in Eq. (IPlog). The KKT\nconditions (IPKKT) can also be interpreted as perturbed KKT conditions of problem\n\n(IP). The last condition can be transformed to\n\nn \u00bc 1\nm\nzTs;\n\nthe so-called complementarity measure, by multiplying the equation with si> 0 and\nsummation afterwards. The complementarity measure quantifies the violation of the\n\ncomplementarity condition in Eq. (IP).\n\nThe approach of an IP method can be described now: The iterative solutions\n\nremain in the strict interior of the feasible region, since the barrier term would\n\nbecome too large otherwise. A decrease of n allows solutions near the boundary of\nthe feasible region.\n\nPrimal-dual interior-point methods generate primally feasible slack variables\n\ns[k] > 0 and dually feasible multipliers z[k] > 0 such that the complementarity\nmeasure nk \u00bc \u00f0z\u00bdk?\u00deTs\u00bdk?=m tends to zero. Additionally, x[k] and y[k] must be\ncomputed such that the residuals\n\nr\n\u00bdk?\nQ \u00bc Qx\u00bdk? \u00fe ATy\u00bdk? \u00fe CTz\u00bdk? \u00fe c;\nr\n\u00bdk?\nA \u00bc Ax\u00bdk? ? b;\nr\n\u00bdk?\nC \u00bc Cx\u00bdk? \u00fe s\u00bdk? ? d\n\nconverge to zero. In the event of convergence, we obtain lim z[k] ? 0, lim s[k] ? 0,\nlim nk \u00bc 0, lim r?[k] \u00bc 0, ? 2 {Q, A, C}, such that the KKT conditions for Eq. (IP)\nare fulfilled. The initial guess of Eq. (IPKKT) does not need to be feasible.\n\nA complete QP solver implementation is described in Gertz and Wright [6]. They\n\nuse a heuristic of Mehrotra which was successfully applied to linear programs. Two\n\nlinear equation systems have to be solved for one iteration: The first linear equation\n\nsystem basically represents a Newton step for the nonlinear equation system (IPKKT)\n\n(with n \u00bc 0). This is a so-called affine-scaling step. The second step, the so-called\ncorrector step, produces an improvement of the complementarity measure.\n\nThe solution x 2 Rn of Eq. (IP) is used as search direction d[k] by the SQP\nmethod, and the multipliers y and z are used to update the Lagrange multipliers l in\nthe NLP.\n\n4 The ESA NLP Solver WORHP 91\n\n\n\n4.2.1.2 Constraint Relaxation\n\nThe problem (QP) may have no solution at all, if there are inconsistencies in the\n\nlinearized constraints. A simple example is illustrated by the constraint\n\nG\u00f0x\u00de \u00bc 1? x2 ? 0:\n\nLinearizing this constraint at x[0] \u00bc 0, we arrive at the inequality\n\nG\u00f0x\u00bd0?\u00de \u00fe rxG\u00f0x\u00bd0?\u00de \t d \u00bc 1\u00fe 0 \t d ? 0;\n\nwhich obviously cannot be satisfied. For the practical implementation a relaxed\n\nformulation of Eq. (QP) is solved with respect to z \u00bc \u00f0d; d\u00de 2 RN\u00fe1:\n\nmin\nz2RN\u00fe1\n\n1\n\n2\ndTr2xxL\u00f0x; l\u00ded \u00ferxF\u00f0x\u00ded \u00fe\n\n1\n\n2\n?rd\n\n2;\n\nsubject to Gi\u00f0x\u00de\u00f01? d\u00de \u00fe rxGi\u00f0x\u00ded \u00bc 0; i \u00bc 1; . . . ;Me \u00f0QPr\u00de\n\nGj\u00f0x\u00de\u00f01? sjd\u00de \u00fe rxGj\u00f0x\u00ded ? 0; j \u00bc Me \u00fe 1; . . . ;M;\n\nwhere d denotes the relaxation variable, ?r > 0 is a penalty weight, and\n\nsj \u00bc\n0; if G\n\nk\u00bd ?\nj <0;\n\n1; otherwise\n\n(\n; j \u00bc Me \u00fe 1; . . . ;M:\n\nIf d \u00bc 1, the problem always has d \u00bc 0 as feasible (though somewhat useless)\nsolution, and conversely, if d \u00bc 0, then Eq. (QPr) is equivalent to Eq. (QP). The\nconstraint relaxation penalty term ?r that strives to minimize d via the 12 ?rd\n\n2 term\n\nin the objective of Eq. (QPr) is therefore chosen to achieve sufficiently small values\n\nof d.\n\n4.2.1.3 Merit Functions\n\nMerit functions are needed to obtain a scalar measure of \u201cgoodness\u201d of the trial\n\npoint\n\nx k\u00fe1\u00bd ? \u00bc x\u00bdk? \u00fe a k\u00bd ?d k\u00bd ?; (4.1)\n\nwhich is an update of the current iterate x[k] by the result d[k] of Eq. (QP) and a scalar\nstep size a[k] that is introduced to achieve global convergence (since SQP is\nessentially derived from Newton\u2019s method that also depends on line search for\n\n92 C. B\u20acuskens and D. Wassel\n\n\n\nglobalization). This measure consists of a scalar quantification of both the objective\n\nand the constraints. Well-known merit functions are the L1-penalty function\n\nL1\u00f0x; ?\u00de: \u00bc F\u00f0x\u00de \u00fe\nXMe\ni\u00bc1\n\n?ijGi\u00f0x\u00dej \u00fe\nXM\n\ni\u00bcMe\u00fe1\n?i maxf0;Gi\u00f0x\u00deg;\n\nand the augmented Lagrangian\n\nLa\u00f0x; l; ?\u00de: \u00bc F\u00f0x\u00de \u00fe\nXMe\ni\u00bc1\n\nliGi\u00f0x\u00de \u00fe 1\n2\n\nXMe\ni\u00bc1\n\n?iG\n2\ni \u00f0x\u00de\n\n\u00fe 1\n2?i\n\nXM\ni\u00bcMe\u00fe1\n\n??\nmax 0; li \u00fe ?iGi\u00f0x\u00def g\n\n\t2 ? l2i\n\n\n;\n\nwhere ? 2 RM , with ?i ? 0, i \u00bc 1, . . ., M, is a penalty vector. The penalty\nparameters ? used in both variants are updated iteratively, depending on derivative,\nmultiplier, and progress information. For more details compare Schittkowski [16],\n\nGill et al. [7], and Gill et al. [8].\n\n4.2.1.4 Line Search\n\nAfter determining the search direction d[k] from the QP, we have to find a suitable\nstep size a[k]. To this end we use a line-search method based on the Armijo rule, a\nstandard technique described for instance in [7]. We define\n\nf\u00f0a\u00de :\u00bc M\u00f0x\u00bdk? \u00fe ad k\u00bd ?;C\u00f0l\u00bdk?; a\u00de; ?\u00de;\n\nwhere C(l[k], a) is an update of the multipliers depending on a, the current\nmultipliers l[k], and the new multiplier approximation lQP from Eq. (QP), for\ninstance C\u00f0l\u00bdk?; a\u00de \u00bc \u00f01? a\u00del\u00bdk? \u00fe alQP; and M is one of the merit functions\nintroduced in Sect. 4.2.1.3.\n\nIn general, a good choice would be an a which exactly minimizes f(a), but\nunfortunately, this defines another nonlinear optimization problem. Although the\n\noriginal problem is reduced to a one-dimensional line search, it is too expensive to\n\nsolve, especially with large-scale problems. A more realistic goal is thus to find the\n\nlargest step size a that satisfies\n\nf\u00f0a\u00de<f\u00f00\u00de \u00bc M\u00f0x\u00bdk?; l\u00bdk?; ?\u00de;\n\nby using an inexact line search.\n\nStarting with a maximum step size amax 2 (0, 1] and a decrease factor b 2 (0, 1),\ncandidates for the step size are\n\n4 The ESA NLP Solver WORHP 93\n\n\n\naj \u00bc bjamax\n? j j \u00bc 0; 1; 2; . . . ; lmaxg;\n\nwhere lmax \u00bc max l 2 N j blamax ? amin\n? ?\n\ndefines the smallest step size allowed.\n\nAs the first trial step size we choose a0 \u00bc amax. If the Armijo condition\n\nf\u00f0aj\u00de ? f\u00f00\u00de \u00fe sajf0\u00f00\u00de; (4.2)\n\nwhere s 2 R\u00fe is a suitable factor and f0(0) the derivative of f with respect to a, is\nnot satisfied, a1 \u00bc b1a0 is calculated and Eq. (4.2) is checked again. This is done\niteratively until either a suitable a is found, or the line search fails when i > lmax.\n\n4.2.1.5 Filter\n\nAn alternative to merit functions is the recently developed filter method for\n\ndetermining the step size a in Eq. (4.1).\nA trial iterate x k\u00fe1\u00bd ? \u00bc x\u00bdk? \u00fe a\u00bdk?d k\u00bd ? is accepted by the filter if it either improves\n\nthe objective function F or the constraint violation H\u00f0x\u00de :\u00bc jjG\u00fe\u00f0x\u00dejj, where\n\nG\u00fei \u00f0x\u00de :\u00bc\nGi\u00f0x\u00de; for i \u00bc 1; . . . ;Me;\nmaxf0;Gi\u00f0x\u00deg; for i \u00bc Me \u00fe 1; . . . ;M:\n\n(\n(4.3)\n\nTo facilitate notation, we will now index iteration-dependent function values with\n\nthe iteration index, e.g., F[k] :\u00bc F(x[k])\nThe point (F[k], H[k]) is said to be dominated by the point (F[j], H[j]) if both\n\nF\u00bdj? ? F\u00bdk? and H\u00bdj? ? H\u00bdk? (4.4)\n\nA filter ? is a list of pairs (F(x), H(x)) such that no entry dominates any other.\nA trial iterate x\u00bdk\u00fe1? is accepted by the filter if the corresponding pair \u00f0F\u00bdk\u00fe1?;H\u00bdk\u00fe1?\u00de\nis not dominated by any filter entry. The pair \u00f0F\u00bdk\u00fe1?;H\u00bdk\u00fe1?\u00decan then be added to the\nfilter, and all entries that are dominated by this new pair have to be deleted.\n\nOtherwise a new trial iterate with a smaller step size is tested.\n\nThe filter can be initialized as ? \u00bc (1,1) or with an upper bound Hmax > 0 for\nthe constraint violation as ? \u00bc (1, Hmax).\n\nFor an actual implementation of a filter method, additional criteria are needed to\n\nprevent convergence to infeasible points or insufficient progress between iterations.\n\n4.2.1.6 Hessian Regularization\n\nTo guarantee that Eq. (QP) has a unique solution, one has to ensure thatHL\u00bcr2xxL(x,l)\nis positive definite on the kernel of the Jacobian of the active constraints.\n\n94 C. B\u20acuskens and D. Wassel\n\n\n\nWhile there exist NLP solvers that operate on the reduced Hessian (e.g., SNOPT\n\n[9]), this approach is infeasible for large-scale problems, since it requires a\n\nQR-factorization of the Jacobian. Instead the whole Hessian is updated via\n\nH \u00bc HL \u00fe t\u00f0jsj \u00fe 1\u00deI: (4.5)\n\nThe parameter t 2 [0, 1] is used to damp the Hessian update, and s is the (lower)\nGerschgorin bound on the most negative eigenvalue ofHL \u00bc \u00f0hij\u00deij 2 RN?N, which\nis determined by\n\ns \u00bc min\n1?i?n\n\nn\nhii ?\n\nXn\ni 6\u00bcjjhijj\n\no\n:\n\nThe original idea was suggested by Levenberg [13]. He used the matrix tI as an\napproximation of the Hessian for least-squares problems.\n\nThe choice of t is crucial for the rate of convergence of the overall algorithm.\nThe setting t \u00bc 1 guarantees positive definiteness of the Hessian but impairs\nconvergence, since it may cause a large perturbation of the original Hessian. On\n\nthe other hand, t \u00bc 0 may cause problems in the QP solver, since in this case the\noriginal Hessian without regularization is used. The idea of Betts [1] is to reduce t\nwhen the predicted reduction in the merit function coincides with the actual one,\n\nand increase the parameter otherwise.\n\n4.2.2 WORHP Implementation\n\nWhile WORHP is based on an SQP method, it has a number of design choices that\n\nset it apart from textbook or research-oriented implementations. Some of its\n\narchitectural features are driven by practical considerations and experience, since\n\nWORHP\u2019s design goal is to provide a robust tool for solving demanding optimiza-\n\ntion problems in practical applications.\n\n4.2.2.1 Derivative Approximations\n\nDerivatives play a crucial role for solving NLP problems. As a rule of thumb, NLP\n\nsolvers in general, and WORHP in particular, work most reliably if analytic\nderivatives are supplied to it. Unfortunately, this is challenging or outright impos-\n\nsible for complex optimization models, especially for discretized optimal control\n\nproblems with complex dynamics; some models in (aero)space optimization even\n\ninvolve interpolated tabular data.\n\nFinite Difference: To facilitate practical use of mathematical optimization tools,\n\nWORHP offers finite-difference and BFGS modules: Na??ve finite-difference\n\n4 The ESA NLP Solver WORHP 95\n\n\n\napproaches such as element-wise perturbations with \u201csmall\u201d e > 0 and the i-th unit\nvector ei\n\n@f\n@xi\n\n\u00f0x\u00de \n f\u00f0x\u00fe eei\u00de ? f\u00f0x\u00de\ne\n\n; i \u00bc 1; . . . ; n;\n\nto compute rf are infeasible for large-scale problems, since n is large, and\nevaluations of f are often computationally expensive. If rf is sparse, not all vari-\nables need to be perturbed, so ?F can mostly be approximated quite efficiently, if\nthe sparsity structure is exploited; this is particularly common in discretized optimal\n\ncontrol problems, where F often depends on a single optimization variable only.\nAn equally simple approach is not possible for the constraint Jacobian?G, since\n\nG usually depends on all optimization variables, and in most cases cannot be\nevaluated component wise. To reduce the computational cost, WORHP applies\n\ngraph-coloring-based methods that allow to approximate several partial derivatives\n\nof a vector-valued with a single function evaluation.\n\nExample 1. Let the Jacobian of G have sparsity structure\n\nrG \u00bc\n? ?\n\n? ?\n? ?\n\n0\n@\n\n1\nA \u00bc\n\n? ?\n? ?\n\n? ?\n\n0\n@\n\n1\nA:\n\nEntries ? denote Jacobian entries that are structurally nonzero, although they may\nattain the numeric value 0, depending on x, while missing entries denote structural\nzeros, i.e., entries that are always zero, independent of x. Typical large-scale\nproblems have sparsity, i.e., the ratio between total elements and structural\n\nnonzeros, of < 1%.\nWe can group variables if all rows of ?G depend on at most one variable per\n\ngroup. One possible grouping is denoted by ? and ? in the example above. To\ncalculate a finite-difference approximation of the Jacobian, we can now perform\n\nmultiple perturbations in a single evaluation, and calculate the whole Jacobian\n\napproximation by evaluating\n\nG\n?\nx\u00fe e\u00f0e1 \u00fe e3\u00de\n\n\t? G\u00f0x\u00de\ne\n\nand\nG\n?\nx\u00fe e\u00f0e2 \u00fe e4\u00de\n\n\t? G\u00f0x\u00de\ne\n\n;\n\ni.e., two evaluations of G (omitting the unperturbed one, which can be cached) in\ncontrast to four evaluations for the na??ve approach. ?\n\nBFGS-Type Update Methods: Since most\u2014if not all\u2014large-scale optimization\n\nproblems are highly structured, this grouping approach can drastically reduce the\n\ncomputational cost of finite-difference approximations of the Jacobian of G and\nwith some extensions of the concept also of the Hessian of L. It is not uncommon for\nthe grouping approach to require only a handful of evaluations of G, even if the\n\n96 C. B\u20acuskens and D. Wassel\n\n\n\nproblem has millions of variables and constraints. The grouping approach has the\n\nadditional benefit of discretization-invariance: When solving OCPs using a com-\n\nmon transcription method, the number of groups, and thus the number of function\n\nevaluations, remains constant irrespective of the grid size.\n\nSince finite-difference approximations, especially the second-order ones, may\n\nstill be expensive despite the grouping approach, and are inherently ill-conditioned,\n\nparticularly difficult or large problems are not admissible to second-order derivative\n\napproximations. This is the realm of BFGS-type approximations. As mentioned\n\nearlier, the standard BFGS update causes 100% fill-in2 and is thus inadmissible for\n\nproblems with more than a few thousand variables. Due to the favorable properties\n\nof the BFGS update, it was desirable to find sparse extensions of the standard\n\ntechnique. A first generalization is to perform non-intersecting, intersecting, or\n\neven multiply intersecting block-BFGS updates of the form\n\nThe non-intersecting case is straightforward because the classic BFGS method can\n\nbe applied to the individual blocks, while the intersecting cases need a technique\n\ncalled convexity shifts to maintain the BFGS properties. By choosing appropriate\nblock sizes and overlapping, the structure of Hessian matrices with small\n\nbandwidths can be approximated or reconstructed using BFGS matrices of Bi or\nBmi structure. If, however, the Hessian has (many) far off-diagonal entries, none of\nthese approaches can cover them without sacrificing a substantial degree of sparsity\n\n(which is essential for adequate performance in large-scale optimization). Even\n\nthough the solver is able to cope with missing elements and will even converge if\n\nthe Hessian is replaced by the identity matrix, this adversely affects convergence\n\norder. A worse (lower) convergence order in turn causes the NLP solver to require\n\nmore\u2014possibly many more\u2014iterations to converge to an optimal point. For these\ncases, WORHP introduced the so-called SBFGS method. One central idea behind\n\nthis method is illustrated by Example 2.\n\nExample 2. Consider the sparse matrix\n\nA \u00bc\na11 a12 0 0\na21 a22 a23 a24\n0 a32 a33 0\n0 a42 0 a44\n\n0\nBB@\n\n1\nCCA:\n\n2 Operations on sparse matrices that destroy structural zeros are said to cause fill-in. Since fill-in\nadversely affects the performance of sparse matrix operations, numerical algorithms take (often\n\nextensive) measures to prevent or reduce it.\n\n4 The ESA NLP Solver WORHP 97\n\n\n\nBy selecting and rearranging the elements of A, we can form three dense\nsub-matrices\n\nA1 \u00bc a11 a12a21 a22\n\n? ?\n; A2 \u00bc a22 a23a32 a33\n\n? ?\n; A3 \u00bc a22 a24a42 a44\n\n? ?\n\nand perform the standard BFGS update on them, to obtain ~Ai. An updated form ~A of\nthe original matrix A can then be reassembled from the ~Ai , since all elements are\naccounted for. However, a22 is present in all three sub-matrices Ai, resulting in three\npotentially different elements~a22\u00bdi? after the dense BFGS updates on ~Ai. The updated\nelement ~a22 can be obtained from a convex combination\n\nP\nili~a22\u00bdi? with suitably\n\nchosen li.\nThe SBFGS method uses the above idea to decompose the Hessian into smaller\n\ndense sub-matrices, perform the classic BFGS update on them, and then reassemble\n\nthem appropriately. The mathematical challenge is to preserve certain properties of\n\nthe update to admit a convergence proof and maintain positive definiteness, while\n\nthe technical challenge is to find the minimum number of dense sub-matrices of\n\nmaximum size. Details can be found in [11].\n\n4.2.2.2 Technical Features\n\nWORHP has a number of non-standard technical features that are meant to improve\n\nusability.\n\nReverse Communication: The architecture of WORHP is based on the reverse\ncommunication (RC) paradigm\u2014also dubbed single step design\u2014in contrast to the\ntraditional direct communication, more colorfully described as \u201cFire and Forget.\u201d A\n\nroutine that performs reverse communication requests the caller to perform an\n\naction, instead of doing it itself.\n\nIn the context of WORHP, a reverse communication interface does not evaluate\n\nthe user-defined functions that make up the problem formulation, but instead\n\ninstructs the user to do so. Technically, the solver returns repeatedly to the calling\nprogram, instructing it to update a function or derivative value, print an iteration\n\noutput, or to perform no action at all. The calling program will then flag that it has\n\nperformed all requested actions, and either call the solver again to continue, or\n\nterminate the optimization process. The solver thus \u201coutsources\u201d the major iteration\n\nloop to the caller.\n\nThe two most important benefits of using reverse communication are the facts\n\nthat users are not restricted to provide their functions in a solver-specific way3 and\n\n3In fact, the caller does not even need to provide the problem functions as routines in the technical\n\nsense.\n\n98 C. B\u20acuskens and D. Wassel\n\n\n\nthat the caller can monitor and influence the solver between any two major\n\niterations.4\n\nInteractive Mode: An experimental extension of the RC is the interactive mode.\nThis allows the user to pause the solver and presents a rudimentary terminal which\n\nallows inspection and manipulation of the solver data and parameters. To the best of\n\nthe authors\u2019 knowledge, this makes WORHP the first NLP solver that allows its\n\nusers to interact with it in real-time.\n\nData Management and XML Facilities: In contrast to most NLP solvers, or most\n\nmathematical software in general, WORHP does not keep any internal state, but\n\nmanages its data in rich data structures that are used to communicate with the caller\n\n(through reverse communication, as outlined above). This enables partial or full\n\nserialization of the solver state, which is implemented through XML files. This\n\nsolver-state serialization enables the so-called Hotstart, i.e., a facility to freeze the\ncurrent progress of the solver, save it in an XML file, and either continue later, or\n\neven on another machine. Due to the fact that WORHP has no internal state, this\n\nHotstart behaves as if the solver had not been interrupted, i.e., it aims to achieve bit-\n\nprecise correspondence between uninterrupted and Hotstarted optimization runs.\n\nThis solver feature can be used for logging or check-pointing, which is especially\n\ninteresting for long-running optimization problems. The generated log files can\n\nfurthermore be used for data exchange, export, documentation, or analysis tools,\n\nsince XML is an ubiquitous standard.\n\nWeak-Active Set: Textbook SQP methods use an active set to handle inequality\nconstraints. The active set (AS) method tries to determine the set J of active indices,\nin analogy to Eq. (AS). Problem (NLP) is then replaced by\n\nmin\nx2RN\n\nF\u00f0x\u00de\nsubject to Gi\u00f0x\u00de \u00bc 0; i 2 J \n 1; . . . ;Mf g; \u00f0NLPAS\u00de\n\ni.e., the inactive inequality constraints are identified and dropped from the problem.\n\nThe task of identifying the active set J(x\u00bdk\u00fe1?) is nontrivial, since this set may change\nbetween iterations (although it stabilizes when the SQP method converges to a\n\nsolution), and because the solver essentially has to make a prediction for the active\n\nset at the next iterate x\u00bdk\u00fe1? that is computed using J(x\u00bdk\u00fe1?). Since G is nonlinear, the\nprediction can be inaccurate; thus, an iterative update procedure is needed, with a\n\nworst-case performance of O(2M).\nWhile interior-point methods do not suffer from this complication, introducing\n\nthe slack variables increases the problem size; this effect is strongest if the problem\n\nhas many inequalities, an effect that is very pronounced in discretized optimal\n\ncontrol problems with path constraints. To take advantage of the benefits of both\n\nmethods, the weak-active set method uses a conservative estimate to remove\n\n4WORHP\u2019s concept of splitting major iterations into so-called stages allows still finer resolution.\n\n4 The ESA NLP Solver WORHP 99\n\n\n\ninequality constraints, and thus reduce the size of the quadratic subproblems (QP).\n\nThis method does not share the difficulties of its strict precursor, since the estimate of\n\nthe active set may be fuzzy, and any \u201csuspicious\u201d inequality constraints can be left\n\nuntouched, since there is no need to transform them into equality constraints.\n\n4.2.2.3 Termination Criteria\n\nFor testing an iterate x[k], the first-order necessary optimality conditions (KKT)\nhave to be evaluated. First-order derivatives are required for this test. Using the\n\nnotation from Eqs. (NLP) and (AS), the iterate x[k] is said to be optimal if and only if\nit satisfies\n\nrxF\u00f0x\u00bdk?\u00de \u00fe l\u00bdk?TrxG\u00f0x\u00bdk?\u00de ? eopti; (4.6)\n\n?l\u00bdk?i ? ecomp; i 2 I\u00f0x\u00bdk?\u00de; (4.7)\n\njl\u00bdk?j j ? ecomp; j 62 J\u00f0x\u00bdk?\u00de: (4.8)\n\njGi\u00f0x\u00bdk?\u00dej ? efeas; i \u00bc 1; . . . ;Me;\nGj\u00f0x\u00bdk?\u00de ? efeas; j \u00bc Me \u00fe 1; . . . ;M;\n\n(4.9)\n\nwith user-specified tolerances eopti for optimality, ecomp for complementarity, and\nefeas for feasibility, which are commonly chosen between 10\n\n?6 and 10?8.\nWORHP also supports a scaled version of conditions (4.6)\u2013(4.9). These scaled\n\nconditions are motivated by the idea that the meaning of conditions (4.6) through\n\n(4.8) for the underlying optimization problem is difficult to interpret for users, who\n\nare actually interested in a feasible point that satisfies\n\njF\u00f0x?\u00de ? F\u00f0x\u00bdk?\u00dej ? e:\n\nIn addition to the scaled KKT conditions, special low-pass-filter techniques account\n\nfor numerical inaccuracies, large multipliers, and generally possible bad scaling in\n\nthe optimization model, and terminate the optimization if no more progress is\n\npossible through numerical means.\n\n4.3 Numerical Examples\n\nWe will present two OCPs in this section, with the aim to demonstrate WORHP\u2019s\n\ncapabilities to solve large-scale nonlinear optimization problems. The focus of this\n\nsection is on showcasing the solver performance with respect to problem size, using\n\ntwo uncomplicated models.\n\n100 C. B\u20acuskens and D. Wassel\n\n\n\nThe examples will be OCPs of the form\n\nMinimize F\u00f0y; u\u00de \u00bc \u2019\u00f0y\u00f0t0\u00de; y\u00f0tf \u00de\u00de \u00fe\nZ tf\n\nt0\n\n?f 0\u00f0y\u00f0t\u00de; u\u00f0t\u00de\u00de dt\n\nsubject to _y\u00f0t\u00de \u00bc ?f \u00f0y\u00f0t\u00de; u\u00f0t\u00de\u00de;\ny\u00f0t0\u00de \u00bc y0; C\u00f0y\u00f0tf \u00de\u00de \u00bc 0;\n\nC\u00f0y\u00f0t\u00de; u\u00f0t\u00de\u00de ? 0; t 2 \u00bdt0; tf ?:\n\n(OCP)\n\nThe functions \u2019 :R2n !R, ?f 0 :Rn\u00fem !R, ?f :Rn\u00fem !Rn, C :Rn !Rr; 0? r? n;\nand C :Rn\u00fem !Rk are assumed to be sufficiently smooth on appropriate open sets.\nThe admissible class of control functions is that of piecewise continuous controls.\n\nThe final time tf is either fixed or free.\nOCPs can be understood as infinite-dimensional optimization problems, since\n\nthe states y and the controls u have to be optimal for every point of time t 2 [t0, tf].\nChoose a natural number ?N and let ti 2 [t0, tf], i \u00bc 1; . . . ; ?N , be mesh or grid\n\npoints with\n\nt0 \u00bc t1< . . .< t ?N?1< t ?N \u00bc tf : (4.10)\n\nFor notational simplicity we assume that the discretization in Eq. (4.10) is\n\nequidistant:\n\nh :\u00bc tf ? t0?N ? 1 ; ti \u00bc t0 \u00fe \u00f0i? 1\u00de \t h; i \u00bc 1; . . . ;\n?N : (4.11)\n\nLet the vectors yi 2 Rn and ui 2 Rm , i \u00bc 1; . . . ; ?N ; be the approximations of the\nstate variable y(ti) , resp. control variables u(ti) at the grid points. Then Euler\u2019s\napproximation applied to the differential equation in Eq. (OCP) yields\n\nyi\u00fe1 \u00bc yi \u00fe h \t ?f \u00f0yi; ui\u00de ; i \u00bc 1; . . . ; ?N ? 1 ; (4.12)\n\nor alternatively the trapezoidal method\n\nyi\u00fe1 \u00bc yi \u00fe h\n2\n\t ??f \u00f0yi; ui\u00de \u00fe ?f \u00f0yi\u00fe1; ui\u00fe1\u00de\t ; i \u00bc 1; . . . ; ?N ? 1 : (4.13)\n\nChoosing the optimization variable\n\nx :\u00bc \u00f0y1; . . . ; y ?N; u1; . . . ; u ?N\u00de 2 RN; N :\u00bc \u00f0n\u00fe m\u00de ?N; (4.14)\n\nthe optimal control problem (OCP) is replaced by the following discretized control\nproblem DOC in the form of a nonlinear programming problem with equality and\ninequality constraints:\n\n4 The ESA NLP Solver WORHP 101\n\n\n\nNLP-problem DOC:\n\nMinimize F\u00f0x\u00de \u00bc \u2019\u00f0y1; y ?N\u00de \u00fe h\nX?N?1\ni\u00bc1\n\n?f 0\u00f0yi; ui\u00de (4.15)\n\nsubject to ? yi\u00fe1 \u00fe yi \u00fe h \t ?f \u00f0yi; ui\u00de \u00bc 0; i \u00bc 1; . . . ; ?N ? 1;\ny0 ? y1 \u00bc 0;\nC\u00f0y ?N\u00de \u00bc 0;\n\nC\u00f0yi; ui\u00de ? 0; i \u00bc 1; . . . ; ?N:\n\n(4.16)\n\nA free final time tf can be handled as an additional optimization variable in\nEq. (4.14). When using trapezoidal discretization instead of Euler\u2019s approximation,\n\nEq. (4.13) is used in Eq. (4.16) in place of Eq. (4.12). The nonlinear optimization\n\nproblem DOC has a large number of optimization variables N and constraints\n\nM :\u00bc \u00f0n\u00fe k\u00de ?N \u00fe r . Nevertheless, it can be solved in an efficient way by taking\ninto account the sparse structure in the Jacobian of the constraints and the\n\nHessian of the associated Lagrangian.\n\nLet Me \u00bc n ?N \u00fe r be the number of equality constraints and Mi \u00bc k ?N the number\nof inequality constraints in Eq. (4.16). Furthermore, let G(x) \u00bc (G1(x), . . . , GM(x))\ndenote the collection of functions defining the equality and inequality constraints\n\n(4.16). Then the nonlinear programming problem DOC has the form Eq. (NLP).\n\nCompare B\u20acuskens and Maurer [4] for details on direct methods for solving\nOCPs.\n\nThe numerical examples presented hereinafter were solved on an Intel Q6600\n\nsystem, i.e., a 2.4 GHz quad-core, running Linux.\n\n4.3.1 Low-Thrust Planar MEO\u2013GEO Transfer\n\nThis case describes a simple planar transfer of a satellite with a low-thrust engine\n\nfrom a circular orbit in roughly 7,000 km height to GEO (Figs. 4.1\u20134.3).\n\nThe problem\u2014posed by Kluever [12]\u2014is modeled using the radial position y1\n(in Earth radii, hereinafter referred to as RL), the radial and circumferential\nvelocity y2 and y3 (both in km/s), and the polar angle y4 (in radians). The gravita-\n\ntional parameter for Earth is taken asmr \u00bc GR? \u00bc 62:5. The aim of this task is to find a\nthrust direction control u(t), 0 ? t ? tf that minimizes the final time F(y, u) \u00bc tf,\nwhich can be implemented in Eq. (OCP) by \u2019 \u00bc 0 and ?f 0 ? 1, subject to\n\n102 C. B\u20acuskens and D. Wassel\n\n\n\n_y1 \u00bc y2;\n\n_y2 \u00bc\ny23\ny1\n\n? mr\ny21\n\n\u00fe 0:01 sin\u00f0u\u00de;\n\n_y3 \u00bc ?\ny2y3\ny1\n\n\u00fe 0:01 cos\u00f0u\u00de;\n\n_y4 \u00bc\ny3\ny1\n\n;\n\n0 20 40 60 80 100 120 140 160 180 200 220 240\n\n0.1\n\n0\n\n0.1\n\nTime [d]\n\nC\non\n\ntr\nol\n\n a\nng\n\nle\n [\nra\n\nd]\n\nFig. 4.1 Control angle of the planar MEO\u2013GEO transfer plotted against flight time. The\n\noscillatory behavior can be represented to relatively high precision due to the fine grid\n\n?6 ?4 ?2 0 2 4 6\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\nFig. 4.2 Phase diagram of\n\nthe planar MEO\u2013GEO\n\ntransfer. The Earth radius is\n\nmarked by the dashed unit\ncircle all distances are given\nin Earth radii. The very slow\n\nascent during the initial\n\nrevolutions is numerically\n\ndifficult to handle for our\n\nchosen (simple) transcription\n\nmethod, and it requires higher\n\nprecisions. Using higher-\n\norder integrators and an\n\nadaptive grid, also LEO orbits\n\ncan be considered as initial\n\ncondition for this planar\n\ntransfer\n\n4 The ESA NLP Solver WORHP 103\n\n\n\nwith the initial and terminal conditions\n\ny1\u00f00\u00de \u00bc 2:1; y1\u00f0tf \u00de \u00bc 6:6\ny2\u00f00\u00de \u00bc 0:0; y2\u00f0tf \u00de \u00bc 0:0\n\ny3\u00f00\u00de \u00bc\nffiffiffiffiffiffiffiffiffiffiffi\nmr\n\ny1\u00f00\u00de\nr\n\n; y3\u00f0tf \u00de \u00bc\nffiffiffiffiffiffiffiffiffiffiffi\nmr\n\ny1\u00f0tf \u00de\nr\n\ny4\u00f00\u00de \u00bc 0:0;\n\nwhich can be formulated with c, and control constraints\n\n? p ? u ? p\n\nwhich can be formulated through C in Eq. (4.16).\n\n0 100 200\n\n0 100 200\n\n0 100 200\n\n0 100 200\n\n2\n\n4\n\n6\n\nra\ndi\n\nal\npo\n\nsi\nti\non\n\n [\nR\n\n?]\n\n0\n\n2\n\n4\n\n6\n\n8\n\nra\ndi\n\nal\n v\n\nel\noc\n\nit\ny \n\n[k\nm\n\n/s\n]\n\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\nTime [d]\n\npo\nla\n\nr\nan\n\ngl\ne\n\n/2\n?\n\n3\n\n4\n\n5\n\nTime [d]\n\nci\nrc\n\num\nfe\n\nre\nnt\n\nia\nl \nve\n\nlo\nci\n\nty\n [\nkm\n\n/s\n]\n\n\u00b710?2\n\nFig. 4.3 States of the planar MEO\u2013GEO transfer\n\n104 C. B\u20acuskens and D. Wassel\n\n\n\nThe OCP is of the form Eq. (OCP) and was discretized using the trapezoidal rule\n\n(4.13). AMPL [5] was used to formulate the discretized problem. The problem with\n\nn discretization points in time has N \u00bc 5n? 6 variables and M \u00bc 6n? 4\nconstraints. Using n \u00bc 200,005 discrete points, we arrive at 1,000,019 variables\nand 1,200,026 constraints.\n\nThe problem is hard to solve for NLP solvers if no good initial guess is provided.\n\nOur approach was to \u201cbootstrap\u201d an initial guess: The problem is first solved for a\n\nlow number of discrete points and a higher initial orbit. This solution is then\n\ninterpolated to a finer mesh and a lower initial orbit and used as initial guess to\n\nthe solver. Iterative bootstrapping quickly leads to good initial guesses for large-\n\nscale instances of this problem.\n\nThe final solution takes roughly 230 days and needs 50 revolutions to reach GEO\n\nand was found by WORHP after 127.2 s.\n\n4.3.2 Range-Maximal Flight of a Hypersonic Vehicle\nAfter Engine Failure\n\nThe \u201chypersonic vehicle\u201d in this example is the S\u20acanger reentry vehicle that was\ndeveloped byMBB in the 1980s, but scrapped some years later, because it failed to be\n\nsignificantly cheaper than Ariane 5. The S\u20acanger reentry vehicle is actually the upper\nstage of two-stage space transport vehicle, with a first stage that lifts off horizontally.\n\nThe scenario considered by Mayrhofer and Sachs [15] or B\u20acuskens and Gerdts\n[2, 3] is an engine ignition failure of the upper stage after separation. The vehicle\n\ndoes not have any thrust and is thus limited to using its initial speed and height for\n\nreaching a safe landing site, but is still able to maneuver.\n\nFor the description of the dynamic of the flight system, a mass point model with\n\nsix states and two control functions is used. The Earth is assumed to be perfectly\n\nspherical and rotating. The equations of motion can then be formulated as\n\n_v \u00bc? D\u00f0v; h;CL\u00de 1\nm\n? g\u00f0h\u00de sin g\n\n\u00fe o2 cosL\u00f0sin g cosL? cos g sin w sinL\u00fe cos g cosL\u00de r\u00f0h\u00de\nv\n\n;\n\n_g \u00bc L\u00f0v; h;CL\u00de cos m\nmv\n\n? g\u00f0h\u00de\nv\n\n? v\nr\u00f0h\u00de\n\n? ?\ncos g\u00fe 2o cos w cosL\n\n\u00fe o2 cosL\u00f0sin g sin w sinL\u00fe cos g cosL\u00de r\u00f0h\u00de\nv\n\n;\n\n4 The ESA NLP Solver WORHP 105\n\n\n\n_w \u00bc L\u00f0v; h;CL\u00de sinm\nmv cos g\n\n? cos g cos w tanL v\nr\u00f0h\u00de\n\n\u00fe 2o\u00f0sin w cosL tan g? sinL\u00de ? o2 cosL sinL cos w r\u00f0h\u00de\nv cos g\n\n;\n\n_h \u00bc v sin g;\n_L \u00bc cos g sin w v\n\nr\u00f0h\u00de ;\n\n_Y \u00bc cos g cos w v\nr\u00f0h\u00de cosL :\n\nThe above mentioned functions are defined as\n\nr\u00f0h\u00de \u00bc r0 \u00fe h; g\u00f0h\u00de \u00bc g0\nr0\nr\u00f0h\u00de\n? ?2\n\n;\n\nq\u00f0v; h\u00de \u00bc 1\nc\nr\u00f0h\u00dev2; r\u00f0h\u00de \u00bc r0e?bh;\n\ncD\u00f0CL\u00de \u00bc cD0 \u00fe kC2L;\nL\u00f0v; h;CL\u00de \u00bc q\u00f0v; h\u00deFCL;\nD\u00f0v; h;Cl\u00de \u00bc q\u00f0c; h\u00deFcD\u00f0CL\u00de:\n\nThe constants are chosen as\n\nc \u00bc 2; cD0 \u00bc 0:017; r0 \u00bc 6:371 \t 106\nF \u00bc 305; g0 \u00bc 9:80665; k \u00bc 2;\no \u00bc 7:270 \t 10?5; b \u00bc 1=6900; r0 \u00bc 1:249512:\n\nThe state variable y consists of the velocity v in meters per second, the flight path\nangle g and course angle w in radians, the altitude h in meters, and the longitude L\nand latitude Y in degree. The control function u consists of CL (dimensionless lift\ncoefficient) and m (bank angle in radians) that are restricted by\n\n0 ? CL ? 1; 0 ? m ? 1;\n\nwhich can be formulated through C in Eq. (OCP).\nThe mass is supposed to be constant m \u00bc 115,000 kg. The initial values are\n\nv\u00f00\u00de\ng\u00f00\u00de\nw\u00f00\u00de\nh\u00f00\u00de\nL\u00f00\u00de\nY\u00f00\u00de\n\n0\nBBBBBB@\n\n1\nCCCCCCA\n\n\u00bc\n\n2150:5452900\n0:1520181770\n2:2689279889\n33900:000000\n0:9268828079\n0:1544927057\n\n0\nBBBBBB@\n\n1\nCCCCCCA\n;\n\n106 C. B\u20acuskens and D. Wassel\n\n\n\nwhich correspond to a separation point roughly 34 km over Bremen and an initial\n\nvelocity of roughly 2,150 m/s (almost Mach 7 at this height).\n\nTo maximize the choice of potential landing sites, it is necessary to find a\n\ntrajectory with maximum distance to the starting point (Figs. 4.4 and 4.5):\n\nF\u00f0m;CL; tf \u00de \u00bc L\u00f0tf \u00de ? L\u00f0t0\u00deL\u00f0t0\u00de\n? ?2\n\n\u00fe Y\u00f0tf \u00de ?Y\u00f0t0\u00de\nY\u00f0t0\u00de\n\n? ?2\n:\n\nAs a final constraint a final altitude of 500 m is required:\n\nC\n?\ny\u00f0tf \u00de\n\n\t \u00bc h\u00f0tf \u00de ? 500 \u00bc 0:\n\nThe problem was discretized using a simple Euler discretization, which\n\ngenerates very sparse optimization problems. Besides its property of being more\n\nchallenging and realistic than the MEO\u2013GEO one, this problem can also serve as a\n\nsolver benchmark to ascertain that WORHP essentially scales as O(N + M) for\nlarge-scale sparse problems. To provide good initial guesses, we used the same\n\nbootstrap process as in Sect. 4.3.1, except for the first run with 201 discrete points,\n\nwhich therefore needed more NLP iterations than the successive runs (Table 4.1).\n\nTo empirically verify that WORHP scales linearly with the problem size, the\n\ndimensions were doubled (after a \u201cwarm-up\u201d phase with 2001 discrete points).\n\nSince (usually) over 95% of the computational time is spent solving the QP sub-\n\nproblem, the sum of QP iterations was recorded, and the user time divided by it.\n\nThis provides a simple, yet rather significant measure of time/problem size.\n\nFig. 4.4 3D plot of the trajectory\n\n4 The ESA NLP Solver WORHP 107\n\n\n\n4.4 Summary and Conclusion\n\nIn this chapter, we have outlined the basic mathematical concepts and numerical\n\nmethods required for mathematical optimization of general nonlinear problems:\n\nSQP and IP methods have been introduced as the two fundamental methods for\n\nsolving nonlinear or quadratic problems; constraint relaxation and Hessian regular-\n\nization are added as necessary modifications to ensure solvability of the generated\n\nTable 4.1 Timing and iteration results for different discretization of the thrustless flight problem\n\nn N M NLP QP utime[s] utime/QP\n\n201 1,608 2,012 151 1,652 15.8 0.01\n\n2,001 16,008 20,012 21 136 15.9 0.12\n\n5,001 40,008 50,012 2 36 8.0 0.22\n\n10,001 80,008 100,012 2 22 10.3 0.47\n\n20,001 160,008 200,012 1 12 11.3 0.94\n\n40,001 320,008 400,012 2 20 58.2 2.91\n\n80,001 640,008 800,012 1 11 41.2 3.74\n\n160,001 1,280,008 1,600,012 1 11 90.3 8.21\n\nNote that the first run was a \u201ccold start,\u201d while all other runs were supplied with an interpolated\n\nsolution of the previous one as initial guess to ensure comparability.\n\n0 200 400 600 0 200 400 600\n\n0 200 400 6000 200 400 600\n\n0\n\n2\n\n4\n\nhe\nig\n\nht\n[m\n\n]\n\n0\n\n1,000\n\n2,000\n\nve\nlo\n\nci\nty\n\n[m\n/s\n\n]\n\n0\n\n0.5\n\n1\n\nTime [s]\n\nlif\nt \n\nco\nef\n\nfic\nie\n\nnt\n C\n\nL\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nTime [s]\n\nba\nnk\n\n a\nng\n\nle\n m\n [\n\nra\nd]\n\n\u00b7104\n\nFig. 4.5 Height, velocity, and controls of the S\u20acanger landing after engine failure\n\n108 C. B\u20acuskens and D. Wassel\n\n\n\nsubproblems; merit functions or the filter method are used together with line search\n\nto achieve global convergence and improve the convergence behavior.\n\nWe have further presented some distinctive features of WORHP that set it apart\n\nfrom textbook or research-focused implementations: WORHP offers advanced\n\nmethods for approximation of first and second derivatives, most noticeably the\n\ngroup-theoretical approach for cheap finite-difference computations, and the novel\n\nstructure-preserving sparse BFGS method; technical features like the XMLmodule,\n\nthe reverse communication architecture and the interactive mode are intended to\n\nallow a more flexible use of mathematical optimization in practical applications.\n\nTwo discretized optimal control problems, a MEO\u2013GEO low-thrust transfer and\n\na complex aerodynamic model, both exceeding one million variables and\n\nconstraints, have been used to demonstrate WORHP\u2019s ability to solve relevant\n\nlarge-scale optimization problems, and to ascertain that WORHP\u2019s computational\n\ntime scales linearly with the problem size over the whole observed range\u2014this is a\n\ndrastic improvement over dense methods, which are intrinsically bounded by cubic\n\nscaling of dense linear algebra. Sparse solvers like WORHP therefore do not have\n\nfundamental bounds to the problem dimensions, but are essentially only limited by\n\nthe available hardware and the patience of their users.\n\nAcknowledgments The authors are indebted to Florian Wolff for his support in preparing the\n\nnumerical results and for various suggestions on the manuscript and to Dr. Matthias Knauer for\n\nguiding the numerical evaluation with first TransWORHP results.\n\nDevelopment of WORHP has been supported by BMWi (German Federal Ministry of Economics\n\nand Technology) grants 50RL0722 and 50JR0688, the TEC-EC Control Division of the European\n\nSpace Agency (ESA) in the projects eNLP (GSTP-4 G603-45EC) and eNLPext (GSTP-5 G517-\n\n045EC), and Steinbeis Research Center (SFZ) Optimization and Optimal Control.\n\nReferences\n\n1. Betts, J.T.: Practical Methods for Optimal Control Using Nonlinear Programming. SIAM\n\nPress, Philadelphia, Pennsylvania (2001)\n\n2. B\u20acuskens, C., Gerdts, M.: Numerical solution of optimal control problems with DAE systems of\nhigher index. In: Optimalsteuerungsprobleme in der Luft- und Raumfahrt, Workshop in\n\nGreifswald des Sonderforschungsbereichs 255: Transatmosp\u20acarische Flugsysteme, pp. 27\u201338.\nM\u20acunchen (2000)\n\n3. B\u20acuskens, C., Gerdts, M.: Emergency landing of a hypersonic flight system: A corrector\niteration method for admissible real\u2013time optimal control approximations. In: Optimalsteuer-\n\nungsprobleme in der Luft- und Raumfahrt, Workshop in Greifswald des Sonderforschungs-\n\nbereichs 255: Transatmosp\u20acarische Flugsysteme, pp. 51\u201360. M\u20acunchen (2003)\n4. B\u20acuskens, C., Maurer, H.: SQP-methods for solving optimal control problems with control and\n\nstate constraints: Adjoint variables, sensitivity analysis and real-time control. J. Comput. Appl.\n\nMath. 120(1\u20132), 85\u2013108 (2000)\n\n5. Fourer, R., Gay, D.M., Kernighan, B.W.: AMPL: A Mathematical Programming Language.\n\nBrooks/Cole Publishing Company / Cengage Learning, Florence (2002)\n\n6. Gertz, M., Wright, J.W.: Object-oriented software for quadratic programming. ACM Trans.\n\nMath. Software 29, 796\u2013813 (2003)\n\n7. Gill, P.E., Murray, W., Wright, M.H.: Practical Optimization. Academic, London (1981)\n\n4 The ESA NLP Solver WORHP 109\n\n\n\n8. Gill, P.E., Murray, W., Saunders, M., Wright, M.H.: Model building and practical spects of\n\nnonlinear programming. In: Schittkowski, K. (ed.) Computational Mathematical Program-\n\nming, pp. 209\u201347. Springer, Berlin (1985)\n\n9. Gill, P.E., Murray, W., Saunders, M.A.: SNOPT: An SQP algorithm for large-scale\n\nconstrained optimization. SIAM J. Optim. 12, 979\u20131006 (1997)\n\n10. Han, S.P.: Superlinearly convergent variable metric algorithms for general nonlinear program-\n\nming problems. Math. Program. 11(3), 263\u2013282 (1976/77)\n\n11. Kalmbach, P.: Effiziente Ableitungsbestimmung bei hochdimensionaler nichtlinearer\n\nOptimierung. Ph.D. thesis, Universit\u20acat Bremen (2011)\n12. Kluever, C.A.: Optimal feedback guidance for low-thrust orbit insertion. Optim. Contr. Appl.\n\nMeth. 16, 155\u2013173 (1995)\n\n13. Levenberg, K.: A method for the solution of certain non-linear problems in least-squares.\n\nQ. Appl. Math. 2(2), 164\u2013168 (1944)\n\n14. Mangasarian, O.L., Fromowitz, S.: The Fritz John necessary optimality conditions in the\n\npresence of equality and inequality constraints. J. Math. Anal. Appl. 17, 37\u201347 (1967)\n\n15. Mayrhofer,M., Sachs,G.:Notflugbahnen eines zweistufigenHyperschall-Flugsystems ausgehend\n\nvom Trennman\u20acover. In: Seminar des Sonderforschungsbereichs 255: Transatmosp\u20acarische\nFlugsysteme, pp. 109\u2013118. M\u20acunchen (1996)\n\n16. Schittkowski, K.: On the convergence of a Sequential Quadratic Programming method with an\n\naugmented Lagrangian line search function. Mathematische Operationsforschung und\n\nStatistik, Series Optimization 14, 197\u2013216 (1983)\n\n17. Wilson, R.B.: A Simplicial algorithm for concave programming. Ph.D. thesis, Harvard\n\nUniversity (1963)\n\n110 C. B\u20acuskens and D. Wassel\n\n\n\nChapter 5\n\nGlobal Optimization Approaches\n\nfor Optimal Trajectory Planning\n\nAndrea Cassioli, Dario Izzo, David Di Lorenzo, Marco Locatelli,\n\nand Fabio Schoen\n\nAbstract Optimal trajectory design for interplanetary space missions is an\n\nextremely hard problem, mostly because of the very large number of local\n\nminimizers that real problems present. Despite the challenges of the task, it is\n\npossible, in the preliminary phase, to design low-cost high-energy trajectories with\n\nlittle or no human supervision. In many cases, the discovered paths are as cheap, or\n\neven cheaper, as the ones found by experts through lengthy and difficult processes.\n\nMore interestingly, many of the tricks that experts used to design the trajectories,\n\nlike, e.g., traveling along an orbit in fractional resonance with a given planet,\n\nnaturally emerge from the computed solutions, despite neither the model nor the\n\nsolver have been explicitly designed in order to exploit such knowledge. In this\n\nchapter we will analyze the modelling techniques that computational experiments\n\nhave shown to be most successful, along with some of the algorithms that might be\n\nused to solve such problems.\n\nKeywords Global optimization \u2022 Basin hopping \u2022 Trajectory planning\n\nA. Cassioli \u2022 D.D. Lorenzo \u2022 F. Schoen (*)\nUniversita? di Firenze, Via di S.Marta 3, 50139 Firenze, Italy\n\ne-mail: cassioliandre@gmail.com; dilorenzo@dsi.unifi.it; fabio.schoen@unifi.it\n\nD. Izzo\n\nAdvanced Concepts Team, European Space Agency, Noordwijk, The Netherlands\n\ne-mail: dario.izzo@esa.int\n\nM. Locatelli\n\nUniversita? di Parma, Viale G.P.Usberti 181/A, 43100 Parma, Italy\n\ne-mail: locatelli@ce.unipr.it\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_5,\n# Springer Science+Business Media New York 2013\n\n111\n\nmailto:cassioliandre@gmail.com\nmailto:dilorenzo@dsi.unifi.it\nmailto:fabio.schoen@unifi.it\nmailto:dario.izzo@esa.int\nmailto:locatelli@ce.unipr.it\n\n\n5.1 Introduction\n\nIn this chapter we deal with the application of global optimization techniques to the\n\ndesign of interplanetary trajectories. This subject has received attention in the last\n\nyears as it becomes increasingly evident that such a framework introduces a high\n\nlevel of automation in a process that is otherwise still heavily relying on expert\n\nengineering knowledge. Thanks to initiatives such as the global trajectory optimi-\n\nzation competition (GTOC) [14] and the global trajectory optimization problems\n\ndatabase (GTOP) [17] of the European Space Agency, the attention of communities\n\nnot traditionally linked to aerospace engineering research has increased, bringing a\n\nbeneficial influx of new ideas and solutions, thus advancing the field considerably.\n\nFor chemically propelled spacecrafts the chemical multiple gravity assist (MGA)\n\nand the MGA with one deep space maneuver (MGA-1DSM) models have been\n\nefficiently tackled by global optimization algorithms (see, e.g., [2, 3, 6, 15, 16, 22,\n\n23, 29, 30, 32]). It has been proven that efficient computer algorithms are able to\n\nproduce, for these types of spacecrafts, competitive trajectory designs. Much less\n\nwork has been published on the multiple gravity assist\u2014low-thrust (MGA-LT)\n\nproblems, mainly because they are transcribed as nonlinearly constrained rather\n\nthan box-bounded constrained problems. In this chapter we will present results on\n\nsome instances of the MGA-LT and the MGA-1DSM problems showing how in all\n\ncases it is possible to efficiently explore the solution space. In Sect. 5.2 we derive\n\nthe mathematical model we use for the LT-MGA problem (for the MGA and MGA-\n\n1DSM problems the models used can be found in [15]). The model, inspired by the\n\nwork of Sims [26], is explained here for the optimization practitioners via a series or\n\nprogressively more complex problems. Eventually we will reduce the problem to\n\nmaximizing a simple linear function over a feasible region defined by a set of\n\nnonlinear and nonconvex constraints. Non-convexity, directly linked in this context\n\nto planetary phasing as well as to the orbital mechanics of the spacecraft, implies\n\nthat the problem exhibits many local minimizers, which makes the detection of the\n\nglobal ones more complicated. Indeed, the available local search techniques easily\n\nget trapped into local and not global optima so that the detection of a global\n\nminimizer requires the application of global search techniques. To be more precise,\n\nfor space trajectory problems, it usually makes sense not only to search for the\n\nglobal solution but also for a whole set of good local minimizers, in order to have a\n\nselection of different reasonable options among which the mission designer can\n\nchoose. This, however, does not change our perspective: what we need is still some\n\nglobal search technique leading to good local solutions, since local search\n\ntechniques easily get trapped in bad minimizers. Some recent works about global\n\noptimization approaches for the LT-MGA problem are [31, 36]. In Sect. 5.3 we\n\nshortly describe three different global search techniques applied to this problem:\n\nMultistart, monotonic basin hopping (MBH) and Simulated Annealing with Adap-\n\ntive Neighborhood. These, of course, do not cover all the possible approaches, but\n\nthe computational experiments performed with these three methods already lead\n\nto some interesting indications about the structure of the problem and the strategies\n\nto tackle it. Two case studies of LT-MGA missions are described in Sect. 5.4, for\n\n112 A. Cassioli et al.\n\n\n\nwhich extensive results and analysis are provided. In Sect. 5.5 an extensive series of\n\ntests on instances of the MGA-1DSM problem are presented. Conclusions and\n\ndirections for future research are discussed in Sect. 5.6.\n\n5.2 Building a Mathematical Model for the LT-MGA Problem\n\nIn this section we derive a mathematical model for the LT-MGA problem. We start\n\nto provide a model for a simple version, and then we progressively extend the\n\nmodel. Before deriving any model, we first need to consider the problem of\n\nKeplerian orbital propagation. In other words, we need to compute, given a starting\n\nposition and velocity, the position and velocity of a point mass subject to a central\n\nforce field describing the gravitational attraction to a massive object located in the\n\norigin of the coordinate system. Although the shape of the resulting trajectory is\n\nknown to be a conic, the analytical relation between position, velocity, and time\n\nis more complex and requires the solution of a transcendental equation called the\n\nKepler\u2019s equation. Different methods exist, and a description of those is outside\n\nthe scope of this chapter. Many known algorithms first compute if the orbit is\n\nelliptic or hyperbolic and then execute slightly different instructions to handle the\n\ntwo cases. The parabolic trajectory is usually not handled explicitly and is consid-\n\nered as a degenerate case. However, if the starting conditions are such that the\n\ntrajectory is nearly parabolic, such methods often present numerical difficulties, and\n\nthe loss of accuracy strongly affects the behavior of the solvers. Here we will briefly\n\ndescribe a method, which uses a reformulation of the problem, called the universal\n\nvariable formulation, which allows us to treat in the same way the parabolic,\n\nhyperbolic, and elliptic cases and prevents such numerical problems from arising\n\nin the first place. For more information about the method, we refer to [5]. The\n\nalgorithm is also efficient, but somewhat at the expense of clarity, as many of the\n\nvariables used inside the method do not represent any obvious physical property.\n\nLet r0 ? ? 3 and v0 ? ?3 be the starting position and velocity of the orbiting\nbody. Let m be the gravitational parameter of the central body\n\nm \u00bc GM;\n\nwhere {G}\u00bc 6. 67384(80) 10? 11 m3kg? 1s? 2 is the gravitational constant andM is\nthe mass of such body. Our goal is to compute the position rt ? ?3 and the velocity\nvt ? ?3 of the orbiting body after t units of time. First, we compute a as\n\na \u00bc 2krok ?\nkv0k2\nm\n\n:\n\nThe sign of a gives the shape of the trajectory, which is hyperbolic if a< 0, parabolic\nif a\u00bc 0, and elliptic if a> 0. The parabolic case is a degenerate one; if a 6\u00bc0, a? 1 is\nthe conic semimajor axis, with a negative sign in case of the hyperbolas.\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 113\n\n\n\nThen, we find a value of y such that\n\nr00v0y\n2C\u00f0ay2\u00deffiffiffi\nm\n\np \u00fe 1? akr0k\u00f0 \u00dey3S\u00f0ay2\u00de \u00fe kr0ky \u00bc ffiffiffimp t; (5.1)\n\nwhere S(z) and C(z) are the Stumpff functions defined as\n\nS\u00f0z\u00de \u00bc\n\nffiffi\nz\n\np ? sin\u00f0 ffiffizp \u00de? ?z?32 if z>0\nsinh\u00f0 ffiffiffiffiffiffi?zp \u00de ? ffiffiffiffiffiffi?zp? ?\u00f0?z\u00de?32 if z<0\n1\n\n6\nif z \u00bc 0;\n\n8>>><\n>>>:\n\nC\u00f0z\u00de \u00bc\n\n1? cos\u00f0 ffiffizp \u00de\nz\n\nif z>0\n\ncosh\u00f0 ffiffiffiffiffiffi?zp \u00de ? 1\nz\n\nif z<0\n\n1\n\n2\nif z \u00bc 0:\n\n8>>>>>><\n>>>>>>:\n\nNext, we compute the coefficients F and G (called the Lagrangian coefficients) as\n\nF \u00bc 1? y\n2C\u00f0ay2\u00de\nkr0k G \u00bc t?\n\ny3S\u00f0ay2\u00deffiffiffi\nm\n\np ;\n\nand find rt as\n\nrt \u00bc Fr0 \u00fe Gv0:\n\nSimilarly, we compute the remaining two Lagrangian coefficients Ft and Gt as\n\nFt \u00bc ffiffiffimp y ay\n2S\u00f0ay2\u00de ? 1\nkr0kkrtk Gt \u00bc 1?\n\ny2C\u00f0ay2\u00de\nkrtk\n\nto finally express vt as\n\nvt \u00bc Ftr0 \u00fe Gtv0:\n\nBy using the equations above, since Eq. (5.1) always admits a unique solution,\n\nwe can define the propagation function Propm : ?\n7 ! ?6 that, given the initial\n\nconditions, propagates a body for a given period of time under the influence of a\n\nmass with gravitational parameter m. Then, [rt, vt] \u00bc Propm(r0, v0, t). Such function\ncannot be computed analytically because neither Eq. (5.1) can. However, Eq. (5.1)\n\nis numerically well behaved and can easily be solved to machine precision in a few\n\nsteps of the Newton algorithm. Apart from the degenerate points where r0 \u00bc 0 or\nrt \u00bc 0, the function Propm(r0, v0, t) is smooth. When such degenerate cases occur,\n\n114 A. Cassioli et al.\n\n\n\nthe function is undefined. However, this function will be used to propagate a vehicle\n\nin the solar system, and if either r0 \u00bc 0 or rt \u00bc 0, the spacecraft must be located at\nthe center of the Sun, so we will treat those cases with generous disregard. Finally,\n\nwe note that this function can be used to propagate any body in the solar system, be\n\nit a spacecraft or a planet. We are now ready to introduce the first simple model.\n\n5.2.1 A Single Ballistic Leg\n\nTo show a simple usage of the Propm function, we can write a very simple model, in\n\nwhich a spacecraft travels from the Earth to Mars and is allowed to thrust the\n\nengines at departure and at arrival. We model the engine thrust as an impulsive\n\nvelocity change. A typical objective function we wish to minimize is the total fuel\n\nusage or some function which is correlated with fuel consumption. Let r0\nE, v0\n\nE, r0\nM,\n\nand v0\nM be the Earth and Mars position and velocities at a given epoch t0. We\n\nintroduce the variables\n\n\u2022 t1 ? ?, the time of departure as the number of units of time from t0\n\u2022 r1\n\nE, v1\nE, r1\n\nS, and v1\nS, all belonging to?3, the positions and velocities of the Earth\n\nand the spacecraft at time t1\n\u2022 t2 ? ?, the time of arrival as the number of units of time from t0\n\u2022 r2\n\nM, v2\nM, r2\n\nS, and v2\nS, all belonging to ?3, the positions and velocities of Mars\n\nand the spacecraft at time t2\n\nThe model can be written as\n\nmin kvS1 ? vE1k \u00fe kvS2 ? vM2 k\n\u00bdrE1 ; vE1 ? \u00bc Propm\u00f0rE0 ; vE0 ; t1\u00de\n\u00bdrM2 ; vM2 ? \u00bc Propm\u00f0rM0 ; vM0 ; t2\u00de\n\u00bdrS2 ; vS2 ? \u00bc Propm\u00f0rS1 ; vS1 ; t2 ? t1\u00de\nrS1 \u00bc rE1\nrS2 \u00bc rM2\nt2 ? t1:\n\n(5.2)\n\nThe first three equations enforce the gravitational laws on the Earth,Mars, and on the\n\nspacecraft. The other two equalities constrain the spacecraft to start at the Earth and\n\nend onMars, while the last one prevents from doing the trip backward, fromMars to\n\nthe Earth. The effect of the gravitational fields of the planets on the spacecraft is\n\nneglected. We minimize the sum of all velocity changes because, through the well-\n\nknown rocket equation [Tsiolkovsky formula, see Eq. (5.8)], this can be directly\n\nrelated to the net mass loss. We note that for a working implementation, many\n\nvariables might be eliminated by substitution to reduce the problem size, in\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 115\n\n\n\nparticular the position and velocity of the planets could be computed and substituted\n\nby the first two constraints. Model (5.2) can be easily extended. It is trivial to enforce\n\nsimple constraints like bounds on the departure or arrival times. Additional\n\nconstraints on the departure can be easily imposed. For example, the angle between\n\nv1\nS and the Earth rotation plane could be required to be small, as the launch systems\n\nalways exploit the increased initial speed given for free by the Earth\u2019s rotation. More\n\ncomplex extensions are discussed in what follows.\n\n5.2.2 Adding Deep Space Maneuvers\n\nThe main limitation of model (5.2) is that it forbids the engine from thrusting during\n\nthe flight. To allow deep space maneuvers (modeled here as instantaneous velocity\n\nchanges), additional variables must be introduced regarding the position and\n\nvelocities of the spacecraft at the maneuver epoch. We will call a leg the fraction\n\nof the trajectory between two planets, and a segment a fraction of the leg, during\n\nwhich the spacecraft can perform a space maneuver. A leg can be composed of\n\nmore than one segment. Inside a leg, between two deep space maneuvers, no force,\n\napart from the gravitational pull of the Sun, affects the spacecraft. Rewriting the\n\nprevious model to account for this case, we obtain\n\nmin kvS1 ? vE1\u00fek \u00fe\nXn\n\ni\u00bc1kv\nS\ni\u00fe ? vSi?k \u00fe kvS\u00f0n\u00fe1\u00de? ? vMn\u00fe1k\n\n\u00bdrE1 ; vE1 ? \u00bc Propm\u00f0rE0 ; vE0 ; t1\u00de\n\u00bdrMn\u00fe1; vMn\u00fe1? \u00bc Propm\u00f0rM0 ; vM0 ; tn\u00fe1\u00de\n\u00bdrSi\u00fe1; vS\u00f0i\u00fe1\u00de? ? \u00bc Propm\u00f0rSi ; vSi\u00fe ; ti\u00fe1 ? ti\u00de 8i 2 f1; . . . ; ng\nrS1 \u00bc rE1\nrSn\u00fe1 \u00bc rMn\u00fe1\nti\u00fe1 ? ti 8i 2 f1; . . . ; ng:\n\n(5.3)\n\nFor the i-th deep space maneuver, we introduce the following variables:\n\n\u2022 ti ? ? is the time at which the deep space maneuver is performed.\n\u2022 ri ? ?3 is the position of the spacecraft at the time the deep space maneuver is\n\nperformed.\n\n\u2022 vi- ? ? is the velocity of the spacecraft just before the deep space maneuver is\nperformed.\n\n\u2022 vi\n\u00fe ? ?3 is the velocity of the spacecraft immediately after the deep space\n\nmaneuver is performed.\n\n116 A. Cassioli et al.\n\n\n\n5.2.3 Planetary Swingby\n\nA further refinement of the model can be obtained by taking into account planetary\n\nswingbys, also called flybys. A planetary swingby happens when the spacecraft gets\n\nso close to a planet that the planet\u2019s gravitational pull becomes much stronger than\n\nthe Sun\u2019s, and such force can be used to alter the speed direction. Since the amount\n\nof time spent in the neighborhood of a planet is so small with respect to the total\n\ntime of a mission, we can assume in our model that swingbys happen instantly. At a\n\ngiven time t, let rP and vP be the planet position and velocity, rS be the spacecraft\nposition, vS? be the spacecraft velocity just before the swingby, and v+\n\nS be the\n\nspacecraft velocity just after the swingby. The following constraints must be\n\nimposed:\n\nrP \u00bc rS; (5.4)\n\nkvP ? vS?k \u00bc kvP ? vS\u00fek: (5.5)\n\nEquation (5.4) is obvious and forces the spacecraft and planet positions to coincide\n\nat the moment of the swingby. Equation (5.5) derives from the fact that gravity is a\n\nconservation law, and it cannot be used to gain energy with respect to the attractor\n\nbody. The only reason why planets can actually be used to change the velocity of\n\nthe spacecraft with respect to the Sun is that planets are not stationary. Under the\n\nassumption that planets are point mass objects, such equations describe all the\n\npossible swingbys that can happen. In practice, however, many of such orbits must\n\npass so close to the center of the planet that the spacecraft trajectory would intersect\n\nthe planet sphere. Assuming that Eq. (5.5) holds, the angle y between v?\nS and v+\n\nS and\n\nthe minimum distance from the center of the planet rmin are related by the following\nequation [5]:\n\ny \u00bc 2 arcsin 1\n1\u00fe rminkvP ? vSk? 2=mP\n? ?\n\n; (5.6)\n\nwhere mP is the gravitational constant of the planet. rmin must obviously be greater\nthan the radius of the planet, plus a safety margin.\n\n5.2.4 Low-Thrust Engine\n\nThe trajectory model that is to be used to transcribe an LT-MGA trajectory\n\noptimization into a nonlinear programming problem (to be solved by global opti-\n\nmization methods) is crucial to the success of the overall algorithm one wants to\n\ndefine and apply. Criteria to be accounted for include accuracy in the description of\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 117\n\n\n\nthe spacecraft dynamics, computational efficiency in the objective function and\n\nconstraint evaluation, problem dimension, and number of nonlinear constraints\n\nproduced. Bearing these issues in mind, we complete the models presented above\n\nby introducing one more constraint per segment, reaching a model similar to that\n\nproposed by Sims and Flanagan [26] and that, as will be shown later, allows for an\n\nefficient global search.\n\nFigure 5.1 illustrates the trajectory model. Low-thrust arcs on each leg are\n\nmodeled as sequences of impulsive maneuvers which provide a change of velocity\n\nthat we will call DV i. Such arcs are connected, using the Propm function, by a conic\ncurve. We denote the number of impulses for a given arc (which is the same as the\n\nnumber of segments) with N. The DVi at each segment equal to kvSi? ? vSi\u00fek should\nnot exceed a maximum magnitude, DV max, where DV max is the velocity change\naccumulated by the spacecraft when it is operated at full thrust during that segment\n\nDVmax \u00bc \u00f0Tmax=m\u00de\u00f0tf ? t0\u00de=N; (5.7)\n\nwhere Tmax is the maximum force that the low-thrust engine can apply, m is the\nmass of the spacecraft, t0 and tf is the initial and final time of a leg.\n\nThe spacecraft mass is propagated using the Tsiolkovsky rocket equation [28]\n\nmi\u00fe1 \u00bc mie ?DVi=\u00f0g0Isp\u00de\u00f0 \u00de; (5.8)\n\nSmb\n\nSmf\n\nMatchpoint \n\nPlanet \n\nSegment midpoint\n\nImpulsive ?V\nSegment boundary\n\n?VN\n\n?V3\n\n?V2\n\n?V1\n\nFig. 5.1 Impulsive DV transcription of a low-thrust trajectory, after Sims and Flanagan [26]\n\n118 A. Cassioli et al.\n\n\n\nwhere the subscript i refers to the i-th segment, g0 is the standard gravity (9.80665\nm/s2), and Isp is the specific impulse of the low-thrust engine.\n\nAt each leg, the trajectory is propagated using the Propm equation as seen in Sect.\n\n5.2.2. Swingby maneuvers are modeled using the equations in Sect. 5.2.3.\n\nUsing all the elements previously introduced, we can finally write an optimiza-\n\ntion model for a low-thrust trajectory with multiple swingbys. Let L be the number\nof legs, and let Sl be the number of segments of the l-th leg. For every leg, the\nfollowing variables are used:\n\n\u2022 rl\ni ? ?3, rlf ? ?3 are the Cartesian positions of the spacecraft at the beginning\n\nand at the end of the leg.\n\n\u2022 vl\ni ? ?3, vlf ? ?3 are the spacecraft velocities at the beginning and at the end of\n\nthe leg.\n\n\u2022 ml\ni??,mlf?? are the spacecraftmasses at the beginning and at the end of the leg.\n\n\u2022 tl is the time spent in leg l.\n\u2022 Dvl, s ? ?3, for every segment s in the leg, is the change in velocity provided by\n\nthe spacecraft engine.\n\n\u2022 Except for the last leg, where no swingby is executed, rl\nswingby is the minimum\n\ndistance from the spacecraft to the center of the planet during the maneuver.\n\nFor the sake of convenience, in the model we define a function Proplegm that\n\napplies, in sequence, a propagation to a whole leg for all of its segments. Proplegm\ntakes as arguments the starting position, velocity, and mass, the total time t of the\nleg, one Dv??3 vector for each segment, and computes the final position, velocity,\nand mass of the spacecraft after the leg. Starting from the initial position, for every\n\nsegment we must propagate the body up to the middle, then apply a DSM and\n\npropagate for the remaining time. Let r, v, m denote the current position, velocity,\nand mass. Those variables are initially set to the starting values. For every segment,\n\nwhose duration is assumed to be constant and equal to t/Sl, we do the following:\n\n1. We propagate the spacecraft up to half the segment time using [r, v]\u00bc Propm(r, v,\nt/(2Sl)). The mass m is kept constant.\n\n2. We instantaneously apply the DSM. This does not change the spacecraft position\n\nr. The velocity is modified by v\u00bc v + Dvi, where Dvi is the change in velocity for\nsegment i. The mass is updated using Eq. (5.8) to account for the spent fuel.\n\n3. We propagate the spacecraft to the end of the segment, using again equation\n\n[r, v] \u00bc Propm(r, v, t/(2Sl)).\nFinally, the updated values of r, v, m are returned. As an implementation related\n\nnote, the Propm function satisfies the following property:\n\nProperty 1. Let each of r1, r2, r3, v1, v2, v3 belong to?\n3, and let t1, t2??+. Then, if\n\n\u00bdr2; v2? \u00bc Propm\u00f0r1; v1; t1\u00de\n\u00bdr3; v3? \u00bc Propm\u00f0r2; v2; t2\u00de;\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 119\n\n\n\nit holds that\n\n\u00bdr3; v3? \u00bc Propm\u00f0r1; v1; t1 \u00fe t2\u00de;\n\nwhich obviously states that propagating a body for a time equal to t1 + t2 is\nequivalent to propagating the same body twice, first for t1 and then for t2 units of\ntime. Such property can be used to reduce the number of times the Propm function is\n\ncomputed from 2Sl to Sl + 1 times, by computing simultaneously the last half of\nevery segment with the first half of the following one.\n\nNote that the Propleg function does not limit the thrust of the spacecraft. For\n\nlow-thrust engines this is a very unrealistic assumption, so the following additional\n\nconstraint must be imposed for every segment:\n\nkDvik ? Tmaxt\nmiN\n\n; (5.9)\n\nwhere Tmax is the maximum power of the engine, t is the total time of the leg, mi is\nthe current mass of the spacecraft during the i-th segment, and N is the number of\nsegments for the leg. Such constraints are cheaper to compute while executing the\n\nPropleg function, as this avoids to evaluate twice the values of mi.\nOur objective is to minimize the total fuel consumption or, equivalently, to\n\nmaximize the final mass of the spacecraft:\n\nmax mf (5.10)\n\nsubject to, for every leg l\n\n\u00bdrfl ; vfl ;mfl ? \u00bc Proplegm\u00f0ril; vil;mil; tl;Dvl;1; . . . ;Dvl;Sl\u00de\n(5.11)\n\nkDvl;sk ? Tmaxtl\nml;sN\n\n8s 2 f1; . . . Slg (5.12)\n\nril\u00fe1 \u00bc rfl \u00bc rPl (5.13)\n\nmil\u00fe1 \u00bc mfl (5.14)\n\nkvfl ? vPl k \u00bc kvil\u00fe1 ? vPl k (5.15)\n\narccos\n\u00f0vfl ? vPl \u00de0\u00f0vil\u00fe1 ? vPl \u00de\nkvfl ? vPl kkvil\u00fe1 ? vPl k\n\n !\n\u00bc 2 arcsin 1\n\n1\u00fe rswingbyl kvPl ? v fl k2=mPl\n\n !\n(5.16)\n\nrswingbyl ? rminl : (5.17)\n\nEquation (5.11) imposes the trajectory constraints from the beginning to the end\n\nof every leg, Eq. (5.12) forbids the engine to thrust more than what its thrust\n\n120 A. Cassioli et al.\n\n\n\ncapacity allows. Equations (5.13) and (5.14) simply state that at every swingby the\n\nposition of the spacecraft must coincide with the one of the planet and that the\n\nspacecraft mass is not affected by the maneuver. Equations (5.15)\u2013(5.17) put some\n\nconstraints on the swingby, and can be disregarded for the last leg, if no swingby is\n\nperformed. The model is usually extended including specific constraints like, for\n\nexample, bounds on the time of flight or bounds on the spacecraft starting velocity\n\nrelative to the Earth\u2019s velocity.\n\n5.3 Some Global Optimization Algorithms\n\nThe proposed transcription of the LT-MGA problem is a continuous, constrained,\n\nnonlinear optimization problem. Since such class of problems usually present local\n\nminimizers that are not global, they are often unsolvable using only local optimiza-\n\ntion algorithms. Practical experience shows that this is usually the case with\n\ntrajectory optimization problems, regardless of the propulsion type. Thus, local\n\nsolvers must be used inside a global optimization strategy in order to achieve\n\nsolutions which are as close as possible to the optimal ones. Here we describe\n\nthree different approaches that have been tried on such problem. Of course, these\n\nare preliminary experiments, and more approaches could and should be tested.\n\nHowever, such preliminary results already allow to draw some interesting\n\nconclusions about the problem and good strategies to tackle it. Before detailing\n\neach approach, we first define some procedures that the algorithms will use:\n\n\u2022 G\u00f0\u00de is a procedure that randomly generates a starting point. Ideally, we would\nlike the point to be uniformly distributed over the feasible region, but since our\n\nproblem\u2019s feasible set is of a very small size, and generating a point inside such\n\nregion is a hard problem by itself, we used a procedure that uniformly generates\n\npoints in a box containing the feasible region.\n\n\u2022 S\u00f0x\u00de is a procedure that, given a point x, computes a local minimizer of the\nobjective function, taking x as an initial guess. For our tests we will use SNOPT\n[10, 9], which is based on sequential quadratic programming (SQP) [24].\n\n\u2022 Best(x, y) is a procedure that, given two solutions x and y, returns the best one\naccording to a fixed rule. Since we are dealing with a constrained optimization\n\nproblem, Best(x, y) chooses the point with the lower constraint violation norm\nvalue. When both points are feasible, then the point with the lower objective\n\nfunction value is chosen instead.\n\n5.3.1 Multistart\n\nThe first and simplest algorithm is called Multistart (MS), which directly optimizes\n\nthe points obtained by a generator. Multistart can be described by the following\n\npseudo code.\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 121\n\n\n\nAlthough for N big enough Multistart will eventually converge to the global\nsolution, the convergence rate might be extremely slow, in particular if the\n\nnumber of local (and not global) minimizers is very high. However, because of\n\nits simplicity, this algorithm can be effectively used as a baseline to compare\n\nother solvers to.\n\n5.3.2 Monotonic Basin Hopping\n\nThe second algorithm is MBH (see, e.g., [33]). In addition to the procedures\n\npreviously used by Multistart, MBH needs a procedure P\u00f0x\u00de that, given a point x,\nreturns another point randomly generated in a conveniently defined neighborhood\n\nof x. Such algorithm can then be described as in Algorithm 2.\n\nIn practice, after a local optimization, instead of generating a new point inside\n\nthe whole feasible region like in Multistart, we restrict the generation inside a small\n\nregion centered on the current best point. The procedure P is called a perturbation\nprocedure and should generate points in a small neighborhood of the current point.\n\nIt usually includes some random component, so that its output is a random point\n\n\u201cclose\u201d to the current one. This might appear as a small and not particularly relevant\n\n122 A. Cassioli et al.\n\n\n\nmodification with respect to Multistart, but, if P is properly chosen, it can really\nenhance the performance of Multistart even by order of magnitudes. This has been\n\nobserved in different fields such as molecular conformation problems (see, e.g.,\n\n[20, 33]) and packing problems (see, e.g., [1, 12]). The reason of these impressive\n\nimprovements is briefly exposed here, while we refer, e.g., to [21] for a more\n\ndetailed explanation. The procedure P, together with the local search S, allows to\nimpose a graph structure over the set of local minimizers. Indeed, we are able\n\nto define a graph G whose node set is the set X? of local minimizers, and such that\nfor each xi, xj ? X?, a directed arc (xi, xj) exists if xj \u00bc S\u00f0P\u00f0xi\u00de\u00de with a strictly\npositive probability and xj \u00bc Best(xi, xj). In other words, a directed arc exists if we\nare able to move from xi to xj in a single step with a strictly positive probability. We\ncan now reformulate the global optimization problem as a combinatorial optimiza-\n\ntion problem over the graph G. We denote by X?? the set of the local minimizers\nover the graph G (basically, all local minimizers with no outgoing arc). For\nreasonable choices of Best, such set certainly includes the global minimizer of the\nproblem. It obviously holds that X?? ? X?.\n\nSince the While loop of the algorithm is nothing but a descending local search\n\nover the graph G starting from some randomly generated initial local minimizer and\nstopped as soon as no improvement has been made for a number of times equal to a\n\nfixed parameter called max no improve (MNI, set equal to 500 during our\nexperiments), we can reasonably believe that the outcome x? of this loop is a\nmember of X??. If the cardinality of X?? is small, then we might hope that a few\nrepetitions of the While loop will finally allow to detect the member of X??\n\ncoinciding with the global minimizer. For this reason, the While loop is repeated\n\ndifferent times, each time starting from a new local minimizer randomly generated\n\nover the whole feasible set. In conclusion, if the structure of our problem is\n\nsuch that:\n\n\u2022 We are able to define a perturbation procedure P which generates points in a\nsmall neighborhood of the current point and, in particular, the number of local\n\nminimizers which can be generated with strictly positive probability by apply-\n\ningP followed by S to the current point, is small with respect to the cardinality\nof X?.\n\n\u2022 The cardinality of X?? is also small with respect to the cardinality of X?.\n\nthen MBH turns out to be a quite efficient method for the solution of such\n\nproblem. As already previously remarked this turns out to be the case for\n\ndifferent kinds of problems like the molecular conformation and packing ones.\n\nIn the field of space trajectory planning, the MGA and MGA-DSM problems\n\nappear to display such structure and have been efficiently tackled by MBH or by\n\nother methods inspired by MBH [2, 30]. The computational experiments in Sect.\n\n5.4 will reveal that MBH performs quite well also when applied to the LT-MGA\n\nproblem. The discussion above clarifies that the choice of the procedure P is of\nprimary importance. A typical perturbation rule, rather simple and quite general,\n\nis to choose a new point inside a small box or sphere centered on the current\n\npoint. Problem knowledge, if available, can be used to better tune the perturba-\n\ntion. As an example, the synodic period between two planets is the minimum\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 123\n\n\n\ninterval of time that it takes for such two bodies to appear twice in the same\n\nposition relative to each other. Then, when only two different planets are\n\nconsidered, we can expect that by shifting a solution in time by a period equal\n\nto the synodic period of such two planets, solutions that are similar (and maybe\n\nbetter) than the current one could be found. So the perturbation rule we used is\n\ncomposed by the following two steps:\n\n1. For each variable xi and its lower and upper bounds li and ui, add to xi a value\nuniformly chosen in the interval [ ? r(ui ? li), r(ui ? li)] with a small given\nvalue of r.\n\n2. With a low probability p, shift the solution in time, either forward or backward\nwith equal probability, by a time length equal to the synodic period.\n\nIn our experiments, we used r \u00bc 0. 05 and p \u00bc 0. 1.\n\n5.3.3 Simulated Annealing with Adaptive Neighborhood\n\nFinally, simulated annealing with adaptive neighborhood (SA-AN) has been\n\nconsidered. The algorithm structure is similar to MBH, with some important\n\ndifferences in key parts of the algorithm, which are quickly described here. For a\n\nmore complete description we refer, e.g., to [4, 19].\n\nFirst of all, the comparison in line 8 is modified to allow for non-monotonicity.\n\nThe problem is transformed to an unconstrained optimization problem by using a\n\npenalty function f to account for constraint violations. Then, Best(x, y) returns x\nwith probability 1 if f(x)? f(y) or with probability e(f(y) ? f(x))/T if f(x)> f(y). T is the\ntemperature parameter, which is exponentially decreased every fixed number of\n\niterations.\n\nFurthermore, the perturbation procedureP is adaptive, meaning that the radius r\nof the perturbation is adjusted at every iteration. Such r value is increased each time\nthe generated point is accepted and decreased each time the point is refused.\n\nFinally, the local optimizationS is not executed at each step of the algorithm, but\njust once at the end, starting from the point returned by SA-AN.\n\nIn our tests, the temperature parameter T starts at 10 and is multiplied by 0.8\nevery 100 iterations. The starting perturbation radius r0 is equal for each variable to\n0.05 times the width of the box, and every K iterations a new value rk + 1 is obtained\nfrom rk using the following rule. Let r be the number of accepted steps in the last K\niterations divided by K. Then,\n\nrk\u00fe1 \u00bc\nrk 1\u00fe r? 0:62\u00f0 \u00de if r> 0:6\nrk1\u00fe 0:4? r\n\n2\nif r< 0:4\n\nrk otherwise.\n\n8>>><\n>>>:\n\nWe used K \u00bc 10, and the maximum number of iterations was set equal to 2,000.\n\n124 A. Cassioli et al.\n\n\n\n5.3.4 On the Results Representation\n\nThe huge amount of tests performed required the use of a compact representation in\n\norder to visualize and compare at glance the algorithms\u2019 behavior.\n\nFor each algorithm we plot a function f(t), t> 0 that represents the percentage of\ntimes in which the final value reported by the algorithm was within t% of the\ncurrently known putative optimum. In other words, let f1, f2, . . ., fNRuns the outcome\nof each algorithm execution and f? an estimation of the global minimum1. Then,\n\nf \u00f0t\u00de \u00bc jfi 2 1::NRuns : f i ? f\n? ? \u00f01\u00fe t=100\u00degj\n\nNRuns\n:\n\nFor instance, f(0) indicates the percentage of times (if any) the method obtained\nthe (putative) global optimal value f?, while f(100) the fraction of runs giving a\nvalue which is at most twice the optimum, i.e., no more than 100% worse and so on.\n\nThis way, it is quite easy to read from the figure which algorithm gave the best\n\napproximation to the optimum and which was capable of producing a larger\n\nquantity of good results. These graphical representations are closely related to\n\nperformance profiles (see [7] for details), from which they differ only by the fact\n\nthat here we compare different independent runs of some algorithms on a single\n\nproblem, while performance profiles are usually employed to show the behavior of\n\nsingle runs of different methods on different test problems.\n\n5.4 Experiments on LT-MGA Problem Instances\n\nIn this section we consider two case studies of LT-MGA problems, a mission to\n\nJupiter and a mission to Mercury, and perform some experiments with the three\n\nalgorithms previously introduced. The relative merits of the algorithms are\n\ndiscussed, and the solutions found are briefly discussed.\n\n5.4.1 Nuclear-Electric Propulsion Mission to Jupiter\n\nWe demonstrate the application of our global optimization framework to perform\n\npreliminary design of trajectories for a mission that employs nuclear-electric\n\npropulsion (see Table 5.1). The spacecraft is assumed to have a thruster with a\n\nconstant maximum thrust and a constant specific impulse, with similar hardware\n\nparameters to the Jupiter Icy Moons Orbiter [11, 25, 34, 35, 37] (a canceled mission\n\n1In fact, we use the putative global minimum in order to define f?.\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 125\n\n\n\noriginally proposed by NASA in 2003). In our example scenario, we consider a\n\nplanetary encounter sequences of Earth\u2013Earth\u2013Jupiter (i.e., one Earth flyby) which\n\nrendezvous at Jupiter. We use ten segments (N\u00bc 10) for each leg, and the dimension\nof this problem (i.e., the number of optimization variables) is 75 with 35 nonlinear\n\nconstraints. We first let the global optimizers run for a fixed time (?5 h for each\nalgorithm) on a PC (AMD Turion@2.1 GHz with 3 GB of RAM) which produced\n\nhundreds of trajectories. Then, we selected solutions for which the norm of the\n\nconstraint violation vector was less than 10? 6. Table 5.2 summarizes the results\nfound by the three global optimizers. We notice that many solutions found by SA-\n\nAN andMultistart fail to converge, and therefore the number of solutions is less than\n\nMBH. Figure 5.2 plots the comparison of the three algorithms. The results show that\n\nlocal searches started from randomly generated points, as in Multistart, or from the\n\nfinal points returned by an execution of SA-AN, often fail to reach the feasible\n\nregion. This means that the nonlinear constraints defining the feasible region are\n\nrather complicated, and even the detection of feasible solutions is a hard task.\n\nAccording to the experiments, MBH is not only able to provide good local\n\nminimizers but has a considerably better capability of generating feasible solutions.\n\nFigure 5.3 plots the x-y projection of a trajectory found by MBH with the highest\nfinal mass. On the plot, the solid and dash curves represent thrusting and coasting\n\nsegments, respectively, while a DV is shown as an arrow in the midpoint of a\nsegment. We will call by V 1 the speed that the spacecraft has with respect to a\n\nTable 5.1 Parameters for a nuclear-electric propulsion mission\n\nParameters Values\n\nInitial mass of the spacecraft 20, 000 kg\n\nMaximum thrust 2.26 N\n\nSpecific impulse 6, 000 s\n\nLaunch date Jan. 1, 2020\u2013Jan. 1, 2030\n\nLaunch V1 ? 2.0 km/s\nMaximum time of flight 10 years\n\nMinimum flyby radius 7, 000 km\n\nTable 5.2 Algorithm statistics for the E\u2013E\u2013J (Earth\u2013Earth\u2013Jupiter) mission\n\nAlgorithm Basin hopping Simulated annealing Multistart\n\nBest (kg) 17, 102 17, 019 16, 961\n\nWorst (kg) 10, 913 11, 924 11, 900\n\nMean (kg) 16, 235 16, 302 15, 930\n\nMean best 10 (kg) 17, 039 16, 912 16, 715\n\nStd (kg) 1, 345 1, 160 1, 320\n\nNo. of sol. above 137 19 11\n\n95% best (16, 246 kg)\n\nNo. of sol. above 155 22 14\n\n90% best (15, 391 kg)\n\nTotal no. of solutions 183 24 18\n\n126 A. Cassioli et al.\n\n\n\n 0\n\n 20\n\n 40\n\n 60\n\n 80\n\n 100\n\n 120\n\n 140\n\n 160\n\n 180\n\n 200\n\n100001100012000130001400015000160001700018000\n\nN\num\n\nbe\nr \n\nof\n fe\n\nas\nib\n\nle\n s\n\nol\nut\n\nio\nns\n\nFinal mass (kg)\n\nBasin Hopping\nMultistart\n\nSimulated Annealing\n\nFig. 5.2 Cumulative number of solutions for the E\u2013E\u2013J mission\n\n?6 ?5 ?4 ?3 ?2 ?1 0 1\n\n?3\n\n?2\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\nx (AU)\n\nEarth flyby\n\nJupiter rendezvous\n\nEarth launch\n\ny \n(A\n\nU\n)\n\nFig. 5.3 Trajectory plot of an E\u2013E\u2013J rendezvous mission. AU: Astronomical Units\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 127\n\n\n\ngiven planet, ideally measured when the body is so far away that the planet itself\n\ncan no longer affect the speed of the body. In this example, the spacecraft leaves the\n\nEarth on November 12, 2021 with a V1 of 2 km/s. It enters a 4:3 resonance orbit\nwith a period of ? 1.3 years and goes around the Sun for 3 revs, before it flybys the\nEarth after 3.8 years with an increased V1 of 8.5 km/s. After the gravity assist at the\nEarth, its aphelion increases for the transfer to Jupiter. After 7.4 years of interplan-\n\netary flight, the spacecraft rendezvous at Jupiter on March 24, 2029 with a final\n\nmass of 17,102 kg.\n\nBesides the value of the objective function (final mass), it is also interesting from\n\na mission design point of view that the optimization process is able to find\n\ntrajectories that launch on different dates. In our example in Fig. 5.4, the difference\n\nin the final mass is less than 200 kg (or 1% of the initial mass) for most launch\n\nperiods. The 1% penalty of the final mass gives flexibility to the mission designer to\n\nchoose a different date in case there is a change in the mission. The process is also\n\nable to locate various locally optimal trajectory families, which is interesting from\n\nan astrodynamics point of view. From Fig. 5.5, we note that the \u201cclusters\u201d of\n\nsolutions belong to different Earth\u2013Earth resonance transfer orbit. For example,\n\n1:1 resonance with flight time? 400 days, 2:3 resonance with flight time? 800 days,\nand 3:2 resonance with flight time ? 1,100 days. Unlike the case in the ballistic\ntransfer, in the low-thrust transfer case, the Earth\u2013Earth flight time does not exactly\n\nequal to some integer multiple of Earth\u2019s orbital period, and the spacecraft does not\n\nencounter the Earth at the same position from launch. However, the mechanism in\n\nthe low-thrust case is similar to the chemical case [27], where the V1 at the second\nEarth encounter is increased through some small maneuvers.\n\n 10000\n\n 11000\n\n 12000\n\n 13000\n\n 14000\n\n 15000\n\n 16000\n\n 17000\n\n 18000\n\n7000 7500 8000 8500 9000 9500\n\nF\nin\n\nal\n m\n\nas\ns \n\n(k\ng)\n\nDeparture Date (MJD2000)\n\nBasin Hopping\nMultistart\n\nSimulated Annealing\n\nFig. 5.4 E\u2013E\u2013J solutions with various launch dates\n\n128 A. Cassioli et al.\n\n\n\n5.4.2 Mission to Mercury\n\nOur second test case is a mission to Mercury, inspired from the BepiColombo\n\nmission [38]. The planetary encounter sequence is Earth\u2013Venus\u2013Venus\u2013Mercury\u2013\n\nMercury\u2013Mercury (EVVMMM), and the mission parameters are given in Table 5.3.\n\nThe mission parameters have been subject to many changes since the original\n\nconcept. Here we consider the mission as was described in a 2002 report from the\n\nEuropean Space Operations Centre [18]. Unlike the solar electric propulsion (SEP)\n\nused in the BepiColombo mission, we do not model the SEP engine in our test but\n\nrather assume the thrust and specific impulse to be constant. In comparison with the\n\nfirst case, the number of flybys increases from 1 to 4, and the dimension of the\n\nproblem increases to 222 with 99 nonlinear constraints. Also, we do not strictly\n\nTable 5.3 Parameters for a mission to Mercury\n\nParameters Values\n\nInitial mass of the spacecraft 1, 300 kg\n\nMaximum thrust 0. 34 N\n\nSpecific impulse 3, 200 s\n\nLaunch date Aug. 1, 2009\u2013Apr. 27, 2012\n\nLaunch V1 ? 1. 925 km/s\nArrival V1 ? 0. 5017 km/s\nArrival date No later than Nov. 26, 2021\n\nMinimum flyby radius 1.1 Rplanet\n\n10000\n\n11000\n\n12000\n\n13000\n\n14000\n\n15000\n\n16000\n\n17000\n\n18000\n\n 0 200 400 600 800 1000 1200 1400 1600 1800 2000 2200\n\nF\nin\n\nal\n m\n\nas\ns \n\n(k\ng)\n\nTime of Flight for the first leg (days)\n\nBasin Hopping\nMultistart\n\nSimulated Annealing\n\nFig. 5.5 E\u2013E\u2013J solutions with various Earth\u2013Earth transfer times\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 129\n\n\n\nrequire a rendezvous with Mercury with a V 1 of zero, but the spacecraft is allowed\nto have a 0.5 km/s speed difference with respect to the planet.\n\nBecause of the added complexity, we allowed the global solvers to run for\n\na longer time (?48 h), and we used a more performant machine (Intel\nXeon@2.66 GHz with 8 GB of RAM). The test results are summarized in\n\nTable 5.4. MBH found more than three hundred locally optimal solutions, of\n\nwhich more than 80 are above 90% of the best solution. In this case Multistart is\n\nable to detect more feasible solutions than MBH found (more than double the\n\nnumber of solutions than MBH), but with fewer high final mass trajectories\n\n(e.g., only 30 solutions are above the best 90%). SA-AN only found about one\n\nhundred locally optimal solutions and with less good quality solutions than the\n\nother two algorithms.\n\nFrom Figs. 5.6 and 5.7, we note that the first one-third of the solutions have a high\n\nfinal mass (over 900 kg), and it covers many launch opportunities within the search\n\nspace. If we do not restrict the analysis to the solutions that are also locally optimal,\n\nthen the range of launch opportunities increases even more. The trajectory of the\n\n\u201cbest\u201d solution (with the highest final mass) is plotted in Fig. 5.8. Here the spacecraft\n\nleaves Earth on April 13, 2010, performs two flybys at Venus to lower its orbit, then\n\nencounters Mercury twice to lower its V1 to 0.5 km/s before it arrives on Sep 5,\n2015. Comparing such trajectory with the one described in the BepiColombo early\n\nmission planning stage, we note that our results are similar to those described in [18]\n\n(as cited in [8]) with regard to the overall shape of the optimal trajectory, which\n\nincludes the planetary resonances, the times of flight, and the engine thrust periods,\n\nbut have been obtained using a completely automated process.\n\n5.5 Computational Experiments on MGA-1DSM\n\nProblem Instances\n\nIn this section we briefly summarize a large set of numerical experiments on\n\nMGA-1DSM problem instances whose details can be found in [2]. Such\n\nMGA-1DSM model cannot be used for low-thrust trajectories but fits more nicely\n\nTable 5.4 Algorithm statistics for a mission to Mercury\n\nAlgorithm Basin hopping Simulated annealing Multistart\n\nBest (kg) 1, 064 988 1, 052\n\nWorst (kg) 101 111 100\n\nMean (kg) 724 522 530\n\nMean best 10 (kg) 1, 051 917 1, 032\n\nStd (kg) 277 253 261\n\nNo. of sol. above 35 0 1\n\n95% best (1, 011 kg)\n\nNo. of sol. above 88 14 31\n\n90% best (958 kg)\n\nTotal no. of solutions 345 94 756\n\n130 A. Cassioli et al.\n\n\n\nwith chemical ones. In the chemical transfers considered we assume that only one\n\nDSM is used in each trajectory leg (hence the name MGA-1DSM). This allows the\n\norbital propagation problem to be performed using solutions to the so-called\n\nLambert problem (see, e.g., [13] for details).\n\n100\n\n200\n\n300\n\n400\n\n500\n\n600\n\n700\n\n800\n\n900\n\n1000\n\n1100\n\n3400 3600 3800 4000 4200 4400 4600\n\nF\nin\n\nal\n m\n\nas\ns \n\n(k\ng)\n\nDeparture date (MJD2000)\n\nBasin Hopping\nSimulated Annealing\n\nMultistart\n\nFig. 5.7 EVVMMM solutions with various launch dates\n\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n60\n\n70\n\n80\n\n90\n\n100\n\n10020030040050060070080090010001100\n\nN\num\n\nbe\nr \n\nof\n fe\n\nas\nib\n\nle\n s\n\nol\nut\n\nio\nns\n\nFinal mass (kg)\n\nBasin Hopping\nMultistart\n\nSimulated Annealing\n\nFig. 5.6 Cumulative number of solutions for the EVVMMM mission\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 131\n\n\n\nIn order to illustrate another way the algorithms previously presented can be\n\nused, in this section we will comment on the use a so-called black-box model, in\n\nwhich the solvers do not have access to the gradient of the objective function and\n\nconstraints.\n\nDetails about MGA-1DSM models are outside the scope of this section and can\n\nbe read in [15]. Here we only assume to have a code which computes a suitable\n\nobjective function, given a set of variables which describe the trajectory. We simply\n\nrecall that the models are based on suitably choosing a set of dates and times\n\nrelative to each mission: among the variables available for optimization, there are\n\nthe starting date and the time duration of each leg. Given these quantities, a Lambert\n\nproblem is solved in order to compute the trajectory as well as initial and final\n\nvelocity at the extremes of each leg. Some additional variables are also included for\n\nspecifying the time instant of each DSM, the pericenter radii, i.e., the minimum\n\ndistance to all encountered planets, the angles between the planar trajectories at\n\neach swingby. Given these quantities, the spacecraft movement within each leg and\n\nbetween consecutive DSMs is completely described by the solution of a specific\n\nLambert\u2019s problem.\n\nExtensive numerical tests were performed on the GTOP test set (freely available\n\nfrom the ESA ACT web site, see [17]). The GTOP problems are provided as \u201cblack\n\n?1 ?0.8 ?0.6 ?0.4 ?0.2 0 0.2 0.4 0.6 0.8 1\n?1\n\n?0.8\n\n?0.6\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\nx (AU)\n\ny \n(A\n\nU\n)\n\nVenus\n1st flyby\n\nVenus\n2nd flyby\n\nEarth\nlaunch\n\nMercury\n1st flyby\n\nMercury\n2nd flyby\n\nMercury\narrival\n\nFig. 5.8 Trajectory plot of a mission to Mercury\n\n132 A. Cassioli et al.\n\n\n\nbox\u201d ones, so that algorithms can just obtain the objective function value, given a\n\nset of parameters. No information, e.g., on gradients, is available, nor differentia-\n\nbility can be assumed. Thus, they can be used for testing purpose by the scientific\n\ncommunity in order to create a shared benchmark test suite for space trajectory\n\nproblems; they are also of interest as hard test bed for derivative-free optimization\n\nalgorithms.\n\nOnly MGA-1DSM problems characterized by the presence of box constraints\n\nhave been tackled. In Table 5.5 the meaning of each variable is briefly summarized,\n\nwhile problem characteristics (number of variables and sequence of astronomical\n\nbodies visited) are listed in Table 5.6. Problem named \u201cTandem\u201d is not a single one\n\nbut a collection of 24 problems, each corresponding to a different sequence of\n\nplanet swingbys from the Earth to Saturn.\n\nLocal searches were performed using the SNOPT SQP solver [10] with finite\n\ndifference approximation for derivatives. We omit all details, except that we can\n\ncontrol the accuracy by a step length parameter h.\nAll tests, if not otherwise stated, have been performed with the following\n\nstopping criteria:\n\n\u2022 Multistart performed N \u00bc 1, 000 steps, with uniformly generated starting points.\n\u2022 In Multistart BH, at each Multistart step, an MBH was executed with a stopping\n\nrule calling for stopping as soon as no improvement was observed in the last MNI\n\u00bc 500 iterations.\nThe huge amount of data generated by our tests is not easy to be summarized, so\n\nhaving observed very similar behavior in all missions we tested, we prefer to\n\npresent a few pairwise comparisons between different algorithmic options in\n\nTable 5.6 Box constrained ESA MGA-1DSM problems\n\nProblem name Variables Planet sequence\n\nCassini 22 E V V E J S\n\nMessenger 18 E E V V Me\n\nRosetta 22 E E V E E 67P\n\nTandem 18 E P1 P2 P3 S\n\nE Earth, V Venus, J Jupiter, S Saturn, Me Mercury, M Mars, 67P Comet67P/Churyumov\u2013Ger-\nasimenko, Pi generic planet chosen in the set{E, V, M, J}\n\nTable 5.5 Variables for\n\nbox constrained ESA\n\nMGA-1DSM problems\n\nName Meaning #\n\nt0 Departure time 1\n\nV1 Dep. vel. modulus 1\nu Dep. vel. angle1 1\n\nv Dep. vel. angle2 1\n\nTi Time of flight n\n\nZi Time of DSM i n\nrpi Pericenter radius at swingby i n ? 1\nbi Outc. vel. angle at swingby i n ? 1\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 133\n\n\n\norder to ease data analysis. As the principal test bed, we choose the Tandem mission\n\n(see Table 5.6). In the following figures we will represent computational profiles in\n\nparticular for what concerns the mission with highest estimate of the global\n\nmaximum, i.e., mission 6 (starting with Earth, with three swingbys at Venus,\n\nEarth, and Earth again). This problem is formulated as a maximization one, as the\n\nobjective is a function of the final mass of the spacecraft.\n\nThe first experiments were devoted to finding a reasonably good perturbation P\nin MBH. As already remarked in Sect. 5.3.2, the choice of the perturbation is crucial\n\nto the performances of MBH.\n\nIn particular, as there seemed to be some evidence that some variables in the\n\nproblem like, e.g., starting times and times of flight were in some sense easier to\n\nchoose than other ones, or, at least, that, once well chosen, they were quite stable,\n\nwe investigate whether perturbations involving only a few variables at a time were\n\nmore successful than perturbations in which every variable is randomly displaced.\n\nAt each step of MBH, the current solution was perturbed in two different ways:\n\n\u2022 Algorithm MBH1PPertSome: between 1 and 4 coordinates were randomly\nchosen and uniformly perturbed in an interval of radius equal to 5% of the box\n\ncontaining the variable.\n\n\u2022 Algorithm MBH1PPertAll: every coordinate was uniformly perturbed in an\ninterval whose radius is 5% of the box.\n\nIn Fig. 5.9 we report the results obtained running the two versions of this\n\nmethod, with the graphical representation introduced at page 14. It is quite evident\n\nfrom Fig. 5.9 that perturbation of all coordinates is preferable.\n\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0 50 100 150 200\n\nsequence 06: EVEES\n\nMBH1PPertSome\nMBH1PPertAll\n\nFig. 5.9 Comparison of two different perturbations: all variables (dotted line) vs. just a few ones\n(solid line)\n\n134 A. Cassioli et al.\n\n\n\nThe second set of experiments was aimed at checking the efficiency of a so-\n\ncalled \u201ctwo-phase approach,\u201d a strategy that has been very successful in many\n\ndifferent contexts like, e.g., that of molecular conformation problems studied by\n\nsome of the authors of this chapter. This approach consists in performing a local\n\nsearch on a \u201cmodified\u201d problem (the so-called \u201cfirst phase\u201d), and then, from the\n\nsolution of the latter, start a local optimization with the original objective function\n\n(the \u201csecond phase\u201d). Here the first-phase optimization consisted in using a larger\n\nstep (h \u00bc 10? 2) when computing numerical derivatives; the second phase used a\nfiner step equal to h \u00bc 10? 5. In Fig. 5.10 we report the comparison between one-\nand two-phase optimization.\n\nIt can be quite clearly seen that using two phases is extremely beneficial both in\n\nterms of precision and of robustness.\n\nIn order to check whether MBH was indeed useful, we counted, for the 1,000\n\nexperiments made, the total number of two-phase local searches performed, which\n\nresulted to be 950, 046. We then ran the same number of (two-phase) Multistart\n\niterations, i.e., the classical Multistart method as presented in Sect. 5.3.1 but using a\n\ntwo-phase local search. In Fig. 5.11 we report the comparison between MBH and\n\nMultistart: the 1,000 best results found by Multistart have been compared with\n\nthose of MBH\u2014it is clear that this way the behavior of Multistart is artificially\n\nmuch improved; nonetheless the superiority of MBH is striking. Therefore we\n\nconjecture that, similarly to problems in molecular conformation, also space trajec-\n\ntory optimization possesses a \u201cfunnel\u201d structure, in which minima are clustered\n\ntogether.\n\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n0.35\n\n0 50 100 150 200\n\nsequence 06: EVEES\n\nMBH1PPertAll\nMBH2PPertAll\n\nFig. 5.10 Comparison between 1-(solid line) and 2-phase (dotted line) algorithms\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 135\n\n\n\nFor what concerns the experiments performed on the other missions listed in\n\nTable 5.6, similar results have been found, confirming the effectiveness of the\n\nproposed approach.\n\nIn particular, we consider particularly interesting the fact of having been able,\n\nfor what concerns the Messenger mission, to discover a competitive solution which\n\ncorresponds to starting the mission years before the starting date of previously\n\nknown solutions (as well as of the real space mission).\n\nWewould like to remark thatmost of the novel putative global optimawe found are\n\ntruly new solutions, i.e., they cannot be considered as refinement of previously known\n\nones. As an example, we plot in the following figures a trajectory assumed to be\n\noptimal for Rosetta mission on April 2008, with objective function (representing total\n\nmission variation in velocity) equal to 1.417 km/s and the one we found (and later\n\nimproved) inMay 2008, with objective 1.3678. Although the variation in the objective\n\nis not particularly impressive, the trajectories widely differ (see Fig. 5.12\u20135.13).\n\nAs a concluding remark on these experiments, we would like to stress the fact\n\nthat MBH performed in an excellent way for these problems for which, we recall,\n\nno information is available (the problems were coded as black boxes). Nonetheless,\n\nthanks to the fact that function evaluation was very cheap, we could use MBH in an\n\nefficient way. Moreover, we could use a local optimization method, SNOPT,\n\ndesigned for smooth problems\u2014the excellent performance of our two-phase\n\napproach showed that for problems of this kind performing a coarse-grained\n\napproximation of derivatives can be very beneficial, as it, in some sense, helps in\n\nsmoothing out the objective function.\n\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n0.35\n\n0 50 100 150 200\n\nsequence 06: EVEES\n\nMBH2PPertAll\n\nMultistart\n\nFig. 5.11 Comparison between Multistart and MBH\n\n136 A. Cassioli et al.\n\n\n\n?6\n\n?10 ?8 ?6 ?4 ?2 0 2 4 6 8\nx 10\n\n8\n\nx 10\n8\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\nFig. 5.13 Rosetta mission, DV \u00bc 1. 3678\n\n?10\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\n?8 ?6 ?4 ?2 0 2 4 6 8\nx103\n\nx103\n\nFig. 5.12 Rosetta mission, DV \u00bc 1. 417\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 137\n\n\n\n5.6 Conclusions and Directions for Further Research\n\nGlobal optimization techniques offer the possibility of automating the design of\n\ninterplanetary trajectories. In the past years researchers have shown convincingly\n\nsuch a possibility mostly on high-energy trajectories such as MGA trajectories and\n\nusing both chemical and low-thrust propulsion. The complexity of the problems\n\nsolved using an automated search of the solution space included some tough real\n\ncases of preliminary mission design such as the BepiColombo mission, the Mes-\n\nsenger mission, the Tandem mission, and more. The same global optimization\n\ntechnique, e.g., MBH (as discussed in more detail in this book chapter), can be\n\napplied to diverse instances of the interplanetary trajectory problem offering a\n\npowerful unified approach to interplanetary trajectory design. Other approaches\n\nare possible and can be equally successful, but so far only MBH has been proven to\n\nbe able to tackle globally low-thrust trajectory design as well as chemical trajectory\n\ndesign. More work is needed to understand the limits of such an approach, when\n\napplied to high-energy orbits, as only a few works so far are discussing its\n\nperformances and on only a few problem instances.\n\nGlobal optimization techniques need also still to be extended to low-energy\n\ntransfers, where the search space structure is still largely unknown and the cost of\n\npropagating the spacecraft motion can get prohibitive. Future research should\n\ntackle this issue and explore possibilities in this area. Eventually the construction\n\nof an efficient computational tool able to search with a unified approach for good\n\ninterplanetary trajectories, given a certain mission profile, will be a challenge for\n\ncomputer scientists. Such a tool, when ready, will allow for good preliminary\n\nmission design to be made also without much knowledge on the complex mathe-\n\nmatical structure underlying spacecraft dynamics. In Table 5.7 a list of acronyms\n\nused in this paper is reported.\n\nTable 5.7 List of acronyms ACT Advanced concepts team\n\nDSM Deep space maneuver\n\nGTOC Global trajectory optimization competition\n\nGTOP Global trajectory optimization problems\n\nLT Low thrust\n\nMBH Monotonic basin hopping\n\nMGA Multiple gravity assist\n\nMNI Max no improve\n\nMS Multistart\n\nSA Simulated annealing\n\nSA-AN Simulated annealing with adaptive\n\nneighborhood\n\nSEP Solar electric propulsion\n\nSQP Sequential quadratic programming\n\n138 A. Cassioli et al.\n\n\n\nReferences\n\n1. Addis, B., Locatelli, M., Schoen, F.: Disk packing in a square: A new global optimization\n\napproach. INFORMS J. on Computing 20(4), 516\u2013524 (2008)\n\n2. Addis, B., Cassioli, A., Locatelli, M., Schoen, F.: A global optimization method for the design\n\nof space trajectories. COAP 3, 635\u2013652 (2011)\n\n3. Armellin, R., Di Lizia, P., Topputo, F., Lavagna, M., Bernelli-Zazzera, F., Berz, M.: Gravity\n\nassist space pruning based on differential algebra. Celestial Mech. Dyn. Astron. 106(1), 1\u201324\n\n(2010)\n\n4. Corana, A., Marchesi, M., Martini, C., Ridella, S.: Minimizing multimodal functions of\n\ncontinuous variables with the \u2018simulated annealing\u2019 algorithm. ACM Trans. Math. Software\n\n(TOMS) 13(3), 280 (1987)\n\n5. Danby, J.: Fundamentals of Celestial Mechanics. Willman-Bell, Richmond (1988)\n\n6. Di Lizia, P., Radice, G.: Advanced Global Optimisation Tools for Mission Analysis and\n\nDesign. Tech. Rep. 03-4101b, European Space Agency, the Advanced Concepts Team, 2004\n\n7. Dolan, E.D., More?, J.J.: Benchmarking optimization software with performance profiles.\n\nMath. Program. 91, 201\u2013213 (2002)\n\n8. Gil-Ferna?ndez, J., Graziano, M., Gomez-Tierno, M., Milic, E.: Autonomous Low-Thrust\n\nGuidance: Application to SMART-1 and BepiColombo. Ann. New York Acad. Sci. 1017,\n\n307\u2013327 (2004), Astrodynamics, Space Missions, and Chaos\n\n9. Gill, P.E., Murray, W., Saunders, M.A.: SNOPT: An SQP algorithm for large-scale\n\nconstrained optimization. SIAM J. Optim. 12(4), 979\u20131006 (2002)\n\n10. Gill, P.E., Murray, W., Saunders, M.A.: User\u2019s Guide for SNOPT Version 7, Software for\n\nLarge-Scale Nonlinear Programming. Stanford Business Software Inc., Mountain View, USA\n\n(2006)\n\n11. Greeley, R., Johnson, T., E.: Report of the NASA Science Definition Team for the Jupiter Icy\n\nMoons Orbiter. Tech. rep., NASA Science Definition Team, Feb. 2004\n\n12. Grosso, A., Jamali, A., Locatelli, M., Schoen, F.: Solving the problem of packing equal and\n\nunequal circles in a circular container. J. Global Optim. 47(1), 63\u201381 (2010)\n\n13. Izzo, D.: Lambert\u2019s problem for exponential sinusoids. Tech. Rep. ACT-RPT-4100-DI-\n\nLMSP01, ESA, Apr. 2005\n\n14. Izzo, D.: Global Trajectory Optimization Competition portal. http://www.esa.int/gsp/ACT/\n\nmad/pp/GTOC, July 2012\n\n15. Izzo, D.: Global optimization and space pruning for spacecraft trajectory design. In: Spacecraft\n\nTrajectory Optimization, pp. 178\u2013200. Cambridge University Press, New York (2010)\n\n16. Izzo, D., Becerra, V., Myatt, D., Nasuto, S., Bishop, J.: Search space pruning and global\n\noptimisation of multiple gravity assist spacecraft trajectories. J Global Optim. 38(2), 283\u2013296\n\n(2007)\n\n17. Izzo, D., Vinko, T., Zapatero, M.: Global Trajectory Optimization Competition Database.\n\nhttp://www.esa.int/gsp/ACT/inf/op/globopt.htm, July 2012\n\n18. Katzkowski, M., Corral, C., Jehn, R., Pellon, J.-L., Landgraf, M., Khan, M., Yanez, A.,\n\nBiesbroek, R.: BepiColombo Mercury Cornerstone Mission Analysis: Input to Definition\n\nStudy. Tech. rep., ESA European Space Operations Centre, Apr. 2002\n\n19. Kirkpatrick, S., Gelatt, C.D. Jr., Vecchi, M.P.: Optimization by simulated Annealing. Science\n\n220, 671\u2013680 (1983)\n\n20. Leary, R.H.: Global optimization on funneling landscapes. J. Global Optim. 18, 367\u2013383\n\n(2000)\n\n21. Locatelli, M.: On the multilevel structure of global optimization problems. Comput. Optim.\n\nAppl. 30(1), 5\u201322 (2005)\n\n22. Locatelli, M., Vasile, M.: A hybrid multiagent approach for global trajectory optimization.\n\nJ. Global Optim. 44(4), 461\u2013479 (2009)\n\n5 Global Optimization Approaches for Optimal Trajectory Planning 139\n\nhttp://www.esa.int/gsp/ACT/mad/pp/GTOC\nhttp://www.esa.int/gsp/ACT/mad/pp/GTOC\nhttp://www.esa.int/gsp/ACT/inf/op/globopt.htm\n\n\n23. Myatt, D., Becerra, V., Nasuto, S., Bishop, J.: Advanced Global Optimisation Tools for\n\nMission Analysis and Design. Tech. Rep. 03-4101a, European Space Agency, the Advanced\n\nConcepts Team, 2004\n\n24. Nocedal, J., Wright, S.J.: Numerical Optimization, 2nd edn. Springer, USA (2006)\n\n25. Parcher, D.W., Sims, J.A.: Gravity-assist trajectories to Jupiter using nuclear electric propul-\n\nsion. In: AAS/AIAA Astrodynamics Specialist Conference, Aug. 2005\n\n26. Sims, J.A., Flanagan, S.N.: Preliminary design of low-thrust interplanetary missions. In: AAS/\n\nAIAA Astrodynamics Specialist Conference, Aug. 1999\n\n27. Strange, N.J., Sims, J.A.: Methods for the design of v-infinity leveraging maneuvers. In: AAS/\n\nAIAA Astrodynamics Specialist Conference, July/Aug. 2001\n\n28. Tsiolkovsky, K.E.: Exploration of the universe with reaction machines (in Russian). Sci. Rev.\n\n5 (1903)\n\n29. Vasile, M., De Pascale, P.: Preliminary design of multiple gravity-assist trajectories.\n\nJ. Spacecraft Rockets 43(4), 794\u2013805 (2006)\n\n30. Vasile, M., Minisci, E., Locatelli, M.: An inflationary differential evolution algorithm for\n\nspace trajectory optimization. IEEE Trans. Evol. Comput. 15(2), 267\u2013281 (2011)\n\n31. Vavrina, M.A., Howell, K.C.: Global low-thrust trajectory optimization through hybridization\n\nof a genetic algorithm and a direct method. In: AIAA/AAS Astrodynamics Specialist Confer-\n\nence, Aug. 2008\n\n32. Vinko, T., Izzo, D.: Global Optimisation Heuristics and Test Problems for Preliminary\n\nSpacecraft Trajectory Design. Tech. Rep. GOHTPPSTD, European Space Agency, the\n\nAdvanced Concepts Team, 2008\n\n33. Wales, D.J., Doye, J.P.K.: Global optimization by basin-hopping and the lowest energy\n\nstructures of Lennard\u2013Jones clusters containing up to 110 atoms. J. Phys. Chem. A 101(28),\n\n5111\u20135116 (1997)\n\n34. Whiffen, G.J.: An investigation of a Jupiter Galilean Moon orbiter trajectory. In: AAS/AIAA\n\nAstrodynamics Specialist Conference, Aug. 2003\n\n35. Yam, C.H., McConaghy, T.T., Chen, K.J., Longuski, J.M.: Design of low-thrust gravity-assist\n\ntrajectories to the outer planets. In: 55th International Astronautical Congress, Oct. 2004\n\n36. Yam, C.H., Biscani, F., Izzo, D.: Global optimization of low-thrust trajectories via impulsive\n\nDelta-V transcription. In: 27th International Symposium on Space Technology and Science,\n\nJuly 2009\n\n37. Yam, C.H., McConaghy, T.T., Chen, K.J., Longuski, J.M.: Preliminary design of nuclear\n\nelectric propulsion missions to the outer planets. In: AIAA/AAS Astrodynamics Specialist\n\nConference, Aug. 2004\n\n38. Yarnoz, D.G., Jehn, R., Croon, M.: Interplanetary navigation along the low-thrust trajectory of\n\nbepiColombo. Acta Astronautica 59(1\u20135), 284\u2013293 (2006)\n\n140 A. Cassioli et al.\n\n\n\nChapter 6\n\nIndirect Methods for the Optimization\n\nof Spacecraft Trajectories\n\nGuido Colasurdo and Lorenzo Casalino\n\nAbstract In this chapter, a general methodology to apply the theory of optimal\n\ncontrol to spacecraft trajectories is outlined. This peculiar procedure allows for an\n\nalmost mechanical derivation of the boundary conditions which must be satisfied by\n\nan optimal trajectory, depending on the specific constraints of the problem under\n\nanalysis. The general way of posing the optimal control problem makes this indirect\n\napproach suitable to manage many specific features of the space missions, such as,\n\nimpulsive and/or low-thrust engines, planetary flybys, atmospheric flight, and so on.\n\nPeculiarities of the problem simply modify the set of differential equations and\n\nboundary conditions in the context of the same theoretical frame. Examples will\n\nshow that the indirect approach can deal efficiently with complex problems of space\n\ntrajectory optimization. As in the case of direct methods, the indirect approach\n\nrequires a tentative solution, and convergence to the optimum is typically obtained\n\nif the tentative solution is sufficiently close to the optimal one. Suitable procedures\n\nto find tentative guesses for the considered problems are described.\n\nKeywords Trajectory optimization \u2022 Optimal control theory \u2022 Indirect methods \u2022\n\nInterplanetary mission\n\nG. Colasurdo\n\nUniversita? di Roma \u201cSapienza\u201d, Via Eudossiana, 18, Roma, Italy\n\ne-mail: guido.colasurdo@uniroma1.it\n\nL. Casalino (*)\nPolitecnico di Torino, Corso Duca degli Abruzzi, 24, Torino, Italy\n\ne-mail: lorenzo.casalino@polito.it\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_6,\n# Springer Science+Business Media New York 2013\n\n141\n\nmailto:guido.colasurdo@uniroma1.it\nmailto:lorenzo.casalino@polito.it\n\n\n6.1 Introduction\n\nThe feasibility and cost of a space mission are strongly related to the spacecraft\n\ntrajectory. Minimization of propellant requirements may be fundamental to deliver\n\na sufficient payload mass and guarantee the mission feasibility or to allow for a less\n\nexpensive launcher, thus reducing costs. An efficient method for trajectory\n\noptimization is therefore needed during mission planning. Final mass or payload\n\nmaximization and propellant mass or flight time minimization are the problems\n\nthat must be typically dealt with.\n\nMost of the methods for the optimization of spacecraft trajectories can be\n\ngrouped into three main classes. Direct methods transform the problem into a\n\nparameter optimization (nonlinear programming) and solve it by means of\n\ngradient-based procedures. Indirect methods use the theory of optimal control to\n\ntransform the optimization problem into a boundary value problem (BVP) solved\n\nby means of shooting procedures. Evolutionary algorithms, instead, exploit large\n\npopulations of solutions which evolve according to specific rules towards the global\n\noptimum. Indirect methods are the object of this chapter.\n\nThe indirect approach offers many advantages. First, it allows for an exact, even\n\nthough numerical, optimization (in the limits of the adopted dynamical model and\n\nintegration accuracy). In addition, as far as low-thrust missions are concerned, the\n\ncomputational cost of indirect methods is typically lower compared to direct\n\nmethods, which require a much larger number of variables for an accurate trajectory\n\ndescription (severe approximations are necessary to genetic algorithms). Finally,\n\nthe indirect approach provides useful theoretical information on the problem which\n\nis dealt with.\n\nBetts [1], who carries out an accurate comparison of direct and indirect methods,\n\nunderlines three main drawbacks concerning indirect techniques: first, the necessity\n\nof deriving analytic expressions for the necessary conditions, that could become\n\ndiscouraging when dealing with complex problems. Second, the region of conver-\n\ngence for a shooting algorithm may be quite small, as it is necessary to guess values\n\nfor adjoint variables that may not have an obvious physical meaning. Third, for\n\nproblems with path inequalities, it is necessary to guess the sequence of constrained\n\nand unconstrained subarcs.\n\nIn the previous two decades the authors have studied and proposed a peculiar\n\napproach that mitigates the drawbacks of the indirect methods. In particular, the\n\nposition of the problem and the derivation of the optimal conditions have been\n\nmade general and easy; the application of the indirect approach has been extended\n\nto very complex problems of spaceflight mechanics. Some enhancements have been\n\nintroduced also in the formulation of the BVP, and the convergence of the shooting\n\nprocedure has improved. The capability of achieving the numerical solution is still\n\ndependent on the tentative solution which is assumed to start the procedure, but the\n\nsimplicity of the theoretical approach permits a fast formulation of a series of\n\noptimization problems with increasing difficulty: the solution of the most complex\n\nproblem (i.e., the actual problem) is obtained via the solution of similar but easier\n\n142 G. Colasurdo and L. Casalino\n\n\n\nproblems. It is important to note that also direct methods rely on a tentative solution\n\nand may show convergence difficulties. The easy management of the theoretical\n\nproblem is useful to treat path inequalities; this topic is not discussed here; an\n\nexample can be found in [10].\n\nThe authors\u2019 approach to indirect optimization is described in the present\n\nchapter and applied to the optimization of space missions. The application of the\n\ntheory of optimal control to a generic spacecraft trajectory, according to the\n\ntwo-body problem model, is considered, and the derivation of the optimal control\n\nlaw and conditions for optimality is first exposed. Some interesting applications\n\nconcerning interplanetary trajectories are then presented and discussed. The numer-\n\nical procedure to obtain converged solutions is highlighted; examples are presented\n\nwith the main aim of providing indications on strategies capable of finding the\n\ntentative solutions that guarantee the numerical convergence.\n\n6.2 Position of the Optimal Control Problem\n\nThe indirect approach to optimization uses the optimal control theory (OCT), which\n\nis based on calculus of variations. The position of the optimization problem,\n\nwhich is here described, has the most suitable form to deal with the optimization\n\nof space trajectories and to exploit the capabilities of the numerical procedure that\n\nhas been selected to solve the BVP resulting from the OCT application. A more\n\ndetailed discussion about OCT can be found in [2, 3, 13].\n\nThe system is described by a set of state variables x; differential equations rule\n\nthe evolution from the initial to the final state\n\ndx\n\ndt\n\u00bc f\u00f0x; u; t\u00de: (6.1)\n\nThey are functions of x, of the control variables u, and the independent variable\n\nt (usually, the time).\nThe trajectory between the initial and final point (the external boundaries) is\n\nusefully split into n arcs at the points (internal boundaries) where the state or control\nvariables are discontinuous or constraints are imposed. The jth arc starts at t\u00f0j?1\u00de\u00fe\nand ends at tj?, where the state variables are x\u00f0j?1\u00de\u00fe and xj?, respectively (j ? and j +\ndenote values just before and after point j).\n\nNonlinear constraints are imposed at both internal and external boundaries.\n\nThese boundary conditions are grouped into a vector c and written in the form\n\nc\u00f0x\u00f0j?1\u00de\u00fe ; xj? ; t\u00f0j?1\u00de\u00fe ; tj?\u00de \u00bc 0? \u00bc 1; . . . ; n: (6.2)\n\nAdditional path constraints may hold along an entire arc; constraints may also\n\nconcern the control variables u.\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 143\n\n\n\nMeyer formulation is preferred to define the optimization problem, which\n\nsearches for extremal values (maxima or minima) of a functional\n\nJ \u00bc \u2019\u00f0x\u00f0j?1\u00de\u00fe ; xj? ; t\u00f0j?1\u00de\u00fe ; tj?\u00de j \u00bc 1; . . . ; n: (6.3)\n\nAlternatively, Lagrange formulation could be employed; the formulations are\n\nhowever equivalent, and each one can be easily obtained from the other. A\n\nnecessary condition for optimality requires that the first variation of J is null for\nany admissible variation along the path (dx and du) and at boundary points (dx\u00f0j?1\u00de\u00fe,\ndxj? , dt\u00f0j?1\u00de\u00fe and dtj? ).\n\nLagrange multipliers (constants m associated with boundary conditions and\nadjoint variables l associated with the differential equations) are introduced, and\na modified functional is defined:\n\nJ? \u00bc \u2019\u00fe mTc\u00fe\nX\nj\n\nZ tj?\nt\u00f0j?1\u00de\u00fe\n\nlT\u00f0f ? _x\u00dedt; (6.4)\n\nwhere the dot ( _ ) denotes the time derivative.\nThe functionals J and J? coincide if all boundary conditions and differential\n\nequations are satisfied. One can differentiate J? and obtain\n\ndJ? \u00bc ?H\u00f0j?1\u00de\u00fe \u00fe\n@\u2019\n\n@t\u00f0j?1\u00de\u00fe\n\u00fe mT @c\n\n@t\u00f0j?1\u00de\u00fe\n\n !\ndt\u00f0j?1\u00de\u00fe\n\n\u00fe Hj? \u00fe\n@\u2019\n\n@tj?\n\u00fe mT @c\n\n@tj?\n\n? ?\ndtj?\n\n\u00fe lT\u00f0j?1\u00de\u00fe \u00fe\n@\u2019\n\n@x\u00f0j?1\u00de\u00fe\n\u00fe mT @c\n\n@x\u00f0j?1\u00de\u00fe\n\n\" # !\ndx\u00f0j?1\u00de\u00fe\n\n\u00fe ?lTj? \u00fe\n@\u2019\n\n@xj?\n\u00fe mT @c\n\n@xj?\n\n? ?? ?\ndxj?\n\n\u00fe\nZ tj\n\nt\u00f0j?1\u00de\u00fe\n\n@H\n\n@x\n\u00fe _lT\n\n? ?\ndx\u00fe @H\n\n@u\ndu\n\n? ?\ndt j \u00bc 1; . . . ; n; (6.5)\n\nwhere the Hamiltonian has been introduced:\n\nH \u00bc lTf: (6.6)\n\nOptimality requires dJ? \u00bc 0 for any admissible variation. By nullifying the\ncoefficients of dx and du, one has the Euler\u2013Lagrange equations for the adjoint\nvariables\n\ndl\ndt\n\n\u00bc ? @H\n@x\n\n? ?T\n(6.7)\n\n144 G. Colasurdo and L. Casalino\n\n\n\nand algebraic equations for the control variables\n\n@H\n\n@u\n\n? ?T\n\u00bc 0: (6.8)\n\nA control variable may be subject to constraints (e.g., the thrust magnitude varies\n\nbetween a minimum value, typically 0, and a maximum value Tmax). In these cases,\nEq. (6.8) may not provide the optimal control. However, in agreement with\n\nPontryagin\u2019s maximum principle (PMP) [2], the optimal control must maximize\n\nH, given by Eq. (6.6). In particular, when the Hamiltonian is linear with respect to a\ncontrol variable (e.g., thrust magnitude), a bang-bang control arises, and the control\n\nassumes either its maximum or minimum value, except for singular arcs [2, 4].\n\nFinally, the boundary conditions for optimality are obtained by nullifying the\n\ncoefficients of dx\u00f0j?1\u00de\u00fe , dxj? , dt\u00f0j?1\u00de\u00fe , dtj? . One has\n\n?lTj? \u00fe\n@\u2019\n\n@xj?\n\u00fe mT @c\n\n@xj?\n\n? ?\n\u00bc 0 j \u00bc 1; . . . ; n; (6.9)\n\nlTj\u00fe \u00fe\n@\u2019\n\n@xj\u00fe\n\u00fe mT @c\n\n@xj\u00fe\n\n? ?\n\u00bc 0 j \u00bc 0; . . . ; n? 1; (6.10)\n\nHj? \u00fe\n@\u2019\n\n@tj?\n\u00fe mT @c\n\n@tj?\n\u00bc 0 j \u00bc 1; . . . ; n; (6.11)\n\n?Hj\u00fe \u00fe\n@\u2019\n\n@tj\u00fe\n\u00fe mT @c\n\n@tj\u00fe\n\u00bc 0 j \u00bc 0; . . . ; n? 1: (6.12)\n\nThe constant Lagrange multipliers are eliminated form Eqs. (6.9)\u2013(6.12); the\n\nresulting boundary conditions for optimality and the boundary conditions on the\n\nstate variables, given by Eq. (6.2), are collected in a single vector in the form\n\ns\u00f0x\u00f0j?1\u00de\u00fe ; xj? ; l\u00f0j?1\u00de\u00fe ; lj? ; t\u00f0j?1\u00de\u00fe ; tj?\u00de \u00bc 0; (6.13)\n\nwhich, together with state and adjoint differential equations, defines a multipoint\n\nboundary value problem (MPBVP).\n\nNoticeable difficulties in the solution of a MPBVP arise when the relevant times\n\nare unknown and the lengths of the integration intervals are free. A change of\n\nindependent variable is introduced [11] to deal with the indetermination of the\n\nrelevant times and fix the extremes of the integration intervals; in the j-th phase, t is\nreplaced by\n\ne \u00bc j? 1\u00fe t? tj?1\ntj ? tj?1 ; (6.14)\n\nwhich assumes consecutive integer values at the boundaries. The differential\n\nequation for a generic variable y (either state, x, or adjoint variable, l) during\nphase j becomes\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 145\n\n\n\ndy\n\nde\n\u00bc \u00f0tj ? tj?1\u00de dy\n\ndt\n: (6.15)\n\nSome initial values of the state and adjoint variables are unknown; several\n\nconstant parameters, such as the relevant times tj, are also unknown. An iterative\nprocedure is used to determine the unknowns that permit the fulfillment of the\n\nboundary conditions. Tentative values are first assumed; it is very important that\n\nthese initial values are sufficiently close to the optimal solution to guarantee\n\nconvergence. The assumption of a suitable solution is a fundamental step in the\n\noptimization procedure; details will be given in Sect. 6.4.\n\nOnce tentative values have been assigned to the unknowns, the differential\n\nequations are integrated and the errors on the boundary conditions are determined.\n\nThe unknowns are then in turn varied by a small amount to evaluate, according to a\n\nforward-finite-difference scheme, the derivatives of the errors with respect to the\n\nunknowns. Newton\u2019s method is used to bring the errors to zero. A more precise\n\nanalytical approach [11] may be used when convergence difficulties arise.\n\n6.3 Optimization of Space Trajectories\n\nPreliminary analysis of spacecraft trajectories is typically carried out assuming a\n\npoint mass spacecraft under the influence of a single body. The two-body model can\n\nalso be used to deal with interplanetary trajectories, as the patched-conic approxi-\n\nmation is usually employed in the initial analyses. An efficient approach only\n\nanalyzes the heliocentric legs; at the patch points with the planetocentric legs,\n\nsuitable boundary conditions take the maneuvers inside the planets\u2019 spheres of\n\ninfluence into account. The formulation of the trajectory optimization in the two-\n\nbody problem is given here, making particular reference to the heliocentric legs of\n\nan interplanetary trajectory, due to the peculiarity of the relevant boundary\n\nconditions.\n\nThe state of the spacecraft is described by position r, velocity v, and mass m, and\nthe state equations are\n\ndr\n\ndt\n\u00bc v; (6.16)\n\ndv\n\ndt\n\u00bc g\u00fe T\n\nm\n; (6.17)\n\ndm\n\ndt\n\u00bc ? T\n\nc\n; (6.18)\n\nwhereT is the engine thrust andg is the gravitational acceleration (an inverse-square\n\ngravity field g \u00bc ?mr=r3 is typically assumed); the propellant mass-flow rate is\nexpressed by the ratio of the thrust magnitude to the constant effective exhaust\n\n146 G. Colasurdo and L. Casalino\n\n\n\nvelocity c. This indirect method is also capable of treating propulsion systems with\nvariable c, i.e., specific impulse [5], as shown in Sect. 6.4.4.\n\nThe Hamiltonian, defined by Eq. (6.6), is\n\nH \u00bc lTr v\u00fe lTv \u00f0g\u00fe T=m\u00de ? lmT=c: (6.19)\n\nThe Euler\u2013Lagrange equations for the adjoint variables, Eq. (6.7), provide [8]\n\ndlr\ndt\n\n? ?T\n\u00bc ?lTv\n\n@g\n\n@r\n\n? ?\n; (6.20)\n\ndlv\ndt\n\n? ?T\n\u00bc ?lTr ; (6.21)\n\ndlm\ndt\n\n\u00bc lvT\nm2\n\n; (6.22)\n\nwhere the gravity-gradient matrix appears in Eq. (6.20). Equations (6.16)\u2013(6.18)\n\nand (6.20)\u2013(6.22) constitute the system of differential equations, which is integrated\n\nnumerically.\n\nThe thrust direction and its magnitude are typically the control variables, which\n\nmust maximize H in agreement with PMP [2]. The optimal thrust direction is\ntherefore parallel to the velocity adjoint vector lv, which is named primer vector\n[14]. The switching function\n\nSF \u00bc lv\nm\n\n? lm\nc\n\n(6.23)\n\nis introduced, and Eq. (6.19) is rewritten as\n\nH \u00bc lTr v\u00fe lTv g\u00fe TSF: (6.24)\n\nThe thrust magnitude assumes its maximum value when the switching function\n\nSF is positive, whereas it is set to zero when SF is negative, again to maximize the\nHamiltonian. Singular arcs occur when SF remains zero during a finite time;\nEq. (6.24) is not sufficient to decide the optimal thrust magnitude (singular arcs\n\nare here excluded; they may be required during atmospheric flight [4]). To improve\n\nthe numerical accuracy, the trajectory is split into maximum-thrust arcs and coast\n\narcs. The number and order of the arcs, i.e., the trajectory switching structure, are\n\nassigned a priori, and the arc time-lengths are additional unknowns. The boundary\n\nconditions for optimality state that the switching function SF must be null at the\nextremities of each thrust arc. The numerical procedure provides the optimal\n\nsolution that corresponds to the assigned switching structure. This solution is then\n\nchecked in the light of PMP, by means of an analysis of the switching function; if\n\nPMP is violated, coast or propelled arcs are inserted or removed, in accordance with\n\nthe behavior of SF, to obtain an improved solution (e.g., a coast arc is introduced\nwhen SF becomes negative during a propelled arc).\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 147\n\n\n\nSuitable boundary conditions define the mission. Reference is here made to\n\ninterplanetary trajectories; a similar (and usually simpler) analysis can be carried\n\nout for different cases, for example, orbital maneuvers of an Earth satellite. At the\n\nexit from Earth\u2019s sphere of influence, spacecraft and Earth positions coincide\n\n(the dimension of the sphere of influence can be neglected), and the mass is typically\n\na function of the hyperbolic excess velocity v10 \u00bc v0 ? vE\u00f0t0\u00de where subscript E\nrefers to the Earth. The boundary conditions at the initial point (subscript 0) are\n\nr0 \u00bc rE\u00f0t0\u00de; (6.25)\n\nm0 \u00bc f \u00f0v10\u00de: (6.26)\n\nThe arrival at the target body with zero-hyperbolic excess velocity is here\n\nconsidered, as it appears to be the most general end condition, corresponding to\n\nthe rendezvous with an asteroid or to the minimum-energy approach to a planet.\n\nThe relevant boundary conditions at the final point (subscript n) are therefore\n\nrn \u00bc rT\u00f0tn\u00de; (6.27)\n\nvn \u00bc vT\u00f0tn\u00de; (6.28)\n\nwhere subscript T denotes the target body. The final mass mn is the performance\nindex which is maximized.\n\nIn the past, low-thrust and impulsive trajectories constituted two separate classes\n\nof missions, optimized by means of quite different methods. In particular, the\n\nclassical application of the OCT to impulsive maneuvers generates a numerical\n\nproblem which is typically solved by gradient-based procedures. The present\n\napproach can insert an impulsive maneuver in a mission that also uses low-thrust\n\nengines, i.e., electric propulsion. A deep-space impulse represents a discontinuity in\n\nspacecraft velocity and mass; subscripts i? and i + are used to denote variables just\nbefore and after the impulse, and the velocity change Dv \u00bc vi\u00fe ? vi? is introduced;\none has the boundary conditions\n\nri\u00fe \u00bc ri?; (6.29)\n\nmi\u00fe \u00bc mi? exp\u00f0?Dv=c\u00de; (6.30)\n\nti\u00fe \u00bc ti? : (6.31)\n\nGravity assists are dealt with by means of a similar approach. At planetary\n\nflybys, spacecraft position is the same as the planet both before (subscript g ? ) and\nafter (subscript g + ) the flyby; the hyperbolic excess velocity v1 \u00bc vg ? vp\u00f0tg\u00de\nchanges its direction but maintains the same magnitude. One has\n\nrg\u00fe \u00bc rP; (6.32)\n\n148 G. Colasurdo and L. Casalino\n\n\n\nrg? \u00bc rP; (6.33)\n\nv21g\u00fe \u00bc v21g?; (6.34)\n\ntg\u00fe \u00bc tg? : (6.35)\n\nIn some cases the spacecraft would fly too close to the planet surface.\n\nA constraint on the periapsis height might be required; in this occurrence, an\n\nadditional condition on the velocity turn arises\n\nvT1g\u00fev1g? \u00bc ? cos 2fv21g?; (6.36)\n\nwhere cosf \u00bc V2p=\u00f0v21g? \u00fe V2p\u00de, with VP \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffi\nmp=Rp\n\nq\nbeing the circular velocity at\n\nthe minimum allowable distance from the planet surface.\n\nEquations (6.9)\u2013(6.12) are used to determine the boundary conditions for opti-\n\nmality. At departure, after eliminating the constant Lagrange multipliers m, one has\n\nlv0 \u00bc lm0 df\ndv10\n\nv10\nv10\n\n; (6.37)\n\nwhich states that the primer vector must be parallel to the hyperbolic excess\n\nvelocity (and fixes its magnitude) and the transversality condition\n\nlTr0v10 \u00fe TSF0 \u00bc 0: (6.38)\n\nIn a similar way, at the final point, the transversality condition would be analogous\n\nto Eq. (6.38)\n\nlTrnv1n \u00fe TSFn \u00bc 0 (6.39)\n\nbut becomes SFn\u00bc 0 if zero-hyperbolic excess velocity is imposed. In addition, one\nalso has lmn \u00bc 1 when the final mass is maximized; lmn \u00bc 0 and Hn \u00bc 1 are instead\nobtained if the final time is minimized and mn is left free. Additional time\nconstraints (e.g., on the overall trip time tn ? t0) may be introduced; the approach\ndescribed here would provide the specific transversality conditions corresponding\n\nto the imposed constraints.\n\nAt each deep-space impulse one has\n\nlvi? \u00bc lvi\u00fe \u00bc lmi?mi?\nc\n\nDvi\nDvi\n\n\u00bc lmi\u00femi\u00fe\nc\n\nDvi\nDvi\n\n; (6.40)\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 149\n\n\n\nwhich states that both the primer vector and the product mlm are constant across the\nmaneuver; the primer vector is parallel to the velocity impulse. The transversality\n\ncondition is\n\nlTri\u00feDvi \u00bc lTri?Dvi: (6.41)\n\nBy using Eqs. (6.21) and (6.40), one can show [6] that Eq. (6.41) is equivalent to\n\nnullify the time derivative of the primer magnitude. The impulse can be seen as a\n\nlimiting case of the finite-thrust arc, with length approaching zero; the primer\n\nvector, which is parallel to thrust in the finite-thrust case, becomes parallel to the\n\nvelocity impulse; the two conditions SF \u00bc 0 enforced at the extremities of a finite-\nthrust arc becomeSF \u00bc _SF \u00bc 0: for an impulsive maneuver, both switching function\nand its time derivative must be zero at the impulse (otherwise, SF would be positive\non either side of the impulse). Note that similar conditions also hold for departure\n\nfrom Earth and, in general, for impulses inside a planetary sphere of influence, with\n\na different value of the primer magnitude (and SF, consequently) to reflect the\nconvenience of using the thrust in the closest proximity of the planet surface.\n\nFor a free-height planetary flyby one has\n\nlvg? \u00bc lvg? v1g?\nv1g?\n\n; (6.42)\n\nlvg\u00fe \u00bc lvg\u00fe v1g\u00fe\nv1g\u00fe\n\n; (6.43)\n\nwhich enforce primer vector parallel to the hyperbolic excess velocity both before\n\nand after the flyby; the primer magnitude is continuous across the flyby. The\n\nparallelism does not hold if the flyby height is constrained; the primer component\n\nnormal to the flyby plane is zero; the in-plane component lperpv perpendicular to the\nhyperbolic excess velocity is the same before and after the flyby, but the parallel\n\ncomponent lparv is discontinuous according to\n\nlparvg\u00fe \u00bc lparvg? \u00fe 2Alperpvg? (6.44)\n\nwith\n\nA \u00bc df\ndv1g?\n\nv1g? \u00bc 2\ntanf\n\nv21g?\nv21g? \u00fe V2p\n\n(6.45)\n\nThe transversality condition both for free-height and minimum-height flyby\n\nbecomes\n\nlTrg?v1g? \u00fe TSFg? \u00bc lTrg\u00fev1g\u00fe \u00fe TSFg\u00fe (6.46)\n\n150 G. Colasurdo and L. Casalino\n\n\n\nTo improve the convergence, the trajectories are first optimized by introducing\n\nadditional degrees of freedom and letting the relevant bodies assume the best\n\nphasing with the Earth. The corresponding trajectories, which define the most\n\nfavorable positions of the target planets at encounter, can be flown every year\n\ndeparting on the same day. The positions of the planets on the encounter day of each\n\nyear in the launch window are then compared to the optimal-phasing positions;\n\nfavorable opportunities occur when differences are small. The corresponding actual\n\nmissions are easily found by using the optimal-phasing solution as tentative guess.\n\n6.4 Examples\n\nThe optimization of interplanetary trajectories is quite complex and is considered\n\nhere to highlight the features of the indirect optimization method which is described\n\nin this chapter. The most original and significant contributions of this approach are,\n\nin fact, in the field of interplanetary missions.\n\n6.4.1 Earth\u2013Mars Round Trip Impulsive Trajectories\n\nDifferent classes of Earth\u2013Mars round-trip trajectories exist, according to time of\n\nflight and stay time on Mars surface [17]. Conjunction-class missions exhibit two\n\nHohmann-like transfers joined by a long stay on Mars, waiting for a favorable\n\nreturn opportunity. Opposition-class missions reduce the stay time by means of an\n\nimpulse during either the outbound or the inbound leg. Venus, when conveniently\n\nplaced, can provide a gravity assist which replaces the deep-space impulse and\n\nreduces the mission DV requirements.\nImpulsive trajectories are typically dealt with by direct optimization methods or\n\nevolutionary algorithms; however, the use of an indirect approach [6] may offer\n\nseveral advantages. Solutions for single legs are easily obtained and can be com-\n\nbined to build a tentative solution for the complete round-trip mission; usually,\n\nconvergence does not present difficulties. An additional benefit comes from the\n\nproblem periodicities that can be exploited to obtain all the mission opportunities in\n\na large launch window with minimum effort [7]. In fact, Earth\u2013Mars relative\n\nangular position repeats after a synodic period of 2.13 years; conjunction-class\n\nand opposition-class (without flyby) missions recur with the same periodicity; small\n\ndifferences are mainly due to Mars eccentricity and inclination. After a full 32-year\n\ncycle (15 synodic periods) the planet positions and the solutions repeat almost\n\nexactly. For missions which exploit Venus flyby, the same phase angles between\n\nthe relevant three planets are found after a syzigistic period of 6.4 years (comprising\n\n3 Earth\u2013Mars and 4 Venus\u2013Mars synodic periods), which defines the problem\n\nperiodicity; in a syzigistic period, one good opportunity and two secondary\n\nopportunities are found with flyby in the outbound leg; symmetrical missions\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 151\n\n\n\nwith flyby in the inbound leg exist. It is important to note that a single solution for\n\neach type of mission can be used as a tentative guess to find other missions of\n\nthe same type in different launch windows, with almost immediate convergence.\n\nIn contrast, other optimization methods cannot exploit the similarity of the\n\nsolutions with comparable efficiency.\n\nThe analysis of the switching function of the baseline solution may suggest the\n\nintroduction of additional impulses during the flight. As an example, Fig. 6.1 shows\n\nthe primer magnitude behavior during missions with Venus flyby in the outbound\n\nleg, departure in March 2015 and Mars stay of 60 days [7]. No mass disposal (e.g.,\n\nduring the Mars stay) is considered, andmlm results to be constant (one should note\nthat the presence of mass dumping [16] would reduce mlm and the required primer\nvalue at impulses after the discontinuities, to signal the convenience of using thrust\n\nafter the mass has diminished). A suitable normalization is here adopted to have\n\npositive SF where lv > 1. Impulses at departure from and arrival to a planet occur\nwith lv< 1, as impulses inside a planet sphere of influence are more convenient than\ndeep-space impulses. The baseline solutionwith no deep-space impulse (solid line in\n\nFig. 6.1) requiresDv\u00bc 17. 24 km/s. The switching function becomes positive during\nthe return leg, suggesting the addition of a deep-space impulse. When this impulse is\n\nadded, an improved solution with a single impulse in the inbound leg is obtained\n\n(Dv \u00bc 15. 42 km/s); however, this new solution requires the addition of another\nimpulse during the outbound leg, as the switching function becomes slightly positive\n\nduring the Venus\u2013Mars leg. The global-optimum solution (2 impulses) is then\n\nobtained with a small additional improvement (Dv \u00bc 15. 39 km/s). Note that no\nconstraint on the height of Venus flybys is required; therefore the primer magnitude\n\nis continuous at the flybys. The analysis of the switching function proves to be very\n\nuseful; it has also been employed in [15] to determine which legs of a multiple\n\ngravity assist mission require the presence of a deep-space impulse.\n\n0.5\n\n1.5\n\n1\n\n0 360 720 1080\n\nEarth\nMars\nVenus\nImpulse\nNo impulse\n1 impulse\n2 impulses\n\nP\nrim\n\ner\n m\n\nag\nni\n\ntu\nde\n\n l\nv \n\nRight ascension , deg\n\nFig. 6.1 Primer magnitude for round-trip Mars missions with Venus flyby in the outbound leg\n\n152 G. Colasurdo and L. Casalino\n\n\n\n6.4.2 Multiple Gravity Assist Missions with Electric Propulsion\n\nIndirect methods are better suited to deal with electric propulsion (EP) missions,\n\nwhich imply long thrust arcs. A large number of variables are required to accurately\n\ndescribe the trajectory when direct methods or evolutionary approaches are\n\nemployed; this fact makes the optimization of EP trajectories by means of direct\n\nmethods computationally demanding, with long CPU times to optimize a single\n\ntrajectory. The use of evolutionary algorithms is almost prohibitive, unless substan-\n\ntial approximations in the trajectory description are adopted (e.g., shape-based\n\nmethods). On the contrary, the use of the indirect approach is straightforward,\n\nwith a limited number of variables, high accuracy, and relatively small computation\n\ntime. The main difficulty which is related to the use of this indirect approach is the\n\ndefinition of a suitable tentative solution. It is convenient to split the trajectory in\n\nseveral branches, which can be separately optimized with limited effort; the\n\nsolutions are then patched together to obtain the tentative guess for the whole\n\nmission. The use of multiple shooting methods may be useful to improve conver-\n\ngence; the trajectory is split into two or more parts; each part is integrated separately\n\nstarting from its own tentative values (instead of continuing the previous part), and\n\ncontinuity is enforced by additional boundary conditions at the patch points.\n\nA multiple gravity assist trajectory to Mercury is here presented. The mission\n\nperforms flybys of Earth, Venus (twice), and Mercury (three times) to progressively\n\nreduce the spacecraft energy, change the inclination and obtain the rendezvous with\n\nthe target planet. First, the Earth\u2013Venus trajectory with Earth flyby (EEV) has been\n\noptimized. Further legs have been added to complete an Earth\u2013Mercury trajectory\n\nwith Earth and Venus (two) flybys (EEVVM). In parallel, three Mercury-Mercury\n\nresonant trajectories, which progressively reduce the hyperbolic excess velocity at\n\neach Mercury encounter, have been optimized and patched together. Finally, the\n\nEEVVM trajectory and the MMM trajectory were joined, and continuity was\n\nenforced to obtain the complete, rigorously optimal, EEVVMMMM mission. The\n\npresence of thrust arcs was stated by means of PMP. Several mission opportunities\n\nwith this flyby structure have been found [9].\n\nFigures 6.2 and 6.3 refer to the trajectory with departure in 2014. It is worth\n\nnoting that the mission that will be flown by the BepiColombo mission [12]\n\n(originally planned for departure in 2012 and then delayed to 2014) presents similar\n\nfeatures. Gravity assists provide almost entirely the required orbit changes with\n\nminimal adjustments obtained by means of propulsion. Thrust is initially used to\n\nhave a favorable Earth gravity assist to reduce the perihelion and intercept Venus.\n\nTwo Venus flybys are required; first, a minimum-height flyby inserts the spacecraft\n\non a 1:1 Venus resonant orbit with a reduced aphelion (its large inclination is\n\ndictated by the resonance requirement); the second (free-height) flyby adjusts\n\ninclination, closely matching that of Mercury; both aphelion and perihelion are\n\nalso reduced to intercept Mercury. Three gravity assists of the target planet and\n\npropulsion are used to eventually achieve rendezvous.\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 153\n\n\n\n6.4.3 Propulsion System Optimization\n\nThe useful mass of an EP spacecraft is reduced not only by the required propellant\n\nbut also by the mass of the power system necessary to provide the exhaust velocity\n\nc. It is well known that, when EP is employed, an optimal value of the specific\nimpulse exists and maximizes the payload; moreover, the trip time is strictly related\n\nto the thrust level. An interesting problem consists in the determination of thrust\n\nmagnitude, specific impulse, and corresponding optimal trajectory to optimize the\n\nmission payload for assigned time of flight. The problem mixes the search for\n\nMercury\nfirst\nintercept\n\nEarth\nflyby\n\nDeparture\n\nVenus\nflybys\n\nRendezvous\n\nrev #\n1 and 2\n3\n4\n5\n\nMercury\nflyby # 3Mercury\n\nflybys # 1 and 2\n\nrev #\n6\n7\n\nFig. 6.2 Mission to Mercury with departure in 2014. Bold line \u00bc thrust arcs, light line \u00bc coast\narcs\n\n0\n\n0.4\n\n0.8\n\n1.2\n\n0 300 600 900 1200 1500 1800\n0\n\n4\n\n8\n\n12\n\ni\n\nra rp\nra\n\nrp\ni\n\nTime t, days\n\nIn\ncl\n\nin\nat\n\nio\nn \n\ni, \nde\n\ng\n\nP\ner\n\nih\nel\n\nio\nn \n\nr p\n a\n\nnd\n a\n\nph\nel\n\nio\nn \n\nr a\n, A\n\nU\n\nFig. 6.3 Perihelion, aphelion, and inclination histories during Mercury mission departing in 2014\n\n154 G. Colasurdo and L. Casalino\n\n\n\ncontinuous controls (thrust direction) and optimal parameters (thrust magnitude and\n\nspecific impulse).\n\nThe available thrust Ta and effective exhaust velocity c are additional unknowns;\nthe payload mu \u00bc mn ? bPa (final mass minus propulsion system mass) is the\nperformance index to be maximized, where b is the specific mass of the propulsion\nsystem, related to the available thrust power Pa \u00bc Tac=2. The optimization proce-\ndure considers Ta and c as additional state variables with trivial differential equations\n_Ta \u00bc 0 and _c \u00bc 0; the adjoint equations are _lT \u00bc ?@H=@Ta and _lc \u00bc ?@H=@c\n(note that T\u00bc Ta when SF is positive and T\u00bc 0 when negative). Boundary conditions\nfor optimality state that lT0 \u00bc 0, lc0 \u00bc 0 at the initial point and lTn \u00bc ?bc=2, lcn\n\u00bc ?bTa=2at the final point, which implicitly determine Ta and c. The solution of the\nsame problem with assigned thrust and specific impulse can be used as tentative\n\nguess. The same approach can be employed when solar electric propulsion (SEP) is\n\nemployed, with Pa being now the thrust power at 1 astronomical unit (AU); during\nthe propelled arcs, the actual available thrust is considered to be dependent on the\n\ndistance from the Sun (e.g., T \u00bc Ta=r2, with r in astronomical units).\nFigure 6.4 refers to an Earth\u2013Mars rendezvous mission with SEP; optimal\n\nphasing is assumed to eliminate the influence of the actual positions of the planets.\n\nNondimensional values of payload, effective exhaust velocity, and thrust and power\n\nat 1 AU, are shown as functions of the trip time (Earth\u2013Sun mean distance, the\n\ncorresponding circular velocity, and the maximummass that can escape from Earth,\n\nare the reference values); b \u00bc 10 is assumed. Solutions can be obtained with a\ncontinuation technique, progressively increasing the trip time. Switching structures\n\nwith either a single thrust arc or two thrust arcs alternate; PMP is used to assess the\n\noptimal switching structure. As the trip time increases, the effective exhaust\n\nvelocity grows to reduce the propellant consumption and increase the payload\n\nmass; thrust instead decreases as less acceleration is required, allowing the further\n\nbenefit of a lighter propulsion system (the decrease of Ta offsets the increase of c).\n\n0.4\n\n0.6\n\n0.8\n\n1.0\n\n1.2\n\n1.4\n\n250 500 750 1000\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.10\n\nmu\nc\nTa\nPa\n\nTrip time, days\n\nP\nay\n\nlo\nad\n\n, m\nu,\n\n e\nffe\n\nct\niv\n\ne \nex\n\nha\nus\n\nt v\nel\n\noc\nity\n\n c\n\nT\nhr\n\nus\nt  \n\nT\na,\n\n p\now\n\ner\n  P\n\na\n\nFig. 6.4 Optimal characteristics of the propulsion system for an Earth\u2013Mars SEP transfer\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 155\n\n\n\n6.4.4 Variable Specific Impulse\n\nIn principle, many EP systems could present the capability of varying specific\n\nimpulse (i.e., c) and thrust magnitude at constant thrust power. High thrust and\nlow specific impulse are used where the thrust can be favorably exploited to reduce\n\nthe trip time; where the thrust is less useful, a large specific impulse is adopted to\n\nreduce the propellant consumption.\n\nThe engine could operate using a fraction of the available power, and one has\n\nT \u00bc 2P=c with 0 ? P ? Pa; the Hamiltonian is rewritten as\n\nH \u00bc lTr v\u00fe lTv g\u00fe\nlv\nm\n\n? lm\nc\n\n? ?\n2\nP\n\nc\n: (6.47)\n\nThe optimal specific impulse is first determined. By nullifying ?H / ?c one has\n\ncopt \u00bc 2mlmlv : (6.48)\n\nThe Hamiltonian linearly depends on P, and a bang-bang control arises; if the\nspecific impulse is unbounded, the engine can operate with c\u00bc copt; one easily finds\nthat the power coefficient in the Hamiltonian is always positive and the thruster is\n\nalways on at maximum power (P \u00bc Pa). On the contrary, in the presence of bounds\non the attainable values of c, variable between cmin and cmax, coast arcs may be\nrequired [5] depending on the sign of the power switching function\n\nSP \u00bc lv\nm\n\n? lm\ncmax\n\n: (6.49)\n\nThe same considerations hold for SEP systems, with available power dependent on\n\nthe distance from the Sun.\n\nFigure 6.5 shows c and T histories during a 1,000-day Earth\u2013Mars SEP mission\nwith nondimensional available power Pa \u00bc 0. 01 at 1 AU. The unbounded-c engine\nrequires large values of c, which exceed the capabilities of existing EP systems. The\nunbounded solution is used as tentative guess to obtain a rapid convergence of the\n\nsame problem with bounded c; cmin \u00bc 1 and cmax \u00bc 1. 5 (corresponding to specific\nimpulses of about 3,000 s and 4,500 s, respectively) are here adopted. The thrust\n\nmagnitude during the trajectory is constrained between Tmin \u00bc 2P=cmax and Tmax\n\u00bc 2P=cmin, with P \u00bc Pa=r2 to reflect its dependence on the distance from the Sun.\nHowever, P and T are set to zero when SP is negative. The penalty, due to the\nbounds on attainable c, is only 0.005 in comparison to the nondimensional payload\n(0.751 vs. 0.756).\n\n156 G. Colasurdo and L. Casalino\n\n\n\n6.5 Final Remarks\n\nThe indirect procedure presented here is a powerful means to deal with the optimi-\n\nzation of spacecraft trajectories. The necessary conditions for optimality are easily\n\nobtained even for complex problems. This has permitted the extension of the indirect\n\napproach to problems that were usually left to direct methods. When the problem is\n\nformulated in a convenient way, for instance by following the guidelines provided\n\nhere, extremely accurate solutions can be obtained with very short computation\n\ntimes. Robustness is typically an issue when indirect methods are adopted; however,\n\ntentative solutions which allow for convergence can be build by properly splitting\n\nthe trajectory in elementary legs (optimized separately), or by employing continua-\n\ntion techniques, or, finally, by exploiting periodicities in the motion of the relevant\n\nbodies and building on existing solutions.\n\nReferences\n\n1. Betts, T.: Survey of numerical methods for trajectory optimization. J. Guid. Contr. Dynam. 21,\n\n193\u2013207 (1998). doi: 10.2514/2.4231\n\n2. Bryson, E.A., Ho, Y.-C.: Applied Optimal Control. Hemisphere, New York, NY (1975)\n\n3. Burghes, D.N., Graham, A.: Introduction to Control Theory, Including Optimal Control.\n\nWiley, New York, NY (1980)\n\n4. Casalino, L.: Singular arc during aerocruise. J. Guid. Contr. Dynam. 23, 118\u2013123 (2000)\n\n5. Casalino, L., Colasurdo, G.: Optimization of variable-specific-impulse interplanetary\n\ntrajectories. J. Guid. Contr. Dynam. 27, 678\u2013684 (2004)\n\n0\n\n0.5\n\n1.0\n\n1.5\n\n2.0\n\n2.5\n\n3.0\n\n0 200 400 600 800 1000\n0\n\n0.01\n\n0.02\n\n0.03\n\n0.04\n\n0.05\n\n0.06\n\n0.07\nUnbounded c\n\nT\n\nc\n\nTime of flight, days\n\nE\nffe\n\nct\niv\n\ne \nex\n\nha\nus\n\nt v\nel\n\noc\nity\n\n  c\n\nT\nhr\n\nus\nt  \n\n T\n\ncmin = 1, cmax = 1.5\n\nTmax\n\nTmin\n\nFig. 6.5 Control histories for 1,000-day Earth\u2013Mars SEP transfer with variable specific impulse\n\n6 Indirect Methods for the Optimization of Spacecraft Trajectories 157\n\nhttp://dx.doi.org/10.2514/2.4231\n\n\n6. Casalino, L., Colasurdo, G., Pastrone, D.: Optimization procedure for preliminary design of\n\nopposition-class Mars missions. J. Guid. Contr. Dynam. 21, 134\u2013140 (1998)\n\n7. Casalino, L., Colasurdo, G., Pastrone, D.: Mission opportunities for human exploration of\n\nMars. Planet. Space Sci. 46, 1613\u20131622 (1998)\n\n8. Casalino, L., Colasurdo, G., Pastrone, D.: Optimal low-thrust escape trajectories using gravity\n\nassist. J. Guid. Contr. Dynam. 22, 637\u2013642 (1999)\n\n9. Casalino, L., Colasurdo, G., Rosa Sentinella, M.: Low-thrust trajectories to Mercury with\n\nmultiple gravity assists. Paper AIAA 2007-5233, AIAA, Reston, VA (2007)\n\n10. Casalino, L., Pastrone, D., Colasurdo, G.: Integrated design of hybrid rocket upper stage and\n\nlauncher trajectory. Paper 2009-4843, AIAA, Reston, VA (2009)\n\n11. Colasurdo, G., Pastrone, D.: Indirect optimization method for impulsive transfer. Paper AIAA\n\n94\u20133762, AIAA, Reston, VA (1994)\n\n12. Jehn, R.: BepiColombo a mission to Mercury. 21st International Symposium on Space Flight\n\nDynamics (ISSFD), Toulouse, France, Sept 2009\n\n13. Kirk, D.E.: Optimal Control Theory: An Introduction. Prentice-Hall, Englewood Cliffs (1970)\n\n14. Lawden, D.F.: Optimal Trajectories for Space Navigation. Butterworths, London (1963)\n\n15. Olympio, J.T.: Designing optimal multi-gravity-assist trajectories with free number of\n\nimpulses. International Symposium on Space Flights Dynamics, Toulouse, France. ESA\n\nESTEC (2009). Available at http://www.esa.int/gsp/ACT/doc/MAD/pub/ACT-RPR-MAD-\n\n2009-DesignMGADSM.pdf\n\n16. Ranieri, C., Ocampo, C.: Optimizing finite-burn, round-trip trajectories with Isp constraints\n\nand mass discontinuities. J. Guid. Contr. Dynam. 28, 775\u2013781 (2005). doi: 10.2514/1.9188\n\n17. Walberg, G.: How shall we go to Mars? A review of mission scenarios. J. Spacecraft Rockets\n\n30, 129\u2013139 (1993)\n\n158 G. Colasurdo and L. Casalino\n\nhttp://www.esa.int/gsp/ACT/doc/MAD/pub/ACT-RPR-MAD-2009-DesignMGADSM.pdf\nhttp://www.esa.int/gsp/ACT/doc/MAD/pub/ACT-RPR-MAD-2009-DesignMGADSM.pdf\n\n\nChapter 7\n\nTrajectory Optimization for Launchers\n\nand Re-entry Vehicles\n\nFrancesco Cremaschi\n\nAbstract Launchers and reentry vehicles have in common the necessity to perform\n\npart of their trajectory along the planet atmosphere. While this has only negative\n\neffects for the launch vehicle, for the re-entry vehicle, the interaction with the\n\natmosphere can be suitably exploited for the fulfillment of the mission. The launch\n\nand reentry trajectory is a complex scenario that should be modeled using simplified\n\nphysics equations describing with sufficient accuracy the subsystems of the vehicle\n\nand the environment. In a second step, this simplified physical model, described by\n\nsets of differential equations, should be transcribed in a mathematical set of\n\nalgebraic equations that can be solved by non-linear programming methods (NLP\n\nsolvers). Upon further analysis of these direct transcription methods, two subclasses\n\ncan be identified: shooting methods and collocation methods. The NLP solver can\n\nbe a global optimizer, e.g., genetic algorithm, particle swarm, some other\n\nmetaheuristics or sequential quadratic programming (SQP), in the case of differen-\n\ntiable functions. Several examples of launch and reentry vehicle problems are\n\npresented, with a strong emphasis on the advantages and disadvantages of the\n\nvarious transcription methods and solvers when applied to \u201creal\u201d world problems.\n\nKeywords Launcher \u2022 Re-entry vehicle \u2022 Trajectory \u2022 Gradient method \u2022 Multiple\n\nshooting \u2022 Collocation \u2022 Modeling\n\n7.1 Introduction\n\nThe trajectory optimization for space applications comprises a wide spectrum of\n\ndifferent scenarios: from powerful ascent of a multistage rocket to the gentle\n\ndescent of a lunar lander, from the slow rendezvous and docking of an automatic\n\nF. Cremaschi (*)\nAstos Solutions GmbH, Meitnerstrasse 8, Stuttgart, Germany\n\ne-mail: Francesco.cremaschi@astos.de\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_7,\n# Springer Science+Business Media New York 2013\n\n159\n\nmailto:Francesco.cremaschi@astos.de\n\n\ncargo to the International Space Station (ISS,[1]) to the fast planet fly-by of an\n\ninterplanetary probe. This chapter analyzes only the launchers and reentry vehicles,\n\nwhich have in common the necessity to perform part of their trajectory inside the\n\nplanet atmosphere. In the case of a conventional launch vehicle, this thin layer\n\ncounteracts the vehicle propulsion system reducing its performance; for the reentry\n\nvehicle, however, the interaction with the atmosphere can even be necessary for the\n\nfulfillment of the mission. The complexity of these scenarios requires an automatic\n\noptimization performed by a mathematical solver.\n\nSection 7.2 presents the modeling of satellite launchers, whereas Sect. 7.3 details\n\nthe modeling of the re-entry vehicles. The most common simplified physical\n\nequations are listed in Sect. 7.4 whereas the transcription methods and the solvers\n\nare detailed in Sect. 7.5. The chapter is enriched with various examples taken from\n\npast and future missions (Sect. 7.6); Sect. 7.7 provides the conclusion.\n\n7.2 Launcher Modeling\n\nThis section presents the modeling of a typical launcher mission and of a typical\n\nlauncher vehicle itself; the concepts introduced here may be extended, due to their\n\nsimilarities with those vehicles, also to sub-orbital applications: space-planes and\n\nsounding rockets.\n\n7.2.1 Vehicle Modeling\n\nA launch vehicle is a complex aerospace object, with the primary function of\n\nplacing a certain mass (payload) in a defined orbit. Relaxing this definition, it is\n\nalso possible to classify the sub-orbital vehicles as launch vehicles i.e., amateur\n\nrockets and sounding rockets.\n\nThe vehicle design has not changed much since the first attempts: a cylindrical\n\nbody with the various stages sequentially placed. Optionally, pairs of strap-on\n\nboosters are attached to the first stage to increase the thrust at liftoff. Other more\n\nexotic configurations are present in launchers still in the design phase or in aborted\n\nprojects e.g., winged vehicle, that takeoff horizontally and use the lift to reduce the\n\npropellant fraction required to reach a stable orbit, cf. Reaction Engines Skylon [2]\n\nor EADS Hopper [3].\n\nAn interesting application that parallels the trajectory optimization is vehicle\n\ndesign optimization: the optimizer can modify the vehicle model in order to fulfill\n\nthe requested mission. In this scenario, the modeling of the vehicle increases in\n\ncomplexity with the definition of several constraints between the various modules,\n\ne.g., the structural mass of a stage can be linearly linked to the propellant mass of\n\nthe same stage, or the engine mass can be a function of the maximum thrust\n\nprovided by it. Increasing in complexity, it is possible to include a first structural\n\n160 F. Cremaschi\n\n\n\nanalysis of the vehicle with the shell thickness function of the loads computed\n\nduring the mission. In the case of criticality, the solver has the dual possibilities of\n\nchanging the trajectory to reduce the loads or of increasing the thickness with a\n\nconsequent increase of the vehicle structural mass.\n\n7.2.1.1 Fairing\n\nLocated at the tip of the rocket, a fairing (frontal cone in Fig. 7.1) has two main\n\nfunctions: to reduce the atmospheric drag force and to protect the payload from the\n\nexternal loads present in the first phases of the mission. The shape of the fairing is\n\ntherefore a compromise between a good aerodynamic effect and a high internal volume\n\nrequired to accommodate the payload. The fairing diameter is a clear example of this:\n\nthe payload would request at least 4 or 5 m diameter, whereas a diameter of 3 mwould\n\nreduce considerably the reference area, which is linearly correlated with the drag force\n\n(see Eq. (7.6)). The fairing protection function is required for the acoustic loads at\n\nliftoff and for the thermal loads caused by the atmosphere molecular friction with the\n\nvehicle itself; more details are presented in the Sect. 7.4.2. Vehicles with a wide fairing\n\n(e.g., Soyuz\u2014[4]) possess the upper stage covered by the fairing envelope.\n\nIn the case of a vehicle design optimization which follows trajectory optimiza-\n\ntion, the fairing mass can be linked to the payload mass and to the vehicle diameter.\n\n7.2.1.2 Lower Stages\n\nThe lower stages have the basic function of both storing the propellant required to\n\nfulfill the mission as well as providing the structural stability of the entire vehicle.\n\nThey generally have a cylindrical section of which the majority of the volume is\n\nfilled with propellant: on average 90% of the total mass is propellant. The liquid\n\nFig. 7.1 Rocket accelerations: thrust aligned with the main axis, gravity pointing down and total\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 161\n\n\n\npropellants present in these vehicle stages consist of fuel and oxidizer, which\n\nrequire therefore two separate tanks for each stage. For solid propellant, the rocket\n\nstage itself is filled with the propellant that presents a typical grain section e.g.,\n\ncylindrical or star. The grain geometry defines the propellant mass flow function of\n\nburn time. One example is provided in Fig. 7.3.\n\nIn the typical configuration, there are several lower stages; the reason for this is\n\nthe mathematical impossibility of reaching a stable orbit with a single stage, which\n\nwas proven as early as 1903 by the Russian scientist Tsiolkovsky [5]. Equation (7.1)\n\nis the ideal rocket equation that describes the achievable increase of velocity (DV)\nas a function of the engine specific impulse (Isp) and the natural logarithm of\nthe ratio between the initial (Mi) and final mass (Mf). Isp is an indication of the\nperformance of the engine and can be computed as the ratio between the exhaust\n\nvelocity and g0, the gravity acceleration at sea level.\n\nDV \u00bc Isp ? g0 ? lnMi\nMf\n\n: (7.1)\n\nThe DV required to achieve a stable orbit is 9.5 km/s, which produces a final\nmass equal to 4% of the initial mass with a specific impulse of 300 s. This\n\npercentage is not feasible at the current state of technology. In the case of three\n\nstages with the same efficiency and effectiveness (which is not fully practicable),\n\neach stage has a final mass of 33% of the initial mass: 10% structural and 23%\n\nfor the upper stages and payload. The final payload in orbit is around 1% of the\n\ninitial mass.\n\nThere exists the possibility to have cross-feeding: the propellant present in a\n\nstage is used by engines present in another stage. This is the case for the Space\n\nShuttle [6] and for some vehicles still in the design phase (Falcon Heavy\u2014[7]).\n\n7.2.1.3 Upper Stage\n\nThe upper stage is active at higher altitudes where the atmospheric effects\n\nare negligible and the attitude of the vehicle can be optimized. This presents the\n\nadvantage of a precise placement of the payload in the target orbit. This procedure\n\nhowever requires a dedicated avionics system. Together with the reduced dimension\n\nof the stage, this causes a structural ratio (i.e., structural mass divided by total stage\n\nmass) higher than in the lower stages. Size then becomes interesting as the propellant\n\nmass is a function of the tank volume whereas the structural mass is a function of the\n\ntank surface: with smaller tanks the ratio between surface and volume increases.\n\nIn a typical launcher trajectory optimization, the controllability of the vehicle, in\n\nparticular of the upper stage, is reduced to ensure that the attitude angle rates are\n\nlower than the upper limit achievable by the control system of that stage. At this\n\nlevel of complexity, it is generally not required to design the position of the\n\nactuators or the performance of the sensors on board.\n\n162 F. Cremaschi\n\n\n\n7.2.1.4 Other Components\n\nA launcher is composed of several additional components, most of these may\n\nhowever be annexed to the ones presented above: the mass of the interstage\n\nbetween stages 1 and 2 can be added to the structural mass of stage 1. This\n\napproximation will be accurate since the interstage is jettisoned together with the\n\nexhausted stage 1. Similarly the payload adapter mass should be incorporated in\n\nthe upper stage structural mass. The payload, on the other hand, is treated differ-\n\nently. In general, this component is modeled as a variable mass that the optimizer\n\ncan modify to reach the target orbit.\n\n7.2.2 Mission Modeling\n\nThe starting point of the trajectory is normally located on the surface of a planet,\n\nwhich need not exclusively be Earth, but also possibly the Moon or Mars. The\n\ntrajectory can be separated into a propelled ascent phase where the various stage\n\nengines are activated, an optional coast phase to reach the desired altitude, and\n\nfinally the orbit insertion phase. Each phase is characterized by various accelerations\n\nacting on the vehicle. During the ascent phase, the propulsion, aerodynamics, and\n\ngravity are predominant, whereas in the coast and orbit insertion, the gravity is\n\nperturbed by third body and solar radiation effects. The particularity of reusable or\n\npartially reusable launch vehicles should also be mentioned: a part of the vehicle\n\nwill actively return to the planet surface to be refurbished and reused for future\n\nmissions.\n\n7.2.2.1 Phases Definition\n\nThe launcher trajectory should be divided into several phases to consider the events\n\nthat occur during the mission: separation of a component, coast arc or change in the\n\nattitude control law. These discontinuities in the models cannot be introduced\n\nwithin a single phase otherwise, the optimization process might not work properly;\n\nthe differentiability is a necessary condition inside each integration range.\n\nA typical launcher starts its mission locked to the launchpad: the engines are not\n\nyet ignited, or the thrust provided is still lower than the vehicle weight. For solid\n\npropulsion the time between the ignition and the liftoff is extremely short (lower\n\nthan 1 s); in the case of liquid propulsion this time may be longer, which allows for\n\nthe verification of correct engine operation before releasing the vehicle; such is the\n\ncase for Falcon 9 [7].\n\nThe second phase is a vertical liftoff required to gain velocity before the gravity\n\nturn phase and to avoid any contact with the launchpad tower.\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 163\n\n\n\nThe vertical flight ends with the pitch-over maneuver: the launcher turns in the\n\ndirection of the azimuth required to achieve the target orbit inclination, thus defining\n\nthe initial plane of the trajectory. The azimuth is defined as the angle between the\n\nvehicle\u2019s horizontal velocity and the north direction. This maneuver has this name\n\nbecause the pitch, the angle between the main axis of the rocket and the horizon,\n\nchanges from 90? to lower values. Onmost launch-pads a restricted azimuth range is\nallowed, e.g., at Kourou, it is from ?10? to 91.5?. The reason is usually related to\nsafety issues: the ground track of the rocket should not cross any populated area\n\nbecause, in case of aborted missions, fragments may create a risk for people. Should\n\nthe target orbit require a disallowed launch azimuth, a dog-leg maneuver is\n\nperformed during the flight: the yaw, i.e., angle between the projection of the main\n\nvehicle axis on the horizon and the north direction, changing the ground track\n\nconsiderably. This maneuver drastically reduces the performance of the rocket.\n\nThe next phase is called \u201cgravity turn\u201d: the rocket pitch angle changes automati-\n\ncally under the action of the gravity acceleration. This is true when the rocket is\n\naerodynamically stable otherwise, the gimbals (i.e., the pivoted supports that allow\n\nthe rotation of an object about a single axis) of the engine nozzle are required to\n\nconstantly align the thrust with the velocity vector. Figure 7.1 presents the rocket\n\nflying a gravityturn: the thrust acceleration is aligned with the main axis of the\n\nvehicle and with the velocity vector; the gravity acceleration pointing towards the\n\ncenter of the planet produces a total acceleration that is not aligned with the vehicle\n\nmain axis. The direction of the total acceleration causes the velocity vector at the\n\nnext time step to rotate creating an angle between themain axis of the vehicle and the\n\nvelocity vector itself (also known as the angle of attack). In case the aerodynamics of\n\nthe vehicle is stable, the generated moments reduce this angle to zero; unstable\n\naerodynamics requires the thrust control system to perform the same maneuver. The\n\npresence of an angle of attack different from zero when the dynamic pressure is\n\nhigher than 1 kPa generates forces and moments that could lead to the breakup of the\n\nrocket. The drag acceleration, not shown in Fig. 7.1, is aligned with the velocity and\n\nthe thrust acceleration, and thus does not influence the gravity turn.\n\nThe gravity turn phase is typical for the first stage and in some cases also for the\n\nsecond stage; the end of the gravity turn phase is normally performed when\n\nthe dynamic pressure reaches low values (lower than 1 kPa). In case the attitude\n\nof the vehicle is not controllable, the full-powered ascent is accomplished following\n\nthe gravity turn.\n\nAs soon as the heat-flux density drops under the typical value of 1,135 W/m2, at\n\nan altitude higher than 100 km, the thermal protection provided by the fairing is not\n\nrequired anymore and is therefore jettisoned.\n\nThe third stage and the upper stage in general present a fully optimizable attitude\n\ncontrol (pitch and yaw): the solver can modify the attitude profile during the upper\n\nstage burn phase, in order to minimize (respectively maximize) the objective\n\nfunction.\n\nIn case where the target orbit altitude is higher than the \u201cnatural\u201d altitude of the\n\nlauncher, it ismore efficient to insert a coast arc between two burns of the upper stage:\n\nthe first burn is required to increase the orbit apoapsis up to the target orbit altitude\n\n164 F. Cremaschi\n\n\n\nwith a periapsis higher than 120 km for safety reasons. The apoapsis and periapsis are,\n\nrespectively the two points at the largest and smallest distance from the central body\n\nin an elliptic orbit. During the coast phase, the rocket reaches the apoapsis, and a\n\nsecond burn is required to obtain a circular orbit at the desired altitude. This approach\n\nrequires a restartable upper stage, and it is more efficient than a single burn of the\n\nupper stage: e.g., the VEGA launcher [8] in a polar circular orbit at an altitude of\n\n500 km has a payload mass increase of 33%. The polar orbit has an inclination\n\nof exactly 90?: the orbit thus passes over the poles. The periapsis at the end of the first\nburn should be at least 120 km so that in case the upper stage engine would not restart\n\nat the apoapsis, there will be at least a second full orbit for a second attempt.\n\n7.2.2.2 Objective Function\n\nThe objective function is the most important \u201cplayer\u201d in the optimization game.\n\nApart from the maximization of the payload mass, additional typical objective\n\nfunctions for the optimization of the launcher trajectory are the minimization of\n\nthe gross lift-off weight (GLOW), the maximization of the orbit altitude, and more\n\nrecently the minimization of the launcher cost. The latter can be evaluated as a\n\nfunction of the propellant mass and the technological level of the various compo-\n\nnents of the launcher, engines, and stages.\n\nFor a parallel trajectory and vehicle design optimization, the objective function\n\ncan be dependent on some model parameter, e.g., fairing diameter.\n\nThe so-called Chebyshev objective function is quite interesting: it minimizes the\n\nhighest peak of a specified function (e.g., dynamic pressure) evaluated in the full\n\nmission or along a specific phase. This type of objective function is extremely\n\nuseful in cases when the peak is not located at the end of a phase; this is the case, for\n\ninstance, for the heat-flux density and the angle of view of a ground station.\n\nmin max f \u00f0x; u; t\u00dej jf g ? min\u00f0c\u00de\nf \u00f0x; u; t\u00de ? c : (7.2)\n\nThe minimization of the peak of a function (f) dependent on the states (x), the\ncontrols (u) and the time (t) is rewritten as the minimization of the Chebyshev\nparameter (c) with an additional path constraint that ensures that the function f is\nalways lower than the parameter c.\n\n7.2.2.3 Constraints\n\nThe constraints present in a typical launcher mission can be grouped in four\n\ncategories:\n\n\u2022 Initial boundary constraints, evaluated at the beginning of a phase, typically at\n\nthe beginning of the mission\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 165\n\n\n\n\u2022 Final boundary constraints, evaluated at the end of a phase, i.e. end of the\n\nmission\n\n\u2022 Path constraints, evaluated along a phase or all along the full mission\n\n\u2022 Parameter constraints, evaluation not linked to a precise time point\n\nAn example of initial boundary constraint is the initial position, coincident with\n\nthe launch-pad coordinates, as well as the initial azimuth range. For an airborne\n\nlauncher (Pegasus type), the separation velocity and altitude, are initial boundary\n\nconstraints.\n\nA nontrivial initial boundary constraint is related to the ratio between thrust and\n\nvehicle weight: the launchpad clamp should not release the vehicle until this value\n\nis higher than 1, otherwise, the rocket falls to the ground.\n\nrmin ? T\nmtot ? \u00f0g? V2h R= \u00de\n\n; (7.3)\n\nwhere rmin is the lower bound of the ratio, a typical value is 1.2. T is the thrust, mtot\nthe total mass, g the gravity acceleration, Vh the inertial horizontal velocity, and R\nthe distance between the vehicle and the center of the planet. The last term is the\n\ncontribution of the centrifugal acceleration.\n\nThe launcher mission presents several final boundary constraints: the launch-pad\n\nclearance, the fairing separation, the splashdown of jettisoned components, the load\n\nfactor, and, of course, the target orbit altitude and inclination. It is not enough to\n\nreach the required altitude: the nonradial component of the inertial velocity should\n\nprovide a centrifugal acceleration equal to the gravity acceleration at that altitude in\n\norder to achieve a stable orbit.\n\nVi \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\u00f0RE \u00fe h\u00de ? g\n\np\nVR \u00bc 0; (7.4)\n\nwhere Vi is the inertial velocity, RE is the Earth radius, h the target orbit altitude, and\nVR the radial component of the inertial velocity.\n\nThe constraints that should be evaluated during a phase or during the entire\n\nmission are related to the dynamic pressure, the heat-flux density (see Sect. 7.4.2),\n\nthe load factor for a nonconstant thrust profile (solid propellant), and the ground\n\nstation visibility. In particular, the latter should be enforced along the full trajectory,\n\nbut it could be relaxed during a long coast arc.\n\n7.3 Re-entry Modeling\n\nThis section presents the modeling of a typical reentry mission and of a typical\n\nre-entry vehicle itself; the concepts introduced here may be extended, due to their\n\nsimilarities to such vehicles, also to the flying back boosters and the descent phase\n\nof a space-plane or sounding rockets.\n\n166 F. Cremaschi\n\n\n\n7.3.1 Vehicle Modeling\n\nIn many ways the opposite of the launch vehicle, a reentry vehicle, is an aerospace\n\nobject whose primary function is bringing a certain mass from a starting orbit to the\n\nplanet surface. Included in this general definition are capsules, winged vehicles,\n\nlifting bodies as well as the descent phase of sub-orbital vehicles and reusable\n\nlaunchers.\n\nThe typical reentry vehicle may be modeled as a single component with struc-\n\ntural and, optionally, propellant mass. In this type of vehicles the propellant mass\n\nis the lower fraction in most of the cases, there is no propellant at all. The vehicle is\n\nthen composed of the structural skeleton, the electronics, and the payload, plus a\n\nheat shield in such cases when the vehicle is designed to survive the reentry.\n\nThe pure trajectory optimization of a reentry mission may consider the vehicle as\n\na point mass with the fixed thermal and aerodynamic characteristics used only for\n\nforces/moments computation and constraint definition. The situation becomes more\n\ninteresting in case of a design optimization parallel to the trajectory optimization:\n\nhere the shape of the vehicle and the thickness of the thermal protection system\n\n(TPS) can be modified by the solver with impact on the aerodynamics and on the\n\nvehicle mass. As for the launchers, in case of a constraint violation, the solver has\n\nthe possibility to modify the trajectory or the vehicle itself.\n\n7.3.1.1 Capsule\n\nThe first missions with re-entry vehicles were based on capsules. The reason for\n\nthis resides in the simplified design which is completely focused on the fulfillment\n\nof the basic function, namely taking a certain mass from orbit to the planet surface.\n\nThe shape can vary from spherical bodies (Vostok in 1961\u2014[9]), biconics,\n\ntruncated cones with a spherical nose to pure cones with a spherical nose\n\n(Fig. 7.2). The spherical part is normally in the direction of the flight.\n\nThis vehicle has no aerodynamically active surfaces, but it is able to produce a\n\nlift force in the same order of magnitude of the drag force in case the velocity is not\n\naligned with the main vehicle axis. The only exception is the spherical capsule: it\n\ngives rise to drag force, but no lift.\n\n7.3.1.2 Lifting Body and Winged Vehicle\n\nThe shape of the lifting body (e.g., HL20,[10]) and winged vehicle is completely\n\ndifferent from the capsules presented in Sect. 7.3.1.1. Interestingly, the modeling of\n\nthe two is extremely similar: the aerodynamics presents important differences, but\n\nthe model is almost identical for all three classes of vehicles.\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 167\n\n\n\nThese vehicles can have a propulsion system used for the de-orbit phase, a TPS\n\nnot uniformly distributed on the external surface of the vehicle and a wing plane\n\nproducing a lift perpendicular to this plane.\n\n7.3.2 Mission Modeling\n\nThe starting point of the trajectory is normally located in an orbit around an object.\n\nThis orbit can be elliptic, parabolic, or hyperbolic. The object is not limited to the\n\nEarth, but it could be a planet within the solar system, a natural satellite, or an\n\nasteroid. In cases where the initial orbit of the vehicle is stable, e.g., the periapsis\n\naltitude is greater than 120 km around the Earth, the vehicle requires a change in\n\nvelocity in order to start the re-entering trajectory. This delta velocity can be\n\nprovided by a propulsion system integrated in the vehicle, by a physical character-\n\nistic of the vehicle (aero breaking) or by separation from the main vehicle, e.g.,\n\nlander and orbiter.\n\nThe next phase is normally a long coast until the vehicle reaches the\n\natmosphere\u2019s upper layers (120 km on the Earth). The following atmosphere\n\nphase terminates with the impact on the planet, satellite, or asteroid. The most\n\ninteresting phase is the atmospheric one: there the most commonly used control\n\nmethod is based on the lift force that the reentry vehicle can provide with a nonzero\n\nangle of attack the attitude change of the vehicle can be used to reduce loads\n\n(mechanical and thermal) and to modify the trajectory and the impact position. For\n\nexample the control of the bank angle, the angle between the vehicle plane of\n\nsymmetry and the local vertical plane, changes the direction of the lift force towards\n\nthe side of the vehicle. This increases the cross-range of the trajectory.\n\nFig. 7.2 Re-entry vehicle example: cone with spherical nose\n\n168 F. Cremaschi\n\n\n\nA multiple parachute deployment could precede the impact when an atmosphere\n\nis present. If an atmosphere is not present, the integrated propulsion system could\n\nbe exploited to reduce the impact velocity and loads to within acceptable limits. The\n\nrationale behind the implementation of at least two parachute systems is the wide\n\nrange of velocities the vehicle exhibits. The first parachute is also called drogue-\n\nchute: it is small and robust its function is to reduce the velocities from transonic or\n\nhigh subsonic to low sub-sonic and to stabilize the vehicle attitude. The second\n\nparachute system is normally the main one. Being larger, it decelerates the vehicle\n\ndown to the accepted impact velocity. The modeling of the parachute opening could\n\nbe critical due to the almost instantaneous change of the aerodynamic drag force;\n\nthe suggestion is to provide the reference area as a smooth function of altitude and\n\nvelocity. This model is representative of the reality where an altimeter (or more\n\nrecently, a GPS) is used to trigger the parachute opening.\n\n7.3.2.1 Objective Function\n\nThe reentry vehicle encounters critical conditions during its trajectory down to the\n\nplanet surface. These criticalities are normally not present at the end of the mission;\n\nfor this reason it is not possible to use an objective function based on the final value\n\nof a function. The Chebyshev objective function is well suited (see Sect. 7.2.2.2).\n\nThis approach is typically applied to the load factor, to the dynamic pressure, or to\n\nthe heat-flux density (see Sect. 7.4.2).\n\nA special objective function dedicated to the reentry trajectory optimization is\n\nrelated to the \u201csafety\u201d factor. The plots of the trajectory at the maximum load factor,\n\nrespectively, maximum dynamic pressure, and maximum heat-flux density create a\n\nsort of re-entry corridor. The maximization of the distance between the effective\n\ntrajectory and the maximum sustainable loads, mechanical and aero-thermal,\n\nproduces an optimized trajectory of the vehicle in the middle of this corridor.\n\nIn this case, an unexpected event (uncertainty on the atmosphere characteristics)\n\nwill not produce a trajectory that violates any of the vehicle constraints.\n\nAnother typical objective function is related to the down- and cross-range: the\n\ndistance between the impact position and the initial position computed respectively\n\nalong the orbital plane and perpendicular to it. These are good indicators of the\n\nefficiency of the vehicle aerodynamics and they provide a potential area that can\n\nbe reached during the re-entry trajectory. Requesting a final position outside this\n\narea produces infeasible optimization runs.\n\n7.3.2.2 Constraints\n\nMost of the constraints have already been cited in this section: load factor, dynamic\n\npressure, as well as heat-flux density evaluated during the entire mission. The final\n\npoint of the trajectory is also constrained in term, of position, velocity, and attitude:\n\nthe reason is that in most scenarios, the reentry trajectory stops at the terminal area\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 169\n\n\n\nenergy management (TAEM). The last phase to the ground is simulated with other\n\ntools and is not part of the optimization task. A useful constraint is related to the\n\ndistance from the target final position:\n\ndmax ? RE ? a cos ?Rf ? ?RT\n? ?\n\n: (7.5)\n\nwhere dmax is the maximum acceptable distance, RE is Earth\u2019s radius; Rf and RT are\nthe normalized vector between the center of the planet and, respectively, the final\n\nposition of the vehicle and the target final position.\n\nAn important class of constraints is related to the attitude control of the vehicle:\n\nmost of the vehicles can fly only with a reduced range of angle of attack outside of\n\nwhich the vehicle cannot be controlled. This range is normally a function of the\n\nMach number (i.e., the ratio between the vehicle velocity and the speed of sound),\n\nthen a path constraint is required in order to check the angle of attack versus the\n\nMach number. As an extreme example, some vehicles can fly only at the so-called\n\ntrimmed condition: the angle of attack is a fixed function of the Mach number\n\nwithout any possibility for optimization.\n\n7.4 Common Physical Equations\n\nThe launch and reentry trajectory is a complex scenario that should be modeled\n\nusing simplified physics equations that describe with sufficient accuracy the sub-\n\nsystems of the vehicle and the environment. During the various phases of the\n\nmission, different sets of equation of motion could be implemented in order to\n\nconsider the sensitivity to some parameters (e.g., the flight-path inclination angle\n\nduring atmospheric reentry phase) and the particularity of the physical model (e.g.,\n\nattitude control based on the Euler angles during burn phases).\n\n7.4.1 Aerodynamics\n\nThe aerodynamic forces and moments are modeled using a set of coefficients\n\nfunction of the Mach number and the vehicle attitude (e.g., the angle of attack).\n\nEach coefficient (CD) linearly links the square of the vehicle air-path speed (Va), the\natmospheric density (r), and the reference area (Aref) with the corresponding force;\nin the example provided, the drag force (D) is\n\nD \u00bc 1\n2\n? r ? Va2 ? Aref ? CD: (7.6)\n\nIn the case of aerodynamic moments the reference length (lref) is also present in\nthe equations:\n\n170 F. Cremaschi\n\n\n\nMQ \u00bc 1\n2\n? r ? Va2 ? Aref ? lref ? CMq: (7.7)\n\nIn a second level of complexity, two main regimes that these vehicles encounter\n\nmay be modeled separately, and a bridging function is responsible for a smooth\n\ntransition between the free molecular flow and the continuous regime. These\n\nregimes are identified by the Knudsen number [11] computed at each time step of\n\nthe vehicle mission.\n\n7.4.2 Aero-Thermodynamics\n\nThe interaction between atmosphere and vehicle not only produces aerodynamic\n\neffects but also heat flux due to convection and radiation. Depending on the flying\n\nregime, which can be supersonic or hypersonic, different models should be applied\n\nto compute the heat transmission at the stagnation point at the thermal equilibrium.\n\nFor launchers, the fairing protects the payload for the first part of the mission;\n\nwhen the heat flux becomes lower than a critical value, the fairing can be jettisoned,\n\nwhile monitoring the heat-flux to ensure it remains low for the rest of the mission.\n\nIn this scenario a free-stream enthalpy convective model is fairly accurate:\n\n_Q \u00bc 1\n2\n? r ? Va3; (7.8)\n\nwith the heat-flux density ( _Q) being a function of the atmospheric density (r) and\nthe air-path velocity (Va).\n\nIn the case of atmospheric flight in the supersonic regime, more complex models\n\nbased on Detra\u2013Kamp\u2013Riddel formulation should be used. These consider also the\n\nnose radius and different exponents for atmospheric density and air-path velocity.\n\nThe interested reader can find a comprehensive treatment in [12].\n\nFor hypersonic regimes (which are also referred to atmospheric phases) the\n\nheat-flux density should be computed with the modified Fay\u2013Riddell formula.\n\n_Q \u00bc C\nffiffiffiffiffiffiffiffiffiffiffiffiffi\nr ? Va2\nrN\n\ns\n? Va\n\n2\n\n2\n\u00fe 1004\u00f0T ? TW\u00de\n\n? ?\n: (7.9)\n\nAmong the already specified elements, this formula also contains a model\n\nconstant (C), the nose radius (rN), the free-stream temperature (T) and the wall\ntemperature of the vehicle (TW). As for the supersonic model, the interested reader\nis referred to [13].\n\nAll the models presented so far refer to the convective heat flux in the case of\n\nradiative flux, the specific formulation is also a function of the atmospheric com-\n\nposition. Additional details are outside the scope of the present chapter but may be\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 171\n\n\n\nfound in [14]. Assuming the vehicle to be in thermal equilibrium, it is possible to\n\ncompute analytically the wall temperature combining Eqs. (7.9) and (7.10).\n\nTW ? 4\nffiffiffiffiffiffiffiffi\n_Q\n\ns ? e\n\ns\n; (7.10)\n\nwhere s is the Boltzmann constant and e the emissivity.\n\n7.4.3 Propulsion\n\nThere are two main types of propulsion systems, the first one is based on liquid\n\npropellant and the second one on solid propellant. A third option is the so-called\n\nhybrid engine: the propellant is present in both states, liquid the oxidizer and solid\n\nthe fuel.\n\nLiquid propulsion has several advantages; among others it is restartable and\n\nthrottleable (i.e., capable of having the thrust varied), and it has a higher specific\n\nimpulse. Solid propulsion on the other hand has higher thrust, higher propellant\n\ndensity, and is both cheaper and more reliable.\n\nIn general, liquid propulsion is more flexible, but it requires a more complex\n\nengine, and therefore the cost increases whereas reliability is reduced. The propel-\n\nlant mass flow \u00f0 _mpb\u00de can be kept almost constant along the burn duration, with an\neffective thrust (T) changing only due to the backward pressure (pa) of the atmo-\nsphere acting on the exit area of the nozzle (Ae).\n\nT \u00bc Isp ? g0 ? _mpb ? Ae ? pa (7.11)\n\nfor solid propulsion, Eq. (7.11) is still valid, and the mass flow, however, is not\n\nconstant along the burn duration; the respective thrust profile is dependent on the\n\ngrain geometry. Some examples of thrust profiles are presented in Fig. 7.3.\n\nFor an exhaustive description of the solid propulsion, please refer to [15].\n\nThrust Thrust\n\nTime Time Time Time\n\nThrust Thrust\n\nFig. 7.3 Solid propulsion thrust profiles: progressive, neutral, regressive and exotic\n\n172 F. Cremaschi\n\n\n\n7.4.4 Equations of Motion\n\nThe motion of the launcher or reentry vehicle can be described with a set of\n\ndifferential equations linearized at each time step. In the literature, there are several\n\nsets of equations of motion (EoM), most of these are dedicated to a specific phase of\n\nthe flight. In general, there are sets based on position and velocity and set based on\n\nthe orbital elements.\n\nThis list is not intended to be exhaustive, but it presents a good overview of the\n\npossibilities in this field; the complete mathematical equations may be found in [14].\n\n\u2022 Inertial Cartesian: position and velocity are Cartesian components of an inertial\n\nreference system centered in the center of the planet; this set is extremely robust,\n\nbut the sensitivity is poor due to bad scaling; it is required for polar trajectories.\n\n\u2022 Inertial velocities: position is defined as longitude, declination, and radius; the\n\nvelocity components are in the same frame, radial, longitudinal, and along\n\ndeclination; it is the most efficient set for normal launcher trajectories, but it\n\nhas a singularity over the poles.\n\n\u2022 Flight-path velocities: the position components are identical to the inertial\n\nvelocities; the velocity components are the flight-path speed modulus, flight-\n\npath inclination angle, and flight-path heading angle; it has a singularity over the\n\npoles where the flight-path speed is zero; due to a dedicated state it is the most\n\nefficient in cases where the velocity direction (flight-path angle) is highly\n\nsensitive, i.e., re-entry trajectories and atmospheric cruise phase.\n\n\u2022 Launch-pad: the position and velocity derivative are zero, only the mass is\n\nintegrated to account for burned propellant mass.\n\n\u2022 Accelerate flight-path: the movement is allowed only along one direction;\n\nthe accelerations perpendicular to this direction are not considered; this set is\n\nintended for a movement along a fixed rail.\n\n\u2022 Perturbed Keplerian elements: the states are the six Keplerian elements; in the\n\ncase of a trajectory outside the influence of the atmosphere, these are more\n\nefficient than the set based on the inertial velocity; they have several singularities.\n\n\u2022 Equinoctial elements: orbital elements best suited for trajectories outside the\n\ninfluence of the atmosphere; in contrast to the Keplerian elements, this set has no\n\nsingularities and it is to be preferred to the Keplerian set.\n\nThe above list refers to EoM that integrate the position and velocity of the\n\nvehicle treated as a point mass they can also be defined as 3 degrees of freedom\n\n(DoF). In some special situations, it could be required to integrate the attitude of the\n\nvehicle together with the position; these are known as 6 DoF EoM. These sets\n\ninclude position, velocity, attitude angles and attitude angle rates.\n\nThe attitude can be defined via Euler angles, i.e., the angles between the horizon\n\nand the body axis frame of the vehicle or with aerodynamic angles, the angles\n\nbetween the velocity vector and the body axis frame of the vehicle. Due to affinity,\n\neither the flight-path velocities with aerodynamics angles (flight-path 6 DoF) or\n\ninertial velocities with Euler angles (inertial velocities 6 DoF) are employed.\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 173\n\n\n\nAdditionally, the inertial velocities can be coupled with the quaternion angle for the\n\ndefinition and integration of the attitude.\n\nThe mathematical equations that define these set, are not reported in this chapter,\n\nbut the interested reader may find them in [14].\n\n7.4.5 Environment\n\nThe vehicle ordinarily moves inside an atmosphere subject to a gravity field,\n\ntogether with the wind these models define the environment of the mission. The\n\nwind is not of interest for satellite launchers, but it is a key factor for sounding\n\nrockets and the final descent phase with a parachute.\n\nThere are several models available in the literature for the atmosphere, from the\n\nsimple analytic but accurate United States (US) Standard 76 [16] to the experimen-\n\ntal and complex Earth-GRAM 2010 [17]. The reader should pay attention to the\n\ncomputational speed of each model since the optimization task requires the inte-\n\ngration of the full trajectory several times for each step: too complex and too slow a\n\nmodel would hinder the full optimization without achieving interesting results.\n\nA good compromise is presented by tabular data for the required functions (pres-\n\nsure, density, and speed of sound), data that reproduce the real conditions at the\n\nplace and time of the mission.\n\nAn analog evaluation should be performed for the gravity field of the central\n\nbody: a model based on a point mass enriched by series expansion of spherical\n\nharmonics is normally used, with the inclusion of the higher terms only. Referring\n\nto the Earth, the first coefficient of the Legendre polynomials J2 is quite strong, but\n\nfor a typical launcher vehicle, all the other coefficients may be neglected.\n\n7.5 Transcription Methods and Mathematical Solvers\n\nOnce the real problem is rewritten with simplified physical equations, this model\n\nshould be transcribed in a mathematical set of algebraic or trascendent equations, in\n\norder to be solved by non-linear programming methods (NLP solvers). The class of\n\ndirect transcription methods discretizes the entire problem on a grid, obtaining a\n\nnon-linear program. The values of the states and control variables are limited to the\n\ngrid points. An exhaustive mathematical dissertation can be found in [18].\n\n7.5.1 Historical Overview\n\nMethods for solving trajectory optimization (TO) problems have been developed\n\nsince the late 1960s. Different methods can be classified using key features.\n\n174 F. Cremaschi\n\n\n\nFor instance, such algorithms which require, not only the state, but also the adjoint\n\ndifferential equations, are called indirect methods. Those which do not require\n\nthe adjoints are termed direct methods. Algorithms which integrate the state or the\n\nadjoint differential equations from the initial time to the final time in one run are defined\n\nas single shooting methods; those that stop in between at user-specified intermediate\n\ngrid points and continue from these grid points with user-specified intermediate values\n\nfor the states are called multiple shooting methods. Furthermore, it is possible to\n\nclassify the methods according to whether the control, the state time histories, or\n\nboth of the optimal solution are approximated by somemodel function, e.g., piecewise\n\nlinear functions or polynomials. These algorithms solve the parametrized optimal\n\ncontrol problem, where the parameters define the control polynomial functions. If\n\nboth controls and states are approximated, this is known as the collocation method\n\n(see Sect. 7.5.3.2).\n\nAccording to these classifications, the sequential gradient restoration algorithm\n\n(SGRA,[19]) is an indirect method, as are the codes AeroSpace trajectory optimi-\n\nzation (ASTROP,[20]) and boundary value problem with switching conditions\n\n(BNDSCO,[21]). ASTROP has been used at the European Space Operations Center\n\n(ESOC) extensively for exo-atmospheric trajectory optimization. The program to\n\noptimize simulated trajectories (POST,[22]) uses a single shooting direct method\n\nwith control parametrization; it has been developed by the US industry. Optimal\n\ntrajectories by implicit simulation (OTIS,[23]) uses a direct collocation method and\n\nhas been developed by the US industry as well. Both these codes are in widespread\n\nuse at the National Aeronautics and Space Administration (NASA) and at various\n\nUS government laboratories as well as US universities, but they are not in general\n\navailable to European organizations. Sparse optimal control software (SOCS,[24])\n\nis an extremely fast direct collocation code, developed by J. Betts and commer-\n\ncialized by Boeing. Optimisation de performances Ariane (OPERA) is a direct\n\ncollocation code developed by the Office National d\u2019Etudes et de Recherches\n\nAe?rospatiales (ONERA) which also has seen widespread use in rocket trajectory\n\noptimization. TOMP [25] is a direct method, using single shooting, similar to the\n\nmethod adopted by POST. Multiple shooting code for direct optimal control\n\n(MUSCOD,[26]) is the first direct method that combines control parametrization\n\nwith multiple shooting. Trajectory optimization using direct collocation (TROPIC)\n\nand parameterized trajectory optimization by direct multiple shooting (PROMIS)\n\nare codes initially developed by DLR [27, 28]. TROPIC is a direct collocation code\n\nsimilar to the one used within OTIS but has additional features such as automatic\n\nfunction-and-parameter scaling. PROMIS is a similar method to MUSCOD but also\n\nhas parameter-and-function scaling and a very flexible problem interface. Colloca-\n\ntion and multiple shooting trajectory optimization software (CAMTOS,[29]),\n\ndeveloped by the University of Stuttgart and maintained by Astos Solutions, is a\n\nhybrid optimizer which allows the choice of collocation and multiple shooting in\n\neach phase. In a recent evolution (2011), the transcription method CAMTOS can\n\nutilize the European non linear programming (eNLP,[30]) solvers in parallel with\n\nthe Stanford University sparse nonlinear optimizer (SNOPT, [31]).\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 175\n\n\n\n7.5.2 Transcription and Solver Selection\n\nThe selection of the \u201cbest\u201d code for a particular problem depends on the complexity\n\nof the problem, on the level of user know-how in optimization theory, on the user\n\nexpertise and intent, and on features of the candidate code such as efficiency,\n\nachievable accuracy, robustness, ease of use, and convergence behavior. For\n\nproblems of moderate size and complexity, indirect methods such as multiple\n\nshooting with its implementation BNDSCO, have been applied successfully, espe-\n\ncially since recently a direct collocation method has been introduced as a \u201cprepro-\n\ncessor\u201d which has made the cumbersome task of estimating the values for the\n\nLagrange multipliers much easier, see, for instance, [32]. The level of know-how\n\nrequired to use this technique is nevertheless very high, since the user needs to\n\nimplement the necessary optimality conditions for each individual problem and\n\nthus needs a priori knowledge of the sequence of sub-arcs of the optimal solution.\n\nIn addition, the right-hand sides of the system of differential equations must be\n\nsufficiently differentiable which requires some effort in interpolation and approxi-\n\nmation. Once these initial difficulties (usually 95% of total time spent in solving a\n\nparticular problem) are overcome, indirect methods such as BNDSCO or ASTROP\n\nare extremely accurate and efficient\u2014better than any other technique. Accordingly,\n\nthis approach is to be favored if, for instance, the user intent is to generate a large\n\nnumber of solutions for varying boundary conditions.\n\nOn the other side of the spectrum is the class of direct methods that are based on\n\nparameterization of the control functions or on collocation. These techniques require\n\nless knowledge of optimization theory, no a priori knowledge of the type and\n\nsequence of sub-arcs of the optimal solution. They are robust, that is to say, relatively\n\ninsensitive to nonsmoothness of the mathematical models (right-hand side of the\n\ndifferential equations). In addition, they converge to an approximation of the solution\n\neven from rather inexact initial estimates. Numerical experiments have shown that in\n\nthis respect TROPIC performs better than TOMP or PROMIS. Further numerical\n\nexperiments with MUSCOD and PROMIS have shown that multiple shooting\n\nenlarges the convergence region in comparison to single shooting (TOMP) consider-\n\nably. These classes of methods are, however, less efficient and accurate than the\n\nindirect approaches. Despite these deficiencies, these techniques are usually pre-\n\nferred by non-expert users (for instance, engineers) for solving complex and even\n\nlarge-sized problems. The limit on problem size is determined by the maximum\n\nnumber of variables and constraints that the available NLPcodes can handle.\n\nOnce the transcription method has converted the simplified physical model into a\n\nset of equality constraints, the NLP solver can be applied to identify the optimal\n\ncontrol that minimizes the cost function. The solver can be a global optimizer, e.g.,\n\ngenetic algorithm, particle swarm, some alternative heuristic or a sequential qua-\n\ndratic programming (SQP) when dealing with differentiable functions. In the\n\nspecific case of launchers trajectory optimization, the typical problem presents\n\naround one thousand optimizable parameters and constraints with a sparse Hessian\n\nmatrix. These characteristics fit the capabilities of the SQP solvers, leaving the\n\napplication of global optimizer to rare cases.\n\n176 F. Cremaschi\n\n\n\n7.5.3 Direct Transcription Method Technical Details\n\nThe transcription method is intended as the interface between the simplified\n\nphysical equations presented in Sect. 7.4 and the mathematical SQP solver. Two\n\nexamples of transcription methods are presented, the first one implementing a\n\nmultiple shooting approach and the second a collocation approach.\n\n7.5.3.1 Multiple Shooting\n\nAs learned in Sect. 7.2.2.1, the trajectory is separated into several phases; for each\n\nphase a major grid is defined that contains the multiple shooting nodes (MSP in\n\nFig. 7.4): the states are integrated between two nodes with the possibility to have a\n\ndiscontinuity between the final integration and the value stored in the next node.\n\nThese discontinuities will be removed by the solver during the optimization pro-\n\ncess, but their presence allows flexibility that increases the robustness of the\n\nintegration and the convergence radius as opposed to a single shooting approach.\n\nIt is important to accurately select the number of nodes for each phase, a rule of\n\nthumb valuable for launchers suggests the insertion of a major grid node only in\n\nphases longer than 50 s and around one node every 100 s for longer phases. A high\n\nnumber of nodes increases the number of optimizable parameters and the time\n\nrequired by the solver to obtain a solution.\n\nEach phase contains also a control refinement grid for each control function; the\n\ncontrol is discretized, interpolating it along these nodes (CRP in Fig. 7.4). Several\n\nnodes are therefore required to compute a complex control profile.\n\nEach phase has a third grid containing the constraint evaluation nodes: the path\n\nconstraints are not evaluated at each time step as this would be too time consuming,\n\nMSPCRP PCEP CRPCRPCRPCRP\n\nState\n\nControl\n\nPath \nConstraint\n\nCRP\n\nControl may be discontinuous\n\nState must be continuous\n\n? = 0 ? = 1\n\nFig. 7.4 Transcription within a phase for multiple shooting approach\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 177\n\n\n\nbut only at the nodes present in the constraint grid (PCEP in Fig. 7.4). It is good\n\npractice to insert the constraint nodes in correspondence with the major grid and the\n\ncontrol refinement grid nodes (i.e., at the same normalized time).\n\nThe mathematical problem transferred to the solver is made by the states at each\n\nmajor grid node and the parameters; the constraint vector is incremented with the\n\ncontinuity condition at each MSP.\n\n7.5.3.2 Collocation\n\nSimilar to the multiple shooting, for each phase a major grid is defined that contains\n\nthe collocation nodes. In contrast to multiple shooting, the states are not integrated\n\nbut approximated with polynomials; these polynomials are created on the basis of\n\nthe state values at the major grid nodes. The discontinuity at each collocation node\n\nis automatically checked by the equality constraints between the polynomials and\n\nthe real state. Additionally, the equality between the first derivative of the real state\n\nand the first derivative of the polynomials is enforced not only at each collocation\n\nnode, but also at the midpoint of each collocation interval.\n\nViolation of these constraints will be removed by the solver during the optimi-\n\nzation process. It is important to note that a large number of collocation nodes are\n\nrequired to provide a realistic approximation of each state; a rule of thumb valuable\n\nfor launchers is to insert five major grid nodes in short phases (e.g., vertical liftoff)\n\nand between 30 and 50 nodes in longer phases. For reentry vehicles, the atmo-\n\nspheric phase is typically too long for just 50 nodes; one solution could be to insert\n\n20 nodes every 100 s with the possibility to refine the major grid during the\n\noptimization. A larger number of nodes require a larger number of optimizable\n\nparameters, and thus the time required by the solver to obtain a solution increases\n\naccordingly. The task of the user is therefore to identify the minimum number of\n\nnodes that provide a realistic solution.\n\nThe collocation transcription method uses the major grid nodes for the control\n\napproximation as well, and no additional control refinement grid is required.\n\nFor each phase there is a path constraint evaluation grid: the path constraints are\n\nevaluated only at the nodes present in this grid. It is good practice to insert one\n\nconstraint node for each major grid node.\n\nThe mathematical problem passed to the solver is given by the states at each\n\nmajor grid node and by the parameters; the constraint vector is incremented with the\n\ncollocation constraints active on the state and on their first derivatives.\n\nAn important point that should be noted is that the solution \u201cseen\u201d by the solver\n\nis formed only by polynomials: each state is correct with respect to the major grid\n\nnodes, but it could be completely different from the reality inside each collocation\n\ninterval. It is therefore required to compare the polynomial solution with the real\n\nstate history obtained by integrating the full trajectory in one shot. Should the two\n\ntrajectories differ too greatly, a denser major grid is required.\n\nA detailed mathematical explanation may be found in [33].\n\n178 F. Cremaschi\n\n\n\n7.5.3.3 Comparison Between Collocation and Multiple Shooting\n\nTable 7.1 summarizes the main characteristics of the direct multiple shooting and\n\ncollocation transcription method.\n\n7.6 Trajectory Optimization Examples\n\nSeveral examples of launch and reentry vehicle problems are presented hereafter,\n\nwith a strong emphasis on the advantages and disadvantages of the various tran-\n\nscription methods and solvers when applied to \u201creal\u201d problems.\n\nThe examples exploit the wide application of this field: from a simple launch to\n\nescape orbit and the performance map of a polar launcher, over the design of a new\n\nfamily of launchers with a multimission approach to the SpaceLiner [34] ascent,\n\ncruise, and approach to Amsterdam. The re-entry of the atmospheric reentry demon-\n\nstrator (ARD,[35]) completes the chapter.\n\n7.6.1 Conventional Launcher Examples\n\nTwo conventional launcher examples are proposed: Ariane 5 to an escape orbit and\n\nthe performance map of VEGA in polar orbits.\n\n7.6.1.1 Ariane 5 to Escape\n\nThe typical launcher trajectory optimization exercise is the maximization of the\n\npayload mass for a given vehicle and target orbit: e.g., compute the payload mass\n\nof Ariane 5 on an escape orbit. This example is typically solved with inertial\n\nvelocity EoM for all the phases. There are no coast arcs, so an attitude control\n\nbased on Euler angles (pitch and yaw) provides the best performance. These angles\n\nlink directly the main force, i.e., the thrust aligned with the main vehicle axis, with\n\nTable 7.1 Comparison between direct multiple shooting and collocation\n\nDirect multiple shooting Collocation\n\nSlow, due to state integration\n\nwith variable step size\n\nFaster (no \u201cintegration\u201d)\n\nAccuracy of the state integration\n\nis sufficient in most cases\n\nNot as accurate, accuracy should be verified\n\nwith a single shooting simulation\n\nSmaller convergence radius Larger convergence radius\n\nLess robust More robust\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 179\n\n\n\nthe states, i.e., the velocity components aligned with horizon and radius. The first\n\nphases until the jettison of the solid booster use the gravity turn control law; the\n\nlast part of the main stage burn and all the upper stage phase present instead a fully\n\noptimized attitude control. While both transcription methods may be applied, the\n\nrelatively short integration time allows for the use of the more accurate multiple\n\nshooting method.\n\nApart from the typical launcher constraints, two challenges are particular for this\n\nmission: the full coverage from ground stations and the impact point of the main\n\nstage of Ariane 5. The ground track starting from Kourou crosses the Atlantic\n\nOcean; a single ground station cannot cover the entire mission therefore, a network\n\nof stations with overlapping visibility is required to ensure safety margins. These\n\nstations are situated on several islands, depending on the target inclination however,\n\nthe coverage may not be complete; an interesting exercise for the solver would be\n\nthe modification of the trajectory to ensure full coverage. Alternatively, the optimi-\n\nzation could identify the most convenient location for a mobile station on a ship.\n\nThe second challenge is the impact position of the main stage: a trajectory optimi-\n\nzation which does not take this into account could produce an impact location on\n\nland, namely Africa or Europe depending on the target inclination. This situation is\n\nnot acceptable therefore, the solver modifies the trajectory to move the impact\n\nposition in the Atlantic Ocean. Additionally, the walking impact line of the upper\n\nstage can be analyzed: the line formed by the instantaneous impact position of the\n\nupper stage in case of an abort mission. The best design could allow this line to lay\n\nonly in the Atlantic Ocean; this is possible since the impact line is defined only with\n\na periapsis altitude less than zero.\n\n7.6.1.2 VEGA Performance Map\n\nAdding a level of complexity it is possible to compute the performance map of a\n\ndifferent launcher, VEGA, in polar circular orbit at different altitudes. The problem\n\nis still related to the maximization of the payload mass, but there are some\n\nimportant differences in the model that require modifications also in the transcrip-\n\ntion method. The polar orbit has an inclination of 90? and the vehicle could pass\nover the north or south pole, where the inertial velocities EoM, in particular the\n\nlongitudinal component, are not defined (see also Sect. 7.4.4). This configuration\n\ncannot be analyzed by the solver; therefore a different set of equation of motion is\n\nrequired, namely inertial Cartesian. The application of this set to the entire trajec-\n\ntory is not efficient due to the poor scaling of the velocity and position components.\n\nA better approach would be to apply the Cartesian EoM only in the phases that cross\n\nthe pole, whereas the other phases are modeled with inertial velocities EoM.\n\nAdditionally, VEGA presents a restartable upper stage, and for orbit altitude\n\nhigher than 300 km, the implementation of a two burn strategy is beneficial. This\n\nleads to the presence of a coast arc with a duration dependent on the final orbit\n\naltitude, e.g., 1,800 s for an orbit altitude of 700 km. This long ballistic phase\n\n180 F. Cremaschi\n\n\n\npresents no attitude control, it is a simple transfer to the apoapsis, but the numeric\n\nintegration required by the multiple shooting method is quite time consuming due\n\nto the long duration. A performance improvement can be achieved with a collocation\n\nmethod applied only to this long phase: the advantages of both methods can be\n\nappreciated, the accuracy of multiple shooting and the fast computation of the\n\ncollocation.\n\n7.6.2 Multi-mission Optimization\n\nAn interesting example is provided in the design of a full family of launchers, where\n\na simple two stage to orbit (TSTO) system is enriched by a variable number of\n\nstrap-on boosters to target different orbits or payload masses. The frame is the\n\nfuture launcher preparatory program (FLPP,[36]) of the European Space Agency\n\n(ESA); this program aims at providing a sound substitute to the current European\n\nlaunchers. The new vehicle family should have the flexibility to cover the entire\n\nrange of payload in the institutional and commercial markets. An intelligent\n\nsolution is the optimization of all the required missions in a parallel run with\n\nthe various configurations linked by parameter constraints: constraints that act on\n\nthe model of the vehicle. In this scenario, the stage masses and the attitude controls\n\nare optimized in order to achieve the most efficient solution in all the considered\n\nmissions. From a computational point of view, the dimension of the optimization\n\nproblem depends linearly on the number of missions that are optimized in parallel.\n\nAs discussed above, it is best to keep this number as low as possible.\n\nSome effort is required in order to define a sound objective function formed by\n\nvarious terms which attempt to evaluate the quality of the launcher family. Unfor-\n\ntunately, a clear and comprehensive metric to define the launcher performance does\n\nnot exist, so the reader should analyze each specific case and apply his knowledge\n\nand intelligence to identify the key elements.\n\n7.6.3 Sub-orbital Space-Plane\n\nIn recent years, there has been a particular interest in fast transport systems which\n\nallow a long track (e.g., AustraliaEurope) in a fraction of the time required by a\n\nnormal airplane. Such a mission comprises an ascent and a reentry trajectory\n\nmaking this scenario a challenging optimization problem. In particular, SpaceLiner\n\nconsists of two main stages: a booster and a winged orbiter that hosts the crew and\n\npassengers. The first phases are identical to a normal launcher mission with a\n\nvertical liftoff, pitch-over, and gravity turn control law. At the separation between\n\nbooster and orbiter, the latter activates its engine with a low pitch angle to\n\nmaximize the downrange of the mission. After the orbiter main engine cutoff\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 181\n\n\n\n(MECO), a long cruise phase (approximately 5,000 s) enables the vehicle to reach\n\nits final destination. This phase is defined as \u201ccruise\u201d instead of \u201ccoast\u201d because it is\n\nbelow 60 km of altitude and the aerodynamic forces allow for an optimizable\n\nattitude control of the vehicle.\n\nSimilarly to the example presented in Sect. 7.6.1.2 it can be noted that a\n\ncollocation method applied to this long phase will improve the optimization\n\nperformance, but a novel aspect should be mentioned: there is no thrust available.\n\nThe previous examples with optimizable attitude control are based on Euler angles\n\ndefined between the main axis of the vehicle and the horizon. This set is the most\n\nindicated in the case of phases with active propulsion systems, normally aligned\n\nwith the main vehicle axis; but in this case, the implementation of a new set of\n\nattitude control angles is more convenient. The available control forces during the\n\ncruise phase are only the aerodynamic ones, then the angle of attack and bank angle\n\n(angle between the plane of the wings and the horizon) should be implemented.\n\nAdditionally, the flight-path velocity EoM are more efficient during the optimiza-\n\ntion process, due to the sensitivity of the flight-path inclination angle in this type of\n\ntrajectories.\n\nThe optimized trajectory is able to avoid any fluctuations during the cruise phase\n\n(skips) associated with a remarkable propellant mass reduction provided by the\n\ncapability to fly out of the plane that contains the starting and final position (initial\n\nguess in Fig. 7.5). The reason for this is that in flying from Australia to Europe the\n\nvehicle has to additionally counteract the Earth rotation, then a reduced initial\n\nazimuth (almost to the North Pole in Fig. 7.5) minimizes the Earth rotation effect\n\nincreasing the required range.\n\nFig. 7.5 SpaceLiner\n\nSydney\u2013Amsterdam\n\ntrajectories, the initial guess\n\nalong the great circle and the\n\nfully optimized versus north\n\n182 F. Cremaschi\n\n\n\n7.6.4 Atmospheric Re-entry Demonstrator\n\nThis vehicle is part of a controlled reentry mission performed in Europe with\n\nrecovery of the capsule. The vehicle is a conical spheroid, similar to the Apollo\n\ncapsule with sets of thrusters to control the attitude angles.\n\nThe mission performed in 1998 was suborbital, but an interesting exercise could\n\nbe the optimization of the reentry trajectory from the ISS orbit: a low earth orbit\n\nwith 51? inclination. Due to the high orbit inclination, the landing position could be\nset on a wide geographical belt. After a short deorbit phase with the optimization\n\nactive on the duration and direction of the thrust force, the vehicle starts its descent\n\nuntil the encounter with the atmosphere at an altitude of 120 km. During the\n\natmospheric phase, the optimizer becomes active on the attitude control of\n\nthe vehicle. The deorbit phase can be solved with a multiple shooting, method,\n\nwhereas the atmospheric phase is more efficient with collocation. The objective\n\nfunction is the safety of the trajectory in the reentry corridor (see Sect. 7.3.2.1).\n\nA parametric study can be performed linking the periapsis altitude at the end of\n\nthe deorbit impulse with the landing dispersion area extension. The latter can be\n\ncomputed by perturbing the atmospheric characteristics, the aerodynamic\n\ncoefficients and the initial state.\n\nA typical maneuver during a controlled reentry is the bank reversal (Fig. 7.6).\n\nThe vehicle flying at a zero bank angle presents the lift in the vertical plane, and this\n\nproduces the highest down-range capability. It is clear that it is not possible to use\n\nthis setting: a non-nominal parameter could not be compensated. The solution is to\n\nfly with a bank angle always higher than 10? or 20?; this will create a sort of\nperformance reserve that would allow the compensation for non-nominal\n\nparameters (e.g., higher atmospheric density). The side effect is that the trajectory\n\nwill deviate from the orbital plane creating a form of spiral; it is then required to\n\nchange the sign of the bank angle from time to time. The final ground track then\n\nresembles a large \u201cS.\u201d.\n\n7.7 Conclusions\n\nThe optimization of launchers and reentry missions is undoubtedly an interesting\n\ntask that requires a solid understanding of aerospace, physics, and mathematics.\n\nBoth classes of vehicles have in common their interaction with the planet atmo-\n\nsphere during the completion of their mission. The required simplifications\n\nintroduced during the modeling exercise are instrumental in improving the perfor-\n\nmance of the optimization task. With the help of examples taken from real world\n\napplications, the author analyzes and solves several scenarios from a numerical\n\npoint of view. These missions could be used as a template in solving future\n\nchallenges in this aerospace field.\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 183\n\n\n\nReferences\n\n1. Whitmore, S.: Interim access to the international space station using evolved expendable\n\nlaunch vehicles. J. Spacecraft Rockets, 0022\u20134650 47(3), 503\u2013520 (2010)\n\n2. Varvill, R., Bond, A.: The SKYLON Spaceplane\u2014progress to realisation. J. Br. Interplanet.\n\nSoc. (JBIS) 61, 412\u2013418 (2008)\n\n3. Spies, J., Kuczera, H.: The sub-orbital hopper\u2014one of FESTIP\u2019s preferred concepts. In:\n\nAIAA-1999-4945, AIAA International Space Planes and Hypersonic Systems and\n\nTechnologies Conference, 9th, Norfolk, VA, 1\u20135 Nov (1999)\n\n4. Hall, R.D., Shayler, D.J.: Soyuz: A Universal Spacecraft. Springer Praxis Books. Praxis/\n\nSpringer, New York (2003)\n\n5. Tsiolkovsky, KE.: The Exploration of Cosmic Space by Means of Reaction Devices. Sci. Rev.\n\n(5) (1903)\n\n6. Lockney, D.: NASA\u2019s Space shuttle: perspectives on technology transfer. In: AIAA-2010-\n\n8885, AIAA SPACE Conference and Exposition, Anaheim, California, 30 Aug\u20132 Sept (2010)\n\n7. Koenigsmann, H., Musk, E., Gurevich, G.: The Falcon launch vehicle. IAC-03-V.1.08. In:\n\n54th International Astronautical Congress of the International Astronautical Federation,\n\nBremen, Germany, 29 Sept\u20133 Oct (2003)\n\n8. Lafranconi, R., Lopez, M.: VEGA The Small Launcher for Europe. ESA Publications Divi-\n\nsion, Noordwijk (2005)\n\n9. Hall, R., Shayler, D.: The Rocket Men: Vostok & Voskhod, the First Soviet Manned\n\nSpaceflights. Springer, Berlin (2001). 350pp\n\n10. Ehrlich, C.F.: HL-20 concept\u2014design rationale and approach. J. Spacecraft Rockets,\n\n0022\u20134650 30(5), 573\u2013581 (1993)\n\n11. Bird, G.A.: Molecular Gas Dynamics and the Direct Simulation of Gas Flows. Oxford\n\nUniversity Press, Oxford (1994)\n\n12. Detra, R.W., Kemp, N.H., Riddell, F.R.: Addendum to heat transfer to satellite vehicles\n\nreentering the atmosphere. Jet Propulsion 27(12), 1256\u20131257 (1957)\n\n13. Fay, J.A., Riddell, F.R.: Theory of stagnation point heat transfer in dissociated air. J. Aeronaut.\n\nSci. 25, 73\u201385 (1958)\n\n14. Wiegand, A., Cremaschi, F., et al.: ASTOS Model Library, Version 7.0.2. Astos Solutions\n\nGmbH, Stuttgart (DE) (2011)\n\nFig. 7.6 Example of bank\n\nreversals during a controlled\n\nreentry\n\n184 F. Cremaschi\n\n\n\n15. Sutton, G.P.: Rocket Propulsion Elements. Wiley, New York (1992)\n\n16. COESA: U.S. Standard Atmosphere 1976. NOAA, NASA, US Air Force, Washington (1976)\n\n17. Justus, C.G., Duvall, A., Johnson, D.L.: Adv. Space Res. 34, 1731 (2004)\n\n18. B\u20acuskens, C., Wassel, D.: The ESA NLP solver WORHP. In: Fasano, G., Pinter, J.D. (eds.)\nModeling and Optimization in Space Engineering. Springer, New York (2013)\n\n19. Miele, A.: Recent advances in gradient algorithms for optimal control problems. J. Optim.\n\nTheor. Appli. 17(5, 6), 361\u2013430 (1975)\n\n20. Dixon, L.C.W., Bartholomew-Biggs, M.C.: Adjoint-control transformations for solving prac-\n\ntical optimal control problems. Optim. Contr. Appl. Meth. 2, 365\u2013381 (1981)\n\n21. Bulirsch, R.: Die Mehrzielmethode zur numerischen L\u20acosung von nichtlinearen Randwert-\nproblemen und Aufgaben der optimalen Steuerung. Carl-Cranz-Gesellschaft, Heidelberg\n\n(1971)\n\n22. Brauer, G.L., Cormick, D.E., Stevenson, R.: Capabilities and Applications of the Program to\n\nOptimize Simulated Trajectories (POST). NASA CR-2770, Washington (1987)\n\n23. Hargraves, C.R., Paris, S.W.: Direct trajectory optimization using nonlinear programming and\n\ncollocation. J. Guidance Contr. Dynam. 10(4), 338\u2013342 (1987)\n\n24. Betts, J.: SOCS User Guide Release 7.1. The Boeing Company, Chicago (2009)\n\n25. Kraft, D.: FORTRAN-Programme zur numerischen Loesung optimaler Steuerungsprobleme.\n\nIn: Deutsche Forschungs- und Versuchsanstalt f\u20acur Luft- und Raumfahrt (DFVLR), IB 515-80/\n3 (1980)\n\n26. Bock, HG., Plitt, KJ.: A multiple shooting algorithm for direct solution of optimal control\n\nproblems. In: Preprints of IFAC International Federation of Automatic Control, 9th World\n\nCongress, 2\u20136 July, pp. 243\u2013247 (1984)\n\n27. J\u20acansch, C., Paus, M.: Aircraft trajectory optimization with direct collocation using movable\ngridpoints. In: Proceedings of the 1990 American Control Conference, San Diego, 23\u201325 May,\n\npp. 262\u2013267 (1990)\n\n28. Schnepper, CA: Large grained parallelism in equation-based flowsheeting using interval\n\nnewton / generalized bisection techniques. Dissertation, University of Illinois (1992)\n\n29. Gath, PF., Well, KH.: Trajectory optimization using a combination of direct multiple shooting\n\nand collocation. In: AIAA 2001\u20134047, AIAA Guidance, Navigation, and Control Conference,\n\nMontre?al, Canada, 6\u20139 Aug 2001 (2001)\n\n30. Erb, S.: eNLP: Application-centric NLP-based optimization in the Aerospace market. ITN\n\nSadco First Industrial Workshop, Paris, 2 Mar (2011)\n\n31. Gill, P.E., Murray, W., Saunders, M.A.: SNOPT: An SQP algorithm for large-scale\n\nconstrained optimization. SIAM J. Optim. 12, 979\u20131006 (2002)\n\n32. Stryck, O.V., Bulirsch, R.: Direct and indirect methods for trajectory optimization. J.C. Baltzer\n\nAG, Scientific Publishing Company. Annal. Oper. Res. 37, 357\u2013373 (1992)\n\n33. Becerra, V.M.: Practical direct collocation methods for computational optimal control. In:\n\nFasano, G., Pinter, J.D. (eds.) Modeling and Optimization in Space Engineering. Springer,\n\nNew York (2013)\n\n34. Sippel, M.: Promising roadmap alternatives for the SpaceLiner. Acta Astronaut. 66, 11\u201312\n\n(2010)\n\n35. Macret, JL., Leveugle, T.: The ARD (atmospheric re-entry demonstrator) program\u2014an over-\n\nview. In: AIAA-1999-4934, AIAA International Space Planes and Hypersonic Systems and\n\nTechnologies Conference, 9th, Norfolk, VA, 1\u20135 Nov (1999)\n\n36. Pilchen, J et al.: Future launchers preparatory programme (FLPP)\u2014preparing for the future\n\nthrough technology maturation and integrated demonstrators status and perspectives. In: IAC-\n\n08-D 2.5.2, 59th International Astronautical Congress Glasgow, UK (2008)\n\n7 Trajectory Optimization for Launchers and Re-entry Vehicles 185\n\n\n\nChapter 8\n\nGlobal Optimization of Interplanetary Transfers\n\nwith Deep Space Maneuvers Using Differential\n\nAlgebra\n\nPierluigi Di Lizia, Roberto Armellin, Francesco Topputo,\n\nFranco Bernelli-Zazzera, and Martin Berz\n\nAbstract In this chapter, differential algebra is used to globally optimize multi-\n\ngravity assist interplanetary trajectories with deep space maneuvers. A search space\n\npruning procedure is adopted, and the trajectory design is decomposed into a\n\nsequence of sub-problems. As far as differential algebra is used, the objective\n\nfunction and the constraints are represented by Taylor series of the design variables\n\nover boxes in which the search space is divided. Thanks to the polynomial repre-\n\nsentation of the function and the constraints, a coarse grid can be used, and an\n\nefficient design space pruning is performed. The manipulation of the polynomials\n\neases the subsequent local optimization process, so avoiding the use of stochastic\n\noptimizers. These aspects, along with the efficient management of the list of boxes,\n\nmake differential algebra a powerful tool to design multi-gravity assist transfers\n\nincluding deep-space maneuvers.\n\nKeywords Global optimization \u2022 Multi-gravity assist transfer \u2022 Deep-space\n\nmaneuver \u2022 Search space pruning \u2022 Differential algebra\n\nP. Di Lizia (*) \u2022 R. Armellin \u2022 F. Topputo \u2022 F. Bernelli-Zazzera\nDipartimento di Ingegneria Aerospaziale, Politecnico di Milano, Via La Masa 34, 20156 Milano,\n\nItaly\n\ne-mail: dilizia@aero.polimi.it; armellin@aero.polimi.it; topputo@aero.polimi.it;\n\nbernelli@aero.polimi.it\n\nM. Berz\n\nDepartment of Physics and Astronomy, Michigan State University, East Lansing MI 48824, USA\n\ne-mail: berz@msu.edu\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_8,\n# Springer Science+Business Media New York 2013\n\n187\n\nmailto:dilizia@aero.polimi.it\nmailto:armellin@aero.polimi.it\nmailto:topputo@aero.polimi.it\nmailto:bernelli@aero.polimi.it\nmailto:berz@msu.edu\n\n\nList of Acronyms\n\nDA Differential algebra\n\nDSM Deep space maneuver\n\nFP Floating point\n\nGASP Gravity assist space pruning\n\nMGA Multi-gravity assist\n\n8.1 Introduction\n\nThe preliminary design of impulsive interplanetary transfers is usually carried out\n\nin the frame of the patched-conics approximation. Within this context, different\n\nconic arcs are linked together to define the whole transfer trajectory. The patched-\n\nconics method allows the designer to define multiple gravity assist (MGA)\n\ntransfers. MGA trajectories are usually made up of a sequence of planet-to-planet\n\ntransfers in which the spacecraft exploits each planet encounter to achieve a\n\nvelocity change. This method is well established in astrodynamics, and several\n\npast missions have used MGA trajectories to reach both inner and outer planets.\n\nIn the last two decades, mission designers have exploited the benefits of\n\napproaching complex MGA problems from a global optimization standpoint.\n\nNowadays, the aim of the trajectory design is not only to find a solution, but also\n\nto find the best solution in terms of propellant consumption, while still achieving the\n\nmission goals. In the formalism of global optimization, this means that the problem\n\nconsists in looking for the optimal solution in those regions of the search space that\n\nsatisfy the problem constraints. Unfortunately, the MGA problems are characterized\n\nby an objective function with a large number of clustered minima, which are\n\nprevalently associated to the complex relative motion of the planets and to the\n\nnonlinearities governing the simple Kepler problem. This causes local optimization\n\nmethods to converge to local minima. Hence, despite their efficiency, they should be\n\navoided when looking for the global minimum of a MGA problem, at least in the first\n\nstage of the search process.\n\nExtensive work has been devoted to address the global optimization of MGA\n\ntransfers with impulsive maneuvers. This is mainly done by applying stochastic\n\n[1, 2, 3], branch and bound [4], meta-model-based [5], and combined [6] methods.\n\nAlthough some of them showed good performances, they tend to be computation-\n\nally inefficient if not tailored on the MGA problem and on the structure of its\n\nsearch space.\n\nThe gravity assist space pruning (GASP) is a global optimization method that\n\naddresses this issue. GASP relies on a systematic evaluation of the objective and\n\nconstraint functions on a grid of points distributed over the search space. The\n\nconstraints are used to efficiently prune the search space [7]. Thanks to the\n\nparticular class of interplanetary transfers solved by GASP, the planet-to-planet\n\narcs making up the whole transfer are treated independently, and forward and\n\n188 P. Di Lizia et al.\n\n\n\nbackward constraining is applied. This way, the search space is preprocessed, and\n\nglobal optimization algorithms are employed in the reduced domain [8].\n\nThe class of MGA transfers formulated above does not cover all possible\n\ntrajectories for a chemical-propelled spacecraft. An important option to take into\n\naccount is the introduction of deep-space maneuvers (DSM). DSM are impulsive\n\nmaneuvers, usually carried out between two planet encounters to improve the\n\nperformances of a trajectory. When DSM are included into a MGA transfer, the\n\nresulting trajectory is usually referred to as MGA-DSM.\n\nUnfortunately, pruning the solution space of MGA-DSM transfers is not trivial.\n\nFirst of all, the increased number of variables and the larger search space inhibits\n\nthe use of a systematic approach to the pruning process. Moreover, local minima\n\ntend to proliferate, which makes difficult the detection of big prunable regions.\n\nThus, it is necessary to rethink the whole pruning process implemented in GASP,\n\nand to reformulate it when DSM are included.\n\nDifferential algebra (DA) is proposed in this chapter as a valuable tool to address\n\nthis task. Differential algebra serves the purpose of automatic differentiation, i.e.,\n\nthe accurate computation of the derivatives of functions in a computer environment.\n\nThis goal is actually achieved by replacing the classical implementation of the real\n\nalgebra with the proper implementation of a new algebra based on Taylor\n\npolynomials. Given a generic function f of v variables, the Taylor expansion of f\nup to any desired order k can be easily obtained from a computer algorithm that\nimplements its evaluation.\n\nThe main idea behind the introduction of DA techniques into the pruning process\n\nis the substitution of the pointwise evaluation of the constraints, typical of GASP,\n\nwith the computation of their Taylor expansions with respect to the design\n\nvariables. The Taylor expansions are used to approximate the functions over\n\nboxes of the search space, and polynomial bounders are then exploited to estimate\n\ntheir ranges within each box. Consequently, the pointwise approach proposed in\n\nGASP can be substituted by a sampling process relying on box samples. This results\n\nin the possibility of enlarging the grid for the domain discretization, and reducing\n\nconsiderably the computational burden.\n\nThe chapter is organized as follows. A short description of the method underly-\n\ning GASP is given in Sect. 8.2. Then, the implementation of a DA-based GASP\n\nalgorithm is presented in Sect. 8.3. The introduction of DSM is addressed in Sect.\n\n8.4. The performances of the resulting algorithm are assessed in Sect. 8.5, and some\n\nfinal remarks conclude the chapter.\n\n8.2 Gravity Assist Space Pruning\n\nAn MGA transfer is modeled in GASP as a sequence of conic arcs, each patched to\n\nthe subsequent one by a powered gravity assist maneuver. Consequently, a transfer\n\ninvolving n planets is a n-dimensional problem, as n epochs are needed to identify\nthe position of the planets at each encounter. The main idea behind GASP is to split\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 189\n\n\n\nthe whole trajectory in its elementary arcs. With reference to Fig. 8.1, if Pi and Ti,\ni \u00bc 1; . . . ; n, are used to denote the planets and the epochs of the corresponding\nencounters, respectively, the arc connecting Pi to Pi + 1 can be treated as a two-\ndimensional subproblem with variables Ti and Ti + 1.\n\nFor each subproblem, three constraints are imposed:\n\n\u2022 Maximum DV at departure (first arc only) and arrival (last arc only).\n\u2022 Maximum DV at gravity assist.\n\u2022 Minimum pericenter radius at gravity assist.\n\nThese constraints can be profitably used to prune the search space. Consider, as\n\nan example, the first two arcs of an MGA transfer. These are characterized in the\n\n(T1, T2) and (T2, T3) spaces, respectively (see Fig. 8.2). A uniform grid of points is\nbuilt to sample each of the search spaces. For each point in (T1, T2), the constraints\nof the P1\u2013P2 transfer are evaluated. If any constraint is violated, the point is pruned\n\nFig. 8.1 Reduction of the MGA transfer to a cascade of two-dimensional subproblems\n\nFig. 8.2 Constraint propagation mechanism in GASP\n\n190 P. Di Lizia et al.\n\n\n\naway, together with all its subsequent combinations with the remaining epochs.\n\nIn particular, if an entire row corresponding toT2 \u00bc T2 yields unfeasible constraints\nin (T1, T2), the entire column corresponding to T2 \u00bc T2 in (T2, T3) is pruned away.\nSimilar statements hold for the subsequent arcs. This process is called forward\n\nconstraint propagation. Analogously, a backward constraint propagation can be\n\nimplemented. The final result is a reduced search space including only feasible\n\nregions, where optimization tools are run. The reduced dimension of the search\n\nspace improves the performances of the optimization algorithms (the reader may\n\nrefer to [7, 8] for details).\n\n8.3 Gravity Assist Space Pruning with Differential Algebra\n\nThe use of differential algebra has been proposed in [9] to improve the\n\nperformances of GASP. In the DA-based implementation of GASP, the search\n\nspace is split into boxes, which are processed in place of grid points. More\n\nspecifically, the point-wise evaluation of the constraint functions is substituted by\n\nthe computation of their Taylor expansion over the sampling boxes. A polynomial\n\nbounder is then used to estimate the ranges of the functions within each box and to\n\nprune away unfeasible boxes. The formulation of the algorithm GASP into the DA\n\nframework is briefly described in this section. The reader may refer to [9] for\n\nadditional details.\n\n8.3.1 Notes on Differential Algebra\n\nDifferential algebra finds its origin in the attempt to solve analytical problems by an\n\nalgebraic approach [10]. Historically, the treatment of functions in numerics has\n\nbeen based on the treatment of numbers, and the classical numerical algorithms are\n\nbased on the mere evaluation of functions at specific points. DA techniques rely on\n\nthe observation that it is possible to extract more information on a function than its\n\nmere values. The basic idea is to bring the treatment of functions and the operations\n\non them to the computer environment in a similar way as the treatment of real\n\nnumbers. Referring to Fig. 8.3, consider two real numbers a and b. Their transfor-\nmation into the floating-point representation, a and b, respectively, is performed to\noperate on them in a computer environment. Then, given any operation? in the set\nof real numbers, an adjoint operation ? is defined in the set of floating-point (FP)\nnumbers so that the diagram in Fig. 8.3 commutes (The diagram commutes\n\napproximately in practice due to truncation errors.). Consequently, transforming\n\nthe real numbers a and b into their FP representation and operating on them in the\nset of FP numbers returns the same result as carrying out the operation in the set of\n\nreal numbers and then transforming the achieved result in its FP representation.\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 191\n\n\n\nIn a similar way, let us suppose two k-differentiable functions f and g in v\nvariables are given. In the framework of differential algebra, the computer operates\n\non them using their k-th order Taylor expansions, F and G, respectively. Therefore,\nthe transformation of real numbers in their FP representation is now substituted by\n\nthe extraction of the kth order Taylor expansions of f and g. For each operation in\nthe space of k-differentiable functions, an adjoint operation in the space of Taylor\npolynomials is defined so that the corresponding diagram commutes, i.e., extracting\n\nthe Taylor expansions of f and g and operating on them in the space of Taylor\npolynomials returns the same result as operating on f and g in the original space and\nthen extracting the Taylor expansion of the resulting function.\n\nThe straightforward implementation of differential algebra in a computer allows\n\nto compute the Taylor coefficients of a function up to a specified order k, along with\nthe function evaluation, with a fixed amount of effort. The Taylor coefficients of\n\norder k for sums and product of functions, as well as scalar products with reals, can\nbe computed from those of summands and factors; therefore, the set of equivalence\n\nclasses of functions can be endowed with well-defined operations, leading to the\n\nso-called truncated power series algebra [11, 12]. Similarly to the algorithms for\n\nfloating-point arithmetic, the algorithms for functions follow, including methods to\n\nperform composition of functions, to invert them, to solve nonlinear systems\n\nexplicitly, and to treat common elementary functions [10, 13]. In addition to\n\nthese algebraic operations, the DA framework is endowed with differentiation\n\nand integration operators, therefore finalizing the definition of the DA structure.\n\nThe differential algebra sketched in this section is implemented in the software\n\nCOSY-Infinity [14].\n\nFor the sake of a more comprehensive illustration of the DA basics, the next\n\nsection introduces the simplest nontrivial differential algebra for the first-order\n\nexpansion of univariate functions. The reader can refer to [10] for its extension to\n\nthe arbitrary order expansion of multivariate functions.\n\n?\n\nT\n\nT\nf ? g\n\n?\n\nP\n\nP\n\na, b ? R f, ga, b ? FP\n\na ? b a  ?  b F  ?  G\n\nF, G\n\nFig. 8.3 Analogy between the floating-point representation of real numbers in a computer\n\nenvironment (left figure) and the introduction of the algebra of Taylor polynomials in the\ndifferential algebraic framework (right figure)\n\n192 P. Di Lizia et al.\n\n\n\n8.3.1.1 The Minimal Differential Algebra\n\nConsider all ordered pairs (q0, q1), with q0 and q1 real numbers. Define addition,\nscalar multiplication, and vector multiplication as follows:\n\n\u00f0q0; q1\u00de \u00fe \u00f0r0; r1\u00de \u00bc \u00f0q0 \u00fe r0; q1 \u00fe r1\u00de;\nt ? \u00f0q0; q1\u00de \u00bc \u00f0t ? q0; t ? q1\u00de;\n\n\u00f0q0; q1\u00de ? \u00f0r0; r1\u00de \u00bc \u00f0q0 ? r0; q0 ? r1 \u00fe q1 ? r0\u00de:\n(8.1)\n\nThe ordered pairs with the above arithmetic are called 1D1. The multiplication of\nvectors is seen to have (1, 0) as the unity element. The multiplication is commuta-\n\ntive, associative, and distributive with respect to addition. Together, the three\n\noperations defined in Eq. (8.1) form an algebra. Furthermore, they form an exten-\n\nsion of real numbers, as \u00f0r; 0\u00de \u00fe \u00f0s; 0\u00de \u00bc \u00f0r \u00fe s; 0\u00de and (r, 0) ?(s, 0) \u00bc (r ?s, 0), so\nthat the reals are included.\n\nThe multiplicative inverse of the pair (q0, q1) in 1D1 is\n\n\u00f0q0; q1\u00de?1 \u00bc\n1\n\n?q0\n;? q1\n\nq20\n\n? ?\n; (8.2)\n\nwhich is defined for any q0 6\u00bc0.\nOne important property of this algebra is that it has an order compatible with its\n\nalgebraic operations. Given two elements (q0, q1) and (r0, r1) in 1D1, it is defined\n\n\u00f0q0; q1\u00de< \u00f0r0; r1\u00de if q0 < r0 or \u00f0q0 \u00bc r0 and q1<r1\u00de;\n\u00f0q0; q1\u00de> \u00f0r0; r1\u00de if \u00f0r0; r1\u00de < \u00f0q0; q1\u00de;\n\u00f0q0; q1\u00de\u00bc \u00f0r0; r1\u00de if q0 \u00bc r0 and q1 \u00bc r1:\n\n(8.3)\n\nAs for any two elements (q0, q1) and (r0, r1) only one of the three relation holds, 1D1\nis said totally ordered. The order is compatible with the addition and multiplication;\n\nfor all (q0, q1), (r0, r1), (s0, s1) ? 1D1, it follows (q0, q1) < (r0, r1) ) \u00f0q0; q1\u00de\n\u00fe\u00f0s0; s1\u00de<\u00f0r0; r1\u00de \u00fe \u00f0s0; s1\u00de , and (s0, s1) > (0, 0) \u00bc 0 ) (q0, q1) ?(s0, s1) <\n(r0, r1) ?(s0, s1).\n\nThe number d \u00bc (0, 1) has the interesting property of being positive but smaller\nthan any positive real number; indeed (0, 0)< (0, 1)< (r, 0)\u00bc r. For this reason d is\ncalled an infinitesimal or a differential. In fact, d is so small that its square vanishes.\nSince for any (q0, q1) ?1D1\n\n\u00f0q0; q1\u00de \u00bc \u00f0q0; 0\u00de \u00fe \u00f00; q1\u00de \u00bc q0 \u00fe d ? q1; (8.4)\n\nthe first component is called the real part and the second component the differential\n\npart.\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 193\n\n\n\nThe algebra in 1D1 becomes a differential algebra by introducing a map ? from\n1D1 to itself, and proving that the map is a derivation. Define ? : 1D1 ! 1D1 by\n\n@\u00f0q0; q1\u00de \u00bc \u00f00; q1\u00de: (8.5)\n\nNote that\n\n@f\u00f0q0; q1\u00de \u00fe \u00f0r0; r1\u00deg \u00bc @\u00f0q0 \u00fe r0; q1 \u00fe r1\u00de \u00bc \u00f00; q1 \u00fe r1\u00de\n\u00bc \u00f00; q1\u00de \u00fe \u00f00; r1\u00de \u00bc @\u00f0q0; q1\u00de \u00fe @\u00f0r0; r1\u00de\n\n(8.6)\n\nand\n\n@f\u00f0q0; q1\u00de ? \u00f0r0; r1\u00deg \u00bc @\u00f0q0 ? r0; q0 ? r1 \u00fe r0 ? q1\u00de \u00bc \u00f00; q0 ? r1 \u00fe r0 ? q1\u00de\n\u00bc \u00f00; q1\u00de ? \u00f0r0; r1\u00de \u00fe \u00f00; r1\u00de ? \u00f0q0; q1\u00de\n\u00bc @f\u00f0q0; q1\u00deg ? \u00f0r0; r1\u00de \u00fe \u00f0q0; q1\u00de ? @f\u00f0r0; r1\u00de:g\n\n(8.7)\n\nThis holds for all (q0, q1), (r0, r1)? 1D1. Therefore, ? is a derivation and (1D1, ?) is\na differential algebra.\n\nThe most important aspect of 1D1 is that it allows the automatic computation of\nderivatives. Assume to have two functions f and g and to put their values and their\nderivatives at the origin in the form (f(0), f 0(0)) and (g(0), g0(0)) as two vectors in\n1D1. If the derivative of the product f ?g is of interest, it has just to be looked at the\nsecond component of the product (f(0), f 0(0)) ?(g(0), g0(0)), whereas the first\ncomponent gives the value of the product of the functions. Therefore, if two\n\nvectors contain the values and the derivatives of two functions, their product\n\ncontains the values and the derivatives of the product function. Defining the\n\noperator [ ] from the space of differential functions to 1D1 via\n\n\u00bd f ? \u00bc \u00f0f \u00f00\u00de; f 0\u00f00\u00de\u00de; (8.8)\n\nit holds\n\n\u00bd f \u00fe g? \u00bc \u00bd f ? \u00fe \u00bdg?;\nf ? g\u00bd ? \u00bc \u00bd f ? ? \u00bdg? (8.9)\n\nand\n\n1=g\u00bd ? \u00bc \u00bd1?=\u00bdg? \u00bc 1=\u00bdg? (8.10)\n\nby using (8.2). This observation can be used to compute derivatives of many kinds\n\nof functions algebraically by merely applying arithmetic rules on 1D1, beginning\nfrom the value and the derivative of the identity function \u00bdx? \u00bc \u00f0x; 1\u00de \u00bc x\u00fe dx .\nConsider the example\n\n194 P. Di Lizia et al.\n\n\n\nf \u00f0x\u00de \u00bc 1\nx\u00fe \u00f01=x\u00de (8.11)\n\nand its derivative\n\nf 0\u00f0x\u00de \u00bc \u00f01=x\n2\u00de ? 1\n\n\u00f0x\u00fe \u00f01=x\u00de\u00de2 : (8.12)\n\nThe function value and its derivative at the point x \u00bc 3 are\n\nf \u00f03\u00de \u00bc 3\n10\n\n; f 0\u00f03\u00de \u00bc ? 2\n25\n\n: (8.13)\n\nEvaluating the function (8.11) in the DA framework at \u00f03; 1\u00de \u00bc 3\u00fe dx yields\n\nf \u00f0\u00f03; 1\u00de\u00de \u00bc 1\u00f03; 1\u00de \u00fe 1=\u00f03; 1\u00de \u00bc\n1\n\n\u00f03; 1\u00de \u00fe \u00f01=3;?1=9\u00de\n\u00bc 1\u00f010=3; 8=9\u00de \u00bc\n\n3\n\n10\n; ? 8\n\n9\n=\n100\n\n9\n\n? ?\n\u00bc 3\n\n10\n;? 2\n\n25\n\n? ?\n:\n\n(8.14)\n\nThus, the real part of the result is the value of the function at x \u00bc 3, whereas the\ndifferential part is the value of the derivative of the function at x\u00bc 3. This is simply\njustified by applying the relations (8.9) and (8.10).\n\n\u00bd f \u00f0x\u00de? \u00bc 1\nx\u00fe 1=x\n\n? ?\n\u00bc 1\u00bdx\u00fe 1=x?\n\n\u00bc 1\u00bdx? \u00fe \u00bd1=x? \u00bc\n1\n\n\u00bdx? \u00fe 1=\u00bdx?\n\u00bc f \u00f0\u00bdx?\u00de:\n\n(8.15)\n\nThe method can be generalized to treat common intrinsic functions.\n\n8.3.2 Representation of Objective and Constraint Functions\n\nThe evaluation of the objective and constraint functions in MGA transfers involves\n\nsolving implicit equations, which become parametric when their Taylor expansion\n\nin the design variables is of interest. Three implicit equations have to be solved in\n\nthe model adopted. Two of them already appear in simple planet-to-planet transfers.\n\nThese are illustrated with a practical example in the following. Let us consider the\n\ntransfer from planet P1 to planet P2 sketched in Fig. 8.4.\nThe objective function for this problem is the overall DV; this can be evaluated\n\nby using two design variables. A common choice is selecting the departure epoch\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 195\n\n\n\nfrom P1, T1, and the time of flight, t12. The arrival epoch at P2 is T2 \u00bc T1 \u00fe t12, and\nthe position and velocity of P1 and P2 at both ends of the transfer (r1, v1 and r2, v2,\nrespectively) are obtained through their planetary ephemerides. Given r1, r2, and\n\nt12, the corresponding Lambert\u2019s problem is solved to compute the heliocentric\ninitial and final velocities, V1 and V2, respectively. The two velocity impulses\n\nrequired to accomplish the transfer are DVi \u00bc Vi ? vi, i \u00bc 1, 2.\nProblem Statement. Let x\u00bc {T1, t12}, optimal two-impulse transfers from P1 to P2\nare found by solving\n\nmin\nx\n\nDV\u00f0x\u00de subject to DV1\u00f0x\u00de ? DVmax1\nDV2\u00f0x\u00de ? DVmax2 ;\n\n(8.16)\n\nwhereDV \u00bc DV1 \u00fe DV2 \u00bc kDV1k \u00fe kDV2k and DV1max and DV2max are maximum\nallowed values for DV1 and DV2, respectively.\n\nThe evaluation of planetary ephemerides is required to compute ri and vi, for\n\ni\u00bc 1, 2. An analytical ephemeris model is used, which is based on interpolating the\nplanetary orbital elements delivered by JPL\u2019s Horizons system [15] with cubic\n\nsplines. The analytical model supplies the eccentricity of the planet orbit, e, and the\nmean anomaly of the planet, M, at the evaluation epoch. Then, the Kepler equation\n\nf \u00f0E\u00de \u00bc E? e sinE?M \u00bc 0 ; (8.17)\n\nmust be solved for the eccentric anomaly, E, which is necessary to evaluate the\nplanet position and velocity.\n\nThe second implicit equation appears in the solution of the Lambert problem for\n\nV1 and V2. In Lambert\u2019s problem, the initial position, final position, and the time of\n\nflight between the two positions are given. Solving Lambert\u2019s problem defines the\n\nKeplerian orbit that connects the two position vectors in the given time, allowing\n\nthe calculation of the velocities at the initial and final positions. Lambert\u2019s theorem\n\nstates that the time of flightDt \u00bc t2 ? t1 depends only on the semi-major axis a, the\n\nV2\n\n?V2\n\n?V1\nV1u2\n\nu1\n\nr2\n\nr1\n\nP2\n\nP1\n\nFig. 8.4 A two-impulse planet-to-planet transfer\n\n196 P. Di Lizia et al.\n\n\n\nsum of the two radii r1 + r2, and the distance between the initial and final positions,\ni.e., the chord length c \u00bc jjr2 ? r1jj [16]. The time required for the transfer can be\nwritten as\n\nDt \u00bc\nffiffiffiffiffi\na3\n\nm\n\ns\n\u00f02kp\u00fe \u00f0E2 ? e sinE2\u00de ? \u00f0E1 ? e sinE1\u00de\u00de; (8.18)\n\nwhere E1 and E2 are the eccentric anomalies of the initial and final positions\nrespectively, measured on the connecting arc. The problem, now is to find the\n\ncorrect values of a, E1, E2, and e that give the desired time of flight. As Lambert\nstated, however, the transfer time depends only on the three quantities mentioned\n\nearlier. The two radii and the chord length are already known from the problem\n\ndefinition. The semi-major axis is the only unknown parameter. Thus, it is possible\n\nto write the transfer time as a function of the semi-major axis only, or some other\n\nparameters such as p or DE. In our approach, based on Battin\u2019s algorithm [16], the\nnonlinear equation to be solved is\n\nA\u00f0x\u00de ? Dt \u00bc 0; (8.19)\n\nin which\n\nA\u00f0x\u00de \u00bc g\u00f0x\u00de3=2\u00f0a\u00f0x\u00de ? sin a\u00f0x\u00de ? b\u00f0x\u00de \u00fe sinb\u00f0x\u00de\u00de: (8.20)\n\nThe functions a(x) and b(x) are related to x via the relations\n\nsin2\n1\n\n2\na\u00f0x\u00de \u00bc s\n\n2g\u00f0x\u00de sin\n2 1\n\n2\nb\u00f0x\u00de \u00bc s? c\n\n2g\u00f0x\u00de ; (8.21)\n\nwith\n\ng\u00f0x\u00de \u00bc s\n2\u00f01? x2\u00de ; (8.22)\n\nand the semi-perimeter\n\ns \u00bc \u00f0r1 \u00fe r2 \u00fe c\u00de=2: (8.23)\n\nNote that the relation between a and x is simply given by\n\na \u00bc s\n2\u00f01? x2\u00de : (8.24)\n\nOnce Eq. (8.19) is solved, the initial and final heliocentric velocities of the\n\nspacecraft are computed via algebraic and transcendental functions.\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 197\n\n\n\nThe third implicit equation occurs when transfers with powered gravity assists\n\nare considered. In a powered gravity assist, the spacecraft provides a tangential\n\nimpulse at the pericenter of the incoming hyperbola. Therefore, the planeto-centric\n\ntrajectory is made up of two arcs of hyperbola patched together (see Fig. 8.5).\n\nThe angle a, usually referred to as bending angle, between the incoming and the\noutgoing asymptotic velocities, v1\n\nin and v1\nout, respectively, is related to the\n\npericenter radius via [8]\n\nf \u00f0rp\u00de \u00bc arcsin a\n?\n\na? \u00fe rp \u00fe arcsin\na\u00fe\n\na\u00fe \u00fe rp ? a \u00bc 0 ; (8.25)\n\nwhere a? \u00bc 1=\u00f0vin1 ? vin1\u00de and a\u00fe \u00bc 1=\u00f0vout1 ? vout1 \u00de . The angle a can be easily\ncomputed from the two heliocentric arcs connected at the gravity assist. The\n\nsolution of the implicit equation (8.25) delivers the pericenter radius of the\n\nplanetocentric trajectory. The planetocentric velocities vp\nin and vp\n\nout at the\n\npericenter, corresponding to the incoming and outgoing hyperbolic arcs, respec-\n\ntively, are computed using rp, v1\nin, and v1\n\nout. Thus, the magnitude of the impulsive\n\nmaneuver at the pericenter is simply Dvp \u00bc kvoutp ? vinp k.\nA classical numerical method for the solution of implicit equations can be used\n\nto solve Eqs. (8.17)\u2013(8.25) for a point-wise evaluation of the objective and con-\n\nstraint functions. This is not true when the Taylor expansion of the objective and\n\nconstraint functions is of interest, as the implicit equations become parametric in\n\nthe design variables. This is briefly illustrated for Eq. (8.17) in the following.\n\nSimilar arguments hold for Eqs. (8.19) and (8.25).\n\nLet us consider the evaluation of planetary ephemerides. In the DA framework,\n\nwe are interested in the Taylor expansion of planet\u2019s position and velocity with\n\nrespect to the evaluation epoch. Thus, Kepler\u2019s equation (8.17) is not solved for real\n\nvalues of the eccentric anomaly, but rather for its Taylor expansion with respect to\n\nthe epoch. More specifically, the epoch is initialized as a DA variable, \u00bdT? \u00bc T0\n\n?\n\nplanetocentric hyperbola\n\nimpulse\nvin?\n\nvout?\n\nvoutp\n\nvinp\n\n?vprp\n\nFig. 8.5 Powered gravity assist\n\n198 P. Di Lizia et al.\n\n\n\n\u00fedT, where dT is the displacement of the epoch from the reference value T0. Then,\nthe simple evaluation of the analytical ephemeris model in the DA framework\n\ndelivers the Taylor expansion of the eccentricity e and the mean anomaly M with\nrespect to the epoch,\n\n\u00bde? \u00bc me\u00f0dT\u00de;\n\u00bdM? \u00bc mM\u00f0dT\u00de;\n\n(8.26)\n\nwhere?e and?M denote the resulting Taylor polynomials for e andM. Thus, the\nexplicit dependence of e and M on dT appears in Kepler\u2019s equation, which now\nreads\n\nf \u00f0E; dT\u00de \u00bc E? \u00bde? sinE? \u00bdM? \u00bc E?me\u00f0dT\u00de sinE?mM\u00f0dT\u00de \u00bc 0: (8.27)\n\nThe parametric implicit equation (8.27) must be solved for the Taylor expansion of\n\nE with respect to the parameter dT, [E] \u00bc ?E(dT). Dedicated techniques have\nbeen developed in past works to address the previous task [9]. Once ?E(dT) is\navailable, the Taylor expansions of the planet position and velocity are readily\n\nobtained by carrying out the remaining algebra in the DA framework.\n\n8.3.3 Implementation of GASP-DA\n\nThe use of differential algebra is now introduced in GASP, with the primary goal of\n\nexpanding the objective function with respect to the optimization variables in\n\nsubdomains of the original search space. The resulting algorithm, referred to as\n\nGASP\u2013DA, is summarized in the following for the P1\u2013P2 transfer problem (8.16):\n\n1. Subdivide the search space x \u00bc { T1, t12} into boxes and put them in a list ? .\n2. While ? 6\u00bcf,\n\ni. Take out a box X from ?.\nii. Initialize T1 and t12 as DA variables and compute the Taylor expansion of\n\nDV1 on X.\niii. Bound the polynomial expansion of DV1 on X, i.e., estimate its minimum\n\nDV1 and maximum DV1 on X.\niv. If DV1>DVmax1 ) discard the current box X and go to step i.\nv. Compute the Taylor expansion of DV2 on X.\nvi. Bound the polynomial expansion of DV2 on X, i.e., estimate its minimum\n\nDV2 and maximum DV2 on X.\nvii. If DV2>DVmax2 ) discard the current box X and go to step i.\nviii. Put X in a list of feasible boxes x.\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 199\n\n\n\nIt is worth mentioning that bounding the Taylor expansions, as required in steps\n\n2.iii and 2.vi of the previous algorithm, is not a trivial task. This is done with a non-\n\nvalidated quadratic bounder [17]. The bounder makes use of the quadratic part of\n\nthe Taylor expansion to get estimates of the minimum of a function over each box.\n\nTo assess the performances of GASP-DA, its application to an Earth\u2013Mars\n\ntransfer is analyzed. A search space of 5,000 days on the departure epoch (T1 ?\n[1000, 6000] MJD2000) and 500 days on the transfer time (t12 ? [100, 600]) is\nselected. Figure 8.6a is obtained with classical pointwise techniques, and reports the\n\nsearch space remaining after imposing the two constraints:\n\nDV1 ? 5 km=s;\nDV2 ? 5 km=s:\n\n(8.28)\n\nIn the DA implementation of problem (8.16), the search space is uniformly\n\nsubdivided in boxes of size 50 days on each variable, and the pruning is then\n\nperformed using the constraints (8.28). The boxes remaining after pruning\n\n(Fig. 8.6b) sharply enclose the feasible space in Fig. 8.6a. A comprehensive\n\nassessment of the performances of GASP-DA can be found in [9].\n\n8.4 Introduction of Deep Space Maneuvers in GASP-DA\n\nThe GASP-DA algorithm is extended in this section to manage DSM. These\n\nmaneuvers are usually carried out to improve the performances of the transfer\n\ntrajectories in terms of total cost. From the trajectory optimization standpoint, the\n\nintroduction of DSM increases the chances of reducing the overall transfer cost\n\nassociated to pure MGA transfers. On the other hand, each DSM involves addi-\n\ntional degrees of freedom that widen the search space and affect convergence to the\n\nglobal minimum.\n\n1000 2000 3000 4000 5000 6000 1000 2000 3000 4000 5000 6000\n100\n\n150\n\n200\n\n250\n\n300\n\n350\n\n400\n\n450\n\n500\n\n550\n\n600\na b\n\n6\n\n6.5\n\n7\n\n7.5\n\n8\n\n8.5\n\n9\n\n9.5\n\n?V\n[km/s]\n\n6\n\n6.5\n\n7\n\n7.5\n\n8\n\n8.5\n\n9\n\n9.5\n\n?V\n[km/s]\n\nPoint-wise pruning.\n\n100\n\n150\n\n200\n\n250\n\n300\n\n350\n\n400\n\n450\n\n500\n\n550\n\n600\n\nDA-based pruning.\n\nt E\nM\n\n [d\nay\n\n]\n\nt E\nM\n\n [d\nay\n\n]\n\nTE [MJD2000]TE [MJD2000]\n\nFig. 8.6 Search space pruning for Earth\u2013Mars transfers\n\n200 P. Di Lizia et al.\n\n\n\nThe mathematical formulation of this new problem is not unique, and the\n\nperformances of the optimization process strongly depend upon problem transcrip-\n\ntion, especially in the DA frame. Different formulations have been investigated by\n\nthe authors in [17]. After some preliminary considerations on the introduction of\n\nDSM in MGA transfers, this section describes the strategy that better fits the DA\n\nimplementation of GASP. The performances of the resulting GASP\u2013DSM\u2013DA\n\nalgorithm are then assessed on practical cases.\n\n8.4.1 Preliminary Considerations\n\nThe solution of several Lambert\u2019s problems is yet at the basis of the objective\n\nfunction evaluation in an MGA-DSM problem. However, unlike MGA problems,\n\nLambert\u2019s arcs connect either two consecutive planets, or a planet to a maneuver\n\npoint (and vice versa). The location of the maneuver points has to be specified by\n\nadding new variables to the decision vector. It can be easily shown that, for each\n\nDSM introduced, a minimum set of four variables must be added for a three-\n\ndimensional transfer problem (three variables in the planar case). Based on\n\nrationales in [9, 17] the search space pruning of MGA-DSM transfers is carried\n\nout in a planar model. The optimal, spatial trajectory is then caught by the\n\nsubsequent optimization in the three-dimensional environment. This implies that,\n\nletting nP and nD be the number of planets and maneuvers, respectively, the decision\nvector for search space pruning includes nP + 3nD variables.\n\nSimilarly to the MGA case, the pruning process of MGA-DSM problems\n\nconsists in (1) expanding the objective function and constraints in Taylor series\n\nof the decision variables over subsets of the search space, (2) bounding the resulting\n\npolynomials and (3) pruning away unfeasible boxes from the search space. Unlike a\n\npoint-wise approach, the performance of the whole procedure depends on the\n\navailability of accurate range bounds of the constraint functions over each box.\n\nThus, working with smooth functions of the least number of variables is desirable to\n\nefficiently prune the search space. Different strategies for the introduction of DSM\n\nshow different dependencies on the decision variables, which is the key aspect in a\n\nDA framework.\n\nAn additional consideration concerns the increased computational burden when\n\nmoving from the MGA to the MGA-DSM problem. This pertains not only the\n\nincreased dimension of the search space (from nP to nP + 3nD), but rather it is an\nintrinsic consequence of representing a function with its Taylor expansion. The\n\nnumber of monomials needed to represent a function of v variables up to the order n\nis NM \u00bc \u00f0k \u00fe v\u00de!=\u00f0k!v!\u00de. Thus, at fixed k, the number of monomials for a MGA-\nDSM problem increases with factorial law with respect to a simple MGA problem,\n\ntogether with the number of required operations.\n\nBased on the previous observations, the complexity of MGA problems increases\n\nwhen DSM are introduced. Nevertheless, the associated issues can be prevented and\n\nlimited by carefully selecting the strategy for DSM introduction. It is anyway\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 201\n\n\n\nimportant to preserve the idea of the GASP algorithm: subdivide the problem into a\n\ncascade of subproblems and exploit the cut-off values to prune away unfeasible\n\nzones.\n\n8.4.2 Formulation of GASP\u2013DSM\u2013DA\n\nThe strategy to introduce DSM into GASP-DA is addressed in the following. The\n\nmain idea is to identify the problem formulation that most verges the objective\n\nfunction evaluation to the solution of multiple Lambert\u2019s problems by breaking the\n\nwhole transfer trajectory into subsequent Lambert\u2019s arcs. The strategy is first\n\nillustrated on a simple planet-to-planet transfer. Then, the extension to general\n\nMGA transfers is addressed.\n\n8.4.2.1 Planet-to-Planet Case\n\nLet us consider a planar planet-to-planet transfer as defined in Sect. 8.3.2, and let us\n\nintroduce one intermediate maneuver (D). With reference to Fig. 8.7, three\n\nvariables are added to the design vector:\n\n\u2022 rD\u2014maneuver radius is the distance between D and the Sun\n\u2022 tD\u2014partial tof is the time of flight associated to the P1\u2013D arc\n\u2022 y\u2014incremental anomaly is the anomaly of D relative to P1\n\n?\n\nD\n\ntD\n\nrD\n\n?vD\n?v1\n\n?v2\n\nP1(T1)\n\nP2(T2)\n\nFig. 8.7 Planet-to-planet\n\ntransfer with one DSM\n\n202 P. Di Lizia et al.\n\n\n\nClearly, tD ? T2 ? T1. The ephemeris model gives the position of P1 at T1, r1,\nand P2 at T2, r2. Thus, the position of D, rD, is uniquely determined by the angle y\nand rD. Within this strategy, the following dependency holds\n\nrD \u00bc rD\u00f0T1; rD; y\u00de:\n\nThe overall transfer can be characterized by solving two Lambert\u2019s problems: one\n\nfrom r1 to rD with time of flight tD and one from rD to r2 with time of flight T2\n?T1 ? tD. Thus, the decision vector is x \u00bc [T1, T2, rD, y, tD].\n\nThe search space pruning problem consists now in finding x such that\n\n9 x? 2 x j Dv1\u00f0x?\u00de ? Dvmax1 ; DvD\u00f0x?\u00de ? DvmaxD ; Dv2\u00f0x?\u00de ? Dvmax2 ; (8.29)\n\nwhere DvD is the cost of the DSM and DvD\nmax is its maximum allowed value. The\n\ndependencies of the three functions in Eq. (8.29) are\n\nDv1 \u00bc Dv1\u00f0T1; rD; y; tD\u00de;\nDvD \u00bc DvD\u00f0T1; T2; rD; y; tD\u00de;\nDv2 \u00bc Dv2\u00f0T1; T2; rD; y; tD\u00de:\n\n(8.30)\n\nThus, all constraint functions depend on five variables at most.\n\n8.4.2.2 MGA Case\n\nThe MGA transfer case is now addressed. Referring to Fig. 8.8, we first consider a\n\nMGA case with three planets (P1, P2, P3) and two DSM (D1 and D2). The search\nspace is defined by the decision vector\n\nD1\n\nD2\n\n?v2\n\n?v1\n\n?v3\n?vD2\n\n?vD1\n\n?2\n\n?1\n\nrD2\n\nrD1\n\ntD1\n\ntD2\n\nP2(T2)\n\nP1(T1)\n\nP3(T3)\n\nFig. 8.8 MGA transfer\n\nwith two DSM\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 203\n\n\n\nx \u00bc \u00bdT1; T2; T3; rD1 ; y1; tD1 ; rD2 ; y2; tD2 ?;\nwhere the last three variables are introduced to identify the position of the second\n\nDSM, rD2 , and the transfer time between planet P2 and D2, tD2 . The inequality tD1\n? T2 ? T1 still holds, whereas tD2 is subject to tD2 ? T3 ? T2 . Thus, the overall\ntransfer can be characterized by solving four Lambert\u2019s problems. The pruning\n\nproblem consists in finding x such that 9 x? 2 x that yields\n\nDv1\u00f0x?\u00de ? Dvmax1 ;DvD1\u00f0x?\u00de ? DvmaxD1 ;Dv2\u00f0x?\u00de ? Dvmax2 ;\nrp\u00f0x?\u00de ? rminp ;DvD2\u00f0x?\u00de ? DvmaxD2 ;Dv3\u00f0x?\u00de ? Dvmax3 ;\n\n(8.31)\n\nwhere rp\nmin is the minimum allowed pericenter radius for the gravity assist at P2.\n\nAnalogously to the previous case, we are interested in assessing the dependence\n\nof the position of D1 and D2, rD1 and rD2 , on the problem variables. The main\nadvantage of the approach proposed is that rD2 is identified on the basis of the\n\nposition of P2, and therefore\n\nrD1 \u00bc rD1\u00f0T1; rD1 ; y1\u00de;\nrD2 \u00bc rD2\u00f0T2; rD2 ; y2\u00de:\n\nConsequently, after the solution of the Lambert problems, the constraint functions\n\nshow the dependencies\n\nDv1 \u00bc Dv1\u00f0T1; rD1 ; y1; tD1\u00de;\nDvD1 \u00bc DvD1\u00f0T1; T2; rD1 ; y1; tD1\u00de;\nDv2 \u00bc Dv2\u00f0T1; T2; rD1 ; y1; tD1 ; rD2 ; y2; tD2\u00de;\nrp \u00bc rp\u00f0T1; T2; rD1 ; y1; tD1 ; rD2 ; y2; tD2\u00de;\n\nDvD2 \u00bc DvD2\u00f0T2; T3; rD2 ; y2; tD2\u00de;\nDv3 \u00bc Dv3\u00f0T2; T3; rD2 ; y2; tD2\u00de:\n\n(8.32)\n\nAs can be seen, the critical functions in terms of dependencies are Dv2 and rp, which\ndepend on eight variables. These are the constraint functions associated to the\n\ngravity assist at P2, which is located between D1 and D2.\nFrom simple reasoning, this result can be extended to a general MGA transfer\n\nproblem with at most one DSM within each planet-to-planet arc. More specifically,\n\nlet us consider a MGA transfer with n planets P1; . . . ;Pi; . . . ;Pn and n ? 1\nmaneuvers D1; . . . ;Di; . . . ;Dn?1 , where Di is performed between Pi and Pi + 1.\nThe dependency of constraint functions is\n\nDv1 \u00bc Dv1\u00f0T1; rD1 ; y1; tD1\u00de;\nDvDi?1 \u00bc DvDi?1\u00f0Ti?1; Ti; rDi?1 ; yi?1; tDi?1\u00de;\n\nDvi \u00bc Dvi\u00f0Ti?1; Ti; rDi?1 ; yi?1; tDi?1 ; rDi ; yi; tDi\u00de;\nrpi \u00bc rpi\u00f0Ti?1; Ti; rDi?1 ; yi?1; tDi?1 ; rDi ; yi; tDi\u00de;\n\nDvn \u00bc Dvn\u00f0Tn?1; Tn; rDn?1 ; yn?1; tDn?1\u00de:\n\n(8.33)\n\n204 P. Di Lizia et al.\n\n\n\nfor i \u00bc 2; . . . ; n? 1, where rpi is the pericenter radius of the gravity assist at Pi. As\ncan be seen, the proposed strategy limits the maximum dependency to eight\n\nvariables, regardless of the number of planets and maneuvers.\n\n8.5 Test Cases\n\nA number of application cases are dealt with in this section to assess the\n\nperformances of the algorithm. More specifically, the classic Earth\u2013Mars transfer,\n\nwith an intermediate DSM, is first discussed (Sect. 8.5.2). After this simple case,\n\nfour transfer options for a mission to Jupiter are taken into account\n\n(Sects. 8.5.3\u20138.5.6). These cases differ in the transfer strategy, although they all\n\ninclude only one DSM. The last two cases are devoted to Cassini-like transfers with\n\none and two DSM (Sects. 8.5.7 and 8.5.8, respectively). For each case, the global\n\noptimum achieved is compared with the results of GASP-DA, where pure MGA\n\ntransfers are treated [9].\n\nThe outcome of the pruning process is a list of boxes that enclose feasible\n\nregions of the search space. A local optimization is then carried out within the\n\nremaining boxes to locate the minimum of the objective function, which is the\n\npurpose of the original optimization problem. This choice speeds-up the local\n\noptimization as the optimizer runs over small domains. Thus, the whole pruning\n\nand optimization sequence is implemented in a deterministic way, and the repeat-\n\nability of the results is preserved. The computational time is relative to a PC with\n\n2.01 Ghz CPU and 512 Mb RAM.\n\n8.5.1 Search Space Definition\n\nThe search space bounds and the size of the boxes in which it is subdivided are\n\nchosen depending on the problem to solve. This is valid for both the nP epochs\nand the 3nD auxiliary variables that identify the DSM. The bounds and box-size\nfor the nP epochs are given in dedicated tables. Specific arguments must be\nprovided for the selection of bounds and box-sizes for the 3nD auxiliary\nvariables. These values, reported in Table 8.1, have been selected heuristically,\n\nbased on the results of an extensive test campaign. They represent a good trade-\n\noff between the accuracy of the Taylor representation on the resulting boxes and\n\na limited computational time. The table shows the lower and upper bounds for\n\nthese variables. These bounds are relative to a maneuver located in the transfer\n\narc between Pi and Pi+1 (Fig. 8.7). The bounds for y are trivial. The terms ri\nand ri+1, ri+1 > ri, stand for the mean radii of Pi and Pi+1 orbits, respectively.\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 205\n\n\n\nThus, the maneuver is constrained to lie into an annular region enclosing the\n\nplanets orbits (If ri > ri + 1, then rD ? [ri + 1, ri]). When the maneuver is located\nbetween two encounters of the same planet, i.e., Pi \u00bc Pi\u00fe1, we set rD ? [0. 9ri,\n1. 1a1: 2], where a1: 2 is the semimajor axis of an orbit in 1:2 resonance with the\norbit of Pi. We let the partial time of flight, tD, to vary within \u00bd0; Ti\u00fe1 ? Ti?,\nwhere Ti and Ti + 1 are the epochs at the Pi and Pi + 1 encounter, respectively.\n\n8.5.2 EdM\n\nThe first test case is an Earth\u2013Mars transfer with one DSM (indicated with d in the\nplanets sequence). The search space is defined in Table 8.2 in terms of bounds on\n\nthe departure epoch TE and the transfer time tEM. However, as stated in the previous\nsections, the pruning is carried out on the search space defined by the epochs of each\n\nplanet encounter, i.e., TE and TM in this case. This observation holds for all test\ncases. The search space definition is completed by the bounds for the three\n\nadditional variables in Table 8.1. The last two rows of Table 8.2 report the box-\n\nsize along each epoch and the optimal solution found, respectively. The\n\nGASP\u2013DSM\u2013DA algorithm solves this problem in 253.2 s. Wesummarize below\n\nsome features of the problem settings and the resultsachieved.\n\n\u2022 Problem constraints:DvE? 3 km/s,Dvd? 3 km/s,DvM? 3 km/s,Dvtot? 7{km/s}\n\u2022 Total number of boxes \u00bc 388,800\n\u2022 Boxes remaining after pruning \u00bc 1,603 (0.41%)\n\u2022 Optimal objective function value \u00bc 5.632 km/s\n\u2022 Optimal objective function value without DSM (GASP-DA result)\u00bc 5.667 km/s\n\nTable 8.1 Bounds and box-\n\nsizes for the 3nD auxiliary\nvariables\n\nVariable Lower bound Upper bound Box-size\n\nrD 0. 9ri 1. 1ri + 1 0.1 AU\n\ny 0 2p 10 deg\ntD 0 Ti\u00fe1 ? Ti 50 day\n\nTable 8.2 Search space\n\nbounds, box-sizes, and\n\noptimal solution found\n\nfor the EdM transfer\n\nTE tEM\n\nMJD 2000 days\n\nLb 1,000 200\n\nUb 2,000 650\n\nD 50 50\nSol. 1,243.2 606.2\n\n206 P. Di Lizia et al.\n\n\n\n8.5.3 EMdJ\n\nOne planet is added to the transfer. In particular, an Earth\u2013Mars\u2013Jupiter transfer is\n\ninvestigated, with one DSM between Mars and Jupiter. Table 8.3 states the bounds\n\nand the box-sizes on the departure epoch and the transfer times, together with the\n\noptimal solution found. A purely ballistic Mars gravity assist is imposed by setting\n\nthe cutoff value for DvM to zero in the powered gravity assist model. As in the\nprevious problem, the introduction of a DSM improves the objective function found\n\nby GASP-DA. The CPU time is 451 s. The optimal transfer is shown in Fig. 8.9.\n\n\u2022 Constraints: DvE ? 5 km/s, DvM ? 0 km/s, Dvd ? 5 km/s, DvJ ? 5 km/s, Dvtot ?\n15 km/s\n\n\u2022 Total number of boxes \u00bc 8.52e7\n\u2022 Boxes remaining after pruning \u00bc 323 (3.79e-4%)\n\u2022 Optimal objective function value \u00bc 12.481 km/s\n\u2022 Optimal objective function value without DSM (GASP-DA result)\n\n\u00bc13.416 km/s\n\nTable 8.3 Search space\n\nbounds, box-sizes, and\n\noptimal solution found\n\nfor the EMdJ transfer\n\nTE tEM tMJ\n\nMJD 2000 days days\n\nLb 1,000 300 1,000\n\nUb 3,000 700 2,000\n\nD 50 50 100\nSol. 2,804.7 321.9 1,161.9\n\n?10 ?5 0 5\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\nx 108\n\nx 108x [km]\n\ny \n[k\n\nm\n]\n\nFig. 8.9 Optimal EMdJ transfer\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 207\n\n\n\n8.5.4 EMdMJ\n\nAn alternative transfer strategy to Jupiter is investigated. The time domain for the\n\nEMdMJ problem is stated in Table 8.4. In this case the maneuver radius is search\n\nwithin rD ? [0. 9rM, 1. 1a1: 2], where rM is the mean radius of Mars\u2019 orbit whereas\na1: 2 is the semimajor axis of a 1:2 resonant orbit with Mars\u2019 orbit. This problem is\nsolved in 144.2 s. The result obtained by GASP-DA for the pure MGA transfer\n\nwithout DSM is once again improved. Figure 8.10 illustrates the resulting optimal\n\ntransfer.\n\n\u2022 Constraints: DvE ? 4 km/s, DvM,1 ? 0 km/s, Dvd ? 3 km/s, DvM,2 ? 0 km/s, DvJ\n? 7 km/s, Dvtot ? 12 km/s\n\n\u2022 Total number of boxes \u00bc 9.19e7\n\u2022 Boxes remaining after pruning \u00bc 717 (7.8e-3%)\n\u2022 Optimal objective function value \u00bc 10.843 km/s\n\u2022 Optimal objective function value without DSM (GASP-DA result)\u00bc 12.864 km/s\n\nTable 8.4 Search space\n\nbounds, box-sizes, and\n\noptimal solution found\n\nfor the EMdMJ transfer\n\nTE tEM tMM tMJ\n\nMJD 2000 days days days\n\nLb 3,650 30 330 600\n\nUb 7,300 430 830 2,000\n\nD 50 100 100 200\nSol. 4,353.8 371.1 915.8 1,129.5\n\n?10 ?8 ?6 ?4 ?2 0 2 4 6 8\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\nx [km]\n\ny \n[k\n\nm\n]\n\nx 108\n\nx 108\n\nFig. 8.10 Optimal EMdMJ transfer\n\n208 P. Di Lizia et al.\n\n\n\n8.5.5 EVdVEJ\n\nThe MGA transfer EVdVEJ to Jupiter is now analyzed. One DSM maneuver is\n\nperformed between the two consecutive Venus encounters. The five-dimensional\n\ndomain for the departure epoch and the transfer times is defined in Table 8.5. The\n\ndomain for DSM characterization is added based on Table 8.1. The resulting search\n\nspace is relatively large, and 1.85e10 boxes are necessary to run GASP\u2013DSM\u2013DA.\n\nThanks to constraint propagation, this problem is solved in 2,770 s.\n\n\u2022 Constraints:DvE,dep? 4. 5 km/s,DvV,1? 0 km/s,Dvd? 0. 5 km/s,DvV,2? 0 km/s,\nDvE ? 0 km/s, DvJ ? 7 km/s, Dvtot ? 12 km/s\n\n\u2022 Total number of boxes \u00bc 1.85e10\n\u2022 Boxes remaining after pruning \u00bc 3.80e4 (2.06e ? 4%)\n\u2022 Optimal objective function value \u00bc 9.304 km/s\n\u2022 Optimal objective function value without DSM (reference solution [18]) \u00bc\n\n10.503 km/s\n\n8.5.6 EVEdEJ\n\nThe last transfer strategy to Jupiter is now studied. An EVEdEJ transfer problem is\n\nsolved using the search space bounds and the box-sizes reported in Table 8.6.\n\nSimilarly to the previous problem, the search space is relatively large, and a\n\nsystematic analysis based on a grid sampling would be impossible without an\n\nefficient constraint propagation. Thanks to the pruning strategy and the possibility\n\nof expanding the constraint functions over subdomains of the search space,\n\nGASP\u2013DSM\u2013DA solves this problem in 2,392 s. The main results are listed\n\nbelow, and a plot of the optimal transfer is reported in Fig. 8.11.\n\nTable 8.5 Search space\n\nbounds, box-sizes, and\n\noptimal solution found\n\nfor the EVdVEJ transfer\n\nTE tEV tVV tVE tEJ\n\nMJD 2000 days days days days\n\nLb 3,650 80 80 80 600\n\nUb 7,300 430 830 830 2,000\n\nD 50 25 25 50 200\nSol. 3,859.5 119.2 429.6 564.8 1,244.3\n\nTable 8.6 Search space\n\nbounds, box-sizes, and\n\noptimal solution found\n\nfor the EVEdEJ transfer\n\nTE tEV tVE tEE tEJ\n\nMJD 2000 days days days days\n\nLb 3,650 80 80 80 600\n\nUb 7,300 430 830 830 2,000\n\nD 50 25 50 50 200\nSol. 3,863.4 128.8 288.4 713.3 1,068.2\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 209\n\n\n\n\u2022 Constraints: DvE,dep ? 4 km/s, DvV ? 0 km/s, DvE,1 ? 0 km/s, Dvd ? 3 km/s,\nDvE,2 ? 0 km/s, DvJ ? 7 km/s, Dvtot ? 12 km/s\n\n\u2022 Total number of boxes \u00bc 9.25e9\n\u2022 Boxes remaining after pruning \u00bc 4.84e4 (5.23e ? 4%)\n\u2022 Optimal objective function value \u00bc 8.670 km/s\n\u2022 Optimal objective function value without DSM (GASP-DA result)\n\n\u00bc 10.09 km/s; reference solution [18] \u00bc 8.680 km/s\n\n8.5.7 EVdVEJS\n\nThis section is devoted to a Cassini-like transfer with a DSM between the two\n\nVenus gravity assists. Saturn is the target planet, which is reached after four gravity\n\nassists. Thus, the overall transfer involves six planet encounters and one DSM,\n\nleading to a nine-dimensional optimization problem. The search space and the box-\n\nsizes are stated in Table 8.7. The computational time required by the DA-based\n\n?10 ?8 ?6 ?4 ?2 0 2 4 6 8\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\nx 108\n\nx 108x [km]\n\ny \n[k\n\nm\n]\n\nFig. 8.11 Optimal EVEdEJ transfer\n\nTable 8.7 Search space\n\nbounds, box-sizes, and\n\noptimal solution found\n\nfor the EVdVEJS transfer\n\nTE tEV tVV tVE tEJ tJS\n\nMJD 2000 days days days days days\n\nLb ? 1,000 80 200 30 400 800\nUb 0 430 500 180 1,600 2,200\n\nD 50 25 25 50 200 200\nSol. ? 787.0 165.8 427.7 57.7 596.1 2,200\n\n210 P. Di Lizia et al.\n\n\n\npruning and optimization algorithm is 210 s. Figure 8.12a illustrates the optimal\n\ntransfer, whereas a detail on the EVdVE portion is reported in Fig. 8.12b.\n\n\u2022 Constraints: DvE,dep ? 4 km/s, DvV,1 ? 1 km/s, Dvd ? 1 km/s, DvV,2 ? 0 km/s,\nDvE ? 0 km/s, DvJ ? 0 km/s, DvS ? 5 km/s\n\n\u2022 Total number of boxes \u00bc 3.92e8\n\u2022 Boxes remaining after pruning \u00bc 2,281 (1e ? 3%)\n\u2022 Optimal objective function value \u00bc 8.299 km/s\n\u2022 Optimal objective function value without DSM (GASP-DA result)\u00bc 8.619 km/s\n\n8.5.8 EVdVEJdS\n\nAn additional DSM is now introduced in the Jupiter\u2013Saturn arc of the Cassini-like\n\ntransfer of Sect. 8.5.7. The search space is analogous to that reported in Table 8.7,\n\nexcept for tJS, which ranges from 1,600 to 3,000 days. The GASP\u2013DSM\u2013DA\nalgorithm prunes efficiently the twelve-dimensional search space to 1e ? 6% of\nthe initial size. The CPU time is 2,000 s. The main results of this problem are listed\n\nbelow.\n\n\u2022 Constraints: DvE,dep ? 4 km/s, DvV,1 ? 1 km/s, Dvd, 1 ? 1 km/s, DvV,2 ? 0 km/s,\nDvE ? 0 km/s, DvJ ? 0 km/s, Dvd, 2 ? 1 km/s, DvS ? 5 km/s\n\n\u2022 Total number of boxes \u00bc 1.41e12\n\u2022 Boxes remaining after pruning \u00bc 2.23e4 (1.6e ? 6%)\n\u2022 Optimal objective function value \u00bc 8.276 km/s\n\u2022 Optimal objective function value without DSM (GASP-DA result)\u00bc 8.619 km/s\n\n?1.5 ?1 ?0.5 0 0.5 1 1.5\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\nx [km] x 10\n8x 109\n\nx 108x 109\n\nx [km]\n\ny \n[k\n\nm\n]\n\nWhole transfer\n\n?2 ?1 0 1 2 3\n\n?1\n\n0\n\n1\n\n2\n\n3\n\n4\n\ny \n[k\n\nm\n]\n\nEVdVE portion\n\nFig. 8.12 Optimal EVdVEJS transfer\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 211\n\n\n\n8.6 Final Remarks\n\nThis chapter described how DSM can be inserted in the search space pruning\n\nprocess of the algorithm GASP. The proposed algorithm takes advantage of differ-\n\nential algebra, which is used to expand the constraint functions in Taylor series of\n\nthe design variables. The adopted problem formulation limits the maximum func-\n\ntional dependency to eight variables, which is important to accurately bound the\n\nconstraint functions. The resulting GASP\u2013DSM\u2013DA algorithm has been tested to\n\nsolve relevant interplanetary transfer problems.\n\nThe introduction of the DSM into an MGA transfer deserves a final comment.\n\nFigure 8.13 compares the optimal objective function values for a mission to Jupiter,\n\nobtained with different transfer strategies. More specifically, GASP-DA and\n\nGASP\u2013DSM\u2013DA are used to compute the optimal solutions for pure MGA and\n\nMGA transfers with one DSM, respectively. Evidently, different transfer strategies\n\nhave different costs. It is worth noting that, for the cases presented in Fig. 8.13, and\n\ngenerally for the MGA-DSM transfers, the introduction of DSM improves the\n\noptimal solutions in terms of transfer cost. On the other hand, MGA-DSM transfers\n\ninvolve longer overall transfer time.\n\n8.5\n\n9\n\n9.5\n\n10\n\n10.5\n\n11\n\n11.5\n\n12\n\n12.5\n\n13\n\n13.5\n\nob\nj. \n\nfc\nn.\n\nMGA?DSM\nMGA\n\nEMdJ\n\nEMdMJ\n\nEVdVEJ\n\nEVEdEJ\n\nEMJ\n\nEMMJ\n\nEVVEJ\n\nEVEEJ\n\nFig. 8.13 Options for a transfer to Jupiter. Both the optimal MGA (squares) and MGA-DSM\n(circles) solutions are shown\n\n212 P. Di Lizia et al.\n\n\n\nAcknowledgements This research has been carried out under European space agency (ESA)/\n\nAriadna scheme, contract number: 20271/06/NL/HI. The authors would like to acknowledge the\n\nsupport of Tama?s Vinko? and Dario Izzo from the Advanced Concepts Team of ESA. The authors\n\nare also grateful to Kyoko Makino for the support and help.\n\nReferences\n\n1. Yao, X.: Global optimization by evolutionary algorithms. In: Proceeding Of the Second Aizu\n\nInternational Symposium on Parallel Algorithm Architecture Synthesis, Aizu-Wakamatsu,\n\nJapan, IEEE Computer Society Press, pp. 282\u2013291 (1997)\n\n2. Ingberg, L.: Simulated annealing: Practice versus theory. Mathl. Comput. Model. 18, 29\u201357\n\n(1993)\n\n3. Sentinella, M.R., Casalino, L.: Cooperative evolutionary algorithm for space trajectory opti-\n\nmization. Celestial Mech. Dyn. Astron. 105 (2009). DOI 10.1007/s10569-009-9223-4\n\n4. Jones, D.R., Perttunen, C.D., Stuckman, B.E.: Lipschitzian optimization without the Lipschitz\n\nconstant. J. Optim. Theory Appl. 79, 157\u2013181 (1993)\n\n5. Jones, D.R.: A taxonomy of global optimisation methods based on response surfaces. J. Global\n\nOptim. 21, 345\u2013383 (2001)\n\n6. Vasile, M., Summerer, L., De Pascale, P.: Design of Earth\u2013Mars transfer trajectories using\n\nevolutionary-branching technique. Acta Astronautica 56, 705\u2013720 (2005)\n\n7. Myatt, D., Becera, V., Nasuto, S., Bishop, J.: Advanced global optimisation for mission\n\nanalysis and design. Final Report, Ariadna id: 03/4101, Contract No. 18138/04/NL/MV (2004)\n\n8. Izzo, D., Becerra, V., Myatt, D., Nasuto S., Bishop, J.: Search space pruning and global\n\noptimisation of multiple gravity assist spacecraft trajectories. J. Global Optim. 38, 283\u2013296\n\n(2006)\n\n9. Armellin, R., Di Lizia, P., Topputo, F., Lavagna, M., Bernelli-Zazzera, F., Berz, M.: Gravity\n\nassist space pruning based on differential algebra. Celestial Mech. Dynam. Astron. 106, 1\u201324\n\n(2010)\n\n10. Berz, M.: Modern Map Methods in Particle Beam Physics. Academic, New York (1999)\n\n11. Berz, M.: The new method of TPSA algebra for the description of beam dynamics to high-\n\norders. Technical Report AT-6:ATN-86-16, Los Alamos National Laboratory (1986)\n\n12. Berz, M.: The method of power series tracking for the mathematical description of beam\n\ndynamics. Nucl. Instrum. Meth. A258, 431\u2013436 (1987)\n\n13. Berz, M.: Differential Algebraic Techniques. In: Entry in Handbook of Accelerator Physics\n\nand Engineering. World Scientific, New York (1999)\n\n14. Berz, M., Makino, K.: COSY INFINITY version 9 reference manual. MSU Report MSUHEP-\n\n060803, Michigan State University, East Lansing, MI 48824, 1\u201384 (2006)\n\n15. Giorgini, J.D., Yeomans, D.K., Chamberlin, A.B.., Chodas, P.W., Jacobson, R.A., Keesey, M.S.,\n\nLieske, J.H., Ostro, S.J., Standish, E.M., Wimberly, R.N.: Horizons, JPL\u2019s On-Line Solar\n\nSystem Data and Ephemeris Computation Service. User\u2019s guide (1998)\n\n16. Battin, R.H.: An Introduction to the Mathematics and Methods of Astrodynamics, 2nd\n\nPrinting. AIAA Education Series, Providence (1987)\n\n17. Bernelli-Zazzera, F., Berz, M., Lavagna, M., Armellin, R., Di Lizia, P., Topputo, F.: Global\n\nTrajectory Optimisation: Can We Prune the Solution Space when Considering Deep Space\n\nManeuvers? Final Report, Ariadna id: 06/4101, Contract No. 2007/06/NL/HI (2006)\n\n18. Vasile, M., De Pascale, P.: Preliminary design of multiple gravity-assist trajectories.\n\nJ. Spacecraft Rockets 43, 794\u2013805 (2006)\n\n8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers. . . 213\n\nhttp://dx.doi.org/10.1007/s10569-009-9223-4\n\n\nChapter 9\n\nA Mixed Integer Linear Programming\n\nModel for Traffic Logistics Management\n\nat the International Space Station\n\nGiorgio Fasano\n\nAbstract The operations of the International Space Station (ISS) pose many\n\nchallenging issues, including logistics. The on orbit stay of the ISS is to be\n\nsignificantly extended in the near future: there will be an increased experimental\n\nactivity in microgravity, giving rise to a renewed interest also in the related\n\noptimization aspects. A permanent logistic support is necessary to guarantee key\n\nISS operations, as well as the scientific activities performed on-board. A traffic\n\nmodel, based on a mixed integer linear programming (MIP) approach, has been\n\nadopted to carry out the requested logistic planes. This chapter discusses the MIP\n\nmodel and provides insights concerning its application context.\n\nKeywords International Space Station (ISS) \u2022 Logistic support \u2022 European\n\nautomated transfer vehicle (ATV) \u2022 Traffic model \u2022 On-board resource resupply\n\n\u2022 Mixed integer linear programming (MIP) based modeling approach\n\n9.1 Introduction\n\nA major space venture witnessed by the entire world in the last three decades is the\n\nInternational Space Station program (ISS, www.nasa.gov). The ISS research pro-\n\ngram is conducted by the space agencies of the USA (NASA), Russia (RKA),\n\nEurope (ESA), Japan (JAXA), Canada (CSA), and Italy (ASI). Cited from the\n\nCanadian Space Agency\u2019s web site, \u201cSince the first module of the Station was\n\nG. Fasano (*)\nThales Alenia Space Italia S.p.A., Str. Antica di Collegno 253, 10146 Turin, Italy\n\ne-mail: giorgio.fasano@thalesaleniaspace.com\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_9,\n# Springer Science+Business Media New York 2013\n\n215\n\nhttp://www.nasa.gov\nmailto:giorgio.fasano@thalesaleniaspace.com\n\n\nlaunched in 1998, the ISS has circled the globe 16 times per day at 28,000 km/h at an\n\naltitude of approximately 400 km, covering a distance equivalent to the Moon and\n\nback daily.\u201d For details and extensive further references related to the ISS, visit the\n\nwebsites www.nasa.gov, www.roscosmos.ru, www.esa.int, www.jaxa.jp, www.asc-\n\ncsa.gc.ca, and www.asi.it/en.\n\nThe worldwide space environment, involving both national agencies and the\n\nwhole topical industry, shows a renewed interest in the ISS, as its dismantling is\n\nexpected to be postponed quite significantly into the future. Regardless of a\n\nprediction about the precise time the event will actually occur, a growing momen-\n\ntum is aimed at taking advantage of this new opportunity as much as possible, with\n\nits expanding horizons for science and technology.\n\nThis prospective scenario has a direct influence on two different aspects:\n\nnamely, ISS research options and technological support requirements. The first\n\none of these aspects is expected to look into new and promising perspectives in the\n\nmicrogravity experimental field; the second aspect is to provide a significantly\n\nimproved capability to carry out the requested on-board activities. Both of these are\n\nexpected to give rise to challenging cost-effectiveness and benefit maximization\n\nissues. The logistic support optimization hence becomes a major goal, requiring the\n\nuse of cutting-edge methodologies.\n\nBenefiting from its optimization expertise in supporting space logistics and flight\n\noperations, in the recent past, Thales Alenia Space has developed an ad hoc traffic\n\nmodel [3, 4]. This model, supported also by ESA, investigates the potential\n\ncontribution of the European automated transfer vehicle (ATV) to the overall ISS\n\ntraffic logistics scenario, considering also the already existing international fleet of\n\nvehicles.\n\nThe traffic model has been developed by adopting an optimization (mathemat-\n\nical programming) framework. A mixed integer linear programming (MIP) for-\n\nmulation has been followed, representing the problem in terms of lot sizing in the\n\npresence of additional constraints (cf., e.g., [6]). Different versions of the\n\nbasic mathematical model have been studied, depending on the specific optimi-\n\nzation criteria relevant to the current analysis, including also time-scale\n\nconsiderations.\n\nSection 9.2 describes the ISS logistics problem related to introducing the ATV.\n\nWe will discuss the operational constraints posed by the ISS configuration, its orbit-\n\nkeeping requirements, and the launcher/vehicle characteristics. Section 9.3 presents\n\nthe model formulation, and Section 9.4 offers insight related to the application\n\ncontext.\n\nA possible extension of the presented traffic model will be investigated, in order\n\nto provide an enhanced analytical environment to look into the increasingly more\n\nchallenging logistic problems of the ISS, as foreseen in the near future. We are\n\nconvinced that our logistics modeling approach offers a valuable methodological\n\nstarting point to tackle the challenges of future manned and unmanned interplane-\n\ntary missions.\n\n216 G. Fasano\n\nhttp://www.nasa.gov\nhttp://www.roscosmos.ru\nhttp://www.esa.int\nhttp://www.jaxa.jp\nhttp://www.asc-csa.gc.ca\nhttp://www.asc-csa.gc.ca\nhttp://www.asi.it/en\n\n\n9.2 Logistic Support and Traffic Issues\n\nThe ISS has a sizeable infrastructure consisting of pressurized elements such as\n\ncrew quarters, laboratories, nodes, and service modules, as well as a truss structure\n\nto accommodate external locations for experiments, solar panels, and radiators.\n\nIt also provides facilities to allow externally mounted equipment to perform\n\nobservations (of the Earth, the Sun, and other stars) and environmental monitoring\n\noperations. The ISS is permanently habituated by 6\u20137 crew members, and it provides\n\na \u201cshirt-sleeve environment\u201d to perform scientific and technological experiments in\n\nmicrogravity conditions. The relative to Earth operational orbit must always be\n\nbetween 410 and 450 km altitude.\n\nThe permanent human presence aboard the ISS to maintain its standard opera-\n\ntional conditions, to exploit the microgravity conditions as much as possible, to\n\nperform scientific experiments, and to keep the allowed orbital altitude and the very\n\nlimited resource availability has led to the necessity of a continuous flow of\n\nmaterials\u2014including hardware and fluids\u2014between the Earth and the ISS.\n\nThe overall operational scenario of the ISS maintenance and utilization requires,\n\ntime after time, careful logistic planning, based on different timescales, and the\n\nflexibility to afford last minute updates and quick rearrangements.\n\nThe first key issue is on-orbit resource re-supply (or \u201cupload\u201d), in order to\n\npermanently guarantee for the crew a habitable environment and provisions,\n\nto execute the requested payload (i.e., experimental facility) operations, as well\n\nas to perform overall maintenance. In addition to these, a periodical on-orbit\n\nintervention is required to allow for recurrent re-boosting operations to maintain\n\nthe ISS orbit altitude within its admissible range, since\u2014owing to the atmospheric\n\ndrag\u2014altitude tends to decrease. The listed issues and requirements necessitate an\n\naccurate upload and re-boosting plan. The re-supply material uploaded to the ISS is\n\ngenerally indicated either as pressurized, when transported in a vehicle that ensures\n\na pressurized environment for the load, or unpressurized, when it does not provide\n\nany pressurization; a third key category of upload cargo is represented by the fuel.\n\nA similar key issue is \u201cdownload\u201d: that is, the retrieval of the experimental\n\nmaterial for post-processing on Earth and the collection of the trash produced on-\n\nboard that has either to be returned to Earth or destructively deorbited in the\n\natmosphere. Hence, the download cargo consists both of experimental material\n\nand trash.\n\nA fleet of launchers and vehicles is available to provide the ISS with the\n\nrequested logistic support, including the re-boosting capability. Different launchers\n\nare associated to the vehicles, and the resulting transportation systems differ from\n\neach other with respect to their specific characteristics. Several aspects have to be\n\ntaken into account such as the necessary equipment for crew transportation, the\n\nmaximal reachable altitude, the possibility of returning cargos to Earth, the maxi-\n\nmum upload and download capacity, the minimum elapsed time between two\n\nsubsequent launches, the maximum admissible number of flights per year, as well\n\nas the maximum on-orbit stay time.\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 217\n\n\n\nStrong further impacts on the overall planning task come up, as the payload\n\noperations under microgravity conditions must be nominally guaranteed for at least\n\na minimum number of periods per year: this implies constraints on the minimum\n\nelapsed time between one launch and the following one. In addition to all the above,\n\ntight safety requirements have to be met. In case of a skipped vehicle arrival\n\n(for whatever reason such as a missed rendezvous) the ISS has to survive up to\n\nthe next possible launch. This determines at least the provision of the necessary\n\ncrew re-supply and the fuel amount to guarantee the contingency re-boosting\n\nintervention (by activating the onboard motors).\n\nThe ISS itself introduces mandatory constraints deriving from its configuration:\n\nthe quite limited on-board re-supply capacity for each kind of resource and the\n\ncapability to allow the simultaneous presence of different cargo carriers, strictly\n\ndepending on the current docking location available on board.\n\nIt is obvious that the overall problem to tackle is very complex: the large number\n\nof decision alternatives (variables) and constraints to satisfy, as well as the neces-\n\nsity to perform the requested analysis swiftly and efficiently, simply cannot be\n\nfaced by a \u201cpaper-and-pencil\u201d approach.\n\nThe traffic model presented below is aimed at accomplishing this task success-\n\nfully, by determining for each given analysis period a logistic plan that is optimized\n\nwith respect to a selected criterion relevant to the current scenario to look into.\n\nThe model\u2019s specific scope is to define the following characteristics:\n\n\u2022 The Earth-to-orbit vehicle launch and departure times;\n\n\u2022 The cargo each such vehicle has to deliver and return, for each load typology;\n\n\u2022 The activation time and duration of the re-boosting phases;\n\n\u2022 The vehicle to utilize and the relative orbit altitude retrieval;\n\n\u2022 The onboard resource availability time profile (in particular, the final state) for\n\neach resource typology;\n\n\u2022 The onboard trash accumulation time profile (in particular, the final state);\n\n\u2022 The ISS altitude time profile (in particular, the final state).\n\nThe target of such analysis (time after time) may focus on different aspects. In\n\nparticular, one of the possible plans can address the determination of feasible\n\noperational scenarios at a minimum cost. Other plans can be adopted as well, in\n\norder to better fit the perspective to look into the comparison of different solutions.\n\nThe ISS operational scenario presented hereinafter refers to the situation occur-\n\nring when the automated transfer vehicle is introduced, as an additional transporta-\n\ntion option together with the existing fleet. The framework is still representative of\n\nthe current situation, but significant changes and enhancements have to be foreseen\n\nfrom now on, in a perspective of an ever more effective exploitation of the ISS.\n\nThe traffic model discussed in this chapter was developed to provide ESA with\n\nthe capability of investigating the operational scenarios derived from the addition\n\nof the ATV to the preexisting fleet. Such a relative late insertion implied several\n\nissues. A traffic model had been developed by NASA [1] with flight predictions\n\nfor vehicles provided by NASA and RKA. The introduction of the ATV within\n\nsuch an established scenario had to prove to be an actual improvement over the\n\nprevious status.\n\n218 G. Fasano\n\n\n\nDifferent prospective ATV missions had to be considered, in order to tailor\n\nproperly the vehicle features with respect to the expected ISS needs. The candidate\n\nmissions should consider different cargo capabilities and typologies, such as\n\nthe delivery of unpressurized cargo only; the delivery of pressurized cargo only;\n\nthe delivery of re-boosting fuel only; the delivery of a mix of pressurized and\n\nunpressurized cargo and re-boosting fuel.\n\nThe ATV design should be goal oriented, depending on the expected vehicle\n\ncontribution to the ISS, both in terms of mission typology and quantitative support.\n\nSpecifically, the possible partition between pressurized and unpressurized cargo\n\nand fuel had to be determined.\n\nAs the ISS program was already in a phase where changes in Earth-to-orbit\n\nvehicle performance and parameters, as well as in logistic requirements happened\n\nquite often, the need to reiterate the analysis at a very high rate was understood.\n\n9.3 The Mathematical Model\n\nThe traffic problem described in the previous section can be considered in terms of\n\noptimal control. Applying this point of view, the state variables represent the\n\nresource and trash accumulated on board at any time, as well as the ISS altitude;\n\nthe upload and download mass and the re-boosting activity correspond to the\n\ncontrol variables. All of the above model components are subject to transportation\n\nand operational constraints implied by the vehicle characteristics, the ISS storage\n\ncapacity and maintenance requirements. The model formulation can then be carried\n\nout by introducing a set of mathematical submodels governed by a state (vector)\n\nequation:\n\nds\n\ndt\n\u00bc f \u00bds\u00f0t\u00de; t?;\n\ndefined on each subinterval tj; tj\u00fe1\n? ?\n\n( j ? {0, . . ., n ? 1} \u00bc J ) the overall analysis\nperiod [0,T] is partitioned into (by assumption, t0 \u00bc 0 and tn \u00bc T ). The terms tj are\ncontrol variables, representing the time moments when control actions (i.e. upload,\n\ndownload and re-boosting) u0,. . .,un?1 are taken. The vector s(t) represents the state\nvariables as functions of t. For each sub-interval tj; tj\u00fe1\n\n? ?\n, the initial conditions\n\nbelow are stated:\n\ns\u00f0tj\u00de \u00bc sj \u00fe uj;\n\nmeaning that the state sj, of s(t) at the end of the previous sub-interval tj?1; tj\n? ?\n\n, is\n\ninstantaneously modified by the control action associated to the control variable\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 219\n\n\n\n(vector) uj. For each t ? [0,T] and j ? J, lower and upper bounds are imposed on\nthe state variables:\n\nS ? s\u00f0t\u00de ? S;\n\nwhile further conditions encompassing launch windows, vehicle availability and\n\ncargo capacity act as additional constraints for the control variables.\n\nAn objective function with the following general form is then defined:\n\nmint1;:::;tn?1;u0;:::;un?1\n\nXn?1\nj\u00bc0\n\n\u00f0tj\u00fe1\n\ntj\n\np\u00bds\u00f0t\u00de; uj; t?dt\u00fe q\u00f0t1; :::; tn?1; u0; :::; un?1; sn\u00de\n\n8><\n>:\n\n9>=\n>;\n;\n\nwhere the functions p and q have to be specified, depending on the optimization\ncriterion selected (e.g., integral averages), and the (vector) variable sn represents the\nfinal system state at time T.\n\nThe approach described in a simplified form next look upon a discretization of the\n\nvariables, constraints, and objective function, based on the total time period partition\n\ninto n subintervals (still denoted as \u00bdtj; tj\u00fe1?\u00de of prefixed duration (consult, e.g.,\nTabak and Kuo [5]). This approach is suitable to deal with both continuous and\n\ninteger variables, implicitly included in the problem. In such a way, the original\n\nproblem assumes the form of a lot sizing model, in the presence of additional\n\nconstraints. As a matter of fact, from the logistic point of view, the ISS can be\n\nessentially interpreted and modeled as a \u201cwarehouse,\u201d with given storage capacity\n\nfor each type of goods to consider, the resource consumption, and the orbit altitude,\n\nas the customer demand for each sub-period, the earth-to-orbit vehicles as the\n\ntransportation means employed, with given load capability for each type of product.\n\nIn the following, all variables are assumed to be nonnegative. The state\n\nequations concerning the on-board resources (excluding fuel) are described here\n\nbelow:\n\n8a 2 A; 8j 2 J ra\u00f0j\u00fe1\u00de \u00bc raj ? Da \u00fe\nX\ni2I\n\nr?aij; (9.1)\n\nwhere the variables raj represent for each a ? A (the set of resource types) the\namount of the relative resource at time j; Da the resource a demand per time\ninterval, assumed to be a positive constant and r?aij the resource a quantity\ntransported on board by the vehicle i ? I (set of vehicles) at time j.\n\nSimilar equations hold for the amount of trash present on-board:\n\n8j 2 J wj\u00fe1 \u00bc wj \u00fe\nX\na2A\n\nQa ?\nX\ni2I\n\nw?ij; (9.2)\n\n220 G. Fasano\n\n\n\nwhere Qa , a positive constant, stands for the trash accumulation per time interval\nderiving from each resource a, and w?aij the trash quantity downloaded by vehicle i,\nat time j.\n\nAs far as the re-boosting activity is concerned, the question is quite tricky, as two\n\ndifferent kinds of fuel have to be taken into account. The first can be utilized by the\n\nvehicles to perform a re-boosting action, but it has to be stored onboard, always\n\nguaranteeing a minimum level, in order to provide the ISS with the necessary\n\nattitude control and be available, as possible reserve, to operate re-boosting inter-\n\nvention (by the ISS motors), in case of contingency. In the following, this fuel shall\n\nbe called extended-use fuel and denoted by f? . The second one, on the contrary, can\nonly be utilized by a vehicle in a (nominal) re-boosting phase. It is denoted as re-\n\nboosting fuel and referred to as f. The following equations are then stated for both\nfuels, respectively:\n\n8j 2 J f?j\u00fe1 \u00bc f?j ? Cj \u00fe\nX\ni2I\n\nf? ?ij ?\nX\ni2I\n\nu?ij; (9.3)\n\n8i 2 I; 8j 2 J fi;j\u00fe1 \u00bc fij \u00fe f ?ij ? uij: (9.4)\n\nIn Eq. (9.3), referring to the extended-use fuel, for each time j, Cj is the\nconsumption per time interval due to the (nominal) attitude control, f?ij\n\n?\nis the amount\n\nuploaded by vehicle i, and u?ij is the quantity utilized by vehicle i for re-boosting\npurposes.\n\nIn Eq. (9.4), referring to the re-boosting fuel, for each time j, f ?ij is the amount\nuploaded by vehicle i and uij is the quantity utilized by vehicle i, at time j, for re-\nboosting purposes. These equations are stated to take account of the quantity of fuel\n\nstored on board the vehicles temporarily docked at the ISS and their relative\n\nutilization for re-boosting activity during all periods (time intervals) of permanence\n\nas attached modules.\n\nThe equations shown below address the ISS altitude trend:\n\n8j 2 J hj\u00fe1 \u00bc hj ? Lj \u00fe\nX\ni2I\n\n\u00f0u?ijP?i\u00feuijPi\u00de; (9.5)\n\nwhere for each time j, hj represents the altitude, Lj its loss per interval, assumed to\nbe a constant (following an approximate linearization), P?i and Pi are the altitude\nincrements per fuel unit, for the two fuel typologies, respectively, as utilized by\n\nvehicle i.\nA quantity of mass, associated to the experimental material that is supposed to be\n\npost-analyzed on the ground, is permanently present onboard, prior to be\n\ndownloaded by a vehicle. It is called processed mass and its trend is described by\n\nthe following equations:\n\n8b; 8j 2 J eb; j\u00fe1 \u00bc ebj \u00fe Ybj ?\nX\ni2I\n\ne?bij; (9.6)\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 221\n\n\n\nwhere, for each time j, ebj represents the quantity of experimental material b, with b\n? B (set of experimental material typologies), Ybj its yield per subinterval (taking\ninto account the transformation of the original mass in processed, consumed, and\n\nresidual trash), assumed as constant, and e?bij is the processed mass, downloaded by\nvehicle i.\n\nThe following bounds are stated to guarantee, at any time, the minimum\n\nallowable level for each resource type:\n\n8a 2 A; 8j 2 J raj ? Ra: (9.7)\n\nAs mentioned in the previous section, moreover, the ISS orbit altitude must be\n\nincluded, at any time, within a given range, as this is implied by the lower and upper\n\nbounds below:\n\n8j 2 J H ? hj ? H: (9.8)\n\nThe above conditions, indirectly, in addition to the ISS attitude control\n\nrequirements, give rise to the following constraints relative to the extended-use\n\nfuel available onboard that must hold at any time:\n\n8j 2 J f?j ? F?: (9.9)\n\nUpper limits on the ISS onboard storage capacity are given, taking into account\n\nthe possible presence of attached vehicles during the whole time subinterval\n\ntj; tj\u00fe1\n? ?\n\n. The 0\u20131 (indicator) variable sij is then introduced, with the following\nmeaning:\n\nsij \u00bc 1 if vehicle i is attached during the interval tj; tj\u00fe1\n? ?\n\nsij \u00bc 0 otherwise.\nThe following upper bounds are then stated to take into account, at any time, the\n\non-board storage capacity for each resource typology:\n\n8a 2 A; 8j 2 J raj ? Ra \u00fe\nX\ni2I\n\nR?aisij; (9.10)\n\nwhereR?ai is the maximum quantity of mass relative to each resource type a that can\nbe loaded (i.e., stored on orbit) by vehicle i.\n\nSimilarly, the following conditions hold, with an obvious meaning of the\n\nsymbols introduced:\n\n8j 2 J wj ? Wa \u00fe\nX\ni2I\n\nW?aisij: (9.11)\n\n222 G. Fasano\n\n\n\nAnalogously, the constraints below are posed concerning the extended-use fuel\n\nstored onboard:\n\n8j 2 J f?j ? F?\u00fe\nX\ni2I\n\nF??i sij; (9.12)\n\nwhere F? is the maximum fuel loadable by the ISS and F??i is the maximum loading\ncapacity relative to vehicle i.\n\nFor similar reasons, the following conditions are added, with an obvious mean-\n\ning of the symbols:\n\n8i 2 I; 8j 2 J fij ? F?i sij (9.13)\n\nA threshold relative to the overall mass loaded, at any time, on the ISS, including\n\nthe fuel of the vehicles temporary attached, obviously has to be considered. This is\n\nachieved by adding the following constraints (based on an approximation):\n\n8j 2 J\nX\na2A\n\nraj \u00fe f?j \u00fe\nX\ni2I\n\nfij \u00fe\nX\nb2B\n\nebj\u00fewj ? M: (9.14)\n\nTo control the launch and return activities, as well as their relative upload and\n\ndownload actions, the following 0\u20131 variables are further introduced, with their\n\ncorresponding logical meanings:\n\nlij \u00bc 1 if vehicle i is launched (and reaches the ISS) at time j,\nlij \u00bc 0 otherwise;\nrij \u00bc 1 if vehicle i performs its reentry from the ISS at time j,\nrij \u00bc 0 otherwise.\n\nA number of constraints have then to be considered, in order to take into account\n\nthe upload capability relative to the utilization of each vehicle. As a first step, it has\n\nto be pointed out that a maximum altitude limit Hi 2 \u00bdH;H? is associated to each\nvehicle i. The constraints below are then introduced to guarantee that if, at a certain\ntime j, the ISS altitude is higher than the limit associated to a vehicle, it cannot be\nlaunched within the corresponding subinterval:\n\n8i 2 I;8j 2 J lij ? 2? hj\nHi\n\n: (9.15)\n\nA further set of constraints, whose meaning is obvious, involves both the launch,\n\nreentry, and on-board stay decisional variables:\n\n8i 2 I\nX\nj2J\n\nlij ? 1; (9.16)\n\n8i 2 I\nX\nj2J\n\nrij ? 1; (9.17)\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 223\n\n\n\n8i 2 I\nX\nj2j\n\nlij ? 1? Li; (9.18)\n\n8i 2 I; 8j 2 J=j ? 1 rij ?\nX\nj0?j\n\nlij\n0 ? Li; (9.19)\n\n8i 2 I; 8j 2 J sij ?\nX\nj0?j\n\nlij\n0 \u00fe Li; (9.20)\n\n8i 2 I; 8j 2 J sij ? 1?\nX\nj 0?j\n\nrij\n0; (9.21)\n\n8i 2 I; 8j 2 J sij ?\nX\nj 0?j\n\nlij\n0 ?\n\nX\nj 0?j\n\nrij\n0 \u00fe Li; (9.22)\n\nwhereLi is a parameter equal to one, if at the initial time (t \u00bc 0) vehicle i is attached\nto the ISS and zero otherwise. Further conditions, representing the docking rules,\n\nshould also be introduced, but they are not reported here, for the sake of simplicity.\n\nThe following constraints express the conditions that if at time j the vehicle i\nis not launched, its cargo overall capacity is null:\n\n8i 2 I; 8j 2 J\nX\na2A\n\nr?aij \u00fe f? ?ij \u00fe f ?ij ? Milij; (9.23)\n\nwhere Mi is the maximum mass capacity associated to vehicle i, corresponding to\nthe altitude (the minimum admissible) H. When vehicle i is, however, supposed to\nreach a higher altitude, its maximum capacity decreases (as an approximation)\n\nlinearly, with rate Ki>0. The following constraints are then posed (noting that they\nbecome redundant when the corresponding lij is zero):\n\n8i 2 I; 8j 2 J\nX\na2A\n\nr?aij \u00fe f? ?ij \u00fe f ?ij ? Mi ? \u00f0hj ? H\u00deKi: (9.24)\n\nConsidering the different loading capacity characteristics, with reference to each\n\nsingle cargo typology, the following constraints are then stated:\n\n8a 2 A; 8i 2 I; 8j 2 J r?aij ? R?aijlij; (9.25)\n\n8i 2 I; 8j 2 J f? ?ij ? F??i lij; (9.26)\n\n8i 2 I; 8j 2 J f ?ij ? F?i lij: (9.27)\n\nFurthermore, since the vehicles have generally a limited pressurized cargo\n\ncapacity, the following constraints hold:\n\n8i 2 I; 8j 2 J\nX\na2A0\n\nr?aij ? M\n0\nilij; (9.28)\n\n224 G. Fasano\n\n\n\nwhere A\n0 ? A is the subset of pressurized resource typologies andM0i is the relative\n\nloading upper bound, corresponding to vehicle i.\nSimilar cargo constraints have to be formulated as well, in order to include in the\n\nmodel the loading limitations occurring during the reentry phases. They are,\n\nhowever, omitted here for the sake of a more concise exposition.\n\nAs mentioned in the previous section, a number of microgravity periods, ranging\n\nfrom a minimum and a maximum denoted byN;N respectively, have to be foreseen.\nThe following 0\u20131 variables are then aimed at determining the microgravity/re-\n\nboosting state associated to each subinterval:\n\nmj \u00bc 1 if the sub-interval j; j\u00fe 1\u00bd ? is a microgravity period,\nmj \u00bc 0 otherwise.\n\nThe condition below expresses that the number of microgravity periods has to be\n\nin compliance with its given range:\n\nN ?\nX\nj2J\n\nmj ? N: (9.29)\n\nThe constraints shown next have thus the scope of guaranteeing that during each\n\nmicrogravity period, no launch, re-enter, or re-boosting activity can be executed:\n\n8i 2 I; 8j 2 J lij ? 1? mj; (9.30)\n\n8i 2 I; 8j 2 J rij ? 1? mj; (9.31)\n\n8i 2 I; 8j 2 J u?ij ? F??i \u00f01? mj\u00de; (9.32)\n\n8i 2 I; 8j 2 J u\nij\n? F??i \u00f01? mj\u00de: (9.33)\n\nThe values of the state variables, corresponding to the initial time, have to be\n\ntaken into account. They are represented, for each resource type, the trash, the\n\nexternal-use fuel, and the altitude, respectively, by the termsRa0,W0, F?0 andH0. The\noverall initial state is then expressed by the following boundary conditions:\n\n8a 2 A ra0 \u00bc Ra0; (9.34.1)\n\nw0 \u00bc W0; (9.34.2)\n\nf?0 \u00bc F?0; (9.34.3)\n\nh0 \u00bc H0: (9.34.4)\n\nOn the other hand, the final state conditions corresponding to time T relative to\nall the resources present on board the ISS, the extended use fuel, as well as the\n\naltitude represent, generally, a major concern of the various analysis scenarios.\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 225\n\n\n\nQuite a frequently requested overall restriction is that at the end of the time period,\n\nthe ISS resources (including the fuel) and altitude must not result at their minimum\n\nadmissible level (and similarly the trash must not be at its on-board storage upper\n\nbound). For such a reason proper lower limits have to be set from time to time, in\n\ncompliance to the specific context to investigate. They are summarized here below:\n\n8a 2 A raT ? RaT ; (9.35.1)\n\nwT ? WT ; (9.35.2)\n\nf?T ? F?T ; (9.35.3)\n\nhT ? HT : (9.35.4)\n\nAs far as the objective function is concerned, different choices can be made\n\ndepending on the specific analysis task under consideration. We report here one of\n\nthe possible options that proved to be quite useful at a preliminary level, when some\n\nof the characteristics both of the ISS and even the main ATV features, such as, for\n\ninstance, the load capacity relative to the different cargo typologies, were not yet\n\nconsolidated. For this purpose, some of the model constraints were relaxed by\n\nintroducing (non-negative) slack variables representing the relative constraint vio-\n\nlation. The corresponding version of constraints (9.23), for instance, assumes then\n\nthe form:\n\n8i 2 I;8j 2 J\nX\na2A\n\nr?aij \u00fe f? ?ij \u00fe f ?ij ? Milij \u00fe ~mij; (9.36.1)\n\n8i 2 I; 8j 2 J 0 ? ~mij ? ~Milij; (9.36.2)\n\nwhere ~Mi represents for each vehicle i the maximum relaxation admitted for the\nrelative overall mass capacity. Since similar readjustments can obviously involve\n\nseveral other constraints of the model, the objective function, to be minimized,\n\nsimply consists of the sum of the slack variables taken into account, time after time,\n\non the basis of the current analysis task and properly weighted.\n\nAs mentioned beforehand, different criteria could be looked into depending each\n\ntime on the specific merit perspective the problem is intended to be investigated\n\nfrom. Even if some interesting insights in this regard could be provided, they are not\n\ndiscussed here.\n\nLet us mention that a more refined formulation of the problem, interpreted in\n\nterms of lot sizing with additional constraints, could be implemented adopting the\n\napproach of Eppen and Martin [2], in order to tighten the corresponding MIP model\n\nby restricting the relative LP-relaxation\u2019s convex hull. In the traffic model consid-\n\nered here, we limit ourselves to pointing out that each upload variable r?aij could thus\n\n226 G. Fasano\n\n\n\nbe substituted with r?aijl, associated to the relative resource mass uploaded at time j\nand utilized onboard at time l, in compliance with the condition:\n\n8a 2 A; 8i 2 I; 8j 2 J\nX\nl?j\n\nr?aijl \u00bc r?aij:\n\nIt is of course understood that analogous substitutions could be applied also to\n\nthe remaining upload and download variables. Although Eppen and Martin\u2019s\n\nformulation of the lot sizing problem is sharper than the classical one, it should\n\nalso be observed that it increases the number of variables involved quite dramati-\n\ncally. As a consequence, when dealing with very large-scale instances, a trade-off\n\nanalysis that considers the advantages derived from a tighter model vs. the actual\n\nmodel size is strongly recommended.\n\nAs a final topic of this chapter, it is noted that each analysis task refers to a\n\nspecific time scale. When the sub-intervals are sufficiently short, it can be assumed\n\nthat all control actions (i.e., upload, download, and re-boosting activities) occur\n\neither at their initial or final times. When, however, this assumption does not hold\n\nany longer, due to the length of the sub-intervals, then it is more suitable to consider\n\nin some way that control actions can occur during the entire subperiod. A set of\n\nnecessary conditions can then be posed in an integral form. Adopting this approach,\n\nthe following inequalities can, for instance, replace constraints (9.10):\n\n8a 2 A; 8j 2 J\n\u00d0\nDT ra\u00f0t\u00dedt\n\nDT\n? Ra \u00fe\n\nP\ni2I R\n\n?\naitij\n\nDT\n;\n\n8i 2 I; 8j 2 J tij ? DTsij;\n\nwhere DT represents the duration of each sub-interval and tijthe actual permanence\nof vehicle i during the whole sub-interval tj; tj\u00fe1\n\n? ?\n. Similar substitutions can involve\n\nall the on-board storage capacity conditions. The integral term can easily be\n\napproximated by the trapezoidal rule as follows:\n\n\u00f0\n\nDT\n\nra\u00f0t\u00dedt ?\nraj \u00fe ra\u00f0j\u00fe1\u00de\n\n2\nDT:\n\n9.4 Application Aspects\n\nThis section provides some information concerning the overall operational sce-\n\nnario, beginning from the state-of-the-art context to deal with when the traffic\n\nmodel was initially developed to investigate the introduction of the ATV option\n\nwithin the preexisting vehicle fleet.\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 227\n\n\n\nTable 9.1 provides the relative upload cargo categories, and Table 9.2 shows the\n\nprojections of the material to be delivered to orbit over the subsequent 15 years. An\n\nimportant characteristic of the resources involved is that most of them are \u201cflagged\u201d\n\nwith the relevant nationality and all are classified either as Western (i.e., owned by\n\nNASA, ESA, CSA, or JAXA) or Russian (owned by RKA). As a general rule,\n\nNASA has been supposed to deliver Western re-supply, while RKA the Russian\n\none. At the same time, ESA was the only agency expected to transport to orbit,\n\nusing the ATVs, both Western and Russian re-supply.\n\nTable 9.3 reports for each Earth-to-orbit systems (i.e. launcher plus transfer\n\nvehicle) the type of cargo and the maximum upload capabilities that were expected\n\nat the average ISS altitude. Both the Mini Pressurized Logistic Module (MPLM,\n\nASI) and the Unpressurized Logistic Carrier (ULC, NASA) are associated to the\n\nShuttle (NASA); the ATV (ESA) utilizes Ariane 5 as its launcher, Progress-X\n\n(RKA) utilizes the Soyuz (RKA), HTV (JAXA) utilizes the H2 (JAXA),\n\nrespectively.\n\nTable 9.1 Upload cargo categories\n\nPressurized cargo Unpressurized cargo Fuel\n\nCrew supplies (food, clothes, etc.) Logistic items (for maintenance) Extended-use fuel\n\nLogistic items (for maintenance) Scientific equipment Re-boosting fuel\n\nScientific equipment\n\nAir\n\nWater\n\nOxygen (for extra-vehicular activity)\n\nTable 9.2 Re-supply requirements (preliminary scenario)\n\nCargo type\n\nRKA cargo\n\nrequirements (kg)\n\nWestern cargo\n\nrequirements (kg) Total\n\nPressurized cargo\n\nCrew supplies (food, clothes, etc.) 49,331 86,876 136,207\n\nLogistic items (for maintenance) 23,415 60,520 83,935\n\nScience equipment 34,500 155,408 189,908\n\nAir 3,671 - 3,671\n\nWater 7,773 15,257 23,030\n\nOxygen for extra-vehicular activity 9,125 - 9,125\n\nOxygen fuel 6,156 - 6,156\n\nOthers 33,538 - 33,538\n\nUnpressurized cargo\n\nLogistic items (for maintenance) 10,880 64,585 75,465\n\nScience equipment 5,500 25,900 31,400\n\nFuel 106,672 - 106,672\n\n228 G. Fasano\n\n\n\nThe overall outcome of the analysis carried out to evaluate the possible contri-\n\nbution deriving from the ATV introduction within the previous fleet composition,\n\ncan be summarized as follows.\n\nTheATVmission that could better support the re-supply and return scenariowas the\n\none up to delivering to orbit the so-called mixed cargo (pressurized cargo plus fuel).\n\nThe introduction of a properly designed ATV mixed-cargo vehicle is seen as\n\nbeneficial to the re-supply and return scenario, since such an ATV mission could\n\nreplace two Progress-X missions or, alternatively, one single Progress-X if higher\n\nresource re-supply capacity were required. This replacement could alleviate the\n\nhigh Progress-X flight rate (from up to sever missions per year to five missions per\n\nyear) that was considered a potential criticality for the whole ISS program. Such a\n\nreplacement was also beneficial with respect to the number of the extended micro-\n\ngravity periods.\n\nAn on-orbit stay of 4 months was considered the shortest period for a proper\n\nexploitation of the ATV utilization; while a mission duration exceeding 6 months\n\nwould have led to an overdesign of its pressurized module. The optimal share of\n\ncargo resulted in the following partition:\n\n\u2022 5,000\u20136,000 kg of pressurized cargo;\n\n\u2022 1,000 kg of extended-use fuel;\n\n\u2022 3,000\u20134,000 kg of re-boosting fuel.\n\nSeveral scenarios were analyzed, focusing on different time-scales, operational\n\noptions, and specific objective functions. Most of the cases proved to be quite\n\nchallenging from the computational point of view. Instances dealing with an\n\nanalysis period covering 1\u20133 years involved up to 100,000 constraints, 150,000\n\ncontinuous variables, and 3,000 binary variables: solving such models required\n\nmore than 10 h of computational time within a standard state-of-the-art MIP solver\n\nenvironment.\n\nIn the light of the prospective scenarios expected for the ISS exploitation, a new\n\ntrend is oriented towards less precise but much quicker computational analyses,\n\nimplying the development of a \u201csmarter\u201d version of the previous traffic model. A\n\ndedicated research effort is currently ongoing, focusing both on the model formu-\n\nlation and MIP strategy improvement.\n\nTable 9.3 Earth-to-orbit transportation system upload characteristics (preliminary scenario)\n\nETO transportation\n\nsystem Nationality\n\nMaximum pressurized/\n\nunpressurized upload\n\n(kg)\n\nMaximum fuel\n\n(kg)\n\nTotal\n\nmaximum\n\n(kg)\n\nShuttle + MPLM USA 9,040 (pressurized\n\nonly)\n\n? 9,040\n\nShuttle + ULC USA 9,833 (unpressurized\n\nonly)\n\n? 9,833\n\nSoyuz + Progress-X Russia 4,750 2,300 4,750\n\nAriane + ATV Europe 6,000 5,000 9,000\n\nH2 + HTV Japan 6,000 ? 6,000\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 229\n\n\n\nThe reference frame for the experimental analysis under study consists essen-\n\ntially of the following environment, in terms of platform and MIP solver: personal\n\ncomputer(s) equipped with Core 2 Duo P8600, 2.40 GHz, 1.93 GB RAM, and\n\nrunning under Windows XP Professional Service Pack 2; IBM ILOG CPLEX\n\nOptimizer 12.3.\n\nA case study, referring to the mathematical model currently under study, is\n\nshown next to give a qualitative representation of the result typologies. The analysis\n\ncovers a 3-year period, partitioned in 36 months (sub-intervals). Since most of the\n\ninformation concerning the near future scenarios is still quite uncertain, in particu-\n\nlar, with respect to the new fleet that is going to be set up, the previous one has been\n\nkept as basic reference, even if some of its transportation systems have already been\n\ndismissed (as the Shuttle, for example) or are quite close to their last mission (as the\n\nATV).\n\nThe objective function consists of the sum of the two relaxation slack variables\n\nconcerning the maximum ATV capacity associated to both kinds of fuel. The\n\nrelative model instance contains about 51,000 rows, 17,000 continuous variables,\n\nand 1,200 binary variables.\n\nSome of the overall case study results obtained in about 30 CPU minutes are\n\nsummarized by the tables reported below. Table 9.4 illustrates the launch and\n\nreentry plan for each vehicle considered (in several cases they remain on orbit for\n\nmore than one month). Table 9.5 reports the ISS pressurized cargo: the light bars\n\nindicate unprocessed mass, while the dark ones the processed mass. Table 9.6 refers\n\nTable 9.4 Case study overall launch/reentry plan\n\n230 G. Fasano\n\n\n\nTable 9.6 Case study ISS on-board trash trend (kg)\n\n0.00\n\n500.00\n\n1000.00\n\n1500.00\n\n2000.00\n\n2500.00\n\n3000.00\n\n3500.00\n\n4000.00\n\n4500.00\n\nt0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36\n\nTable 9.7 Case study ISS on-board fuel trend (kg)\n\n0\n\n2000\n\n4000\n\n6000\n\n8000\n\n10000\n\n12000\n\nt0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36\n\nTable 9.5 Case study ISS on-board pressurized cargo trend (kg)\n\n0.00\n\n1000.00\n\n2000.00\n\n3000.00\n\n4000.00\n\n5000.00\n\n6000.00\n\n7000.00\n\n8000.00\nt0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t1\n0\n\nt1\n1\n\nt1\n2\n\nt1\n3\n\nt1\n4\n\nt1\n5\n\nt1\n6\n\nt1\n7\n\nt1\n8\n\nt1\n9\n\nt2\n0\n\nt2\n1\n\nt2\n2\n\nt2\n3\n\nt2\n4\n\nt2\n5\n\nt2\n6\n\nt2\n7\n\nt2\n8\n\nt2\n9\n\nt3\n0\n\nt3\n1\n\nt3\n2\n\nt3\n3\n\nt3\n4\n\nt3\n5\n\nt3\n6\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 231\n\n\n\nTable 9.8 Case study ISS altitude trend (km)\n\n405\n\n410\n\n415\n\n420\n\n425\n\n430\n\n435\n\n440\n\n445\n\n450\n\n455\n\nt0 t1 t2 t3 t4 t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 t15 t16 t17 t18 t19 t20 t21 t22 t23 t24 t25 t26 t27 t28 t29 t30 t31 t32 t33 t34 t35 t36\n\nTable 9.9 Case study upload/download provided by a single vehicle (kg)\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\nUP PRESS. DW UNPR.\nTRASH\n\nDW PRESS.\nTRASH\n\nDW PRESS.UP UNPR. EXT.-FUEL FUEL\n\nTable 9.10 Case study gap between initial and final ISS states\n\n-2500.00\n\n-2000.00\n\n-1500.00\n\n-1000.00\n\n-500.00\n\n0.00\n\n500.00\n\n1000.00\n\nGAP\n(kg, km)\n\n0.00\n\nPRESS.-\nNON-US. \n\nPRESS.-US. PRESS.\nTRASH \n\nUNPR.\nTRASH \n\nEXT.-FUEL FUEL ALTITUDE\n\n-2279.61 0.00 0.00 599.00 0.00 0 -11.40\n\nUNPR.\n\n232 G. Fasano\n\n\n\nto the trash trend. Table 9.7 shows the fuel present onboard the ISS: the light bars\n\nrepresent the external-use fuel, while the dark ones indicate the re-boosting one.\n\nTable 9.8 illustrates the trend relative to the ISS altitude. Table 9.9 points out the\n\nupload/download provided by a single vehicle and Table 9.10 the gap between the\n\ninitial and final ISS states, during the whole analysis period.\n\n9.5 Concluding Remarks\n\nThis chapter has been devoted to logistics and traffic issues that the International\n\nSpace Station has given rise to, up to now and in the near future (with increasing\n\ncomplexity, as nowadays, its dismantling plan has been put off for some time). In\n\nthe recent past, the issue was looked into, in particular by ESA in relation to the\n\nintroduction of the Automated Transfer Vehicle (ATV) within the already existing\n\ninternational fleet of transportation systems. This challenging problem has been\n\nsuccessfully tackled by developing and solving an MIP model in different context-\n\nspecific versions. As the traffic problem embeds the flow of material to and from the\n\nISS, as well as the sequence of missions of the various earth-to-orbit vehicles,\n\nincluding the re-boosting phases, the traffic model has been used in order to\n\ndetermine, for each given analysis period, an optimized logistic plan.\n\nIn this chapter we have presented a simplified version of the actual formulation\n\nand omitted a number of technical details. The model needs to be properly updated\n\nand extended as soon as the ongoing operational scenario, including a new fleet, has\n\nbeen determined. Specific research is foreseen both from the modeling and compu-\n\ntational strategy points of view. Our discussion also offers practical insights, to\n\ninterpret the problem in its real-world context.\n\nReferences\n\n1. Boeing: ISS Integrated Traffic Model Report\u2014DAC 4 Final Report. www.boeing.com (1996)\n\n2. Eppen, G.D., Martin, R.K.: Solving multi-item capacitated lot-sizing using variable redefinition.\n\nOper. Res. 35(6), 832\u2013848 (1987)\n\n3. Fasano, G.: Mixed integer linear approach for the space station on-orbit resources re-supply. In:\n\nAIRO 96 Annual Conference Proceedings, Perugia, 16\u201320 Sept 1996\n\n4. Fasano, G., Provera, R.: A traffic model for the space station on-orbit re-supply problem. In: The\n\nInternational Society of Logistics Engineering (SOLE), Logistics National Conference\n\nProceedings, Turin, 7\u201310 Oct 1997\n\n5. Tabak, D., Kuo, B.: Optimal Control by Mathematical Programming. Prentice-Hall, New Jersey\n\n(1971)\n\n6. Van den Heuvel, W.: Lot-sizing. In: Cochran, J.J. (ed.) Wiley Encyclopedia of Operations\n\nResearch and Management Science. Wiley, New York (2010)\n\n9 A Mixed Integer Linear Programming Model for Traffic Logistics Management. . . 233\n\nhttp://www.boeing.com\n\n\nChapter 10\n\nGlobal Optimization Approaches to Sensor\n\nPlacement: Model Versions and Illustrative\n\nResults\n\nGiorgio Fasano and Ja?nos D. Pinte?r\n\nAbstract We investigate the optimized configuration of sensor cameras to be\n\nplaced in a suitably defined three-dimensional cubic region E, in order to maximize\nthe coverage of a completely embedded cube C?E. The sensing regions associated\nwith each of the cameras are convex, but not necessarily identical. In order to\n\nhandle this important practical problem, we present mixed integer linear program-\n\nming (MILP) and mixed integer nonlinear programming (MINLP) model\n\nformulations and propose corresponding solution approaches. Illustrative numeri-\n\ncal results are presented, and certain application aspects are also discussed.\n\nKeywords Sensor camera network design \u2022 Continuous set covering problems in\n\nthree-dimensions \u2022 Global optimization \u2022 Mixed integer linear and nonlinear model\n\nforms \u2022 Solution strategies \u2022 Illustrative numerical results\n\n10.1 Introduction\n\nThe topic discussed here originates from a case study carried out in a space\n\nengineering context, within the framework of future Mars exploration studies.\n\nWe consider a drone scale model aimed at stimulating the landing phase of a\n\nrobot vehicle that has to be permanently monitored by a set of sensor cameras.\n\nThis scenario leads to challenging camera placement optimization issues: in this\n\nG. Fasano (*)\nThales Alenia Space Italia S.p.A., Str. Antica di Collegno 253, 10146 Turin, Italy\n\ne-mail: giorgio.fasano@thalesaleniaspace.com\n\nJ.D. Pinte?r\n\nPinte?r Consulting Services Inc., Halifax, Canada\n\ne-mail: janos.d.pinter@gmail.com\n\nMSC Classification (2000) 68 T20, 90 C11, 90 C30, 90 C59, 90 C90\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_10,\n# Springer Science+Business Media New York 2013\n\n235\n\nmailto:giorgio.fasano@thalesaleniaspace.com\nmailto:janos.?d.pinter@gmail.com\n\n\nstudy we describe a modeling and algorithmic solution approach followed by\n\nillustrative results.\n\nThe drone is supposed to move inside a three-dimensional (3D) virtual cube\n\ndenoted by C. Our general objective is to cover C optimally by the union of the\nfields of view (FOW) of the set of cameras. The cameras can be of different types:\n\nthey have to be placed outside of C but inside an external cube denoted by E that\nembeds C and has parallel facets to C. We assume that the (truncated) FOW of each\ncamera is a rectangular-based pyramid, without considering sensor orientation\n\nconstraints at this point. Then, in a possible modeling approach, our objective can\n\nbe to minimize the total number (or total cost) of the sensors needed to assure\n\ncomplete coverage of C. Alternatively, we can maximize the volume (a proper\nsubset of C) that is covered by a given set of devices; a total equipment cost\nconstraint could also be considered. In this work we present optimization models\n\nrelated to the latter formulation.\n\nAlthough the case study discussed in this chapter is related to a specific simula-\n\ntion framework, many similar optimization problems arise in the context of space\n\nengineering and in other areas. Related space engineering applications include\n\nfuture interplanetary explorations, such as rover remote control and the monitoring\n\nof surfaces or regions. Similar sensor layout optimization problems are considered\n\nalso in the context of environmental quality monitoring, industrial process tracking,\n\nrobot movement control, security systems design, telematic and telecommunication\n\napplications, and sports events broadcasting. In all these application areas, the\n\nmonitoring or coverage efficiency, the collection, retrieval and interpretation of\n\ninformation, the available equipment, and the related setup and operational costs\n\nare the key driving factors.\n\nThe professional literature related to sensor networks and camera arrays is\n\nextensive. Without going into details here, we refer, e.g., to Akyildiz et al. [3];\n\nBarbosa et al. [5]; Cardei et al. [10]; Cerpa et al. [11]; Chakrabarty et al. [12];\n\nDhillon et al. [15]; Dhillon and Chakrabarty [16]; Erdem and selaroff [17];\n\nFleishman et al. [18]; Fusco and Gupta [19]; H\u20acorster and lienhart [25]; Howard\net al. [26]; Kang and Golay [29]; Meguerdichian et al. [33]; Meguerdichian and\n\nPotkonjak [34]; Mittal and Davis [36]; Molina et al. [38]; Onur et al. [40]; Pottie\n\nand Kaiser [45]; Sahni and Xu [47]; Shen et al. [48]; Xing et al. [55]; Yao et al. [57];\n\nZhang et al. [59]; Zou and Chakrabarty [60\u201362]. A large variety of studies consider\n\ntwo-dimensional (2D) applications, but some discuss 3D applications: see e.g.\n\nAlam and Haas [4]; Huang et al. [27]; and Chen et al. [13]. The regions considered\n\ncan be of circular (in 2D), spherical, conic, polyhedral, or arbitrary shape (in 3D):\n\nconsult, e.g., Gao and Shi [20] for the general case.\n\nSolution approaches range from deterministic to stochastic coverage optimiza-\n\ntion methods: see, for instance, Abrams et al. [1]; Buczak et al. [9]; Harada et al.\n\n[22]; Lazos and Poovendran [30]; Meguerdichian et al. [33]; Miorandi and Altman\n\n[35]; Rowe and Wettergren [46]; and Wang et al. [56].\n\nThe specific problem type considered here is a 3D continuous set covering\n\nproblem [14]. Mathematical programming (optimization based) formulations are\n\n236 G. Fasano and J.D. Pinte?r\n\n\n\ndiscussed, e.g., by Alt{nel et al. [2]; Biswand Ye [7]; Gentile [21]; So and Ye [49];\nSorokin et al. [50]; Venkatesh and Buehrer [54]; and Berry et al. [6].\n\nFollowing this brief introduction, Sect. 10.2 discusses the solution approach\n\nchosen, and then describes two mathematical models developed to represent the\n\nproblem at different levels of approximation. Section 10.3 discusses illustrative\n\nnumerical results and some practically important application aspects. The current\n\nexperimental results are related to the first mixed integer linear programming\n\n(MILP) model type; in future work we will address some useful model extensions.\n\n10.2 Optimized Sensor Placements: MILP and MINLP\n\nFormulations\n\n10.2.1 A Global Optimization Approach to Sensor Placement\n\nThe general solution approach proposed here is based on a global optimization\n\n(GO) point of view. The objective of GO is to find the absolutely best solution of\n\noptimization models that have also local optima. The general sensor network design\n\nproblem clearly falls into this model category: hence, it is natural to consider\n\nGO-based solution strategies.\n\nIn recent decades, global optimization has grown into a mature field of mathe-\n\nmatical programming. Consult, for instance, Bomze et al. [8]; Horst and Pardalos\n\n[23]; Horst and Tuy [24]; Liberti and Maculan [32]; Pardalos and Romeijn [41];\n\nPinte?r [42\u201344]; Strongin and Sergeyev [52]; and Zabinsky [58].\n\nThe sensor network design problem will be tackled in two steps, consisting of the\n\nsolution of two optimization models. The first of these is formulated as a MILP\n\n(mixed integer linear programming) model, while the second one is a MINLP\n\n(mixed integer non-linear programming) model. Regarding the latter topic, consult,\n\ne.g., Mockus et al. [37]; Nowak [39]; and Tawarmalani and Sahinidis [53]. Li and\n\nSun [31] discuss nonlinear integer programming, with pertinent notes also on GO\n\nand MINLP.\n\nTheMILP model formulation is aimed at finding a suboptimal solution that can be\n\nimproved, if necessary, by solving a relatedMINLP. In fact, even if the problem could\n\nbe formulated directly as anMINLP problem, the MILP step is highly recommended,\n\nsince the numerical efficiency of GO algorithms often strongly depends on somewell-\n\nchosen simplifiedmodel statement(s) and the resulting solution(s). In other words, the\n\noptimization results based on a reducedMILP formulation can provide an informative\n\nstarting solution to the quite possibly even more challenging MINLP model and its\n\nsolution process.\n\nIn the MILP model described next (Sect. 10.2.2), all cameras are supposed to be\n\npre-oriented, although not necessarily in an orthogonal arrangement. As a conse-\n\nquence, the resulting solution (even if optimal in the MILP framework) may well be\n\nsuboptimal when considering a more detailed MINLP point of view. The pre-\n\norientation assumption is dropped in the MINLP model version (Sect. 10.2.3),\n\n10 Global Optimization Approaches to Sensor Placement: Model Versions. . . 237\n\n\n\nallowing the search to proceed towards the global optimal solution(s) of the original\n\nproblem.\n\nIn both mathematical models, the convex domain to cover by sensors is\n\ndiscretized by a set of its internal points. Then, given the maximal number of\n\ncameras that can be utilized, the overall coverage of these internal points is\n\nmaximized. Different weights can be assigned to these internal points if such an\n\napproach is dictated by practical needs: the weights will then indicate the relative\n\nimportance of the individual points (or of the regions represented by these points).\n\n10.2.2 An MILP Model with Pre-oriented Sensor Configurations\n\nWe shall consider a convex domain C defined with respect to a predefined ortho-\nnormal (main) reference frame: the latter is given by its origin O and coordinate\naxes w1, w2, w3. The internal volume of C is discretized by a suitably chosen set of n\npoints P \u00bc {P1,. . ., Pn}. In the given reference frame, point Pi is represented by the\ncoordinates pib for i ? {1,. . .,n} and b ? {1,2,3}.\n\nNext, we introduce a model for the set of sensor devices J \u00bc {1,. . .,r}. The\nsensing capability of each device is characterized by a convex domain Vj. In other\nwords, Vj represents the sensing region of device j. In our case, we will assume that\nVj can be adequately modeled by a truncated pyramid. A local orthonormal refer-\nence frame with origin Oj and axes w\n\n0\njb\n, oriented in parallel with respect to the\n\ncorresponding main frame coordinate axes wb, is associated to each device j. Each\nlocal reference frame origin, identified by its coordinates ojb with respect to the\nmain reference frame, is supposed to be contained in an external convex domain E\nthat embeds C: Oj ? E and C ? E. In this local frame, the coordinates Vjab identify\nthe sensing region verticesVja, for a ? {1,..,s}. (Recall that in the case studied here\nboth C and E are 3D cubes.)\n\nFor each device j, we define a parallelepiped Cj; then Cjgb will denote the\ncoordinates of its vertices with respect to its local frame. We shall assume that each\n\nparallelepiped Cj embeds the corresponding sensing domain Vj. Moreover, for any\nposition of Oj inside E, each point Pi of C is covered by Cj so that we have\n\nVj ? Cj , and C? Cj for j ? {1,. . .,r}.\nIntroducing next the non-negative variables lija ,l\n\n?\nijg , the following convexity\n\nconditions hold:\n\n8i; 8j; 8b pib \u00bc ojb \u00fe\nX\na\n\nVjablija \u00fe\nX\ng\n\nCjgbl\n?\nijg; (10.1)\n\n8i; 8j\nX\na\n\nlija \u00fe\nX\ng\n\nl?ijg \u00bc 1: (10.2)\n\nFrom Eqs. (10.1) and (10.2) it follows that\nP\ng\nl?ijg \u00bc 0 implies Pi ? Vj.\n\n238 G. Fasano and J.D. Pinte?r\n\n\n\nNext, we introduce the indicator variables dij 2 f0; 1g: if dij \u00bc 1, then Pi ? Vj .\nNote that Pi ? Cj always holds, but dij \u00bc 0 does not imply the relation Pi ?\nCj ? Vj. The conditions stated above are thus expressed by the following equations:\n\n8i; 8j\nX\na\n\nlija \u00bc dij: (10.3)\n\nIn the application area discussed here, evidently there is no advantage of\n\ncovering any internal point of C more than once, since such \u201covercovering\u201d could\nnegatively affect the coverage of other points. This aspect can be expressed by the\n\nadditional conditions:\n\n8i\nX\nj\n\ndij ? 1: (10.4)\n\nNext, in our model, a threshold R < r is set to limit the total number of devices\nused to cover C as well as possible. For this purpose, the new binary indicator\nvariables wj 2 0; 1f g are associated with each device j, and the conditions below are\nstated:\n\n8i; 8j dij ? wj: (10.5)\nX\nj\n\nwj ? R: (10.6)\n\nRecall that in the model introduced here the embedding convex domain E is\nassumed to be a parallelepiped. (E is actually a cube in the specific drone simulation\ncase; this assumption facilitates the discussion and the numerical solution proce-\n\ndure, without loss of generality.) We can then set the following bounds on the\n\nposition of each local reference frame Oj that needs to be inside E:\n\n8i; 8b 0 ? oib ? Eb: (10.7)\n\nThe conditions (10.1)\u2013(10.7) provide a comprehensive formulation of the prob-\n\nlem constraints. In order to tighten the model itself by limiting the relative search\n\nregion for the solution process, the auxiliary conditions shown below can be also\n\nintroduced:\n\n8j wj ?\nX\ni\n\ndij: (10.8)\n\nThis way we assume that the sensing region of each device selected covers at\n\nleast one internal point of C. (In the final solution, all unselected devices can be\nsimply dropped.) On the basis of the domain discretization gap adopted to generate\n\n10 Global Optimization Approaches to Sensor Placement: Model Versions. . . 239\n\n\n\nthe internal points Pi, an estimate of a lower bound Ro for the number of devices\nneeded can be introduced by the following constraint:\n\nX\nj\n\nwj ? Ro: (10.9)\n\nSimilarly, introducing a suitable upper bound Rj for the number of points that\ncan be covered by device j, the following conditions can be added:\n\n8j\nX\ni\n\ndij ? Rjwj: (10.10)\n\nOur eventual objective is to maximize the coverage of the set of points: this can\n\nbe expressed by\n\nmax\nX\ni;j\n\ndij: (10.11)\n\nRemark 1 The variables wj could be considered as continuous in the interval [0,1],\nsince conditions (10.5) and (10.8) imply that they are actually binary. If they are\n\ndefined explicitly as binary variables, then their processing priority with respect to\n\nthe other binary variables could give rise to different MILP solution strategies.\n\nRemark 2 Conditions (10.4) imply that the cardinality n of the internal points set\n{Pi} is an upper bound for the objective function (10.11).\n\nRemark 3 Weight factors associated to each dij could be simply introduced as\ncoefficients in the objective function (10.11), if there is a requirement to differenti-\n\nate the internal points based on their (assigned or perceived) importance.\n\n10.2.3 An MINLP Model for Sensor Configurations\nWithout Pre-orientation\n\nIf the assumptions regarding a prefixed sensor orientation are dropped, then the\n\nlocal reference frames of each sensor can have arbitrary orientation. Hence,\n\nalthough the components (10.2)\u2013(10.11) of the MILP model introduced above are\n\nall kept, the relations (10.1) have to be properly extended to consider not only the\n\ntranslation of the local reference frames but also their possible rotation. To obtain\n\nthis model extension, we introduce the following notation. For each discretization\n\npoint Pi, as well as for the origins Oj and verticesVja,Cjg, a corresponding vector, is\ndefined as shown below by (10.12.1)\u2013(10.12.4).\n\nPi \u00bc\nPi1\n\nPi2\n\nPi3\n\n0\nB@\n\n1\nCA (10.12.1)\n\n240 G. Fasano and J.D. Pinte?r\n\n\n\nOj \u00bc\noj1\n\noj2\n\noj3\n\n0\nB@\n\n1\nCA (10.12.2)\n\nVja \u00bc\nVja1\n\nVja2\n\nVja3\n\n0\nB@\n\n1\nCA (10.12.3)\n\nCjg \u00bc\nCjg1\n\nCjg2\n\nCjg3\n\n0\nB@\n\n1\nCA (10.12.4)\n\nFor each local reference frame j, we shall denote by qjbb\u2019 the direction cosines of\nthe local reference frame axesw0jbwith respect to the main frame axeswjb. Then, the\nfollowing orthogonal rotation matrix is defined:\n\nQj \u00bc\nqj11 qj12 qj13\nqj21 qj22 qj23\nqj31 qj32 qj33\n\n0\n@\n\n1\nA (10.12.5)\n\nApplying these notations, the relations (10.1) are extended by the vector\n\nequations shown below:\n\n8i; 8j Pi \u00bc oj \u00fe\nX\na\n\nQjVjalija \u00fe\nX\ng\n\nQjCjgl\n?\nijg: (10.13)\n\nObserve that the extended mathematical model becomes an MINLP, since the\n\nterms\nP\na\nQjVjalija and\n\nP\ng\nQjCjgl\n\n?\nijg are nonlinear.\n\n10.3 Applications\n\n10.3.1 Modeling Considerations in the MILP Formulation\n\nGiven n internal points and r possible devices of which at most R can be selected,\nthe corresponding MILP model instance is characterized by the following key\n\nmodel size descriptors:\n\nO(nr), d item-device assignment binary variables;\nO(r), w device selection binary variables;\nO(3nr), convexity constraints.\n\n10 Global Optimization Approaches to Sensor Placement: Model Versions. . . 241\n\n\n\nIf we consider practically inspired model instances, then even for moderate scale\n\nsensor location problems, the (simpler) MILP model described in Sect. 10.3.1\n\nquickly becomes extremely hard to solve. Therefore, obtaining just a satisfactory\nsolution within a reasonable computational time frame can be a challenging task.\n\nA promising MILP strategy is currently under development to speed up the\n\nMILP solution process. Its basic concept consists of performing a recursive proce-\n\ndure that at each step perturbs the objective function by suggesting the solution\nfound at the previous one. In other words, the objective function (10.11) is modified\n\nby adding the perturbation terms kijdij , and it is thus substituted by the following\nexpression:\n\nmax\nX\ni;j\n\n\u00f0dij \u00fe kijdij\u00de (10.14)\n\nIn our experimentation framework, we set at each step kij \u00bc 1 if in the previous\nstep point i has been assigned to device j and kij \u00bc 0 otherwise. (Alternative weights\nkij could also be considered to achieve different solution strategies, e.g., using kij>1.)\nMore precisely, at the initial step, all kij terms are equal to 0, and then a first (not\nproven optimal) solution is looked for. At the second step, these terms are set to 1 if\n\nthe corresponding dij variables (in the solution of the initial step) have been given\nvalue 1; otherwise, they are kept at 0. Denoting by No the total number of points that\nin the initial solution step are associated to a camera (i.e., the corresponding dij \u00bc 1),\nthe following constraint is added:\n\nX\ni;j\n\ndij ? No: (10.15)\n\nThis way, in the second step, the nonzero dij variables are induced to maintain\ntheir active \u201cdecision-making\u201d status, and the new solution will not be \u201ctoo far\u201d\n\nfrom the previous one. Notice that kij can be set to 1, even if the corresponding dij is\n0, provided that point i is actually covered by camera j; in any case, in the presence\nof several possible candidates, for each i, at most one kij is set to 1. Moreover,\nconsidering (10.15), the new solution cannot become inferior to the previous one.\n\nThis way, a recursive process (adopting a depth-first strategy) is performed, until\n\nthe number of points corresponding to non-zero dij variables keeps on increasing.\n\n10.3.2 An Illustrative Case Study\n\nIn the case study presented here, we consider two concentric cubes corresponding to\n\nthe domains C and E referred to earlier: see Fig. 10.1. Recall that the field of view of\neach sensor device is modeled by a truncated pyramid which has a rectangular\n\n242 G. Fasano and J.D. Pinte?r\n\n\n\nbasis. The key information for our numerical example is summarized by the\n\nfollowing data:\n\nSide length of C: 10 units;\nSide length of E: 13 units;\nMaximum number of cameras admitted: R \u00bc 8;\nNumber of internal points to observe: n \u00bc 343.\n\nThe MILP model presented in Sect. 10.3.1 has been applied with these data,\n\ntaking into account a set of 12 identical sensor devices, each one with a prefixed\n\norientation (that is parallel to the main reference frame). Figure 10.1 depicts an\n\nexample of the possible solution topology: the configuration shown is similar to the\n\nactual case studied.\n\nOur numerical experiments show that a suboptimal solution to the MILP model\n\nin which 339 points (out of 343) are covered can be obtained in about 1 CPU hour,\n\nby adopting the MILP solution strategy described in Sect. 10.3.1. An optimal\n\nsolution (in which all 343 points covered) has been found in about 12 CPU hours.\n\nIn these numerical experiments, a personal computer with a Core 2 Duo P8600,\n\n2.40 GHz processor, and 2 GB RAM was used, running under Windows XP\n\nProfessional (updated with Service Pack 2). The MILP solver used is the IBM\n\nILOG CPLEX Optimizer Version 12.3 [28].\n\n10.4 Concluding Remarks and Future Work\n\nIn this chapter a research activity related to an important space engineering appli-\n\ncation has been summarized. We consider the problem of sensor network place-\n\nment, in order to cover a 3D convex region as well as possible. Dictated by the\n\nFig. 10.1 Case study topology\n\n10 Global Optimization Approaches to Sensor Placement: Model Versions. . . 243\n\n\n\nmultimodal structure of this general problem type, our modeling and solution\n\napproach is driven by a global optimization point of view. Two corresponding\n\nmodels are introduced: one of these is a sizeable MILP, while the second one is an\n\neven more challenging MINLP. The simplified MILP model is aimed at finding\n\nhigh-quality\u2014yet, most typically, suboptimal\u2014solutions to the original problem.\n\nSuch solutions can be improved, if necessary, by initializing and solving a related\n\n(extended) MINLP model. Further solution refinement could be profitably\n\nobtained, e.g., by adopting the Phi-function formulation introduced by Stoyan\nand Romanova [51].\n\nWhile the literature devoted to sensor and camera networks is fairly extensive,\n\nthe less frequently used GO-based modeling and solution approach deserves further\n\ninvestigations. Although our approach currently can address (numerically) only\n\nrelatively small-scale realistic applications, it is quite promising. We think that GO\n\nmethodology will effectively support the solution of a significant class of similar\n\nproblems when the globally optimal solution (or at least a near-optimal numerical\n\nsolution based on truly global scope search) is required.\n\nIn future studies, further experimental analysis will be carried out to handle real-\n\nworld-level problem instances, applying both the MILP and the MINLP models.\n\nExtensions to include more complex scenarios that involve, e.g., internal obstacles\n\nin the region to observe represent another area of significant practical interest,\n\nimplying new modeling and computational challenges. We plan to utilize also other\n\nsolver engine options depending on the model formulation used.\n\nAcknowledgments Thanks are due to Stefano Gliozzi (Business Consulting Services, IBM) for\n\nuseful discussions related to the subject and for his valuable support of our related experimental\n\nanalysis and results.\n\nReferences\n\n1. Abrams, Z., Goel, A., Plotkin, S.: Set k-cover algorithms for energy efficient monitoring in\n\nwireless sensor networks. In: Proceedings of the 3rd International Symposium on Information\n\nProcessing in Sensor Networks, Berkeley, CA, USA, 26\u201327 April 2004, pp. 424\u2013432 (2004)\n\n2. Alt{nel, I.K., et al.: Effective coverage in sensor networks: binary integer programming\nformulations and heuristics. In: Proceedings of the IEEE International Conference on\n\nCommunications (ICC\u201906), vol. 9, pp. 4014\u20134019. Istanbul, Turkey, 11\u201315 June 2006\n\n3. Akyildiz, I.F., et al.: Wireless sensor networks: a survey. Comput. Netw.: Int. J. Comput.\n\nTelecommun. Netw. 38(4), 393\u2013422 (2002)\n\n4. Alam, S.M., Haas, Z.J.: Coverage and connectivity in three-dimensional networks.\n\nIn: Proceedings of MobiCom\u201906, Los Angeles, CA, USA, 23\u201329 Sept 2006\n\n5. Barbosa, J., et al.: Optimal camera placement for total coverage. In: Proceedings of the\n\n2009 I.E. international conference on Robotics and Automation, Kobe, Japan, 12\u201317 May\n\n2009, pp. 3672\u20133676 (2009)\n\n6. Berry, J., et al.: Sensor placement in municipal water networks with temporal integer pro-\n\ngramming models. J. Water Resour. Plann. Manage. 132(4), 218\u2013224 (2006)\n\n244 G. Fasano and J.D. Pinte?r\n\n\n\n7. Biswas, P., Ye, Y.: Semidefinite programming for ad hoc wireless sensor network localization.\n\nIn: Proceedings of the 3rd International Symposium on Information Processing in Sensor\n\nNetworks (IPSN \u201904), pp. 46\u201354. Berkeley, CA, USA, 26\u201327 April 2004. (2009)\n\n8. Bomze, I.M., et al. (eds.): Developments in Global Optimization. Kluwer, Dordrecht (1997)\n\n9. Buczak, A.L., et al.: Genetic algorithm convergence study for sensor network optimization.\n\nInf. Sci. Inf. Comput. Sci. 133(3\u20134), 267\u2013282 (2001)\n\n10. Cardei M., et al.: Energy-efficient target coverage in wireless sensor networks. In: Proceedings\n\nof the 24th Annual Joint Conference of the IEEE Computer and Communication Societies\n\n(INFOCOM), vol. 3, pp. 1976\u20131984. Miami, FL, USA, 13\u201317 March 2005\n\n11. Cerpa, A., et al.: Habitat monitoring: application driver for wireless communications technol-\n\nogy. Comput. Comm. Rev. 31(2) (2001). Supplement\n\n12. Chakrabarty, K., et al.: Grid coverage for surveillance and target location in distributed sensor\n\nnetworks. IEEE Trans. Comput. 51(12), 1448\u20131453 (2002)\n\n13. Chen, F., Jiang, P., Xue, A., et al.: An algorithm of coverage control for wireless sensor\n\nnetworks in 3d underwater surveillance systems. In: Huang, D.S. (ed.) ICIC 2008, LNCS 5226,\n\npp. 1206\u20131213. Springer, Berlin (2008)\n\n14. Drezner, Z., Suzuki, A.: Covering continuous demand in the plane. J. Oper. Res. Soc. 61,\n\n878\u2013881 (2010)\n\n15. Dhillon, S.S., Chakrabarty, K., Iyengar, S.S.: Sensor placement for grid coverage under\n\nimprecise detections. In: Proceedings of the International Conference on Information Fusion,\n\npp. 1581\u20131587. Annapolis, MD, USA, 8\u201311 July 2002\n\n16. Dhillon, S.S., Chakrabarty, K.: Sensor placement for effective coverage and surveillance in\n\ndistributed sensor networks. In: Proceedings of the IEEE Wireless Communications and\n\nNetworking Conference, pp 1609\u20131614. New Orleans, LA, USA, 16\u201320 March 2003\n\n17. Erdem, U., Sclaroff, S.: Optimal placement of cameras in floor-plans to satisfy task\n\nrequirements and cost constraints. In: OMNIVIS Workshop, pp. 30\u201341. Prague, Czech Repub-\nlic, 16 May 2004\n\n18. Fleishman, S., Cohen-Or, D., Lischinski, D.: Automatic camera placement for image-based\n\nmodeling. Comput. Graphics Forum 19(2), 101\u2013110 (2000)\n\n19. Fusco, G., Gupta, H.: Selection and orientation of directional sensors for coverage maximiza-\n\ntion. In: Proceedings of the 6th Annual IEEE Communications Society Conference on Sensor,\n\nMesh and Ad Hoc Communications and Networks, pp. 556\u2013564. Rome, Italy, 22\u201326 June\n\n(2009)\n\n20. Gao, J.F., Shi, Y.J.: A simple coverage-evaluating approach for wireless sensor networks with\n\narbitrary sensing areas. Inform. Process. Lett. 106(4), 159\u2013161 (2008)\n\n21. Gentile, C.: Distributed sensor location through linear programming with triangle inequality\n\nconstraints. IEEE Trans. Wireless Comm. 6(7), 2572\u20132581 (2007)\n\n22. Harada, J., Shioda, S., Saito, H., Path: Coverage properties of randomly deployed sensors with\n\nfinite data-transmission ranges. Comput. Netw.: Int. J. Comput. Telecommun. Netw. 53(7),\n\n1014\u20131026 (2009)\n\n23. Horst, R., Pardalos, P.M. (eds.): Handbook of Global Optimization, 1st edn. Kluwer,\n\nDordrecht (1995)\n\n24. Horst, R., Tuy, H.: Global Optimization: Deterministic Approaches. Springer, Berlin (1996)\n\n25. H\u20acorster, E., Lienhart, R.: On the optimal placement of multiple visual sensors. In: Proceedings\nof the 4th ACM international Workshop on Video Surveillance and Sensor Networks\n\n(VSSN \u201906), Santa Barbara, California, USA, 27 Oct 2006. ACM, New York (2002)\n\n26. Howard, A., Mataric, M.J., Sukhatme, G.S.: Mobile sensor network deployment using poten-\n\ntial fields: a distributed, scalable solution to the area coverage problem. In: Proceedings of the\n\nInternational Symposium on Distributed Autonomous Robotics Systems (DARS02),\n\npp 299\u2013308. Fukuoka, Japan, 25\u201327 June 2002\n\n27. Huang CF, Tseng YC, Lo LC (2004) The coverage problem in three-dimensional wireless\n\nsensor networks. In: Global Telecommunications Conference 2004 (GLOBECOM \u201904 IEEE),\n\nvol. 5, pp. 3182\u20133186. Dallas, Texas, Nov 29\u2013Dec 3, 2004\n\n10 Global Optimization Approaches to Sensor Placement: Model Versions. . . 245\n\n\n\n28. IBM Corporation: ILOG CPLEX Optimizer. In: High Performance Mathematical Optimiza-\n\ntion Engines. IBM Corporation Software Group, Route 100 Somers, NY, USA. WSD14044-\n\nUSEN-01 (2010)\n\n29. Kang, C.W., Golay, M.W.: An integrated method for comprehensive sensor network develop-\n\nment in complex power plant systems. Reliability Eng. Syst. Safety 67, 17\u201327 (2000)\n\n30. Lazos, L., Poovendran, R.: Stochastic coverage in heterogeneous sensor networks. ACM\n\nTrans. Sensor Netw. 2(3), 325\u2013328 (2006)\n\n31. Li, D., Sun, X.: Nonlinear Integer Programming. Springer, New York (2006)\n\n32. Liberti, L., Maculan, N. (eds.): Global Optimization: From Theory to Implementation.\n\nSpringer, New York (2005)\n\n33. Meguerdichian, S., et al.: Coverage problems in wireless ad-hoc sensor networks. In:\nProceedings of the INFCOM 2001 Conference, pp. 1380\u20131387. Anchorage, Alaska, USA,\n22\u201326 April 2001\n\n34. Meguerdichian, S., Potkonjak, M.: Low power 0/1 coverage and scheduling techniques in\n\nsensor networks. Technical Report 030001, Computer Science Department, University of\n\nCalifornia Los Angeles (2003)\n\n35. Miorandi, D., Altman, E.: Coverage and connectivity of ad hoc networks in presence of\n\nchannel randomness. In: Proceedings of IEEE INFOCOM \u201905, pp. 491\u2013502. Miami, USA,\n\n13\u201317 March 2005\n\n36. Mittal, A., Davis, L.: Visibility analysis and sensor planning in dynamic environments. In: 8th\n\nEuropean Conference on Computer Vision (ECCV 2004), vol. 1, pp. 175\u2013189. Prague, Czech\n\nRepublic, 11\u201314 May 2004\n\n37. Mockus, J., et al.: Bayesian Heuristic Approach to Discrete and Global Optimization. Kluwer,\n\nDordrecht (1996)\n\n38. Molina, A., Athanasiadou, G.E., Nix, A.R.: The automatic location of base-stations for\n\noptimised cellular coverage: a new combinatorial approach. In: IEEE 49th Vehicular Tech-\n\nnology Conference, vol. 1, pp. 606\u2013610. Houston, Texas, USA, 16\u201320 May 1999\n\n39. Nowak, I.: Relaxation and Decomposition Methods for Mixed Integer Nonlinear Program-\n\nming. Springer, New York (2005)\n\n40. Onur, E., et al.: Coverage in sensor networks when obstacles are present. In: Proceedings of the\n\nIEEE International Conference on Communications (ICC \u201806), vol. 9, pp. 4077\u20134082.\n\nIstanbul, Turkey, 11\u201315 June 2006\n\n41. Pardalos, P.M., Romeijn, H.E.: Handbook of Global Optimization, 2nd edn. Kluwer,\n\nDordrecht (2002)\n\n42. Pinte?r, J.D.: Global Optimization in Action. Kluwer, Dordrecht (1996)\n\n43. Pinte?r, J.D.: Global optimization: software, test problems, and applications. In: Pardalos, P.M.,\n\nRomeijn, H.E. (eds.) Handbook of Global Optimization, 2nd edn, pp. 515\u2013569. Kluwer,\n\nDordrecht (2002))\n\n44. Pinte?r, J.D.: Software development for global optimization. In: Pardalos, P.M., Coleman, T.F.,\n\n(eds.) Global Optimization: Methods and Applications, pp. 183\u2013204. Fields Institute\n\nCommunications vol. 55. Published by the American Mathematical Society, Providence, RI\n\n(2009)\n\n45. Pottie, G.J., Kaiser, W.J.: Wireless integrated network sensors. Comm. ACM 43, 51\u201358 (2000)\n\n46. Rowe, E.G., Wettergren, T.A.: Coverage and reliability of randomly distributed sensor\n\nsystems with heterogeneous detection range. Int. J. Distrib. Sensor Netw. 5(4), 303\u2013320 (2009)\n\n47. Sahni, S., Xu, X.: Algorithms for wireless sensor networks. Int. J. Distrib. Sensor Netw. 1(1),\n\n35\u201356 (2005)\n\n48. Shen, C., Srisathapornphat, C., Jaikaeo, C.: Sensor information networking architecture and\n\napplications. IEEE Personal Comm. 8(4), 52\u201359 (2001)\n\n49. So, A.M., Ye, Y.: Theory of semidefinite programming for sensor network localization. Math.\n\nProgram. 109(2), 367\u2013384 (2007)\n\n50. Sorokin, A., et al.: Mathematical programming techniques for sensor networks. Algorithms 2,\n\n565\u2013581 (2009)\n\n246 G. Fasano and J.D. Pinte?r\n\n\n\n51. Stoyan, Y.G., Romanova, T.Y.: Mathematical models of placement optimisation: two- and\n\nthree-dimensional problems and applications. In: Fasano, G., Pinte?r, J.D. (eds.) Modeling and\n\nOptimization in Space Engineering. Springer, New York (2013)\n\n52. Strongin, R.G., Sergeyev, Y.D.: Global Optimization with Non-convex Constraints. Kluwer,\n\nDordrecht (2000)\n\n53. Tawarmalani, M., Sahinidis, N.V.: Convexification and Global Optimization in Continuous\n\nand Mixed-Integer Nonlinear Programming. Kluwer, Dordrecht (2002)\n\n54. Venkatesh, S., Buehrer, R.M.: A linear programming approach to NLOS error mitigation in\n\nsensor networks. In: Proceedings of the 5th International Conference on Information\n\nprocessing (IPSN \u201906), pp. 301\u2013308. Nashville, TN, USA, 19\u201321 April 2006\n\n55. Xing, G., et al.: Integrated coverage and connectivity configuration for energy conservation in\n\nsensor networks. ACM Trans. Sensor Netw. 1(1), 36\u201372 (2005)\n\n56. Wang, H.B., Yao, K., Erstrin, D.: Information-theoretic approaches for sensor selection and\n\nplacement in sensor networks for target localization and tracking. J. Commun. Networks 7(4),\n\n438\u2013449 (2005)\n\n57. Yao, Y., et al.: Can you see me now? Sensor positioning for automated and persistent\n\nsurveillance. IEEE Trans. Syst. Man Cybernetics, Part B: Cybernetics 40(1), 101\u2013115 (2010)\n\n58. Zabinsky, Z.B.: Stochastic Adaptive Search for Global Optimization. Kluwer, Dordrecht\n\n(2003)\n\n59. Zhang, M., Du, X., Nygard, K.: (2005) Improving coverage performance in sensor networks by\n\nusing mobile sensors. In: Proceedings of the Military Communications Conference (MILCOM\n\n2005), vol. 5, pp. 3335\u20133341. Atlantic City, NJ, USA, 17\u201320 Oct 2005\n\n60. Zou, Y., Chakrabarty, K.: Sensor deployment and target localization in distributed sensor\n\nnetworks. ACM Trans. Embed. Comput. Syst. 3(1), 61\u201391 (2004)\n\n61. Zou, Y., Chakrabarty, K.: Uncertainty-aware and coverage-oriented deployment for sensor\n\nnetworks. J. Parallel Distrib. Comput. 64(7), 788\u2013798 (2004)\n\n62. Zou, Y., Chakrabarty, K.: A distributed coverage- and connectivity-centric technique for\n\nselecting active nodes in wireless sensor networks. IEEE Trans. Comput. 54(8), 978\u2013991\n\n(2005)\n\n10 Global Optimization Approaches to Sensor Placement: Model Versions. . . 247\n\n\n\nChapter 11\n\nSpace Module On-Board Stowage\n\nOptimization by Exploiting Empty\n\nContainer Volumes\n\nGiorgio Fasano and Maria Chiara Vola\n\nAbstract This chapter discusses a research activity recently carried out by Thales\n\nAlenia Space, to support International Space Station (ISS) logistics. We investigate\n\nthe issue of adding a number of virtual items (i.e. items not given a priori) inside\n\npartially loaded containers, in order to exploit the volume still available on board as\n\nmuch as possible. Items already accommodated are supposed to be tetris-like,\nwhile the additional virtual items are assumed to be parallelepipeds. A mixed-\n\ninteger non-linear programming (MINLP) model is introduced first, then possible\n\nlinear (MILP) approximations are discussed, and a corresponding heuristic solution\n\napproach is proposed. Guidelines for future research are highlighted, and experi-\n\nmental insights are provided to show the efficiency of the proposed approach.\n\nKeywords Space cargo accommodation \u2022Container loading problem \u2022Non-standard\n\nthree-dimensional packing \u2022 Virtual items \u2022 Tetris-like items \u2022 MINLP models\n\u2022 MILP approximations \u2022 Heuristics\n\n11.1 Introduction\n\nThis study has been motivated by the challenging issue of cargo accommodation in\n\nspace vehicles and modules. Specifically, we focus on the on-board stowage\n\nproblem of the International Space Station (ISS, http://www.nasa.gov) with partic-\n\nular reference to the European Columbus Laboratory (http://www.esa.int). The\n\nlaboratory also provides logistic support for the ISS (consult [6]).\n\nG. Fasano (*)\nThales Alenia Space Italia S.p.A., Str. Antica di Collegno 253, 10146 Turin, Italy\n\ne-mail: giorgio.fasano@thalesaleniaspace.com\n\nM.C. Vola\n\nAltran Italia S.p.A., Turin, Italy\n\ne-mail: mariachiara.vola@altran.it\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_11,\n# Springer Science+Business Media New York 2013\n\n249\n\nhttp://www.nasa.gov\nhttp://www.esa.int\nmailto:giorgio.fasano@thalesaleniaspace.com\nmailto:mariachiara.vola@altran.it\n\n\nA fleet of vehicles is used for transportation, on the basis of the cargo plan\n\nprovided by NASA, to control the upload/download flow logistic to/from the ISS.\n\nThe cargo plan is supposed to be repeatedly updated over time, as the whole logistic\n\nprocess continues. If not all planned upload cargo can be accommodated at a given\n\ntime, then part of it can be temporary crossed off the list and taken into account in\n\nfurther launches.\n\nTo meet (at least approximately) a given cargo plan, a number of non-trivial\n\nthree-dimensional packing problems arise. Once the optimal packing solution\n\n(that offers the best loading of the listed items) at the current step is obtained, the\n\ncargo engineer is still asked to execute a further demanding job. How could the\n\nresidual space (volume) be suitably exploited? More precisely, we assume that it is\n\nallowed, for each container not yet fully loaded, to add a certain number of virtual\n\nitems (that are not known a priori), by reallocating the ones already accommodated,\n\nif necessary. What sort of virtual items could be properly added, in order to\n\nmaximize the loaded volume of each container? A further optimization process is\n\nthen performed, and possible \u201chole-filling\u201d (virtual) items are suggested, thereby\n\nmaking the achievement of further cargo planning objectives significantly easier.\n\nIn this chapter we discuss the issue of optimizing the volume exploitation of a\n\npartially loaded single container by adding up to a maximum number of virtual\n\nitems, repositioning, if necessary the objects already loaded. From the analytical\n\npoint of view, this problem is quite similar to the one consisting of creating internal\n\nseparation elements of filling material (such as foam), to protect the items\n\nloaded inside the containers and to prevent their collision especially during the\n\nlaunch phase.\n\nAlthough our study has originated in order to tackle the on-board stowage of\n\nspace modules, it can be applied also in many other contexts. Examples include\n\nthe use of autonomous robots in future space exploration (e.g. to identify accessi-\n\nbility zones and to support loading and assembling activities); another area\u2014not\n\nin the space engineering context\u2014is that of the very large system integration\n\n(VLSI).\n\nThe literature related to packing issues is extensive (consult, e.g. [3]). A major\n\nsubject area within this broad context is the orthogonal packing of two- and three-\n\ndimensional objects inside convex domains (cf., e.g. [1, 7, 12, 13, 15]). A number of\n\nmixed-integer (linear) programming (MILP) formulations of two- and three-\n\ndimensional orthogonal packing problems are available (see, e.g. [2, 14, 16]). The\n\ntopic discussed here extends a previous MIP-based approach (see [4]) devoted to\n\nthe three-dimensional packing of tetris-like items within a convex domain, in\npresence of additional conditions. The term tetris-like refers either to\nparallelepipeds or, more generally, to properly connected clusters of mutually\n\northogonal parallelepipeds as illustrated by Fig. 11.1.\n\nIn the following discussion, we assume that the container is a convex domain.\n\nAlready loaded items are assumed to be tetris-like, while the additional virtual\nitems are parallelepipeds of various sizes. Our objective is to create a number of\n\nvirtual items (without exceeding a given bound) and to determine their sizes\n\nso that the total loaded volume inside the container is maximized.\n\n250 G. Fasano and M.C. Vola\n\n\n\nThe problem is stated in Sect. 11.2. Section 11.3 formulates it in terms of mixed-\n\ninteger non-linear programming (MINLP) (consult, e.g. [8\u201311, 17, 18, 22]).\n\nA simplified approach, based on MILP approximations, is discussed in Sect. 11.4.\n\nA review of some real-world applications is given in Sect. 11.5, including the\n\ndiscussion of a heuristic approach that has been quite efficient in practice.\n\n11.2 Problem Statement\n\nTo formulate the problem studied, we shall consider a convex domain D which is a\npolyhedron (or it can be approximated by a polyhedron). Inside D, we have a set of\nn tetris-like items (TLI), each one consisting of a cluster of mutually orthogonal\nparallelepipeds, called components, see Fig. 11.1.\n\nWe shall also suppose that the TLIs have been positioned within D, in compli-\nance with the following packing rules:\n\n\u2022 each TLI has to be positioned parallel to an axis of a pre-fixed orthonormal\n\ndomain reference frame (orthogonality conditions);\n\n\u2022 each TLI has to be contained within D (domain conditions);\n\u2022 components of different TLIs cannot overlap (non-intersection conditions).\n\nIn particular, thismeans that at least a feasible solution to the orthogonal packing of\n\nthe given set of TLIs exists. We are then asked to add up toN virtual items, consisting\nof parallelepipeds with sides of variable length (but not less than a given minimal\n\nthreshold), so that the total volume occupied by the TLIs plus the virtual items\n\nis maximized. We are not requested to keep the initial feasible solution for the TLIs,\n\ni.e. we are allowed to move them by arbitrary feasible rotations and translations.\n\nHowever, we must take into account the following rules for each virtual item (VI):\n\n\u2022 each VI side has to be parallel to an axis of the pre-fixed orthonormal domain\n\nreference frame (orthogonality conditions);\n\nFig. 11.1 Tetris-like item\n(two-dimensional\n\nrepresentation)\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 251\n\n\n\n\u2022 each VI has to be contained within D (domain conditions);\n\u2022 VIs cannot overlap with the packed TLIs or with other VIs (non-intersection\n\nconditions).\n\n11.3 An MINLP Model Formulation\n\nA MINLP formulation of the outlined optimization problem is described next.\n\nFirst of all, let us point out that the packing rules expressed in Sect. 11.2 can be\n\ngrouped as follows:\n\n\u2022 orthogonality, domain and non-intersection conditions for TLIs only;\n\n\u2022 orthogonality, domain and non-intersection conditions for VIs only;\n\n\u2022 non-intersection conditions between TLIs and VIs.\n\nThe orthogonality, domain and non-intersection conditions for TLIs have been\n\ndiscussed in detail in [4]. For the sake of completeness, we will briefly discuss these\n\nconditions here. An orthogonal main reference frame with origin O and axes wb,\nb ? {1,2,3} is defined, and a local reference frame is associated to each TLI. Each\nlocal reference frame is chosen so that all TLI components lie within its first\n\n(positive) octant. Its origin coordinates, with respect to the main reference frame\n\naxes, are denoted by obi . Next, we introduce the set O of all possible orthogonal\nrotations, admissible for any TLI\u2019s local reference frame, with respect to the main\n\none. Under the orthogonality assumptions there are 24 orthogonal rotations since\n\nthe TLIs are in general asymmetric objects.\n\nFor each TLI i, we introduce the set Ci of its (parallelepiped) components. Ehi\nindicates, for each component h of TLI i, the set of the eight vertices associated to it,\nand an extension of this set is obtained by adding to Ehi the geometrical centre of\ncomponent h. This extended set is denoted by E?hi and its generic element by\n?; ? \u00bc 0, in particular, represents the geometrical centre. For each TLI i and each\npossible (orthogonal) orientation o ? O \u00bc {1,. . .,24}, the binary variables Woi\n2 0; 1f g are defined, with the meaning: Woi \u00bc 1 if TLI i has the orthogonal\norientation o ? O, and Woi \u00bc 0 otherwise.\n\nThe orthogonality conditions for TLIs (only) are expressed as follows:\n\n8i\nX\no\n\nWoi \u00bc 1; (11.1)\n\n8b; 8i; 8h 2 Ci; 8? 2 E?hi; wb?hi \u00bc obi \u00fe\nX\no\n\nWob?hiWoi; (11.2)\n\nwhere wb?hi are the vertex coordinates of component h or its geometrical centre,\nrelative to TLI i, with respect to the reference frame axes wb; Wob?hi are the\ncoordinate differences between points ? 2 E?hi and the origin of the local reference\n\n252 G. Fasano and M.C. Vola\n\n\n\nframe, withobi coordinates, projected along the wb axis of the main reference frame,\ncorresponding to the TLI i orientation o.\n\nNext, the domain conditions for TLIs (only) are expressed as follows:\n\n8b; 8i; 8h 2 Ci; 8? 2 Ehi wb?hi \u00bc\nX\ng\n\nVbglg?hi; (11.3)\n\n8i; 8h 2 Ci; 8? 2 Ehi\nX\ng\n\nlg?hi \u00bc 1; (11.4)\n\nwhere lg?hi are non-negative variables; (V11,V21,V31),. . ., (V1u,V2u,V3u) are the\nvertices of D (whose coordinates, in the main reference frame, are assumed as\nnon-negative, without loss of generality).\n\nThe non-intersection conditions (again, for TLIs only) are represented by the\n\nconstraints below:\n\n8b; 8i; 8j; i< j; 8h 2 Ci; 8k 2 Cj\nwb0hi ? wb0kj ? 1\n\n2\n\nX\no\n\nLobhiWoi \u00fe LobkjWoj\n? ?? Db 1? s\u00febhkij\n\n? ?\n;\n\n(11.5.1)\n\n8b; 8i; 8j; i< j; 8h 2 Ci; 8k 2 Cj\nwb0kj ? wb0hi ? 1\n\n2\n\nX\no\n\nLobhiWoi \u00fe LobkjWoj\n? ?? Db 1? s?bhkij\n\n? ?\n;\n\n(11.5.2)\n\n8i; 8j; i< j; 8h 2 Ci; 8k 2 Cj\nX\nb\n\ns\u00febhkij \u00fe s?bhkij\n? ?\n\n? 1; (11.6)\n\nwhere Db are the sides (parallel to the main reference frame axes) of the parallele-\npiped of minimum volume that enclosesD;wb0hi andwb0hj are the centre coordinates\nof components h and k; Lobhi and Lobkj are their sides, parallel to the wb axis,\ncorresponding to the orientation o and s\u00febhkij and s\n\n?\nbhkij 2 f0; 1g. If either in (11.5.1)\n\nor (11.5.2) a variable s is set to one, then the corresponding constraint is called a\nrelative position constraint.\n\nConstraints (11.1)\u2013(11.6) represent the necessary and sufficient conditions for\n\nplacing the given n TLIs in compliance with the packing rules stated above and hold\nwhen only TLIs are involved (constraints 11-6 can be expressed in terms of\n\nequations, in order to make the model formulation tighter). The orthogonality,\ndomain and non-intersection conditions for VIs only, as well as the non-intersection\n\nones involving both TLIs and VIs, are formulated next.\n\nAs the number of VIs actually used may be smaller than the maximum allowable\n\nN, the binary variable wj ? {0,1}, j ? {1,. . .,N}, is introduced: wj\u00bc1 if VI j is used,\nand wj \u00bc 0 otherwise.\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 253\n\n\n\nThe orthogonality conditions for VIs are then implicitly stated by the following\n\ndomain conditions and hold for each vertex ? of VI j:\n\n8b; 8j; 8? 2 Ej wb?j \u00bc\nX\ng\n\nVbglg?j; (11.7)\n\n8j; 8? 2 Ej\nX\ng\n\nlg?j \u00bc wj; (11.8)\n\nwhere E j is the set of vertices associated to VI j andwb?j are their coordinates; both\nwb?j and lg?j are non-negative variables.\n\nThe following inequalities represent the non-intersection conditions between the\n\ngeneric TLI i and VI j:\n\n8b; 8i; 8j; 8h 2 Ci\nwb0hi ? wb0j ? 1\n\n2\n\nX\no\n\nLobhiWoi\n? ?\u00fe 1\n\n2\nlbj ? Db 1? s\u00febhij\n\n? ?\n;\n\n(11.9.1)\n\n8b; 8i; 8j; 8h 2 Ci\nwb0j ? wb0hi ? 1\n\n2\n\nX\no\n\nLobhiWoi\n? ?\u00fe 1\n\n2\nlbj ? Db 1? s?bhij\n\n? ?\n;\n\n(11.9.2)\n\n8i; 8j; 8h 2 Ci\nX\nb\n\ns\u00febhij \u00fe s?bhij\n? ?\n\n\u00bc wj; (11.10)\n\nwhere wb0j are the centre coordinates of VI j, lbj the side parallel to the wb axis,\n\ns\u00febhij 2 f0; 1g and s?bhij 2 f0; 1g are binary variables.\nThe condition s\u00febhij \u00bc 1 implies that the side projection of h and j respectively do\n\nnot overlap along the wb axis and h precedes j, while s\u00febhij \u00bc 0 makes the\ncorresponding non-intersection constraint redundant. An essentially identical con-\n\nsideration holds for s?bhij\nAnalogous constraints are stated when dealing with the non-intersection\n\nconditions relative to each pair of VIs:\n\n8b; 8j; 8j0 ; j<j0 wb0j ? wb0j0 ?\n1\n\n2\nlbj \u00fe lbj0\n? ?\n\n? Db 1? s\u00febjj0\n? ?\n\n; (11.11.1)\n\n8b; 8j; 8j0 ; j<j0 wb0j0 ? wb0j ?\n1\n\n2\nlbj \u00fe lbj0\n? ?\n\n? Db 1? s?bjj0\n? ?\n\n; (11.11.2)\n\n8j; 8j0 ; j<j0\nX\nb\n\ns\u00fe\nbjj0 \u00fe s?bjj0\n\n? ?\n? wj \u00fe wj0 ? 1: (11.12)\n\n254 G. Fasano and M.C. Vola\n\n\n\nThe lower bound L is further introduced for all VI sides, in order to obtain valid\nsolutions from a practical point of view (since too small VIs would be useless),\n\ntogether with additional upper bounds:\n\n8j Lwj ? lbj ? Dbwj: (11.13)\n\nThe objective function to maximize is simply defined by the total volume of the\n\nVIs added:\n\nmax\nX\nj\n\nY\nb\n\nlbj\n\n( )\n: (11.14)\n\nRemark 1 In [4], a number of additional conditions such as a given minimum gap\nbetween items, the pre-fixed position or orientation of some of them, the presence\n\nof structural elements, forbidden zones (holes) inside the domain and separation\nplanes (movable within given ranges) have been taken into account. Such\n\nconditions can be easily added to the model under consideration here; in fact,\n\nsuch conditions are taken into account in some of the tests reported in Sect. 11.5).\n\nRemark 2 As far as the balancing conditions are concerned, the concept expressed\nin the previous work [4] could also be easily added to the present MINLP model by\n\nassociating to each (added) VI a constant (average) density r . The previous\nbalancing expressions are rewritten:\n\n8g;cg? ? 0;\nXr\ng\u00bc1\n\ncg? \u00bc m\n\n8b\nXn\ni\u00bc1\n\nMiwbi \u00fe\nXN\nj\u00bc1\n\nrwbj\nY\nb\n\nlbj\n\n !\n\u00bc\nXr\ng\u00bc1\n\nVbgcg?\n\nwhere\n\nm \u00bc\nXn\ni\u00bc1\n\nMi \u00fe\nXN\nj\u00bc1\n\nr\nY\nb\n\nlbj\n\n !\n:\n\nDifferently from the case discussed in [4], the above conditions are not linear.\n\nRemark 3 The presence of the binary variable wj in the expressions (11.13)\nguarantees that if a certain virtual item is not added, its contribution to the total\nvolume computation is zero.\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 255\n\n\n\n11.4 MILP Model Approximations\n\nThe MINLP model formulated in Sect. 11.3 is (most likely) hard to solve to\n\noptimality. A first simple linear approximation is generated easily by adopting the\n\nsurrogate objective function below:\n\nmax\nX\nb;j\n\nlbj\n\n( )\n: (11.15)\n\nAn alternative approach consists of substituting the original objective function\n\n(11.14) by a separable one. This can be easily achieved by adopting the (equivalent)\n\nobjective function:\n\nmax\nX\nj;b\n\nln lbj\n\n( )\n: (11.16)\n\nA linear piece-wise approximation of each single-variable term then reduces the\n\noriginal MINLP model to a much simpler (approximate) MILP (cf., e.g. [20]). A\n\nstraightforward formulation to obtain this can be achieved as follows (consult [21]).\n\nFor each b, we introduce an arbitrary partition Ab0; . . . ;Aba; . . .\n? ?\n\nof [ L;Db] and\nthen state the conditions\n\n8b; 8j lbj \u00bc\nX\na\n\nlbajAba; (11.17)\n\n8b; 8j ln lbj ?\nX\na\n\nlbaj lnAba; (11.18)\n\n8b; 8j\nX\na\n\nlbaj \u00bc wj; (11.19)\n\nwhere, for each b and j, the laj variables are subject to the further SOS2 (special\nordered set of type 2, [21]) restriction: at most two consecutive lbaj can be non-zero.\nThe objective function then becomes\n\nmax\nX\na;b;j\n\nlbaj lnAba\n\n( )\n: (11.20)\n\nRemark 4 The SOS2 restriction shown above can be tackled either algorithmically\nor by introducing additional binary variables and proper constraints in the model\n\n[19, 21]. If could also be seen that such restriction in our specific case could be\n\ndropped tout court, but this is beyond the scope of the chapter.\n\n256 G. Fasano and M.C. Vola\n\n\n\nRemark 5 A further possibility of converting a sum of products into a separable\nfunction could be considered [21]. In the case of the product of two variables q1q2 it\nis sufficient to introduce new variables s1,s2, by performing the transformation\n\ns1 \u00bc 1\n2\n\u00f0q1 \u00fe q2\u00de; s2 \u00bc 1\n\n2\n\u00f0q1 ? q2\u00de;\n\nand substituting q1q2 with s1\n2 ? s22. The method can be easily extended when the\n\nproducts involve more than two variables and a linear piece-wise approximation of\n\nthe quadratic terms obtained can be achieved, as in the case of the logarithmic\n\nfunctions discussed above.\n\nRemark 6 The MILP approximations described in this section could well be\nconsidered to provide a good starting solution to an MINLP solution process.\n\n11.5 Practical Applications\n\nOn the basis of the MILP approximation relative to the surrogate objective function\n\n11.15 mentioned in Sect. 11.4, a heuristic approach has been investigated to obtain\n\nquick (satisfactory, but typically suboptimal) solutions to the original problem: this\n\napproach will be reviewed next.\n\nAn appropriate lower bound, as stated by conditions (11.13), is generated each\n\ntime, depending on the specific model instance analysed. In addition to this point, it\n\nis recommended to get rid of solutions with strongly asymmetric, \u201cnon-cube-\n\nshaped\u201d VIs. (The surrogate objective function tends to give rise to such VIs, as\n\nmatter of fact.) Figure 11.2 illustrates an example with just three VIs. In the image\n\non the left no additional limitation was posed, unlike in the case shown on the right.\n\nThe heuristic approach proposed here poses further conditions on the possibility\n\nof reallocating the already loaded TLIs. While orthogonal rotations of the TLIs are\n\nallowed (except for the pre-oriented ones, if any), their translations are partially\n\nrestricted on the basis of the relative positions they already have (refer to constraints\n\n(11.5.1) and (11.5.2)). This restriction is linked to the concept of abstract configu-\nration [4, 5]: given a number of couples of components (belonging to different\nTLIs) an abstract configuration consists of a set of variables s set to one (one and\nonly one for each couple), so that, in any unbounded domain, the subspace\n\ndelimited by the corresponding non-intersection constraints is a feasible region\n(see Fig. 11.3).\n\nIn the heuristic approach proposed here, as a first step, an abstract configuration\ncompliant with the solution of the already loaded TLIs is selected. This can be done\n\nas suggested in [5]. The abstract configuration is then imposed to the MILP model,\nso that only the relative non-intersection constraints are considered, while all the\n\nremaining ones are neglected. This gives rise to a reduced MILP model that\n\ndramatically decreases the computational effort of the solution process.\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 257\n\n\n\nSince the addition of several VIs all together would represent a significant\n\ncomputational job, the heuristic procedure proceeds, step by step, adding one VI\n\nafter the other, until a satisfactory solution is obtained or their maximum number is\n\nreached. The heuristic proposed is based on the algorithm outlined here below.\n\nAlgorithm. Incremental introduction of virtual items\n\nInput n tetris-like items, convex domain\nOutput tetris-like items repositioning, positions and dimensions of the added\n\nvirtual items (<N)\nBegin\n\nGenerate an abstract configuration corresponding to the given tetris-like item\naccommodation;\n\nj  0; //numer of virtual items\n\nFig. 11.2 Example of solutions without/with extra limitations: compare the left/right side\n\nsolutions shown\n\nFig. 11.3 Example of an abstract configuration: two-dimensional representation\n\n258 G. Fasano and M.C. Vola\n\n\n\nbsort  false;\nfree_volume  container_volume-loaded_Item_volume;\nWhile ( j< N & free_volume>L3 & !bsort) do\nMin_vrt_dim  (? free_volume) /2;\nSol.  false;\nWhile (MinVrtDim >L & !Sol) do\nExecute MIP model\n\n(corresponding to the chosen abstract configuration);\nIf integer solution then\n\nSol  true;\nj  j + 1;\nfree_volume  free_volume - virtual_item_volume;\nGenerate new abstract configuration;\n\nElse\n\nIf min_vrt_dim >L then\nmin_vrt_dim  max (min_vrt_dim /2, L);\n\nElse\n\nbsort  true;\nEnd If\n\nEnd If\n\nEnd //close loop while\n\nEnd //close loop while\n\nReturn last item allocation;\n\nEnd\n\nA currently ongoing experimental analysis has been carried out by using the\n\nIBM ILOG CPLEX Optimizer 12.3 on a personal computer with a Core\n\n2 Duo P8600, 2.40 GHz processor and 1.93 GB of RAM, running under\n\nMS Windows XP Professional with Service Pack 2. Table 11.1 shows some\n\nof our experimental results. In the tests reported here a maximum threshold of\n\nten VIs is imposed. The minimum dimension for each of them is assumed to be at\n\nleast two units. A runtime limit of three CPU hours has been used. Tables 11.2,\n\n11.3, 11.4, 11.5, 11.6, 11.7, 11.8, 11.9, 11.10, 11.11 report the input and output\n\ninformation for case studies 5, 29 and 33, respectively. Figures 11.4, 11.5, 11.6\n\nrepresent the corresponding graphical solutions. Next, we report some details\n\nconcerning case studies 5, 29 and 33.\n\nIn case study 5, the domain is a parallelepiped of dimensions 16, 18 and 10 units,\n\ncontaining seven TLIs, one of which consists of a single component. Figure 11.4\n\nshows the ten VIs added.\n\nThe domain relative to case study 29 is a parallelepiped of dimensions 42, 49 and\n\n74.4 units, containing four structural elements (i.e. TLIs with pre-fixed position and\n\norientation) and a separation plane (grey coloured). Five TLIs (one of them\n\nconsisting of a single component) are present. In the solution obtained (see\n\nFig. 11.5), ten VIs have been introduced (in compliance to the given relative gap\n\nof 1.5 units).\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 259\n\n\n\nT\na\nb\nle\n\n1\n1\n.1\n\nE\nx\np\ner\nim\n\nen\nta\nl\nan\nal\ny\nsi\ns\n\nT\nes\nt\nID\n\nT\no\nta\nl\nn\nu\nm\nb\ner\n\no\nf\n\nte\ntr\nis\n-l\nik\ne\nit\nem\n\ns\n\nT\no\nta\nl\nn\nu\nm\nb\ner\n\no\nf\nco\nm\np\n.\n\nIt\nem\n\ns\nG\nA\nP\n\nA\nlr\nea\nd\ny\nlo\nad\ned\n\nit\nem\n\nv\no\nlu\nm\ne\n%\n\nT\no\nta\nl\nn\nu\nm\nb\ner\n\no\nf\nv\nir\ntu\nal\n\nit\nem\n\ns\n\nV\nir\ntu\nal\n\nit\nem\n\nv\no\nlu\nm\ne\n%\n\nR\nes\nid\nu\nal\n\nfr\nee\n\nv\no\nlu\nm\ne\n%\n\nC\nP\nU\nti\nm\ne\n\n(H\n:M\n\nM\n:S\nS\n)\n\nC\nas\ne\nst\nu\nd\ny\n1\n\n6\n1\n1\n\n0\n.0\n\n7\n6\n.7\n8\n\n5\n1\n8\n.4\n4\n\n4\n.7\n8\n\n0\n:0\n1\n:3\n2\n\nC\nas\ne\nst\nu\nd\ny\n2\n\n6\n9\n\n0\n.0\n\n4\n5\n.5\n4\n\n1\n0\n\n3\n0\n.1\n6\n\n2\n4\n.3\n0\n\n0\n:0\n4\n:1\n6\n\nC\nas\ne\nst\nu\nd\ny\n3\n\n8\n1\n3\n\n0\n.0\n\n6\n9\n.6\n4\n\n1\n0\n\n2\n3\n.2\n5\n\n5\n.3\n3\n\n0\n:0\n3\n:0\n8\n\nC\nas\ne\nst\nu\nd\ny\n4\n\n4\n3\n4\n\n0\n.0\n\n3\n6\n.8\n7\n\n1\n0\n\n4\n5\n.6\n2\n\n1\n7\n.5\n1\n\n0\n:0\n5\n:1\n9\n\nC\nas\ne\nst\nu\nd\ny\n5\n\n7\n1\n5\n\n0\n.0\n\n5\n6\n.9\n4\n\n1\n0\n\n2\n7\n.7\n2\n\n1\n5\n.3\n3\n\n0\n:0\n4\n:0\n7\n\nC\nas\ne\nst\nu\nd\ny\n6\n\n6\n1\n6\n\n0\n.0\n\n4\n9\n.7\n8\n\n1\n0\n\n3\n3\n.1\n6\n\n1\n7\n.0\n6\n\n0\n:0\n4\n:4\n1\n\nC\nas\ne\nst\nu\nd\ny\n7\n\n5\n3\n7\n\n0\n.0\n\n2\n9\n.0\n0\n\n1\n0\n\n4\n9\n.2\n8\n\n2\n1\n.7\n2\n\n0\n:0\n4\n:0\n2\n\nC\nas\ne\nst\nu\nd\ny\n8\n\n5\n4\n4\n\n0\n.0\n\n2\n9\n.9\n5\n\n1\n0\n\n5\n7\n.0\n8\n\n1\n2\n.9\n7\n\n0\n:0\n3\n:2\n3\n\nC\nas\ne\nst\nu\nd\ny\n9\n\n4\n3\n2\n\n0\n.0\n\n5\n1\n.4\n0\n\n1\n0\n\n2\n2\n.3\n9\n\n2\n6\n.2\n1\n\n0\n:0\n5\n:2\n3\n\nC\nas\ne\nst\nu\nd\ny\n1\n0\n\n5\n1\n9\n\n0\n.0\n\n3\n9\n.2\n1\n\n1\n0\n\n3\n3\n.8\n1\n\n2\n6\n.9\n8\n\n0\n:0\n4\n:0\n2\n\nC\nas\ne\nst\nu\nd\ny\n1\n1\n\n7\n1\n2\n\n2\n.5\n\n6\n3\n.7\n0\n\n1\n0\n.3\n5\n\n3\n5\n.9\n4\n\n0\n:0\n0\n:2\n4\n\nC\nas\ne\nst\nu\nd\ny\n1\n2\n\n4\n2\n9\n\n0\n.0\n\n4\n4\n.1\n0\n\n1\n0\n\n3\n8\n.0\n9\n\n1\n7\n.8\n1\n\n0\n:0\n3\n:5\n3\n\nC\nas\ne\nst\nu\nd\ny\n1\n3\n\n6\n1\n2\n\n2\n.5\n\n2\n9\n.6\n6\n\n1\n0\n\n3\n8\n.8\n4\n\n3\n1\n.5\n0\n\n0\n:0\n3\n:3\n3\n\nC\nas\ne\nst\nu\nd\ny\n1\n4\n\n5\n3\n3\n\n1\n.5\n\n4\n9\n.9\n8\n\n1\n0\n\n1\n2\n.6\n8\n\n3\n7\n.3\n4\n\n0\n:0\n3\n:1\n8\n\nC\nas\ne\nst\nu\nd\ny\n1\n5\n\n3\n2\n8\n\n1\n.5\n\n4\n7\n.5\n5\n\n1\n0\n\n2\n6\n.7\n5\n\n2\n5\n.7\n0\n\n0\n:0\n3\n:0\n9\n\nC\nas\ne\nst\nu\nd\ny\n1\n6\n\n5\n2\n3\n\n2\n.5\n\n4\n8\n.1\n5\n\n1\n0\n\n1\n2\n.4\n9\n\n3\n9\n.1\n6\n\n0\n:0\n3\n:2\n6\n\n260 G. Fasano and M.C. Vola\n\n\n\nC\nas\ne\nst\nu\nd\ny\n1\n7\n\n3\n2\n7\n\n1\n.0\n\n3\n3\n.4\n2\n\n1\n0\n\n2\n5\n.9\n0\n\n4\n0\n.6\n8\n\n0\n:3\n8\n:2\n0\n\nC\nas\ne\nst\nu\nd\ny\n1\n8\n\n4\n2\n7\n\n0\n.5\n\n3\n3\n.5\n0\n\n1\n0\n\n3\n5\n.5\n8\n\n3\n0\n.9\n2\n\n0\n:0\n4\n:2\n1\n\nC\nas\ne\nst\nu\nd\ny\n1\n9\n\n3\n3\n0\n\n2\n.5\n\n3\n3\n.7\n9\n\n1\n0\n\n1\n7\n.2\n9\n\n4\n8\n.9\n2\n\n0\n:0\n6\n:1\n8\n\nC\nas\ne\nst\nu\nd\ny\n2\n0\n\n9\n4\n9\n\n1\n.0\n\n4\n6\n.6\n6\n\n1\n0\n\n3\n9\n.1\n6\n\n1\n4\n.1\n7\n\n0\n:0\n3\n:3\n2\n\nC\nas\ne\nst\nu\nd\ny\n2\n1\n\n8\n3\n1\n\n0\n.0\n\n5\n6\n.7\n2\n\n1\n0\n\n2\n4\n.9\n3\n\n1\n8\n.3\n5\n\n0\n:0\n5\n:1\n3\n\nC\nas\ne\nst\nu\nd\ny\n2\n2\n\n5\n3\n3\n\n0\n.0\n\n4\n3\n.7\n5\n\n1\n0\n\n3\n4\n.0\n2\n\n2\n2\n.2\n3\n\n0\n:0\n3\n:5\n9\n\nC\nas\ne\nst\nu\nd\ny\n2\n3\n\n5\n6\n3\n\n0\n.0\n\n4\n2\n.0\n9\n\n1\n0\n\n2\n7\n.8\n2\n\n3\n0\n.0\n8\n\n0\n:0\n3\n:4\n5\n\nC\nas\ne\nst\nu\nd\ny\n2\n4\n\n5\n5\n1\n\n0\n.0\n\n4\n5\n.2\n7\n\n1\n0\n\n3\n2\n.3\n1\n\n2\n2\n.4\n1\n\n0\n:0\n3\n:3\n4\n\nC\nas\ne\nst\nu\nd\ny\n2\n5\n\n6\n4\n7\n\n0\n.0\n\n4\n0\n.3\n2\n\n1\n0\n\n3\n2\n.5\n1\n\n2\n7\n.1\n7\n\n0\n:0\n3\n:3\n7\n\nC\nas\ne\nst\nu\nd\ny\n2\n6\n\n4\n2\n1\n\n1\n.5\n\n4\n6\n.4\n9\n\n8\n1\n5\n.1\n3\n\n3\n8\n.3\n8\n\n0\n:0\n4\n:4\n4\n\nC\nas\ne\nst\nu\nd\ny\n2\n7\n\n6\n2\n7\n\n2\n.5\n\n4\n1\n.0\n9\n\n1\n0\n\n2\n1\n.9\n6\n\n3\n6\n.9\n5\n\n0\n:0\n5\n:3\n9\n\nC\nas\ne\nst\nu\nd\ny\n2\n8\n\n5\n2\n6\n\n1\n.5\n\n4\n9\n.8\n5\n\n1\n0\n\n9\n.9\n8\n\n4\n0\n.1\n8\n\n0\n:0\n4\n:1\n1\n\nC\nas\ne\nst\nu\nd\ny\n2\n9\n\n5\n2\n2\n\n1\n.5\n\n4\n2\n.0\n2\n\n1\n0\n\n1\n7\n.0\n7\n\n4\n0\n.9\n1\n\n0\n:0\n3\n:4\n7\n\nC\nas\ne\nst\nu\nd\ny\n3\n0\n\n5\n2\n5\n\n2\n.5\n\n4\n2\n.8\n8\n\n1\n0\n\n2\n6\n.7\n5\n\n3\n0\n.3\n7\n\n0\n:0\n3\n:3\n9\n\nC\nas\ne\nst\nu\nd\ny\n3\n1\n\n2\n2\n\n5\n4\n\n0\n.0\n\n5\n4\n.3\n7\n\n1\n0\n\n2\n3\n.9\n4\n\n2\n1\n.6\n9\n\n0\n:0\n5\n:5\n1\n\nC\nas\ne\nst\nu\nd\ny\n3\n2\n\n3\n1\n5\n\n0\n.0\n\n4\n7\n.9\n3\n\n1\n0\n\n3\n5\n.9\n0\n\n2\n0\n.0\n3\n\n0\n:0\n4\n:1\n8\n\nC\nas\ne\nst\nu\nd\ny\n3\n3\n\n5\n2\n6\n\n0\n.5\n\n4\n9\n.8\n5\n\n1\n0\n\n1\n9\n.0\n9\n\n3\n1\n.0\n7\n\n0\n:0\n4\n:4\n3\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 261\n\n\n\nTable 11.2 Case study 5: input\n\nItems Components\n\nComponent\n\nprojection\n\nComponent centre coordinates\n\n(with respect to the local reference frame)\n\nX Y Z x y z\n\nIt 1 (H-shaped) C1 2 2.5 8 1 5 4\n\nC2 2 2.5 8 7 5 4\n\nC3 4 2.5 2 4 5 4\n\nIt 2 (H-shaped) C1 2 2.5 8 1 5 4\n\nC2 2 2.5 8 7 5 4\n\nC3 4 2.5 2 4 5 4\n\nIt 3 (T-shaped) C1 3 2.5 6 1.5 5 3\n\nC2 8 2.5 3 7 5 3\n\nIt 4 (T-shaped) C1 3 2.5 6 1.5 5 3\n\nC2 8 2.5 3 7 5 3\n\nIt 5 (T-shaped) C1 3 2.5 6 1.5 5 3\n\nC2 8 2.5 3 7 5 3\n\nIt 6 (T-shaped) C1 3 2.5 6 1.5 5 3\n\nC2 8 2.5 3 7 5 3\n\nIt 7 (single comp.) \u2013 5 8 10\n\nTable 11.3 Case study 5: tetris-like item output\n\nItems\n\nLocal reference frame\n\norigin coordinates\n\n(with respect to the\n\nmain reference frame) Local reference frame orientation (with respect to the\n\nmain reference frame)X Y Z\n\nIt 1 (H-shaped) 7.98 9.98 10 cos(Xx) \u00bc 1 cos(Yz) \u00bc 1 cos(Zy) \u00bc ?1\nIt 2 (H-shaped) 15.98 1.98 8 cos(Xy) \u00bc ?1 cos(Yz) \u00bc 1 cos(Zx) \u00bc ?1\nIt 3 (T-shaped) 15.98 17.96 5 cos(Xx) \u00bc ?1 cos(Yz) \u00bc ?1 cos(Zy) \u00bc ?1\nIt 4 (T-shaped) 0 17.98 10 cos(Xz) \u00bc 1 cos(Yx) \u00bc ?1 cos(Zy) \u00bc ?1\nIt 5 (T-shaped) 9 0 10 cos(Xz) \u00bc ?1 cos(Yx) \u00bc 1 cos(Zy) \u00bc ?1\nIt 6 (T-shaped) 0 14.48 0 cos(Xx) \u00bc 1 cos(Yz) \u00bc ?1 cos(Zy) \u00bc 1\nIt 7 (single comp.) 0 0 0 cos(Xz) \u00bc 1 cos(Yx) \u00bc 1 cos(Zy) \u00bc 1\n\nTable 11.4 Case study 5: virtual item output\n\nVirtual Items\n\nItem oriented dimension\n\nItem centre coordinates\n\n(with respect to the main reference frame)\n\nX Y Z X Y Z\n\nVrt_it 1 4.98 3.48 6.98 9.24 6.49 7.51\n\nVrt_it 2 4.98 3.98 4.98 13.51 2.49 3.99\n\nVrt_it 3 4.98 3.48 4.98 2.49 16.26 2.49\n\nVrt_it 4 4.48 3.98 4.98 2.24 4.99 7.51\n\nVrt_it 5 3.98 3.48 4.98 6.24 12.99 7.51\n\nVrt_it 6 4.98 2.98 4.98 13.51 9.47 3.49\n\nVrt_it 7 3.98 2.98 4.98 11.99 16.51 7.51\n\nVrt_it 8 3.98 2.98 4.98 11.99 11.49 7.51\n\nVrt_it 9 2.98 2.98 4.98 1.49 1.49 7.51\n\nVrt_it 10 4.98 1.98 9.98 13.51 4.99 9.01\n\n262 G. Fasano and M.C. Vola\n\n\n\nTable 11.5 Case study 29: input\n\nItems Components\n\nComponent\n\nprojection\n\nComponent centre coordinates\n\n(with respect to the local reference\n\nframe)\n\nX Y Z x y Z\n\nIt 1 (camera-shaped) C11 20 12 10 15 8 7\n\nC21 2 2 3 22 8 13.5\n\nC31 2 2 3 15 8 13.5\n\nC41 20 5 5 19 8 17.5\n\nC51 5 16 14 2.5 8 7\n\nIt 2 (cone-shaped) C12 42 42 7 21 21 3.5\n\nC22 33.6 33.6 7 21 21 10.5\n\nC32 25.2 25.2 7 21 21 17.5\n\nC42 16.8 16.8 7 21 21 24.5\n\nC52 8.4 8.4 7 21 21 31.5\n\nIt 3 (sphere-shaped) C13 15 15 2.01 15 15 1.00\n\nC23 25.98 25.98 5.49 15 15 4.75\n\nC33 30 30 15 15 15 15\n\nC43 25.98 25.98 5.49 15 15 25.25\n\nC53 15 15 2.01 15 15 29.00\n\nIt 4 (L-shaped) C14 26 20 8 13 10 4\n\nC24 8 20 26 4 10 21\n\nIt 5 (structural element) \u2013 3 3 74.4\n\nIt 6 (structural element) \u2013 3 3 74.4\n\nIt 7 (structural element) \u2013 3 3 74.4\n\nIt 8 (structural element) \u2013 3 3 74.4\n\nIt 9 (single comp.) \u2013 5 7 9\n\nSeparation plane 42 49 2\n\nTable 11.6 Case study 29: tetris-like item and separation plane output\n\nItems\n\nLocal reference frame\n\norigin coordinates\n\n(with respect to the main\n\nreference frame) Local reference frame orientation\n\n(with respect to the main reference frame)X Y Z\n\nIt 1 (camera-shaped) 26 29 0 cos(Xy) \u00bc 1 cos(Yz) \u00bc 1 cos(Zx) \u00bc 1\nIt 2 (cone-shaped) 4.5 0.06 0 cos(Xz) \u00bc 1 cos(Yx) \u00bc 1 cos(Zy) \u00bc 1\nIt 3 (sphere-shaped) 12 14.5 44.4 cos(Xx) \u00bc 1 cos(Yy) \u00bc 1 cos(Zz) \u00bc 1\nIt 4 (L-shaped) 0.02 4.52 54.4 cos(Xz) \u00bc 1 cos(Yx) \u00bc 1 cos(Zy) \u00bc 1\nIt 5 (structural element) 0 3 0 cos(Xy) \u00bc 1 cos(Yx) \u00bc ?1 cos(Zz) \u00bc 1\nIt 6 (structural element) 39 3 0 cos(Xy) \u00bc 1 cos(Yx) \u00bc ?1 cos(Zz) \u00bc 1\nIt 7 (structural element) 0 49 0 cos(Xy) \u00bc 1 cos(Yx) \u00bc ?1 cos(Zz) \u00bc 1\nIt 8 (structural element) 39 49 0 cos(Xy) \u00bc 1 cos(Yx) \u00bc ?1 cos(Zz) \u00bc 1\nIt 9 (single comp.) 35 21.66 37.38 cos(Xx) \u00bc 1 cos(Yz) \u00bc ?1 cos(Zy) \u00bc 1\nSeparation plane 21 24.5 43.38 cos(Xx) \u00bc 1 cos(Yy) \u00bc 1 cos(Zz) \u00bc 1\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 263\n\n\n\nThe convex domain vertex coordinates (with respect to the main reference\n\nframe), corresponding to case study 33, are shown below (Table 11.8):\n\nInside this container there are two structural elements and a separation plane. Six\n\nTLIs (two of which consist of single parallelepipeds) were already present. In the\n\nsolution obtained (see Fig. 11.6), ten VIs have been accommodated, in compliance to\n\nthe given relative gap of 0.5 units.\n\nTable 11.7 Case study 29: virtual item output\n\nVirtual Items\n\nItems oriented dimension\n\nItem centre coordinates\n\n(with respect to the main reference frame)\n\nX Y Z X Y Z\n\nVrt_it 1 10.48 11.16 42.38 32.26 5.58 21.19\n\nVrt_it 2 11.48 9.62 42.38 18.74 44.19 21.19\n\nVrt_it 3 10.48 12.48 30 5.24 38.26 59.4\n\nVrt_it 4 10.48 25.82 11.48 32.26 36.09 36.64\n\nVrt_it 5 14.98 14.82 11.08 34.51 20.07 5.54\n\nVrt_it 6 41.98 8.5 8.48 21.01 8.75 48.62\n\nVrt_it 7 10.48 16.02 8.5 5.24 22.51 48.65\n\nVrt_it 8 13.48 9 7.28 26.74 17.16 38.74\n\nVrt_it 9 6.48 8.48 20.02 38.76 8.74 64.39\n\nVrt_it 10 6.98 9 9.16 38.51 17.16 31.3\n\nTable 11.8 Case study 33: convex domain vertex coordinates\n\nV1 V2 V3 V4 V5 V6 V7 V8 V9\n\nX 0 0 0 0 0 0 0 0 0\n\nY 1.3 31.1 32.2 28 14.4 13.6 1.3 0 0\n\nZ 0 0 1.7 13.4 25.2 25.5 25.5 24.3 1.3\n\nV10 V11 V12 V13 V14 V15 V16 V17 V18\n\nX 42.9 42.9 42.9 42.9 42.9 42.9 42.9 42.9 42.9\n\nY 1.3 31.1 32.2 28 14.4 13.6 1.3 0 0\n\nZ 0 0 1.7 13.4 25.2 25.5 25.5 24.3 1.3\n\n264 G. Fasano and M.C. Vola\n\n\n\nTable 11.10 Case study 33: tetris-like item/separation plane output\n\nItems\n\nLocal reference frame\n\norigin coordinates\n\n(with respect to the\n\nmain local reference\n\nframe) Local reference frame orientation\n\n(with respect to the main reference frame)X Y Z\n\nIt 1 (sphere-shaped) 0 0.04 0 cos(Xx) \u00bc 1 cos(Yy) \u00bc 1 cos(Zz) \u00bc 1\nIt 2 (cuneo) 42.9 0.13 14.17 cos(Xy) \u00bc ?1 cos(Yz) \u00bc 1 cos(Zx) \u00bc ?1\nIt 3 (cylinder-shaped) 0.9 30.12 0 cos(Xy) \u00bc 1 cos(Yx) \u00bc ?1 cos(Zz) \u00bc 1\nIt 4 (cylinder-shaped) 42.9 0 25.47 cos(Xy) \u00bc ?1 cos(Yz) \u00bc 1 cos(Zx) \u00bc ?1\nIt 6 (single comp.) 31.1 10.5 15.47 cos(Xy) \u00bc 1 cos(Yz) \u00bc 1 cos(Zx) \u00bc 1\nIt 7 (single comp.) 16.80 10.50 15.47 cos(Xy) \u00bc 1 cos(Yz) \u00bc 1 cos(Zx) \u00bc 1\nIt 8 (structural element) 12.3 14.1 0 cos(Xx) \u00bc 1 cos(Yy) \u00bc 1 cos(Zz) \u00bc 1\nIt 9 (structural element) 26.6 14.1 0 cos(Xx) \u00bc 1 cos(Yy) \u00bc 1 cos(Zz) \u00bc 1\nSeparation plane 21.45 16.1 14.82 cos(Xx) \u00bc 1 cos(Yy) \u00bc 1 cos(Zz) \u00bc 1\n\nTable 11.9 Case study 33: input\n\nItems Components\n\nComponent\n\nprojection\n\nComponent centre coordinates\n\n(with respect to the local reference\n\nframe)\n\nX Y Z x y z\n\nIt 1 (sphere-shaped) C11 6.50 6.50 0.87 6.50 6.50 0.44\n\nC21 11.26 11.26 2.38 6.50 6.50 2.06\n\nC31 13.00 13.00 6.50 6.50 6.50 6.50\n\nC41 11.26 11.26 2.38 6.50 6.50 10.94\n\nC51 6.50 6.50 0.87 6.50 6.50 12.56\n\nIt 2 (wedge-shaped) C12 13.00 28.00 2.25 6.50 14.00 1.13\n\nC22 13.00 24.50 2.25 6.50 12.25 3.38\n\nC32 13.00 21.00 2.25 6.50 10.50 5.63\n\nC42 13.00 17.50 2.25 6.50 8.75 7.88\n\nC52 13.00 14.00 2.25 6.50 7.00 10.13\n\nC62 13.00 10.50 2.25 6.50 5.25 12.38\n\nC72 13.00 7.00 2.25 6.50 3.50 14.63\n\nC82 13.00 3.50 2.25 6.50 1.75 16.88\n\nIt 3 (cylinder-shaped) C13 5.00 42.00 0.67 5.00 21.00 0.33\n\nC23 8.66 42.00 1.83 5.00 21.00 1.58\n\nC33 10.00 42.00 5.00 5.00 21.00 5.00\n\nC43 8.66 42.00 1.83 5.00 21.00 8.42\n\nC53 5.00 42.00 0.67 5.00 21.00 9.67\n\nIt 4 (cylinder-shaped) C14 5.00 42.00 0.67 5.00 21.00 0.33\n\nC24 8.66 42.00 1.83 5.00 21.00 1.58\n\nC34 10.00 42.00 5.00 5.00 21.00 5.00\n\nC44 8.66 42.00 1.83 5.00 21.00 8.42\n\nC54 5.00 42.00 0.67 5.00 21.00 9.67\n\nIt 6 (single comp.) \u2013 4.00 6.00 8.00\n\nIt 7 (single comp.) \u2013 4.00 6.00 8.00\n\nIt 8 (structural element) \u2013 4.00 4.00 25.50\n\nIt 9 (structural element) \u2013 4.00 4.00 25.50\n\nSeparation plane \u2013 42.90 32.20 1.30\n\n\n\nTable 11.11 Case study 33: virtual item output\n\nVirtual items\n\nItems oriented dimension\n\nItem centre coordinates\n\n(with respect to the main reference frame)\n\nX Y Z X Y Z\n\nVrt_it 1 8.08 12.24 14.16 20.86 13.50 7.09\n\nVrt_it 2 11.78 6.08 14.16 5.89 16.58 7.08\n\nVrt_it 3 11.78 8.04 6.08 5.89 14.52 18.51\n\nVrt_it 4 7.28 8.04 6.08 39.26 14.52 18.51\n\nVrt_it 5 4.28 5.48 14.16 33.24 16.87 7.08\n\nVrt_it 6 4.78 10.4 4.02 23.71 15.7 17.48\n\nVrt_it 7 4.78 5.2 4.02 23.71 13.1 22.00\n\nVrt_it 8 42.88 7.14 3.52 21.46 23.69 12.26\n\nVrt_it 9 4.38 4 14.16 15.71 4.88 7.08\n\nVrt_it 10 3.66 6.22 3.92 14.49 10.49 12.21\n\nFig. 11.4 Case study 5: solution shown with the added virtual items (see right-hand side image)\n\n266 G. Fasano and M.C. Vola\n\n\n\nFig. 11.6 Case study 33: solution shown with the added virtual items (see right-hand side image)\n\nFig. 11.5 Case study 29: solution shown with the added virtual items (see right-hand side image)\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 267\n\n\n\n11.6 Concluding Remarks\n\nIn this study we consider the issue of maximizing the volume exploitation of a\n\npartially loaded container, by adding virtual items. The items already inside the\n\ncontainer are supposed to be tetris-like, placed orthogonally with respect to a given\nreference frame. By assumption, the container is a convex domain, and the virtual\n\nitems are parallelepipeds of various dimensions (not smaller than a given minimum\n\nsize). Tetris-like items can be repositioned, and the number of virtual items that\nmay be added cannot exceed a given threshold. The problem discussed here\n\noriginates from the field of space engineering, but similar important applications\n\narise in a number of different contexts.\n\nTo handle this problem type, an MINLP formulation has been introduced. Next,\n\npossible MILP approximations have been taken into account, and an MIP-based\n\nheuristic approach aimed at finding quick satisfactory solutions in practice has been\n\ndescribed.\n\nIn future research, an in-depth experimental analysis can be carried out to\n\ncompare the heuristic procedure proposed with the separable programming-based\n\nMILP approximation approach. The MILP solution can also been used to initialize\n\nthe MINLP model based optimization process.\n\nReferences\n\n1. Birgin, E., Martinez, J.M., Nishihara, F.H., Ronconi, D.P.: Orthogonal packing of rectangular\n\nitems within arbitrary convex regions by nonlinear optimization. Comput. Oper. Res. 33(12),\n\n3535\u20133548 (2006)\n\n2. Chen, C.S., Lee, S.M., Shen, Q.S.: An analytical model for the container loading problem. Eur.\n\nJ. Oper. Res. 80, 68\u201376 (1995)\n\n3. Dyckhoff, H., Scheithauer, G., Terno, J.: Cutting and packing. In: Dell\u2019Amico, M., Maffioli,\n\nF., Martello, S. (eds.) Annotated Bibliographies in Combinatorial Optimization. Wiley,\n\nChichester (1997)\n\n4. Fasano, G.: MIP-based heuristic for non-standard 3D-packing problems. 4OR 6, 291\u2013310\n\n(2008)\n\n5. Fasano, G.: A global optimization point of view to handle non-standard object packing\n\nproblems. J. Global Optim. (2012) DOI: 10.1007/s10898-012-9865-8\n\n6. Fasano, G., Saia, D., Piras, A.M.: Columbus stowage optimization by CAST (cargo accom-\n\nmodation support tool). Acta Astronautica 67(3), 489\u2013496 (2010)\n\n7. Fekete, S., Schepers, J.: A combinatorial characterization of higher-dimensional orthogonal\n\npacking. Math. Oper. Res. 29, 353\u2013368 (2004)\n\n8. Floudas, C.A., Pardalos, P.M. (eds.): Encyclopedia of Optimization. Kluwer, Dordrecht (2001)\n\n9. Kallrath, J.: Mixed-integer nonlinear applications. In: Ciriani, T., Gliozzi, S., Johnson E.L.,\n\n(eds.) Operations Research in Industry, pp. 42\u201376. McMillan Press, Great Britain (1999)\n\n10. Kallrath, J.: Modeling difficult optimization problems. In: Floudas, C.A., Pardalos, P.M. (eds.)\n\nEncyclopedia of Optimization, 2nd edn, pp. 2284\u20132297. Springer, New York (2008)\n\n11. Liberti, L., Maculan, N. (eds.): Global Optimization: From Theory to Implementation.\n\nSpringer, New York (2005)\n\n268 G. Fasano and M.C. Vola\n\n\n\n12. Martello, S., Pisinger, D., Vigo, D.: The three-dimensional bin packing problem. Oper. Res.\n\n48, 256\u2013267 (2000)\n\n13. Martello, S., Pisinger, D., Vigo, D., den Boef, E., Korst, J.: Algorithms for general and robot-\n\npackable variants of the three-dimensional bin packing problem. ACM Trans. Math. Software\n\n33(1) (2007). article 7\n\n14. Padberg, M.: Packing small boxes into a big box. Office of Naval Research, N00014-327, New\n\nYork University, New York (1999)\n\n15. Pisinger, D., Sigurd, M.M.: The two-dimensional bin packing problem with variable bin sizes\n\nand costs. Discrete Optim. 2, 154\u2013167 (2005)\n\n16. Pisinger, D., Sigurd, M.M.: Using decomposition techniques and constraints programming for\n\nsolving the two-dimensional bin packing problem. INFORMS J. Comput. 19(1), 36\u201351 (2006).\n\nWinter 2007\n\n17. Rebennack, S., Kallrath, J., Pardalos, P.M.: Column enumeration based decomposition\n\ntechniques for a class of non-convex MINLP problems. J. Global Optim. 43(2\u20133), 277\u2013297\n\n(2009)\n\n18. Tawarmalani, M., Sahinidis, N.V.: Convexification and Global Optimization in Continuous\n\nand Mixed-Integer Nonlinear Programming. Kluwer, Dordrecht (2002)\n\n19. Vielma, J.P., Nemhauser, G.L.: Modeling disjunctive constraints with a logarithmic number of\n\nbinary variables and constraints. Math. Program. 128(1\u20132), 49\u201372 (2009)\n\n20. Wang, P.C., Tsai, J.F.: A superior piecewise linearization approach for assortment problems.\n\nIn: EURO XXIV Conference, Lisbon, 11\u201314 July 2010\n\n21. Williams, H.P.: Model Building in Mathematical Programming. Wiley, London (1993)\n\n22. Zhu, Y., Kuno, T.: Global optimization of non-convex minlp by a hybrid branch-and-bound\n\nand revised general Benders decomposition approach. Ind. Eng. Chem. Res. 42(3), 528\u2013539\n\n(2003)\n\n11 Space Module On?Board Stowage Optimization by Exploiting Empty. . . 269\n\n\n\nChapter 12\n\nOptimization Models for the Three-Dimensional\n\nContainer Loading Problem with Practical\n\nConstraints\n\nLeonardo Junqueira, Reinaldo Morabito, Denise Sato Yamashita,\n\nand Horacio Hideki Yanasse\n\nAbstract The last decades have seen an increasing emergence of solution\n\napproaches to three-dimensional container loading problems. Starting from simple\n\nconstructive algorithms and passing through sophisticated metaheuristics, the con-\n\ntainer loading literature offers a range of solving options. However, few authors\n\nhave engaged themselves in proposing optimization models to deal with container\n\nloading problems that aim to pack the largest volume (or value) of rectangular\n\nboxes orthogonally inside a single container. In this sense, studies are even scarcer\n\nwhen practical constraints are considered. Cargo stability, load bearing strength of\n\nthe boxes, and multi-drop situations, among others, are constraints that have\n\nimportant practical claim and should be considered in order to model more realistic\n\nsituations. In this chapter we are concerned with presenting mixed integer linear\n\nprogramming models for container loading problems that consider vertical and\n\nhorizontal stability of the cargo, load bearing strength of the boxes, and multi-drop\n\nsituations, besides the non-overlapping of boxes. Computational results achieved\n\nwith a modeling language and an optimization solver, comparing the performance\n\nof the models on instances from the literature, are also presented and discussed.\n\nFinally, we discuss some potential directions for future works in this area.\n\nKeywords Three-dimensional container loading \u2022 Mathematical modeling \u2022 Cargo\n\nstability \u2022 Load bearing \u2022 Multi-dropping\n\nL. Junqueira \u2022 R. Morabito (*) \u2022 D.S. Yamashita\nDepartamento de Engenharia de Produc?a?o, Universidade Federal de Sa?o Carlos, Rodovia\n\nWashington Lu??s, km 235?SP-310, 13565-905 Sa?o Carlos?Sa?o Paulo, Brazil\ne-mail: leo_junqueira@yahoo.com; morabito@ufscar.br; denisesy@dep.ufscar.br\n\nH.H. Yanasse\n\nInstituto Nacional de Pesquisas Espaciais?INPE/LAC, Avenida dos Astronautas 1758,\nJardim da Granja, 12227-010 Sa?o Jose? dos Campos?Sa?o Paulo, Brazil\ne-mail: horacio@lac.inpe.br\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_12,\n# Springer Science+Business Media New York 2013\n\n271\n\nmailto:leo_junqueira@yahoo.com\nmailto:morabito@ufscar.br\nmailto:denisesy@dep.ufscar.br\nmailto:horacio@lac.inpe.br\n\n\n12.1 Introduction\n\nThe cutting and packing literature provides a variety of names for the problem we\n\naddress in this chapter. Besides container loading problem, other common names that\nindicate the same problem are: container packing problem, three-dimensional cargo-\nloading problem, three-dimensional packing problem, three-dimensional knapsack\npacking problem, single container loading problem, three-dimensional pallet load-\ning problem, three-dimensional palletization problem, three-dimensional cutting\nproblem, etc. The problem, in its basic form, consists of finding the best three-\ndimensional packing pattern for loading a set of boxes into a container so that the\n\ntotal volume (or value) of the boxes loaded ismaximized and the boxes do not overlap\n\n(e.g., [16, 17, 20, 27, 29, 30, 34]). It is assumed that the boxes and the container are\n\nof rectangular shape and that the boxes can only be placed orthogonally inside\n\nthe container. The problem considered can be broadly characterized as being of\n\ntype 3/B/O/-, according to the typology presented in Dyckhoff [11], or as being\n\nof a type 3D-R-IIPP/SLOPP/SKP, according to the typology presented in W\u20acascher\net al. [35].\n\nBesides the non-overlapping of boxes, 12 practical considerations that might\n\nplay an important role when addressing more real-world container loading\n\nproblems were presented in Bischoff and Ratcliff [4]. This list of considerations\n\nincludes: cargo stability, load bearing strength of the boxes, multi-dropping, box\n\norientation, box handling, box grouping, box separation, complete shipment of box\n\ngroups, box priorities, complexity of the cargo arrangement, container weight limit,\n\nand weight distribution within the container. These assumptions have motivated the\n\nstudy and development of various heuristics and metaheuristics in the literature to\n\nsolve the container loading problem (e.g., [6, 15, 18, 21, 26, 28, 36]). However, not\n\nmany works have presented mathematical models for this problem with additional\n\nconstraints. Some papers, such as Beasley [1], Hadjiconstantinou and Christofides\n\n[19], and Beasley [2], present formulation for two-dimensional cutting and pack-\n\ning problems that can be easily extended to the container loading problem. Other\n\nformulation for the container loading problem are presented in Tsai et al. [33] and\n\nChen et al. [8]. Nevertheless, none of these papers handle the practical\n\nconsiderations mentioned, limiting only to avoid that the boxes do not overlap\n\ninside the container.\n\nIn this chapter, we present mixed integer linear programming models for three-\n\ndimensional container loading problems that consider, in addition to the non-\n\noverlapping of boxes, other constraints like the vertical and horizontal stabilities of\n\nthe cargo, the load bearing strength of the boxes, and the multi-dropping. Cargo\n\nstability (e.g., [12, 22, 27, 28, 30, 32]) refers to the support of the bottom faces of\n\nboxes, in the case of vertical stability (i.e., the boxes must have their bottom faces\n\nsupported by other box top faces or the container floor), and the support of the lateral\n\nfaces of boxes, in the case of horizontal stability. Load bearing strength (e.g., [3, 5, 22,\n\n31]) refers to the maximum number of boxes that can be stacked one above each other\n\nor, more generally, to the maximum pressure that can be applied over the top face of a\n\n272 L. Junqueira et al.\n\n\n\nbox. Multi-dropping (e.g., [9, 23, 24]) refers to cases where boxes that are delivered to\n\nthe same customer (destination)must be placed close to each other inside the container\n\n(or truck, as it is more common in practice), and the loading pattern must take into\n\naccount the delivery route of the vehicle and the sequence in which the boxes\n\nare unloaded.\n\nThe practical importance of incorporating these constraints to the problem is to\n\navoid loading patterns where boxes are \u201cfloating in mid air\u201d inside the container,\n\nwhere products are damaged due to deformation of the boxes that contain them, or\n\nwhere an unnecessary additional handling is incurred at each drop-off point of the\n\nroute. In the case of space applications, the presence of additional constraints, such\n\nas the ones of balancing, and loading issues involving both vehicles and modules, is\n\na peculiarity of this context. Requirements on vertical and horizontal stability, as\n\nwell as load bearing strength, can also be imposed in some cases, due to the launch\n\nphase criticality. Mass stability constraints may also be taken into account, due to the\n\nspecific loading facilities. This occurs, for instance, when clusters of bags have to be\n\nfastened together (e.g., on a panel) by means of belts. Moreover, on board unloading\n\noperations, multi-drop constraints may arise.\n\nThe proposed models can also be useful as reference models to deal with\n\nextended situations where nonstandard 3D-packing issues are present, such as in\n\nspace engineering, aeronautical, naval and transportation systems, logistics,\n\nmanufacturing, engineering of complex systems, etc. Some examples can be\n\nfound in cargo accommodation of space vehicles and modules [13, 14].\n\nThe models were coded in the modeling language GAMS to evaluate their\n\nperformance, and the CPLEX solver was used to solve different instances from\n\nthe literature.\n\nThis work is organized as follows. In Sect. 12.2, we present two modeling\n\nparadigms for container loading problems, in which geometrical constraints play\n\nthe main role. In Sect. 12.3, we incorporate additional practical three-dimensional\n\nloading constraints into one of the formulation of Sect. 12.2. In Sect. 12.4, we\n\nanalyze the results of some computational tests for the model presented, solved by\n\nGAMS/CPLEX. Finally, in Sect. 12.5, we present concluding remarks and some\n\nperspectives for future research.\n\n12.2 Modeling Paradigms for Container Loading Problems\n\nIn this section, we revisit some of the studies that made an effort to model the\n\ncontainer loading problem or that can be easily extended for this purpose. The\n\nformulation can be broadly categorized as belonging to two modeling paradigms.\n\nThe main difference between these two modeling paradigms is closely related to the\n\npossible positions where the boxes may be placed inside the container. In the\n\nfollowing, we restate one instance of each of these two modeling paradigms. As\n\nmentioned, the presented formulation can be used to describe container loading\n\nproblems of type 3/B/O/- or 3D-R-IIPP/SLOPP/SKP.\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 273\n\n\n\n12.2.1 A Position-Free Paradigm\n\nThis modeling paradigm encompasses formulation in which the possible positions\n\nwhere the boxes may be placed inside the container are not defined a priori. In this\n\ncategory, the variables related to the position of the boxes inside the container are\n\nusually of real type. The formulation proposed by Tsai et al. [33], Chen et al. [8],\n\nand Beasley [2] (in this case, its direct extension) may be included in this modeling\n\nparadigm. Chen et al. [8] present a 0-1 mixed integer linear programming model for\n\nthe multiple container loading problem, in which a subset of containers of different\n\ntypes is to be selected and loaded with all available boxes, and the objective is to\n\nminimize the total unused space of the selected containers. The indices, parameters,\n\nand variables used to formulate the single container loading problem are presented\n\nas follows:\n\n12.2.1.1 Indices\n\ni, j: indices for the boxes\n\n12.2.1.2 Parameters\n\nM: a sufficiently large number\n\nm: the number of available boxes\nvi: the value of box i\n(li, wi, hi): the length, width, and height, respectively, of box i\n(L, W, H): the length, width, and height, respectively, of the container\n({Xo},{Yo},{Zo}): the position of the front-left-bottom corner of the container in\na Cartesian coordinate system, respectively, along axes x, y and z\n\n12.2.1.3 Decision Variables\n\npi: binary variable that is equal to 1 if box i is packed inside the container, i \u00bc 1; :::;m,\nand it is equal to 0 otherwise.\n\n\u00f0xi; yi; zi\u00de: real variables that indicate the position of the front-left-bottom corner of\nbox i, respectively, along axes x, y and z, i \u00bc 1; :::;m (see Fig. 12.1).\naij; bij; cij; dij; eij; fij: binary variables that indicate the relative positions between the\nboxes. For example, aij is equal to 1 if box i is placed entirely to the left of box j, i,\nj \u00bc 1; :::;m, and it is equal to 0 otherwise. Analogously, the other variables indicate\nif box i is placed entirely to the right of, in front of, behind, below, or above box j,\nrespectively.\n\n274 L. Junqueira et al.\n\n\n\nThe problem of loading rectangular boxes (with fixed orientation) inside a single\n\ncontainer can be written as a particular case of the formulation proposed by Chen\n\net al. [8].\n\n12.2.1.4 Model\n\nmax\nX\n\nfi\u00bc1;:::;mg\nvi ? pi (12.1)\n\nxi \u00fe li ? xj \u00fe \u00f01? aij\u00de ?M i; j \u00bc 1; :::;m; i< j (12.2)\n\nxj \u00fe lj ? xi \u00fe \u00f01? bij\u00de ?M i; j \u00bc 1; :::;m; i< j (12.3)\n\nyi \u00fe wi ? yj \u00fe \u00f01? cij\u00de ?M i; j \u00bc 1; :::;m; i< j (12.4)\n\nyj \u00fe wj ? yi \u00fe \u00f01? dij\u00de ?M i; j \u00bc 1; :::;m; i< j (12.5)\n\nzi \u00fe hi ? zj \u00fe \u00f01? eij\u00de ?M i; j \u00bc 1; :::;m; i< j (12.6)\n\nzj \u00fe hj ? zi \u00fe \u00f01? fij\u00de ?M i; j \u00bc 1; :::;m; i< j (12.7)\n\naij \u00fe bij \u00fe cij \u00fe dij \u00fe eij \u00fe fij ? 1 i; j \u00bc 1; :::;m; i< j (12.8)\n\nyi\n\nzi\n\nY o\n\nZ o\n\nhi\n\nxi\n\nwi\n\nli\n\nZ o+H\n\nY o+W\n\n(0,0,0)\n\nX o+L\n\nX o\n\nFig. 12.1 Container position in the Cartesian coordinate system\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 275\n\n\n\nxi ? Xo ? pi i \u00bc 1; :::;m (12.9)\n\nyi ? Yo ? pi i \u00bc 1; :::;m (12.10)\n\nzi ? Zo ? pi i \u00bc 1; :::;m (12.11)\n\nxi \u00fe li ? \u00f0Xo \u00fe L\u00de i \u00bc 1; :::;m (12.12)\n\nyi \u00fe wi ? \u00f0Yo \u00feW\u00de i \u00bc 1; :::;m (12.13)\n\nzi \u00fe hi ? \u00f0Zo \u00fe H\u00de i \u00bc 1; :::;m (12.14)\n\nxi; yi; zi ? 0 i \u00bc 1; :::;m (12.15)\n\npi 2 f0; 1g i \u00bc 1; :::;m (12.16)\n\naij; bij; cij; dij; eij; fij 2 f0; 1g i; j \u00bc 1; :::;m (12.17)\n\nIn formulation (12.1)\u2013(12.17), the objective function (12.1) aims at maximizing\n\nthe total value of the boxes packed inside the container (if vi \u00bc \u00f0li ? wi ? hi\u00de, then\n(12.1) maximizes the total volume of the boxes), constraints (12.2)\u2013(12.8) ensure\n\nthe non-overlapping of the boxes packed, constraints (12.9)\u2013(12.14) ensure that the\n\npacked boxes are completely inside the container, and constraints (12.15)\u2013(12.17)\n\nare the decision variables domain constraints. Note that the values of \u00f0Xo; Yo; Zo\u00de\nshould be sufficiently large, so that all available boxes can fit into the fictitious\n\ncontainer with dimensions \u00f0Xo \u00fe L; Yo \u00feW; Zo \u00fe H\u00de. This condition is necessary\nsince, although some variables pi are equal to 0, not all variables \u00f0xi; yi; zi\u00de can be\nequal to 0, that is, the non-overlapping constraints still apply for the boxes left out\n\nof the loading, and these boxes must be placed in a valid coordinate.\n\nNote that the model grows substantially with the number of boxes to be loaded.\nFigure 12.2 shows two perspectives of an optimal solution obtained with\n\nformulation (12.1)\u2013(12.17) and GAMS/CPLEX (versions 23.0/11.0). In this exam-\n\nple we considered a container with dimensions \u00f0L;W;H\u00de \u00bc \u00f012; 8; 8\u00de units, and\n15 boxes, with dimensions \u00f0li;wi; hi\u00de \u00bc \u00f06; 3; 2\u00de units for boxes i \u00bc 1; 2, \u00f0li;wi; hi\u00de\n\u00bc \u00f06; 4; 3\u00de units for boxes i \u00bc 3; :::; 7, \u00f0li;wi; hi\u00de \u00bc \u00f08; 3; 2\u00de units for boxes i \u00bc 8; :\n::; 10, \u00f0li;wi; hi\u00de \u00bc \u00f04; 3; 2\u00de units for boxes i \u00bc 11; 12, and \u00f0li;wi; hi\u00de \u00bc \u00f04; 4; 3\u00de units\nfor boxes i \u00bc 13; :::; 15. We also definedvi as the percentage of the container volume\nused by each box i, that is, vi \u00bc \u00bd\u00f0li ? wi ? hi\u00de \u00f0L ?W ? H\u00de= ?, for boxes i \u00bc 1; :::; 15.\nGAMS/CPLEX took 0.99 s to solve this instance. The solution depicted packs 13\n\nboxes in 89.06% of the container volume (the colors differ the boxes with different\n\ndimensions). Boxes 2 and 9 are left out of the loading. Note in this figure that some\n\nof the packed boxes are floating inside the container (for instance, the darker box\n\ndoes not support the lighter box above it), which indicates a lack of practical\n\nconsiderations, particularly the vertical stability of the cargo.\n\n276 L. Junqueira et al.\n\n\n\n12.2.2 A Grid-Based Position Paradigm\n\nThis modeling paradigm encompasses formulation in which the possible positions\n\nwhere the boxes may be placed inside the container are defined a priori. In this\n\ncategory, the variables related to the position of the boxes inside the container are\n\nusually of integer type. The formulation proposed by Beasley [1] and Hadjicon-\n\nstantinou and Christofides [19] (in this case, their direct extensions) may be\n\nincluded in this modeling paradigm. Beasley [1] presents a 0-1 integer linear\n\nprogramming model for the two-dimensional non-guillotine cutting problem, in\n\nwhich rectangular pieces of different types are to be cut from a single large\n\nrectangle, and the objective is to maximize the total value of the cut pieces. The\n\nindices, parameters, and variables used to formulate the single container loading\n\nproblem are presented as follows:\n\n12.2.2.1 Indices\n\ni: index for the box types\np, s: indices for the possible positions along the x-axis\nq, t: indices for the possible positions along the y-axis\nr, u: indices for the possible positions along the z-axis\n\n12.2.2.2 Parameters\n\nm: the number of available box types\nvi: the value of box of type i\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n0\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8 12\n\n10\n\n8\n\n6\n\n4\n\n2\n\n00\n\n0\n1\n\n2\n3\n\n4\n5\n\n6\n7\n\n8\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\nFig. 12.2 Example of a solution obtained with formulation (12.1)\u2013(12.17)\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 277\n\n\n\nbi: the number of available boxes of type i\n(li, wi, hi): the length, width, and height, respectively, of box of type i\n(L, W, H): the length, width, and height, respectively, of the container\n\n12.2.2.3 Decision Variable\n\nxipqr: binary variable that is equal to 1 if a box of type i is placed with its front-left-\nbottom corner at position \u00f0p; q; r\u00de, i \u00bc 1; :::; m, 0 ? p ? L? li, 0 ? q ? W ? wi, and\n0 ? r ? H ? hi , and it is equal to 0 otherwise (see Fig. 12.3) (the possible\ncoordinates \u00f0p; q; r\u00de where the front-left-bottom corner of a box can be placed,\nalong axes x, y and z of the container, belong to the sets X \u00bc fpj0 ? p ? L?mini\n\u00f0li\u00deg, Y \u00bc fqj0 ? q ? W ?mini\u00f0wi\u00deg, and Z \u00bc frj0 ? r ? H ?mini\u00f0hi\u00deg, respec-\ntively); let Xi \u00bc fp 2 Xj0 ? p ? L ? lig, Yi \u00bc fq 2 Yj0 ? q ? W ? wig, and Zi \u00bc\nfr 2 Zj0 ? r ? H ? hig, i \u00bc 1; :::;m)\n\nThe problem of loading rectangular boxes (with fixed orientation) inside a single\n\ncontainer can be written as a direct extension of the formulation proposed by\n\nBeasley [1].\n\n12.2.2.4 Model\n\nmax\nX\n\nfi\u00bc1;:::;mg\n\nX\np2Xi\n\nX\nq2Yi\n\nX\nr2Zi\n\nvi ? xipqr (12.18)\n\nr\n\nq\n\np s\n\nu\n\nt\n\nhi\n\nwi\n\nli\n\nH\n\nW\n\n(0,0,0)\n\nL\n\nFig. 12.3 Position of a box inside the container\n\n278 L. Junqueira et al.\n\n\n\nX\nfi\u00bc1;:::;mg\n\nX\nfp2Xijs?li\u00fe1?p?sg\n\nX\nfq2Yijt?wi\u00fe1?q?tg\n\nX\nfr2Ziju?hi\u00fe1?r?ug\n\nxipqr ? 1\n\ns 2 X; t 2 Y; u 2 Z\n(12.19)\n\nX\np2Xi\n\nX\nq2Yi\n\nX\nr2Zi\n\nxipqr ? bi i \u00bc 1; :::;m (12.20)\n\nxipqr 2 f0; 1g i \u00bc 1; :::;m\np 2 Xi; q 2 Yi; r 2 Zi (12.21)\n\nIn formulation (12.18)\u2013(12.21), the objective function (12.18) aims at maximizing\n\nthe total value of the boxes packed inside the container (if vi \u00bc \u00f0li ? wi ? hi\u00de,\nthen (12.18) maximizes the total volume of the boxes), constraints (12.19) ensure\n\nthe non-overlapping of the boxes packed, constraints (12.20) ensure a limit to the\n\nmaximum number of boxes packed, and constraints (12.21) are the decision\n\nvariables domain constraints. In case there is also a limit to the minimum number\n\nof boxes to be packed in the container, additional constraints similar to (12.20) can\n\nbe included into the model.\n\nFor a given cutting or packing pattern, each packed box could be moved down\n\nand/or forward and/or to the left, until its bottom, front, and left-hand face are\n\nadjacent to other boxes or to the container. These patterns, called normal patterns,\n\nallow us, without loss of generality, to restrict the sets X, Y, and Z to [10]:\n\nX \u00bc pjp \u00bc\nXm\n\ni\u00bc1 ei ? li;0 ? p ? L?mini\u00f0li\u00de;0 ? ei ? bi and integer; i \u00bc 1; :::;m\nn o\n\n(12.22)\n\nY \u00bc qjq\u00bc\nXm\n\ni\u00bc1 ei ?wi;0? q?W?mini\u00f0wi\u00de;0? ei ? bi and integer; i\u00bc 1; :::;m\nn o\n\n(12.23)\n\nZ \u00bc rjr \u00bc\nXm\n\ni\u00bc1 ei ? hi;0? r ? H?mini\u00f0hi\u00de;0? ei ? bi and integer; i\u00bc 1; :::;m\nn o\n\n(12.24)\n\nFigure 12.4 shows, for the two-dimensional case (for the sake of ease of\n\nviewing), an example of the use of these sets as described previously (i.e., the\n\nnormal patterns) when compared to the use of the sets as described in the\n\ndecision variable statement (i.e., the full sets). In this example we considered a\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 279\n\n\n\nrectangular plate with dimensions \u00f0L;W\u00de \u00bc \u00f013; 11\u00de units and 4 box types with\ndimensions \u00f0l1;w1\u00de \u00bc \u00f03; 3\u00de units, \u00f0l2;w2\u00de \u00bc \u00f05; 3\u00de units, \u00f0l3;w3\u00de \u00bc \u00f05; 7\u00de units, and\n\u00f0l4;w4\u00de \u00bc \u00f07; 5\u00de units. On the left are the sets obtained with the full sets, while on\nthe right are the sets obtained with the normal patterns. Note that the size of the\n\nformer is jXj ? jYj \u00bc 11 ? 9 \u00bc 99, while the size of the latter is jXj ? jYj \u00bc 8 ? 6 \u00bc 48,\nwhich is significantly fewer.\n\nNote that themodel grows substantially with the number of box types andwith the\nnumber of possible positions along axes x, y and z. Figure 12.5 shows, for the same\ninstance of Fig. 12.2, two perspectives of an optimal solution obtained with\n\nformulation (12.18)\u2013(12.21) (with sets X, Y , and Z defined as in (12.22), (12.23),\nand (12.24), respectively) and GAMS/CPLEX (versions 23.0/11.0). The 15 boxes\n\nFig. 12.4 Example with the use of the full sets and the normal patterns, respectively\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n0\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8 12\n\n10\n\n8\n\n6\n\n4\n\n2\n\n00\n\n0\n1\n\n2\n3\n\n4\n5\n\n6\n7\n\n8\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\nFig. 12.5 Example of a solution obtained with formulation (12.18)\u2013(12.21)\n\n280 L. Junqueira et al.\n\n\n\nare now grouped in 5 box types with dimensions \u00f0l1;w1; h1\u00de \u00bc \u00f06; 3; 2\u00de units, \u00f0l2;\nw2; h2\u00de \u00bc \u00f06; 4; 3\u00de units, \u00f0l3;w3; h3\u00de \u00bc \u00f08; 3; 2\u00de units, \u00f0l4;w4; h4\u00de \u00bc \u00f04; 3; 2\u00de units,\nand \u00f0l5;w5; h5\u00de \u00bc \u00f04; 4; 3\u00de units, and amounts b1 \u00bc 2, b2 \u00bc 5, b3 \u00bc 3, b4 \u00bc 2, and\nb5 \u00bc 3, respectively. The percentages of the container volume used vi are now also\nredefined by each box type i, that is, vi \u00bc \u00bd\u00f0li ? wi ? hi\u00de= \u00f0L ?W ? H:\u00de?, for box types\ni \u00bc 1; :::; 5 . GAMS/CPLEX took 0.22 s to solve this instance. As expected, the\nsolution depicted also packs 13 boxes in 89.06% of the container volume (the colors\n\ndiffer the box types). One box of type 1 and one box of type 3 are left out of the\n\nloading. Once more, note in this figure that some of the packed boxes are floating\n\ninside the container.\n\n12.3 Embedding Additional Constraints\n\nIn this section, we show how other additional practical three-dimensional loading\n\nconsiderations can be embedded into formulation (12.18)\u2013(12.21) (with sets X, Y ,\nand Z defined as in (12.22), (12.23), and (12.24), respectively) or how this\nformulation can be adapted to consider such aspects [22, 23]. We begin addressing\n\ncargo vertical and horizontal stability constraints, followed by load bearing\n\nconstraints and finally multi-drop constraints.\n\n12.3.1 Vertical and Horizontal Stability Constraints\n\nCargo stability can be considered in terms of vertical and horizontal conditions.\n\nVertical (or static) stability is related to the capacity of the loaded boxes to\n\nwithstand the gravity force over them, that is, they are not displaced with respect\n\nto the z-axis. Vertical stability constraints prevent the boxes from falling over each\nother or on the container\u2019s floor. Horizontal (or dynamic) stability, on the other\n\nhand, is related to the capacity of the loaded boxes to withstand the inertia of their\n\nown bodies, that is, they are not displaced with respect to thexandyaxes. Horizontal\nstability constraints prevent the boxes frommoving around inside the container, due\n\nto variations in the speed of the displacement. The vertical stability constraints can\n\nbe stated as follows:\n\nP\nfj\u00bc1;:::;mjr?hj?0g\n\nP\nfp02Xjjp?lj\u00fe1?p0?p\u00feli?1g\n\nP\nfq02Yjjq?wj\u00fe1?q0?q\u00fewi?1g\n\nLij ?Wij ? xjp0q0\u00f0r?hj\u00de ? li ? wi ? xipqr\n\nwhere\nLij \u00bc min\u00f0p\u00fe li; p0 \u00fe lj\u00de ?max\u00f0p; p0\u00de i \u00bc 1; :::;m\nWij \u00bc min\u00f0q\u00fe wi; q0 \u00fe wj\u00de ?max\u00f0q; q0\u00de p 2 Xi; q 2 Yi; r 2 Zinf0g\n\n(\n\n(12.25)\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 281\n\n\n\nthat is, the area of the bottom face of a box of type i must be completely supported\nby the area of the top faces of one or more boxes placed immediately below it, or\n\nby the container\u2019s floor. Figure 12.6 shows, for the same instance of Figs. 12.2\n\nand 12.5, two perspectives of an optimal solution obtained with formulation\n\n(12.18)\u2013(12.21) with constraints (12.25) and GAMS/CPLEX (versions 23.0/11.0).\n\nGAMS/CPLEX took 0.29 s to solve this instance. The solution depicted packs 13\n\nboxes in 87.50% of the container volume (the colors differ the box types). Two\n\nboxes of type 3 are left out of the loading. Note in this figure that all packed boxes\n\nare now completely stable.\n\nAnalogous formulation for the horizontal stability can be stated as follows:\n\nP\nfj\u00bc1;:::;mjp?lj?0g\n\nP\nfq02Yjjq?wj\u00fe1?q0?q\u00fewi?1g\n\nP\nfr02Zjjr?hj\u00fe1?r0?r\u00fehi?1g\n\nWij ? Hij ? xj\u00f0p?lj\u00deq0r0 ? wi ? hi ? xipqr\n\nwhere\nWij \u00bc min\u00f0q\u00fe wi; q0 \u00fe wj\u00de ?max\u00f0q; q0\u00de i \u00bc 1; :::;m\nHij \u00bc min\u00f0r \u00fe hi; r0 \u00fe hj\u00de ?max\u00f0r; r0\u00de p 2 Xinf0g; q 2 Yi; r 2 Zi\n\n(\n\n(12.26)\n\nP\nfj\u00bc1;:::;mjq?wj?0g\n\nP\nfp02Xjjp?lj\u00fe1?p0?p\u00feli?1g\n\nP\nfr02Zjjr?hj\u00fe1?r0?r\u00fehi?1g\n\nLij ? Hij ? xjp0\u00f0q?wj\u00der ? li ? hi ? xipqr\n\nwhere\nLij \u00bc min\u00f0p\u00fe li; p0 \u00fe lj\u00de ?max\u00f0p; p0\u00de i \u00bc 1; :::;m\nHij \u00bc min\u00f0r \u00fe hi; r0 \u00fe hj\u00de ?max\u00f0r; r0\u00de p 2 Xi; q 2 Yinf0g; r 2 Zi\n\n(\n\n(12.27)\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n0\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8 12\n\n10\n\n8\n\n6\n\n4\n\n2\n\n00\n\n0\n1\n\n2\n3\n\n4\n5\n\n6\n7\n\n8\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\nFig. 12.6 Example of a solution obtained with formulation (12.18)\u2013(12.21) with constrains\n\n(12.25)\n\n282 L. Junqueira et al.\n\n\n\nthat is, the area of the left (front) face of a box of type imust be completely supported\nby the area of the right (back) faces of one ormore boxes placed immediately to the left\n\n(in front) of it or by the container\u2019s walls. Clearly, depending on the type of applica-\n\ntion, it is also possible to model analogous constraints to consider stability in an\n\nopposite direction along the same axis (e.g., constraints similar to constraints (12.25)\nto prevent the boxes from crashing against the container\u2019s roof).\n\n12.3.2 Load Bearing Constraints\n\nLoad bearing strength is related to the maximum number of boxes that can be\n\nstacked one above each other or, more generally, to the maximum pressure that can\n\nbe applied over the top face of a box. These constraints prevent damaging the\n\nproducts due to deformation of the boxes that contain them. We denote by Pi\nthe weight of a box of type i, and by si the maximum admissible pressure (given in\nunits of force per unit of area) that each point at the top face of a box of type i can\nstand. The load bearing constraints can be stated as follows:\n\nP\nfj\u00bc1;:::;mg\n\nP\nfp02Xjjs?lj\u00fe1?p0?sg\n\nP\nfq02Yjjt?wj\u00fe1?q0?tg\n\nP\nfr02Zjju\u00fe1?r0?H?hjg\n\nPj\nlj?wj\n\n? ?\n? xjp0q0r0\n\n? P\nfi\u00bc1;:::;mg\n\nP\nfp2Xijs?li\u00fe1?p?sg\n\nP\nfq2Yijt?wi\u00fe1?q?tg\n\nP\nfr2Ziju?hi\u00fe1?r?ug\n\nsi ? xipqr\n\ns 2 X; t 2 Y; u 2 Z\n(12.28)\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n0\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8 12\n\n10\n\n8\n\n6\n\n4\n\n2\n\n00\n\n0\n1\n\n2\n3\n\n4\n5\n\n6\n7\n\n8\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\nFig. 12.7 Example of a solution obtained with formulation (12.18)\u2013(12.21) with constrains\n\n(12.25) and (12.28)\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 283\n\n\n\nthat is, for a certain point \u00f0s; t; u\u00de of the container; if there is a box of type i that\ncontains this point, then the boxes stacked over that box (not necessarily in direct\n\ncontact to it) must not exceed the maximum admissible pressuresi (in terms of units\nof force per unit of area) that each point at the top face of that box can stand. If the\n\ntop face of a box of type i cannot bear any kind of pressure, it is sufficient to set\nsi \u00bc 0 on the right-hand side of constraints (12.28). We observe that the vertical\nstability constraints (12.25) must be embedded into formulation (12.18)\u2013(12.21)\n\ntogether with the load bearing constraints (12.28), in order to avoid empty spaces\n\nor \u201choles\u201d in the loading pattern. Figure 12.7 shows, for the same instance of\n\nFigs. 12.2 and 12.5, two perspectives of an optimal solution obtained with formula-\n\ntion (12.18)\u2013(12.21) with constraints (12.25) and (12.28) and GAMS/CPLEX\n\n(versions 23.0/11.0). The weight Pi was defined as the volume of a box of type i,\nsince we assumed, for the sake of simplicity, that all boxes have the same density:\n\nPi \u00bc \u00f0li ? wi ? hi\u00de, i \u00bc 1; :::;m. The maximum admissible pressure si that a box of\ntype i can bear in any point of its top face was set as s1 \u00bc 0, s2 \u00bc 3, s3 \u00bc 5, s4 \u00bc 0,\nands5 \u00bc 3, respectively, for the 5 box types. Note that boxes of types 1 and 3 do not\nbear any kind of pressure on their top faces, that is, they cannot have another box\n\nplaced on top of them. GAMS/CPLEX took 0.06 s to solve this instance. The\n\nsolution depicted packs 9 boxes in 70.31% of the container volume (the colors\n\ndiffer the box types). One box of type 1, three boxes of type 3, and two boxes of\n\ntype 4 are left out of the loading. Note in this figure that all packed boxes are\n\ncompletely stable and that the presence of boxes that cannot bear any kind of\n\npressure on their top faces incurred in a decrease of the number of packed boxes.\n\n12.3.3 Multi-drop Constraints\n\nMulti-dropping addresses situations where boxes that are delivered to the same\n\ncustomer (destination) must be placed close to each other inside the container\n\n(or truck, as it is more common in practice). The loading pattern, therefore, must\n\ntake into account the delivery route of the vehicle and the sequence in which the\n\nboxes are unloaded. Multi-drop constraints prevent spending an unnecessary addi-\n\ntional handling at each drop-off point of the route (unloading and reloading boxes).\n\nFor each destination k\u00f0k \u00bc 1; :::; n\u00de, there arebik boxes of type i\u00f0i \u00bc 1; :::;m\u00de, so thatPn\nk\u00bc1 bik \u00bc bi. We define dik as the maximum reach (given in units of the container\n\nlength) of a worker tasked to manually arrange a box of type i required by destination\nk inside the container (in some cases we may have dik \u00bc di \u00bc d for all i and k). This\nparameter shows how many units of length, beyond the \u201cborder\u201d of the boxes\n\nalready packed, the worker is allowed to surpass in order to arrange the boxes of a\n\ncustomer that is visited earlier in the route. The \u201cborder\u201d is a plane (or virtual wall) of\n\ntype \u00f0p; 0; 0\u00de that is defined after all boxes of a certain customer (and other customers\nthat are visited later in the route) are packed inside the container. For instance, if\n\ndik \u00bc 0, the worker cannot take advantage of any empty spaces left behind by the\n\n284 L. Junqueira et al.\n\n\n\nboxes of customers already packed to arrange the boxes of other customers.\n\nNote that this parameter can also represent the arm\u2019s reach of the worker, or even\n\na piece of equipment used to load/unload the boxes, for instance, a forklift truck. Let\n\nus also defineL\n0\nk as an auxiliary real variable that indicates the length needed to pack\n\nall boxes of customer k (plus the boxes of other customers that are visited later in the\nroute), and M as a sufficiently large number. Note that this variable defines the\n\n\u201cborder\u201d aforementioned. We assume that the delivery route of the container is\n\nalready known in advance.We note thatk \u00bc 1 refers to the boxes that are loaded first\nand unloaded last andk \u00bc n refers to the boxes that are loaded last and unloaded first.\nThe multi-drop constraints can be stated in an adaptation of formulation\n\n(12.18)\u2013(12.21):\n\nmax\nX\n\nfi\u00bc1;:::;mg\n\nX\nfk\u00bc1;:::;ng\n\nX\nx2Xi\n\nX\ny2Yi\n\nX\nz2Zi\n\nvi ? xikpqr (12.29)\n\nX\nfi\u00bc1;:::;mg\n\nX\nfk\u00bc1;:::;ng\n\nX\nfp2Xijs?li\u00fe1?p?sg\n\nX\nfq2Yijt?wi\u00fe1?q?tg\n\nX\nfr2Ziju?hi\u00fe1?r?ug\n\nxikpqr ? 1 s 2 X; t 2 Y; u 2 Z\n(12.30)\n\nX\np2Xi\n\nX\nq2Yi\n\nX\nr2Zi\n\nxikpqr ? bik i \u00bc 1; :::;m; k \u00bc 1; :::; n (12.31)\n\nX\nfj\u00bc1;:::;mjr?hj?0g\n\nX\nfk0\u00bc1;:::;kg\n\nX\nfp02Xjjp?lj\u00fe1?p0?p\u00feli?1g\n\nX\nfq02Yjjq?wj\u00fe1?q0?q\u00fewi?1g\n\nLij ?Wij ? xjk0p0q0\u00f0r?hj\u00de ? li ? wi ? xikpqr\n\nwhere\nLij \u00bc min\u00f0p\u00fe li; p0 \u00fe lj\u00de ?max\u00f0p; p0\u00de i \u00bc 1; :::;m; k \u00bc 1; :::; n\nWij \u00bc min\u00f0q\u00fe wi; q0 \u00fe wj\u00de ?max\u00f0q; q0\u00de p 2 Xi; q 2 Yi; r 2 Zinf0g\n\n(\n\n(12.32)\n\n\u00f0p\u00fe li\u00de ? xikpqr ? L0k i \u00bc 1; :::;m; k \u00bc 1; :::; n\np 2 Xi; q 2 Yi; r 2 Zi (12.33)\n\nL\n0\nk?1 ? dik ? p ? xikpqr \u00fe \u00f01? xikpqr\u00de ?M i \u00bc 1; :::;m; k \u00bc 2; :::; n\n\np 2 Xi; q 2 Yi; r 2 Zi (12.34)\n\nL\n0\nk?1 ? L\n\n0\nk k \u00bc 2; :::; n (12.35)\n\n0 ? L0k ? L k \u00bc 1; :::; n (12.36)\n\nxikpqr 2 f0; 1g i \u00bc 1; :::;m; k \u00bc 1; :::; n\np 2 Xi; q 2 Yi; r 2 Zi (12.37)\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 285\n\n\n\nthat is, if the container goes from destination k to destination k ? 1, then the boxes\nrequired by destination k are packed within the length limits L\n\n0\nk?1 ? dik and L\n\n0\nk, and\n\nthe length needed to pack all boxes required by destination k is within the length\nlimitsL\n\n0\nk?1 and L: We observe that the (adapted) vertical stability constraints (12.32)\n\nmust be embedded into the (adapted) formulation (12.29)\u2013(12.37) together with\n\nthe multi-drop constraints (12.33)\u2013(12.36), since the boxes of a certain destination\n\nmust be placed either over the boxes of the same destination or over the boxes of a\n\ndestination that will be visited later in the delivery route, that is,\nPk\n\nk0\u00bc1 on the\nleft-hand side of constraints (12.32), in such a way that the handling of the boxes is\n\nnot compromised (e.g., boxes required by customer k cannot be placed below boxes\nrequired by customers k ? 1; k ? 2; :::; 1). Figure 12.8 shows, for the same instance\nof Figs. 12.2 and 12.5, two perspectives of an optimal solution obtained with\n\nformulation (12.29)\u2013(12.37). In this example, we considered that the 15 boxes\n\nare now divided by three customers/destinations, that is, k \u00bc 1; :::; 3 , and the\namounts are now bi1 \u00bc \u00f01; 3; 0; 0; 0\u00de, bi2 \u00bc \u00f00; 1; 2; 0; 2\u00de , and bi3 \u00bc \u00f01; 1; 1; 2; 1\u00de,\nfor box types i \u00bc 1; :::; 5. The maximum reach of the workerdikwas arbitrarily set as\nli for each customer k, that is, the worker is allowed to surpass up to li units of length\nbeyond the border to arrange the boxes of type i required by customer k. GAMS/\nCPLEX took 5.18 s to solve this instance. The solution depicted packs 12 boxes in\n\n82.81% of the container volume (the colors differ the boxes destinations). One box\n\nof type 1 (required by customer in \u201ca darker color\u201d), one box of type 3 (also\n\nrequired by customer in \u201ca darker color\u201d), and one box of type 5 (required by\n\ncustomer in \u201ca lighter color\u201d) are left out of the loading. Note in this figure that all\n\npacked boxes are completely stable and that the loading pattern favors the\n\nmulti-dropping of boxes.\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n\n8\n7\n6\n5\n4\n3\n2\n1\n0\n0\n\n1\n2\n\n3\n4\n\n5\n6\n\n7\n8 12\n\n10\n\n8\n\n6\n\n4\n\n2\n\n00\n\n0\n1\n\n2\n3\n\n4\n5\n\n6\n7\n\n8\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\nFig. 12.8 Example of a solution obtained with formulation (12.29)\u2013(12.37)\n\n286 L. Junqueira et al.\n\n\n\n12.4 Computational Results\n\nIn this section, we present some computational results achieved with some of the\n\nmodels presented in Sect. 12.2 and 12.3 with instances from the literature. All the\n\nmodels were implemented in the modeling language GAMS (version 23.0), and\n\nthe solver CPLEX (version 11.0) was used to solve them. We set the parallel mode\n\nusing up to 4 threads (of execution). All computational tests were performed in a PC\n\nCore i7 (3.40 GHz, 16.0 GB). Models (12.18)\u2013(12.21), (12.18)\u2013(12.21) with\n\n(12.25), and (12.18)\u2013(12.21) with (12.25) and (12.28) were implemented to solve\n\nsome of the instances presented in Lins et al. [25], while models (12.29)\u2013(12.37)\n\nwas implemented to solve some of the instances presented in Christensen and\n\nRousoe [9]. In the experiments that follow, the computational time spent to solve\n\neach model was limited to 1 h (3,600 s), and the optimality gaps were computed as:\n\nGap \u00bc best bound obtained - best solution obtained\u00f0 \u00de\nbest bound obtained\u00f0 \u00de 100%\n\nTherefore, three possible cases, with respect to the quality of the solution\n\nobtained by GAMS/CPLEX, can occur: (i) optimal solution, with gap equals to\n\nzero; (ii) integer solution, with gap greater than zero and with CPLEX exceeding\n\nthe time limit; (iii) no solution, without gap and with CPLEX exceeding the time\n\nlimit. This last case is represented in the tables by the symbol \u201c\u2014\u201d. In order to\n\nfacilitate the reading of the results, we refer to models (12.18)\u2013(12.21) as model 1,\n\nmodels (12.18)\u2013(12.21) with (12.25) as model 2, models (12.18)\u2013(12.21) with\n\n(12.25) and (12.28) as model 3, and models (12.29)\u2013(12.37) as model 4.\n\n12.4.1 Results for the Instances of Lins et al. [25]\n\nLins et al. [25] present fourteen test instances consisting of a single box type per\n\ninstance. The boxes do not have fixed orientation, that is, they are allowed to rotate\n\nand to be placed over any of their six faces. These instances can be seen as an\n\napplication for the three-dimensional manufacture\u2019s pallet loading problem, where\n\nthe boxes do not need to be arranged in horizontal layers on the pallet. Only the first\n\nseven instances were considered for these computational tests. The authors consid-\n\nered cubic containers with dimensions \u00f0L;W;H\u00de \u00bc \u00f050; 50; 50\u00de units. Models 1, 2,\nand 3 were properly adapted to consider multiple orientations of boxes. In the case\n\nof model 3, the weight Pi of a box of type i was arbitrarily set as its volume \u00f0li ? wi\n?hi\u00de, and the maximum admissible pressure si that a box of type i can bear at any\npoint of its top face was randomly generated by a uniform distribution in an interval\n\ntaking into account which face of the box will be used as its supporting base: \u00bd0; 3hi?\nif the supporting base is li ? wi, \u00bd0; 3wi? if the supporting base is li ? hi, and \u00bd0; 3li? if the\nsupporting base is wi ? hi, i \u00bc 1; :::;m. Table 12.1 presents the results obtained with\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 287\n\n\n\nthe instances and the models mentioned above. The first column shows the instance\n\nnumber, the second column shows the number of boxes that were packed in the\n\nsolution of Lins et al. [25], and the third column shows the number of binary\n\nvariables reported by CPLEX after preprocessing the models. Moreover, for each of\n\nthe models, the number of constraints reported by CPLEX is also shown, the\n\noptimality gap (in %), the runtime (in seconds) spent to solve each instance, and\n\nthe number of boxes packed in the solution.\n\nNote that models 1 and 3 were able to find optimal solutions for the first three\n\ninstances, while model 2 could only prove optimality of the third instance. Models\n\n2 and 3 could not find integer solutions for the last two instances, while the\n\nremaining instances are sub-optimal integer solutions. Figure 12.9 shows the opti-\n\nmal loading patterns obtained for instance 3 with models 1, 2, and 3, respectively.\n\n12.4.2 Results for the Instances of Christensen and Rousoe [9]\n\nChristensen and Rousoe [9] present eight instances based on real-world data from a\n\nDanish company distributing construction products. The authors considered\n\ncontainers with dimensions \u00f0L;W;H\u00de \u00bc \u00f0720; 250; 280\u00deunits. Multiple orientations\nwere allowed for some of the boxes. However, we assumed that rotations were not\n\nallowed, and we considered the largest box dimension to be placed along the\n\ncontainer length, the smallest box dimension to be placed along the container\n\nwidth, and the intermediary box dimension to be placed along the container height.\n\nBesides that, we also limited the size of sets X, Y, and Z, by excluding the smaller\ndimensions along each axis, at a time, until no more that 20 positions were set. The\nvalue of the maximum reach of the worker dik was arbitrarily set as li for each\ncustomer k, k \u00bc 1; :::; n, that is, the worker is allowed to surpass up to li units of\nlength beyond the border to arrange the boxes of type i required by customer k .\nTable 12.2 presents the results obtained with these instances and model 4. The first\n\ncolumn shows the instance number, the second and third columns show the number\n\nof customers/destinations and boxes available, respectively. Moreover, the number\n\nof boxes left out of the container in the solution of Christensen and Rousoe [9] is\n\nshown in the fourth column, and the remaining columns show the number of binary\n\nvariables and constraints reported by CPLEX after preprocessing the model, the\n\noptimality gap (in %), the runtime (in seconds) spent to solve each instance, and the\n\nnumber of boxes left out of the container in the solution of model 4.\n\nNote that model 4 was able to find optimal solutions for almost all instances,\n\nexcept the fourth and the last instances, which resulted in sub-optimal integer\n\nsolutions. It should be observed that the approach proposed in Christensen and\n\nRousoe [9] is not strictly comparable to ours, since their definition of multi-\n\ndropping is different from ours. In their approach, a box can occupy any empty\n\nspace inside the container, if there is some access to the box at every drop-off point,\n\nregardless of the value of parameter dik.\n\n288 L. Junqueira et al.\n\n\n\nT\na\nb\nle\n\n1\n2\n.1\n\nR\nes\nu\nlt\ns\no\nb\nta\nin\ned\n\nfo\nr\nth\ne\nin\nst\nan\nce\ns\no\nf\nL\nin\ns\net\n\nal\n.\n[2\n5\n]\n\nP\nro\nb\nle\nm\n\nL\nL\nM\n0\n2\n\nN\nu\nm\nb\ner\n\no\nf\n\nv\nar\nia\nb\nle\ns\n\nM\no\nd\nel\n\n1\nM\no\nd\nel\n\n2\nM\no\nd\nel\n\n3\n\nN\nu\nm\nb\ner\n\no\nf\nb\no\nx\nes\n\nN\nu\nm\nb\ner\n\no\nf\n\nco\nn\nst\nra\nin\nts\n\nG\nap\n\n(%\n)\n\nT\nim\n\ne\n(s\n)\n\nN\nu\nm\nb\ner\n\no\nf\nb\no\nx\nes\n\nN\nu\nm\nb\ner\n\no\nf\n\nco\nn\nst\nra\nin\nts\n\nG\nap\n\n(%\n)\n\nT\nim\n\ne\n(s\n)\n\nN\nu\nm\nb\ner\n\no\nf\nb\no\nx\nes\n\nN\nu\nm\nb\ner\n\no\nf\n\nco\nn\nst\nra\nin\nts\n\nG\nap\n\n(%\n)\n\nT\nim\n\ne\n(s\n)\n\nN\nu\nm\nb\ner\n\no\nf\nb\no\nx\nes\n\n1\n2\n6\n\n2\n,5\n9\n3\n\n3\n,3\n7\n7\n\n0\n.0\n0\n0\n\n2\n.9\n0\n\n2\n7\n\n5\n,6\n2\n1\n\n1\n1\n.0\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n2\n4\n\n8\n,9\n9\n6\n\n0\n.0\n0\n0\n\n5\n1\n.7\n8\n\n2\n2\n\n2\n2\n6\n\n2\n,5\n2\n1\n\n3\n,3\n7\n7\n\n0\n.0\n0\n0\n\n1\n5\n.3\n7\n\n2\n7\n\n5\n,5\n5\n3\n\n1\n1\n.1\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n2\n4\n\n8\n,9\n2\n8\n\n0\n.0\n0\n0\n\n2\n2\n.3\n7\n\n2\n0\n\n3\n2\n9\n\n1\n,6\n8\n1\n\n1\n,3\n3\n3\n\n0\n.0\n0\n0\n\n1\n.3\n2\n\n2\n9\n\n2\n,7\n5\n1\n\n0\n.0\n0\n0\n\n3\n,2\n0\n4\n.3\n8\n\n2\n8\n\n4\n,0\n8\n2\n\n0\n.0\n0\n0\n\n1\n1\n.0\n3\n\n2\n7\n\n4\n5\n4\n\n1\n5\n,1\n2\n1\n\n1\n5\n,6\n2\n7\n\n1\n4\n.8\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n4\n6\n\n2\n9\n,5\n8\n3\n\n5\n1\n.9\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n2\n6\n\n4\n5\n,2\n0\n8\n\n6\n2\n.0\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n1\n9\n\n5\n5\n8\n\n9\n,3\n6\n1\n\n6\n,8\n6\n1\n\n2\n.4\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n5\n8\n\n1\n5\n,3\n8\n3\n\n3\n6\n.1\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n3\n8\n\n2\n2\n,2\n4\n2\n\n3\n9\n.1\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n3\n6\n\n6\n5\n7\n\n2\n0\n,5\n9\n3\n\n2\n1\n,8\n7\n2\n\n2\n0\n.0\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n4\n8\n\n4\n1\n,0\n2\n6\n\n\u2013\n3\n,6\n0\n0\n.0\n0\n\n\u2013\n6\n2\n,8\n9\n6\n\n\u2013\n3\n,6\n0\n0\n.0\n0\n\n\u2013\n\n7\n6\n2\n\n2\n3\n,2\n5\n7\n\n1\n7\n,5\n7\n8\n\n1\n9\n.4\n0\n0\n\n3\n,6\n0\n0\n.0\n0\n\n5\n0\n\n3\n9\n,3\n2\n4\n\n\u2013\n3\n,6\n0\n0\n.0\n0\n\n\u2013\n5\n6\n,9\n0\n0\n\n\u2013\n3\n,6\n0\n0\n.0\n0\n\n\u2013\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 289\n\n\n\n12.5 Conclusion and Future Research\n\nIn this chapter, we presented mixed integer linear programming models for\n\nthree-dimensional container loading problems. The objective is to find the\n\nbest three-dimensional packing pattern for loading a set of boxes into a container\n\nso that the total volume (or value) of the boxes loaded is maximized and the boxes\n\ndo not overlap. Apart from the non-overlapping of boxes, the vertical and horizontal\n\nstabilities of the cargo, the load bearing strength of the boxes, and the multi-\n\ndropping are also taken into account. In particular, the formulation are built on a\n\ngrid-based position model. Computational tests using the proposed models were\n\nperformed with instances from the literature using the GAMS/CPLEX software.\n\n50\n\n40\n\n30\n\n20\n\n10\n\n0\n0\n\n5\n10\n\n15\n20\n\n25\n30\n\n35\n40\n\n45\n50 0\n\n5\n10\n\n15\n20\n\n25\n30\n\n35\n40\n\n45\n50\n\n50\n\n40\n\n30\n\n20\n\n10\n\n0\n0\n\n5\n10\n\n15\n20\n\n25\n30\n\n35\n40\n\n45\n50 0\n\n5\n10\n\n15\n20\n\n25\n30\n\n35\n40\n\n45\n50\n\n50\n\n40\n\n30\n\n20\n\n10\n\n0\n0\n\n5\n10\n\n15\n20\n\n25\n30\n\n35\n40\n\n45\n50 0\n\n5\n10\n\n15\n20\n\n25\n30\n\n35\n40\n\n45\n50\n\nFig. 12.9 Example of a solution obtained for one instance of Lins et al. [25]\n\n290 L. Junqueira et al.\n\n\n\nThe models proposed can be useful to motivate future research exploring\n\ndecomposition methods, relaxation methods, and heuristics, among others, in\n\norder to solve more realistic container loading problems. Other interesting topics\n\nfor future research are (i) to embed into the models other constraints that are\n\ncommon in the container loading literature, such as box orientation, box handling,\n\nbox grouping, box separation, complete shipment of box groups, box priorities,\n\ncomplexity of the arrangement, container weight limit, and weight distribution\n\nwithin the container, among others, (ii) to build container loading formulation\n\nwith practical constraints on a position-free model, such as Chen et al. [8] formula-\n\ntion, (iii) to extend the practical constraints considered in this chapter to address\n\nother variants of the container loading problems, such as the three-dimensional bin\n\npacking, multiple container loading and the strip packing, and (iv) to modify\n\nthe models to deal with extended situations where nonstandard 3D-packing issues\n\nare present, such as in space engineering and cargo accommodation of space\n\nvehicles and modules [13, 14].\n\nAcknowledgments This research was partially supported by FAPESP, CAPES, and CNPq.\n\nReferences\n\n1. Beasley, J.E.: An exact two-dimensional non-guillotine cutting tree search procedure. Oper.\n\nRes. 33(1), 49\u201364 (1985)\n\n2. Beasley, J.E.: A population heuristic for constrained two-dimensional non-guillotine cutting.\n\nEur. J. Oper. Res. 156(3), 601\u2013627 (2004)\n\n3. Bischoff, E.E.: Three-dimensional packing of items with limited load bearing strength. Eur.\n\nJ. Oper. Res. 168(3), 952\u2013966 (2006)\n\n4. Bischoff, E.E., Ratcliff, M.S.W.: Issues in the development of approaches to container loading.\n\nOmega 23(4), 377\u2013390 (1995)\n\n5. Bortfeldt, A., Gehring, H.: A hybrid genetic algorithm for the container loading problem. Eur.\n\nJ. Oper. Res. 131(1), 143\u2013161 (2001)\n\nTable 12.2 Results obtained for the instances of Christensen and Rousoe [9]\n\nProblem\n\nNumber\n\nof\n\ncustomers\n\nNumber\n\nof boxes\n\nCR09\n\nNumber\n\nof\n\nvariables\n\nNumber of\n\nconstraints\n\nModel 4\n\nNumber\n\nof boxes\n\nleft out\n\nGap\n\n(%) Time (s)\n\nNumber\n\nof boxes\n\nleft out\n\n1 2 3 0 407 1,356 0.000 0.05 0\n\n2 1 3 0 182 448 0.000 0.03 0\n\n3 2 9 0 8,046 19,468 0.000 12.61 0\n\n4 3 22 0 27,886 76,209 3.260 3,600.00 4\n\n5 4 8 0 8,705 25,360 0.000 16.41 0\n\n6 2 8 0 10,353 31,578 0.000 2.30 0\n\n7 1 11 0 3,998 10,257 0.000 6.98 0\n\n8 6 19 0 15,357 48,216 16.661 3,600.00 11\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 291\n\n\n\n6. Bortfeldt, A., Gehring, H., Mack, D.: A parallel tabu search algorithm for solving the container\n\nloading problem. Parallel Comput. 29(5), 641\u2013662 (2003)\n\n7. Bortfeldt, A., W\u20acascher, G.: Container loading problems - a state-of-the-art review. Magdeburg:\nOtto-von-Guericke Universit\u20acat Magdeburg. Working Paper No. 7/2012 (2012)\n\n8. Chen, C.S., Lee, S.M., Shen, Q.S.: An analytical model for the container loading problem. Eur.\n\nJ. Oper. Res. 80(1), 68\u201376 (1995)\n\n9. Christensen, S.G., Rousoe, D.M.: Container loading with multi-drop constraints. Int. Trans.\n\nOper. Res. 16(6), 727\u2013743 (2009)\n\n10. Christofides, N., Whitlock, C.: An algorithm for two-dimensional cutting problems. Oper. Res.\n\n25(1), 30\u201344 (1977)\n\n11. Dyckhoff, H.: A typology of cutting and packing problems. Eur. J. Oper. Res. 44(2), 145\u2013159\n\n(1990)\n\n12. Eley, M.: Solving container loading problems by block arrangement. Eur. J. Oper. Res. 141(2),\n\n393\u2013409 (2002)\n\n13. Fasano, G.: MIP-based heuristic for non-standard 3D-packing problems. 4OR 6(3), 291\u2013310\n\n(2008)\n\n14. Fasano, G.: A global optimization point of view to handle non-standard object packing\n\nproblems. J. Global Optim. (2012). doi:10.1007/s10898-012-9865-8 (to appear)\n\n15. Gehring, H., Bortfeldt, A.: A parallel genetic algorithm for solving the container loading\n\nproblem. Int. Trans. Oper. Res. 9(4), 497\u2013511 (2002)\n\n16. George, J.A., Robinson, D.F.: A heuristic for packing boxes into a container. Comput. Oper.\n\nRes. 7(3), 147\u2013156 (1980)\n\n17. Gilmore, P.C., Gomory, R.E.: Multistage cutting stock problems of two and more dimensions.\n\nOper. Res. 13(1), 94\u2013120 (1965)\n\n18. Gonc?alves, J.F., Resende, M.G.C.: A parallel multi-population biased random-key genetic\n\nalgorithm for a container loading problem. Comput. Oper. Res. 39(2), 179\u2013190 (2012)\n\n19. Hadjiconstantinou, E., Christofides, N.: An exact algorithm for general, orthogonal, two-\n\ndimensional knapsack problems. Eur. J. Oper. Res. 83(1), 39\u201356 (1995)\n\n20. Huang, W., He, K.: A caving degree approach for the single container loading problem. Eur.\n\nJ. Oper. Res 196(1), 93\u2013101 (2009)\n\n21. Jin, Z., Ohno, K., Du, J.: An efficient approach for the three-dimensional container packing\n\nproblem with practical constraints. Asia-Pacific J. Oper. Res. 21(3), 279\u2013295 (2004)\n\n22. Junqueira, L., Morabito, R., Yamashita, D.S.: Three-dimensional container loading models\n\nwith cargo stability and load bearing constraints. Comput. Oper. Res. 39(1), 74\u201385 (2012)\n\n23. Junqueira, L., Morabito, R., Yamashita, D.S.: Mip-based approaches for the container loading\n\nproblem with multi-drop constraints. Ann. Oper. Res. (2011). doi:10.1007/s10479-011-0942-z\n\n(to appear)\n\n24. Lai, K.K., Xue, J., Xu, B.: Container packing in a multi-customer delivering operation.\n\nComput. Ind. Eng. 35(1\u20132), 323\u2013326 (1998)\n\n25. Lins, L., Lins, S., Morabito, R.: An n-tet graph approach for non-guillotine packing of\n\nn-dimensional boxes into an n-container. Eur. J. Oper. Res. 141(2), 421\u2013439 (2002)\n\n26. Mack, D., Bortfeldt, A., Gehring, H.: A parallel hybrid local search algorithm for the container\n\nloading problem. Int. Trans. Oper. Res. 11(5), 511\u2013533 (2004)\n\n27. Morabito, R., Arenales, M.: An And/Or-graph approach to the container loading problem.\n\nInt. Trans. Oper. Res. 1(1), 59\u201373 (1994)\n\n28. Moura, A., Oliveira, J.F.: A GRASP approach to the container-loading problem. IEEE Intell.\n\nSyst. 4(20), 50\u201357 (2005)\n\n29. Parren?o, F., Alvarez-Valdes, R., Oliveira, J.F., Tamarit, J.M.: Neighborhood structures for the\n\ncontainer loading problem: a VNS implementation. J. Heurist. 16(1), 1\u201322 (2010)\n\n30. Pisinger, D.: Heuristics for the container loading problem. Eur. J. Oper. Res. 141(2), 382\u2013392\n\n(2002)\n\n31. Ratcliff, M.S.W., Bischoff, E.E.: Allowing for weight considerations in container loading. OR\nSpektrum 20(1), 65\u201371 (1998)\n\n292 L. Junqueira et al.\n\n\n\n32. Silva, J.L.C., Soma, N.Y., Maculan, N.: A greedy search for the three-dimensional bin packing\n\nproblem: the packing static stability case. Int. Trans. Oper. Res. 10(2), 141\u2013153 (2003)\n\n33. Tsai, R.D., Malstrom, E.M., Kuo, W.: Three dimensional palletization of mixed box sizes.\n\nIIE Trans. 25(4), 64\u201375 (1993)\n\n34. Wang, Z., Li, K.W., Levy, J.K.: A heuristic for the container loading problem: a tertiary-tree-\n\nbased dynamic space decomposition approach. Eur. J. Oper. Res. 191(1), 86\u201399 (2008)\n\n35. W\u20acascher, G., Haussner, H., Schumann, H.: An improved typology of cutting and packing\nproblems. Eur. J. Oper. Res. 183(3), 1109\u20131130 (2007)\n\n36. Yeung, L.H.W., Tang, W.K.S.: A hybrid genetic approach for container loading in logistics\n\nindustry. IEEE Trans. Ind. Electron. 52(2), 617\u2013627 (2005)\n\n12 Optimization Models for the Three-Dimensional Container Loading Problem. . . 293\n\n\n\nChapter 13\n\nOptimal Magnetic Cleanliness Modeling\n\nof Spacecraft\n\nKlaus Mehlem\n\nAbstract The magnetometers used by spacecraft for scientific research in the\n\nnear-Earth and interplanetary space are highly sensitive. Since spacecraft contain\n\nin general some more or less magnetic parts which can impair scientific\n\nmeasurements, stringent magnetic cleanliness requirements have to be imposed on\n\nthe spacecraft. In the domain of constant magnetics (magnetostatics), which is part\n\nof EMC (electromagnetic compatibility), modeling is a key issue for the verification\n\nof the magnetic cleanliness requirements. The paper describes the concept,\n\nimprovements, and extensions of the multiple magnetic dipole modeling (MDM)\n\nmethod which had been introduced by the author in 1977 and which then has been\n\nused by numerous international scientific spacecraft projects during more than three\n\ndecades. Specific issues, like the NLP method chosen and like the problem of the\n\nambiguity of solutions, are presented in detail. Special techniques for the handling of\n\nmodel parameter constraints, for optimal MDM sizing, for avoidance of relative\n\nminima, and for multiple-point far-field compensation are presented as well. The\n\nextension of the MDM method to field gradient measurements is formulated and\n\ndemonstrated by a significant example. Some challenging applications of MDM to\n\nspacecraft provide insight in practical modeling problems. Finally, a short descrip-\n\ntion of the MDM software used is given.\n\nKeywords Magnetic cleanliness \u2022 Multiple dipole model \u2022 Magnetic field and field\n\ngradient modeling \u2022 Magnetic testing \u2022 Magnetic compensation \u2022 Inversion\n\nproblems\n\nK. Mehlem (*)\nEuropean Space Agency, Sonnenweg 22, D-56203 Hoehr-Grenzhausen, Germany\n\ne-mail: klaus.mehlem@web.de\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_13,\n# Springer Science+Business Media New York 2013\n\n295\n\nmailto:klaus.mehlem@web.de\n\n\nAcronyms\n\nASTOS Astos Solutions GmbH, Germany\n\nCNES Centre National d\u2019Etudes Spatiales, France\n\nCSG Centre Spatial Guyanais, French Guiana\n\nCSP Magnetic Cleanliness Specification Point\n\nECG Electrocardiography\n\nEEG Electroencephalography\n\nEMC Electromagnetic Compatibility\n\nESA European Space Agency, Paris\n\nESTEC European Space Technology Centre, Netherlands\n\nF2, F6, F7 RTG flight models\n\nFGM Fluxgate Magnetometer\n\nFGMI Inboard Magnetometer\n\nFGMO Outboard Magnetometer\n\nGAMAG MDM Software\n\nGRB Solar X-ray and Cosmic Gamma-Ray Burst Instrument\n\nGSFC Goddard Space Flight Center, USA\n\nIABG Industrieanlagen Betriebsgesellschaft, Germany\n\nISEE-B International Sun-Earth Explorer\n\nKSC Kennedy Space Center, USA\n\nMAG-1 Magnetometer\n\nMCF Mobile Coil Facility\n\nMDM Multiple Dipole Model\n\nMEG Magneto Encephalography\n\nMFSA Magnet-Field simulations-Anlage, IABG, Germany\n\nNLP Non-Linear Programming\n\nRTG Radioisotope Thermoelectric Power Generator\n\nS/C Spacecraft\n\nSCS Spacecraft Coordinate System\n\nSNR Signal-to-Noise Ratio\n\nTCS Test Coordinate System\n\nTSS Tethered Satellite System\n\nTWT Travelling Wave Tube\n\nUCS Unit Coordinate System\n\nURAP Unified Radio and Plasma Wave Instrument\n\nVHM Vector Helium Magnetometer\n\n13.1 Interplanetary Magnetometry\n\nSpacecraft generate in general some magnetic field disturbances which impair\n\nmagnetometer and particle experiments, like those on the spacecraft Voyagers,\n\nGEOS, ISEE-B, Giotto, TSS, Ulysses, Cassini/Huygens, Cluster, Rosetta, and\n\nmany others (Fig. 13.1).\n\n296 K. Mehlem\n\n\n\nEven the fuel may be depleted earlier as planned when the attitude control\n\nsystem has to compensate the torque generated by the interaction of the spacecraft\n\nglobal dipole moment with a strong local magnetic field, like the one in low Earth\n\norbits or close to Jupiter.\n\nFor interplanetary missions it is important to note that the field between Pluto\n\nand Mercury is in the range of 0.1\u201320 nT (Fig. 13.2). For these missions typical\n\ncleanliness specifications for the magnetic cleanliness specification point (CSP) are\nin the range of 0.1 < |bsp| < 1.0 nT.\n\n13.2 Magnetic Cleanliness Verification\n\nThe verification of this specification (Ulysses: 0.1 nT, Cluster: 0.25 nT) has to be\n\nperformed in tests on the ground. In order to shield the spacecraft from the Earth\n\nfield (about 50,000 nT), different types and sizes of coil systems are in use which\n\ncompensate the external fields by artificial counterfields which are generated by\n\ncontrolled currents injected into the coils (Figs. 13.6, 13.7, 13.8, and 13.9). Large\n\ncoil facilities, like the one of IABG, achieve a resolution of 0.1 nT, an accuracy of\n\n1 nT and at best a field uniformity of 0.5 nT within a sphere of F \u00bc 4 m [3]\n(Fig. 13.7, yellow half-sphere).\n\nSpacecraft with long magnetometer booms (for instance, the boom of Ulysses\n\nhas a size of 6.45 m) exceed this volume. Even if the spacecraft volume was\n\ncompatible with the size of the coil system, the verification of specifications\n\nlower than 0.5 nT by direct measurements would be difficult due to a number of\n\ndisturbances.\n\nFig. 13.1 Ulysses solar polar orbiter (image: ESA)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 297\n\n\n\nThis dilemma can be solved by the introduction of an intermediate step which\n\nconsists in near-field measurements with high signal-to-noise ratio (SNR), taken\n\nclose to the spacecraft, in the determination of an optimal system of dipoles by\n\nLeast Squares, and in the calculation of the associated far-field at the CSP.\n\n13.2.1 Concept\n\nThe concept of the above mentioned magnetic cleanliness verification is as follows\n(Fig. 13.3):\n\n1. Measurement of the near-field at locations with high SNR.\n\n2. Identification of the multiple dipole model (MDM) (position and moment\nvectors) which optimally fits the near-field measurements.\n\n3. Calculation of the associated nonmeasurable far-field at the CSP.\n\n4. Check of the magnetic cleanliness level w.r.t. the specification.\n\n5. Should the far-field exceed the specification, a magnet can be determined to\n\ncompensate the far-field.\n\nNote that due to its physical analogy, the MDM method can easily be used for\n\nany multiple-point field alteration in the space outside the measurement distance\n\n(see Sect. 3.8).\n\nFig. 13.2 Interplanetary magnetic field levels [1, 2]\n\n298 K. Mehlem\n\n\n\n13.2.2 Rotational Field Measurements\n\nAs mentioned earlier, magnetic field measurements are usually performed in coil\n\nfacilities. The rotational mode is widely in use for test article with appropriate\n\ndimensions. The unit is placed on a turntable and rotated by steps of typically 10?\n\naround the vertical axis. At each rotational step magnetic field readings are taken by\n\ntri-axial facility probes, which are placed on the side of the turntable (Fig. 13.4).\n\nThe measurements may be repeated with the object placed on its sides so as to\n\ngenerate multi-plane data coverage. But this is not always practicable.\n\nThe test distance has to be chosen such that the SNR of the field measurements is\n\nmaximized while keeping the field smoothness compatible with the modeling\n\ncapabilities of the method used (Fig. 13.5).\n\n13.2.3 Magnetic Test Facilities\n\nFigure 13.6 shows the 1.4 m mobile coil facility (MCF) of ESA\u2013ESTEC, The\n\nNetherlands, which is used for small test articles like electronic boxes. It has been\n\ndeployed at many locations, like in European industries and institutes, and also at\n\nlaunch sites like KSC, USA and CSG, French Guiana.\n\nFig. 13.3 Concept of magnetic cleanliness verification\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 299\n\n\n\nFigure 13.7 shows the midsize 6.6 m coil facility of CNES, France, which has\n\nalso a high accuracy; it is used for small to medium-sized test articles.\n\nFigure 13.8 shows the large 13 m Braunbek coil facility of GSFC, USA, with the\n\nlunar rover in the center. In 1985 it has obtained the status of National Historic\n\nLandmark. In terms of accuracy, it is similar to the IABG facility.\n\nFinally, Fig. 13.9 shows the large 15 m Helmholtz coil facility (MFSA) of\n\nIABG, Germany; it is used for all sizes of test articles, reaching from small units\n\nto complete spacecraft. The facility has one of the highest accuracies available and\n\nall European magnetometer carrying spacecraft have been tested there.\n\nFig. 13.4 Basic test-setup configuration for rotational measurements\n\nFig. 13.5 Optimal test distance, compromise between signal smoothness and strength\n\n300 K. Mehlem\n\n\n\n13.3 Multiple Dipole Modeling\n\n13.3.1 Background\n\nBenefiting from knowledge in parametric optimization of launcher and spacecraft\n\ntrajectories, the author noticed in the early days of his activities in the European\n\nSpace Agency that classical magnetic potential modeling by spherical harmonics\n\nFig. 13.7 6.6 m coil facility at CNES (image: CNES)\n\nFig. 13.6 1.4 m mobile coil facility (MCF) at ESTEC (image: ESA)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 301\n\n\n\ndid not allow an easy physical interpretation of the model parameters. The multiple\n\ndipole modeling method, which is also applied in different disciplines like geology\n\nand medicine, seemed to be a good candidate for an alternative approach.\n\nThe method is based on the postulate that any magnetostatic object can be\nrepresented by a set of dipoles (MDM). The mathematical formulation and the\n\nFig. 13.8 13 m Braunbek coil facility at GSFC (image: GFSC)\n\nFig. 13.9 15 m Helmholtz coil facility at IABG (image: IABG)\n\n302 K. Mehlem\n\n\n\nrelated software had been developed by the author in 1976, and since then it has\n\nbeen continuously improved and applied to many ESA and international magne-\n\ntometry missions. It is still in use as the standard modeling software in ESA. A\n\nrecently developed significantly more powerful software will be presented in\n\nSect. 4.5.\n\n13.3.2 MDM Parameter Identification from Field\nMeasurements\n\nDefinitions:\n\ns \u00bc scalar (regular lower case)\nv \u00bc 3 ? 1 vector (bold regular lower case)\nM \u00bc 3 ? 3 matrix (bold regular upper case)\na \u00bc n ? 1 array (bold cursive lower case)\nA \u00bc n ? m array (bold cursive upper case)\nns \u00bc number of tri-axial sensors\nnd \u00bc number of dipoles\nbc \u00bc calculated field vector\nbm \u00bc measured field vector\nrs \u00bc sensor position vector\nr\nd \u00bc dipole position vector\nmd \u00bc dipole moment vector\n\nmg \u00bcP\nnd\n\ni\u00bc1\nmdi \u00bc global moment vector\n\np \u00bc 3nd ? 1 array of optimizable dipole position vectors\nm \u00bc 3nd ? 1 array of optimizable dipole moment vectors\nM \u00bc 3nd ? 2 array \u00bdp m? \u00bc MDM\n\nA magnetic dipole moment vectormd, located at the position rd, is related to the\n\nfield vector b, located at the position rs, by the basic equation [4, 5]:\n\nb \u00bc D ? md (13.1)\n\nwith the matrix\n\nD \u00bc m0\n4p\n\n? 3 ? DrDr\nT ? Drj j2 ? I\nDrj j5\n\n\" #\n(13.2)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 303\n\n\n\nand with the distance vector\n\nDr \u00bc rs ? rd (13.3)\n\nWhere m0 is the magnetic permeability in vacuum\nIf we use (cm) for the distance and (mA m2) for the dipole moment then\n\nEq. (13.1) becomes [4]\n\nb \u00bdnT? \u00bc 105 ? D \u00bdcm?3? ? md \u00bdmAm2? (13.4)\n\nThe matrix D represents the \u201cInverse Cubic Law\u201d of the magnetic field. We note\n\nthat the field is highly nonlinear w.r.t. the difference vector Dr, whereas the moment\nis linear. Therefore m can be calculated directly by inverting the matrix D\n\n(Eq. 13.1):\n\nmd \u00bc D?1 ? b (13.5)\n\nFor multiple dipoles, the field vectors bi, located at n\ns sensor positions rsi\n\n(i \u00bc 1, . . ., ns), are the vector sum of the nd individual field vectors which are\ngenerated by nd dipole moment vectors mdk located at positions r\n\nd\nk (k \u00bc 1, . . ., nd):\n\nbi \u00bc\nXnd\n\nk\u00bc1\nDik ? mdk (13.6)\n\nwith the 3 ? 3 matrix\n\nDik \u00bc m0\n4p\n\n? 3 ? Dr ikDr ik\nT ? Dr ikj j2 ? I\n\nDr ikj j5\n\" #\n\n(13.7)\n\nand with\n\nDr ik \u00bc rsi ? rdk (13.8)\n\nWe collect all vectors bi, r\nd\nk , m\n\nd\nk , and all 3 ? 3 matrices Dik in the following\n\narrays:\n\npT \u00bc rd1 ::: rdk ::: rdnd\n? ?\n\nmT \u00bc md1 ::: mdk ::: mdnd\n? ?\n\nbT \u00bc b1 ::: bi ::: bns\u00bd ?\nDT \u00bc D11 ::: Dik ::: Dnsnd\u00bd ?\n\n(13.9)\n\nWhere p andm are 3nd ? 3 arrays, b is a 3ns ? 1 array, and D is a 3ns ? 3nd array,\nor matrix.\n\n304 K. Mehlem\n\n\n\nSo, we can condense Eq. (13.6) to:\n\nb \u00bc D ? m (13.10)\n\nSimilar to Eq. (13.5), we can write for ns \u00bc nd:\n\nm \u00bc D?1 ? b (13.11)\n\nFor ns < nd, however, Eq. (13.11) can only be solved by use of the left pseudo-\ninverse D+ [6]:\n\nm \u00bc D\u00fe ? b \u00bc \u00bdDT ? D?1 ? DT ? b (13.12)\n\nIf we take real field measurements bm, the optimal moments become (Eq. 13.12):\n\nmopt \u00bc D\u00fe ? bm (13.13)\n\nIt can be shown that the solution md opt is of the type \u201cleast squares\u201d [6].\n\nFrom Eqs. (13.7) and (13.8) it is evident that the matrix D contains the dipole\npositions rdk . Hence, the optimal dipole moments are a function of r\n\nd\nk :\n\nmopt \u00bc f rdk\n? ?\n\n(13.14)\n\nAs the dipole positions rdk appear in the matrix D in a highly nonlinear form, they\nhave to be calculated by use of nonlinear programming (NLP) methods, as\n\nexplained hereafter.\n\n13.3.3 NLP Approach\n\nBy the combination of Eqs. (13.10) and (13.12) the so-called calculated field is:\n\nbc \u00bc D ? DT ? D? ??1 ? DT ? bm (13.15)\n\nAccording to Eq. (13.9), the array p represents the dipole positions. The field error\ne is defined as the difference between the measured and the calculated field vector:\n\ne\u00f0p\u00de \u00bc bm ? bc \u00f0p\u00de (13.16)\n\nEq. (13.16), we can write\n\ne \u00bc I ? D ? DT ? D? ??1\nn o\n\n? bm (13.17)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 305\n\n\n\nThe quadratic cost function to be minimized in the sense of a least square fit is\n\ndefined by\n\nc\u00f0p\u00de \u00bc e\u00f0p\u00deT ? e\u00f0p\u00de \u00bc\nXns\n\ni\u00bc1\nX3\n\nj\u00bc1 e\n2\nij \u00f0p\u00de (13.18)\n\nIn the following lines we derive the Gauss\u2013Newton algorithm. The development\n\nof c to the second order is\n\nc \u00bc c0 \u00fe @c\n@p\n\nDp\u00fe @\n2c\n\n@p2\nDp2 \u00fe 0 (13.19)\n\nThe derivative of c w.r.t. p is:\n\n@c\n\n@p\n\u00bc @\n\n2c\n\n@p2\nDp\u00fe @Dp\n\n@p\n\n@c\n\n@p\n\u00fe 0 (13.20)\n\nWhen setting @c@p \u00bc 0 we obtain the step Dp leading to the minimum:\n\nDp \u00bc ? @\n2c\n\n@p2\n\n? ??1\n? @c\n@p\n\n(13.21)\n\nwith\n\n@c\n\n@p\n\u00bc 2 ? @e\n\nT\n\n@p\ne (13.22)\n\nand with\n\n@2c\n\n@p2\n\u00bc @\n\n@p\n\n@eT\n\n@p\ne\n\n? \t\n\u00fe @\n@p\n\neT\n@e\n@p\n\n? \t\n(13.23)\n\nwhere\n\n@\n\n@p\n\n@eT\n\n@p\ne\n\n? \t\n\u00bc @\n\n2eT\n\n@p2\ne\u00fe @e\n\n@p\n? @e\n\nT\n\n@p\n\u00bc 0\u00fe @e\n\nT\n\n@p\n? @e\n@p\n\n(13.24)\n\nand where\n\n@\n\n@p\neT\n\n@e\n@p\n\n? \t\n\u00bc @e\n\nT\n\n@p\n? @e\n@p\n\n\u00fe @\n2e\n\n@p2\neT \u00bc @e\n\nT\n\n@p\n? @e\n@p\n\n\u00fe 0 (13.25)\n\nDue to e ! 0 in the neighborhood of the minimum the term @ 2eT\n@p 2 e in Eqs. (13.24)\n\nand (13.25) can be neglected.\n\n306 K. Mehlem\n\n\n\nSo, finally we have\n\n@2c\n\n@p2\n\u00bc 2 ? @e\n\nT\n\n@p\n? @e\n@p\n\n(13.26)\n\nThe Jacobian is a 3ns ? 3nd matrix:\n\nJ \u00bc @e\n@p\n\n(13.27)\n\nBy inserting Eq. (13.26) into Eqs. (13.21) and (13.25), and both into Eq. (13.20),\n\nwe obtain the Gauss\u2013Newton algorithm [7]:\n\nDp \u00bc ? JT ? J? ??1 ? JT ? e (13.28)\n\nwhere the term JT ? J? ? represents the approximated Hessian matrix.\nSince the cost function c is not a quadratic function of p (see Eq. 13.7), Dp is not\n\nleading to the minimum in one step.\n\nLet us write Eq. (13.27) in form of a series of iterations (i \u00bc counter of NLP\niterations):\n\npi\u00fe1 \u00bc pi ? li ? Ji? ?\u00fe ? ei (13.29)\n\nNote that Ji\n? ?\u00fe \u00bc J T ? J? ??1 ? J iT is the left pseudo inverse of Ji [6].\n\nJ i\n? ?\u00fe ? ei can be interpreted as a search direction di in the parameter space p:\n\ndi \u00bc Ji? ?\u00fe ? ei (13.30)\n\nSo Eq. (13.29) becomes:\n\npi\u00fe1 \u00bc pi ? li ? d i (13.31)\n\nwhere li represents a parameter shift or progress factor used in the line search.\nWe start with an initial guess p0 (Fig. 13.10, middle part left) and calculate the\n\nsearch direction d0 Eqs. (13.7), (13.15), and (13.30).\nIn a so-called line search, pi+1 is calculated by\n\npi\u00fe1 \u00bc pi ? li opt ? d i (13.32)\n\nli opt is determined in the following way (j \u00bc counter of line-search iterations)\n(Fig. 13.10, lower part): Starting from a sufficiently low value of lj\u00bc0 , such that\ncj\u00bc0 < cj\u00bc0, l is increased by a suitable factor u >1:\n\nlj\u00fe1 \u00bc u ? lj (13.33)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 307\n\n\n\nThen a step is carried out\n\np j\u00fe1 \u00bc p j ? lj\u00fe1 ? d 0 (13.34)\n\nand c(pj+1) is calculated. This is repeated until c increases (cj+1 > cj).\n\nFig. 13.10 Initial and final data fit (top), NLP iterations (mid), and line search (bottom)\n\n308 K. Mehlem\n\n\n\nFinally, a good approximation of cj\u00fe1 \u00bc cmin \u00f0li opt; dj\u00de is obtained by use of a\ncubic interpolation between the last three points lj?1; lj and lj\u00fe1.\n\nci\u00fe1 \u00bc cmin \u00f0dj\u00de \u00bc c\u00f0li opt; di\u00de ? c\u00f0l\u00de 8 l (13.35)\n\nAt this point the parameter pj+1 becomes the new starting parameter pi+1 for the\nprimary NLP process. The main iteration (Eq. 13.30) is stopped when the cost\n\nfunction c is below the facility noise t:\n\nci\u00fe1 ? t (13.36)\n\nHerewe have found the optimal position parameterpopt \u00bc pi\u00fe1. The corresponding\noptimal MDM is described by the 3nd ? 2 arrayM:\n\nMopt \u00bc popt mopt \u00bc \u00bdGT ? G??1 ? GT ? gm\nh i\n\n(13.37)\n\nThe optimal dipole positions roptdk can now be extracted from the array p\nopt\n\naccording to Eq. (13.9). The optimal dipole moments mopt\nk\n\nhave already been\n\ncalculated implicitly by Eq. (13.13).\n\nThe main characteristics of the Gauss\u2013Newton algorithm (Eq. 13.27) are:\n\n1. It requires only first derivatives in form of the Jacobian matrix J.\n2. It never diverges, due to the semipositivity by construction of the approximated\n\nHessian matrix [JTJ].\n3. Its convergence speed is superlinear. !\n\nNewton (red, 2nd der.,15 its.)\n\nGauss\u2013Newton (turq., 1st der., 14 its.)\n\nGradient (saw pattern, 1stder., >1,000 its., barely visible on red line) [8]\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 309\n\n\n\n4. For c !0 the convergence speed (number of iterations) tends to be similar to the\nNewton method [9].\n\n5. A significant increase of convergence speed and robustness is obtained by\nsolving for the dipole moments in a sub-procedure.\n\n6. The NLP solver converges well with up to 40 dipoles.\n7. Solving the linear problem for the optimal moments alone works well for 100\n\nand more dipoles.\n\n8. The convergence stops if the positions of two dipoles are identical.\nThe Jacobian J is not of full rank, so the Hessian [JTJ] cannot be inverted. !\n\n9. Gauss\u2013Newton is only formulated for free parameter spaces.\n\nConstraints have to be handled by use of another approach (Sect. 3.5).\n\n13.3.4 Optimal MDM Sizing\n\nTill here we assumed that the number of dipoles nd min, necessary to reach the\n\nminimum cmin < t, was known. Unfortunately, it is a basic unknown in modeling\nproblems. For its determination we use the following procedure: After starting with\n\nnd \u00bc 1 a solution is obtained which satisfies the condition @c@p<<1 8 c. By increas-\ning nd by 1 a new solution is obtained with ci+1. < ci. Finally, the minimum\nnecessary number of dipoles is found when the condition c< t 8 @c@p is met\n\n310 K. Mehlem\n\n\n\n(Fig. 13.11, blue line entering the red zone). Note that this algorithm always\nconverges, although it does not necessarily lead to nd min.\n\nSince the far-field shows a significant scattering for different well-fitting MDM\n\nsolutions (cmin < t) (Fig. 13.18), we continue in a second phase to increase the\nnumber of dipoles beyond nd min. The empirical function Si \u00f0ndi \u00dewhich represents a\nmeasure of the far-field scattering, is evaluated over a window of five solutions by\n\nthe following equation: (sp* stands for specification point):\n\nSi \u00bc n\nd\ni\n\n5\n?\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nX5\ni\u00bc1\n\nbsp?i\n?? ??? 1\n\n5\n?\nXj\u00bci\u00fe2\n\nj\u00bci?2\nbspj\n\n???\n???\n\n !2vuut (13.38)\n\nThe optimal MDM size nd opt is found when Si \u00f0ndi \u00de is minimum. At higher\nnumbers of dipoles ndi > n\n\nd opt the function S increases again due to problems of\n\nmis-modeling by over-parameterization (Figs. 13.12 and 13.14).\n\n13.3.5 Parameter Constraints\n\nThere are two kinds of constraints imposed on the dipole positions: boundary\nconstraints for each dipole and proximity constraints for dipole pairs (point. 7\nabove). These constraints are enforced by use of the following strategy:\n\nFig. 13.11 Determination of the minimum necessary number of dipoles nd min for c< t 8 @c@p\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 311\n\n\n\nWhen an element of a dipole position vector violates a boundary or a proximity\n\nconstraint, it is reset to a constraint-compatible value. In first instance, the cost\n\nfunction increases, but it decreases then quite rapidly below the previous level (see\n\npeaks in Figs. 13.11 and 13.13). This strategy works very well due to a minor\n\nparameter disturbance created at a time.\n\nFig. 13.12 Determination of nd opt by searching the minimum of the function S\n\nFig. 13.13 Parameter constraint violations\n\n312 K. Mehlem\n\n\n\nA drastic example of mis-modeling due to the lack of constraints is shown in\n\nFig. 13.14, where a dipole \u201cescaped\u201d through a data gap without affecting the cost\n\nfunction.\n\n13.3.6 Ambiguity of MDM Solutions\n\nA unique MDM solution, where the dipoles represent the internal sources\n\n(Fig. 13.15, red units inside the S/C), exists only if the number of field data is\n\nvery high and evenly distributed on an enclosing surface. In practice however, only\n\na relatively low number of data with more or less uneven distributions are available\n\n(Fig. 13.16).\n\nConsequently, an unknown number of equivalent (ambiguous) MDM solutions\ncan be found which all satisfy the condition c ? t, but where the associated far-field\nshows a large scattering due to MDM field differences within the data gaps, which\n\nare not reflected in the least square function c (Eq. 13.18).\n\nFigure 13.17 shows two ambiguous MDM solutions c ? t in the space of two\nsuitable parameter sub-sets |p1| and |p2| (nd \u00bc 13).\n\nTwenty ambiguous MDM solutions ( c ? t ) are shown in Fig. 13.18. The\ndolomite-like pattern is a projection of consecutive cuts through the topology\n\nbetween two minima. Note also the scattering of the associated far-field which\n\ndoes not appear to be correlated with the cost function.\n\nThe question is how to cope with this general problem of ambiguous solutions\n\nwhich is caused by data sparsity. In order to arrive to the best possible far-field\n\nestimate we use a statistical approach (as an example we use a 13-dipole modeling\n\nFig. 13.14 Pathological MDM field in non-observed data gap\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 313\n\n\n\ncase): first, we generate n MDM solutions (i \u00bc 1, . . ., n), satisfying all the data fit\ncondition c ? t. Then we determine the average and the standard deviation of the\nassociated far-fields |bi| and |bi + Dbi.3s| and |bi-Dbi.3s|, respectively. Due to\nthe severe condition of optimality for each MDM the averages of the far-field\n\n|bi|av and the averages of the standard deviations |bi|av \t Dbi.3s|av stabilize already\nat i \n 18 around the values |b|av and |b|av \t |Db3s|av, respectively (see Fig. 13.19).\n\nFor further far-field calculations, for instance, for compensation tasks, we select\n\nthe best MDM from the lot of MDMi\u2019s, (in this case i \u00bc 11) such that\n\nMopt \u00bc Mi \u00f0 bij j ? bj jav\u00de \u00bc min 8 i ? 20\n? \n\n(13.39)\n\nFig. 13.16 Real\n\ndata coverage\n\nFig. 13.15 Desirable\n\ndata coverage\n\n314 K. Mehlem\n\n\n\nFig. 13.18 Twenty ambiguous MDM solutions (c ? t)\n\nFig. 13.17 Two ambiguous MDM solutions and a number of relative minima\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 315\n\n\n\nFig. 13.19 Far-field averages |bi|av (gray) and |bi \t Dbi 3s|av (blue) vs. number of trials n \u00bc 20\n\nFig. 13.20 Distribution of 200 far-field vectors associated to 200 ambiguous MDM solutions (3s\nellipsoid, aligned in average first Gauss direction)\n\n316 K. Mehlem\n\n\n\nIn this way we have obtained not only an accurate estimate of the far-field |b|av\nbut also a measure for the test setup characteristics through the value of |b \t\nDb3s|av, which represents the semimajor axis of the 3s ellipsoid of Fig. 13.20.\n\nFigure 13.20 shows as an example of n \u00bc 200 the average and the 3s ellipsoid\nof the far-field b. The black arrow represents one of the field vectors involved.\n\nIt turns out that the semimajor axis of the ellipsoid is a function of the density and\n\nof the symmetry of the data coverage (see Figs. 13.15 and 13.16). The density is of\n\ncourse the total number of points ntot. The number of symmetrical points can be\n\ndefined as\n\nnsym \u00bc nts: n\nnb\n\nnnb ref\n(13.40)\n\nwhere\n\n\u2022 nnb is the number of neighbors which have the same distance from the central\n\npoint and which are separated by the same angle\n\n\u2022 nnb ref \u00bc 4 corresponds to the figure: ? ??? ?\n\u2022 ntsis the number of points which have at least nnb \u00bc 2 equidistant symmetrical\n\nneighbors: ???\n\nLet us define coverage index C as:\n\nC \u00bc n\nsym\n\nntot\n\u00bc n\n\nts ? nnb\nnnb ref ? ntot (13.41)\n\nFor the 13-dipole example which we used above for the statistics, we find the\n\nfollowing relation between the semimajor axis a \u00bc jDbspmax3s =j jDbspavj of the 3s\nellipsoid and the coverage index C (Fig. 13.21):\n\na \u00bc 1\n10 ? ffiffiffiffiCp \u00bc 10\n\n?1\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nnnb ref :\n\nnnb\n:\nntot\n\nnts\n\nr\n(13.42)\n\nEquation (13.42) represents a useful estimation of the modeling errors to be\n\nexpected when a test setup is chosen in form ofnnb andnts. In order to keep the errors\nto a minimum it is therefore of utmost importance to maximize the coverage index C\nby using the maximum possible number of probes and by distributing them homo-\n\ngeneously on a sphere centered on the test article.\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 317\n\n\n\n13.3.7 Synthetic Spacecraft MDM\n\nDefinitions:\n\nxt; yt; zt \u00bc coordinate system of the test facility (TCS)\n\nxu; yu; zu \u00bc coordinate system of the unit (UCS)\n\nxs; ys; zs \u00bc coordinate system of the spacecraft (SCS)\n\ntu \u00bc vector from the unit\u2019s reference point to test facility\u2019s origin\n\nus \u00bc vector from the spacecraft\u2019s origin to the unit\u2019s reference point\n\npt \u00bc dipole position vector described in SCS\n\npt \u00bc dipole position vector described in the TCS\n\nms \u00bc dipole moment vector described in the SCS\n\nmt \u00bc dipole moment vector described in the facility\u2019s coordinate system\n\nRus \u00bc rotation matrix leading from TCS to SCS\n\nRtu \u00bc rotation matrix leading from the TCS to UCS\n\nFig. 13.21 Semimajor axis a vs. coverage index C\n\n318 K. Mehlem\n\n\n\nThe field measurements and thus the MDM of a unit are related to the TCS. In\n\norder to build up a synthetic spacecraft model, the position and moment vectors of\n\neach dipole of a unit have to be transformed from the TCS to the SCS.\n\nThis is done in two steps. First, the transformation from TCS to UCS is obtained\n\nby a translation and by a rotation (Fig. 13.22):\n\npu \u00bc Rtu ? pt \u00fe tu (13.43)\n\nmu \u00bc Rtu ? mt (13.44)\n\nThen the transformation from UCS to SCS is obtained by:\n\nps \u00bc Rus ? pu \u00fe us (13.45)\n\nms \u00bc Rus ? mu (13.46)\n\nFig. 13.22 Coordinate transformations from test to spacecraft coordinate system\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 319\n\n\n\nBy inserting Eq. (13.43) into Eq. (13.45) we obtain for the positions of a unit:\n\nps \u00bc us \u00fe Rus ? tu \u00fe Rus ? Rtu ? pt (13.47)\n\nBy inserting Eq. (13.44) into Eq. (13.46) we obtain for the moments of a unit:\n\nms \u00bc Rus ? Rtu ? mt (13.48)\n\nIf we suppose that the ith unit contains ndi dipoles, we have the ith unit MDM in\n\nSCS (Eqs. 13.45 and 13.46):\n\nMsi \u00bc\n\npsli m\ns\nli\n\n..\n\n. ..\n.\n\npski m\ns\nki\n\n..\n\n. ..\n.\n\npsdnii m\nsd\nnii\n\n2\n6666664\n\n3\n7777775\n\n(13.49)\n\nThe total synthetic spacecraft model is then\n\nMs \u00bc\n\nM\ns\n\nl\n\n..\n\n.\n\nM\ns\n\ni\n\n..\n\n.\n\nM\ns\nu\nn\n\n2\n6666664\n\n3\n7777775\n\n(13.50)\n\nNote however, that the accuracy of the synthetic model depends on possible\n\ninducted moments of units when they are integrated in the spacecraft and exposed\n\nto external fields. Therefore a very challenging problem arises in magnetic cleanli-\n\nness when soft-magnetic materials are used. It should definitely be avoided wher-\n\never possible.\n\n13.3.8 Far-Field Compensation\n\nThe ultimate goal of magnetic cleanliness is to insure that the cleanliness specifica-\n\ntion for a given CSP is met. This can also be the case for several points. Should the\nfar-fields generated by the optimal MDM of the spacecraft Ms=c opt (Eq. 13.39)\n\n320 K. Mehlem\n\n\n\nexceed the specifications, one can derive a system of compensation magnets Mm\n\nwhich, depending on the number of magnets used, reduce or even zero the far-field\nvectors at multiple points.\n\nDefinition:\n\nnd \u00bc number of dipoles of the spacecraft\nnsp \u00bc number of CSPs\nnm \u00bc number of magnets\nrsp \u00bc 3nsp ? 1 array with nsp position vectors rspj of the CSP\nps/c \u00bc 3nd ? 1 array with nd dipole position vectors rs=cj of the spacecraft\nms/c\u00bc 3nd ? 1 array with nd dipole moment vectors ms=cj of the spacecraft\npm \u00bc 3nm ? 1 array with nm position vectors rmk of compensation magnets\nmm \u00bc 3nm ? 1 array with nm moment vectors mmk of compensation magnets\n\nThe optimal moments of a set of compensation magnets, which reduce the far-\n\nfield vectors, are obtained by Eq. (13.13):\n\nmm opt \u00bc ?Dm\u00fe Ds=c ? ms=c (13.51)\n\nThe Dm contains the 3 ? 3 matrices Dmik, (i \u00bc 1,. . ., nsp, k \u00bc 1,. . ., nm):\n\nDmik \u00bc\nm0\n4p\n\n?\n3 ? rspi ? rmk\n\n? ? ? rspi ? rmk\n? ?T ? rspi ? rmk\n\n? ??? ??2 ? I\nh i\n\nrspi ? rmk\n? ??? ??5 (13.52)\n\nand Ds/c contains the 3 ? 3 matrices Ds=cij (i \u00bc 1,. . ., nsp, j \u00bc 1,. . ., nd):\n\nD\ns=c\nij \u00bc\n\nm0\n4p\n\n?\n3 ? rspi ? rs=cj\n\n? ?\n? rspi ? rs=cj\n? ?T\n\n? rspi ? rs=cj\n? ????\n\n???\n2\n\n? I\n? ?\n\nrspi ? rs=cj\n???\n\n???\n5\n\n(13.53)\n\nWhen considering several far-field points and several magnets, Eq. (13.51) leads\n\nto three types of solutions (see also Figs. 13.23 and 13.24):\n\n1. nm \u00bc nsp ! bsp \u00bc 0 8rm : exact solution bsp \u00bc 0 for all magnet positions rmk\nchosen\n\n2. nm < nsp ! bsp T ? bsp \u00bc min 8rm 6\u00bc rm opt : least square solution for all non-\noptimal positions rmk chosen\n\n3. nm < nsp ! bsp \u00bc 0 8 rm \u00bc rm opt : exact solutions bsp \u00bc 0 for all optimized\nmagnet positions rmk \u00bc rm optk\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 321\n\n\n\nFig. 13.24 Example of four possibilities when using one magnet for one to three far-field points\n\nFig. 13.23 Example of an exact 4-point field compensation by use of four magnets (type 1)\n\n\n\n13.3.9 MDM Identification from Field Gradients\n\n13.3.9.1 Formulation\n\nThe field gradient has the important property to ignore all external perturbing fields\n\nwhich are constant over the length of a gradiometer sensor element. This fact can\n\nunder certain precautions be used when the magnetic tests have to be done without\n\nthe help of a coil facility. For this reason we have formulated the MDMmethod also\n\nfor field gradients. The full magnetic field gradient tensor is [10]\n\nG \u00bc\n@bx\n@x\n\n@bx\n@y\n\n@bx\n@z\n\n@by\n@x\n\n@by\n@y\n\n@by\n@z\n\n@bz\n@x\n\n@bz\n@y\n\n@bz\n@z\n\n2\n64\n\n3\n75 (13.54)\n\nThe magnetic potential, in absence of an electrical current, has the following\n\nproperties:\n\nr ? b \u00bc 0 ! @bx\n@x\n\n\u00fe @by\n@y\n\n\u00fe @bz\n@z\n\n\u00bc 0 (13.55)\n\nr ? b \u00bc 0 ! @bz\n@y\n\n\u00bc @by\n@z\n\n; ! @bx\n@x\n\n\u00bc @bz\n@x\n\n; ! @bx\n@y\n\n\u00bc @by\n@x\n\n(13.56)\n\nAccording to Eqs. (13.55) and (13.56) only five elements of the tensor G are\nindependent:\n\nG \u00bc\n@bx\n@x\n\n@by\n@x\n\n@bz\n@x\n\n@by\n@x\n\n@by\n@y\n\n@bz\n@y\n\n@bz\n@x\n\n@bz\n@y ? @bx@x ? @by@y\n\n2\n664\n\n3\n775 (13.57)\n\nHence, the field gradient can be written as a 5 ? 1 array g (not a vector):\n\ngT \u00bc @bx\n@x\n\n@by\n@x\n\n@bz\n@x\n\n@by\n@y\n\n@by\n@z\n\nh i\n(13.58)\n\nFrom here on we use the indices 1, 2, 3 instead of x, y, z. In analogy to Eq. (13.1)\n\nwe can write for gi\n\ngi \u00bc\nXnd\n\nk\u00bc1\n\n@Dik\n@rsi\n\n? ?\n? mdk \u00bc\n\nXnd\n\nk\u00bc1\nGik ? mdk (13.59)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 323\n\n\n\nwith the 5 ? 3 matrix\n\nGik \u00bc\n\n@D11 ik\n@rs\n\n1 i\n\n@D11 ik\n@rs\n\n2 i\n\n@D11 ik\n@rs\n\n3 i\n\n@D21 ik\n@rs\n\n1 i\n\n@D21 ik\n@rs\n\n2 i\n\n@D21 ik\n@rs\n\n3 i\n\n@D31 ik\n@rs\n\n1 i\n\n@D31 ik\n@rs\n\n2 i\n\n@D31 ik\n@rs\n\n3 i\n\n@D22 ik\n@rs\n\n1 i\n\n@D22 ik\n@rs\n\n2 i\n\n@D22 ik\n@rs\n\n3 i\n\n@D23 ik\n@rs\n\n1 i\n\n@D23 ik\n@rs\n\n2 i\n\n@D23 ik\n@rs\n\n3 i\n\n2\n6666666664\n\n3\n7777777775\n\ni\u00bc1;...;ns;k\u00bc1;...;nd\n\n(13.60)\n\nBy collecting all vectors rdk,m\nd\nk, and all 5 ? 1 arrays gi and all 5 ? 3 matricesGik\n\nin the following arrays\n\npT \u00bc rd1 . . . rdk . . . rdnd\n? ?\n\nmT \u00bc md1 . . . mdk . . . mdnd\n? ?\n\ngT \u00bc b1 . . . bi . . . bns\u00bd ?\nGT \u00bc G11 . . . Gik . . . Gnsnd\u00bd ? (13.61)\n\nWe can write Eq. (13.59) simply as:\n\ng \u00bc G ? m (13.62)\n\nIn analogy to Eq. (13.13) the optimal moments are given by:\n\nmopt\u00f0p\u00de \u00bc G\u00f0p\u00de\u00fe ? gm (13.63)\n\nThe associated \u201ccalculated\u201d or MDM field gradient is then:\n\ngc \u00bc G:mopt \u00bc G\u00fe ? gm (13.64)\n\nIn analogy to Eq. (13.15) the field gradient residues are:\n\ne \u00bc I ? G ? GT ? G? ??1 ? GT\n? ?\n\n? gm (13.65)\n\nIf Eq. (13.31) is fulfilled we have found the optimal MDM:\n\nMopt \u00bc pi\u00fe1 md opt pi\u00bc1? ? \u00bc GT ? G? ??1 ? GT ? gm\nh i\n\n(13.66)\n\n324 K. Mehlem\n\n\n\nAll the MDM issues described above for field measurements, like number of\n\ndipoles, etc., apply of course in the same way for field gradient measurements.\n\n13.3.9.2 Field Gradient Tensor as Vector\n\nWhereas we are used to the field as a vector, it is rather difficult to visualize the field\n\ngradient tensor. The following approach is a possible way to define the tensor as a\n\nvector. The double-sided small variation of the probe position in x-direction entails\n\nthe field vector Dbx (Fig. 13.25):\n\nDbx \u00bc 1\n2\n\nbx? \u00fe bx\u00fe\u00f0 \u00de (13.67)\n\nFig. 13.25 Double-sided perturbation in x-direction of the probe position vector rs\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 325\n\n\n\nwith\n\nbx? \u00bc b \u00f0rs? \u00bc rs ? Dr ? ex\u00de\nbx\u00fe1 \u00bc b \u00f0rs\u00fe \u00bc rs \u00fe Dr ? ex\u00de\n? ?\n\n(13.68)\n\nWhen repeating the variation in the y- and z-direction we obtain the field vectors\n\nDby and Dbz , respectively. With a variation Dr ? 1 we obtain the pseudo field\ngradient vector g by the following vector sum:\n\ng \u00bc Db\nx\n\nDr\n\u00fe Db\n\ny\n\nDr\n\u00fe Db\n\nz\n\nDr\n(13.69)\n\nFigure 13.26 shows rotational pseudo field gradient vectors gj (white lines\nconnected by colored topcurves). Each vector represents the local field change\n\ndue to a single variation of the probe position in +x-, +y-, and +z-direction.\n\n13.3.9.3 Example of Field Gradient Modeling by MDM\n\nIn the absence of real rotational field gradient data we had to simulate them.\n\nThe following points explain what has been done (see also Figs. 13.25 and 13.28):\n\n1. A reference 3-dipolemodel was chosen with a global moment of |m ref| \u00bc 104.4\nmA m2 (green) !\n\n2. A dipole at a distance of 2 m was added to the model in order to simulate at the\n\ncenter of the turntable a severe 100, nT perturbation like from a steel structure.\n\nAlso a second dipole with a random moment located at an extreme distance was\n\nadded in order to simulate worst case daily Earth field variations of \t100 nT.\nThus, the rotational field gradient measurements were simulated by use of a\n5-dipole model.\n\nFig. 13.26 Pseudo field gradient vectors gi (white lines with colored top-lines); global moment\nvectors, (green \u00bc reference, red \u00bc recovered from gradient data)\n\n326 K. Mehlem\n\n\n\n3. From the field gradient data a 4-dipole-model with a global moment of |m4|\n\u00bc 107.8 mA m2 was obtained. Despite the strong perturbations the residual\nmoment was only 8.0 mA m2 (7.7 %) (red) !\n\n4. In contrast, from the perturbed field data a 10-dipole model was obtained which\n\nhad a huge moment of |m10| \u00bc 639,0 mA m2 (blue) ! (Fig. 13.27)\nFigure 13.28 shows the perturbations of the rotational field data (blue) and their\n\npropagation (red) into the field gradient data.\nWe have varied the distance (point.2 above) between 2 and 10 m (see\n\nFig. 13.29). The error for both the global moment and for the far-field starts with\n\na relatively low value of about 10 % at 2 m, and it decreases quite rapidly, vanishing\n\ncompletely after 10 m.\n\nThe present example demonstrates that MDM is perfectly suited also for field\ngradient modeling tasks which may become very useful, in particular when tests\nhave to be made at places where no coil systems are available. Still, it has to be\n\nFig. 13.27 Global moment vectors, (green \u00bc reference, red \u00bc recovered from gradient data,\nblue \u00bc recovered from field data)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 327\n\n\n\nreminded that field gradient data have a lower SNR than field data, and that the use\n\noutside a coil system is restricted to test articles which do not contain any signifi-\n\ncant amount of softmagnetic material in which the external magnetic field could\n\ninduce disturbing moments. The modeling of induction is very difficult.\n\nFig. 13.29 Error of the global moment and the far-field vs. distance of perturbing dipole\n\nFig. 13.28 Field (blue) and field gradient (red) data affected by the same perturbations\n\n328 K. Mehlem\n\n\n\n13.4 Applications\n\n13.4.1 Giotto\n\nThe famous European spacecraft Giotto, which passed close to the comet Halley in\n\n1986, had two magnetometers mounted on one leg of a so-called antenna tri-pot\n\n(Fig. 13.30). A pair of strongly magnetic Travelling Wave Tubes (TWTs) located on\nthe upper platform and at a distance of only 1,47 m from the upper magnetometer,\n\ngenerated a perturbing field of 39.3 nT which would have severely affected the\n\nmagnetometer readings during flight (Table 13.1). A typical pair of TWTs (courtesy\n\nof Thales) is shown as insert in Fig. 13.31. This pair had therefore to be compensated\n\nby use of a magnet. In a first step three candidate TWT combinations (composed of\n\ntwo flight models and one spare) were mapped in the CNES magnetic test facility\n\nand preciseMDMswere derived (see Sects. 3.2, 3.3 and Table 13.1). In a second step\n\nthe fields at MAG-1 for all three possible TWT combinations were calculated\n\n(Eq. 13.1). In a third step the associated optimal compensation magnet moment\n\nvectors were determined (Eq. 13.5).\n\nThe Combination Nr. 1 (Table 13.1) was finally chosen as flight hardware.\n\nA 6 cm long magnet of 1,139 mA m2 was fabricated and then installed on a bracket\n\nFig. 13.30 Giotto with the magnetometer (MAG-1) on the antenna tri-pod, and 2 TWTs (images:\n\nESA)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 329\n\n\n\nFig. 13.31 Giotto upper platform, uncompensated (blue) and compensated (red) fall-off fields of\nthe TWTs (images: ESA, Thales + K. Mehlem)\n\nTable 13.1 Giotto TWT compensation numerical results\n\nPosition Moment\n\nPx (m) Py (m) Pz (m) mx (mA m\n2) my (mA m\n\n2) mz (mA m\n2) mj j (mA m2)\n\nDipole 1 0.034 0.011 0.111 4,704 1,211 2,640 5,528\n\nDipole 2 0.051 ?0.008 0.110 ?3,641 ?1,276 ?2,802 4,768\nDipole 3 0.032 ?0.001 ?0.002 ?1,637 67 ?493 1,711\nMagnet 0.115 0.095 0.128 910 110 677 1,139\n\nMAG-1 position MAG-1 field\n\nPx (m) Py (m) Pz (m) bx (nT) by (nT) bz (nT) bj j (nT)\nbMDM 0.324 0.704 ?1.245 31.3 18.6 ?14.8 39.3\nbMagnet 0.324 0.704 ?1.245 ?31.3 ?18.4 15.1 39.3\nbTotal 0.324 0.704 ?1.245 0.0 0.2 0.3 0.4\n\n330 K. Mehlem\n\n\n\nnext to Comb.1 (Fig. 13.31). The composite was then mapped and modeled again,\n\nconfirming the predictions very accurately. Since the distance between the TWTs\n\nand MAG-1 was only 1.47 m, we had the rare opportunity to check the compensa-\n\ntion effect directly by a measurement at the equivalent MAG-1 location. The field\n\nreadings in all three axes were quasi zero, so that the facility engineer first thought\n\nthat he had forgotten to switch on the facility magnetometer. This test was an\n\nexcellent validation of the MDM approach.\n\n13.4.2 Ulysses\n\nAfter 19 years of spectacular discoveries the Ulysses spacecraft travels still around\n\nthe sun on a polar orbit. It carries a fluxgate magnetometer (FGM) and a vector\n\nhelium magnetometer (VHM) at a distance of 6.45 m from the spacecraft center\n\n(Fig. 13.32). The cleanliness specification of 0.1 nT at the VHM location, was the\n\nstrongest one ever imposed.\n\nThe modeling task was made more difficult than usual because the spacecraft\n\ncould not be rotated with its boom extended and because the radioisotope thermo-\n\nelectric power generator (RTG) of NASA could for evident reasons not be present\n\nduring the magnetic test at IABG, Germany.\n\nThe RTG was tested separately at EG&G in Miamisburg, Ohio, USA [11], prior\n\nto the system test at IABG. Since the RTG was for safety reasons not allowed to be\n\nmoved to a coil facility, the tests had to be performed in the unshielded magnetic\n\nenvironment of the EG&G plant. Even after careful calibration of the probes the\n\nfield measurements were plagued by field offsets which did not allow a satisfactory\n\nmodeling.\n\nFig. 13.32 Ulysses spacecraft with the fluxgate magnetometer (FGM), the vector helium magne-\n\ntometer (VHM) and radioisotope thermoelectric power generator (RTG)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 331\n\n\n\nAs mentioned before the property of the magnetic potential in absence of an\n\nelectric current isr ? b \u00bc 0 (Eq. 13.55). This means that the integral of the tangen-\ntial field on a closed line around the test article must be zero. The deviation from\n\nzero corresponds to an external field which then can be subtracted from the\n\ntangential measurement data. Thanks to the gimbaled RTG fixture on the turn\n\ntable, it was possible to map the RTG in two orthogonal planes. The tangential\n\nelements of the measured field vectors were then used to derive an accurate MDM,\n\nand the associated field vector at the Ulysses VHM location was calculated.\n\nThereupon, a compensation magnet was determined, manufactured on-site, and\n\nfixed with a bracket on one fin of the RTG. Further mapping and modeling with the\n\nmagnet installed confirmed the compensation effect accurately.\n\nA pair of highly magnetic TWTs, located under the antenna dish, had been\n\ncompensated prior to integration (similar to Fig. 13.31).\n\nSince the spacecraft with extended boom (Fig. 13.32) was too large for rotational\n\nmeasurements, it had to be tested in two separate modes.\n\nFirst, the spacecraft was tested in the rotational mode with the boom in the\n\nstowed configuration. Figure 13.33 shows the spacecraft, together with measured\n\nnear-field vectors (red dots, 10? separation) and the MDM near-field (white vectors\nconnected by a yellow curve, 1? separation).\n\nSome significant field warping, which was quite a challenge for the modeling, is\n\nvisible on the right side of the figure. It was caused by two magnetic experiments\n\n(URAP and GRB) which were fixed on the boom close to the boom hinge.\n\nSince the spacecraft was magnetically quite clean (no RTG, TWTs compensated),\n\nan acceptable SNR could only be obtained close to the spacecraft body. This meant\n\nthat the URAP experiment unit passed very closely (40 cm) by the facility probes\n\nduring rotation.\n\nThe URAP MDM had to be identified separately by use of a so-called linear fall-\n\noff scan of the extended boom (Fig. 13.34, insert). It was then transformed into the\n\nstowed boom configuration and subtracted from the spacecraft MDM (boom\n\nstowed). Then it was added to the spacecraft MDM in extended configuration.\n\nFinally, the MDM of the RTG was also added. The total S/C MDM contained\n\n35 dipoles [12]. The fact that the TWTs were compensated w.r.t. the VHM location\n\ncan be seen in Fig. 13.33: The field in the direction of the extended boom (y) is quite\n\nlower than the field in the opposite direction (?y).\nFigures 13.34 and 13.35 show the spacecraft field with the RTG and the TWTs\n\nuncompensated and compensated (918 and 76 pT at the FGM location and 566 pT\n\nand 45 pT at the VHM location, respectively).\n\nThe total S/C MDM predicted a field at the VHM location of 45 pT. The\n\nfollowing appreciation by mission scientists [13] reflects the success of the cleanli-\n\nness effort: \u201cUsing magnetic mapping and modeling and appropriate compensation,\n\nthe background field of the spacecraft at these locations was determined, prior to\n\nlaunch, to be approximately 30 pT and 50 pT, respectively; this makes the Ulysses\n\nspacecraft probably the magnetically cleanest interplanetary probe ever flown. . .\nBoth magnetic mapping and modeling indicate the unparalleled cleanliness of the\n\nspacecraft, confirmed in flight.\u201d\n\n332 K. Mehlem\n\n\n\nFig. 13.34 Spacecraft fall-off field |b| (RTG and TWTs uncompensated and compensated)\n\noverlay on the x,y-plane containing the VHM location (insert: ESA)\n\nFig. 13.33 Ulysses rotational system test with complex field patterns generated by URAP\n\n\n\n13.4.3 Cluster\n\nThe four Cluster spacecraft explore the magnetic field around the Earth in a\n\nformation flight. The magnetic cleanliness specification for the location of the\n\noutboard fluxgate magnetometer (FGMO) was set to 0.25 nT. In order to achieve\n\nthis value, the four spacecraft went through the most intense magnetic cleanliness\n\nprogram ESA has ever carried out (Fig. 13.36).\n\nEach of the four spacecraft had a number of magnetically critical units and\n\nsubassemblies (like thruster-valves, etc.). In a preparatory phase every unit was\n\nmapped and modeled by using a small ESA coil facility (Fig. 13.6) and the ESA\n\nMAGNET software which had been developed by the author and the University of\n\nBraunschweig, Germany. A synthetic spacecraft MDM was successively built up.\n\nFigure 13.37 depicts critical units on board of a Cluster spacecraft.\n\nFig. 13.35 Ulysses far-field |b| (RTG and TWTs uncompensated and compensated) overlay on the\n\nblack zero-level sphere with r \u00bc rVHM\n\n334 K. Mehlem\n\n\n\nFig. 13.37 Magnetic units (about 120) (H. K\u20acugler, IABG)\n\nFig. 13.36 The Cluster mission (four spacecraft on red orbit) (ESA)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 335\n\n\n\nEach complete spacecraft was tested in the large Helmholtz coil facility of\n\nIABG, Germany, in at least four magnetic states. The optimal MDMs for all\n\nrotational measurements and the associated fields at the CSP had to be calculated\n\nlive during the test. Figure 13.38 gives an impression of the modeling challenge due\n\nto the presence of many eccentric magnetic sources. A minimum of 12 dipoles were\n\nrequired per MDM [14].\n\nAs the magnetic cleanliness specification of 0.25 nT was exceeded, a magnet\n\nwas determined for the compensation of both the FGMI and the FGMO field. The\n\ncorresponding magnet had to be split into two parts because only two orthogonal\n\nsurfaces were available for the installation of the magnets. A so-called x,y-magnet\n\nwith the components [mx, my, 0] had to be fixed on a small horizontal surface of the\n\nspacecraft at a position p1. A so-called z-magnet with the components [0, 0, mz] had\n\nto be fixed on a small vertical bracket installed on the spacecraft at a position p2.\n\nThe moment vectors of both magnets have been optimized by using Eq. (13.51).\n\nSince we had three moment components to generate in total six compensating far-\n\nfield vectors, only a least square solution could be achieved (see Sect. 3.8, point 2).\n\nNevertheless, a reduction of the field by an order of magnitude at both locations was\n\nachieved (Fig. 13.38). It had then to be verified by a new measurement-modeling\n\ncycle. Each of the four spacecraft needed compensation. After the tragic launch\n\nfailure of Ariane V and the loss of all four Cluster spacecraft, the recovery project\n\nFig. 13.38 Fall-off fields on a line through FGMI and FGMO and compensated rotational fields\n\non three rings, compensation achieved by one magnet\n\n336 K. Mehlem\n\n\n\nCluster II was started. The same cleanliness program was successfully carried out\n\nagain. In total about 50 MDMs were derived and all spacecraft were successfully\n\ncompensated for FGMI and FGMO, each by use of one magnet only.\n\n13.4.4 Cassini\n\nOrbiting Saturn Cassini carries two magnetometers (one VHM, left, and one FGM,\n\nmid) on a 11 m long deployable boom. The target cleanliness level was set to\n\n200 pT at the VHM location. The spacecraft is powered by three RTGs, similar to\n\nthe one on Ulysses (Sect. 4.2).\n\nA series of complex mapping exercises were performed in the industrial and\n\nradioactive environment of the EG&G facility in Miamisburg, Ohio, USA [11]. All\n\nRTGs (F2, F6 and F7) had been modeled by the author during the tests. When\n\nbuilding the synthetic RTG model it turned out that in the worst case the RTGs\n\nwould generate up to 115 pT at the VHM location, which is more than half of the\n\nwhole spacecraft allocation (200 pT).\n\nIn an effort to avoid the problematic use of compensation magnets (radiation,\n\nstability, etc.) for each RTG, the author investigated the possibility of self-\n\ncompensation when each RTG was allowed to be installed at any of the three\n\nlocations, and when the rotation angles could be chosen in steps of 30? (Fig. 13.39).\nUnder these conditions a formidable self-compensating configuration was found\n\nwhich dropped the field at the VHM location from 49 pT to 4 pT (Table 13.2) [5].\n\nFigure 13.40 shows the strong self-compensation of the three RTG field vectors\n\ndown to a rest vector of only 4.1 pT. In Fig. 13.41 the associated fall-off fields\n\n(nominal in blue and compensated in red) along a line through both magnetometers\n\nare shown.\n\nThese optimal location and clocking values of Table 13.2 were finally adopted\n\nby the project, and the RTGs were attached to the spacecraft accordingly. In-flight\n\nmeasurements have confirmed the success of this compensation exercise which\n\nrepresents a classical example of self-compensation techniques.\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 337\n\n\n\nTable 13.2 Optimal clocking angles\n\nRTG position 1 2 3\n\nClocking angle f1 f2 f3 |b|VHM\nDegrees pT\n\nRTG configuration F2 F6 F7\n\nNominal 150 0 0 72\n\nMinimum ?30 60 ?90 17\nRTG configuration F2 F7 F6\n\nNominal 150 0 0 73\n\nMinimum ?30 60 ?90 16\nRTG configuration F6 F2 F7\n\nNominal 150 0 0 49\n\nMinimum ?120 90 ?60 4\nRTG configuration F6 F7 F2\n\nNominal 150 0 0 116\n\nMinimum ?30 ?150 60 25\nRTG configuration F7 F2 F6\n\nNominal 150 0 0 45\n\nMinimum ?120 90 ?30 8\nRTG configuration F7 F6 F2\n\nNominal 150 0 0 111\n\nMinimum ?30 ?150 60 26\n\nFig. 13.39 RTG locations on Cassini\n\n338 K. Mehlem\n\n\n\nFig. 13.40 Self-compensating far-fields\n\nFig. 13.41 Self-compensation of RTG fields achieved by optimal location and clocking\n\nparameters (green) (image: JPL, K. Mehlem)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 339\n\n\n\n13.4.5 Software\n\nAll results of the paper have been calculated with the MDM software GAMAG\n\nwhich integrates three decades of magnetic modeling experience. It is presently the\n\nmost sophisticated while automatic MDM software is available (www.astos.de).\n\nThe software works for any rotational, translational, or static test setup, and more\n\nimportantly, it requires only external input data: field or field gradient data, sensor\n\npositions, body constraints, CSPs and positions for compensation magnets.\n\nIt solves the problems related to constraint handling, optimal model sizing and\n\nreduction of model ambiguities internally. In fact, thanks to the use of a complex\n\nstrategy of MDM sizing, and parameter resetting (and of course under the condition\n\nof consistent input data), the NLP process finds always an acceptable MDM. The\ninternal steering parameters have been optimized such that 70 very different\n\nmodeling cases could be solved in a single batch run.\n\nThe software has a user-friendly graphical user interface and it delivers a\n\ncomplete report on the optimization process, on theMDM properties, on the uncom-\n\npensated far-fields, on the optimal compensation magnets, and on the compensated\n\nfar-fields. The results are also available as 2D graphs and interactive 3D graphics\n\nsimilar to the ones shown in Fig. 13.40.\n\nThe modeling run for the case of Fig. 13.33, which included 144 field data and 9\n\ndipoles, took 69 s, including the generation of 20 independent 9DM\u2019s for statistics.\n\nThis compares to some hours of intensive hands-on work if similar results had to be\n\nproduced by use of precursor MDM software.\n\n13.5 Conclusion\n\nA specific application of optimization in space technology, the magnetic modeling\n\nmethod MDM as used for magnetic cleanliness tasks, has been described in detail.\n\nSpecial attention has been focused on the solution of optimal model sizing and\n\non solution ambiguities, which are common problems in the domain of inversion\n\ntasks. In particular, an optimized strategy of combined MDM sizing and parameter\n\nre-settings guarantees that the NLP process never ends up in a relative minimum.\n\nMultiple-point compensation techniques for fields exceeding the cleanliness\n\nspecifications, have been detailed.\n\nThe extension of the MDM approach to field gradient measurements has also\n\nbeen described, together with an impressive example.\n\nFinally, the solution of a number of different challenging modeling tasks, related\n\nto four spacecraft, has been described in some detail.\n\nThe GAMAG software which integrates the experience of magnetic modeling\n\ngained in a period of more than three decades has been briefly characterized as well.\n\nIn particular, in the presence of a number of ill-conditioned modeling problems, it\n\nwas a challenge in itself to develop a fully automatic software tool.\n\n340 K. Mehlem\n\nhttp://www.astos.de\n\n\nThe author hopes that the presented MDM method will stimulate similar\n\napplications like reverse identification of test setup configurations by use of mag-\n\nnetic calibration sources (coils). Outside the field of EMC there are some potential\n\nareas of applications like gravitational modeling of irregular celestial bodies by\n\npoint masses, trajectory optimization, attitude control etc. Other interesting areas\n\nare aerodynamic and propulsion modeling, industrial processes, and even medical\n\nMDM applications like for MEG, EEG, and ECG.\n\nReferences\n\n1. Musmann, G., Neubauer, F.M., Lammers, E.: Observations by the Helios-1 spacecraft. J.\n\nGeophys. 42, 591\u2013598 (1977)\n\n2. Musmann, G.: Design guide for magnetic cleanliness control, internal paper GIOTTO (1982)\n\n3. Kuegler, H.: Performance improvement of the magnetic field simulation facility MFSA. In:\n\nProceedings of the 5th International Symposium on Environmental Testing for Space\n\nProgrammes, Noordwijk (ESA SP-558, June 2004). Compiled by: K. Fletcher, pp. 407\u2013414,\n\nBibliographic Code: 2004ESASP.558.407K, p. 409, } 3 (2004)\n4. Mehlem, K.: Multiple magnetic dipole modeling and field prediction of satellites. IEEE Trans.\n\nMagn. 14(5), 1064\u20131071 (1978). ISSN: 0018-9464\n\n5. Mehlem, K., Narvaez, P.: Magnetostatic cleanliness of the radioisotope thermoelectric power\n\ngenerators (RTGs) of Cassini. IEEE Int. Symp. Electromagn. Compat. 2, 899\u2013904 (1999).\n\nISBN: 0-7803-5057-X\n\n6. Campbell, S.L., Meyer Jr., C.D.: Generalized Inverses of Linear Transformations. Dover, New\n\nYork (1991)\n\n7. Nocedal, J., Wright, S.: Numerical Optimization. Springer, New York (1999). ISBN\n\n0387987932\n\n8. Rosenbrock, H.H.: An automatic method for finding the greatest or least value of a function.\n\nComput. J. 3, 175\u2013184 (1960). doi:10.1093/comjnl/3.3.175. doi:dx.doi.org, ISSN: 0010-4620\n\n9. Zisserman, A.: Robotics Research Group in the Department of Engineering Science,\n\nUniversity of Oxford, Andrew Zisserman\u2019s Home Page, Lecture Courses, B1 Optimization\n\n(Michaelmas Term 2011), Lecture 2 \u201cNewton and Newton like methods, and the amoeba\n\nalgorithm\u201d, www.robots.ox.ac.uk/~az/lectures/b1/lect2.pdf\n\n10. Duffin, W.J.: Electricity and Magnetism, 4th edn. McGraw-Hill, London (1990)\n\n11. Mehlem, K.: Cassini RTG F5, F2, F7, F6 magnetic analysis report, ESA/ESTEC-JPL internal\nworking paper (1996/1997)\n\n12. Mehlem, K.: Ulysses RTG F3 magnetic compensation, ESA/ESTEC internal working paper\n\n1537 (March 1989)\n\n13. Balogh, A., Beek, T.J., Forsyth, R.J., Hedgecock, P.C., Marquedant, R.J., Smith, E.J.,\n\nSouthwood, D.J., Tsurutani, B.T.: The magnetic field investigation on the Ulysses mission:\n\ninstrumentation and preliminary scientific results. Astron. Astrophys. Suppl. Ser. 92, 221\u2013236\n\n(1992)\n\n14. Mehlem, K.: Magnetic properties of the Cluster I and II spacecraft, 11 ESA/ESTEC working\n\npapers (2000)\n\n13 Optimal Magnetic Cleanliness Modeling of Spacecraft 341\n\nhttp://dx.doi.org/10.1093/comjnl/3.3.175\nhttp://www.robots.ox.ac.uk/~az/lectures/b1/lect2.pdf\n\n\nChapter 14\n\nIntegrated Design-Trajectory Optimization\n\nfor Hybrid Rocket Motors\n\nDario Pastrone and Lorenzo Casalino\n\nAbstract Hybrid rocket motors present a competitive edge among space\n\napplications, as they are flexible, safe, reliable, and low cost. The motor design\n\nand operation are contingent on the type of designated mission; therefore, it is\n\nuseful to couple design and trajectory optimization. This approach is especially\n\nneeded for hybrid rockets in which a unique combustion process links thrust and\n\nspecific impulse. In this chapter, a multidisciplinary optimization code is described\n\nfor the use of designing hybrid rocket motors. There are few parameters which\n\ndefine the design of the hybrid engine, whereas the trajectory optimization is\n\ncharacterized by continuous controls. Due to the difference between these\n\nunknowns, a mixed optimization procedure has been developed. To maximize\n\nmission performance, direct optimization of engine design variables is coupled\n\nwith the trajectory indirect optimization.Some interesting applications of the afore-\n\nmentioned procedure are presented.\n\nKeywords Hybrid rocket motors \u2022 Multidisciplinary design optimization\n\n14.1 Introduction\n\nFor the purposes of space transportation and space exploration, chemical rockets\n\nare still the most frequently used propulsion systems. Both liquid rocket engines\n\n(LREs) and solid rocket motors (SRMs) had a dynamic period of progress from\n\nthe 1940s to the 1970s. Consequently, they can now be considered mature\n\ntechnologies, while hybrid rocket motors (HRMs) have not experienced the same\n\nintense development. In addition to some common chemical rocket challenges,\n\none of the main HRM obstacles is the low regression rate (i.e., the rate at which the\n\nD. Pastrone (*) \u2022 L. Casalino\nPolitecnico di Torino, Corso Duca degli Abruzzi, 24, 10129 Torino, Italy\n\ne-mail: dario.pastrone@polito.it; lorenzo.casalino@polito.it\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_14,\n# Springer Science+Business Media New York 2013\n\n343\n\nmailto:dario.pastrone@polito.it\nmailto:lorenzo.casalino@polito.it\n\n\nsolid fuel burns) of solid grains, which limits the thrust level and determines\n\ncomplex geometric constraints. Moreover, HRMs cannot guarantee the same per-\n\nformance of cryogenic LREs. Nevertheless, hybrid rockets have recently come to\n\nthe forefront and have powered the first commercial vehicle for human suborbital\n\nflight [15]. In fact, they can provide a safe and affordable option for many\n\napplications (accessing upper atmosphere and space for scientific missions, educa-\n\ntional projects, space tourism, etc.). A large number of works concerning the\n\nexperimental and numerical analysis of HRMs show the interest in utilizing this\n\ntype of chemical rocket. Many projects under development are currently conducted\n\nby research centers, national and international space agencies, and universities [6,\n\n16, 22, 28, 29, 31].\n\nSimilar to other propulsion systems, HRMs present advantages and technical\n\nchallenges. In HRMs, the oxidizer and fuel are stored apart in two different physical\n\nphases. In this case, the most common configuration is considered, using a liquid or\n\ngaseous oxidizer and a solid fuel. There are many interesting consequences of\n\nseparating the two propellants and using two different phases. Containing only\n\nfuel, the solid grain is less prone to have defects and can be produced safer and\n\ncheaper compared to SRM grains, where both fuel and oxidizer are present. Other\n\nbeneficial effects are pores or small cracks in the grain cannot cause deflagration to\n\ndetonation transition as in SRMs; chemical explosion hazards are reduced and\n\ninadvertent ignition avoided.\n\nProblems related to liquid propellant feed system and storage, such as\n\ncomponents reliability, leaks, fire hazards and propellant management in micro-\n\ngravity or adverse acceleration conditions, are cut to half. Moreover, the solid phase\n\npresents higher density and also allows for easy inclusion of solid additives that can\n\nimprove performance, such as aluminum. On the other hand, one of the propellant is\n\nkept fluid so that its flow can be controlled. It enables throttling, cutoff, and restart\n\ncapability. Last but not least, propellants for HRMs are more environmental\n\nfriendly than the most common oxidizer for SRMs, i.e., ammonium perchlorate\n\n(AP), and storable propellants for LREs, such as nitrous tetroxide (NTO) and\n\nmonomethylhydrazine (MMH). Table 14.1 summarizes pros and cons of HRMs\n\nwith respect to LREs and SRMs.\n\nChallenges arise from the particular combustion process of HRMs, which is\n\nsketched in Fig. 14.1. The oxidizer flowing over the solid grain surface generates a\n\nTable 14.1 Advantages of hybrid propulsion systems\n\nCompared to Liquid Solid\n\nPerformance Higher fuel density\n\nAdditives in grain\n\nHigher specific impulse\n\nThrottling/cut-off/restart capability\n\nSafety Reduced fire hazard\n\nReduced hard start\n\nReduced explosion hazard\n\nReduced inadvertent ignition\n\nSystem One liquid line\n\nLower propellant management needs\n\nOnly-fuel grain\n\nLower environmental impact\n\nCost Reduced development costs\n\nReduced recurring costs\n\n344 D. Pastrone and L. Casalino\n\n\n\nboundary layer. A diffusion flame is formed in a slightly fuel-rich region inside this\n\nlayer. The fuel coming from the solid grain is gasified by the heat coming from the\n\nflame. A first issue that is related with the combustion process is propellant mixing.\n\nDue to the diffusion flame characteristics, part of the fuel in the region below the\n\nflame may not mix with the oxidizer above the flame and exit the nozzle before\n\nreleasing all the chemical energy. Therefore, HRMs usually have a combustion\n\nefficiency which is lower when compared to LREs and SRMs. The introduction of a\n\nmixer, downstream of the solid grain and just before the nozzle, mitigates this\n\nproblem. Of course, the system weight and dimensions are worsened, and a trade-\n\noff is required. Another important issue is the grain low regression rate. It results to\n\nbe one order of magnitude smaller than the one typical of solid composite\n\npropellants. The main limitation is related to the heat transfer from the flow to the\n\nsolid grain surface. In fact, unless the mass flux is very high or the pressure very\n\nlow, chemical reaction kinetics in the flame is very fast when compared to the fuel\n\ngasification process, which in turn depends on the heat transfer from the flame.\n\nApproaches to this issue are discussed in Sect. 14.2. The heat transfer is mostly\n\nconvective except for very large combustion chambers or when combustion gases\n\ncontain a large number of solid particles. Regression rate experimental data are in\n\nagreement with pressure independent correlations based on the oxidizer mass flux\n\nGO \u00bc _mO=Ap (i.e., the ratio of oxidizer mass flow _mO to port area Ap). Pressure\ndependence can be significant only in two cases: when the mass flux is very high so\n\nthat chemical kinetics and heat transfer have comparable timescales or when mass\n\nflux is so slow that radiation and convection heat transfer are comparable. Due to\n\nthe dependence on GO, the regression rate is influenced not only by the oxidizer\nmass flow but also by the grain geometry, which changes during motor operation.\n\nAs the fuel mass flow rate depends both on the regression rate and on the surface\n\narea where the gaseous fuel originates from, the mixture ratio changes even if the\n\noxidizer mass flow is kept constant (mixture-ratio shifting). In SRMs, the grain\n\ncomposition determines the specific impulse, and the thrust law is determined by\n\ngrain geometry history and nozzle geometry. Mixture ratio and chamber pressure\n\ncan be separately controlled in classic bi-propellant LREs. On the opposite, the\n\ncombustion process that occurs in HRMs conditions the design of the solid grain\n\nand engine operations. The fuel mass flow is ruled by grain and nozzle geometries\n\nFig. 14.1 Main features\n\nof the hybrid propellant\n\ncombustion process\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 345\n\n\n\nand by the oxidizer mass flow: mixture ratio and chamber pressure are correlated.\n\nFor this reason, the optimization of this propulsion system is particularly challeng-\n\ning and requires adequate methods.\n\nThe optimization of the propulsion system design and its operations is also\n\nstrictly related to the type of mission considered. In many applications thrust has\n\na major influence, since it affects both the propulsion system design and the\n\ntrajectory performance; a compromise must be sought, as greater thrust levels\n\nreduce the gravitational losses but increase structural mass. For this reason, the\n\ndesign optimization should include trajectory analysis and its optimization. This is\n\nespecially true when HRMs are considered, due to the aforementioned peculiar\n\ncombustion process. Therefore, coupled optimization of engine and trajectory is\n\nnecessary in most applications of hybrid rockets. In the present work, a fast and\n\nreliable multidisciplinary optimization code is described. The optimization proce-\n\ndure is a nested direct-indirect technique which aims at finding the engine design\n\nparameters and the trajectory that maximize the mission performance index. The\n\nnumber of engine design parameters is usually low, and their optimization is easily\n\ncarried out by a direct method. On the other hand, the trajectory optimization is\n\ncharacterized by continuous controls (e.g., thrust direction), which requires\n\ndiscretization by means of a large number of parameters or the use of indirect\n\nmethods. The nature of this problem suggests the use of a mixed optimization\n\nprocedure. An efficient parametric optimization code, developed at the Politecnico\n\ndi Torino [7], is used to find the optimal values for design parameters in conjunction\n\nwith an indirect procedure [12] to optimize the trajectory.\n\nPrinciples that determine the preliminary choices concerning propellant\n\ncombinations, grain geometry, injectors, and feed system configurations are discussed\n\nin Sect. 14.2. Analysis of motor design and operation is presented in Sect. 14.3,\n\nproviding a detailed description of the design variables and their influence on\n\nperformance. The optimization procedure is described in Sect. 14.4. Examples of\n\nuse of this procedure for interesting applications are presented in Sect. 14.5, and\n\nconcluding remarks are provided in Sect. 14.6.\n\n14.2 Preliminary System Options\n\nSome decisions heavily condition the propulsion system and are chosen before the\n\noptimization procedure. Among others, the most salient factors are:\n\n\u2022 Propellant combination\n\n\u2022 Grain type\n\n\u2022 Injector type\n\n\u2022 Feed system/oxidizer control\n\nThere are few appropriate oxidizers which comply with the most important\n\nselection criteria, while a large choice of fuels exists. The most effective oxidizers\n\n346 D. Pastrone and L. Casalino\n\n\n\nenvisaged for HRMs are liquid oxygen (LOX), hydrogen peroxide (HP), and\n\nnitrous oxide (N2O).\n\nOxygen is cryogenic and stored in liquid phase. It can be both injected as a liquid\n\nor gasified prior to combustion to improve combustion stability. Nevertheless, the\n\nmeans of vaporizing LOX introduce complexity, weight, and safety issues. Oxygen\n\ndetermines maximum values of characteristic velocity c? at a low mixture ratio,\nthus making the low regression rate a more important issue. On the other hand, both\n\nHP (in H2O solutions) and N2O are slightly toxic and may decompose in the\n\npropellant tank. A catalytic bed is normally used for HP. N2O presents a much\n\nslower decomposition rate with respect to HP and is directly injected without a\n\ncatalyzer. In this case, the system is lighter, but uncontrolled decomposition may\n\ndetermine overpressure. Nevertheless, N2O is considered to be fairly safe and is\n\nwidely used for different applications.\n\nThe burning surface required to produce a given fuel mass flow is inversely\n\nproportional to the regression rate. Due to the low regression rate, the length of the\n\ngrain may become difficult to manage if a cylindrical grain with a single circular\n\nport is used. Multiport grains mitigate this problem; however, they present some\n\ndrawbacks: the presence of slivers (unburned mass fraction can be about 5\u201310%),\n\ncomplex design and fabrication, possible compromised grain structural integrity\n\ntoward the end of burning, and uneven behavior of ports. The regression rate issue\n\ncan also be mitigated using propellant combinations which have a maximal value of\n\ncharacteristic velocity c? at high values of mixture ratio. In this case, the regression\nrate is of minor concern, as the fuel grain must give a minor contribution to the\n\noverall mass flow. Unfortunately, this happens when the oxidizer also contains\n\natoms with non-oxidizing properties (e.g., nitrogen) and compromises performance.\n\nImprovement of the regression rate continues to be the most straightforward\n\noption. Paraffin-based fuels naturally present high regression rates [20] since they\n\nform a melt layer at the combustion surface, which may become unstable [21]. The\n\nregression rate is enhanced by a new mass-transfer mechanism, i.e., entrainment of\n\nliquid droplets from the melt layer. The same effect may be obtained by freezing\n\npropellants which are liquid or gaseous at standard conditions (solid cryogenic\n\nhybrids). Heat transfer to the surface can be increased by introducing additives in\n\nthe fuel (metal or hydride particles [17, 25], oxidizer particles) or by modifying the\n\nflow field with unconventional injectors (e.g., vortex hybrid rocket [23]) or grain\n\ngeometries (e.g., cascaded multistage impinging-jet [26]). All these methods pres-\n\nent drawbacks which may affect cost, safety, and the environment.\n\nAs far as the feed system is concerned, both pressurized and turbopump systems\n\nmay be adopted. When requiring a modest level of velocity gain DV , the best choice\nis the simplest and more reliable blowdown type. In this case, the propellant flow is\n\nnot controlled. Performance may be enhanced with a shot of repressurization, but an\n\nauxiliary gas tank is needed. Better performance may be obtained with a regulated\n\nfeed system. Usually, the optimal solution requires a partially regulated operation in\n\nwhich a constant tank pressure phase is followed by a blowdown phase. When DV is\nincreased, high values of tank pressure are necessary to keep the thrust magnitude\n\nand regression rate sufficiently large. Therefore, the masses of the oxidizer tank and\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 347\n\n\n\nauxiliary tank become large. In this case, the use of a turbo pump feed system can\n\nimprove the rocket performance, reducing propellant tank mass and eliminating\n\npressurizing gas and its tank. Since a HRM has only one liquid propellant, it is\n\ndifficult to have high-energy fluid to feed a turbine to move the pump. Decomposing\n\nmonopropellants (e.g., HP), heating liquid oxidizers, and using thrust chamber tap-\n\noff or auxiliary liquid propellants are solutions that introduce complexity, reduce\n\nreliability, and increase costs. For these reasons, an electrical drive system powered\n\nby batteries has been proposed [10].\n\n14.3 Motor Design and Operation\n\nAfter the preliminary design choices discussed in Sect. 14.2 have been fixed, the\n\nperformance of a HRM depends on grain geometry, nozzle geometry, and oxidizer\n\nmass flow rate. The initial values of oxidizer flow rate, grain burning area, and port\n\narea determine the initial regression rate, thrust, mixture ratio, and specific impulse.\n\nThe motor performance changes during operation; the oxidizer flow rate depends\n\non the propellant feed system, whereas the regression rate and grain geometry\n\ndetermine how port and burning areas change with time. The guidelines to evaluate\n\nthe motor performance are presented here.\n\n14.3.1 Combustion and Performance\n\nAfter selecting a propellant combination, the relevant properties of the combustion\n\ngases can be evaluated at a given mixture ratio and chamber pressure. Suitable\n\ncodes [18] can be used to evaluate the characteristic velocity c? and the specific\nheat ratio g as a function of the mixture ratio a. Performance and gas properties are\ncomputed, assuming a frozen expansion (i.e., during nozzle expansion the combus-\n\ntion products maintain the composition they have in combustion chamber). To\n\ncompute the thrust coefficient CF, a one-dimensional isentropic expansion with a\nconstant value of g is taken into consideration. Real effects are accounted for by\nintroducing a correction factor ZF [32] to modify the vacuum thrust coefficient, thus\nobtaining\n\nCF \u00bc ?F\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n2g2\n\ng? 1\n2\n\ng\u00fe 1\n? ?g\u00fe1\n\ng?1\n1? pe\n\npc\n\n? ?g?1\ng\n\n\" #vuut \u00fe e pe\npc\n\n8<\n:\n\n9=\n;? e\n\npatm\npc\n\n(14.1)\n\nwhere e is the nozzle-expansion area ratio, and pc, pe, and patm are chamber, exit,\nand ambient pressure, respectively. The pressure in the combustion chamber pc\n\n348 D. Pastrone and L. Casalino\n\n\n\nis determined via the ballistic model (see Sect. 14.3.2). CF can then be evaluated,\nprovided the ambient pressure and expansion (e or pe /pc) are known.\n\nThe above-mentioned hypotheses are conservative assumptions that are\n\nintroduced to account for the low combustion efficiency of HRMs. In actual\n\nexpansion, some reassociation of the combustion products may occur, consequently\n\nimproving performance. Moreover, the maximum performance for shifting equilib-\n\nrium is attained at higher values of mixture ratio, with a reduction of the structural\n\nmass fraction.\n\nIn this work, third-degree polynomial fitting of c? and g are evaluated at a\nreference combustion pressure pc\u00bc 10 bar. The resulting expressions are embedded\nin the code to compute the proper values as the mixture ratio changes during motor\n\noperations, also including a proper c?-efficiency Z? [32]. It should be noted that the\nactual pressure in the combustion chamber can span over a wide range during motor\n\noperations. Nevertheless, it has been verified that the error due to the above-\n\nmentioned fits is usually very small.\n\n14.3.2 Ballistic Model\n\nAfter selecting the propellants, it is possible to find a proper regression rate\n\ncorrelation. Classical head-end injector is here used, and the regression rate _y is\nexpressed as a function of the oxidizer mass flux GO \u00bc _mO=Ap , according to the\nfrequently used correlation\n\n_y \u00bc aGnO \u00bc a\u00f0 _mO=Ap\u00den: (14.2)\n\nValues of a and n can be found in literature [14, 21, 30, 34], Care must be taken as\nthese semi-empirical correlations are usually valid for a given mass flux range and\n\ncan be motor-scale related.\n\nThe fuel mass flow is\n\n_mF \u00bc rF _yAb \u00bc rF _yLbP; (14.3)\n\nwhere Lb is the grain length, rF is the fuel density, and P is the burning perimeter.\nUnder the assumption of incompressible turbulent flow, the oxidizer flow rate is\n\nevaluated as\n\n_mO \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0pf ? p1\u00de=Z\n\nq\n; (14.4)\n\nwhere pf is the pressure level due to the feeding system (tank pressure with\npressurizing gas feed system or discharge pressure with turbopump), p1 is the\nhead-end pressure, and Z is the hydraulic resistance in the oxidizer flow path\nfrom the tank or pump discharge to the combustion chamber. The head-end\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 349\n\n\n\npressure p1 can be related to the chamber/nozzle stagnation pressure pc by means of\napproximate relations, such as the one proposed by Barrere et al. [3] for side-\n\nburning grains\n\np1 \u00bc 1\u00fe 0:2\nAth\nAp\n\n? ?2\" #\npc; (14.5)\n\nwhere Ath is the throat area. It is assumed that Z is constant during motor operation.\nThe mixture ratio\n\na \u00bc _mO\n_mF\n\n(14.6)\n\nand the corresponding value of c? are then determined. An isentropic expansion\nis assumed in the nozzle, and the chamber/nozzle stagnation pressure pc is\nevaluated as\n\npc \u00bc\n\u00f0 _mO \u00fe _mF\u00dec?\n\nAth\n: (14.7)\n\n14.3.3 Grain Geometry\n\nThe initial values of port area and burning area determine the initial mass flow rate;\n\nduring combustion, these areas change according to the burn distance y. The\nevaluation of the rocket performance requires the knowledge of the instantaneous\n\ngrain geometry during combustion.\n\nIn this work, common circular grain sections are adopted. The single-port\n\ngeometry with axial symmetry and a circular port is the simplest case. The port\n\nradius describes the cylindrical single-port geometry, whereby the initial value is\n\nRci and the circular port area is\n\nAp \u00bc p\u00f0Rci \u00fe y\u00de2 (14.8)\n\nwith burning perimeter\n\nP \u00bc 2p\u00f0Rci \u00fe y\u00de: (14.9)\n\nBecause of low regression rate values, single-port grains require large values of\n\nlength to obtain prescribed thrust level; multiple-port grains reduce grain length.\n\nTwo different multiport grain geometries are considered in the following\n\ndiscussion. The first one [4] has triangular ports, defined by the number of ports\n\nN, the web thickness w, and the grain outer radius Rg. Making reference to\n\n350 D. Pastrone and L. Casalino\n\n\n\nFig. 14.2a, initial port area and burning perimeter can be expressed [13] as functions\n\nof Rg and w, assuming minimum sliver. For a given burning distance y (0 ? y? w),\nthe burning perimeter and the port area can be calculated.\n\nThe second geometry assumes a wagon-wheel grain with a central circular port\n\nwith initial radius Rci surrounded by a row of N quadrangular ports, as shown in\nFig. 14.2b. The value of the initial area for each quadrilateral port is assumed to be\n\nequal to the area of the central circular port to consequently obtain the same initial\n\nregression rate [33]. The geometry is again defined by Rg and w when imposing\nminimum sliver. It is also assumed that the regression rate remains the same in\n\nquadrilateral and circular ports for the duration of the burn, despite differences\n\namong port area and burning surface history. This assumption has a limited impact\n\non performance, as the circular port only deals with a limited fraction of the overall\n\nflow. One can then solve the grain initial geometry [13], determining initial port\n\narea and burning perimeter as functions of Rg and w. During the operation, the\nvalues of port area and burning perimeter can then be derived as functions of y. Both\nN \u00bc 6 and N \u00bc 8 grains are considered in the following.\n\n14.3.4 Feed System and Oxidizer Flow Rate\n\nThe pressure pf provided by the feed system must be known to evaluate the motor\nbehavior. If a pressurized feed system is adopted, pf is equal to the tank pressure pt.\nWith the simplest blowdown system, only the mass of pressurizing gas mg stored in\nthe oxidizer tank is required to determine pt. The initial ullage volume (Vg)i (i.e.,the\ninitial gas volume in the propellant tank) can be more conveniently utilized as a\n\ndesign parameter.\n\nWhen considering a partially regulated feed system a phase with constant tank\n\npressure is introduced, followed by a blowdown phase. Pressure is maintained\n\nconstant by means of a pressurizing gas (e.g., helium) flowing from an auxiliary\n\ntank. In addition to (Vg)i, the initial pressure in the gas tank and the length of\nthe constant-pressure phase must be known to determine the tank pressure history.\n\nFor the valve\u2019s control stability, (Vg)i is typically related to overall oxidizer mass\n\nw\n\nRg Rg\n\nw\n\nw\n\nw\n\nTriangular-port geometry\n\na b\n\nw\nw\n\nww\n\nw\n\nQuadrilateral-port geometry\n\nFig. 14.2 Multiport geometries\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 351\n\n\n\n(mO)f, which is generally unknown a priori; they can instead only be obtained at\nburnout after integration of Eq. (14.4). A tentative value, which becomes an\n\nadditional unknown of the trajectory, is necessary to start the integration. The\n\ntentative value for (mO)f is corrected by the trajectory indirect optimization proce-\ndure to match the value obtained at burnout after the integration of Eq. (14.4).\n\nDuring the regulated phase pt \u00bc (pt)i, whereas pt is calculated assuming an isentro-\npic expansion of the pressurizing gas in the tank during the blowdown phase\n\npt \u00bc \u00f0pt\u00dei\n\u00f0Vg\u00deBD\nVg\n\n? ?gg\n(14.10)\n\nwhereVg \u00bc \u00f0Vg\u00dei \u00fe mO=rO and (Vg)BD is the gas volume in the oxidizer tank at the\nbeginning of the blowdown phase. When the simpler blowdown pressurization is\n\nchosen, (Vg)BD \u00bc (Vg)i. Otherwise, \u00f0Vg\u00deBD \u00bc \u00f0Vg\u00dei \u00fe \u00f0mO\u00deBD=rO for the regulated\nfeed system, where (mO)BD is the exhausted oxidizer mass at the start of blowdown\noperation.\n\nSelf-pressurization, related to the high vapor tension at ambient temperature, is\n\nan interesting feature which makes N2O a suitable propellant. This fact and the\n\nsafety characteristics of N2O explain the wide use of nitrous oxide as an oxidizer in\n\nHRMs. When a self-pressurizing propellant such as N2O is used, the mass flux\n\nbetween the two phases becomes a fundamental control mechanism of the tank\n\npressure change. Suitable models [8] can be developed to describe the pressure\n\nevolution in the tank during the burn; in particular, a two-phase model, where\n\nsaturated vapor and superheated liquid are considered and the liquid/vapor mass-\n\ntransfer evaluation is based on the liquid spinodal line, is adopted here. It provides\n\nthe propellant tank pressure, which coincides with pf, as a function of the exhausted\noxidizer mass.\n\nWhen a turbopump is used to feed the oxidizer, an electric system is used to\n\ndrive the pump, and the needed energy comes from batteries. The masses of\n\nthese main components (pump, electrical drive system, and batteries) have to be\n\nevaluated. Existing literature provides typical values of power density (power to\n\nmass ratio) for liquid propellant turbopump systems [27] and expected values for\n\nthe electric drive system [1]. As far as batteries are concerned, power and energy\n\ndensities are correlated [24]. The mass of the batteries depends on the most\n\nstringent requirement between the maximum electrical power required and the\n\nelectrical energy needed to drive the pump during the burning time. The latter\n\nrequirement usually prevails with long burning times.\n\n14.3.5 Engine Operation\n\nThe choice of a limited number of design variables, (e.g., the initial thrust) determines\n\nthe initial geometry and the engine operation. The initial oxidizer and fuel flow rates\n\ncan be evaluated from the initial values of thrust (Fi) and mixture ratio (ai)\n\n352 D. Pastrone and L. Casalino\n\n\n\n\u00f0 _mp\u00dei \u00bc\nFi\n\nc?i \u00f0CF\u00dei\n\u00bc \u00f01\u00fe ai\u00de\u00f0 _mF\u00dei \u00bc\n\n1\u00fe ai\nai\n\n\u00f0 _mO\u00dei \u00bc\nFi\n\nc?i \u00f0CF\u00dei\n; (14.11)\n\nwhere c? and CF are computed as outlined in Sect. 14.3.1. Equation (14.4) is then\nused to evaluate Z.\n\nThe initial value of the throat area (Ath)i can then be derived:\n\n\u00f0Ath\u00dei \u00bc\n\u00f0 _mp\u00dei\n\u00f0pc\u00deic?i\n\n: (14.12)\n\nThroat area may be considered constant for a preliminary design analysis (note\n\nthat throat erosion occurs and may plague performance especially when burning\n\ntimes are long and combustion gases are oxidizer-rich). The initial port area \u00f0Ap\u00dei\n\u00bc \u00f0Ath\u00dei=J is then evaluated given the initial throat-to-port area ratio J. Mass\nconservation also provides the initial burning area\n\n\u00f0Ab\u00dei \u00bc\n\u00f0Ap\u00deni\narF\n\n\u00f0 _mF\u00dei\n\u00f0 _mO\u00deni\n\n(14.13)\n\nand the grain geometry can thus be determined immediately in the case of a single\n\ncircular port. An iterative procedure is instead required when complex geometries\n\nare adopted. A tentative value is assumed for Rg, and the grain geometry is solved in\norder to provide the required port area; the web thickness w and the initial perimeter\nPi, which, in turn, provides the grain length Lb \u00bc \u00f0Ab\u00dei=Pi, are thus found. Once the\ninitial geometry is determined, Eq. (14.2) is integrated up to burnout and the web\n\nthickness is computed. The trajectory indirect optimization procedure corrects the\n\ntentative value for Rg to match the necessary condition yf \u00bc w at burnout.\nNumerical integration of Eqs. (14.2) and (14.4) gives the fuel grain geometry and\n\nthe exhausted oxidizermass, respectively. The latter provides the tank pressure during\n\nblowdown phases. A numeric procedure is required to determine the operating\n\nconditions of the HRM; at each instant t, after evaluating feeding system pressure\npf and motor geometry, the regression rate, the propellant flow rates (and their ratio\na), and pc and p1 are computed by numerically solving the equations shown in\nSect. 14.3.2 and using the curve fit for c? as a function of a. Then, in order to integrate\nthe trajectory equations, the thrust level F\u00bc pcAthCF is determined by evaluating CF\nat the actual altitude via Eq. (14.1). At burnout the overall propellant mass (exhausted\n\nplus sliver) is finally evaluated, and an estimation of the structural masses is obtained.\n\n14.4 Optimization\n\nThe optimization of a propulsion system must aim at the determination of the\n\ndesign variables that guarantee the fulfillment of the mission requirements while\n\nmaximizing (or minimizing) a given performance index. Mass is typically one of\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 353\n\n\n\nthe most important issues in space systems, and optimization problems are often\n\nin the form of maximization of mission performance for given propulsion system\n\nmass or, vice versa, propulsion system mass minimization for given mission\n\nperformance.\n\nThe specific details of the mission determine the complexity of the optimization\n\nproblem. In the simplest cases, e.g., satellite auxiliary propulsion, the spacecraft\n\nmass may be considered constant, and mission performance can be expressed by the\n\nideal velocity gain DV . In this case, the engine optimization can be carried out\nseparately.\n\nIn most cases, it is instead difficult to determine the correlation of mission\n\nperformance and design variables. Thrust may influence the flown trajectory and\n\nthe corresponding velocity losses, thus changing the required DV . This is in\nparticular true for HRMs, where thrust, engine mixture ratio, and performance\n\nchange during operations in a complex way, dictated by grain geometry and\n\noxidizer flow rate. Also, the optimization problem itself may be more complex.\n\nFor instance, if a HRM is used as a launcher upper stage, the overall launcher\n\nperformance must be considered, and the HRM analysis cannot be made indepen-\n\ndently of the whole ascent trajectory optimization.\n\nA nested direct/indirect optimization procedure is used to carry out the simulta-\n\nneous optimization of design and trajectory. After the preliminary design choices\n\nhave been done, the design of the HRM concerns a limited set of variables, which\n\ndefine the grain and nozzle geometry and the feed system. Also, it may not be\n\npossible to define the design by means of explicit relations (for instance, the nozzle\n\nmass flow rate can only be determined numerically with an iterative procedure); for\n\nthese reasons, its optimization is dealt with by a direct optimization methods [7].\n\nGiven the engine design, the trajectory of the rocket is instead optimized by\n\nmeans of a fast and accurate indirect optimization procedure [12]. Indirect optimi-\n\nzation methods effectively treat problems with continuous controls (thrust direc-\n\ntion), with limited computational requirements. For each set of engine design\n\nvariables, the procedure finds the trajectory which optimizes the performance\n\nindex. The direct method is used to optimize the design parameters.\n\nAccording to the model presented in Sect. 14.3, the motor design is determined\n\nby a limited number of parameters. The engine optimization typically concerns\n\ninitial thrust level Fi, initial mixture ratio ai, nozzle-expansion ratio e, initial value\nof chamber pressure (pc)i, initial value of feeding pressure (pf)i, and initial port to\ninitial throat area ratio J.\n\nNot all these parameters are free, but some of them are constrained by safety or\n\noperation limits. As an example the coupling of the hybrid motor and the oxidizer\n\nfeed system is to be avoided. Therefore, the initial chamber pressure is typically\n\nassigned, for instance, by imposing (pc)i\u00bc 0. 4 (pf)i, which is sufficient to guarantee\npf/pc > 1. 5 during operation. Also, the design variables may be implicitly deter-\nmined by several constraints related to the trajectory (e.g., maximum values of\n\nacceleration or minimum values of regression rate). These cases are dealt with by\n\ndropping the relevant variables from the engine optimization, and considering them\n\n354 D. Pastrone and L. Casalino\n\n\n\nas additional variables of the trajectory optimization, during which they are deter-\n\nmined in order to fulfill the relevant constraints.\n\nFor these reasons just three\u2013five design parameters are to be optimized in the\n\npresent model. Given a set of design optimization parameters, operating conditions\n\nduring the engine burn are determined as shown in Sect. 14.3.5, and the trajectory\n\nequations can be integrated. Tentative values are first assigned to the design\n\nvariables; the indirect optimization method optimizes the trajectory given the\n\nengine design and determines the performance index (few seconds are required\n\non a standard PC). The design parameters are then varied by small quantities to\n\nevaluate numerically the derivatives of the performance index with respect to the\n\ndesign parameters, according to a forward-finite-difference scheme [2]. An iterative\n\nprocedure based on Newton\u2019s method [2] is then applied to correct the tentative\n\nvalues in order to nullify the partial derivatives of the performance index.\n\nAs far as trajectory optimization is concerned, the reader can refer to [5] for a\n\ndiscussion of the theory of optimal control and to the chapter of the present book\n\n\u201cIndirect Methods for the Optimization of Spacecraft Trajectories,\u201d by G.\n\nColasurdo and L. Casalino, where it is applied in a form suitable to deal with the\n\nspecificities of trajectory optimization. The optimal problem is transformed into a\n\nboundary value problem, which is solved with an iterative procedure.\n\n14.5 Results\n\nDifferent applications of a HRM are here considered. A sounding rocket and a\n\nbooster accelerator for a hypersonic test bed are first analyzed; low cost is the most\n\nimportant objective to be pursued in these cases, and simple single-port geometries\n\nand blowdown feed system are assumed. The use of a HRM as a launcher upper\n\nstage is then investigated; attention is focused on performance and multiport grains\n\nand more complex feed systems are considered.\n\n14.5.1 Sounding Rockets for Microgravity Platform\n\nHybrid rockets represent a low-cost option to transport payloads to high altitudes,\n\nwhere microgravity conditions can be experienced in free flight, due to the absence\n\nof atmosphere. Rocket payload (100 kg) and initial mass (500 kg, comprising\n\npayload, fixed masses, propulsion system, and propellant) are here given, and the\n\ntime spent above 100-km (tmg) is the performance index to be maximized. The\noptimizations aims at finding the optimal mass split between propellant and pro-\n\npulsion system (i.e., tanks, combustion chamber, nozzle), the optimal grain geome-\n\ntry, and the corresponding optimal trajectory [8]. Single-port grains are considered,\n\nand different propellant options are compared in Table 14.2. A simple blowdown\n\nfeed system is adopted. The design variables are the initial values of thrust and\n\nmixture ratio, and the nozzle-expansion area ratio. The initial tank pressure and\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 355\n\n\n\nullage volume are additional design variables for HP and LOX; (pt)i is instead fixed\n(liquid\u2013vapor equilibrium at ambient temperature) for the self-pressurizing N2O,\n\nwith ullage volume fixed at 3% of the tank volume.\n\nResults show the superior performance of the HP/PE combination. The use of\n\nLOX is penalized by the low mixture ratio, which requires a large grain and\n\ntherefore increases the propulsion system mass to the detriment of propellant. On\n\nthe other hand, N2O is penalized by the low performance in terms of specific\n\nimpulse. However, N2O presents some interesting features, such as the reduced\n\nrocket length L and diameter D, as the large mixture ratio reduces the grain length.\nIt is interesting to note that the optimal initial thrust is quite different, depending\n\non the propellant combination. There is a complex influence of the design choices\n\non the thrust history, which in turn determines the trajectory. The importance of the\n\noptimization becomes clear if the thrust magnitude is chosen incorrectly. For\n\ninstance, if the initial thrust level of the HP/PE combinations is adopted for the\n\nN2O/HTPB combination and vice versa, the microgravity times show a remarkable\n\ndecrease to 150 s for N2O/HTPB (? 15%) and to 267 s for HP/PE (? 10%).\nThe use of a self-pressurizing oxidizer such as N2O, determines a different\n\nevolution of the tank pressure, as shown in Fig. 14.3a. The evaporation of liquid\n\nmaintains the tank pressure at high values and avoids the relevant pressure decrease\n\nof the blowdown cases. As a consequence, the thrust level is more regular for the\n\nTable 14.2 Optimal design and performance of sounding rocket for different propellant\n\ncombinations\n\nPropellants Fi kN ai e (pt)i bar (Vg) m\n3 mp kg Rt m D m L m tmg s\n\nHP/PE 24.8 8.57 4.98 60.1 0.094 339 0.048 0.42 5.01 299\n\nLOX/HTPB 23.5 3.20 4.53 59.9 0.097 328 0.047 0.46 5.52 219\n\nN2O/HTPB 16.2 10.92 4.14 45.0 \u2013 340 0.046 0.40 4.75 177\n\n0\n\n25\n\n50\n\n75\na b\n\n0 20 40 60 80\n\nHP/PE\n\nLOX/HTPB\n\nN2O/HTPB\n\nHP/PE\n\nLOX/HTPB\n\nN2O/HTPB\n\nTank pressure\n\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\nThrust\nTime  t, s\n\n0 20 40 60 80\nTime  t, s\n\nT\nhr\n\nus\nt  \n\nF\n,  \n\nkN\n\nT\nan\n\nk \npr\n\nes\nsu\n\nre\n p\n\nt ,\n b\n\nar\n\nFig. 14.3 Sounding rockets operation\n\n356 D. Pastrone and L. Casalino\n\n\n\nN2O/HTPB case, as shown in Fig. 14.3b. This holds, of course, until the liquid\n\nphase is present. The final thrust drop and change of pressure derivative occur when\n\nthe liquid phase in the tank vanishes, and gaseous oxidizer is fed into the combus-\n\ntion chamber. One should observe that, in this case, the pressurizing gas is not\n\nsimply an inert mass but also acts as a propellant.\n\n14.5.2 Booster for Hypersonic Testbed\n\nThere is a growing interest in hypersonic propulsion; testing of a hypersonic device\n\nrequires its acceleration to Mach number above 5 at altitudes ranging from 25 to 50\n\nkm; a hybrid rocket is again a viable option for this kind of mission.\n\nThe performance of the HP/PE propellant combination for a single-port grain is\n\npresented in Table 14.3. The initial mass is fixed at 1,000 kg; the Mach number Mf\nat a 30-km altitude (horizontal flight) is maximized for payload of either 100 or\n\n200 kg. The rocket spends most time at low altitudes, and an accurate modeling of\n\nthe aerodynamic drag is necessary to obtain significant results [9]. A single stage\n\ndesign (1) is compared to two-stage designs, which use the same motor in both\n\nstages (to minimize development costs): in the first design, a single hybrid motor is\n\nused in each stage (1+1); in the second one, two motors are used in parallel in the\n\nfirst stage while one motor is maintained in the second stage (2+1). The optimiza-\n\ntion variables are the same as in the previous case, except for the initial volume of\n\npressurizing gas which is determined in order to assure a sufficient regression rate at\n\nburnout.\n\nThere is a complex interaction between the trajectory and the design variables;\n\nsmall thrust and tank pressure should be preferred to reduce the propulsion system\n\nmass. In certain cases (single-stage, 100-kg payload and 2+1 configuration, both\n\npayloads), thrust would become too small and unfeasible solutions with negative\n\ncoast arcs would be obtained. To avoid this situation, the initial thrust is dropped\n\nfrom the design variables and is instead determined by the trajectory optimization\n\nprocedure in order to find a feasible solution.\n\nResults show that a HRM can effectively accelerate a payload to the hypersonic\n\ncorridor. Counter-intuitive results are obtained; it is observed that a two-stage\n\ndesign which employs the same engine in both stages does not provide any benefit,\n\nexcept when the 1+2 configuration is adopted for the lowest payload.\n\nTable 14.3 Optimal design and performance of hypersonic accelerator\n\nConfig. Payload kg ai Fi kN (pt)i bar (Vg)i m\n3 e D m L m Mf\n\n1 100 7.43 26.64 58.20 0.265 5.89 0.431 8.62 7.51\n\n1 200 7.39 29.57 70.86 0.191 5.88 0.407 8.15 5.34\n\n1+1 100 8.62 34.73 86.27 0.082 4.67 0.468 4.68 7.50\n\n1+1 200 8.96 37.10 93.77 0.079 5.11 0.454 4.54 4.80\n\n2+1 100 9.10 18.10 64.41 0.076 6.71 0.408 4.08 7.68\n\n2+1 200 8.49 18.02 75.64 0.058 6.35 0.390 3.90 5.32\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 357\n\n\n\n14.5.3 Launcher Upper Stage\n\nSmall and low-cost launchers are commonly based on SRMs. SRMs are a good\n\nchoice for lower stages, but are not suitable for upper stages. The low specific\n\nimpulse, compared to LREs, penalizes the final part of ascent, and the launcher\n\nperformance is plagued. Moreover, the lack of throttling and cut-off/restart capa-\n\nbility determines a large scattering in the orbit insertion parameters. This issue may\n\nbe solved by introducing an additional small LRE, but complexity is augmented and\n\nstructural efficiency worsened. A HRM upper stage may synergistically perform the\n\ntask of this small LRE plus the task of the SMR upper stage. Performance which is\n\nsimilar to that of storable liquid propellants is obtained at a lower cost. In addition,\n\nsafety steps needed by chemicals, such as NTO and MMH, are eliminated. The\n\nreplacement of third and fourth stages of a launcher based on the characteristics of\n\nVega [19] with a single hybrid motor is here investigated. The goal is to maximize\n\nthe payload delivered into a 700-km polar orbit with a launch from Kourou. The\n\npayload of the reference launcher (three solid-propellant stages and a liquid-\n\npropellant fourth stage) is about 1,400 kg, consistent with the performance of\n\nVega. The launcher with the HRM third stage uses the same lower stages of the\n\noriginal case and the rocket initial mass is kept constant. Trajectory is optimized\n\nfrom lift-off to orbit insertion, retaining the same constraints of the reference launch\n\n(e.g., heat flux limits after fairing disposal) [11].\n\nHP/PE is the selected propellant combination, and different options for the feed\n\nsystem are compared. Large thrust levels are required, and a multiple-port configu-\n\nration is mandatory to obtain feasible designs. The use of different feed systems and\n\nport geometry is compared. Figure 14.4 shows tank pressure and thrust histories for\n\ntwo feed system options: blowdown and partially regulated. Mixture ratio is shown\n\nin Fig. 14.5. Quadrilateral ports and N \u00bc 8 are assumed. When the blowdown\nsystem is selected, thrust has a strong time dependence. Large values of the initial\n\n5\n\n10\n\n15\n\n20\n\n25\na b\n\n0 50 100 150\n\nBlowdown\n\nRegulated\n\nTank pressure\n\n150\n\n200\n\n250\n\n300\n\n350\n\n400\n\nTime  t, s\n0 50 100 150\n\nThrust\nTime  t, s\n\nBlowdown\n\nRegulated\n\nT\nan\n\nk \npr\n\nes\nsu\n\nre\n  p\n\nt ,\n b\n\nar\n\nT\nhr\n\nus\nt  \n\nF\n,  \n\nkN\nFig. 14.4 Tank pressure and thrust history during launcher upper stage operation\n\n358 D. Pastrone and L. Casalino\n\n\n\ntank pressure are needed to have appropriate values of thrust level without requiring\n\nlarge initial volumes of the pressurizing gas. Benefit can be obtained with a partially\n\nregulated feed system. An additional tank is required for the pressurizing gas, but\n\nthe oxidizer propellant tank is lighter. The benefits are however penalized by a\n\nstronger mixture ratio shifting during the constant-pressure phase. Additional\n\nimprovements can be obtained by using a turbopump feed system [10].\n\nThe grain geometry plays a fundamental role, as it affects grain size, volumetric\n\nefficiency, motor operation, and sliver. Triangular or quadrilateral ports (wagon-\n\nwheel geometry) with N \u00bc 6 and N \u00bc 8 are here considered to highlight the\ninfluence of the port number and shape. Table 14.4 shows the optimal values of\n\ndesign parameters and payload mu for the corresponding four combinations that are\nconsidered here. As far as N is concerned, better performance are obtained with six\nholes except for the case where a wagon-wheel geometry is adopted with a\n\nregulated feed system. When compared to triangular ports, the wagon-wheel design\n\nexhibits a lower sliver mres, thanks to the presence of the central circular hole.\n\n6.0\n\n6.5\n\n7.0\n\n7.5\n\n8.0\n\n0 50 100 150\n\nBlowdown\nRegulated\n\nM\nix\n\ntu\nre\n\n r\nat\n\nio\n  a\n\nTime  t, s\n\nFig. 14.5 Mixture ratio history during launcher upper stage operation\n\nTable 14.4 Optimal design and performance for triangular ports (TP) and quadrilateral ports (QP)\n\nPorts\n\nshape\n\nFeed\n\noption N\nFi\nkN ai\n\n(pt)i\nbar e ?Isp s\n\nmres\nkg L m\n\n(T/ m)max\ng\n\nmu\nkg\n\nTP Blowdown 6 365.1 7.08 20.15 11.83 272.3 43.6 12.3 5.77 1,796.1\n\nQP Blowdown 6 359.2 7.09 20.72 12.14 272.9 31.0 12.2 5.67 1,813.8\n\nTP Blowdown 8 414.1 7.02 19.77 11.30 271.4 57.2 12.0 6.64 1,774.9\n\nQP Blowdown 8 388.2 7.01 20.76 11.92 272.6 31.8 11.9 6.18 1,810.7\n\nTP Regulated 6 209.2 6.22 13.02 11.91 272.2 51.7 9.8 5.49 1,989.4\n\nQP Regulated 6 203.2 6.21 13.54 12.39 273.0 37.3 9.6 5.35 2,011.9\n\nTP Regulated 8 230.5 6.16 12.33 11.17 270.8 67.6 9.4 6.33 1,970.6\n\nQP Regulated 8 213.4 6.11 13.32 12.09 272.5 38.6 9.3 5.82 2,013.4\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 359\n\n\n\nAnyway, the corresponding mass saving (which ranges from 12 to 29 kg) cannot\n\nexplain alone the resulting payload improvement (which ranges from 17 to 43 kg).\n\nIn addition to sliver reduction, the wagon-wheel geometry mitigates the mixture\n\nratio shifting and thus improves the average specific impulse ?Isp . The resulting\nspecific impulse improvement is not large (about 1%), but gives a significant\n\npropellant mass saving because it is exploited during the final part of the ascent\n\ntrajectory. Furthermore, the engine features are chosen as a compromise between\n\ndifferent requirements: for a given feed system, the tank pressure for quadrilateral\n\nport grain is higher, while thrust level is lower. As a result the propellant tank is\n\nheavier, while the grain is shorter and lighter. The lower thrust level adopted with\n\nquadrilateral ports also determines a milder acceleration with a reduced peak\n\nvalue (T/m)max.\n\n14.6 Final Remarks\n\nThe examples reported in Sect. 14.5 show that the optimization of this peculiar yet\n\nappealing propulsion system requires expertise and proper tools. The optimization\n\nis characterized by the presence of opposite requirements (e.g., high thrust levels to\n\nhave low velocity losses vs low thrust levels to reduce propulsion system dry mass)\n\nand is further complicated by the relation existing between thrust level and mixture\n\nratio. Only tools which couple design parameters and trajectory optimization may\n\nfully highlight the true benefits that can be obtained with HRMs. In fact, the\n\noptimization analysis provides counter intuitive conclusions, which are instructive\n\nguide and basis for engineering design. These results may be lost if simplifications\n\nare introduced which do not take into account the nature of the problem. In order to\n\nefficiently perform a coupling of the HRM design parameter and trajectory optimi-\n\nzation, the procedure developed at the Politecnico di Torino uses a direct/indirect\n\nnested method. This approach has been proved to be fast and reliable.\n\nReferences\n\n1. Abel, T.M., Velez, T.A.: Electrical drive system for rocket engine propellant Pump. US Patent\n\n6457306 B1, USA (2002)\n\n2. Abramowitz, M., Stegun, I.A. (eds.): Handbook of Mathematical Functions with Formulas,\n\nGraphs, and Mathematical Tables, 9th printing. Dover, New York (1972)\n\n3. Barrere, M., Jaumotte, A., De Veubeke, B.F., Vandenkerckhove J.: Rocket Propulsion.\n\nElsevier Publishing Company, New York (1960)\n\n4. Ben-Yakar, A., Gany, A.: Hybrid engine design and analysis. Paper AIAA 93\u20132548. AIAA,\n\nReston VA USA (1993)\n\n5. Bryson, A.E., Ho, Y.C.: Applied Optimal Control, rev. edn. Hemisphere, Washington DC\n\n(1975)\n\n360 D. Pastrone and L. Casalino\n\n\n\n6. Carmicino, C., Russo Sorge, A.: Role of injection in hybrid rockets regression rate behaviour.\n\nJ. Propul. Power (2005). doi: 10.2514/1.39578\n\n7. Casalino, L., Pastrone, D.: Oxidizer control and optimal design of hybrid rockets for small\n\nsatellites. J. Propul. Power (2005). doi: 10.2514/1.6556\n\n8. Casalino, L., Pastrone, D.: Optimal design of hybrid rocket motors for microgravity platform.\n\nJ. Propul. Power (2008). doi: 10.2514/1.30548\n\n9. Casalino, L., Pastrone, D.: Optimization of hybrid sounding rockets for hypersonic testing.\n\nAIAA 2009\u20134841. AIAA, Reston VA USA (2009)\n\n10. Casalino, L., Pastrone, D.: Optimization of a hybrid rocket upper stage with electric pump feed\n\nsystem. AIAA-2010-6954. AIAA Reston VA USA (2010)\n\n11. Casalino, L., Pastrone, D.: Optimal design of hybrid rocket motors for launchers upper stages.\n\nJ. Propul. Power (2010). doi: 10.2514/1.41856\n\n12. Casalino, L., Colasurdo, G., Pastrone, D.: Optimal low-thrust escape trajectories using gravity\n\nassist. J. Guid. Contr. Dynam. (1999). doi:10.2514/2.4451\n\n13. Casalino, L., Pastrone, D., Simeoni, F.: Hybrid rocket upper stage optimization: Effects of\n\ngrain geometry. AIAA-2011-6024. AIAA, Reston VA USA (2011)\n\n14. Doran, E., Dyer, J., Lohner, K., Dunn, Z., Cantwell, B., Zilliac, G.: Nitrous oxide hybrid rocket\n\nmotor fuel regression rate characterization. Paper AIAA 2007\u20135352. AIAA, Reston VA USA\n\n(2007)\n\n15. Dornheim, M.A.: Reaching 100 km. Aviat. Week Space Tec. 161(6), 45\u201346 (2004)\n\n16. Evans, B., Boyer, E., Kuo, K.: Hybrid rocket investigations at Penn State university\u2019s high\n\npressure combustion laboratory: Overview and recent results. AIAA 2009\u20135346. AIAA,\n\nReston VA USA (2009)\n\n17. Farbar, E., Louwers, J., Kaya, T.: Investigation of metallized and nonmetallized hydroxyl\n\nterminated polybutadiene/hydrogen peroxide hybrid rockets. J. Prop. Power (2007). doi:\n\n10.2514/1.22091\n\n18. Gordon, S., McBride, B.J.: Computer program for calculation of complex chemical equilib-\n\nrium compositions and applications. NASA RP-1311, NASA (1996)\n\n19. Isakowitz, S.J., Hopkins, J.A., Hopkins, J.A. Jr.: International reference guide to space launch\n\nsystems, 4th edn. AIAA, Reston VA USA (1994)\n\n20. Karabeyoglu, M.A., Cantwell, B.J., Altman, D.: Development and testing of paraffin-based\n\nhybrid rocket fuels. AIAA-2001-4503. AIAA, Reston VA USA (2001)\n\n21. Karabeyoglu, M.A., Altman, D., Cantwell, B.J.: Combustion of liquefying hybrid propellants:\n\nPart 1 general theory. J. Propul. Power (2002). doi: 10.2514/2.5975\n\n22. Karabeyoglu, A., Zilliac, G., Cantwell, B., DeZilwa, S., Castellucci, P.: Scale-up tests of high\n\nregression rate paraffin-based hybrid rocket fuels. J. Propul. Power (2004). doi: 10.2514/\n\n1.2188\n\n23. Knuth, W.H., Chiaverini, M.J., Sauer, J.A., Gramer, D.J.: Solid-fuel regression rate behavior\n\nof vortex hybrid rocket engines. J. Propul. Power (2002). doi: 10.2514/2.5974\n\n24. Linden, D., Reddy, T.B. (ed.): Handbook of Batteries, 3rd edn. McGraw-Hill, New York\n\n(2002)\n\n25. Maggi, F., Gariani, G., Galfetti, L., De Luca, L.T.: Theoretical analysis of hydrides in solid and\n\nhybrid rocket propulsion. Int. J. Hydrogen Energ. (2011). International Journal of Hydrogen\n\nEnergy. http://dx.doi.org/10.1016/j.ijhydene.2011.10.018 37(2):1760\u20131769 (2012)\n\n26. Nagata, H.: New Fuel Configurations for Advanced Hybrid Rockets. IAF-98-S.3.09. IAF, Paris\n\n(1998)\n\n27. NASA: Turbopump systems for liquid rocket engines. NASA SP-8107, NASA (1974)\n\n28. Peretz, A., Einav, O., Hashmonay, B.A., Birnholz, A., Sobe, Z.: Development of a laboratory-\n\nscale system for hybrid rocket motor testing. J. Propul. Power (2011). doi: 10.2514/1.47521\n\n29. Rhee, I., Lee, C., Lee, J.W.: Optimal design for hybrid rocket engine for air launch vehicle.\n\nJ. Mech. Sci. Technol. (2008). doi: 10.1007/s12206-008-0514-6\n\n30. Rocker, M.: Modeling of nonacoustic combustion instability in simulations of hybrid motor\n\ntests. NASA/TP-000-209905, NASA (2000)\n\n14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors 361\n\nhttp://dx.doi.org/10.1016/j.ijhydene.2011.10.018\n\n\n31. Saad, T., Majdalani, J.: Energy based mean flow solutions for slab hybrid rocket chambers.\n\nAIAA 2008\u20135021. AIAA, Reston VA USA (2008)\n\n32. Sutton, G.P., Biblarz, O.: Rocket Propulsion Elements, 7th edn. Wiley, New York (2001)\n\n33. Vonderwell, D.J., Murray, I.F., Heister, S.D.: Optimization of hybrid-rocket-booster fuel-grain\n\ndesign. J. Spacecraft Rockets (1995). doi: 10.2514/3.26716\n\n34. Wernimont, E.H., Heister, S.D.: Combustion experiments in hydrogen peroxide/polyethylene\n\nhybrid with catalytic ignition. J. Propul. Power (2000) doi: 10.2514/2.5571\n\n362 D. Pastrone and L. Casalino\n\n\n\nChapter 15\n\nMathematical Models of Placement\n\nOptimisation: Two- and Three-Dimensional\n\nProblems and Applications\n\nYuri Stoyan and Tatiana Romanova\n\nAbstract We study NP-hard placement optimisation problems, which cover a\n\nwide spectrum of industrial applications, including space engineering. This chapter\n\nconsiders tools of mathematical modelling and a solution strategy of placement\n\nproblems illustrated with examples and pictures. A class of 2D and 3D geometric\n\nobjects, called phi-objects, is introduced and considered as mathematical models of\nreal objects. We review the main concept of our studies, i.e. phi-functions. One may\nalso find a clear definition of phi-function as an analytical tool for describing\nplacement constraints, including containment, non-overlapping, allowable\n\ndistances, prohibited areas, object translations and rotations. A mathematical\n\nmodel of a basic placement problem is constructed as constrained optimisation\n\nproblem. We propose a solution strategy for placement problems. The reader will\n\nget acquainted with an application problem of the basic placement problem encoun-\n\ntered in space engineering and find a number of computational results for 2D and\n\n3D applications.\n\nKeywords Mathematical modelling \u2022 Packing and cutting \u2022 Phi-functions \u2022\n\nOptimisation\n\n15.1 Introduction\n\nThe placement problems in question, being a part of operational research and\n\ncomputational geometry, have multiple 2D and 3D applications. They can exten-\n\nsively be used in garment industry, sheet metal cutting, furniture making, shoe\n\nmanufacturing for 2D case. Other engineering applications involve 3D geometry:\n\nY. Stoyan (*) \u2022 T. Romanova\nDepartment of Mathematical Modeling, Institute for Mechanical Engineering Problems of the\n\nNational Academy of Sciences of Ukraine, Kharkov, Ukraine\n\ne-mail: tarom27@yahoo.com\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_15,\n# Springer Science+Business Media New York 2013\n\n363\n\nmailto:tarom27@yahoo.com\n\n\nspace engineering, mechanical engineering, car manufacturing, shipbuilding,\n\n3D laser cutting, modelling granular media and liquids, radio-surgery treatment\n\nplanning, medicine, materials science, nanotechnology, robotics, coding, pattern\n\nrecognition systems, control systems, space apparatus control systems, etc.\n\nThe common placement problem lies in arranging a given set of objects within a\n\ngiven region (a container) in order to minimise waste of industrial materials, to\n\nminimise the use of space or maximise the number of objects, to minimise deviation\n\nfrom the centre of gravity, etc.\n\nIn spite of the variety of practical and scientific applications, the placement\n\nproblems may be reduced to the following basic placement optimisation problem.\n\nBasic Problem Place a set of geometric objects (from now on simply: objects)\nTi, i 2 f1; 2; :::; ng \u00bc In into a container O , so that the given restrictions on the\nplacement of the objects are fulfilled and the given objective function reaches its\n\nextreme value.\n\nThese restrictions include containment of objects into a container, non-\n\noverlapping of objects, given allowable distances between objects, rotations of\n\nobjects, prohibited areas and other specific technological restrictions (static stability\n\nconstraints, moments of inertia constraints, equilibrium constraint).\n\nA multiplicity of shapes of Ti andO, as well as a variety of restrictions and forms\nof objective functions, create a wide spectrum of different subsequent problems of\n\nthe basic one. We offer a universal approach to all the totality of such subsequent\n\nproblems with the goal of developing efficient algorithms for solving placement\n\nproblems.\n\nThese problems are NP-hard, and, as a result, solution methodologies generally\n\nemploy heuristics (e.g., [1\u20134]). Some researchers develop systematic approaches\n\nbased on mathematical modelling and general optimisation procedures, e.g. [5\u20137].\n\nWe refer the reader to recent tutorials [8, 9] presenting the history of placement\n\nproblems and basic techniques for their solution. The most popular and most\n\nfrequently cited tool in the modern literature on placement problems is the so-\n\ncalled no-fit polygon (e.g. [8, 10]); it works only for polygonal objects that can be\n\ntranslated without rotations. In a recent paper [1] the concept was also extended to\n\nobjects bounded by circular arcs. Rotations of polygons are considered in [11]. In\n\n[12] the authors offer an implementation of Minkowski sum (we provide the defini-\n\ntion below in Sect. 15.3) for objects bounded by line segments and circular arcs.\n\nThere are many interesting algorithms which involve 3D geometry, among them\n\n[13\u201321] to mention a few. Paper [22] reviews layout algorithms for 3D objects.\n\nThe goal of this chapter is to present placement problems in a formal mathematical\n\nmanner. In these studies we deal with objects (called phi-objects) and characterize\ntheir placements by means of special functions (called phi-functions). The concepts\nof the phi-object and the phi-function have their roots in topology, but phi-functions\nare very convenient for practical solution of placement problems. Our principal\n\naim is to present here the phi-function technique and demonstrate practical benefits\nof the concept.\n\nIn this chapter the reader will find theoretical results earlier published in our\n\nworks [23\u201329].\n\n364 Y. Stoyan and T. Romanova\n\n\n\nThis chapter is organised as follows: in Sect. 15.2, we introduce phi-objects; in\nSect. 15.3, we define phi-functions and overview their properties; in Sect. 15.4, we\nshow the use of phi-functions to reduce the placement problem to a constrained\noptimisation problem; and in Sect. 15.5, we describe an approach to its solution\n\nillustrated with some computational results.\n\n15.2 Phi-Objects\n\nIn order to model mathematically real objects and their relations, we single out a\n\nclass of the so-called phi-objects (e.g. [23, 24]) from a collection of all point subsets\nof R2 or R3.\n\nDefinition 1 Point set, A ? Rd, d \u00bc 2, 3, is called a phi-object (Fig. 15.1) if it has\nthe following characteristics:\n\n1. A is canonically closed, i.e. A \u00bc cl*A \u00bc clintA.\n2. A has the same homotopic type as its interior.\n3. For any point z 2 frA , there exists an open neighbourhood Uz of z, such that\n\nUz ? intA is a connected set.\nwhere intA, clA, frA are the interior, the closure and the frontier of a phi-object A.\n\nThis can be explained intuitively as the point sets A, intA and clA are of the same\nhomotopic type. If they can be transformed into one another by continuous\n\ndeforming, i.e., by bending, shrinking and expanding, then A is a phi-object. This\ndefinition excludes point sets with isolated points, deleted points or curves and\n\nnowhere dense point sets and objects with self-intersection of their frontiers.\n\n(The above definition can be stated for 2D objects by eliminating item 3.)\n\nAn important property of phi-objects is that if A is a phi-object, then the closure\nof its complement, i.e. A* \u00bc Rd \\ intA, where d \u00bc 2, 3, is a phi-object, too.\n\nAny phi-object in R2 is called a phi-polygon if its frontier is shaped by straight\nlines, rays, and line segments. An ordinary polygon is a phi-polygon, but there are\nalso unbounded phi-polygons \u2014 a half-plane, a cone, etc. (see illustrations in [23]).\nA phi-object in R3 is called a phi-polytope if its frontier is shaped by phi-polygons.\n\nFig. 15.1 2D and 3D phi-objects\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 365\n\n\n\nOther objects can be approximated by polygons and polytopes, which is a\n\ncommon practice, but we handle some curvilinear objects directly. Hereinafter,\n\nwe only deal with phi-objects.\nEach object A may be explicitly given in Rd, d \u00bc 2; 3, by its space form c (shape\n\nof A), metric characteristics (sizes of A) m \u00bc \u00f0m1;m2; :::;mm\u00de and placement\nparameters u \u00bc \u00f0v; y\u00de (a translation vector of the origin of eigen-coordinate system\nof A and rotation angles). Thus, a geometric information tuple g \u00bc \u00f0c;m; u\u00de\ngenerates object A in Rd , d \u00bc 2; 3. We suppose that each element of m and u may\nbe variable. Further, we will use notation A\u00f0m; u\u00de, where m 2 Mc ? Rm . The set\nMc holds space form c of object A.\n\nThe class of phi-objects can be further divided into primary and composed\nobjects. These two groups are distinguished to facilitate the generation of\n\nphi-functions.\n\n15.2.1 Primary and Composed Objects\n\nIn most applications, the frontiers of 2D phi-objects are made by straight lines and\ncircular arcs. The frontiers of 3D phi-objects mostly consist of flat sides, spherical,\ncylindrical and conical surfaces.\n\nWe call a primary phi-object in R2 a circle (C) or a convex phi-polygon (K ). In\n3D, a primary object is a solid sphere (S), a convex polytope (P), a right circular\ncylinder (C) and a circular cone (T). In addition, if phi-object A is a 2D or a 3D\nprimary object, then the closure of its complement (in R2 or R3, respectively),\ndenoted by A*, is regarded as a primary object as well, where A? \u00bc RdnintA.\n\nAll other phi-objects that are a composition of a finite number of primary objects\nare called composed objects.\n\nIf we let A be a composed phi-object, then\n\nA \u00bc \u00f0A1 ? 1A2?2 ? ? ? ?k?1Ak\u00de; (15.1)\n\nwhere Ai is a primary phi-object and ?i 2 f[;\\g.\nGeometric information, generating object A formed by (15.1), is given by\n\nformula\n\ngA \u00bc \u00f0g1?1g2?2 ? ? ? gi?igi\u00fe1 ? ? ? ?k?1gk; u\u00de; (15.2)\n\nwhere u is placement parameters of A and symbol ?i 2 [;\\f g is understood in the\nfollowing sense: g1 \\ g2 means that we consider A1 \\ A2, and g1 \\ ? ? ? \\ gj [ gj\u00fe1\n\\ ? ? ? \\ gk means that we take a union of objects A1 \\ ? ? ? \\ Aj and Aj\u00fe1 \\ ? ? ? \\ Ak.\n\nIndeed, every phi-object can be represented by unions and/or intersections of\nprimary objects, according to our formula (15.1); see Fig. 15.1.\n\nIn 2D case, we went further. In paper [24] it has been proved that any arbitrary\n\nshaped phi-object A, formed by circular arcs and line segments, may always be\n\n366 Y. Stoyan and T. Romanova\n\n\n\npresented as a union of, the so-called, basic objects of four types (Fig. 15.2), i.e.,\n\n?i 2 [f g, and Ai is a basic phi-object in (15.1). The detailed information about basic\nphi-objects and their decomposition is given in [24].\n\nWe give a convex phi-polygon (K) as an intersection of half-planes (Fig. 15.2a);\na circular segment (D) as an intersection of a circle and a triangle Twith two tangent\nsides to the circle C, i.e. D \u00bc T \\C (Fig. 15.2b); a \u201chat\u201d (H) as an intersection of a\ntriangle and the complement to a circle, i.e., H \u00bc T\\C* (Fig. 15.2c); and a \u201chorn\u201d\n(V) as an intersection of a triangle, a (larger) circle and the complement to a\n(smaller) circle, i.e., V \u00bc T \\ C1 \\ C?2 (Fig. 15.2d).\n\n15.2.2 Relations Between Phi-Objects\n\nWe describe here relations between a pair of phi-objects considering the basic\nproblem restrictions from the set-theoretical viewpoint.\n\nConsider two objects A(m1; u1 ) and B(m2; u2 ). We differentiate four types of\nrelations between the objects:\n\n\u2022 Interior intersecting: When there are common interior points of A(m1; u1) and\nB\u00f0m2; u2\u00de, i.e., intA\u00f0m1; u1\u00de \\ intB\u00f0m2; u2\u00de 6\u00bc 1:\n\n\u2022 Touching: When there are common frontier points only of A\u00f0m1; u1\u00de and\nB\u00f0m2; u2\u00de, i.e. intA\u00f0m1; u1\u00de \\ intB\u00f0m2; u2\u00de 6\u00bc 1\nfrA\u00f0m1; u1\u00de \\ frB\u00f0m2; u2\u00de 6\u00bc 1:\n\n\u2022 Non-intersecting: Where there are no common points of A(m1; u1) and B(m2; u2),\ni.e. A\u00f0m1; u1\u00de \\ B\u00f0m2; u2\u00de \u00bc 1:\n\n\u2022 Containment: The containment of one object into another, e.g. A\u00f0m1; u1\u00de ? B\n\u00f0m2; u2\u00de, is equivalent to the interior non-intersecting of A(m1; u1) and B*(m2; u2),\ni.e. A\u00f0m1; u1\u00de ? B\u00f0m2; u2\u00de ,\nintA\u00f0m1; u1\u00de \\ intB?\u00f0m2; u2\u00de \u00bc 1, B? \u00bc RdnintB:\n\nFig. 15.2 Four types of basic 2D phi-objects: K, D, H and V\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 367\n\n\n\n15.3 Phi-Functions\n\nLet two objects A and B be given by their geometric information tuples g1 \u00bc \u00f0c1;\nm1; u1\u00de and g2 \u00bc \u00f0c2;m2; u2\u00de.\nRemark Hereinafter, we suppose that at least one of these objects (either A or B ) is\na bounded object. It comes from the basic problem statement.\n\nDefinition 2 Any everywhere defined continuous function F : Rx ! R1 is called a\nphi-function of objects A(m1; u1 ) and B(m2; u2 ) , where mi 2 Mi , i \u00bc 1,2, if the\nfollowing characteristics hold:\n\nF\u00f0m1; u1;m2; u2\u00de > 0, if A\u00f0m1; u1\u00de \\ B\u00f0m2; u2\u00de \u00bc 1;\n\nF\u00f0m1; u1;m2; u2\u00de \u00bc 0, if\nfrA\u00f0m1; u1\u00de \\ frB\u00f0m2; u2\u00de 6\u00bc 1;\nintA\u00f0m1; u1\u00de \\ intB\u00f0m2; u2\u00de \u00bc 1;\n\n(\n\nF\u00f0m1; u1;m2; u2\u00de < 0, if intA\u00f0m1; u1\u00de \\ intB\u00f0m2; u2\u00de 6\u00bc 1;\n\n(15.3)\n\nwhere x \u00bc m\u00fe ? , ? \u00bc ?1 \u00fe ?2 , ?i is the number of elements of translation and\nrotation parameters of A(m1; u1) and B(m2; u2), ?i ? 3, in 2D case, and ?i ? 6, in 3D\ncase, m \u00bc m1 \u00fe m2, mi is the number of metric characteristics of A(m1; u1) and B\n(m2; u2), i \u00bc 1, 2.\n\nThe function provides a value that indicates the state of the relations between the\n\ntwo objects, as described from the set-theoretical viewpoint in the previous section.\n\nGiven the placement vector of each object, the phi-function will output a value of\nzero if the two objects touch, a positive value if the two objects are separated and a\n\nnegative value if the two objects intersect. We further expect that the value of the\n\nphi-function should give at least an estimation of the distance between the objects\nwhen they are separated and some intersection \u201cmeasure\u201d when they are\n\noverlapped.\n\nFor the sake of simplicity, we further associate object A\u00f0m1; u1\u00de with A and phi-\nfunction F\u00f0m1; u1;m2; u2\u00de for objects A and B with notation FAB.\n\nSuppose that objects A and B have fixed metrical characteristics and rotation\nangles, then phi-functions will possess the following useful features (for details of\nrelative proves we refer the reader to [23\u201325]):\n\n1. FAB\u00f0v1; v2\u00de \u00bc FAB\u00f0v1 ? v2; 0\u00de \u00bc FAB\u00f00; v2 ? v1\u00de. Since the object space forms\nand metrics stay constant, this condition deals only with the relative position of\n\neach object. In each of the three cases, the relative position of the two objects is\n\nidentical.\n\n2. The zero level of the phi-function is congruent (ffi ) to the frontier of theMinkowski\nsum of A and (?1)B provided one of the two objects has a fixed placement position,\ni.e. g12 \u00bc f\u00f00; v2\u00de 2 Rx F\u00f00; v2\u00de \u00bc 0j g , g12 ffi frT12, where T12 v2\u00f0 \u00de \u00bc A\u00f00\u00de \t\n?1\u00f0 \u00deB v2\u00f0 \u00de and g21 \u00bc f\u00f0v1; 0\u00de 2 Rx F\u00f0v1; 0\u00de \u00bc 0j g, g21 ffi frT21, where T21 v1\u00f0 \u00de\n\u00bc B\u00f00\u00de \t ?1\u00f0 \u00deA v1\u00f0 \u00de, A\t B\u00bcC\u00bc{c \u00bc a\u00fe b; a 2 A; b 2 B} isMinkowski sum of\n\n368 Y. Stoyan and T. Romanova\n\n\n\nA and B. Note that g12 \u00bc frT12 if T12 \u00bc A\u00f00\u00de \t ?1\u00f0 \u00deB\u00f00\u00de and, g21 \u00bc frT21, where\nT21 \u00bc B\u00f00\u00de \t ?1\u00f0 \u00deA\u00f00\u00de.\n\n3. FAB\u00f0v; 0\u00de \u00bc FAB\u00f00;?v\u00de and g12 \u00bc ?g21.\n4. If A and B are centrally symmetric, then there exists a phi-function such that\n\nFAB\u00f0v; 0\u00de \u00bc FAB\u00f00; v\u00de.\n5. Each phi-function for 2D phi-objects is a finite composition of minima and\n\nmaxima of infinitely differentiable functions.\n\n6. Each phi-function for 3D phi-objects is a finite composition of minima and\nmaxima of piecewise-smooth functions.\n\n15.3.1 Phi-Functions for Objects with Distance Constraints\n\nIn order to model given allowable distances between objects, we use normalised\n\nphi-functions (e.g. [23]) and adjusted phi-functions (e.g. [24, 25]).\nLet the allowable distance r between phi-objects A and B be given, i.e.\n\ndist A;B\u00f0 \u00de \n r? ; if r \u00bc r? and dist A;B\u00f0 \u00de ? r\u00fe; if r \u00bc r\u00fe; (15.4)\n\nwhere r? ( r\u00fe) is minimal (maximal) allowable distance r between phi-objects A\nand B. Here, dist A;B\u00f0 \u00de \u00bc min\n\na2A;b2B\nd\u00f0a; b\u00de, d\u00f0a; b\u00de is the Euclidean distance between\n\ntwo points a and b in Rn.\n\nDefinition 3 A phi-function FAB is said to be normalised if its values are equal to\ndist(A,B), subject to intA \\ intB \u00bc 1.\n\nWe denote the r-level surface of the normalised phi-function by gr.\nFor example, surfaces gr12 \u00bc fu2 2 R3 ~F\u00f00; u2\u00de \u00bc r; r 2 R\u00feg\n\n?? g for pairsC andT,\nP1 andP2,P andT,C1 andC2,P andC,T1 andT2 are shown in Fig. 15.3. In terms of\nphi-functions, constraints dist(A,B) \n r? and dist(A,B) ? r\u00fe may be specified in\nthe form eFAB \n r? and 0 ? eFAB ? r\u00fe, respectively, where eFABis the normalised\nphi-function of objects A and B.\n\nHowever, normalised phi-functions inevitably involve radicals, which are some-\ntimes unfriendly with gradient optimisation methods. That is why we offer here an\n\nalternative way to take into account the distance constraints.\n\nDefinition 4 An everywhere defined function F\n_AB\n\nis called an adjusted\n\n(pseudonormalised) phi-function of A and B if the following characteristics hold\ntrue:\n\nF\n_AB\n\n> 0; if dist A;B\u00f0 \u00de> r;\n\nF\n_AB \u00bc 0; if dist A;B\u00f0 \u00de \u00bc r; (15.5)\n\nF\n_AB\n\n< 0; if dist A;B\u00f0 \u00de< r:\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 369\n\n\n\nIn particular, we have\n\ndist A;B\u00f0 \u00de \n r? , eFAB \n r? , F_\nAB\n\n\n 0; (15.6)\n\ndist A;B\u00f0 \u00de ? r\u00fe , 0 ? eFAB ? r\u00fe , F^\nAB\n\n\u00bc minfFAB;?eFAB\n? ?\n\n\n 0;\n\nThus; eFAB \u00bc r impliesF_\nAB\n\n\u00bc 0:\n\n15.3.2 Phi-Functions for Primary and Composed Objects\n\nWe offer a complete class of phi-functions for all combinations of oriented 2D and\n3D primary objects considering non-overlapping and containment constraints in\n\n[23, 26, 27, 29] and also give a technique of constructing phi-functions for com-\nposed objects in [23, 28]. In addition, we provide a complete class of ready-to-use\n\nradical-free phi-functions for all combinations of 2D basic objects, considering\ntranslations, rotations and homothetic transformations of the objects. The class of\n\nphi-functions covers all realistic cases of 2D objects mentioned above. One can find\nphi-functions for 2D basic objects in the recent works [24, 25].\n\nBelow we give phi-functions for some of the basic objects. We assume that each\npoint \u00f0x0; y0\u00de 2 A in the eigen-coordinate system of A is transformed into the point\n\u00f0x; y\u00de x \u00bc x0 ? cos y\u00fe y0 ? sin y\u00fe xt , y \u00bc ?x0 ? sin y\u00fe y0 ? cos y\u00fe yt ; here y is a\nrotation parameter; (xt, yt) is a translation vector of A.\n\nFig. 15.3 gr illustrated by transparent surfaces for pairs of 3D primary objects\n\n370 Y. Stoyan and T. Romanova\n\n\n\nConvex Polygons K1 and K2 Let \u00f0x0i; y\n0\ni\u00de, i \u00bc 1; 2; :::;m1, be vertices of K1, and\n\n\u00f0x00j ; y\n00\nj \u00de, j \u00bc 1; 2; :::;m2, be vertices of K2; \u2019i \u00bc a\n\n0\nix\u00fe b\n\n0\niy\u00fe g\n\n0\ni \u00bc 0, and Cj \u00bc a\n\n00\nj\n\nx\u00fe b00j y\u00fe g\n00\nj \u00bc 0 be side equations of K1 and K2, subject to \u2019i ? 0 and Cj ? 0\n\nfor all points belonging to K1 and K2, respectively, then\n\nFK1K2 \u00bc maxf max\n1?i?m1\n\nmin\n1? j?m2\n\n\u2019ij; max\n1? j?m2\n\nmin\n1?i?m1\n\nCjig; (15.7)\n\nwhere\u2019ij \u00bc a\n0\nix\n\n00\nj \u00fe b\n\n0\niy\n\n00\nj \u00fe g\n\n0\ni andCji \u00bc a\n\n00\nj x\n\n0\ni \u00fe b\n\n00\nj y\n\n0\ni \u00fe g\n\n00\nj :\n\nCircles C1 and C2 Let \u00f0xCi ; yCi\u00de be the centre point and rCi be a radius of Ci,\ni \u00bc 1; 2, then\n\nFC1C2 \u00bc o \u00bc \u00f0xC1 ? xC2\u00de2 \u00fe \u00f0yC1 ? yC2\u00de2 ? \u00f0rC1 \u00fe rC2\u00de2: (15.8)\n\nCircle C and Convex Polygon K Let \u00f0xi; yi\u00de, i \u00bc 1; 2; :::;m, be vertices; wi \u00bc ai\nx\u00fe biy\u00fe gi \u00bc 0 beside equations of K; \u00f0xC; yC\u00de be the centre point and r\u2014 a radius\nof C , then\n\nFCK \u00bc maxfwi;minfoi;Cig; i \u00bc 1; 2; :::;mg; (15.9)\n\nwi \u00bc aix\u00fe biy\u00fe gi ? r; a2i \u00fe b2i \u00bc 1;\n\noi \u00bc \u00f0xC ? xi\u00de2 \u00fe \u00f0yC ? yi\u00de2 ? r2;\n\nCi \u00bc \u00f0bi?1 ? bi\u00de\u00f0xC ? xi\u00de ? \u00f0ai?1 ? ai\u00de\u00f0yC ? yi\u00de \u00fe r\u00f0ai?1bi ? aibi?1\u00de:\n\nCircular Segment D and Convex Object E LetD \u00bc T \\ C0 , where T is a\ntriangle, C\n\n0\nis a circle and E 2 {?, K, D}, then\n\nFDE \u00bc maxfFTE;FC0Eg (15.10)\n\nwhere FTE;FC\n0\nE are given by (15.7)\u2013(15.9).\n\nFor constructing phi-functions for concave basic objects, we use the following\nphi-function.\n\nObject C* and Circular Segment D LetD \u00bc T \\ CD, where T is a triangle,CD is\na circle of radius rD with the centre point (xD, yD), providing two sides of T tangent\nto CD at endpoints \u00f0xi; yi\u00de, i \u00bc 1, 2.\n\nIf rD < rC, then\n\nFC\n?D \u00bc minfC0;maxfFC?CD ; w1;?w2gg; (15.11)\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 371\n\n\n\nwhere\n\nC0 \u00bc min\ni\u00bc1;2\n\n\u00f0rC2 ? \u00f0xC ? xi\u00de2 ? \u00f0yC ? yi\u00de2\u00de;\n\nwi \u00bc \u00f0xD ? xC\u00de\u00f0yi ? yD\u00de ? \u00f0yD ? yC\u00de\u00f0xi ? xD\u00de; i \u00bc 1; 2:\n\nIf rD \n rC, then we use FC?D \u00bc C0.\nWe also consider some of the phi-functions for a pair of 3D primary objects.\nSpheres S1 and S2 Let m1 \u00bc \u00f0r1\u00de, m2 \u00bc \u00f0r2\u00de, then FS1S2 \u00bc \u2019, where \u2019 \u00bc x2\n\n\u00fey2 \u00fe z2 ? \u00f0r1 \u00fe r2\u00de2, here and later on: \u00f0x; y; z\u00de \u00bc \u00f0x2 ? x1; y2 ? y1; z2 ? z1\u00de.\nThe normalised phi-function has the form eFS1S2 \u00bc ~\u2019, where ~\u2019 \u00bc ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffix2 \u00fe y2 \u00fe z2p\n\n?\u00f0r1 \u00fe r2\u00de.\nParallelepipeds P1 and P2 Let m1 \u00bc \u00f0a1; b1; h1\u00de , m2 \u00bc \u00f0a2; b2; h2\u00de and\n\nA \u00bc a1 \u00fe a2 B \u00bc b1 \u00fe b2, H \u00bc h1 \u00fe h2, then FP1P2 \u00bc w, where\n\nw \u00bc max\ni\u00bc1;...;6\n\nwi; (15.12)\n\nw1 \u00bc x? A; w2 \u00bc y? B; w3 \u00bc ?x? A;\n\nw4 \u00bc ?y? B; w5 \u00bc z? H; w6 \u00bc ?z? H: (15.13)\n\nParallelepiped P and Sphere S Let m1 \u00bc \u00f0a; b; h\u00de, m2 \u00bc \u00f0r\u00de, and let wi\u00f0x; y; z\u00de;\ni \u00bc 1; 2; :::; 6; be given by (13), where A \u00bc a\u00fe r; B \u00bc b\u00fe r, H \u00bc h\u00fe r, then the\nnormalised phi-function has the form eFPS \u00bc o, where\n\no \u00bc max w; z; tf g;\n\nz \u00bc max\ni\u00bc1;:::8\n\nzi; t \u00bc max\ni\u00bc1;:::12\n\nti; (15.14)\n\nzi \u00bc minffi; ~wi; efij; j \u00bc 1; 2; 3g; ti \u00bc minfCi; ~~wig;\n\n~wi \u00bc \u2019x \u00fe \u2019y \u00fe \u2019z ? d; (15.15)\n\nfi \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192x \u00fe \u20192y \u00fe \u20192z\n\nq\n? r; ~fi1 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192x \u00fe \u20192y\n\nq\n\u00fe \u2019z ? r;\n\n~fi2 \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192y \u00fe \u20192z\n\nq\n\u00fe \u2019x ? r; ~fi3 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192x \u00fe \u20192z\n\nq\n\u00fe \u2019y ? r;\n\n~~wj1 \u00bc \u2019x \u00fe \u2019y ? d1; ~~wj2 \u00bc \u2019y \u00fe \u2019z ? d2; ~~wj3 \u00bc \u2019x \u00fe \u2019z ? d3; (15.16)\n\n372 Y. Stoyan and T. Romanova\n\n\n\nCj1 \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192x \u00fe \u20192y\n\nq\n? r; Cj2 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192y \u00fe \u20192z\n\nq\n? r; Cj3 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192x \u00fe \u20192z\n\nq\n? r;\n\n\u2019x \u00bc \u00f0?1\u00dekx ? x? a; \u2019y \u00bc \u00f0?1\u00deky ? y? b; \u2019z \u00bc \u00f0?1\u00dekz ? z? h; (15.17)\n\nwhere d \u00bc r, d1 \u00bc d2 \u00bc d3 \u00bc d, i \u00bc kx \u00fe 2ky \u00fe 4kz \u00fe 1, j1 \u00bc kx \u00fe 2ky \u00fe 1, j2 \u00bc ky\n\u00fe 2kz \u00fe 5, j3 \u00bc kx \u00fe 2kz \u00fe 9, kx; ky; kz 2 I2, I2 \u00bc f0; 1g.\nRemark If we assume r \u00bc 0; a \u00bc a1 \u00fe a2,b \u00bc b1 \u00fe b2,h \u00bc h1 \u00fe h2,d \u00bc a\u00fe b\u00fe h,\nd1 \u00bc a\u00fe b, d2 \u00bc b\u00fe h, d3 \u00bc a\u00fe h in (15.15)\u2013(15.17), then we get the normalised\nphi-function for parallelepipeds P1 and P2.\n\nCylinders C1 and C2 Let m1 \u00bc \u00f0r1; h1\u00de, m2 \u00bc \u00f0r2; h2\u00de and R \u00bc r1 \u00fe r2, H \u00bc h1\n\u00feh2 . We assume f \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nx2 \u00fe y2\n\np\n(here and later on), then FC1C2 \u00bc w , where\n\nw \u00bc max\ni\u00bc1;2;3\n\nwi and\n\nw1 \u00bc z? H; w2 \u00bc ?z? H; w3 \u00bc f ? R: (15.18)\n\nThe normalised phi-function is defined as follows: eFC1C2 \u00bc o, where\no \u00bc maxfw; zg; z \u00bc max\n\ni\u00bc1;2\nzi; zi \u00bc minfCi;fig; (15.19)\n\nf1 \u00bc f \u00fe z? d;f2 \u00bc f ? z? d; d \u00bc R\u00fe H; (15.20)\n\nC1 \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0f ? R\u00de2 \u00fe \u00f0z? H\u00de2\n\nq\n;C2\u00f0u\u00de \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0f ? R\u00de2 \u00fe \u00f0z\u00fe H\u00de2\n\nq\n:\n\nCylinder Cand Sphere S Letm1 \u00bc \u00f0r1; h\u00de,m2 \u00bc \u00f0r2\u00de, and functions fi; i \u00bc 1; 2,\nare given by (15.20), where H \u00bc h\u00fe r2; R \u00bc r1 \u00fe r2; d \u00bc h\u00fe R , then the\nnormalised phi-function has the form\n\neFCS \u00bc o; (15.21)\nwhere o is defined by (15.19), w \u00bc max\n\ni\u00bc1;2;3\nwi; wi\u00f0u\u00de is given by (15.18), and\n\nC1\u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0f ? r1\u00de2 \u00fe \u00f0z? h\u00de2\n\nq\n? r2; C2 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0f ? r1\u00de2 \u00fe \u00f0z\u00fe h\u00de2\n\nq\n? r2.\n\nCylinder C and Parallelepiped P Let m1 \u00bc\u00f0a;b;h1\u00de, m2 \u00bc\u00f0r;h2\u00de and H \u00bc h1\n\u00fe h2;A \u00bc a\u00fe r;B \u00bc b\u00fe r; d1 \u00bc a\u00fe b\u00fe r, d \u00bc d1 \u00fe H. And let w and wi; i \u00bc 1; 2;\n:::; 6, be given by (15.12) and (15.13), respectively. Assuming ~~wi \u00bc \u2019x \u00fe \u2019y ? d1\nand Ci \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nf2x \u00fe f2y\n\nq\n? r, where \u2019x, \u2019y are specified by (15.17), j \u00bc kx \u00fe 2ky \u00fe 1,\n\nkx; ky 2 I2, I2 \u00bc f0; 1g, we set FCP \u00bc o, where o \u00bc maxfw; lg, l \u00bc max\ni\u00bc1;2;:::;4\n\nli, li\n\n\u00bc minfCi; ~~wig . Then ~FCP \u00bc ~o is the normalised phi-function, where ~o \u00bc max\nw; z; tf g , B \u00bc max\n\ni\u00bc1;2;:::;8\nBi , zi \u00bc minffi; ~wi; efij; j \u00bc 1; 2; 3g , t \u00bc max\n\ni\u00bc1;2;:::;12\nti ,\n\nti \u00bc minfCi; ~~wig, ~wi \u00bc fx \u00fe fy \u00fe fz ? d,\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 373\n\n\n\nfi \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi? ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\n\u20192x \u00fe \u20192y\nq\n\n? r\n?2\n\n\u00fe f2z\n\ns\n; ~fi1 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192x \u00fe \u20192y\n\nq\n\u00fe fz ? r;\n\n~fi2 \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nf2y \u00fe f2z\n\nq\n\u00fe \u2019x ? r; ~fi3 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nf2x \u00fe f2z\n\nq\n\u00fe \u2019y ? r;\n\nCj1 \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u20192x \u00fe \u20192y\n\nq\n? r; Cj2 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nf2y \u00fe f2z\n\nq\n? r; Cj3 \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\nf2x \u00fe f2z\n\nq\n;\n\nfx \u00bc \u00f0?1\u00dekx ? x? A; fy \u00bc \u00f0?1\u00deky ? y? B; fz \u00bc \u00f0?1\u00dekz ? z? H; (15.22)\n\n\u2019x, \u2019y, \u2019z are given by (15.17), i \u00bc kx \u00fe 2ky \u00fe 4kz \u00fe 1, j1 \u00bc kx \u00fe 2ky \u00fe 1,\nj2 \u00bc ky \u00fe 2kz\u00fe5, j3 \u00bc kx \u00fe 2kz \u00fe 9, kx; ky; kz 2 I2, I2 \u00bc f0; 1g.\n\nThe research of normalised phi-functions revealed an interesting result. We\nformulate the result as the following assertion.\n\nLet ~FAB be the normalised phi-function for a pair of primary objects A\u00f0m1; u1\u00de\nand B\u00f0m2; u2\u00de. And let A\n\n_\u00f0m_ 1; 0\u00de \u00bc A\u00f0m1; 0\u00de \t C\u00f0r1; 0\u00de, B\n_\u00f0m_ 2; 0\u00de \u00bc B\u00f0m2; 0\u00de \t\n\nC\u00f0r2; 0\u00de for 2D case and A\n_\u00f0m_ 1; 0\u00de \u00bc A\u00f0m1; 0\u00de \t S\u00f0r1; 0\u00de, B\n\n_\u00f0m_ 2;0\u00de \u00bcB\u00f0m2;0\u00de\t\nS\u00f0r2;0\u00de in 3D case, where m_ i \u00bc\u00f0mi;ri\u00de, i\u00bc 1;2. Then ~F A\n\n_\n\nB\n_ \u00bc ~FAB\u00fe r1\u00fe r2 is the\n\nnormalised phi-function for A\n_\u00f0m_ 1;u1\u00de and B\n\n_\u00f0m_ 2;u2\u00de. In addition, ~FA\n_\nB\n_\n\nproduces\n\na family of normalised phi-functions ~F\n~A ~B of all pairs of objects ~A\u00f0 ~m1;u1\u00de and\n\n~B\u00f0 ~m2;u2\u00de, which appear immediately from objects A\n_\u00f0m_ 1;u1\u00de and B\n\n_\u00f0m_ 2;u2\u00de by\n\ndegenerating their metrical characteristics ~mi ?m_ i, i.e. ~F ~A ~B \u00bc ~F\nA\n_\nB\n_j\n\n~mi?m_i .\nFor example, the normalised phi-function for an oriented rectangle R with\n\nmetrical characteristics m \u00bc \u00f0a; b\u00de and a circle C of radius r with the centre point\n\u00f0xC; yC\u00de has the form\n\n~FCR \u00bc maxfwi;minfoi;Cig; i \u00bc 1; :::; 4g; (15.23)\n\nwhere, assuming that A \u00bc a\u00fe r, B \u00bc b\u00fe r, s \u00bc a\u00fe b\u00fe r, we define\n\noi \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0xC ? xi\u00de2 \u00fe \u00f0yC ? yi\u00de2\n\nq\n? r;\n\nw1 \u00bc x? A; w2 \u00bc y? B; w3 \u00bc ?x? A; w4 \u00bc ?y? B;\n\nC1 \u00bc x\u00fe y? s; C2 \u00bc ?x\u00fe y? s; C3 \u00bc ?x? y? s; C4 \u00bc x? y? s:\n\nWe may model the relations of all combinations of pairs of objects having\n\nshape from the family of space forms {R;C;A;Aa;Ab} with metric characteristics\nm \u00bc \u00f0a; b; 0\u00de, m \u00bc \u00f00; 0; r\u00de, m \u00bc \u00f0a; b; r\u00de, m \u00bc \u00f0a; 0; r\u00de, m \u00bc \u00f00; b; r\u00de, respectively,\n\n374 Y. Stoyan and T. Romanova\n\n\n\nusing phi-function ~FCR. The family is generated by A \u00bc R\u00f00\u00de \t C\u00f00\u00de and shown in\nFig. 15.4. We refer the reader to [23] for details.\n\nThe similar generalisation can be made for normalised phi-functions for 3D\n\nprimary objects. For example, using the normalised phi-function ~FCS given by (21)\nfor a cylinder C with metric characteristics m \u00bc \u00f0r1; h\u00de and a sphere S of radius r2,\nwe may model relations for all combinations of pairs of objects having shapes from\n\nthe family of space forms {C,S,A,Ar,Ah} with metric characteristicsm \u00bc \u00f0r1; h; 0\u00de,\nm \u00bc \u00f00; 0; r2\u00de , m \u00bc \u00f0r1; h; r2\u00de , m \u00bc \u00f0r1; 0; r2\u00de , m \u00bc \u00f00; h; r2\u00de , respectively. The\nfamily is generated by A \u00bc C\u00f00\u00de \t S\u00f00\u00de and shown in Fig. 15.5.\n\n15.3.3 Phi-Functions for Composed Objects\n\nPhi-function for composed objects operates with phi-functions of 2D basic\n(or primary) and 3D primary objects. The technique of constructing phi-functions\nfor composed objects is given in details in [23, 28].\n\nLet objects A and B be given in the form\n\nA \u00bc A1 [ . . . [ An0 ; B \u00bc B1 [ . . . [ Bn00 ; (15.24)\n\nwhere Ai and Bj are primary or basic objects. Then in these cases, phi-function for\nA and B has the form\n\nFAB \u00bc minfFij; i \u00bc 1; 2; :::; n0; j \u00bc 1; 2; :::; n00g; (15.25)\n\nR A Aa AbC\n\nFig. 15.4 The family of object space forms generated by A \u00bc R\u00f00\u00de \t C\u00f00\u00de\n\nFig. 15.5 The family of object space forms generated by A \u00bc C\u00f00\u00de \t S\u00f00\u00de\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 375\n\n\n\nwhere Fij is a phi-function for objects Ai and Bj.\nLet us consider an example of pairs of composed objects specified by (15.24) and\n\nshown in Fig. 15.6, for which phi-functions are defined by formula (15.25). In order\nto decompose a 2D composed object into basic ones we use special algorithm\n\ndescribed in [24].\n\nFurther, let A be a composed object (with holes) of the non-empty intersection of\nobject A0 and objects A\n\n?\ni , i \u00bc 1; 2; :::; n. And let B be a bounded phi-object, then\n\nFAB \u00bc maxfFA0B;FA?i B; i \u00bc 1; 2; :::; ng: (15.26)\n\nWe illustrate the case with Fig. 15.7a, where A0 is an oval, A\n?\ni \u00bcR2nintCi, i\u00bc 1;\n\n2;3, Ci are circles and B is a convex polygon.We apply formula (15.26) and derive\nphi-function for A and B, i.e. FAB \u00bcmaxfFA0B;FA?1B;FA?2B;FA?3Bg.\n\nIndeed,FAB \n 0 if one ofFA?i B \n 0 (polygon B does not overlapA?i ; it means that\nB ? Ci; see Fig. 15.7a), or FA0B \n 0 (object B does not overlap A0; see Fig. 15.7b).\n\nNow, let A be a composed 2D object of the non-empty intersection of two\nprimary one-connected objects A1 and A2, and let B be a bounded phi-object. For\ninstance, A \u00bc P\\C and B \u00bc K, where P is a half-plane and C is a circle. We\narrange A and B as it is shown in Fig. 15.8a. One can see that (it means thatFPK< 0)\nand C \\ K 6\u00bc 1 (it means that FCK< 0), while A \\ K \u00bc 1 (it means that FAB is\ngoing to be positive). Therefore,FAB 6\u00bcmax{FRK,FC?K}. We refer the reader to [28]\nfor set-theoretical proofs of the situation.\n\nHowever, if we take A \u00bc T\\C, where T is a triangle with two tangent sides to the\ncircle C (see Fig. 15.8b), then\n\nFig. 15.6 Two composed objects: (a) formed by 2D basic objects; (b) formed by 3D primary\n\nobjects\n\n376 Y. Stoyan and T. Romanova\n\n\n\nFAB \u00bc max FTK; FCK? \t: (15.27)\n\nBy analogy, we give 3D instance. Let objectD be a sphere segment presented in\nthe form D \u00bc S \\ T (see Fig. 15.9a), then\n\nFDB \u00bc maxfFSB;FTBg; (15.28)\n\nwhere B is a composed 3D object (e.g. see Fig. 15.9b).\nIn this case, we make rigid demands to primary object T such that the cone\n\ngenerator is tangent to S; otherwise, function (15.28) will not be a phi-function.\nLet us consider \u201cmixed\u201d case of union and intersection, e.g.A \u00bc \u00f0A1 [ A2\u00de \\ A?3,\n\nsubject to fr\u00f0A1 [ A2\u00de \\ frA?3 \u00bc 1 , then for any 2D-object B we may apply the\nfollowing formula:\n\nFAB \u00bc maxfminfFA1B;FA2Bg;FA?3Bg: (15.29)\n\nD \n\nK  \nK  \n\nD \n\nC C\n\nP \n\nT \n\nFig. 15.8 Instance for circular segment D and convex polygon K: (a) D \u00bc C \\ P, (b)D \u00bc C \\ T\n\nA\nA\n\n \n\n*  \n\n*   \n\nB \n\n*  \n\n*  \n\n \n\nB A0\nA0 A3\n\nA2\n\nA3\n\n*A1\n*A1A2\n\na b\n\nFig. 15.7 Instance for object A with holes: (a) polygon B does not overlap object A?3; (b) object\nB does not overlap oval A0\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 377\n\n\n\nInstance for \u201cmixed\u201d case: object A \u00bc \u00f0C1 [ C2\u00de \\ C?3 and B \u00bc C (see\nFig. 15.10), then phi-function of objects A and B has the form (15.29), i.e. FAB\n\n\u00bc maxfminfFC1C;FC2Cg;FC?3Cg.\nThe way for constructing a phi-function for general case of composed objects\n\none can find in [23, 28].\n\n15.4 Mathematical Model of the Basic Problem\n\nIn terms of phi-functions, the placement constraints mentioned above can be\npresented in the following form:(1) containment of Ti into O\n\n?: F?i \n 0, where Fi\nis a phi-function of objects Ti and O\n\n?; (2) non-overlapping of Ti and Tj: Fij \n 0,\n\nS\n\nT\nD\n\nB\n\nD\n\na\nb\n\nFig. 15.9 Instance for sphere segment D \u00bc and object B: (a) D \u00bc S \\ T, (b) 3D-object B\n\nA \n\nB\n\nC1\n\nC3\n\nC2\n\n*\n \n\nFig. 15.10 Instance for \u201cmixed\u201d case: object A \u00bc \u00f0C1 [ C2\u00de \\ C?3 and object B\n\n378 Y. Stoyan and T. Romanova\n\n\n\nwhereFij is a phi-function of objectsTi andTj; (3) distance constraints for O\n? andTi:\n\n(a) on minimal allowable distance: F\n_ ?\ni \n 0; (b) on maximal allowable distance: F\n\n^ ?\ni\n\n\u00bc minfF?i ;?F\n_ ?\ni g \n 0, where F\n\n_ ?\ni is an adjusted phi-function of objects Ti and O\n\n?;\nand (4) distance constraints for Ti and Tj: (a) on minimal allowable distance : F\n\n_\n\nij\n\n\n 0; (b) on maximal allowable distance:F^ ij \u00bc minfFij;?F\n_\n\nijg \n 0, where F\n_\n\nij is an\n\nadjusted phi-function of objects Ti and Tj.\nTaking into account (1)\u2013(4), we present the basic problem as a constrained\n\noptimisation problem:\n\nextrF\u00f0U\u00de s:t: u 2 W ? Rm\u00fex; (15.30)\n\nwhere F\u00f0U\u00de is an objective function, U \u00bc \u00f0m; u\u00de, m \u00bc \u00f0m0;m1;m2; :::;mn\u00de 2 Rm ,\nu \u00bc \u00f0u0; u1; u2; :::; un\u00de 2 Rx, m is a vector of variable metrical characteristics, u is a\nvector of variable placement parameters, where solution space W is specified as\nfollows:\n\nW \u00bc f\u00f0U\u00de 2 Rm\u00fex : L \n 0;L? \n 0g; (15.31)\n\nwhere L \u00bc minfLij; i< j \u00bc 1; 2; :::; ng, L? \u00bc minfL?i ; i \u00bc 1; 2; :::; ng,\n\nLij \u00bc minfF\n_\n\nij;F\n^\n\nijg; L?i \u00bc minfF\n_ ?\ni ;F\n\n^ ?\ni g: (15.32)\n\nIf allowable distances are not given, functions in (15.32) take the form\n\nLij \u00bc Fij; L?i \u00bc F?i : (15.33)\n\nLet us consider the basic characteristics of solution space W given by (15.31):\n\n1. The solution space W is a disconnected set. Each connected component of W\nmay have a complicated structure; in particular, it may have multiple holes and\n\ncavities.\n\n2. The solution spaceW can be naturally represented asW \u00bc [J\nj\u00bc1\n\nWj, where eachWj\n\nis specified by a system of inequalities resulting from our phi-functions. It should\nbe noted that J (the number of Wj\u2019s) may be huge.\n\n3. The frontier of W is usually made of non-linear surfaces containing valleys,\nravines, etc.\n\n4. Our constrained optimisation problem is NP-hard and always has multiple local\n\nextrema.\n\nThe following example will clarify item 2. Assume phi-function for objects A\nand B has the form FAB \u00bc minfminff1; f2g; maxf\u20191; \u20192; \u20193g;maxft1; t2gg.\n\nThenFAB \n 0 if min ff1; f2g \n 0 andmaxf\u20191; \u20192; \u20193g \n 0 andmaxft1; t2g\n 0.\nTherefore, FAB \n 0 generates the following collection of inequality systems:\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 379\n\n\n\nf1 \n 0\nf2 \n 0\n\u20191 \n 0\nt1 \n 0\n\n8>><\n>>:\n\n;\n\nf1 \n 0\nf2 \n 0\n\u20191 \n 0\nt2 \n 0\n\n8>><\n>>:\n\n;\n\nf1 \n 0\nf2 \n 0\n\u20192 \n 0\nt1 \n 0\n\n8>><\n>>:\n\n;\n\nf1 \n 0\nf2 \n 0\n\u20192 \n 0\nt2 \n 0\n\n8>><\n>>:\n\n;\n\nf1 \n 0\nf2 \n 0\n\u20193 \n 0\nt1 \n 0\n\n8>><\n>>:\n\n;\n\nf1 \n 0\nf2 \n 0\n\u20193 \n 0\nt2 \n 0\n\n8>><\n>>:\n\n: (15.34)\n\nThus, for each inequalityFAB \n 0 , we may build a tree. An inequality system of\nthe kind (15.34) corresponds to each terminal node of the tree there.\n\nNow problems (15.30)\u2013(15.32) result in the following problem:\n\nF\u00f0U?\u00de \u00bc extrfF\u00f0U?1\u00de;F\u00f0U?2\u00de; :::;F\u00f0U??\u00deg; (15.35)\n\nwhere\n\nF\u00f0U?k\u00de \u00bc extr\nU2Wk?Rx\u00fem\n\nF\u00f0U\u00de; k \u00bc 1; 2; :::; ?: (15.36)\n\nHere ? is the number of terminal nodes of the solution tree of problems\n(15.30)\u2013(15.32), where ? \u00bc ?1 ? ?2 ? ::: ? ?l , l \u00bc n\u00f0n\u00fe 1\u00de=2 , n is the number of\nplacement objects and l is the number of phi-functions in (15.31) forming solution\nspace W.\n\nComplete enumeration of terminal nodes of the solution tree of problems\n\n(15.30)\u2013(15.32) is, in general, just a theoretical goal even for two objects. However,\n\nwe consider the following major attributes of the problem.\n\nIndeed, the number of the terminal nodes, we deal with, is evaluated by\n\nthe number ?? , which is considerably less than ? . The reason for that lies in the\nfollowing statements. First, a great number of terminal nodes from the set\n\nfuk; k \u00bc 1; 2; :::; ?g are associated with inconsistent inequality systems fk\u00f0u\u00de \n 0\nwhich results inWk \u00bc 1. Secondly, in many cases,u?k1 andu?k2,k1 6\u00bc k2, from (15.36)\nmay be identical. Thirdly, not all local extrema of problems (15.36) are local\n\nextrema of problems (15.30)\u2013(15.32); in particular, there are cases, when Wk2 ?\nWk1 , k1 6\u00bc k2 . For solving problems (15.35) and (15.36), we apply the algorithm\ndiscussed in Sect. 15.5.\n\n15.4.1 An Application Problem\n\nWe shall now consider the following 3D packing problem that is representative\n\nof some space applications (e.g. re-entry vehicles). Let\u2019s introduce a container O,\nwhere O \u00bc Q \\ G, Q \u00bc fu 2 R3 : z\u00fe x2 \u00fe y2 ? a ? 0g, G \u00bc fu 2 R3 : ?z ? 0g,\nu \u00bc \u00f0x; y; z\u00de, and a set M of items. The items have the form either of cylinders\nCi, i2 I1 \u00bcf1;2; :::;n1g; with metrical characteristics \u00f0ri;hi\u00de or parallelepipeds Pi,\ni2 I2 \u00bcfn1\u00fe1; :::;n1\u00fen2 \u00bc ng , with metrical characteristics \u00f0wi; li;hi\u00de . We\ndenote the base of O by S1. There are two shelves Sk; k\u00bc 2;3; parallel to S1\nwithin container O (Fig. 15.11a), such that the distance between S1 and S2 is t1\n\n380 Y. Stoyan and T. Romanova\n\n\n\nand between S2 and S3 is t2. Thus, S1;S2 and S3 are circles of radii r1 \u00bc\nffiffiffi\na\n\np\n;\n\nr2 \u00bc ffiffiffiffiffiffiffiffiffiffiffia? t1p and r3 \u00bc ffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffia? t1? t2p : We denote a? t1? t2 by t3 (Fig. 15.11a).\nShelves S2 and S3 partition container O into subcontainers O\n\n1, O2 and O3.\nWe partition set M into three groups: Mk \u00bc fCi; i 2 Ik1;Pi; i 2 Ik2g, k \u00bc 1; 2; 3,\n\nwhere I11 \u00bc f1; 2; :::; n11g, I12 \u00bc fn1 \u00fe 1; n1 \u00fe 2; :::; n12g, I21 \u00bc fn11 \u00fe 1; n11 \u00fe 2; :::; n21g,\nI22 \u00bcfn12\u00fe1;n12\u00fe2; :::;n22g, I31 \u00bcfn21\u00fe1;n21\u00fe2; :::;n31g, I32 \u00bcfn22\u00fe1;n22\u00fe2; :::;n32g,\nand n31 \u00bc n1, n32 \u00bc n. Assuming that hk ? tk subject to hk \u00bcmaxfhki ; i2 Ikg, we place\neach item of Mk on shelf Sk within subcontainer O\n\nk.\n\nThe minimal allowable distances sij and si are given between each pair of items\nMki 2 Mk and Mkj 2 Mk , i; j 2 Ik \u00bc fIk1 [ Ik2g; i 6\u00bc j, as well as between each item\nMki 2 Mk, i 2 Ik, and the lateral surface of Ok, respectively.\n\nEach item from set M has mass mi, i 2 In, and homogeneous density. We set the\ncentre of gravity gi of each module at the origin 0i of coordinate system 0ixyz, i.e.\ngi \u00bc \u00f00; 0; 0\u00de (Fig. 15.11b).\n\nWe define the gravity centre g \u00bc \u00f0xg; yg; zg\u00de of set M as\n\nxg \u00bc\nPn\ni\u00bc1\n\nmixi\n\nPn\ni\u00bc1\n\nmi\n\n; yg \u00bc\nPn\ni\u00bc1\n\nmiyi\n\nPn\ni\u00bc1\n\nmi\n\n;\n\nY\n\ny\n\ny\n\nx\n\nx\n\nzz\n\nz\n\nX\n\n?1\n\n?2\n\n?3\n\nS1\n\nS2\n\nS3\n\nt3\n\nt2\n\nt1\n\na\n\ni\n\nPi\n\ngi\n\ngi\n\nCi\n\nC3i\n\nP3i\n\nC2i\n\nFig. 15.11 (a) Container O and subcontainers Ok ; (b) items Ci and Pi\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 381\n\n\n\nzg \u00bc\nPn11\ni\u00bc1\n\nmihi\n\nPn\ni\u00bc1\n\nmi\n\n\u00fe\n\nPn12\ni\u00bcn1\u00fe1\n\nmihi\n\nPn\ni\u00bc1\n\nmi\n\n\u00fe\n\nPn21\ni\u00bcn1\n\n1\n\u00fe1\n\nmi\u00f0t1 \u00fe hi\u00de\n\nPn\ni\u00bc1\n\nmi\n\n\u00fe\n\nPn22\ni\u00bcn1\n\n2\n\u00fe1\n\nmi\u00f0t1 \u00fe hi\u00de\n\nPn\ni\u00bc1\n\nmi\n\n\u00fe\n\nPn31\ni\u00bcn2\n\n1\n\u00fe1\n\nmi\u00f0t1 \u00fe t2 \u00fe hi\u00de\n\nPn\ni\u00bc1\n\nmi\n\n\u00fe\n\nPn32\ni\u00bcn2\n\n2\n\u00fe1\n\nmi\u00f0t1 \u00fe t2 \u00fe hi\u00de\n\nPn\ni\u00bc1\n\nmi\n\n:\n\nArrangement of Ci on shelves Sk within O\nk is defined by placement parameters\n\nui \u00bc \u00f0vi; hi\u00de for i 2 I11,ui \u00bc \u00f0vi; t1 \u00fe hi\u00de for i 2 I21, andui \u00bc \u00f0vi; t1 \u00fe t2 \u00fe hi\u00de for i 2 I31,\nwhere vi \u00bc \u00f0xi; yi\u00de. By analogy, we define placement parameters of Pi as follows:\nui \u00bc \u00f0vi; yi; hi\u00de for i 2 I12 ; ui \u00bc \u00f0vi; yi; t1 \u00fe hi\u00de for i 2 I22 ; and ui \u00bc \u00f0vi; yi; t1 \u00fe t2 \u00fe hi\u00de\nfor i 2 I32 where vi \u00bc \u00f0xi; yi\u00de, yi is a rotation angle of Pi around the axis 0iz:\n\nThus, vectoru \u00bc \u00f0u1; u2; :::; un\u00de 2 R3n1\u00fe4n2 defines inR3 the specific arrangement\nof the items of set M. Because of the fixed coordinates zi; i 2 Ik; for each item Mki\n2 Mk, the vector u of variables results in v \u00bc \u00f0v1; v2; :::; vn\u00de 2 Rx, x \u00bc 2n1 \u00fe 3n2.\n\nLet the gravity point s of container O be given, s \u00bc \u00f0xs; ys; zs\u00de 2 O.\nBalance Optimisation Define vector v 2 Rx so that distance d between the\n\ncentre of gravity g of setM and the given gravity point s 2 Owill reach its minimal\nvalue, considering the given distance constraints.\n\nMathematical models (15.30)\u2013(15.32) take the form:\n\nF\u00f0v?\u00de \u00bc minF\u00f0v\u00de s.t: v 2 W; (15.37)\n\nwhere\n\nF\u00f0v\u00de \u00bc \u00f0xg ? xs\u00de2 \u00fe \u00f0yg ? ys\u00de2 \u00fe \u00f0zg ? zs\u00de2;\n\nW \u00bc fv 2 Rx : eFCCij ? sij \n 0; i< j 2 Ik1; eFPPij ? sij \n 0; i< j 2 Ik2; (15.38)\n\neFCPij ? sij \n 0; i 2 Ik1; j 2 Ik2; eFCi ? si \n 0; i 2 Ik1; eFPi ? si \n 0; i 2 Ik2; k \u00bc 1; 2; 3g;\n\neFCCij , eFPPij , eFCPij are normalised phi-functions for each pair of items Mki 2 Mk and\nMkj 2 Mk , i; j 2 Ik; i 6\u00bc j; eFCi and eFPi are normalised phi-functions for each item\nMki 2 Mk, i 2 Ik, and the complement of Ok.\n\nTaking into account the features of the problem, normalised phi-functions listed\nin (15.38) may be replaced with normalised phi-functions for circles and rectangles\nin the following manner:\n\n1. For non-overlapping constraints: eFCCij ) eFCCij , eFPPij ) eFRRij , eFCPij ) eFCRij ,\ni; j 2 Ik; i 6\u00bc j, where eFCCij is the normalised phi-function for two circles Ci and\n\n382 Y. Stoyan and T. Romanova\n\n\n\nCj, eFRRij is the normalised phi-function for two rotating rectangles Ri and Rj and\neFCRij is the normalised phi-function forCi and rotatingRj. Metrical characteristics\nof Ci and Rj are defined by \u00f0ri\u00de and \u00f0wi; li\u00de, respectively.\n\n2. For containment constraints: eFCi ) eFS\n?\nkiC\ni , i 2 Ik1, where eFS\n\n?\nkiC\n\ni is the normalised\n\nphi-function for Ci and S\n?\nki \u00bc R2nintSki, Ski is a circle of radius r1i \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffi\na? hi\n\np\nfor\n\nk \u00bc 1, r2i \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\na? t1 ? hi\n\np\nfor k \u00bc 2, r3i \u00bc\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\na? t1 ? t2 ? hi\n\np\nfor k \u00bc 3, eFPi\n\n) eFS?kiRi , i 2 Ik2, where eFS\n?\nkiR\n\ni is the normalised phi-function for rotating Ri and S\n?\nki.\n\nThus, (15.38) takes the form\n\nW \u00bc fv 2 Rx : eFCCij ? sij \n 0; i< j 2 Ik1; eFRRij ? sij \n 0; i< j 2 Ik2;\n\neFCRij ? sij \n 0; i 2 Ik1; j 2 Ik2; eFS\n?\nkiC\ni ? si \n 0; i 2 Ik1;\n\neFS?kiRi ? si \n 0; i 2 Ik2; k \u00bc 1; 2; 3g:\n\nIn terms of adjusted phi-functions formula (15.38) is reduced to\n\nW \u00bc fv 2 Rx : eFCCij \n 0; i< j 2 Ik1; eFRRij \n 0; i< j 2 Ik2; eFCRij \n 0; i 2 Ik1; j 2 Ik2;\n\neFSkiCi \n 0; i 2 Ik1; eFSkiRi \n 0; i 2 Ik2; k \u00bc 1; 2; 3g;\n\nwhere notation eF means an adjusted phi-function, as defined above.\nWe shall illustrate the problem with the following instance.\n\nLet a \u00bc 16, t1 \u00bc 4, t2 \u00bc 2, s \u00bc \u00f00; 0; 0\u00de; M \u00bc fCi; i \u00bc 1; :::; 7;Pi; i \u00bc 8; :::; 12g\nr1\u00bc1, r2\u00bc1.1, r3\u00bc1.2, r4\u00bc1, r5\u00bc1.1, r6\u00bc1, r7\u00bc1, \u00f0wi; li\u00de \u00bc \u00f01:3333; 0:75\u00de, i \u00bc 8;\n:::; 12, hi \u00bc 0:88, i \u00bc 1; :::; 12; m1 \u00bc 3:1416, m2 \u00bc 3:8013, m3 \u00bc 4:5239, m4\n\u00bc 3:1416, m5 \u00bc 3:8013, m6 \u00bc 3:1416, m7 \u00bc 3:1416, mi \u00bc 4, i\u00bc 8; :::;12; si \u00bc 0:2,\ni \u00bc 1, 2,. . ., 12, sij \u00bc 0:2, i 6\u00bc j2f1; :::;12g. We partition M in the following way:\nM1 \u00bcfC1;C2;C3;P8;P9g, M2 \u00bcfC4;C5;P10;P11g, M3 \u00bcfC6;C7;P12g.\n\nThe vector of variables is v \u00bc \u00f0v1; v2; :::; v12\u00de 2 R29.\nIn Fig. 15.12 we give the optimal arrangement of 2D objects fCi; i \u00bc 1; :::; 7;\n\nRi; i \u00bc 8; :::; 12g corresponding to point v? with respect to the optimal arrangement\nof 3D objects fCi; i \u00bc 1; :::; 7;Pi; i \u00bc 8; :::; 12g, where\n\nv? \u00bc \u00f0x?1; y?1; :::; x?7; y?7; x?8; y?8; y?8; :::; x?12; y?12; y?12\u00de;\n\n\u00f0x?1; y?1\u00de \u00bc \u00f0?1:29956;?1:71262\u00de; \u00f0x?2; y?2\u00de \u00bc \u00f00:00122; 0:45696\u00de;\n\n\u00f0x?3; y?3\u00de \u00bc \u00f01:09994;?1:78878\u00de; \u00f0x?4; y?4\u00de \u00bc \u00f01:99438; 0:14595\u00de;\n\n\u00f0x?5; y?5\u00de \u00bc \u00f0?1:88631; 0:17553\u00de; \u00f0x?6; y?6\u00de \u00bc \u00f0?0:16247; 1:49016\u00de;\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 383\n\n\n\n\u00f0x?7; y?7\u00de \u00bc \u00f0?1:24515;?0:42938\u00de; \u00f0x?8; y?8; y?8\u00de \u00bc \u00f0?1:98972; 1:08949; 5:21332\u00de;\n\n\u00f0x?9; y?9; y?9\u00de \u00bc \u00f01:995774; 1:078259; 1:075465\u00de;\n\n\u00f0x?10; y?10; y?10\u00de \u00bc \u00f0?0:124421; 1:553304; 0:498449\u00de;\n\n\u00f0x?11; y?11; y?11\u00de \u00bc \u00f00:023846;?1:616274; 2:700283\u00de;\n\n\u00f0x?12; y?12; y?12\u00de \u00bc \u00f01:201675;?0:285530; 1:973668\u00de:\n\nIn the example the number of all inequality systems is ? \u00bc 4947802324992. In\norder to search for the global minimum just ?? \u00bc 723 inequality systems have been\nactually processed (running time for searching for a local minimum is less than a\n\nsecond).\n\n15.5 Sketch of Solution Algorithm\n\nHere we discuss an approach to the solution of the basic problem described in the\n\nprevious section, i.e. finding the global extremum (or, at least, a good approxima-\n\ntion to it) of the objective function F. Our algorithm involves methods of\nconstructing starting points and methods of local and global optimisation.\n\nIn [24], we give a survey of techniques for the construction of starting points. We\n\nhave generated starting points in several ways, so far, but the most frequently used\n\nis described hereinafter (see [30]). First, we approximate the container O and\nobjects A1,. . .,An by rectangular polygons (polytopes) P0,P1,. . .,Pn with sides par-\nallel to fixed coordinate axes. Then we place figures P1,. . .,Pn into P0 consecutively,\naccording to the object sequence Pi1 ;Pi2 ; :::;Pin generated by a modification of the\ndecremental neighbourhood method (see [31]). This procedure employs a probabi-\n\nlistic search and is designed to find the most promising object sequences. The object\n\nsequences will correspond to some starting points U1,. . .,Uk in W.\n\nR8\n\nC1\n\nC2\n\nC3\n\nC4\n\nC6\n\nC7\n\nC5\n\nR9 R10\n\nR11\n\nR12\n\nFig. 15.12 The optimal arrangement of objects corresponding to point v?\n\n384 Y. Stoyan and T. Romanova\n\n\n\nThe features of phi-functions are essential for smooth performance of local\nminimisation schemes. Our local search employs a modification of the Zoutendijk\n\nalgorithm of feasible directions [32] and the concept of active inequalities.\n\nLet U1 2 W be a starting point. The algorithm forms subsetWj;1 ? W, such that\nU1 2 Wj;1 . Then it finds a local minimum F\u00f0U?1\u00de \u00bc minF\u00f0U\u00de; s.t. U 2 Wj;1 and\nderives the steepest descent vectorZ1 fromU\n\n?\n1 for the problem minF\u00f0U\u00de; s.t.U 2 W.\n\nIf Z1 6\u00bc 0 it defines point U2 \u00bc \u00f0U?1 \u00fe tZ1\u00de 2 W, where t \n 0. It forms subset Wj;2\n? W, such that U2 2 Wj;2. Then it finds a local minimum F\u00f0U?2\u00de \u00bc minF\u00f0U\u00de; s.t.\nU 2 Wj;2 and derives the steepest descent vector Z2 from U?2 for the problem min\nF\u00f0U\u00de; s.t. U 2 W. If Z2 6\u00bc 0 it defines point U3 \u00bc \u00f0U?2 \u00fe tZ2\u00de 2 W. It forms subset\nWj;3 ? W, such that U3 2 Wj;3. Then it finds a local minimum F\u00f0U?3\u00de \u00bc minF\u00f0U\u00de;\ns.t. U 2 Wj;3 and so on. We repeat the procedure N times until it gets t ? e, where\ne> 0 is the solution accuracy. Thus,U?N is a point of local minimum of the problem\nminF\u00f0U\u00de; s.t. U 2 W.\n\nThe algorithm produces points of local minima U?1; ::;U\n?\nk of F. Eventually, we\n\nchoose the point of local minimum which gives the smallest value of F. This\ncompletes our algorithm.\n\nBelow we give a few computational results published in our papers (see, [24, 25,\n\n30, 31, 33\u201335]): (1) packing primary and composed objects with rotations into a\n\nrectangle of minimal length (Fig. 15.13a); (2) the optimal packing of arbitrarily\n\nshaped objects with rotations into a circular or rectangular container of minimal\n\nFig. 15.13 Examples of 2D packing problems\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 385\n\n\n\narea (Fig. 15.13b); (3) packing equal circles into a larger circle in order to maximise\n\nthe number of circles (Fig. 15.13c); (4) packing equal circles into a region with\n\nprohibited areas, in order to maximise the number of circles (Fig. 15.13d); (5)\n\npacking cylinders into a box of minimal height (Fig. 15.14a); (6) packing non-\n\nconvex polytopes into a box of minimal height (Fig. 15.14b); and (7) packing 3D\n\nobjects into a prism of minimal height, considering the given prohibited zones and\n\nminimal allowable distances between objects, as well as between each object and\n\nthe border of the container (Fig. 15.14c). For visualisation of the local optimisation\n\nprocedure, see http://www.math.uab.edu/~chernov/CP.\n\nWe have also progressed in solving covering problems which one can find in our\n\nrecent papers (e.g. [36, 37]). The results may be applied for air and space observa-\n\ntion systems.\n\n15.6 Conclusions\n\nIn this chapter we demonstrate how the use of phi-functions can improve the\n\nperformance of 2D and 3D cutting and packing algorithms. Our phi-functions\n\nhave the following features: they can be applied for non-overlapping and contain-\n\nment constraints to 2D and 3D objects (these include non-convex objects, some\n\ncurved shapes, regions with holes and cavities, etc.); phi-functions may take into\n\naccount continuous translations and rotations of objects, variable metric\n\ncharacteristics of objects, prohibited areas, possible restrictions on the allowable\n\ndistances between objects and from the objects to the walls of the container; phi-\n\nfunctions are useful when dealing with overlapping objects, as they measure the\n\ndegree of overlap (this is useful for covering problems). In addition, the phi-\n\nfunctions are defined by simple formulas, which allow us to use optimisation\n\nalgorithms of mathematical programming. Phi-functions allow us to enlarge the\n\nclass of optimisation placement problems that can be effectively solved and apply\n\nparallel computing. We are constantly working on the improvement of our\n\nalgorithms.\n\nFig. 15.14 Examples of 3D packing problems\n\n386 Y. Stoyan and T. Romanova\n\n\n\nReferences\n\n1. Burke, E., Hellier, R., Kendall, G., Whitwell, G.: Irregular packing using the line and arc no-fit\n\npolygon. Oper. Res. 58(4), 948\u2013970 (2010)\n\n2. Costa, M.T., Gomes, A.M., Oliveira, J.F.: Heuristic approaches to large-scale periodic packing\n\nof irregular shapes on a rectangular sheet. Eur. J. Oper. Res. 192, 29\u201340 (2009)\n\n3. Cui, Y.: Generating optimal multi-segment cutting patterns for circular blanks in the\n\nmanufactoring of electric motors. Eur. J. Oper. Res. 169, 30\u201340 (2006)\n\n4. Gomes, A.M., Oliveira, J.F.: Solving irregular strip packing problems by hybridising simulated\n\nannealing and linear programming. Eur. J. Oper. Res. 171, 811\u2013829 (2006)\n\n5. Birgin, E.G., Martinez, J.M., Nishihara, F.H., Ronconi, D.P.: Orthogonal packing of rectangu-\n\nlar items within arbitrary convex regions by nonlinear optimization. Comput. Oper. Res. 33,\n\n3535\u20133548 (2006)\n\n6. Kallrath, J.: Cutting circles and polygons from area-minimizing rectangles. J. Glob. Optim. 43,\n\n299\u2013328 (2009)\n\n7. Milenkovic, V.J., Daniels, K.: Translational polygon containment and minimal enclosure\n\nusing mathematical programming. Int. Trans. Oper. Res. 6, 525\u2013554 (1999)\n\n8. Bennell, J.A., Oliveira, J.F.: The geometry of nesting problems: A tutorial. European J. Oper.\n\nRes. 184, 397\u2013415 (2008)\n\n9. W?scher, G., Hauner, H., Schumann, H.: An improved typology of cutting and packing\nproblems. Eur. J.Oper. Res. 183(3, 16), 1109\u20131130 (2007)\n\n10. Bennell, J.A., Song, X.: A comprehensive and robust procedure for obtaining the nofit polygon\n\nusing Minkowski sums. Comput. Oper. Res. 35(1), 267\u2013281 (2006)\n\n11. Milenkovic, V.J.: Rotational polygon overlap minimization and compaction. Comput. Geom.\n\n10, 305\u2013318 (1998)\n\n12. Milenkovic, V.J., Sacks, E.: Two approximate Minkowski sum algorithms. Int. J. Comput.\n\nGeom. Appl. 20(4), 485\u2013509 (2010)\n\n13. Aladahalli, C., Cagan, J., Shimada, K.: Objective function effect based pattern search \u2014\n\ntheoretical framework inspired by 3D component layout. J. Mech. Design 129, 243\u2013254 (2007)\n\n14. Birgin, E.G., Mart??nez, J., Ronconi, D.: Optimizing the packing of cylinders into a rectangular\n\ncontainer: A nonlinear approach. European J. Oper. Res. 160(1), 19\u201333 (2005)\n\n15. Birgin, E.G., Sobral, F.N.C.: Minimizing the object dimensions in circle and sphere packing\n\nproblems. Comput. Oper. Res. 35, 2357\u20132375 (2008)\n\n16. Egeblad, J., Nielsen, B.K., Brazil, M.: Translational packing of arbitrary polytopes. Comput.\n\nGeom. 42(4), 269\u2013288 (2009)\n\n17. Egeblad, J., Nielsen, B.K., Odgaard, A.: Fast neighborhood search for two- and three-\n\ndimensional nesting problems. Eur. J. Oper. Res. 183(3), 1249\u20131266 (2007)\n\n18. Fasano, G.: MIP-based heuristic for non-standard 3D-packing problems. 4OR: Quar.\n\nJ. Belgian French Italian Oper. Res. Soc. 6(3), 291\u2013310 (2008)\n\n19. Gan, M., Gopinathan, N., Jia, X., Williams, R.A.: Predicting packing characteristics of\n\nparticles of arbitrary shapes. KONA 22, 82\u201393 (2004)\n\n20. Jia, X., Gan, M., Williams, R.A., Rhodes, D.: Validation of a digital packing algorithm in\n\npredicting powder packing densities. Powder Tech. 174, 10\u201313 (2007)\n\n21. Torquato, S., Stillinger, F.H.: Jammed hard-particle packings: From Kepler to Bernal and\n\nbeyond. Rev. Modern Phys. 82(3), 2633\u20132672 (2010)\n\n22. Cagan, J., Shimada, K., Yin, S.: A survey of computational approaches to three-dimensional\n\nlayout problems. Comput. Aided Design 34, 597\u2013611 (2002)\n\n23. Bennell, J.A., Scheithauer, G., Stoyan, Yu, Romanova, T.: Tools of mathematical modelling of\n\narbitrary object packing problems. J. Annal. Oper. Res. 179(1), 343\u2013368 (2010)\n\n24. Chernov, N., Stoyan, Y., Romanova, T.: Mathematical model and efficient algorithms for\n\nobject packing problem. Comput. Geom.: Theor. Appl. 43(5), 535\u2013553 (2010)\n\n25. Chernov, N., Stoyan, Y., Romanova, T., Pankratov, A.: Phi-functions for 2D objects formed by\nline segments and circular arcs. Adv. Oper. Res. (2012). doi:10.1155/2012/346358\n\n15 Mathematical Models of Placement Optimisation: Two- and Three-Dimensional. . . 387\n\nhttp://dx.doi.org/10.1155/2012/346358\n\n\n26. Scheithauer, G., Stoyan, Yu, Romanova, T.: Mathematical modeling of interactions of primary\n\ngeometric 3D objects. Cybernet. Syst. Anal. 41, 332\u2013342 (2005)\n\n27. Stoyan, Y., Gil, M., Terno, J., Romanova, T., Scheithauer, G.: Construction of a Phi- function\nfor two convex polytopes. Appli?ationes Mathematicae 2(29), 199\u2013218 (2002)\n\n28. Stoyan, Y., Gil, N., Romanova, T., Scheithauer, G.: Phi-functions for complex 2D objects.\n4OR: Quar. J. Belgian French Italian Oper. Res. Soc. 2(1), 69\u201384 (2004)\n\n29. Stoyan, Y., Terno, J., Scheithauer, G., Gil, N., Romanova, T.: Phi-function for 2D primary\nobjects. Studia Informatica 2(1), 1\u201332 (2002)\n\n30. Stoyan, Y., Pankratov, A., Sheithauer, G.: Translational packing non-convex polytopes into a\n\nparallelepiped. J. Mech. Eng. 12(3), 67\u201376 (2009)\n\n31. Stoyan, Y., Chugay, A.: Packing cylinders and rectangular parallelepipeds with distances\n\nbetween them. Eur. J. Oper. Res. 197, 446\u2013455 (2008)\n\n32. Zoutendijk, G.: Nonlinear Programming, Computational Methods, Integer and Nonlinear\n\nProgramming. North-Holland, Amsterdam (1970)\n\n33. Stoyan, Y., Chugay, A.: An optimization problem of packing identical circles into a multiply\n\nconnected region, Part 2. A solution method and its realisation. J. Mech. Eng. 14(2), 52\u201361\n\n(2011)\n\n34. Stoyan, Y., Gil, M., Scheithauer, G., Pankratov, A., Magdalina, I.: Packing of convex\n\npolytopes into a parallelepiped. Optimization 54(2), 215\u2013235 (2005)\n\n35. Stoyan, Y., Yaskov, G.: Packing congruent hyperspheres into a hypersphere. J. Global Optim.\n\n(2012). doi:10.1007/s10898-011-9716-z\n\n36. Scheithauer, G., Stoyan, Yu, Romanova, T., Krivulya, A.: Covering a polygonal region by\n\nrectangles. Comput. Optim. Appl. 48(3), 675\u2013695 (2011)\n\n37. Stoyan, Y., Patsuk, V.: Covering a compact polygonal set by identical circles. Comput. Optim.\n\nAppl. 46, 75\u201392 (2010)\n\n388 Y. Stoyan and T. Romanova\n\nhttp://dx.doi.org/10.1007/s10898-011-9716-z\n\n\nChapter 16\n\nOptimization of Low-Energy Transfers\n\nFrancesco Topputo and Edward Belbruno\n\nAbstract In this chapter the optimization of low-energy transfers is treated. The\n\nconcepts of trajectory optimization are recalled, and the direct transcription strategy\n\nis briefly sketched. The restricted three- and four-body problems are described, and\n\ntheir properties are discussed. Two different types of low-energy transfers are\n\noptimized: impulsive Earth\u2013Moon exterior low-energy transfers and low-energy,\n\nlow-thrust transfers to the L1 periodic orbits of the Earth\u2013Moon system.\n\nKeywords Low-energy transfers \u2022 Trajectory optimization \u2022 Ballistic capture\n\n\u2022 Low-thrust propulsion\n\n16.1 Introduction\n\nThe patched-conic method represents the classical technique adopted to design a\n\nlunar or an interplanetary transfer. In the case of Earth\u2013Moon, the Hohmann\n\ntransfer takes typically a few days and requires a cost that depends on the altitudes\n\nof the initial and final orbits about the Earth and the Moon, respectively. Since the\n\nHohmann transfer is obtained by patching together two different conic arcs (i.e., an\n\nellipse and a hyperbola in the Earth\u2013Moon case) a hyperbolic excess velocity upon\n\nMoon arrival arises. The magnitude of this velocity determines the size of\n\nthe maneuver required to put the spacecraft into a stable, final Moon orbit.\n\nF. Topputo (*)\nDipartimento di Ingegneria Aerospaziale, Politecnico di Milano, Via La Masa 34,\n\n20156 Milano, Italy\n\ne-mail: francesco.topputo@polimi.it\n\nE. Belbruno\n\nCourant Institute of Mathematical Sciences, New York University, 251 Mercer Street,\n\nNew York, New York 10012, USA\n\ne-mail: belbruno@cims.nyu.edu\n\nG. Fasano and J.D. Pinte?r (eds.), Modeling and Optimization in Space Engineering,\nSpringer Optimization and Its Applications 73, DOI 10.1007/978-1-4614-4469-5_16,\n# Springer Science+Business Media New York 2013\n\n389\n\nmailto:francesco.topputo@polimi.it\nmailto:belbruno@cims.nyu.edu\n\n\nThe propellant spent to accomplish such transfers is a monotonic function of the\n\nsum of all velocity changes or Dv.\nLow-energy transfers have been found in the attempt of reducing the Dv of\n\nEarth\u2013Moon transfers. The idea behind a low-energy transfer is to extend the model\n\nin which the orbits are designed. When two or more gravitational attractions\n\nsimultaneously act on the spacecraft, the more complex dynamics can be exploited\n\nto improve the performances of the transfer trajectories. Thus, in a low-energy\n\ntransfer, the classical Keplerian decomposition is avoided, and the natural dynamics\n\nis exploited in a more efficient way.\n\nA method to obtain Earth-to-Moon transfers with no hyperbolic excess velocity\n\nat Moon arrival was found about two decades ago by exploiting the intrinsic nature\n\nof the Sun\u2013Earth\u2013Moon dynamics [1, 3, 4]. The idea of the exterior low-energy\n\ntransfers to the Moon consists in departing from a given point near the Earth and\n\neventually flying by the Moon to gain enough energy to go at a distance of\n\napproximately four Earth\u2013Moon distance units (1. 5 ?106 km). In this region,\ndue to the high sensitivity to initial conditions, a negligible Dv is used to put the\nspacecraft into a lunar capture trajectory that leads to an unstable ellipse around\n\nthe Moon. Once there, another maneuver is performed to put the spacecraft into a\n\nstable lunar circular orbit. It has been demonstrated that these new transfers are\n\nmore efficient than the Hohmann transfer although the time of flight increases [4].\n\nThe mechanism that governs the low-energy transfers has been related to the\n\ninvariant manifolds associated to the periodic orbits of the restricted three-body\n\nproblem [2]. In particular, it has been shown how a low-energy trajectory can be\n\nconstructed by patching two manifold-related orbits, each one defined in a different\n\nrestricted three-body problem [18]. A low-energy transfer was used in the rescue of\n\nthe Japanese spacecraft Hiten [3], a ballistic capture at arrival has been considered\n\nfor the interplanetary missions BepiColombo [15], and the recent NASA GRAIL\n\nmission used a low-energy transfer analogous to the one Hiten used to send two\n\nspacecraft into lunar orbit [25].\n\nIn analogy with low-energy transfers, the transfers to the Lagrangian periodic\n\norbits are designed by exploiting the dynamics of the restricted three-body\n\nproblem. Indeed, introducing the concept of stable and unstable manifolds\n\nassociated to a periodic orbit, a systematic approach to design trajectories for\n\nlibration point missions has been developed: in order to reach the final orbit at a\n\nzero cost, the spacecraft has to be placed on its stable manifold [10, 14]. To this\n\naim, it is important to check whether or not the stable manifold associated to a\n\ncertain orbit approaches the Earth. In the Sun\u2013Earth system this happens for a\n\nwide class of orbits, but this is not the case of the Earth\u2013Moon system. This means\n\nthat a single-impulse transfer from a low Earth orbit to an Earth\u2013Moon libration\n\npoint orbit is not allowed. Low-thrust propulsion has been introduced to fill\n\nthis gap [20].\n\nAlthough low-energy transfers allow us to define solutions requiring less propel-\n\nlant than patched-conic transfers, they require an optimization step for the purpose\n\nof further cost reduction and mission constraints satisfaction [21, 22, 23, 24].\n\nThe optimization of low-energy transfers is nontrivial as the high nonlinearities\n\n390 F. Topputo and E. Belbruno\n\n\n\ncharacterizing these orbits lead most optimization algorithms to fail. In this contri-\n\nbution we show how low-energy transfers are optimized to find efficient solutions\n\nrequiring moderate transfer times.\n\n16.2 Trajectory Optimization\n\nThe trajectory optimization is an optimal control problem. In this section we define\n\nthe optimal control problem and show how it can be solved with a direct approach.\n\nA simple problem with fixed terminal time and no path constraints is considered for\n\nbrevity sake. The reader can refer to [5, 6, 7, 9, 30] for a more general treatment.\n\n16.2.1 Optimal Control\n\nThe optimal control problem requires that, given a set of first-order differential\n\nequations\n\n_x \u00bc f\u00f0x; u; t\u00de ; (16.1)\n\nthe control functions u(t) must be determined within initial, final time ti, tf, such that\nthe performance index\n\nJ \u00bc \u2019\u00f0x\u00f0tf \u00de; tf \u00de \u00fe\n\u00f0tf\nti\n\nL\u00f0x; u; t\u00de dt (16.2)\n\nis minimized while satisfying the two-point conditions\n\nx\u00f0ti\u00de \u00bc xi; C\u00f0x\u00f0tf \u00de; u\u00f0tf \u00de; tf \u00de \u00bc 0 : (16.3)\n\nThe problem consists in finding a solution that represents a stationary point of\n\nthe augmented performance index\n\nJ \u00bc \u2019\u00f0x\u00f0tf \u00de; tf \u00de \u00fe nTC\u00f0x\u00f0tf \u00de; u\u00f0tf \u00de; tf \u00de\n\n\u00fe\n\u00f0tf\nti\n\nL\u00f0x; u; t\u00de \u00fe lT f\u00f0x; u; t\u00de ? _x\u00f0 \u00de? ?dt ; (16.4)\n\nwhere l is the vector of costates and n is the multiplier of the boundary condition.\nThe necessary conditions for optimality, also referred to as Euler\u2013Lagrange\n\nequations, are\n\n16 Optimization of Low-Energy Transfers 391\n\n\n\n_x \u00bc @H\n@l\n\n; _l \u00bc ? @H\n@x\n\n;\n@H\n\n@u\n\u00bc 0 ; (16.5)\n\nwhere H, the Hamiltonian, is\n\nH\u00f0x; l; u; t\u00de \u00bc L\u00f0x; u; t\u00de \u00fe lTf\u00f0x; u; t\u00de : (16.6)\n\nThe differential\u2013algebraic system (16.5) must be solved together with the boundary\n\nconditions (16.3) and the final condition\n\nl\u00f0tf \u00de \u00bc @\u2019\n@x\n\n\u00fe @C\n@x\n\n? ?T\nn\n\n\" #\n\nt\u00bctf\n: (16.7)\n\n16.2.2 Direct Transcription\n\nIndirect approaches consider (16.5) to solve the trajectory design problem. Another\n\nphilosophy, known as direct approach, consists in translating the continuous opti-\n\nmal control into a nonlinear programming (NLP) problem and solving it for a finite\n\nset of variables.\n\nA uniform time grid ti \u00bc t1<t2< . . .<tN \u00bc tf is constructed. The time labels tj,\nj \u00bc 1; . . . ;N are referred to as mesh points, and h \u00bc \u00f0tN ? t1\u00de=\u00f0N ? 1\u00de is the step\nsize of the discretization. The states and the controls are discretized over the time\n\ngrid by defining xj \u00bc x(tj) and uj \u00bc u(tj). The vector of variables of the NLP\nproblem is\n\ny \u00bc fx1; u1; . . . ; xN; uN; t1; tNgT ; (16.8)\n\nwhere the inclusion of initial, final time allows us to achieve optimal departure and\n\ntransfer duration.\n\nThe dynamics (16.1) are replaced by a finite set of defects, derived by numerical\n\nintegration. For instance, if a Runge\u2013Kutta scheme is used, the defects takes the\n\nfollowing form:\n\nzi ? xi\u00fe1 ? xi ? hi\nXk\n\nj\u00bc1bjf ij ; i \u00bc 1; . . . ;N ; (16.9)\n\nwith appropriate definitions of fij [6]. The equality constraints are\n\nc\u00f0y\u00de \u00bc fz1; z2; . . . ; zN?1;CgT ; (16.10)\n\n392 F. Topputo and E. Belbruno\n\n\n\nand, with a similar approach, the objective function (16.2) can be written in terms of\n\ny, namely F \u00bc F(y).\nDefinition 1 With direct approach, the NLP problem for trajectory optimization is\n\nmin\ny\n\nF\u00f0y\u00de subject to c\u00f0y\u00de \u00bc 0 : (16.11)\n\n16.2.3 Nonlinear Programming\n\nThe trajectory optimization problem may be solved with numerical methods\n\nincorporating some type of iterations. Let the scalar, Lagrangian function of\n\nEq. (16.11) be\n\nL\u00f0y; l\u00de \u00bc F\u00f0y\u00de ? lTc\u00f0y\u00de ; (16.12)\n\nwhere another set of Lagrange multipliers l is introduced. The necessary conditions\nfor a constrained optimum are\n\ng\u00f0y\u00de ?GT\u00f0y\u00del \u00bc 0 ;\nc\u00f0y\u00de \u00bc 0 ; (16.13)\n\nwhere g and G are the gradient of F(y) and the Jacobian of c(y), respectively. The\nnonlinear algebraic system (16.13) can be solved via a Newton\u2019s method. Thus,\n\ngiven a generic initial guess (y, l), its corrections (Dy, Dl), necessary to construct\nthe new solution (y\u00fe Dy; l\u00fe Dl), are found by solving\n\nHL ?GT\nG 0\n\n\" #\nDx\nDl\n\n? ?\n\u00bc ?g?c\n\n? ?\n; (16.14)\n\nwhere HL is the Hessian of Eq. (16.12). Equations (16.14) are known as the\n\nKarush\u2013Kuhn\u2013Tucker system. These are solved iteratively until a convergence\n\ncriterion is satisfied.\n\n16.3 Equations of Motion\n\nIn this section the equations of motion of the planar circular restricted three-body\n\nproblem (PCRTBP) are given, and the linear structure of the phase space about two\n\nequilibrium points of this system is briefly discussed.We show how this dynamics is\n\n16 Optimization of Low-Energy Transfers 393\n\n\n\nmodified to accommodate the low-thrust propulsion. The perturbation of the Sun is\n\ntaken into account in the planar bicircular restricted four-body problem (PBRFBP).\n\n16.3.1 Planar Circular Restricted Three-Body Model\n\nIn the PCRTBP two primary bodies P1, P2 of masses m1 > m2 > 0, respectively,\nmove under mutual gravity on circular orbits about their common center of mass.\n\nThe third body, P, assumed of infinitesimal (zero) mass, moves under the gravity\nof the primaries and in their same plane. The motion of the primaries is not\n\naffected by P. In the present case, P represents a spacecraft, and P1, P2 represent\nthe Earth and the Moon, respectively. Let the mass ratio of P2 over the total mass be\n\nm \u00bc m2=\u00f0m1 \u00fe m2\u00de; m \u00bc 1:21506683? 10?2 is considered in the following.\nThe motion of P relative to a corotating coordinate system (x, y) with the origin\n\nat the center of mass of the two bodies, and in normalized units of distance, mass,\n\nand time, is described by [27]\n\n\u20acx? 2 _y \u00bc @O\n@x\n\n; \u20acy\u00fe 2 _x \u00bc @O\n@y\n\n; (16.15)\n\nwhere the effective potential, O, is given by\n\nO\u00f0x; y\u00de \u00bc 1\n2\n\u00f0x2 \u00fe y2\u00de \u00fe 1? m\n\nr1\n\u00fe m\nr2\n\n\u00fe 1\n2\nm\u00f01? m\u00de ; (16.16)\n\nwith r1 \u00bc \u00bd\u00f0x\u00fe m\u00de2 \u00fe y2?1=2 , r2 \u00bc \u00bd\u00f0x\u00fe m? 1\u00de2 \u00fe y2?1=2 as P1, P2 are located at\n(? m, 0), (1 ? m, 0), respectively.\n\nThe system (16.15) admits an integral of motion, the Jacobi integral,\n\nJ\u00f0x; y; _x; _y\u00de \u00bc 2O\u00f0x; y\u00de ? \u00f0 _x2 \u00fe _y2\u00de ; (16.17)\nthat defines the energy manifold\n\nj\u00f0C\u00de \u00bc f\u00f0x; y; _x; _y\u00de 2 R4jJ\u00f0x; y; _x; _y\u00de \u00bc Cg; (16.18)\n\nwhose projection onto the configuration space (x, y) is called Hill\u2019s or zero-velocity\ncurves. In the PCRTBP, the motion of P is always confined to the Hill\u2019s curves,\nwhich vary with the Jacobi energy C (see Fig. 16.1).\n\nTo model the controlled motion of P under both the gravitational attractions of\nP1, P2, and the low-thrust propulsion, the following differential equations are\nconsidered:\n\n\u20acx? 2 _y \u00bc @O\n@x\n\n\u00fe Tx\nm\n\n; \u20acy\u00fe 2 _x \u00bc @O\n@y\n\n\u00fe Ty\nm\n\n; _m \u00bc ? T\nIsp g0\n\n; (16.19)\n\n394 F. Topputo and E. Belbruno\n\n\n\nwhere T \u00bc \u00f0T2x \u00fe T2y\u00de1=2 is the thrust magnitude, Isp the specific impulse (it has time\ndimension), and g0 the gravitational acceleration at sea level. The ballistic motion\n(16.15) is a fourth-order system, whereas the controlled motion (16.19) is described\n\nby a fifth-order system of differential equations. Continuous variations of the\n\nspacecraft mass, m, are taken into account when the low-thrust propulsion is\nconsidered. This causes a singularity arising when m ! 0, besides the well-\nknown singularities given by impacts of P with P1 or P2.\n\n16.3.2 The Phase Space Around L1 and L2\n\nThe motion described by Eq. (16.15) has five equilibrium points, labeled Lk,\nk \u00bc 1; . . . ; 5 , known as the Euler\u2013Lagrange libration points. Three of these,\nL1, L2, L3, lie along the x-axis; the other two points, L4, L5, lie at the vertices of\ntwo equilateral triangles with common base extending from P1 to P2 (see\nFig. 16.1). Only the first two collinear points are considered as their dynamics\n\nadheres to low-energy transfer applications [2, 11, 12, 17, 18, 19, 28, 29].\n\nThe linearized solution of Eq. (16.15), written in a frame centered at either L1 or\nL2, is\n\nx\u00f0t\u00de \u00bc Auelt \u00fe Ase?lt \u00fe Ax cos\u00f0ot\u00fe \u2019\u00de ;\ny\u00f0t\u00de \u00bc ?k1Auelt \u00fe k1Ase?lt ? k2Ax sin\u00f0ot\u00fe \u2019\u00de ;\n\n(16.20)\n\n-1.5 -1 -0.5 0 0.5 1 1.5\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\nx (adim.)\n\ny \n(a\n\ndi\nm\n\n.)\n\nForbidden\nRegions\n\nL3\n\nL5\n\nL1 L2\n\nL4\n\nFig. 16.1 Lagrangian points\n\nand Hill\u2019s curves for various\n\nenergy levels (m \u00bc 0. 1)\n\n16 Optimization of Low-Energy Transfers 395\n\n\n\nwhere As, Au, and Ax are amplitudes and j is the phase angle; the two (positive)\neigenvalues, l and o, as well as the two constants, k1 and k2, depend on m [8, 16].\nEquations (16.20) show that, locally, the dynamics of the PCRTBP is equivalent to\n\nthe product of a saddle ?center; i.e., there are one positive and one negative\neigenvalues (saddle) and a pair of complex conjugate eigenvalues (center).\n\nThe amplitudes of the solution associated with the saddle, As and Au, regulate the\nstable and unstable motion, respectively, and Ax is associated to the size of the in-\nplane Lyapunov periodic orbits. The reader can consult [13, 16] for more details.\n\nThe dynamics of motion defined by the saddle ? center yield invariant\nmanifolds associated to the periodic orbits. These are two-dimensional invariant\n\nsubsets, Wsgi and W\nu\ngi\n, called stable and unstable manifolds, respectively (gi is the\n\nperiodic orbit around Li, i \u00bc 1, 2). The manifolds have the following property:\nevery point on the stable manifold spirals toward the periodic orbit in forward time;\n\na similar argument applies to the unstable manifold in backward time. The invariant\n\nmanifolds associated to the Lyapunov orbits act as separatrices, and they split\n\ndifferent regimes of motion (see Fig. 16.2).\n\n16.3.3 Planar Bicircular Restricted Four-Body Model\n\nThe PBRFBP describes the dynamics of the Earth\u2013Moon PCRTBP when the Sun\n\nperturbation is considered [26, 31]. The equations of motion are\n\n0.96 0.98 1 1.02 1.04 1.06 1.08 1.1 1.12 1.14\n?0.1\n\n?0.08\n\n?0.06\n\n?0.04\n\n?0.02\n\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\nx (adim.)\n\ny \n(a\n\ndi\nm\n\n.)\nForbidden Region\n\nForbidden Region\n\nSun\n\nx=1?\u00b5\n\nx=1?\u00b5\n\n \n\n \n\nJupiter \n\nTransit Orbit\n\nAsymptotic Orbit \n\nL2  p. o .\n\nW s\n\nW u\n\nL2  p. o .\n\nFig. 16.2 Invariant manifolds associated to a planar Lyapunov orbit about L2 in the Sun\u2013Jupiter\nsystem. Example of transit and asymptotic orbits\n\n396 F. Topputo and E. Belbruno\n\n\n\n\u20acx? 2 _y \u00bc @O4\n@x\n\n; \u20acy\u00fe 2 _x \u00bc @O4\n@y\n\n; (16.21)\n\nwhere the four-body potential is\n\nO4\u00f0x; y; yS\u00de \u00bc O\u00f0x; y\u00de \u00fe mS\nr3\n\n? mS\nr2\n\n\u00f0x cos yS \u00fe y sin yS\u00de: (16.22)\n\nand O(x, y) is the three-body potential expressed in Eq. (16.16). The phase angle of\nthe Sun, yS in Eq. (16.22), is given by\n\nyS\u00f0t\u00de \u00bc yS;0 \u00fe oS t; (16.23)\n\nwhere yS, 0 \u00bc yS(t0). The position of the Sun is {rcosyS, rsinyS}T and therefore the\nSun\u2013spacecraft distance is\n\nr3 \u00bc \u00f0x? r cos yS\u00de2 \u00fe \u00f0y? r sin yS\u00de2\nh i1=2\n\n: (16.24)\n\nThe dimensionless physical parameters of the Sun have to be consistent with the\n\nnormalized Earth\u2013Moon corotating frame. Thus, the distance between the Sun and\n\nthe Earth\u2013Moon barycenter is r \u00bc 3. 88811145 ?102, the mass of the Sun is\nmS \u00bc 3. 28900541 ?105, and its angular velocity with respect to the Earth\u2013Moon\nsynodic system is oS \u00bc ?9:25195985? 10?1.\n\nThe bicircular problem is not a well-defined model because the primaries do not\n\nsatisfy Newton\u2019s equations. However, this model turns out to yield a good approxi-\n\nmation of the real four-body dynamics because the eccentricities of both the Earth\u2019s\n\nand Moon\u2019s orbits are equal to 0. 0167 and 0. 0549, respectively, and the Moon\u2019s\n\norbit is inclined to the ecliptic by only 5?.\n\n16.4 Optimal Low-Energy Transfers\n\nOptimal low-energy transfers are presented in this section. Two-impulse optimal\n\nEarth\u2013Moon ballistic transfers are shown in Sect. 16.4.1, whereas low-thrust\n\ntransfers to Lagrangian point orbits in the Earth\u2013Moon system are treated in\n\nSect. 16.4.2.\n\n16.4.1 Ballistic Earth\u2013Moon Transfers\n\nBallistic Earth\u2013Moon transfers are briefly defined. The spacecraft is assumed to be\n\nin a circular orbit of radius ri about the Earth. At the initial time, ti, an impulse of\n\n16 Optimization of Low-Energy Transfers 397\n\n\n\nmagnitude Dvi places the spacecraft onto a transfer trajectory; Dvi is aligned with\nthe local circular velocity whose magnitude is\n\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\u00f01? m\u00de=ri\np\n\n. At the final time, tf, an\nimpulse of magnitude Dvf inserts the spacecraft into the final orbit around the Moon.\nThis orbit has radius rf, and Dvf is aligned with the local circular velocity whose\nmagnitude is\n\nffiffiffiffiffiffiffiffiffi\nm=rf\n\np\n. The total cost of the transfer is Dv \u00bc Dvi \u00fe Dvf , and the\n\ntransfer time is Dt \u00bc tf ? ti.\nLet xi \u00bc \u00f0xi; yi; _xi; _yi\u00de,xf \u00bc \u00f0xf ; yf ; _xf ; _yf \u00de be the initial, final transfer state, and let\n\nthe problem boundary conditions be\n\n\u00f0xi \u00fe m\u00de2 \u00fe y2i ? r2i \u00bc 0 ; (16.25)\n\n\u00f0xf \u00fe m? 1\u00de2 \u00fe y2f ? r2f \u00bc 0 ; (16.26)\n\n\u00f0xi \u00fe m\u00de\u00f0 _xi ? yi\u00de \u00fe yi\u00f0 _yi \u00fe xi \u00fe m\u00de \u00bc 0 ; (16.27)\n\n\u00f0xf \u00fe m? 1\u00de\u00f0 _xf ? yf \u00de \u00fe yf \u00f0 _yf \u00fe xf \u00fe m? 1\u00de \u00bc 0 ; (16.28)\n\nwhere Eqs. (16.25) and (16.26) constrain xi and xf to be at a physical distance ri and\nrf from the Earth and the Moon, respectively, whereas Eqs. (16.27) and (16.28)\nconstrain the initial and final velocity vectors to be aligned with the local circular\n\nvelocity. Under conditions (16.25)\u2013(16.28), the costs for the initial and final\n\nmaneuvers respectively are\n\nDvi \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0 _xi ? yi\u00de2 \u00fe \u00f0 _yi \u00fe xi \u00fe m\u00de2\n\nq\n?\n\nffiffiffiffiffiffiffiffiffiffiffi\n1? m\nri\n\nr\n; (16.29)\n\nDvf \u00bc\nffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffiffi\n\u00f0 _xf ? yf \u00de2 \u00fe \u00f0 _yf \u00fe xf \u00fe m? 1\u00de2\n\nq\n?\n\nffiffiffiffi\nm\nrf\n\nr\n: (16.30)\n\nThe final transfer state is a function of the initial state, initial and final time through\n\nxf \u00bc f(xi, ti; tf), where x(t) \u00bc f(xi, ti; t) is a solution of Eqs. (16.21). The optimi-\nzation problem of two-impulse Earth\u2013Moon transfers is defined as follows.\n\nDefinition 2 Find y \u00bc {xi, ti, tf}, tf > ti, that satisfies\n\nmin\ny\n\nDv\u00f0y\u00de subject to C\u00f0y\u00de \u00bc 0 ; (16.31)\n\nwhere Dv \u00bc Dvi \u00fe Dvf given by Eqs. (16.29)\u2013(16.30) and C is the vector of\nboundary conditions (16.25)\u2013(16.28).\n\nThis problem has been solved with a direct transcription and multiple shooting\n\napproach (see Sect. 16.2.2), starting from initial guess solutions achieved with a\n\ndirect shooting (note that there is no continuous control in this case). The altitudes\n\nof the departure and arrival circular orbits are 167 km (around the Earth) and\n\n100 km (around the Moon), respectively. In Fig. 16.3 the convergence history of\n\na sample solution is reported.\n\n398 F. Topputo and E. Belbruno\n\n\n\nA sample set of low-energy Earth\u2013Moon transfers is reported in Table 16.1,\n\nwhere the magnitude of the departure and arrival maneuvers, as well as the total\n\ncost and the transfer time, are reported. These six solutions in Table 16.1 are shown\n\nin Fig. 16.4 in the Earth-centered frame. It can be noticed that, when optimized, the\n\ntotal cost of low-energy transfers is much less than that of Hohmann transfers,\n\nalthough the transfer time increases.1 However, transfers lasting less than 90 days\n\n?3 ?2 ?1 0 1 2\n\n?2\n?1.5\n\n?1\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n2\n\nx\n\n?2 ?1 0 1 2\nx\n\n?2 ?1 0 1 2\nx\n\n?2 ?1 0 1 2\nx\n\n?2 ?1 0 1 2\nx\n\n?2 ?1 0 1 2\nx\n\ny\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\ny\n\n?2\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\ny\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\ny\n\nIteration 0; max ec=1.866. Iteration3; max ec=0.475. Iteration6; max ec=0.203.\n\nIteration10; max ec=0.078.\n\n?1.5\n\n?1\n\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\ny\n\nIteration20; max ec=0.397.\n\n?2\n?1.5\n\n?1\n?0.5\n\n0\n\n0.5\n\n1\n\n1.5\n\ny\n\nIteration29; max ec=3.9e-11.\n\na b c\n\nd e f\n\nFig. 16.3 Iterative solutions of problem (16.31) shown in the Earth\u2013Moon rotating frame. Each\n\nfigure reports the iteration and the maximum equality constraint violation (max ec). The first guess\n\n(Iteration 0) is in Fig. 16.3a. This solution has N \u00bc 23 mesh points (bullets in the figures), i.e., 94\nvariables and 92 equality constraints. The convergence has been achieved in 29 iterations\n\nTable 16.1 Cost and transfer time for a sample set of low-energy transfers\n\nSol Dvi (m/s) Dvf (m/s) Dv (m/s) Dt (days)\n\n(1) 3,133.8 635.7 3,769.5 82.2\n\n(2) 3,135.8 664.2 3,800.1 80.5\n\n(3) 3,133.7 638.8 3,772.6 87.5\n\n(4) 3,197.0 655.8 3,852.8 83.3\n\n(5) 3,133.8 668.5 3,802.3 75.5\n\n(6) 3,197.0 637.3 3,834.3 92.8\n\n1 The cost for an Hohmann transfer between similar orbits is about 3,950 m/s; the transfer time is\n\nabout 5 days.\n\n16 Optimization of Low-Energy Transfers 399\n\n\n\nare nowadays deemed acceptable, as the increased transfer duration is balanced by\n\nthe propellant mass saving [25].\n\n16.4.2 Low-Thrust Transfers to Lagrangian Point Orbits\n\nThe transfers to Lagrangian point orbits exploit the stable manifold. To accomplish\n\nsuch transfers it is enough to place the spacecraft on the stable manifold emanating\n\nfrom the final libration point orbit. Thus, the optimization problem aims at targeting\n\na point on the stable manifold while minimizing a performance index. This is done\n\nby using low-thrust propulsion.\n\nLet us consider the dynamics of the controlled PCRTBP (16.19), and let us\n\nassume that the spacecraft lies on a circular Earth orbit of radius ri. Thus, the first\ntransfer state, xi \u00bc \u00f0xi; yi; _xi; _yi;mi\u00de , must satisfy the following initial boundary\ncondition:\n\n\u00f0xi \u00fe m\u00de2 \u00fe y2i ? r2i \u00bc 0 ; (16.32)\n\n?5 0 5 10 15\nx 105\n\nx 106\n\nx 105 x 105 x 105\n\nx 105 x 106\nx 105\n\nx 105 x 105\n\nx 105 x 106\n\n?1\n?0.8\n?0.6\n?0.4\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\na b c\n\nd e f\n\nx (km)\n?5 0 5 10\n\nx (km)\n\ny \n(k\n\nm\n)\n\ny \n(k\n\nm\n)\n\ny \n(k\n\nm\n)\n\ny \n(k\n\nm\n)\n\ny \n(k\n\nm\n)\n\ny \n(k\n\nm\n)\n\nSol (1)\n\n?5\n\n0\n\n5\n\n10\n\nSol (2) Sol (3)\n\n?1 ?0.5 0 0.5 1\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nx (km)\n\n?10 ?5 0 5\n\n?2\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n?1 ?0.5 0 0.5 1\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n12\n\n?5 0 5 10 15\n\n?6\n\n?4\n\n?2\n\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\nx (km)\n\nSol (4)\nx (km)\n\nSol (5)\nx (km)\n\nSol (6)\n\nFig. 16.4 Low-energy Earth\u2013Moon transfers in the Earth-centered rotating frame. The Moon\u2019s\n\norbit (dashed), the apparent orbit of the Sun (dotted, not to scale), and the position of the Sun at\ndeparture (\u201c ? \u201d) and arrival (\u201c + \u201d) are also shown\n\n400 F. Topputo and E. Belbruno\n\n\n\n\u00f0xi \u00fe m\u00de\u00f0 _xi ? yi\u00de \u00fe yi\u00f0 _yi \u00fe xi \u00fe m\u00de \u00bc 0 ; (16.33)\n\n\u00f0 _xi ? yi\u00de2 \u00fe \u00f0 _yi \u00fe xi \u00fe m\u00de2 ? \u00f01? m\u00de=ri \u00bc 0 : (16.34)\n\nIt can be demonstrated that a generic point of the stable manifold xs \u00bc \u00f0xs; ys; _xs; _ys\u00de\ncan be uniquely identified by using two scalars, i.e., xs(t1, t2), where t1, t2 are two\ntime variables [20]. In order to belong to the stable manifold, the final transfer state,\n\nxf \u00bc \u00f0xf ; yf ; _xf ; _yf ;mf \u00de, must satisfy the final boundary condition\n\nxf ? xs \u00bc 0 ; yf ? ys \u00bc 0 ; _xf ? _xs \u00bc 0 ; _yf ? _ys : (16.35)\n\nThe transfer is to use the least propellant as possible, and therefore the performance\n\nindex is\n\nJ \u00bc mi ? mf ; (16.36)\n\nwhich corresponds to the propellant spent. Finally, the low-thrust magnitude,\n\nT \u00bc \u00f0T2x \u00fe T2y\u00de\n1=2\n\n, must not exceed the maximum available thrust, Tmax. This is\n\nenforced through the following inequality condition:\n\nT2x\u00f0t\u00de \u00fe T2y\u00f0t\u00de\nh i1=2\n\n? Tmax ? 0; t 2 \u00bdti; tf ? ; (16.37)\n\nwhere ti, tf are the initial and final transfer times, respectively. Note that the reverse\nproblem (i.e., transfer from a libration point orbit to an Earth orbit) can be defined\n\nby inverting the order of the boundary conditions (Eqs. (16.32)\u2013(16.34) in place of\n\nEqs. (16.35) and vice versa). The problem stated by Eqs. (16.32)\u2013(16.37) can be\n\ntransformed into a NLP through the direct transcription shown in Sect. 16.2.2.\n\nThus, the low-thrust transfers can be stated as follows.\n\nDefinition 3 Find y \u00bc fx1;T1; . . . ; xN;TN; t1; tN; t1; t2g that satisfies\n\nmin\ny\n\nF\u00f0y\u00de subject to c\u00f0y\u00de \u00bc 0 and g\u00f0y\u00de ? 0 ; (16.38)\n\nwhere F(y), c(y), and g(y) are the transcribed objective function (16.36), equality\nconstraints (16.32)\u2013(16.35), and inequality constraints (16.37), respectively.\n\nThe problem stated in Definition 3 has been solved with direct transcription and\n\nmultiple shooting. In particular, an L1\u2013Earth\u2013L1 tour has been studied in the\nframework of an Earth\u2013Moon transportation system. The system is made up by\n\ntwo trajectories, defined as follows:\n\n\u2022 Trajectory (a)\u2014in this transfer, a spacecraft (S1) moves from a given L1 orbit\nand goes to a circular Earth orbit. The initial mass is equal to 50,000 kg.\n\n16 Optimization of Low-Energy Transfers 401\n\n\n\n\u2022 Trajectory (b)\u2014once in the Earth circular orbit, S1 docks with another space-\n\ncraft (S2) of mass 27,600 kg, and they move together (S1+S2) again to the L1\norbit.\n\nThe Lyapunov orbit about L1 has semi-amplitudes of 25,400 km and 60,000 km\nalong x and y, respectively, whereas a circular Earth orbit of altitude 75,000 km has\nbeen selected. The maximum available thrust is 47 N, and the specific impulse is\n\n1,620 s.\n\nThe optimal results are summarized in Table 16.2 and shown in Fig. 16.5 for\n\neach of the two trajectory legs. The columns of Table 16.2 report the initial and final\n\nmass of each leg (mi and mf) as well as the propellant mass needed for the transfer\n(mp \u00bc mi ? mf ); tm is the time spent on the manifold (unstable for Traj (a), stable\nfor Traj (b)), tlt is the duration of the low-thrust arc, and therefore the total\ntransfer time isDt \u00bc tm \u00fe tlt. These results show that orbits about the Earth\u2013Moon\nL1 can be accessed in reasonable times (departing from high-altitude Earth orbits)\neven when the thrust-to-mass ratio is small (on the order of 10 ? 4 for both\ntrajectory legs).\n\nTable 16.2 Parameters of the low-thrust transfers to/from the periodic orbit about L1\n\nTraj mi (kg) mf (kg) mp (kg) tm (days) tlt (days) Dt (days)\n\n(a) 50,000.0 47,553.6 2,446.4 38.24 15.96 54.20\n\n(b) 75,153.6 71,685.6 3,468.0 38.24 24.47 62.71\n\n?0.5 0 0.5 1\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\nx [EM units]\n\ny \n[E\n\nM\n u\n\nni\nts\n\n]\n\nTrajectory\n\n?0.5 0 0.5 1\nx [EM units]\n\nTrajectory\n\n?0.6\n\n?0.4\n\n?0.2\n\n0\n\n0.2\n\n0.4\n\n0.6\n\ny \n[E\n\nM\n u\n\nni\nts\n\n]\n\na b\n\nFig. 16.5 Trajectory (a) and (b) shown in the Earth\u2013Moon rotating frame; low-thrust orbit\n\n(black), unstable manifold (red), stable manifold (blue)\n\n402 F. Topputo and E. Belbruno\n\n\n\n16.5 Conclusions\n\nIn this chapter the preliminary design and assessment of low-energy transfers have\n\nbeen treated under an optimization perspective. The principles of optimal control\n\nand trajectory optimization are applied to the dynamics of the three- and four-body\n\nproblem through a direct transcription approach. This method\u2019s robustness allows\n\nus to deal with the high nonlinearities that characterize the low-energy transfers.\n\nTwo different application cases are shown. The first is a classic Earth\u2013Moon\n\nexterior low-energy transfer defined in the vector field generated by the Sun,\n\nthe Earth, and the Moon. Optimal solutions requiring about 200 m/s less DV\nthan the Hohmann transfers have been achieved. In the second application case,\n\nthe low-thrust propulsion is used to reach a L1 periodic orbit in the Earth\u2013Moon\nsystem. It has been shown that the resulting low-energy, low-thrust transfers can be\n\nused in the context of an Earth\u2013Moon transportation system.\n\nReferences\n\n1. Belbruno, E.: Lunar capture orbits, a method of constructing Earth\u2013Moon trajectories and the\n\nlunar GAS mission. In: AIAA Paper 97\u20131054, Proceedings of the AIAA/DGLR/JSASS\n\nInternational Electric Propulsion Conference, Colorado Springs, Colorado (1987)\n\n2. Belbruno, E.: The dynamical mechanism of ballistic lunar capture transfers in the four-body\n\nproblem from the perspective of invariant manifolds and Hill\u2019s regions. In: Technical Report,\n\nCentre De Recerca Matematica, Barcelona, Spain (1994)\n\n3. Belbruno, E.: Capture Dynamics and Chaotic Motions in Celestial Mechanics: With\n\nApplications to the Construction of Low Energy Transfers. Princeton University Press, New\n\nJersey (2004)\n\n4. Belbruno, E., Miller, J.: Sun-perturbed Earth-to-Moon transfers with ballistic capture. J. Guid.\n\nContr. Dynam. 16, 770\u2013775 (1993)\n\n5. Betts, J.: Survey of numerical methods for trajectory optimization. J. Guid. Contr. Dynam. 21,\n\n193\u2013207 (1998)\n\n6. Betts, J.: Practical Methods for Optimal Control Using Nonlinear Programming. SIAM,\n\nPhiladephia (2000)\n\n7. Bryson, A., Ho, Y.: Applied Optimal Control. Wiley, New York (1975)\n\n8. Canalias, E., Cobos, J., Masdemont, J.: Impulsive transfers between lissajous libration point\n\norbits. J. Astronaut. Sci. 51, 361\u2013390 (2003)\n\n9. Enright, P., Conway, B.: Discrete approximations to optimal trajectories using direct transcrip-\n\ntion and nonlinear programming. J. Guid. Contr. Dynam. 15, 994\u20131002 (1992)\n\n10. Go?mez, G., Jorba, A., Masdemont, J., Simo?, C.: Study of the transfer from the Earth to a Halo\n\nOrbit around the Equilibrium Point L1. Celestial Mech. Dyn. Astron. 56, 541\u2013562 (1993)\n11. Go?mez, G., Koon, W., Lo, M., Marsden, J., Masdemont, J., Ross, S.: Invariant manifolds, the\n\nspatial three-body problem and space mission design. Adv. Astronaut. Sci. 109(1), 3\u201322\n\n(2001)\n\n12. Go?mez, G., Masdemont, J., Mondelo, J.: Libration point orbits: a survey from the dynamical\n\npoint of view. In: Proceedings of the Libration Point Orbits and Application Conference,\n\nGirona, Spain (2002)\n\n13. Go?mez, G., Mondelo, J.: The dynamics around the collinear equilibrium points of the RTBP.\n\nPhys. D 157, 283\u2013321 (2001)\n\n16 Optimization of Low-Energy Transfers 403\n\n\n\n14. Howell, K., Barden, B., Lo, M.: Application of dynamical systems theory to trajectory design\n\nfor libration point missions. J. Astronaut. Sci. 45, 161\u2013178 (1997)\n\n15. Jehn, R., Campagnola, S., Garc??a, D., Kemble, S.: Low-thrust approach and gravitational\n\ncapture at mercury. In: Proceedings of the 18th International Symposium on Space Flights\n\nDynamics, vol. 584, p. 487 (2004)\n\n16. Jorba, A., Masdemont, J.: Dynamics in the center manifold of the collinear points of the\n\nrestricted three body problem. Phys. D 132, 189\u2013213 (1999)\n\n17. Koon, W., Lo, M., Marsden, J., Ross, S.: Heteroclinic connections between periodic orbits and\n\nresonance transitions in celestial mechanics. Chaos 10, 427\u2013469 (2000)\n\n18. Koon, W., Lo, M., Marsden, J., Ross, S.: Low energy transfer to the Moon. Celestial Mech.\n\nDyn. Astron. 81, 63\u201373 (2001)\n\n19. Lo, M., Ross, S.: Low energy interplanetary transfers using the invarian manifolds of L1, L2,\nand halo orbits. In: Paper AAS 98\u2013136, Proceedings of the AAS/AIAA Space Flight Mechan-\n\nics Meeting (1998)\n\n20. Mingotti, G., Topputo, F., Bernelli-Zazzera, F.: Combined optimal low-thrust and stable-manifold\n\ntrajectories to the earth\u2013moon halo orbits. AIP Conference Proceedings 886, 100\u2013110 (2007).\n\nDOI 10.1063/1.2710047\n\n21. Mingotti, G., Topputo, F., Bernelli-Zazzera, F.: Low-energy, low-thrust transfers to the moon.\n\nCelestial Mech. Dyn. Astron. 105(1\u20133), 61\u201374 (2009). DOI 10.1007/ s10569-009-9220-7\n\n22. Mingotti, G., Topputo, F., Bernelli-Zazzera, F.: Earth-Mars transfers with ballistic escape and\n\nlow-thrust capture. Celestial Mech. Dyn. Astron. 110(2), 169\u2013188 (2011). DOI 10.1007/\n\ns10569-011-9343-5\n\n23. Mingotti, G., Topputo, F., Bernelli-Zazzera, F.: Optimal low-thrust invariant manifold\n\ntrajectories via attainable sets. J. Guid. Contr. Dynam. 34(6), 1644\u20131656 (2011). DOI\n\n10.1007/s10569-011-9343-5\n\n24. Mingotti, G., Topputo, F., Bernelli-Zazzera, F.: Efficient invariant-manifold, low-thrust planar\n\ntrajectories to the moon. Comm. Nonlinear. Sci. Numer. Simulat. 17(2), 817\u2013831 (2012). DOI\n\n10.1016/j.cnsns.2011.06.033\n\n25. Roncoli, R., Fujii, K.: Mission design overview for the gravity recovery and interior laboratory\n\n(GRAIL) mission. In: Paper AIAA 2010\u20138383, AIAA Guidance, Navigation, and Control\n\nConference, Toronto, Ontario, Canada, 2\u20135 August, 2010\n\n26. Simo?, C., Go?mez, G., Jorba, A., Masdemont, J.: The bicircular model near the triangular\n\nlibration points of the RTBP. From Newton to Chaos, pp. 343\u2013370. Plenum Press, New York\n\n(1995)\n\n27. Szebehely, V.: Theory of Orbits: The Restricted Problem of Three Bodies. Academic, London\n\n(1967)\n\n28. Topputo, F., Vasile, M., Bernelli-Zazzera, F.: Earth-to-Moon low energy transfers targeting\n\nL1hyperbolic transit orbits. Ann. New York Acad. Sci. 1065, 55\u201376 (2005)\n29. Topputo, F., Vasile, M., Bernelli-Zazzera, F.: Low energy interplanetary transfers exploiting\n\ninvariant manifolds of the restricted three-body problem. J. Astronaut. Sci. 53(4), 353\u2013372\n\n(2005)\n\n30. Von Stryk, O., Bulirsch, R.: Direct and indirect methods for trajectory optimization. Ann.\n\nOper. Res. 37(1), 357\u2013373 (1992)\n\n31. Yagasaki, K.: Sun-perturbated earth-to-moon transfers with low energy and moderate flight\n\ntime. Celestial Mech. Dynam. Astron. 90, 197\u2013212 (2004)\n\n404 F. Topputo and E. Belbruno\n\n\n\tModeling and Optimization in Space Engineering\n\tPreface\n\tAbout the Editors\n\tAcknowledgements\n\tContents\n\tChapter 1 Model Development and Optimization for Space Engineering: Concepts, Tools, Applications, and Perspectives\n\tChapter 2 Practical Direct Collocation Methods for Computational Optimal Control\n\tChapter 3 Formation Flying Control for Satellites: Anti-windup Based Approach\n\tChapter 4 The ESA NLP Solver WORHP\n\tChapter 5 Global Optimization Approaches for Optimal Trajectory Planning\n\tChapter 6 Indirect Methods for the Optimization of Spacecraft Trajectories\n\tChapter 7 Trajectory Optimization for Launchers and Re-entry Vehicles\n\tChapter 8 Global Optimization of Interplanetary Transfers with Deep Space Maneuvers Using Differential Algebra\n\tChapter 9 A Mixed Integer Linear Programming Model for Traffic Logistics Management at the International Space Station\n\tChapter 10 Global Optimization Approaches to Sensor Placement: Model Versions and Illustrative Results\n\tChapter 11 Space Module On-Board Stowage Optimization by Exploiting Empty Container Volumes\n\tChapter 12 Optimization Models for the Three-Dimensional Container Loading Problem with Practical Constraints\n\tChapter 13 Optimal Magnetic Cleanliness Modeling of Spacecraft\n\tChapter 14 Integrated Design-Trajectory Optimization for Hybrid Rocket Motors\n\tChapter 15 Mathematical Models of Placement Optimisation: Twoand Three-Dimensional Problems and Applications\n\tChapter 16 Optimization of Low-Energy Transfers\n\n\n\n"}