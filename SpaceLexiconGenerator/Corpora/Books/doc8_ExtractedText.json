{"content": "\nSpringer Aerospace Technology\n\nA Combined \nData and Power \nManagement \nInfrastructure\n\nJens Eickhoff    Editor\n\nFor Small Satellites\n\n\n\nSpringer Aerospace Technology\n\nFor further volumes:\nhttp://www.springer.com/series/8613\n\nhttp://www.springer.com/series/8613\n\n\nJens Eickhoff\nEditor\n\nA Combined Data and\nPower Management\nInfrastructure\n\nFor Small Satellites\n\n123\n\n\n\nEditor\nJens Eickhoff\nInstitut f\u00fcr Raumfahrtsyteme\nUniversit\u00e4t Stuttgart\nStuttgart\nGermany\n\nISSN 1869-1730 ISSN 1869-1749 (electronic)\nISBN 978-3-642-35556-1 ISBN 978-3-642-35557-8 (eBook)\nDOI 10.1007/978-3-642-35557-8\nSpringer Heidelberg New York Dordrecht London\n\nLibrary of Congress Control Number: 2013936520\n\n? Springer-Verlag Berlin Heidelberg 2013\nThis work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of\nthe material is concerned, specifically the rights of translation, reprinting, reuse of illustrations,\nrecitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission or\ninformation storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar\nmethodology now known or hereafter developed. Exempted from this legal reservation are brief\nexcerpts in connection with reviews or scholarly analysis or material supplied specifically for the\npurpose of being entered and executed on a computer system, for exclusive use by the purchaser of the\nwork. Duplication of this publication or parts thereof is permitted only under the provisions of\nthe Copyright Law of the Publisher\u2019s location, in its current version, and permission for use must\nalways be obtained from Springer. Permissions for use may be obtained through RightsLink at the\nCopyright Clearance Center. Violations are liable to prosecution under the respective Copyright Law.\nThe use of general descriptive names, registered names, trademarks, service marks, etc. in this\npublication does not imply, even in the absence of a specific statement, that such names are exempt\nfrom the relevant protective laws and regulations and therefore free for general use.\nWhile the advice and information in this book are believed to be true and accurate at the date of\npublication, neither the authors nor the editors nor the publisher can accept any legal responsibility for\nany errors or omissions that may be made. The publisher makes no warranty, express or implied, with\nrespect to the material contained herein.\n\nCover picture original by Sabine Leib, EADS Cassidian\n\nPrinted on acid-free paper\n\nSpringer is part of Springer Science+Business Media (www.springer.com)\n\n\n\nForeword\n\nInnovation is the key for success in technical fields and thus cannot be underes-\ntimated in space engineering domains working at the cutting edge of feasibility.\nTherefore, agile industry is continuously supporting innovative developments\nextending technical limits or abandoning classical design paths. It is particularly\ndifficult to implement such innovative approaches straightforward in commercial\nsatellite projects, in agency funded productive systems like operational Earth\nobservation missions, or in navigation constellation programs.\n\nThe ideal platforms for \u2018\u2018innovation verification\u2019\u2019 missions are governmental or\nacademic technology demonstrator programs. These demonstrator programs allow\nfor rapid prototyping of new capabilities and satellite architectures while keeping\ncapital expenditures as low as possible.\n\nTechnology development partnerships between industry and academic institu-\ntions are extensively stressed and often cited. But for partnering in leading edge\nareas like the Combined Data and Power Management Infrastructure (CDPI),\ndescribed in this book, such academic/Industry partnerships are extremely rare to\nfind since they require substantial know-how, both on the industry and the uni-\nversity side.\n\nHowever, once established, such cooperations provide a competitive edge for\nboth the university as well as the industry partners. For industry the advantage is\ntwofold because it allows the qualification of new space technology and in parallel\nstudents and Ph.D. candidates are educated to a knowledge level which is far\nabove the normal standard for graduates.\n\nFor Astrium the University of Stuttgart has become a strategic technology\npartner over the past decade due to the extensive small satellite programs that have\nbeen established at their premises. These programs together with the state-of-the-art\nfacilities at the Institute of Space Systems, hosted at the \u2018\u2018Raumfahrtzentrum\nBaden-W\u00fcrttemberg\u2019\u2019, go far beyond typical university CubeSat programs. The\nFLP satellite, for example, will qualify industry relevant flight hardware on board a\nuniversity satellite for the first time in the German context.\n\nFor this reason Astrium has invested significantly in the development of this\nSmallSat program and in particular in this CDPI, both through direct sponsoring as\nwell as through provision of manpower. The other consortium partners, Aeroflex,\n\nv\n\n\n\n4Links, Aeroflex Gaisler, Vectronic Aerospace, and HEMA Kabeltechnik, which\nall are close partners of Astrium, have also invested significant effort for devel-\nopment of their subsystems and have provided their SW/HW contributions at a\nuniversity compatible cost basis.\n\nFor the German Aerospace Center this development is a key example of a\nsuccessful industry/academic cooperation\u2014a transcontinental one moreover. The\ntechnical product was developed in a 3.5 years timeframe, which is comparable\nwith industry. The overall project concept with an experienced industry expert as\nteam leader, industry suppliers for subsystems, and Ph.D. students complementing\nthe team from the research side, the CDPI product testing and the integration into\nthe satellite, proved to be a successful strategy.\n\nThis book is unique in that it presents in great detail a successful model for\nindustry-university collaboration in the development of small satellites that aspire\nto cutting edge operational performance. We envision the beginnings of a world-\nwide trend for collaborative small satellite development with centers of excellence\nin Europe, North America, and Asia, with other nations also joining in the not too\ndistant future.\n\nDecember 2012 Evert Dudok, Director Astrium GmbH\nMunich, Germany\n\nProf. Dr. rer. nat. Hans-Peter R\u00f6ser\nInstitute of Space Systems, Stuttgart, Germany\n\nProf. Dr.-Ing. Johann-Dietrich W\u00f6rner\nGerman Aerospace Center DLR, Cologne, Germany\n\nProf. Dr.-Ing. Olivier L. de Weck\nDepartment of Aeronautics and Astronautics, MIT, Cambridge, USA\n\nvi Foreword\n\n\n\nPreface\n\nThe Combined Data and Power Management Infrastructure (CDPI) described in\nthis book is a functional merging of a satellite Onboard Computer and a Power\nControl Unit. It was developed in the frame of the Small Satellites Program at the\nUniversity of Stuttgart, Germany.\n\nIn 2009, the need became evident for a suitable Onboard Computer design for\nthe small satellite FLP (also known as \u2018\u2018Flying Laptop\u2019\u2019). It had to meet the\nstringent performance, mass, volume, and power consumption constraints imposed\nby the 130 kg FLP satellite, with its full-featured ACS, diverse payloads, and\ncomplete CCSDS telecommand and telemetry standard compliance.\n\nThus one of my first tasks as senior engineer was to identify a design for an\nonboard computer which was required to be\n\n\u2022 space proof w.r.t. radiation hardness and electromagnetic space conditions,\n\u2022 compact enough for the target satellite platform (a cube of 60 x 70 x 80 cm),\n\u2022 powerful enough to run a realtime operating system,\n\u2022 suitable to support professional CCSDS-based satellite operations,\n\u2022 and limited in power consumption.\n\nConsumer electronic components for the onboard computer were out of the\nscope of this project considering the need for robustness against the space envi-\nronment. Classic space industry OBC devices were not appropriate with regard to\ngeometry and mass, much less cost considerations. The only realistic option was to\nfind consortium partners from the space industry with expert knowledge in diverse\nfields who could supply the institute with Onboard Computer components\u2014\naltogether forming a complete, redundant OBC. Thus the task was to define a\ncompletely modular, \u2018\u2018LEGO? like\u2019\u2019 design which allowed the subcontracting of\nentire functional OBC boards to consortium partners. The overview of the\nachieved design solution is described in Chap. 1.\n\nThe requirements on the OBC system, especially with respect to potential\nhardware failure robustness and the handling of different types of external analog\nand digital interfaces, led to a functional merging between OBC and the satellite\u2019s\nPower Control and Distribution Unit (PCDU), resulting in a very innovative\ndesign\u2014the so-called CDPI.\n\nvii\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\nAt end of the flight unit\u2019s development the consortium decided to provide a\nsingle consistent documentation of the developed CDPI Infrastructure. The tech-\nnical overview should be available for other university students in a sort of mix\nbetween technical brochure and user guide. This book also might be of interest for\nfuture university or industry partners who intend to order in Stuttgart rebuilds/\nadaptations of the CDPI infrastructure or even the entire satellite bus for their\nmissions.\n\nDecember 2012 Prof. Dr.-Ing. Jens Eickhoff\n\nviii Preface\n\n\n\nAcknowledgments\n\nThis system development of a completely new and ultracompact Onboard Com-\nputer plus the functional merging of data and power management FDIR functions\nof both Onboard Computer (OBC), and Power Control and Distribution Unit\n(PCDU), would not have been possible without support from many sides to which\nwe are indebted.\n\nFirst of all in the name of the entire institute I would like to thank Evert Dudok,\nDirector Astrium GmbH, Germany, for taking over the funding of the FM Pro-\ncessor-Boards and for their donation to the institute as in-kind sponsoring at the\ninauguration of the \u2018\u2018Raumfahrtzentrum Baden-W\u00fcrttemberg\u2019\u2019 in 2011. Within\nAstrium I am also very much obliged to my site director in Friedrichshafen,\nEckard Settelmeyer, and to my Section and Department Heads, J\u00f6rg Flemmig, and\nVolker Debus, for supporting this coaching activity in addition to my tasks at\nAstrium.\n\nSecondly as overall system designer I am very much indebted to Hans-Peter\nR\u00f6ser, the IRS institute director, who gave me plenty of range to conceptualize the\noverall system architecture, to find the consortium partners and negotiate with\nthem, and to elaborate and finally verify the design at unit and system level. Last\nbut not least it was him organizing the funding of all institute procured\ncomponents.\n\nSpecial thanks goes to the industry partners who joined this project, Aeroflex\nColorado Springs, Inc. CO USA, Aeroflex Gaisler AB Sweden, 4Links Ltd. UK,\nVectronic Aerospace GmbH and HEMA Kabeltechnik GmbH & Co. KG, Ger-\nmany. It is absolutely non-standard that a university project is supported so\nintensively by industrial global players.\n\nIn 2009, I had just taken over the role of the engineering coach of the FLP\nsatellite and was standing empty-handed, lacking a convincing OBC solution for\nthe satellite. My first idea was to upgrade one of the Aeroflex Gaisler development\nboards. I contacted Jiri Gaisler at the DASIA conference in 2009 and herewith I\nexpress my gratitude to him for handing over my problem to Aeroflex Inc. USA.\nThey were just developing a Single Board Computer based on the LEON3FT chip\nUT699. From this initial contact, the fruitful cooperation between the university\nand Aeroflex evolved.\n\nix\n\n\n\nConcerning the OBC development the university team is indebted to Aeroflex\nand their German distributor Protec GmbH, Munich, for guiding us through the\nformalisms of the procurement of the CPU boards as being ITAR products. Ae-\nroflex helped us to fill out all relevant forms and explained the \u2018\u2018dos and don\u2019ts\u2019\u2019\nconcerning, shipment, and publishing rules under ITAR. The Processor-Boards\nwere provided under Technical Assistance Agreement TA-6151-10. The author\u2019s\nteam is also indebted to the Aeroflex management and particularly to Tony Jordan\nfor granting their chief developer Sam Stratton the permission to participate in this\nbook and for reviewing the Aeroflex chapter concerning ITAR compliance.\n\nFor the publishing of this book the author\u2019s team thanks Mrs. Sterritt-Brunner\nand Dr. Christoph Baumann and the Springer publishing team for their assistance.\n\nLast but not least as project manager of the CDPI, I do not want to forget to\nexpress my gratitude and respect to the highly motivated FLP team of Ph.D.s and\nstudents and in particular to those Ph.D.s which became co-authors in this book.\n\nDecember 2012 Prof. Dr.-Ing. Jens Eickhoff\n\nx Acknowledgments\n\n\n\nDonation for Life\n\nIn 2011, during the CDPI development, the 10-year-old daughter of one of the\nauthors was diagnosed to be suffering from a breakdown of blood cell production\nin the bone marrow\u2014a variant of blood cancer. She luckily could be saved and\nrecovered by means of a bone marrow transplant. Due to this experience the\nauthors decided to sponsor with the royalties of this book the German and\ninternational bone marrow donor\u2019s database:\n\nDKMS Deutsche Knochenmarks-\npenderdatei gemeinn\u00fctzige Gesell-\nschaft mbH\nPhone: ?49-(0)7071-9430\n\nGerman Website: https://www.\ndkms.de/\n\nUS Website: http://www.dkmsa-\nmericas.org/\n\nxi\n\nhttps://www.dkms.de/\nhttps://www.dkms.de/\nhttp://www.dkmsamericas.org/\nhttp://www.dkmsamericas.org/\n\n\nContents\n\n1 The System Design Concept . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\n1.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1\n1.2 The Onboard Computer Concept Baseline . . . . . . . . . . . . . . 2\n1.3 The PCDU as Analog RIU. . . . . . . . . . . . . . . . . . . . . . . . . 5\n1.4 Common System Reconfiguration Controller . . . . . . . . . . . . 6\n\n1.4.1 Component Functions During Failure Handling . . . 7\n1.4.1.1 Failure Type 1: Failures Identifiable\n\nby the Running OBSW . . . . . . . . . . . . . . 7\n1.4.1.2 Failure Type 2: Crash of the OBSW\n\nand Auto-Reconfiguration . . . . . . . . . . . . 8\n1.4.1.3 Failure Type 3: Crash of OBSW\n\nand Reconfiguration from Ground . . . . . . 8\n1.4.1.4 Failure Type 4: Power Bus Undervoltage\n\nFailures . . . . . . . . . . . . . . . . . . . . . . . . . 9\n1.4.2 Innovation: A Combined-Controller for all FDIR\n\nFunctions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9\n1.4.3 Failure Management with the\n\nCombined-Controller . . . . . . . . . . . . . . . . . . . . . . 11\n1.4.4 Advantages of the Combined-Controller\n\nApproach . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11\n1.5 Completeness of System Architecture . . . . . . . . . . . . . . . . . 12\n1.6 Component Selection . . . . . . . . . . . . . . . . . . . . . . . . . . . . 14\n\n1.6.1 Processor-Boards. . . . . . . . . . . . . . . . . . . . . . . . . 14\n1.6.2 CCSDS Decoder/Encoder. . . . . . . . . . . . . . . . . . . 17\n1.6.3 I/O and CCSDS-Board. . . . . . . . . . . . . . . . . . . . . 21\n1.6.4 OBC Power-Boards . . . . . . . . . . . . . . . . . . . . . . . 22\n1.6.5 The PCDU with Enhanced Functionality . . . . . . . . 23\n\n1.7 Testing the CDPI in an Integrated Environment . . . . . . . . . . 23\n1.8 The Flight Model Assembly. . . . . . . . . . . . . . . . . . . . . . . . 24\n1.9 Conceptual Outlook for future Missions . . . . . . . . . . . . . . . 25\n\n2 The OBC Processor-Boards . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27\n2.1 The Processor-Boards as ITAR Item . . . . . . . . . . . . . . . . . . 27\n2.2 The Processor-Board: A Single Board Computer . . . . . . . . . 28\n\nxiii\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec2\n\n\n2.3 Technical Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n2.3.1 The OBC Microprocessor Device . . . . . . . . . . . . . 29\n2.3.2 The OBC Memory Configuration . . . . . . . . . . . . . 30\n2.3.3 The OBC FPGA for Miscellaneous Functions. . . . . 31\n\n2.4 The OBC Processor-Board Functional Overview . . . . . . . . . 32\n2.5 The OBC Processor-Board Memory Interface. . . . . . . . . . . . 33\n2.6 The OBC Processor-Board SpaceWire Interface . . . . . . . . . . 36\n2.7 Miscellaneous Functions . . . . . . . . . . . . . . . . . . . . . . . . . . 37\n\n2.7.1 NVMEM Chip Enable . . . . . . . . . . . . . . . . . . . . . 38\n2.7.2 SRAM Chip Enable. . . . . . . . . . . . . . . . . . . . . . . 38\n2.7.3 Pulse Per Second Interface . . . . . . . . . . . . . . . . . . 38\n2.7.4 Watchdog Signal and LEON3FT Reset . . . . . . . . . 39\n2.7.5 RS422 Interface . . . . . . . . . . . . . . . . . . . . . . . . . 39\n2.7.6 Resets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39\n2.7.7 Clock Interfaces . . . . . . . . . . . . . . . . . . . . . . . . . 40\n2.7.8 DSU/Ethernet Interface Card (DEI) . . . . . . . . . . . . 40\n\n2.8 Power Specifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41\n2.9 Mechanical Design and Dimensions . . . . . . . . . . . . . . . . . . 41\n\n3 The I/O-Boards . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43\n3.1 Common Design for I/O and CCSDS-Boards . . . . . . . . . . . . 43\n3.2 The I/O-Board as Remote Interface Unit . . . . . . . . . . . . . . . 44\n3.3 The I/O-Board as OBC Mass Memory Unit . . . . . . . . . . . . . 46\n3.4 I/O-Board Hot Redundant Operation Mode . . . . . . . . . . . . . 46\n3.5 I/O-Board RMAP Interface . . . . . . . . . . . . . . . . . . . . . . . . 47\n\n3.5.1 Board Identification for I/O-Boards . . . . . . . . . . . . 47\n3.5.2 I/O Board Interface RMAP Addresses . . . . . . . . . . 50\n3.5.3 Returned RMAP Status Values . . . . . . . . . . . . . . . 50\n\n3.6 I/O Circuits, Grounding and Terminations . . . . . . . . . . . . . . 51\n3.7 I/O-Board Interface Access Protocols . . . . . . . . . . . . . . . . . 54\n3.8 I/O-Board Connectors and Pin Assignments . . . . . . . . . . . . . 56\n\n3.8.1 Connectors-A and C (OBC internal) . . . . . . . . . . . 56\n3.8.2 Connector-B (OBC internal) . . . . . . . . . . . . . . . . . 56\n3.8.3 Connectors-D and E (OBC external) . . . . . . . . . . . 57\n\n3.9 I/O and CCSDS-Board Radiation Characteristic . . . . . . . . . . 58\n3.10 I/O and CCSDS-Board Temperature Limits . . . . . . . . . . . . . 58\n3.11 4Links Development Partner . . . . . . . . . . . . . . . . . . . . . . . 58\n\n4 The CCSDS Decoder/Encoder Boards . . . . . . . . . . . . . . . . . . . . . 59\n4.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n4.2 Architectural Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . 61\n\n4.2.1 Interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64\n4.2.2 Command Link Control Word Coupling . . . . . . . . 65\n4.2.3 Clock and Reset . . . . . . . . . . . . . . . . . . . . . . . . . 65\n\nxiv Contents\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec100\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec100\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec5\n\n\n4.2.4 Performance . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65\n4.2.5 Telemetry Encoder . . . . . . . . . . . . . . . . . . . . . . . 65\n\n4.2.5.1 Telemetry Encoder Specification . . . . . . . 66\n4.2.5.2 Virtual Channels 0, 1, 2 and 3 . . . . . . . . . 67\n4.2.5.3 Virtual Channel 7. . . . . . . . . . . . . . . . . . 68\n\n4.2.6 Telecommand Decoder . . . . . . . . . . . . . . . . . . . . 68\n4.2.6.1 Telecommand Decoder Specification . . . . 68\n4.2.6.2 Software Virtual Channel . . . . . . . . . . . . 69\n4.2.6.3 Hardware Virtual Channel . . . . . . . . . . . . 69\n\n4.2.7 SpaceWire Link Interfaces . . . . . . . . . . . . . . . . . . 70\n4.2.8 On-Chip Memory . . . . . . . . . . . . . . . . . . . . . . . . 70\n4.2.9 Signal Overview . . . . . . . . . . . . . . . . . . . . . . . . . 70\n\n4.3 Telemetry Encoder . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n4.3.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71\n4.3.2 Layers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72\n\n4.3.2.1 Data Link Protocol Sub-layer. . . . . . . . . . 73\n4.3.2.2 Synchronization and Channel Coding\n\nSub-Layer . . . . . . . . . . . . . . . . . . . . . . . 73\n4.3.2.3 Physical Layer . . . . . . . . . . . . . . . . . . . . 73\n\n4.3.3 Data Link Protocol Sub-Layer . . . . . . . . . . . . . . . 73\n4.3.3.1 Physical Channel . . . . . . . . . . . . . . . . . . 73\n4.3.3.2 Virtual Channel Frame Service . . . . . . . . 74\n4.3.3.3 Virtual Channel Generation:\n\nVirtual Channels 0, 1, 2 and 3 . . . . . . . . . 74\n4.3.3.4 Virtual Channel Generation:\n\nIdle Frames\u2014Virtual Channel 7. . . . . . . . 74\n4.3.3.5 Virtual Channel Multiplexing . . . . . . . . . 74\n4.3.3.6 Master Channel Generation . . . . . . . . . . . 75\n4.3.3.7 All Frame Generation . . . . . . . . . . . . . . . 76\n\n4.3.4 Synchronization and Channel Coding Sub-Layer. . . 76\n4.3.4.1 Attached Synchronization Marker. . . . . . . 76\n4.3.4.2 Reed-Solomon Encoder. . . . . . . . . . . . . . 76\n4.3.4.3 Pseudo-Randomizer . . . . . . . . . . . . . . . . 76\n4.3.4.4 Convolutional Encoder . . . . . . . . . . . . . . 76\n\n4.3.5 Physical Layer . . . . . . . . . . . . . . . . . . . . . . . . . . 77\n4.3.5.1 Non-Return-to-Zero Level Encoder . . . . . 77\n4.3.5.2 Clock Divider . . . . . . . . . . . . . . . . . . . . 77\n\n4.3.6 Connectivity . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77\n4.3.7 Operation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78\n\n4.3.7.1 Descriptor Setup. . . . . . . . . . . . . . . . . . . 78\n4.3.7.2 Starting Transmissions . . . . . . . . . . . . . . 79\n4.3.7.3 Descriptor Handling After Transmission . . 80\n\n4.3.8 Registers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81\n4.3.9 Signal Definitions and Reset Values . . . . . . . . . . . 82\n\nContents xv\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec23\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec23\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec24\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec24\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec25\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec25\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec26\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec26\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec27\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec27\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec27\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec28\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec28\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec28\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec29\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec29\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec30\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec30\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec31\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec31\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec32\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec32\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec33\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec33\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec34\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec34\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec35\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec35\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec36\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec36\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec37\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec37\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec38\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec38\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec39\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec39\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec40\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec40\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec41\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec41\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec42\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec42\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec43\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec43\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec44\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec44\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec45\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec45\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec46\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec46\n\n\n4.3.10 TM Encoder: Virtual Channel Generation . . . . . . . 82\n4.3.11 TM Encoder: Descriptor . . . . . . . . . . . . . . . . . . . 82\n4.3.12 TM Encoder: Virtual Channel Generation Function\n\nInput Interface . . . . . . . . . . . . . . . . . . . . . . . . . . 83\n4.4 TC Decoder: Software Commands . . . . . . . . . . . . . . . . . . . 84\n\n4.4.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84\n4.4.1.1 Concept. . . . . . . . . . . . . . . . . . . . . . . . . 85\n4.4.1.2 Functions and Options . . . . . . . . . . . . . . 85\n\n4.4.2 Data Formats . . . . . . . . . . . . . . . . . . . . . . . . . . . 86\n4.4.3 Coding Layer . . . . . . . . . . . . . . . . . . . . . . . . . . . 86\n\n4.4.3.1 Synchronization and Selection\nof Input Channel . . . . . . . . . . . . . . . . . . 87\n\n4.4.3.2 Codeblock Decoding. . . . . . . . . . . . . . . . 87\n4.4.3.3 De-Randomizer . . . . . . . . . . . . . . . . . . . 87\n4.4.3.4 Non-Return-to-Zero: Mark. . . . . . . . . . . . 88\n4.4.3.5 Design Specifics. . . . . . . . . . . . . . . . . . . 88\n4.4.3.6 Direct Memory Access . . . . . . . . . . . . . . 89\n\n4.4.4 Transmission . . . . . . . . . . . . . . . . . . . . . . . . . . . 89\n4.4.4.1 Data Formatting . . . . . . . . . . . . . . . . . . . 91\n4.4.4.2 CLTU Decoder State Diagram . . . . . . . . . 91\n4.4.4.3 Nominal . . . . . . . . . . . . . . . . . . . . . . . . 92\n4.4.4.4 CASE 1 . . . . . . . . . . . . . . . . . . . . . . . . 92\n4.4.4.5 CASE 2 . . . . . . . . . . . . . . . . . . . . . . . . 92\n4.4.4.6 Abandoned . . . . . . . . . . . . . . . . . . . . . . 93\n\n4.4.5 Relationship Between Buffers and FIFOs. . . . . . . . 93\n4.4.6 Command Link Control Word Interface. . . . . . . . . 93\n4.4.7 Configuration Interface (AMBA AHB slave) . . . . . 94\n4.4.8 Interrupts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94\n4.4.9 Registers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95\n4.4.10 Signal Definitions and Reset Values . . . . . . . . . . . 95\n\n4.5 TC Decoder: Hardware Commands . . . . . . . . . . . . . . . . . . . 96\n4.5.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96\n4.5.2 Operation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96\n\n4.5.2.1 All Frames Reception . . . . . . . . . . . . . . . 96\n4.5.2.2 Master Channel Demultiplexing . . . . . . . . 97\n4.5.2.3 Virtual Channel Demultiplexing . . . . . . . . 97\n4.5.2.4 Virtual Channel Reception . . . . . . . . . . . 97\n4.5.2.5 Virtual Channel Segment Extraction . . . . . 98\n4.5.2.6 Virtual Channel Packet Extraction . . . . . . 98\n4.5.2.7 UART Interfaces . . . . . . . . . . . . . . . . . . 99\n\n4.5.3 Telecommand Transfer Frame Format: Hardware\nCommands . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99\n\n4.5.4 Signal Definitions and Reset Values . . . . . . . . . . . 100\n\nxvi Contents\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec47\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec47\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec48\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec48\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec49\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec49\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec49\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec50\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec50\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec51\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec51\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec52\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec52\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec53\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec53\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec54\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec54\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec55\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec55\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec56\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec56\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec56\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec57\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec57\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec58\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec58\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec59\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec59\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec60\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec60\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec61\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec61\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec62\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec62\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec63\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec63\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec64\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec64\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec65\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec65\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec66\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec66\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec67\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec67\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec68\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec68\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec69\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec69\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec70\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec70\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec71\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec71\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec72\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec72\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec73\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec73\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec74\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec74\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec75\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec75\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec76\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec76\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec77\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec77\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec78\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec78\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec79\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec79\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec80\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec80\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec81\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec81\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec82\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec82\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec83\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec83\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec84\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec84\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec85\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec85\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec85\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec86\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec86\n\n\n4.6 SpaceWire Interface with RMAP Target . . . . . . . . . . . . . . . 100\n4.7 JTAG Debug Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . 100\n4.8 Diverse Features . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101\n4.9 CCSDS Processor Spacecraft Specific Configuration. . . . . . . 102\n\n5 The OBC Power-Boards . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103\n5.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103\n5.2 Power Conversion. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105\n\n5.2.1 The DC/DC Converters . . . . . . . . . . . . . . . . . . . . 105\n5.2.2 Start-Up Characterization of OBC Power\n\nConsumers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108\n5.2.3 Start-Up Behavior of the Power Supply Board . . . . 111\n5.2.4 Connection of Power Supply Board\n\nand OBC Power Consumers . . . . . . . . . . . . . . . . . 112\n5.3 Clock Strobe Signals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 113\n5.4 Heaters and Thermal Sensors . . . . . . . . . . . . . . . . . . . . . . . 114\n5.5 OBC Service Interface and JTAG Interface . . . . . . . . . . . . . 115\n5.6 Connector Configuration . . . . . . . . . . . . . . . . . . . . . . . . . . 116\n\n6 The OBC Internal Harness . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119\n6.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119\n\n6.1.1 Requirements . . . . . . . . . . . . . . . . . . . . . . . . . . . 120\n6.1.2 Challenges . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 120\n6.1.3 Realization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123\n\n6.2 Harness Design. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123\n6.2.1 Harness Engineering . . . . . . . . . . . . . . . . . . . . . . 123\n6.2.2 SpaceWire Harness . . . . . . . . . . . . . . . . . . . . . . . 125\n6.2.3 OBC Power Harness . . . . . . . . . . . . . . . . . . . . . . 127\n\n6.3 Verification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128\n6.4 Quality and Manufacturing Documentation . . . . . . . . . . . . . 131\n\n7 OBC Mechanical and Thermal Design . . . . . . . . . . . . . . . . . . . . 133\n7.1 Mechanical and Thermal Requirements . . . . . . . . . . . . . . . . 133\n7.2 Mechanical Design of the OBC . . . . . . . . . . . . . . . . . . . . . 135\n\n7.2.1 OBC Structure Concept . . . . . . . . . . . . . . . . . . . . 135\n7.2.2 Mechanical Dimensioning\n\nand Concept Validation . . . . . . . . . . . . . . . . . . . . 138\n7.3 Thermal Design of OBC . . . . . . . . . . . . . . . . . . . . . . . . . . 140\n\n7.3.1 Thermal Model . . . . . . . . . . . . . . . . . . . . . . . . . . 141\n7.3.2 Thermal Calculation Results. . . . . . . . . . . . . . . . . 144\n7.3.3 OBC Internal Heaters . . . . . . . . . . . . . . . . . . . . . 146\n\n7.4 OBC Housing Material Properties. . . . . . . . . . . . . . . . . . . . 149\n\nContents xvii\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec87\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec87\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec88\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec88\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec89\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec89\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec90\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4#Sec90\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7#Sec9\n\n\n8 The Power Control and Distribution Unit . . . . . . . . . . . . . . . . . . 151\n8.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151\n8.2 The PCDU in a Typical Power Supply Subsystem . . . . . . . . 152\n8.3 PCDU Unit Design Overview. . . . . . . . . . . . . . . . . . . . . . . 153\n\n8.3.1 PCDU Interfaces . . . . . . . . . . . . . . . . . . . . . . . . . 154\n8.3.2 PCDU Command Concept . . . . . . . . . . . . . . . . . . 155\n\n8.4 Boot-Up Sequence of the PCDU and PCDU Modes . . . . . . . 156\n8.5 Power Control and Distribution Functions . . . . . . . . . . . . . . 157\n8.6 PCDU Specific Functions in the CDPI Architecture . . . . . . . 160\n\n8.6.1 Analog Data Handling Concept . . . . . . . . . . . . . . 160\n8.6.2 Reconfiguration Logic for the OBC. . . . . . . . . . . . 161\n8.6.3 Reconfiguration Functionality for the Spacecraft. . . 164\n\n8.7 Diverse PCDU Functions . . . . . . . . . . . . . . . . . . . . . . . . . . 166\n8.7.1 Launcher Separation Detection . . . . . . . . . . . . . . . 167\n8.7.2 Control and Monitoring of Solar Panel\n\nDeployment . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167\n8.7.3 Control of the Payload Data Transmission\n\nSubsystem Power . . . . . . . . . . . . . . . . . . . . . . . . 168\n8.7.4 History Log Function . . . . . . . . . . . . . . . . . . . . . 168\n8.7.5 Time Synchronization Between Internal\n\nControllers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168\n8.7.6 Overvoltage Protection. . . . . . . . . . . . . . . . . . . . . 168\n8.7.7 Measurement of Test-String Characteristics . . . . . . 169\n\n8.8 PCDU Environmental Qualification Characteristics. . . . . . . . 169\n8.8.1 Thermal-Vacuum Limits . . . . . . . . . . . . . . . . . . . 169\n8.8.2 Radiation Limits . . . . . . . . . . . . . . . . . . . . . . . . . 169\n8.8.3 Vibration Limits . . . . . . . . . . . . . . . . . . . . . . . . . 170\n\n8.9 List of Connectors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 171\n8.10 PCDU Commands Overview . . . . . . . . . . . . . . . . . . . . . . . 172\n\n9 CDPI System Testing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173\n9.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173\n9.2 Test Scope . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174\n\n9.2.1 Test Conditions. . . . . . . . . . . . . . . . . . . . . . . . . . 175\n9.2.2 Involved Personnel . . . . . . . . . . . . . . . . . . . . . . . 176\n9.2.3 Test Program Simplifications . . . . . . . . . . . . . . . . 176\n\n9.3 Test Plan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 177\n9.3.1 PCDU Tests . . . . . . . . . . . . . . . . . . . . . . . . . . . . 178\n9.3.2 Processor-Board Tests . . . . . . . . . . . . . . . . . . . . . 179\n9.3.3 Power-Board Tests . . . . . . . . . . . . . . . . . . . . . . . 179\n9.3.4 CCSDS and I/O-Board Tests . . . . . . . . . . . . . . . . 180\n9.3.5 OBC Subsystem Tests . . . . . . . . . . . . . . . . . . . . . 181\n9.3.6 CDPI Reconfiguration Tests . . . . . . . . . . . . . . . . . 182\n\nxviii Contents\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec23\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec23\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec24\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec24\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec25\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8#Sec25\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec12\n\n\n9.4 EM Testbench Infrastructure . . . . . . . . . . . . . . . . . . . . . . . 183\n9.5 EM Test Execution and Results . . . . . . . . . . . . . . . . . . . . . 185\n\n9.5.1 STB Tests Stage 1: Connecting OBC\nProcessor-Board and S/C-Simulator. . . . . . . . . . . . 186\n\n9.5.2 STB Tests Stage 2: Connecting OBC\nProcessor-Board and CCSDS-Board . . . . . . . . . . . 186\n\n9.5.3 STB Tests Stage 3: Entire Command\nChain Bridging the RF Link . . . . . . . . . . . . . . . . . 187\n\n9.5.4 STB Tests Stage 4: Verify High Priority\nCommanding . . . . . . . . . . . . . . . . . . . . . . . . . . . 189\n\n9.5.5 STB Tests Stage 5: Commanding Equipment\nUnit Hardware . . . . . . . . . . . . . . . . . . . . . . . . . . 190\n\n9.5.6 STB Tests Stage 6: Performance Tests\nwith Attitude Control Software . . . . . . . . . . . . . . . 191\n\n9.6 FM Test Execution and Results . . . . . . . . . . . . . . . . . . . . . 193\n\n10 The Research Target Satellite . . . . . . . . . . . . . . . . . . . . . . . . . . . 195\n10.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195\n10.2 Orbit and Operational Modes . . . . . . . . . . . . . . . . . . . . . . . 196\n10.3 Mechanical Design and Launcher Interface . . . . . . . . . . . . . 196\n10.4 Technology and Payloads . . . . . . . . . . . . . . . . . . . . . . . . . 199\n10.5 Satellite Attitude Control System . . . . . . . . . . . . . . . . . . . . 200\n\n10.5.1 Sensors and Actuators . . . . . . . . . . . . . . . . . . . . . 200\n10.5.2 Control Modes . . . . . . . . . . . . . . . . . . . . . . . . . . 201\n\n10.6 Satellite Communication Links . . . . . . . . . . . . . . . . . . . . . . 202\n10.7 Satellite Electrical Architecture and Block Diagram . . . . . . . 204\n10.8 EMC Launcher and Primary Payload Compliance. . . . . . . . . 204\n\n11 CDPI Assembly Annexes and Data Sheets . . . . . . . . . . . . . . . . . . 205\n11.1 Processor-Board DSU/Ethernet Interface Card . . . . . . . . . . . 205\n11.2 CCSDS Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 208\n\n11.2.1 CCSDS Field Definition . . . . . . . . . . . . . . . . . . . 208\n11.2.2 Galois Field . . . . . . . . . . . . . . . . . . . . . . . . . . . . 209\n11.2.3 Telemetry Transfer Frame Format . . . . . . . . . . . . . 209\n11.2.4 Reed-Solomon Encoder Data Format . . . . . . . . . . . 210\n11.2.5 Attached Synchronization Marker . . . . . . . . . . . . . 211\n11.2.6 Telecommand Transfer Frame Format . . . . . . . . . . 211\n11.2.7 Command Link Control Word . . . . . . . . . . . . . . . 212\n11.2.8 Space Packet . . . . . . . . . . . . . . . . . . . . . . . . . . . 212\n11.2.9 Asynchronous Bit Serial Data Format . . . . . . . . . . 212\n11.2.10 SpaceWire Remote Memory Access Protocol . . . . . 213\n11.2.11 Command Link Control Word Interface. . . . . . . . . 213\n11.2.12 Waveform Formats . . . . . . . . . . . . . . . . . . . . . . . 213\n\nContents xix\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec12\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec13\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec14\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec14\n\n\n11.3 Selected TM Encoder Registers . . . . . . . . . . . . . . . . . . . . . 214\n11.4 TM Encoder: Virtual Channel Generation Registers . . . . . . . 217\n11.5 Selected TC Decoder Registers. . . . . . . . . . . . . . . . . . . . . . 218\n11.6 OBC Unit CAD Drawing. . . . . . . . . . . . . . . . . . . . . . . . . . 226\n11.7 OBC Unit I/O-Board Connector Pin Allocation . . . . . . . . . . 227\n11.8 OBC Unit CCSDS-Board Connector Pin Allocation . . . . . . . 231\n11.9 OBC Power-Board Connectors Pin Allocation . . . . . . . . . . . 232\n11.10 PCDU Unit CAD Drawing. . . . . . . . . . . . . . . . . . . . . . . . . 234\n11.11 PCDU Unit Connector Pin Allocations . . . . . . . . . . . . . . . . 235\n11.12 PCDU Switch and Fuse Allocation to Spacecraft\n\nEquipment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 236\n\nReferences . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 239\n\nIndex . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 245\n\nxx Contents\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec15\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec16\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec17\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec18\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec19\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec20\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec21\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec22\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec23\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec23\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec24\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec24\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11#Sec24\n\n\nAbbreviations\n\nGeneral Abbreviations\n\na.m. Above mentioned\ncf. Confer\ni.e. Id est (that is)\nw.r.t. With respect to\n\nTechnical Abbreviations\n\nADC Analog-to-Digital Converter\nAES Advanced Encryption Standard\nAIT Assembly, Integration, and Test\nASIC Application-Specific Integrated Circuit\nASM Attached Synchronization Marker\nAWG American Wire Gauge\nBBM Breadboard Model\nBCH Bose\u2013Chaudhuri\u2013Hocquenghem\nBCR Battery Charge Regulator\nBoL Begin of Life\nCAD Computer-Aided Design\nCADU Channel Access Data Unit\nCC Combined-Controller\nCCSDS Consultative Committee for Space Data Systems\nCD Clock Divider\nCDPI Combined Data and Power Management Infrastructure\nCE Convolutional Encoder\nCE Circuit Enable/Chip Enable\nCL Coding Layer\nCLCW Command Link Control Word\nCLTU Command Link Transfer Unit\nCMOS Complementary Metal Oxide Semiconductor\nCPDU Command Pulse Decoding Unit\n\nxxi\n\n\n\nCPU Central Processing Unit\nDEI DSU/Ethernet Interface\nDMA Direct Memory Access\nDoD Depth of Discharge\nDOM De-Orbiting Mechanism\nDRAM Dynamic Random Access Memory\nDSU Debug Support Unit\nECSS European Cooperation on Space Standardization\nEDAC Error Detection and Correction\nEEPROM Electrically Erasable PROM\nEM Engineering Model\nEMC Electromagnetic Compatibility\nEMI Electromagnetic Interference\nEPPL European Preferred Parts List\nESA European Space Agency\nESD Electrostatic Discharge\nFDIR Failure Detection, Isolation, and Recovery\nFIFO First-In-First-Out\nFM Flight Model\nFOG Fiberoptic Gyro\nFPGA Field Programmable Gate Array\nFRAM Ferroelectric Random Access Memory\nGPIO General Purpose Input/Output\nGPS Global Positioning System\nGSE Ground Support Equipment\nHF High Frequency\nHK Housekeeping\nHPC High Priority Command\nHW Hardware\nI/O Input/Output\nIADC United Nations Inter-Agency Space Debris Coordination Committee\nIC Integrated Circuit\nIF Interface\nIIC Inter-Integrated Circuit Bus\nIRS Institut f\u00fcr Raumfahrtsysteme, Institute of Space Systems, University\n\nof Stuttgart, Germany\nITAR International Traffic in Arms Regulations\nITU International Telecommunication Union\nJTAG Joint Test Actions Group\nLCL Latching Current Limiter\nLEOP Launch and Early Orbit Phase\nLISN Line Impedance Stabilization Network\nLTDN Local Time of Descending Node\nLVDS Low Voltage Differential Signaling\nMAP-ID Multiplexer Access Point Identifier\n\nxxii Abbreviations\n\n\n\nMCM Multi-Chip Module\nMCS Mission Control System\nMGM Magnetometer\nMGT Magnetotorquer\nMRAM Magnetoresistive Random Access Memory\nMSI Medium-Scale Integration\nMTQ Magnetotorquer\nNASA National Aeronautics and Space Administration\nNRZ-L Non-Return-to-Zero Level\nNRZ-M Non-Return-to-Zero Mode\nNVRAM Non-Volatile RAM\nOBC Onboard Computer\nOBSW Onboard Software\nOS Operating System\nPCB Printed Circuit Board\nPCDU Power Control and Distribution Unit\nPFM Protoflight Model\nPLOC Payload Controller\u2014\u2018\u2018Payload Onboard Computer\u2019\u2019\nPOR Power On Reset\nPPS Pulse Per Second\nPROM Programmable Read-Only Memory\nPSR Pseudo Randomizer\nPSU Power Supply Unit\nPUS ESA Packet Utilization Standard\nQA Quality Assurance\nRAM Random Access Memory\nRF Radio Frequency\nRF-SCOE Radio Frequency Special Check-Out Equipment\nRISC Reduced Instruction Set Computer\nRIU Remote I/O Unit (of an OBC)\nROM Read Only Memory\nRTOS Realtime Operating System\nRTS Realtime Simulator\nRWL Reaction Wheel\nS/C Spacecraft\nSA Solar Array\nSBC Single Board Computer\nSCID Spacecraft Identifier\nSCOE Special Checkout Equipment\nSDRAM Synchronous Dynamic Random Access Memory\nSEL Single Event Latch-up\nSEU Single-Event Upset\nSIF Service Interface\nSMD Surface Mounted Device\nSoC System on Chip\n\nAbbreviations xxiii\n\n\n\nSoC Battery State of Charge\nSPARC Scalable Processor Architecture\nSpW SpaceWire\nSRAM Static Random Access Memory\nSSO Sun-Synchronous Orbit\nSSRAM Synchronous Static Random Access Memory\nSTR Star Tracker\nSW Software\nTAA Technical Assistance Agreement\nTC Telecommand\nTCC Telecommand Channel Layer\nTF Transfer Frame\nTID Total Ionizing Dose\nTM Telemetry\nTMR Triple Module Redundancy\nTTL Transistor\u2013Transistor Logic\nUART Universal Asynchronous Receiver Transmitter\nUSB Universal Serial Bus\nVC Virtual Channel\nVCID Virtual Channel Identifier\nWS Workstation\n\nxxiv Abbreviations\n\n\n\nChapter 1\nThe System Design Concept\n\nJens Eickhoff\n\n1.1 Introduction\n\nThe Combined Data and Power Management Infrastructure (CDPI), presented in\nthis book represents a functional merging of a classical satellite Onboard\nComputer (OBC), and a Power Control and Distribution Unit (PCDU). Before\nfocusing on the system\u2019s technical details some overview on the development\nbackground shall be given to estimate the overall system\u2019s function, performance\nand usability for satellite missions.\n\nThe background for the CDPI development was the SmallSat program of\nUniversity of Stuttgart. It foresees the development of multiple space missions and\nthe first in the queue is an Earth observation Micro Satellite of 130 kg mass with\ndiverse payloads. More details on the mission and the satellite design can be found\nin Chap. 10. During the satellite development the problem was to find first an\nadequate Onboard Computer for control of the overall spacecraft system.\n\nJ. Eickhoff (&)\nAstrium GmbH\u2014Satellites, Friedrichshafen, Germany\ne-mail: jens.eickhoff@astrium.eads.net\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_1,\n? Springer-Verlag Berlin Heidelberg 2013\n\n1\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10\n\n\nAfter handover of the SmallSat technical responsibility to the autor as industry\nrepresentative with sufficient satellite project experience, it was decided to step\naway from any formerly envisaged FPGA based OBC architectures, since the\nsystem never would have been suitable for running a proper operating system and\nfor allowing the coding of a trustworthy Failure Detection, Isolation and Recovery\n(FDIR), layer in the Onboard Software (OBSW).\n\nThus a concept for a modular OBC was developed which during design led to\nthis mentioned functional integration of the OBC and PCDU in a combined\narchitecture. More details are given in the subsequent sections of this chapter. The\nessential aspect for development was, that both OBC and PCDU have not been\navailable as flight proven units as it is usually the case for agency and industry\nmissions, but they had to be developed in parallel to the SmallSat project itself.\nThis was a great challenge for the entire team concerning technical design cor-\nrectness and schedule constraints.\n\nThe reason why the SmallSat group did not simply take over solutions from\nother university satellites or directly potentially sponsored industry solutions for\nOBC and/or PCDU were:\n\n\u2022 Industry OBCs were simply too large, too heavy and too power consuming to fit\ninto the SmallSat design at all.\n\n\u2022 The SmallSat should be commandable via industry standard CCSDS/PUS pro-\ntocol which ruled out the most university project OBCs.\n\n\u2022 The OBC on board should reflect state of the art communication data protocols\u2014\nsuch as SpaceWire\u2014and a professional Real Time Operating System (RTOS) as\nbaseline for the onboard software. This in addition required a sufficiently powerful\nradiation hard onboard processor and again ruled out all low cost approaches.\n\nFalling back to the professionals network of the author, a consortium of top\nranked industry partners could be set up for the project. All of these contributors\nhad a certain interest in sponsoring and supporting a brand new design solution for\na compact, lightweight, low-power Combined Data and Power Management\nInfrastructure (CDPI).\n\nAn overview of the system and some development aspects is given in this\nchapter. The subsequent main chapters are devoted to the individual subcompo-\nnents, their features and functions. These chapters are written by the developers of\nthe individual industry team partners.\n\n1.2 The Onboard Computer Concept Baseline\n\nA number of design \u2018\u2018paradigms\u2019\u2019 have formed the baseline of the overall archi-\ntecture development. Starting with the OBC these are the following (Fig. 1.1):\n\n\u2022 The overall OBC should be implemented as a sort of \u2018\u2018stack\u2019\u2019 of individual\nPrinted Circuit Boards (PCB), each of them mounted in a coated aluminum\nframe. All the PCBs should be of single Eurocard size.\n\n2 J. Eickhoff\n\n\n\n\u2022 All I/O into and out of the OBC to/from other spacecraft units should be routed\nvia connectors on the individual PCBs top side. All interfaces routing signals\nbetween the individual PCBs should be routed via front connectors.\n\nThese two concepts led to an overall box design later which is depicted in\nFig. 1.2. The inter-board cabling is encapsulated in the OBC\u2019s front compartment\nwhich is closed by a front cover.\n\nFig. 1.1 Housing concept\nbased on stacked frames\n\nFig. 1.2 Final OBC frame stack\u2014CAD model. ? IRS, University of Stuttgart\n\n1 The System Design Concept 3\n\n\n\nNormally such inter-PCB routing is performed via an OBC backplane, but at\ntime of OBC component requirement definition and project kickoff with the\nindividual OBC component manufacturers, the front interfaces were not yet frozen\nat all, particularly not things like the Processor-Board\u2019s JTAG Interface and the\nService Interface (SIF). The concept of such a cabling based inter-board con-\nnection allowed a completely individualized design and production of the OBC\u2019s\ndifferent PCB types.\n\n\u2022 The OBC concept of a stack of boards in closed frames significantly eased the\nproblem of potential EMC cross influences between the boards. This was an\nimportant aspect since at the university which later assembled the overall OBC\nfrom the delivered subcomponents, no sufficient EMC knowledge was available\nin case of problems to be solved. The front compartment closed with a dedicated\ncover in addition shields the OBC\u2019s high speed data interfaces from external\nEMC influences.\n\n\u2022 The OBC\u2019s thermal concept was based on the approach that the OBC is mounted\nin the satellite on a radiator plate with its bottom side and is conducting waste\nheat to this radiator. This however results in the OBC being potentially too cold\nin non-operational state. Heater mats placed on the separation walls between\neach second OBC frame assure operational temperature keeping. The heaters are\ncontrolled by bi-metal thermostats in the OBC front compartment.\n\n\u2022 The OBC was designed for single redundancy of all subunits. Therefore each\nboard type is available in two instances and all data interfaces between the\nboards are cross coupled.\n\n\u2022 The first OBC board type is the power supply board, which provides the 3.3 V\npower supply to the individual PCBs and which itself is coupled to the 24 V\nsatellite power supply from the PCDU. The OBC Power-Board in addition\nperforms the routing of some OBC Processor-Board interfaces to the outside of\nthe box to the satellite skin connector, namely the SIF, the JTAG-I/F, the line-in\nof the 1 Hz GPS PPS strobe and the line-out of the star tracker PPS strobe.\n\n\u2022 The second board type obviously is the Processor-Board, a so-called Single\nBoard Computer (SBC), since it comprises not only the CPU, but also non-\nvolatile memory for bootloader, operating system and OBSW boot image, as\nwell as RAM for running the OBSW. Packet stores for OBSW housekeeping\ndata, for the S/C state vector and the S/C configuration vector are available on\nthe next board type, the so-called I/O-Boards.\n\n\u2022 The I/O-Boards are coupled to the Processor-Boards via SpaceWire interfaces\nand perform as main function the bridging to all types of lower level digital\ninterfaces of S/C onboard equipment. So all onboard units providing interface\ntypes like UART, IIC or others are coupled to the I/O-Boards and the Processor-\nBoard can access their data via its SpaceWire interface.\nThe I/O-Board design is based on a radiation tolerant FPGA with an according\nIP Core which is accessed via SpaceWire from the Processor-Board and on\naccording driver ICs for each type of digital I/O interface to connected space-\ncraft equipment.\n\n4 J. Eickhoff\n\n\n\nSince this approach requires some buffers and memory chips on the board\nanyway, these boards via additional memory and according enhanced IP Core\nfunctions are designed to handle the storage of OBSW housekeeping data, the\nS/C state vector and the S/C configuration vector.\n\n\u2022 The fourth type of boards are the CCSDS protocol decoder/encoder boards\nwhich also are coupled to the Processor-Boards via SpaceWire interfaces and on\nthe other side are interfacing the spacecraft\u2019s transceiver units. These boards\nperform the low-level decoding of the uplinked telecommands and the low level\nencoding of the telemetry to be downlinked during ground station visibility.\nThe approach for these boards was to use the identical PCB and FPGA as for the\nI/O-Boards, and to just equip the CCSDS-Boards with only a limited number of\nexternal interfaces, namely those to the transceivers, to the PCDU for High\nPriority Commands (HPC) and those for cross coupling of the Command Link\nControl Word (CLCW) interfaces (see later in Sect. 4.2.2). Obviously these\nCCSDS-Boards comprise a different loaded IP Core since they perform a\ncompletely different task.\nThe processing IP Cores in the FPGA on the CCSDS-Board and the software\nlibraries which are available in the RTOS tailoring and which are running on the\nProcessor-Board were designed in a common architecture.\n\nWhen looking at the the above mentioned design paradigms, a reader who is\nfamiliar with classic OBC design immediately will identify some elementary OBC\nfunctions missing in the so far described board types. These functions have been\nimplemented through a sort of functional merging of OBC and PCDU and they\nwill be explained in the following sections.\n\n1.3 The PCDU as Analog RIU\n\nAlready at begin of the OBC development a PCDU from Vectronic Aerospace,\nBerlin, was preselected for satellite power bus management. This family of\nPCDUs is equipped with relatively performant microcontrollers and with analog\nmeasurement functions for current and voltage measurement and with according\nfunctions for TM reporting to the OBC. More details can be found in Chap. 8.\n\nThus as first part of classic OBC functions the task of\n\n\u2022 analog current measurement,\n\u2022 voltage measurement and\n\u2022 parameter analog to digital conversion\n\nfor the analog power lines and also for all analog sensor interfaces\u2014as e.g. for\nthermistor readings\u2014is implemented as PCDU function in this OBC/PCDU co-\ndesign. Thus in the CDPI now the PCDU takes over these tasks instead of a\nRemote Interface Unit (RIU) in classic OBC design.\n\n1 The System Design Concept 5\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8\n\n\n1.4 Common System Reconfiguration Controller\n\nThe system reconfiguration functionality of the overall satellite with respect to\nFailure Detection, Isolation and Recovery (FDIR), in emergency cases is based on\na concept invented by the author which is patent affiliated by Astrium Satellites\n[48]. For proper understanding of the concept some explanations shall be given\nbefore describing the implementation.\n\nOBC and PCDU are the two key components for control and safety manage-\nment onboard a satellite. All controllers and electronics inside of the OBC and\nPCDU are implemented at least with single redundancy (cited below as version A\nand B in the translations and figures taken from [48]). Furthermore, they are cross\ncoupled. Inside an OBC thus for example the processor module CPU A can be\noperated with the housekeeping TM mass memory A or B. Standard setting is\nusually to operate all units on A side at launch and to use all B configuration for\nthe safe-mode switchover. As exemplary sketch in the Fig. 1.3 only the most\nimportant OBC elements are cited. For example there exist diverse types of\nmemory in real OBCs (PROM, RAM, Safeguard Memory etc.). Internal clock,\nclock strobe distribution units and the like are also not depicted but they underlie\nthe same redundancy switchover concepts which are explained below.\n\nSC \nEquipm. 1\n\nSC \nEquipm. 2\n\nSC \nEquipm. 3\n\nMemory A\n\nMemory B\n\nData\nBus\n\nCtrl A\n\nData\nBus\n\nCtrl B\n\nCPU A\n\nCPU B\n\nDecoder\nEncoder\nBoard A\n\nDecoder\nEncoder\nBoard B\n\nBattery\n\nSolar\nArray\n\nTrans-\nceiver\n\nPwr\nElectronics\n\nPwr Supply A Pwr Supply B\n\nPwr Bus A\n\nPwr Bus B\nLCLs/FCLs\n\nOnboard\nComputer\n\nPower Control & Distribution Unit\n\nPCDU\nCtrl A\n\nReconfi -\nguration \n\nUnit A\n\nReconfi -\nguration \n\nUnit B\n\nPCDU\nCtrl B\n\nData   Bus A\n\nData   Bus B\n\nFig. 1.3 Conventional infrastructure for data management (OBC) and power management\n(PCDU). ? Astrium\u2014see [48]\n\n6 J. Eickhoff\n\n\n\nFor taking a spacecraft payload into operation\u2014say \u2018\u2018Spacecraft Equipment 1\u2019\u2019\nin Fig. 1.3\u2014the satellite via its transceiver receives commands from ground which\nthemselves are decoded by the decoder/encoder unit or board and which then are\nrouted as command packets to the OBSW running on the CPU. For payload\nactivation the OBSW first commands the active PCDU controller (A or B) via data\nbus to supply the payload equipment with power\u2014which means closing the\naccording Latching Current Limiter (LCL) of the\u2014currently active power bus.\nThereafter the payload itself is commandable via the OBC via the active data bus.\nTelemetry from the payload is delivered to the active encoder by the OBC for\nencoding and routing to ground via the transceiver.\n\n1.4.1 Component Functions During Failure Handling\n\nThe understanding of the roles of decoder/encoder modules, CPUs, Reconfigura-\ntion Units, PCDU controllers etc. for failure handling is essential and four types of\nerrors shall be assessed to represent the most typical, most frequently occurring\nones. In any case of reconfiguration of the Data Handling and Operations\n(DH/OPS) subsystem or of the power subsystem, essential control functions of the\nsatellite are at least blocked or non-operational for a limited time which will\ndegrade the spacecraft attitude and power control. So besides pure failure man-\nagement in form of switchover to a redundant unit, the FDIR system must assure\nshutdown of non essential power loads (payloads, thermal consumers) and must\nassure bringing back the satellite into a safe-mode configuration. The overall\nprocess of such FDIR management is a combination of functions implemented in\nhardware and functions coded in OBSW and thus goes partly beyond the scope of\nthis book. Here only those functions to be implemented in real OBC hardware\nshall be explained. For further reading please refer to [10].\n\n1.4.1.1 Failure Type 1: Failures Identifiable by the Running OBSW\n\nExamples for this type of hardware failures are e.g. a bus controller which is\nsporadically not responding and requiring retries by the OBSW or the failure case\nwhere the OBSW receives mass memory EDAC bit error messages. In such case\nthe OBSW can send so-called High Priority Commands (HPC) to the active\nReconfiguration Unit for DH/Ops and Power FDIR which then triggers the\nreconfiguration to the redundant OBC bus controller\u2014or in this case the entire\nI/O-Board. In other error cases the Reconfiguration Unit may be forced to switch\nover to the redundant Processor-Board. In the latter case the OBSW has to be\nrebooted on the target Processor-Board.\n\nTo sum it up the triggering of the reconfiguration process is initiated in these\ncases by the OBSW, the diverse reconfiguration steps with redundant subunit\n\n1 The System Design Concept 7\n\n\n\npower-up, defective-unit power-down and potential intermediate steps for data\nshift-over are carried out by the function implemented in the Reconfiguration Unit.\n\n1.4.1.2 Failure Type 2: Crash of the OBSW and Auto-Reconfiguration\n\nFailure type 2 covers all those errors which coincide with a crash of the OBSW. In\nsuch case a Reconfiguration Unit outside the Processor-Board has first to detect the\nOBSW failure and then has to perform the reconfiguration.\n\nIn the simple case of an OBSW crash due to a bug or an IC Single-Event Upset\n(SEU), the OBSW has to be restarted by the Reconfiguration Unit. The failure\ndetection usually is performed by means of the processor cyclically sending\nwatchdog signals to the Reconfiguration Unit and the latter starting FDIR action in\ncase of the watchdog signal exceeding a timeout.\n\nThe reconfiguration activities reach from simple processor soft reset to com-\nplete Processor-Board or/and I/O-Board redundancy switchover, depending on the\nsymptoms detected by the Reconfiguration Unit. The number and type of watch-\ndogs and timers obviously has to be designed appropriately for the Reconfiguration\nunit being able to determine between different error cases.\n\nSuch an automated reconfiguration with broken OBSW is only possible for a\nlimited type of failure cases. The determination of the complex ones and moreover\nthe root cause analysis requires intervention from ground. Which leads over to the\nnext failure class described below.\n\nAs summary it can be stated that the Processor-Board shall feature watchdog\nlines to the Reconfiguration Unit for detection of OBSW crashes or I/O-Board\nsignal routing failures which then can be used for OBSW restart or hardware\nreconfiguration\u2014the latter only in very limited cases.\n\n1.4.1.3 Failure Type 3: Crash of OBSW and Reconfiguration\nfrom Ground\n\nIf SW crashes and auto-reconfiguration or OBSW reboot initiation are not sufficient\nto overcome the problem, the reconfiguration has to be initiated and to be\nperformed from ground. This usually starts with the initiation of power shutdowns\nfor unnecessary loads and continues with deactivation of suspected defective units\nand activation of hopefully still healthy ones.\n\nAll ground commands for these switch-overs have to bypass the OBSW\u2014as it\nis non-operational. Therefore a special class of HPCs are used (so-called class1\nHPCs or HPC1 commands) which can be identified by the OBC\u2019s TC decoder\nmodules and which are not routed to the OBSW on the Processor-Board like\nnormal commands. Instead these HPCs are directly forwarded to a specific subunit\nin the Reconfiguration Unit\u2014the so-called Command Pulse Decoding Unit\n(CPDU). For more details please refer to [10]. The CPDU can decode such HPCs\nand can send pulse commands to the Power Control and Distribution Unit (PCDU)\n\n8 J. Eickhoff\n\n\n\nto trigger LCL relay on/off switching, according to what the targeted unit\u2019s status\nshall be.\n\nThis allows ground to activate deactivate onboard equipment completely\nindependent from any OBSW to overcome severe failure situations.\n\n1.4.1.4 Failure Type 4: Power Bus Undervoltage Failures\n\nThe final main type of failures are those leading to a power shortage on board. In\nsuch case\u2014independent of whatever the root cause was\u2014the S/C equipment is\nshut off in several steps. The first units being disabled are payloads and payload\ndata mass memory units. In further sequence then\u2014if the OBSW apparently is\nunable to manage the problem\u2014the platform units including OBC are shut down.\nAn in case even these measures do not overcome the problem the PCDU finally\ndeactivates itself. For these cases a PCDU is equipped with an auto-activation\nfunction for its controller as soon as the S/C power bus again supplies sufficient\nvoltage\u2014e.g. due to the satellite returning from orbit eclipse phase to sun phase.\nWith increasing power availability the PCDU subsequently activates further S/C\nplatform units, first unit being the OBC, respectively in Safe Mode the redundant\nOBC (depending on the latest settings in the Reconfiguration Unit). The latter then\nactivates platform AOCS units to achieve a stable SC safe-mode attitude acqui-\nsition and potential ground contact through activation of the transceivers.\n\nAs summary in these cases reboot and configuration are initiated by the PCDU\ncontroller and again PCDU controller and Reconfiguration Unit together manage\nthe recovery.\n\n1.4.2 Innovation: A Combined-Controller for all FDIR\nFunctions\n\nIn a classic unit architecture on board three controllers implement the functionality,\nnamely the OBC\u2019s Reconfiguration Unit [10] and as subunit the OBC\u2019s Command\nPulse Decoding Unit (CPDU) [10] as well as the PCDU\u2019s internal controller IC.\nThese elements are typically implemented without being based on Onboard Soft-\nware but either as pure electronic circuits or as FPGA or ASIC implementation.\n\nThis implies that the S/C flies three controllers which need to be highly reliable\nand thus require according design and test effort. The basic idea behind the patent\naffiliation [48] is to implement only one FDIR controller for all data handling and\npower FDIR reconfiguration and emergency functions\u2014the patent cites it as a\n\u2018\u2018Combined-Controller\u2019\u2019. In such case it is of no relevance, whether the Combined-\nController physically is mounted inside the OBC housing or the PCDU housing or\neven in a common housing of both (Fig. 1.4).\n\n1 The System Design Concept 9\n\n\n\nThe FLP target satellite from the University of Stuttgart is the first one to fly\nsuch a CDPI architecture with a Common-Controller. In this first implementation\nthe combined controller physically resides in the PCDU housing and is an\nimplementation of the standard Vectronic Aerospace PCDU controller with\nenhanced firmware functions defined by the Stuttgart FLP team and implemented\nby Vectronic Aerospace. More details on the PCDU and its controller functions\ncan be found in Chap. 8.\n\nIn normal operational cases the OBSW still can command the \u2018\u2018PCDU\u2019\u2019 con-\ntroller\u2014i.e. the Combined-Controller\u2014to switch on/off spacecraft equipment\npower lines. To avoid to overload the above figure the routing of these links have\nbeen cut off (in comparison to Fig. 1.3). The same applies to the omitted data bus\nlines to the diverse spacecraft equipment which still were depicted in Fig. 1.3.\n\nThe reconfiguration now is triggered by the Combined-Controller either via\nsoft-reset command lines to the individual OBC subunits (e.g. CPU) or via power\nresets respectively via power down of the defective unit and power-up of the\ncomponent\u2019s redundancy.\n\nAs example the Combined-Controller (in the PCDU in the current implemen-\ntation example) can separately power each OBC decoder/encoder board, each\nProcessor-Board with CPU, NVRAM, RAM, clock module and finally also each\nOBC I/O-Board. The apparently \u2018\u2018additional\u2019\u2019 cabling needed between CC and these\nelements\u2014compared to a classic architecture\u2014was hidden inside the reconfigura-\ntion unit of the OBC in the design of Fig. 1.3 and thus is no real additional effort.\n\nMemory A\n\nMemory B\n\nData\nBus\n\nCtrl A\n\nData\nBus\n\nCtrl B\n\nCPU A\n\nCPU B\n\nDecoder\nEncoder\nBoard A\n\nDecoder\nEncoder\nBoard B\n\nBattery\n\nSolar\nArray\n\nTrans-\nceiver\n\nPwr\nElectronics\n\nDecoder Pwr Core Pwr\n\nPwr Bus A\nPwr Bus B\n\nLCLs/FCLs\n\nOnboard\nComputer\n\nPower Control & Distribution Unit\n\nBus, I/O Pwr\n\nCombined\nController B\n\nCombined\nControllerl A\n\nData   Bus A\n\nData   Bus B\n\nFig. 1.4 Combined Data and Power Management Infrastructure. ? Astrium see [48]\n\n10 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8\n\n\n1.4.3 Failure Management with the Combined-Controller\n\n1. In failure case 1 the running OBSW triggers the reconfiguration functions\nimplemented in the Combined-Controller (CC), via the CPU-CC links, for\nexample a reconfiguration of an OBC decoder/encoder unit.\n\n2. In failure case 2 the auto-reconfiguration is unchanged. It simply is performed\nthrough the Combined-Controller, for example induced through watchdog\nsignal timeouts etc. Such watchdog or alert signal lines from the CPU now have\nto be routed to the Combined-Controller.\n\n3. In failure case 3 where reconfiguration has to be performed via High Priority\nCommands from ground, the according reconfiguration command routing goes\nfrom the decoders to the CC for reconfigurations command execution in the CC.\n\n4. In failure case 4 (power failures, power bus undervoltage) the approach of\nsatellite power down and eventual reboot is controlled as in the classic archi-\ntecture. Just the functions implemented formerly inside the PCDU controller\nnow are located in the CC.\n\n1.4.4 Advantages of the Combined-Controller Approach\n\nThe advantages of the CDPI design with one Common-Controller instead of the\ntriple made of the OBC\u2019s Reconfiguration Unit, the Command Pulse Decoding\nUnit and the PCDU\u2019s internal controller are as follows:\n\n1. Only one single critical controller IC (FPGA or ASIC) has to be designed\u2014\nrespectively a single chip firmware has to be implemented.\n\n2. Only for one single controller chip intensive tests have to be performed.\n3. Complex tests for proper interaction of a classic OBC Reconfiguration Unit\n\nwith the PCDU controllers for handling of the diverse failure cases are sig-\nnificantly simplified. Some specific cases are completely obsolete.\n\n4. For the OBSW design compared to the classical architecture only minimal\nadaptations are necessary for triggering system reconfigurations\u2014so no addi-\ntional effort is implied also in this field.\n\n5. The OBC CCSDS decoder/encoder board architecture also is not touched by the\nnew concept implementation\u2014except for their I/O cabling.\n\n6. The analog CPDU as subunit of the OBC\u2019s Reconfiguration Unit which in the\nconventional architecture serves to submit the analog pule commands to the\nPCDU controller, is completely obsolete in the new concept. The according\nclass 1 High Priority Commands (HPC), can be directly submitted to the\nCombined-Controller from the OBC CCSDS decoder via a normal digital link.\nAn according analog LCL control electronic in side the OBC also is obsolete.\n\n1 The System Design Concept 11\n\n\n\nThese simplifications significantly reduce the manufacturing and verification\neffort and resulting cost for the tandem of OBC and PCDU unit which makes the\narchitecture specifically interesting for low cost missions. Astrium granted a free\npatent use to the IRS for the FLP satellite mission.\n\n1.5 Completeness of System Architecture\n\nBy this presented overall system design approach for the Combined Data and Power\nManagement Infrastructure (CDPI), all necessary flight relevant functions (see also\n[10]) are covered\u2014although not all allocated to the classic boards or component:\n\n\u2022 OBC power supply -[ on OBC Power Boards\n\u2022 OBC processor and internal data bus -[ on OBC Processor-Boards\n\u2022 OBC memory\u2014non volatile for boot loader and operating system and OBSW\u2014\n\nand volatile as work memory -[ on OBC Processor-Boards\n\u2022 OBC packet stores for Housekeeping Telemetry (HK TM), spacecraft state\n\nvector and spacecraft configuration vector -[ on I/O-Board\n\u2022 OBC digital RIU function\u2014coupling of all non SpaceWire digital equipment I/\n\nO to the OBC - [ on I/O-Board\n\u2022 Interface to the spacecraft transceivers decoding TCs and encoding TM -[ on\n\nCCSDS-Boards\n\u2022 OBC analog RIU functions\u2014coupling all analog interface control and analog\n\nparameter measurements to the OBC -[ implemented in PCDU and com-\nmanded/controlled from OBC via OBC-PCDU UART interfaces.\n\n\u2022 OBC reconfiguration functions -[ implemented in the Common-Controller. In\nthis implementation realized by the PCDU controller with enhanced firmware.\n\n\u2022 The OBC HPC interface functionality to implement implicitly the functions of\nan OBC\u2019s CPDU -[ implemented in the Common-Controller firmware and\naccessible through additional UART interfaces via the OBC CCSDS-Boards\n\n\u2022 Bus power management functions -[ implemented in the PCDU Common-\nController\n\n\u2022 Equipment power supply switching and overvoltage/overcurrent protection -[\nimplemented in the PCDU Common-Controller\n\n\u2022 Power bus undervoltage FDIR functions (DNEL functions) -[ implemented in\nthe PCDU Combined-Controller.\n\nAn overview figure of the CDPI with all external I/Os and the interlinks\nbetween OBC and PCDU part is included in Fig. 1.5. Box internal cross connects,\nlike between Processor-Boards and I/O-Boards are not included for not over-\ncomplicating the figure here. The same applies for cross couplings of redundant\nelements within OBC respectively PCDU. All these later are treated in more detail\nin Chap. 6.\n\n12 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6\n\n\nD\neb\n\nug\nO\n\nB\nS\n\nW\n L\n\noa\nd \n\nR\n\nD\neb\n\nug\nO\n\nB\nS\n\nW\n L\n\noa\nd \n\nN\n\nP\nC\n\nD\nU\n\nPwr R\n\nPwr N\n\nB\nat\n\nt \nP\n\nw\nr \n\nIF\n1\n\nB\nat\n\nt \nP\n\nw\nr \n\nIF\n3\n\n\u2026\n\nS\nA\n\n I\nn \n\n1\n\nS\nA\n\n I\nn \n\n3\n\nBistable \nRelay 1\n\nBistable \nRelay 2\n\n\u2026\n..\n\n.\n\nLCL 76\n\nLCL 0/1\n\nLCL 2/3\n\nLCL 4/5\n\nLCL 6/7\n\nLCL 8/9\n\nLCL 10/11\n\nO\nB\n\nC\n C\n\nor\ne \n\nR\n\nO\nB\n\nC\n C\n\nor\ne \n\nN\n\nI/O\n B\n\noa\nrd\n\n N\n\nI/O\n B\n\noa\nrd\n\n R\n\nC\nC\n\nS\nD\n\nS\n N\n\nC\nC\n\nS\nD\n\nS\n R\n\nT\nC\n\n I\nn1\n\nT\nC\n\n I\nn2\n\nT\nM\n\n O\nut\n\n1\n\nT\nM\n\n O\nut\n\n2\n\nSeparation \nDetection\n\nLe\nge\n\nnd\n:\n\nO\nB\n\nC\n P\n\nw\nr B\n\noa\nrd\n\ns\n\nO\nB\n\nC\n C\n\nC\nS\n\nD\nS\n\n B\noa\n\nrd\ns\n\nO\nB\n\nC\n I/\n\nO\n B\n\noa\nrd\n\ns\n\nO\nB\n\nC\n C\n\nP\nU\n\n B\noa\n\nrd\ns\n\nO\nB\n\nC\n\nN\nR\n\nZ\n-L\n\n v\nia\n\n R\nS\n\n42\n2\n\nN\nR\n\nZ\n-L\n\n v\nia\n\n R\nS\n\n42\n2\n\nN\nR\n\nZ\n-L\n\n v\nia\n\n R\nS\n\n42\n2\n\nN\nR\n\nZ\n-L\n\n v\nia\n\n R\nS\n\n42\n2\n\nU\nA\n\nR\nT\n\nH\nP\n\nC\n R\n\nH\nP\n\nC\n N\n\nU\nA\n\nR\nT\n\nU\nA\n\nR\nT\n\nU\nA\n\nR\nT\n\nP\nC\n\nD\nU\n\n \nC\n\nm\nd/\n\nC\ntr\n\nl R\n\nP\nC\n\nD\nU\n\n \nC\n\nm\nd/\n\nC\ntr\n\nl N\nU\n\nA\nR\n\nT\n\nU\nA\n\nR\nT\n\nU\nA\n\nR\nT\n\nU\nA\n\nR\nT\n\nU\nA\n\nR\nT\n\nS\nIF\n\n R\n\nS\nIF\n\n N\n\nU\nA\n\nR\nT\n\nJT\nA\n\nG\n\nJT\nA\n\nG\n\n1x\n P\n\nP\nS\n\n O\nut\n\n2\nx \n\nII\nC\n\n24\nx \n\nR\nS\n\n42\n2\n\nFor diverse\nS/C Equipment\n\nCmd / Ctrl\n\n\u2026\n..\n\n.\n\nAnalog IF n\n\nAnalog IF 1\n\n\u2026\n..\n\n.\n\nDigital IF 1\n\nDigital IF m\n\nH\nK\n\n \nM\n\nem\nor\n\ny\n\nS\naf\n\neg\nua\n\nrd\n \n\nM\nem\n\nor\ny\n\n4\nx \n\nLo\ngi\n\nc \nO\n\nut\n  \n\nF\nO\n\nG\n\n2\nx \n\nLo\ngi\n\nc \nIn\n\n1\nx \n\nP\nP\n\nS\n I\n\nn\n\nF\nig\n\n.\n1.\n\n5\nT\n\nhe\nco\n\nm\nbi\n\nne\nd\n\nda\nta\n\nan\nd\n\npo\nw\n\ner\nm\n\nan\nag\n\nem\nen\n\nt\nin\n\nfr\nas\n\ntr\nuc\n\ntu\nre\n\n1 The System Design Concept 13\n\n\n\nThe Combined Data and Power Management Infrastructure (CDPI) conceptu-\nalized for the IRS FLP satellite was designed to follow exactly these paradigms as\nexplained in the Sects. 1.2\u20131.4. The selection process for baseline units for the\nindividual CDPI components, like Processor-Board is further described in the next\nsection.\n\n1.6 Component Selection\n\n1.6.1 Processor-Boards\n\nAt time of concrete development of the FLP OBC and PCDU the initial problem\nwas to find a supplier providing a suitable CPU board for the OBC. The initial idea\nwas to base the development on one of the diverse available CPU test boards from\nAeroflex Gaisler AB and implement necessary modifications\u2014since these test\nboards were not designed to be flight hardware (Fig. 1.6).\n\nBy coincidence the author met Jiri Gaisler, the founder of former Gaisler\nResearch\u2014today Aeroflex Gaisler AB\u2014at the Data Systems in Aerospace\nconference in May 2009 in Istanbul and Jiri Gaisler was aware that Aeroflex\nColorado Springs just had started the development of a Single Board Computer\n(SBC), based on their LEON3FT processor UT699.\n\nThe LEON3FT (cf. [49] and [50]) architecture includes the following peripheral\nblocks (please also refer to Fig. 1.7):\n\nFig. 1.6 Aeroflex Gaisler\ntest board. ? Aeroflex Gaisler\nAB\n\n14 J. Eickhoff\n\n\n\n\u2022 LEON3FT SPARC V8 integer unit with 8 kByte instruction and 8 kByte of data\ncache\n\n\u2022 IEEE-754 floating point unit\n\u2022 8/16/32-bit memory controller with EDAC for external PROM and SRAM\n\u2022 32-bit SDRAM controller with EDAC for external SDRAM\n\u2022 16-bit general purpose I/O port (GPIO)\n\u2022 Timer/watchdog unit\n\u2022 Interrupt controller\n\u2022 Debug support unit with UART and JTAG debug interface\n\u2022 4 SpaceWire links with RMAP\n\u2022 Up to two CAN controllers\n\u2022 Ethernet\n\u2022 cPCI interface\n\u2022 Debug support unit with UART and JTAG debug links.\n\nWhat stands out here is that the system has the processor itself, the interface\ncontrollers for CAN bus, Ethernet, cPCI and especially SpaceWire implemented\nall on the same chip. Furthermore, the chip provides a debug interface. All these\nadditional on chip elements are connected to the CPU core via an internal AMBA\nbus which was originally developed by ARM Ltd. for the ARM processor family.\n\nA block diagram of the overall Processor-Board design intended at that time is\ndepicted in Fig. 1.8. This system was designed to include:\n\n\u2022 The processor\n\u2022 SRAM memory for OBSW computation\n\u2022 Non volatile RAM (NVRAM), which could be used as EEPROM for storing the\n\ninitial boot OBSW image\n\u2022 The SBC concept includes SpaceWire interfaces to couple the other foreseen\n\nOBC board types to it and\n\u2022 it included RS422 interfaces\n\u2022 and a clock module.\n\nDebug\nSupport\n\nUnit\n\nPCI\nIntiator /\nTarget\n\n2x SpaceWire\nLinks\nRMAP\n\nCAN\n2.0\n\nIrqCtrl Timers\n\nAMBA AHB\n\nAMBA APB\n\nI/O SRAM\n\nAHB/APB\nBridge\n\nMemory\nController\n\nPROM SDRAM\n\n8/32-bit memory bus\n\nEthernet\nMAC\n\n10/100\n\nIEEE754\nFPU\n\nLEON3FT\nSPARC V8\n\nMul & \nDiv\n\nMMU\n\n2 x 4kB\nD-cache\n\n2 x 4kB\nI-cache\n\nAMBA AHB\n\nSerial/JTAG\nDebug\nLink\n\n2x SpaceWire\nLinks\n\n2 x LVTTL CAN N/RRS232 / JTAG 2 x LVTTL\n\nRS232 Watchdog I/O Port 32-bit PCI Ethernet PHY\n\nUART I/O Port\n\nFig. 1.7 UT699 LEON3FT SOC block diagram. ? Aeroflex Gaisler AB\n\n1 The System Design Concept 15\n\n\n\nAll this functionality was intended to be mounted on an Eurocard size Printed\nCircuit Board (PCB).\n\nThe university satellite project was presented to Aeroflex. A team of them and\ntheir German distributor Protec GmbH, Munich, visited the university and Aeroflex\nfinally decided to support the university project and act as Processor-Board supplier.\n\nThe Processor-Board development itself then was handled like a standard\ncommercial project with requirements review, design reviews, manufacturing\nreview, test review and shipment review\u2014and this both for an initial EM\n(see Fig. 1.9) as well as for the later 2 FMs (see Fig. 2.1).\n\nThe university team is indebted to Aeroflex and their German distributor Protec\nGmbH, Munich, for guiding us through the formalisms of the procurement of the\nCPU boards as being ITAR products.\n\nCompared to the initial design diagram of Aeroflex cited in Fig. 1.8 the Pro-\ncessor-Board design was modified later during the overall project to have 4\nSpaceWire interfaces which are absolutely identical w.r.t. their access from the\nOBSW, to provide a Service Interface (SIF), and to provide an OBSW load and\ndebug interface as well as external Pulse Per Second (PPS) signal input as well as\n\nFig. 1.8 UT699 SBC draft block diagram. ? Aeroflex Inc.\n\n16 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\n\n\nProcessor-Board generated PPS output. All details on the final design \u2018\u2018as\nimplemented\u2019\u2019 can be taken from the Processor-Board description in Chap. 2 of\nthis book and from Fig. 2.5.\n\nSince Aeroflex Colorado Springs was not permitted to deliver any bootloader\nnor software/RTOS for the Processor-Board due to ITAR, the solution was the\npartnership with Aeroflex Gaisler AB, Sweden, applying their RTEMS SPARC\ntailoring running on the LEON3FT.\n\n1.6.2 CCSDS Decoder/Encoder\n\nOn the side of satellite ground command/control the university uses a SCOS system\nlicensed from ESOC and thus applies the CCSDS spacecraft TC/TM control\nstandards [23]. Therefore a TC/TM decoder/encoder functionality according to\nthese standards was necessary. As already being in contact with Aeroflex Gaisler it\nwas the obvious choice to utilize Aeroflex Gaisler\u2019s CCSDS TC/TM processing\ninfrastructure for the decoder/encoder boards (cf. [62]). For the students developing\nthe satellite this avoided the huge effort for programming according functionalities\nfor these complex frame management, compression and bit-stream error correction\nfunctions (see [10]) which definitely would have exceed the team\u2019s resources.\n\n\u2022 The CCSDS Telecommand Decoder implements in hardware the synchroniza-\ntion, channel coding sub-layer, and part of physical layer. The higher layers are\nimplemented in software as libraries, integrated into the Aeroflex Gaisler\nSPARC V8 tailoring of the RTEMS realtime operating system. This software\nimplementation of the higher layers allows for implementation flexibility and\naccommodation of future standard enhancements. The hardware decoded\ncommand outputs and pulses do not require software and can therefore be used\nfor critical operations. The CCSDS telecommand decoder provides the entire\nfunctionality of reassembling TCs from NRZ-L CLTU level coming from\n\nFig. 1.9 OBC Processor-\nBoard with JTAG and OBSW\nload adapter\u2014EM\u2014mounted\nin test rack [7, 87]. ? IRS,\nUniversity of Stuttgart\n\n1 The System Design Concept 17\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\n\n\nreceiver side up to Telecommand Frame content. It identifies hardware com-\nmands to be routed to PCDU\u2019s Combined-Controller. The special implemen-\ntation selected here is not based on marking HPCs by MAP-ID, but via\ndedicated Virtual Channels. In the presented CDPI implementation the hardware\ncommands will be routed to the PDU via an RS422 interface link and the CPDU\nfunctionality is implicitly covered by the Combined-Controller of the PCDU.\n\n\u2022 The CCSDS/ECSS Telemetry Encoder implements\u2014entirely in hardware\u2014\nprotocol sub-layer, synchronization & channel coding sub-layer (e.g. Reed-\nSolomon and convolutional encoding), and part of physical layer. Also here the\nhigher layers are implemented in software as libraries, integrated into the Ae-\nroflex Gaisler SPARC V8 tailoring of the RTEMS realtime operating system.\nThus the CCSDS IP Core provides TM wrapping from Virtual Channel level\ninto CADUs handed over to the transmitter for downlink.\n\nThe above mentioned \u2018\u2018in hardware\u2019\u2019 functions of the decoder and encoder\nfunctionality are implemented in an IP Core to be loaded into the FPGA of the\naccording decoder/encoder board of the OBC\u2014or CCSDS-Board for short. The\ncorresponding software libraries also are available in the RTEMS from Aeroflex\nGaisler AB. More details on the entire CCSDS decoder/encoder architecture\nincluding explanations of the in-software and in-hardware implemented parts can\nbe taken from Chap. 4. This also comprises the SpaceWire RMAP protocol inter-\nfacing to the decoder/encoder. A block diagram of the entire architecture com-\nprising both \u2018\u2018in-software\u2019\u2019 and \u2018\u2018in-hardware\u2019\u2019 layers is shown there in Fig. 4.1.\n\nIn the overall CDPI EM testbed assembly a Breadboard Model in form of a standard\nAeroflex Gaisler/Pender-Electronics test board was used to verify the IP Core func-\ntions in cooperation with spacecraft transceiver bypass on the input side, Processor-\nBoard and PCDU Combined-Controller respectively on the output side (Fig. 1.10).\n\nThe TC and TM packet definitions of the FLP satellite are depicted in the\nfollowing Figs. 1.11, 1.12.\n\nFig. 1.10 CCSDS Decoder-/\nEncoder Board\u2014Breadboard\nAssembly. ? Aeroflex\nGaisler AB\n\n18 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\n\n\nA\ngg\n\nre\ng\n\nat\nio\n\nn \n= \n\nO\nFF\n\n: n\n =\n\n 1\n / \n\nsi\nng\n\nle\n   \n\n P\nac\n\nke\nt  \n\n in\n S\n\neg\nm\n\nen\nt D\n\nat\na \n\nF\nie\n\nld\nA\n\ngg\nre\n\ng\nat\n\nio\nn \n\n= \nO\n\nN\n: n\n\n >\n 1\n\n / \nm\n\nul\ntip\n\nle\n P\n\nac\nke\n\nts\n in\n\n S\neg\n\nm\nen\n\nt D\nat\n\na \nF\n\nie\nld\n\nS\neg\n\nm\nen\n\nt D\nat\n\na \nFi\n\nel\nd \n\nfil\nle\n\nd \nup\n\n b\ny\n\nin\nte\n\ngr\nal\n\n n\num\n\nbe\nr \n\nof\n p\n\nac\nke\n\nts\n\nT\nC\n\n S\neg\n\nm\ne\n\nn\nt\n\nS\neg\n\nm\nen\n\nt H\nea\n\nde\nr\n\n1 \nby\n\nte\n\nS\ne\nqu\n\nen\nce\n\n F\nla\n\ng\ns\n\nM\nA\n\nP\n ID\n\n2\n6\n\nva\nria\n\nbl\ne \n\nle\nng\n\nth\n -\n\n24\n8 \n\nby\nte\n\n m\nax\n\n.\n\nS\neg\n\nm\nen\n\nt D\nat\n\na \nF\n\nie\nld\n\nP\nac\n\nke\nt #\n\n1\nP\n\nac\nke\n\nt #\nn\n\nV\nal\n\nid\n t\n\nai\nl s\n\neq\nu\n\nen\nce\n\ns \nus\n\ned\n:\n\n55\n  5\n\n5 \n 5\n\n5 \n55\n\n  5\n5 \n\n55\n  5\n\n5 \n55\n\n (\nhe\n\nx)\nC\n\n5 \nC\n\n5 \nC\n\n5 \nC\n\n5 \nC\n\n5 \nC\n\n5 \nC\n\n5 \n79\n\n (h\nex\n\n)\n\nC\nL\n\nT\nU\n\n -\nC\n\no\nm\n\nm\nan\n\nd\n L\n\nin\nk\n\n T\nra\n\nn\ns\n\nm\nis\n\nsi\no\n\nn\n U\n\nn\nit\n\nS\nta\n\nrt\nS\n\neq\nue\n\nnc\ne\n\nE\nB\n\n90\n (\n\nhe\nx)\n\n1s\nt\n\nC\nod\n\neb\nlo\n\nck\n2n\n\nd\nC\n\nod\neb\n\nlo\nck\n\nn-\nth\n\nC\nod\n\neb\nlo\n\nck\nTa\n\nil\nS\n\neq\nue\n\nnc\ne\n\n16\n b\n\nit\n8 \n\nby\nte\n\n8 \nby\n\nte\n8 \n\nby\nte\n\n8 \nby\n\nte\n\nT\nC\n\n S\no\n\nu\nrc\n\ne \nP\n\nac\nke\n\nt\n\nP\nac\n\nke\nt H\n\nea\nde\n\nr\n\nP\nac\n\nke\nt D\n\nat\na \n\nFi\nel\n\nd\nP\n\nac\nke\n\nt\nE\n\nrr\nor\n\n C\non\n\ntr\nol\n\n \n(C\n\nR\nC\n\n)\n6 \n\nby\nte\n\nva\nria\n\nbl\ne \n\nle\nng\n\nth\n -\n\n23\n6 \n\nby\nte\n\n m\nax\n\n.\n2 \n\nby\nte\n\nA\npp\n\nlic\nat\n\nio\nn \n\nD\nat\n\na\n>\n\n C\no\n\nm\nm\n\nan\nd\n\n D\na\n\nta\n<\n\nD\nat\n\na \nFi\n\nel\nd\n\nH\nea\n\nde\nr\n\n4 \nby\n\nte\n\nP\nac\n\nke\nt:\n\n v\na\n\nri\nab\n\nle\n -\n\n2\n48\n\n b\ny\n\nte\n m\n\na\nx.\n\nT\nC\n\n S\ne\n\ng\nm\n\nen\nt:\n\n   \n   \n\n  \n   \n\n   \nva\n\nri\nab\n\nle\n -\n\n24\n9 \n\nb\ny\n\nte\n m\n\nax\n.\n\nC\no\n\nm\nm\n\na\nn\n\nd\n:\n\n   \n   \n\n  \n   \n\n   \nva\n\nri\nab\n\nle\n -\n\n23\n6 \n\nb\ny\n\nte\n m\n\nax\n.\n\nT\nC\n\n F\nra\n\nm\ne:\n\n   \n   \n\n  \n   \n\n v\nar\n\nia\nb\n\nle\n -\n\n25\n6\n\n b\nyt\n\ne \nm\n\nax\n.\n\nC\nL\n\nT\nU\n\n: \nva\n\nri\na\n\nb\nle\n\n -\n32\n\n0 \nb\n\nyt\ne \n\nm\nax\n\n.\n\nC\no\n\nd\neb\n\nlo\nc\n\nks\n: \n\nva\nri\n\na\nb\n\nle\n -\n\n37\n m\n\na\nx.\n\nT\nC\n\n T\nra\n\nn\nsf\n\ner\n F\n\nra\nm\n\ne\n\nF\nra\n\nm\ne \n\nH\nea\n\nde\nr\n\nT\nC\n\n F\nra\n\nm\ne \n\nD\nat\n\na \nU\n\nni\nt\n\n= \n1 \n\nTC\n S\n\neg\nm\n\nen\nt\n\nT\nC\n\n F\nra\n\nm\ne \n\nE\nrr\n\nor\n C\n\non\ntro\n\nl \n(C\n\nR\nC\n\n)\n5 \n\nby\nte\n\nva\nria\n\nbl\ne \n\nle\nng\n\nth\n -\n\n24\n9 \n\nby\nte\n\n m\nax\n\n.\n2 \n\nby\nte\n\nS\neq\n\nue\nn\n\nce\n F\n\nla\ng\n\ns \n=\n\n 1\n1 \n\n: n\no \n\nS\neg\n\nm\nen\n\nta\ntio\n\nn\n\nP\nac\n\nke\nt \n\nH\ne\n\nad\ne\n\nr\n\nV\ner\n\nsi\non\n\n(=\n00\n\n0)\n\n2 \nby\n\nte\n\n3\n\nT\nyp\n\ne\n(=\n\n1\n)\n\n1\n\nD\nF\n\nH\nF\n\nla\ng\n\n1\n\nP\nID 7\n\nP\nkt\n\n C\nA\n\nT\n\n4\n\nS\neq\n\nue\nnc\n\ne\nF\n\nla\ngs\n\n(=\n1\n\n1)\n\n2\n\nS\neq\n\nue\nnc\n\ne\nC\n\nou\nn\n\nt\n\n14\n\nP\nac\n\nke\nt\n\nD\na\nta\n\n F\nie\n\nld\nLe\n\nn\ngt\n\nh\n\n1\n6\n\n2 \nby\n\nte\n2 \n\nby\nte\n\nA\nP\n\nID\n\nP\nac\n\nke\nt I\n\nD\nP\n\nac\nke\n\nt \nS\n\ne\nqu\n\nen\nce\n\n C\non\n\ntr\nol\n\nP\nkt\n\n L\nen\n\ngt\nh\n\nD\nat\n\na \nF\n\nie\nld\n\n H\ne\n\nad\ne\n\nr\nS\n\nec\n.\n\nH\nea\n\nd\n.\n\nF\nla\n\ng\n(=\n\n0)\n\n1 \nby\n\nte\n1\n\nC\nR\n\nC\nF\n\nla\ngs\n\n0\n= \n\nno\n C\n\nR\nC\n\n1\n= \n\n   \n  \n\nC\nR\n\nC\n\n3\n4\n\nS\ner\n\nvi\nce\n\nT\nyp\n\ne\n\n8\n\nS\ner\n\nvi\nce\n\nS\nub\n\n-T\nyp\n\ne\n\n8\n8\n\n2 \nby\n\nte\n1 \n\nby\nte\n\nT\nC\n\n A\nck\n\n F\nla\n\ng\ns\n\n00\n01\n\n =\n  a\n\ncc\ne\npt\n\ned\n00\n\n10\n =\n\n s\nta\n\nrt\n e\n\nxe\nc\n\n01\n0\n\n0 \n= \n\n p\nro\n\ng\nre\n\nss\n10\n\n00\n =\n\n  e\nxe\n\ncu\nte\n\nd\n\nS\no\nur\n\nce\nID\n\nF\nra\n\nm\ne\n\n H\ne\n\nad\ne\n\nr\nV\n\ner\nsi\n\non\n(=\n\n00\n)\n\n2 \nby\n\nte\n2\n\nB\nyp\n\nas\ns\n\nF\nla\n\ng\n\n1\n\nC\non\n\ntr\nol\n\nC\nm\n\nd\nF\n\nla\ng\n\n1\n\nS\npa\n\nre\n(=\n\n00\n)\n\n2\n\nS\npa\n\nce\ncr\n\naf\nt\n\nID 10\n\nV\nir\ntu\n\na\nl\n\nC\nha\n\nnn\nel\n\nID 6\n\nF\nra\n\nm\ne\n\nL\nen\n\ngt\nh\n\n1\n0\n\nF\nra\n\nm\ne\n\nS\neq\n\nue\nn\n\nce\nN\n\num\nbe\n\nr\n8\n\n2 \nby\n\nte\n1 \n\nby\nte\n\nC\no\n\nd\neb\n\nlo\nc\n\nk \n\u2013 \n\no\nn\n\ne \no\n\nu\nt \n\no\nf \n\nn\nT\n\nC\n D\n\nat\na\n\n7 \nB\n\nyt\nes\n\nE\nrr\n\nor\n C\n\non\ntro\n\nl\n7\n\n P\nar\n\nity\n B\n\nits\n | \n\n1 \nF\n\nill\ner\n\n B\nit\n\n56\n b\n\nit\n8 \n\nbi\nt\n\nF\nra\n\nm\ne \n\nH\ne\n\nad\ne\n\nr \nT\n\nC\n V\n\nC\n:\n\nV\nC\n\n0\n =\n\n S\nW\n\n T\nC\n\n O\nB\n\nC\n C\n\no\nre\n\n N\nV\n\nC\n1\n\n =\n H\n\nP\nC\n\n1 \nC\n\nC\nS\n\nD\nS\n\n p\nro\n\nce\nss\n\no\nr \n\nN\nV\n\nC\n2\n\n =\n S\n\nW\n T\n\nC\n O\n\nB\nC\n\n C\no\n\nre\n R\n\nV\nC\n\n3\n =\n\n H\nP\n\nC\n1 \n\nC\nC\n\nS\nD\n\nS\n p\n\nro\nce\n\nss\no\n\nr \nR\n\nF\nig\n\n.\n1.\n\n11\nT\n\nel\nec\n\nom\nm\n\nan\nd\n\npa\nck\n\net\nde\n\nfi\nni\n\nti\non\n\n.\n?\n\nIR\nS\n\n,\nU\n\nni\nve\n\nrs\nit\n\ny\nof\n\nS\ntu\n\ntt\nga\n\nrt\n,\n\nte\nm\n\npl\nat\n\ne\n?\n\nA\nst\n\nri\num\n\n1 The System Design Concept 19\n\n\n\nP\nac\n\nke\nt:\n\n v\nar\n\nia\nb\n\nle\n -\n\n20\n48\n\n b\nyt\n\ne \nm\n\nax\n.\n\nT\nel\n\nem\net\n\nry\n:\n\nva\nri\n\nab\nle\n\n -\n20\n\n28\n b\n\nyt\ne \n\nm\nax\n\n.\n\nT\nM\n\n F\nra\n\nm\ne:\n\n 1\n11\n\n5 \nb\n\nyt\ne \n\n= \n89\n\n20\n b\n\nit\ns\n\nC\nA\n\nD\nU\n\n: \n12\n\n79\n b\n\nyt\ne\n\nT\nM\n\n S\no\n\nu\nrc\n\ne \nP\n\nac\nke\n\nt\n\nP\nac\n\nke\nt H\n\nea\nde\n\nr\n\nP\nac\n\nke\nt D\n\nat\na \n\nF\nie\n\nld\nP\n\nac\nke\n\nt\nE\n\nrr\nor\n\n C\non\n\ntr\nol\n\n \n(C\n\nR\nC\n\n)\n6 \n\nby\nte\n\nva\nria\n\nbl\ne \n\nle\nng\n\nth\n -\n\n20\n28\n\n b\nyt\n\ne \nm\n\nax\n.\n\n2 \nby\n\nte\n\nS\nou\n\nrc\ne \n\nD\nat\n\na\n\n>\n T\n\nel\nem\n\net\nry\n\n D\nat\n\na\n<\n\nD\nat\n\na \nF\n\nie\nld\n\nH\nea\n\nde\nr\n\n12\n b\n\nyt\ne\n\nT\nM\n\n T\nra\n\nn\nsf\n\ner\n F\n\nra\nm\n\ne\n\nF\nra\n\nm\ne \n\nH\nea\n\nde\nr\n\nF\nra\n\nm\ne \n\nD\nat\n\na \nF\n\nie\nld\n\nF\nra\n\nm\ne \n\nT\nra\n\nile\nr\n\n6 \nby\n\nte\n11\n\n05\n b\n\nyt\ne\n\n4 \nby\n\nte\n\nT\nra\n\nn\nsf\n\ner\n F\n\nra\nm\n\ne \nT\n\nra\nile\n\nr\n\nC\nL\n\nC\nW\n\n4 \nby\n\nte\n\nF\nra\n\nm\ne \n\nE\nrr\n\nor\n \n\nC\non\n\ntr\nol\n\n (\nC\n\nR\nC\n\n)\nno\n\nt u\nse\n\nd.\nC\n\nov\ner\n\ned\n b\n\ny \nR\n\nS\n\n0 \nby\n\nte\n\nC\ntr\n\nl\nW\n\nor\nd\n\nT\nyp\n\ne\n(=\n\n0) 1\n\nC\nLC\n\nW\nV\n\ner\nsi\n\non\n\n(=\n00\n\n)\n\n2\n\nS\nta\n\ntu\ns\n\nF\nie\n\nld\ns\n\n3\n\nC\nO\n\nP\nin\n\nE\nffe\n\nct\n(=\n\n01\n)\n\n2\n\nV\nirt\n\nua\nl\n\nC\nha\n\nnn\nel\n\nID 6\n\nS\npa\n\nre\n\n2\n\nR\nep\n\nor\nt\n\nV\nal\n\nue 8\n\nS\npa\n\nre\n\n1\n\nF\nar\n\nm\nB\n\nC\nou\n\nnt\n\n2\n\nN\no\n\nR\nF\n\nA\nva\n\nil\n\n1\n\nF\nla\n\ng\ns\n\nN\no\n\nB\nit\n\nLo\nck 1\n\nLo\nck\n\n-\nO\n\nut 1\n\nW\nA\n\nIT 1\n\nR\ne-\n\ntr\nan\n\ns-\nm\n\nit 1\n\nP\nac\n\nke\nt \n\nH\nea\n\nd\ner\n\nV\ner\n\nsi\non\n\n(=\n00\n\n0)\n\n2 \nby\n\nte\n\n3\n\nT\nyp\n\ne\n(=\n\n0) 1\n\nD\nF\n\nH\nF\n\nla\ng\n\n1\n\nP\nID 7\n\nP\nkt\n\n C\nA\n\nT\n\n4\n\nS\neq\n\nue\nnc\n\ne\nF\n\nla\ngs\n\n(=\n11\n\n)\n\n2\n\nS\neq\n\nue\nnc\n\ne\nC\n\nou\nnt\n\n14\n\nP\nac\n\nke\nt\n\nD\nat\n\na \nF\n\nie\nld\n\nLe\nng\n\nth\n\n16\n\n2 \nby\n\nte\n2 \n\nby\nte\n\nA\nP\n\nID\n\nP\nac\n\nke\nt I\n\nD\nP\n\nac\nke\n\nt S\neq\n\nue\nnc\n\ne \nC\n\non\ntr\n\nol\nP\n\nkt\n L\n\nen\ngt\n\nh\n\nD\nat\n\na \nF\n\nie\nld\n\n H\nea\n\nd\ner\n\nF\nill\n\ner\n\n(=\n0)\n\n1 \nby\n\nte\n\n1\n\nE\nrr\n\nor\nC\n\non\ntr\n\nol\nF\n\nla\ngs 3\n\n4\n\nS\ner\n\nvi\nce\n\nT\nyp\n\ne\n\n8\n\nS\ner\n\nvi\nce\n\nS\nub\n\n-T\nyp\n\ne\n\n8\n4\n\n2 \nby\n\nte\n1 \n\nby\nte\n\nF\nill\n\ner\n\n(=\n0)\n\nS\nyn\n\nc \nS\n\nta\ntu\n\ns\n\nP\nP\n\nS\nS\n\nou\nrc\n\ne\n\nS\nyn\n\nc\nQ\n\nua\nl.\n\nIn\nde\n\nx\n\n4\n16\n\n6 \nby\n\nte\n\nT\nim\n\ne \n-D\n\nay\n S\n\neg\nm\n\nen\nte\n\nd \n(C\n\nD\nS\n\n)\n\nD\nay\n\n o\nf\n\nE\npo\n\nch\n:\n\n0 \n:=\n\n 1\n.1\n\n.2\n00\n\n0\n\nM\nill\n\nis\nec\n\n.\nof\n\n D\nay\n\n32\n\nF\nra\n\nm\ne \n\nH\nea\n\nd\ner\n\nV\ner\n\nsi\non\n\n(=\n00\n\n)\n\n2 \nby\n\nte\n2\n\nD\nF\n\nH\nF\n\nla\ng\n\n(=\n0) 1\n\nV\nirt\n\nua\nl\n\nC\nha\n\nnn\nel\n\nId 3\n\nO\np\n\nC\ntr\n\nl\nF\n\nla\ng\n\n1\n\nS\npa\n\nce\ncr\n\naf\nt\n\nID 10\n\nM\nas\n\nte\nr\n\nC\nha\n\nnn\nel\n\nF\nra\n\nm\ne\n\nC\nou\n\nnt\n\n1 \nby\n\nte\n\nF\nra\n\nm\ne \n\nId\nen\n\ntif\nic\n\nat\nio\n\nn\nV\n\nirt\nua\n\nl\nC\n\nha\nnn\n\nel\nF\n\nra\nm\n\ne\nC\n\nou\nnt\n\n1 \nby\n\nte\n\nF\nra\n\nm\ne \n\nD\nat\n\na \nF\n\nie\nld\n\n S\nta\n\ntu\ns\n\n2 \nby\n\nte\n\nS\nyn\n\nc\nF\n\nla\ng\n\n(=\n0) 1\n\nP\nkt\n\nO\nrd\n\ner\nF\n\nla\ng\n\n(=\n0) 1\n\nS\neg\n\nm\nen\n\nt\nLe\n\nng\nth\n\nID\n(=\n\n11\n)\n\n2\n\nF\nirs\n\nt\nH\n\nea\nde\n\nr\nP\n\noi\nnt\n\ner\n\n11\n\nL\neg\n\nen\nd:\n\n (\n=\n\n<\nva\n\nlu\ne>\n\n) \n::=\n\n=\n f\n\nix\n n\n\num\ner\n\nic\nal\n\n v\nal\n\nue\nne\n\nxt\n li\n\nne\n f\n\nro\nm\n\n b\not\n\nto\nm\n\n: n\num\n\nbe\nr \n\nof\n b\n\nits\n in\n\n f\nie\n\nld\nbo\n\ntto\nm\n\n li\nne\n\n: n\num\n\nbe\nr \n\nof\n b\n\nyt\nes\n\n in\n f\n\nie\nld\n\nC\nA\n\nD\nU\n\nA\ntta\n\nch\ned\n\nS\nyn\n\nc.\n M\n\nar\nke\n\nr\n1A\n\nC\nF\n\nF\nC\n\n1D\nD\n\nat\na \n\nS\npa\n\nce\n\n32\n b\n\nits\n89\n\n20\n b\n\nits\n\n4 \nby\n\nte\n\nR\nee\n\nd-\nS\n\nol\nom\n\non\n C\n\nod\neb\n\nlo\nck\n\nC\nhe\n\nck\n S\n\nym\nbo\n\nls\n\n12\n80\n\n b\nits\n\n12\n75\n\n b\nyt\n\ne \n(1\n\n02\n00\n\n b\nits\n\n)\n\n16\n\n8 \nby\n\nte\n\nT\nim\n\ne \n-D\n\nay\n S\n\neg\nm\n\nen\nte\n\nd \n(C\n\nD\nS\n\n)\n\nD\nay\n\n o\nf\n\nE\npo\n\nch\n:\n\n0 \n:=\n\n 1\n.1\n\n.2\n00\n\n0\n\nM\nill\n\nis\nec\n\n.\nof\n\n D\nay\n\n32\n\n-s\nec\n\nof\n D\n\nay\n\n16\n\n4 \nby\n\nte\n\n32\n\nO\nffs\n\net\nC\n\nou\nnt\n\ner\n\nF\nig\n\n.\n1.\n\n12\nT\n\nel\nem\n\net\nry\n\npa\nck\n\net\nde\n\nfi\nni\n\nti\non\n\n.\n?\n\nIR\nS\n\n,\nU\n\nni\nve\n\nrs\nit\n\ny\nof\n\nS\ntu\n\ntt\nga\n\nrt\n,\n\nte\nm\n\npl\nat\n\ne\n?\n\nA\nst\n\nri\num\n\n20 J. Eickhoff\n\n\n\n1.6.3 I/O and CCSDS-Board\n\nThe bridge between the Processor-Boards and the spacecraft platform and payload\nequipment is realized via intermediate I/O-Boards (Fig. 1.13). These I/O-Boards\nmimic the digital interface function of a Remote Interface Unit (RIU) in a com-\nmercial S/C. The I/O-Boards are connected to the Processor-Boards via a\nSpaceWire connection running an RMAP protocol. Two redundant I/O-Boards are\navailable and are cross coupled to the two redundant Processor-Boards. For the\ndevelopment of the I/O-Boards the university selected 4Links Ltd., UK, as partner\ndue to their extensive experience with SpaceWire equipment and software.\nAnother reason for selecting 4Links was the excellent experience of the author\nwith 4Links SpaceWire test equipment on ground.\n\nThe I/O-Boards SpaceWire functionality and data routing between SpaceWire\nand the low level I/O and bus interfaces have been implemented as IP Core on an\nMicrosemi/Actel A3PE3000L FPGA. Applying Triple Module Redundancy\n(TMR), for all gates on the FPGA makes this part of the OBC infrastructure\nsufficiently radiation tolerant which is an outstanding criterion of the FLP satellite\ncompared to other university projects.\n\nThe idea for the CCSDS-Boards was to use the identical design as for the I/O-\nBoards, just with less interfaces:\n\nFig. 1.13 I/O-Board\u2014EM.\n? 4Links Ltd\n\n1 The System Design Concept 21\n\n\n\n\u2022 The coupling of the CCSDS-Boards to the Processor-Boards was planned be\ndone similarly via SpaceWire links.\n\n\u2022 The interface on the CCSDS-Board\u2019s transceiver side would be RS422.\n\u2022 And the interface for HPCs to the Combined-Controller of the PCDU for\n\ncommands bypassing OBSW also were designed as RS422 type.\n\u2022 And finally the above mentioned CCSDS IP Core was intended to be loaded on\n\nthe same type of FPGA as for the I/O-Boards.\n\nWith this approach the CCSDS-Boards could be implemented without any\nadditional effort, just by use of the same housing, FPGA, PCB, connectors and the\nlike, just as \u2018\u2018not fully equipped\u2019\u2019 I/O-Board with a different IP Core.\n\n1.6.4 OBC Power-Boards\n\nFor the power supply boards\u2014which are described in more detail later in Chap. 5\n\u2014it was decided right from the start to manufacture these at the IRS by the\nelectrical engineering team. These Power-Boards mainly have the task to convert\nthe satellite power bus voltage of 24 V down to the required voltages for the\ndifferent OBC data handling boards\u2014which is 3.3 V nominal (Fig. 1.14).\n\nDuring the design evolution the Power-Boards were adapted in addition to route\nsome of the OBC internal signals which are available e.g. on the Processor-\nBoard\u2019s front connectors to the top of the overall housing assembly\u2014please refer\nto Fig. 1.1 respectively 1.2.\n\nFurthermore, a logic circuitry was mounted to route the active pulse signal from\nthe multiple redundant GPS as a single output line towards the Processor-Boards.\n\nFig. 1.14 Power-Board\u2014\nEM. ? IRS, University of\nStuttgart\n\n22 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\n\n\n1.6.5 The PCDU with Enhanced Functionality\n\nAs already cited in Sect. 1.3 the PCDU supplier for the satellite mission was\nalready selected at start of the overall CDPI architecture design, however the cited\nfunctions for\n\n\u2022 overall analog equipment command and control,\n\u2022 for the OBC reconfiguration and for,\n\u2022 the HPC interface functionality to implement implicitly the functions of an\n\nOBC\u2019s CPDU,\n\nwere specified during the engineering process to the supplier in accordance with\nthe CDPI concept as explained in Sect. 1.4. All the PCDU functional upgrades\nfrom a standard PCDU controller to the Combined-Controller were implemented\nby Vectronic Aerospace into the PCDU firmware.\n\nDetails on these functions and features, on redundancy handling, cross cou-\nplings etc. all can be found in Chap. 8. Already in the overall EM Satellite Test\nBed (STB) these functions were available and the corresponding PCDU EM is\nshown in Fig. 1.15.\n\n1.7 Testing the CDPI in an Integrated Environment\n\nThe entire CDPI electronics subsequently was tested on an EM Satellite Test Bed\n(STB) and later on a satellite FlatSat setup. Since for EM the units became\navailable step by step and partly as EM, partly as breadboard and the overall STB\nsetup was non-redundant, these units were mounted into a 19\u2019\u2019 rack together with\npower supply equipment, debugging equipment, a spacecraft simulator. Together\n\nFig. 1.15 Power Control and Distribution Unit\u2014EM. ? IRS, University of Stuttgart/Vectronic\nAerospace\n\n1 The System Design Concept 23\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8\n\n\nwith a ground command equipment this STB infrastructure formed an adequate\nverification setup.\n\nFigure 1.16 shall only provide an initial impression of the overall infrastructure\n(please also refer to [4], [87]). The details on applied tests, the available test\ninfrastructure etc. are included in more detail in Chap. 9.\n\n1.8 The Flight Model Assembly\n\nAll Flight Model components of the CDPI, namely the OBC boards and the PCDU\nhave been manufactured under cleanroom conditions. The same applies to the\nassembly of the OBC from the individual frames and the integration of OBC and\nPCDU into the overall CDPI. These steps have been performed by the IRS in the\ncleanroom facilities of the \u2018\u2018Raumfahrtzentrum Baden-W\u00fcrttemberg\u2019\u2019 in Stuttgart.\nFigure 1.17 depicts the CDPI assembly Flight Model of the FLP satellite in the IRS\ncleanroom. The setup here consists of the 2 separate housings of OBC and PCDU,\nready for connecting cabling of:\n\n\u2022 OBC Telemetry output and Telecommand input lines to/from satellite trans-\nceivers respectively bypass\n\n\u2022 Control lines from OBC to PCDU for normal control of power functions and for\ncontrol of the PCDU\u2019s analog RIU functions\n\n\u2022 OBC watchdog lines to the PCDU Common-Controller\n\u2022 HPC lines for PCDU commanding from ground via CCSDS decoders.\n\nThe input power to the PCDU power is provided here by a laboratory supply\nwhich later is replaced by the solar array and the battery for flight. The onboard\nbattery is not yet mounted in this setup. For the tests of this assembly on unit and\nsystem level please refer to Chap. 9.\n\nFig. 1.16 Satellite test bed for OBC EM/EBB integration tests. ? IRS, University of Stuttgart\n\n24 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9\n\n\n1.9 Conceptual Outlook for future Missions\n\nComparing the implemented OBC/PCDU architecture with the overall satellite\nmission, the mission objectives and the satellite complexity\u2014please also refer to\nChap. 10\u2014makes the solution deem a bit oversized on the first impression. For the\nsake of control of a simple university Micro Satellite, the OBC design, commu-\nnication protocols etc. could have been much simpler, as e.g. applied during the\nDLR BIRD or ESA SSETI satellites.\n\nThe target for this infrastructure design however was to reach a technology\nlevel, which also is of interest for industry for future mission applications and this\nalso was the reason for industry partners engaging so much in this project. This not\nonly applies to the industry partners directly providing components for the OBC\nand PCDU, but also concerning those industry and agency partners providing test\nequipment or simulators at pure material cost or even as donations.\n\nThe developed CDPI design\u2014for which the dedicated following chapters\npresent the individual board details\u2014can be easily adapted to other future low-cost\nmissions1 concerning diverse aspects:\n\n\u2022 The PCDU with its modular design can be adapted flexibly to other missions\nwith different numbers of LCL and FCL outputs.\n\n\u2022 The OBC and the PCDU also could be integrated in a single common housing\nwhich avoids the external OBC/PCDU channel wiring. This was not applied for\nthe current mission since in the FLP platform OBC and PCDU reside geo-\nmetrically in different satellite compartments with a shear wall in between.\n\nFig. 1.17 CDPI FM units forming the start of the satellite FlatSat testbench. ? IRS, University\nof Stuttgart\n\n1 \u2018\u2018Low-cost\u2019\u2019 in the sense of a low cost platform versus industry or agency project price ranges.\n\n1 The System Design Concept 25\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10\n\n\n\u2022 The OBC design can be extended with external SpaceWire interfaces by adding\nSpaceWire router boards, one for the nominal and one for the redundant OBC\nside.\n\n\u2022 The OBC design with its inter-board cabling and the external interfaces can be\nadapted to a classical PCB/backplane design if required. However looking back\nto the individual, parallel board engineering processes and the decoupling of\ndesign and production cycles during the prototype development, the frame based\napproach with an inter-board harness showed some significant benefit con-\ncerning late design freeze for the boards.\n\n\u2022 The overall OBC architecture also is flexible to exchange the CPU board by\nfuture multi-core LEON chip implementations such as the GR712 LEON3 dual-\ncore SBC which is under development at Aeroflex Gaisler AB.\n\n\u2022 Optionally the CDPI infrastructure can also be enhanced with an integrated\npayload data management unit for future missions.\n\nThe engineering team is highly interested to apply the CDPI system concept\nalso in further missions.\n\n26 J. Eickhoff\n\n\n\nChapter 2\nThe OBC Processor-Boards\n\nSam Stratton and Dave Stevenson\n\n2.1 The Processor-Boards as ITAR Item\n\nThe Processor-Board as radiation hard component and as product of a United\nStates company is classified as element falling under the ITAR (International\nTraffic in Arms Regulations). The boards produced for the University of Stuttgart\nare provided under the TAA (Technical Assistance Agreement), TA-6151-10.\nThe contributions in this chapter from the side of Aeroflex Inc. have been verified\nby the Aeroflex legal department to be in agreement with the ITAR rules and the\na.m. TAA.\n\nS. Stratton (&) ? D. Stevenson\nAeroflex Colorado Springs Inc, Colorado Springs, CO, USA\ne-mail: sam.stratton@aeroflex.com\n\nD. Stevenson\ne-mail: dave.stevenson@aeroflex.com\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_2,\n? Springer-Verlag Berlin Heidelberg 2013\n\n27\n\n\n\n2.2 The Processor-Board: A Single Board Computer\n\nThe OBC Processor-Board was developed as a SBC (Single Board Computer),\nwhich also can be used for other purposes than controlling a satellite. Potential\nother applications in space could be as instrument controller for satellites or space\nstation instruments and many other applications.\n\nA Single Board Computer or SBC for short is a common term used for any\ncomputer that incorporates all of the essential components that a processor needs\nto perform its intended function. The SBC includes all of the memory resources,\nI/O and communication interfaces necessary to operate. The board is in fact a\nself-contained computer and functions as such without the need of additional\ncircuit boards (Fig. 2.1).\n\nTypical home computers do not implement an SBC as their Processor-Board.\nThey will in most cases have a processor on a mother board with additional cards\nconnected to the mother board for functions such as memory control and graphics\nprocessing for example. All computers have some basic requirements that are\nnecessary for the computer to operate\u2014requirements such as memory resources,\ninterfaces including a keyboard and a monitor as well as communication interfaces\nsuch as Ethernet and USB.\n\nSome of the first computer cards developed in the 1970s were of the SBC type.\nThese were the early days of processor technology, so it was easier to incorporate\nall of the necessary resources and means of communicating with the processor on a\nsingle circuit board. As processor and other memory and interface technology\nprogressed it became necessary to offload some of the functions to different cards.\nFunctions such as Ethernet, memory controllers and graphics processing were\ntypically implemented on separate circuit cards often called \u2018daughter\u2019 cards.\nToday, there are virtually no single board computers in the home PC market.\n\nFig. 2.1 OBC processor-\nboard flight model in the\nmounting frame. ? Aeroflex\nInc./IRS, Uni Stuttgart\n\n28 S. Stratton and D. Stevenson\n\n\n\nThough not typically used in home PCs, SBC computers are very typical in\nsatellite applications as well as many industrial and aerospace computer systems.\nThey are a much more specialized type of computer and in the case of satellite and\nmilitary applications, are designed for more extreme environments.\n\nIn general, most SBCs used for satellite or automation purposes will implement\nspecialized operating systems called RTOS (Real Time Operating Systems). One of\nthe main concepts behind an RTOS is the idea commonly referred to as \u2018\u2018deter-\nminacy\u2019\u2019. Determinacy is the ability of a computer system to calculate with great\naccuracy the response time of any given process. Most satellite implementations of\nprocessors require the tasks performed by the processor to be very deterministic.\n\n2.3 Technical Overview\n\nThe OBC Processor-Board is a Single Board Computer (SBC) that is designed to\nperform the main processor function within the OBC system. The board is designed\nand implemented based on requirements passed down from the University of\nStuttgart to Aeroflex Colorado Springs. Requirements were then analyzed by\nAeroflex and a design approach was arrived at in consult with the University of\nStuttgart. The following subsections describe the flight version of the SBC and not\nthe EM version due to the fact that there are some significant differences (Fig. 2.2).\n\n2.3.1 The OBC Microprocessor Device\n\nThe processor on an SBC is the heart of the board and is chosen based on the\nperformance requirements of the program. In this case the term \u2018performance\u2019 is\nused in a much broader context than one would usually think. For a satellite,\n\nFig. 2.2 Processor-Board engineering model and flight model. ? Aeroflex Inc.\n\n2 The OBC Processor-Boards 29\n\n\n\nor other high reliability application, performance is not just a reference to pro-\ncessing power but can and usually does include environmental and mechanical\nperformance as well. The environmental performance capabilities are important\nbecause satellite OBCs will typically be subjected to much higher extremes of\ntemperature, and mechanical stress than a typical home PC processor chip.\nAdditional parameters that are considered when choosing a processor for a satellite\napplication are power consumption as well as radiation performance. All of these\nrequirements are important and are considered very carefully before a processor is\nchosen for any satellite program.\n\nFor the FLP satellite\u2019s OBC Processor-Board, the Aeroflex UT699 LEON3FT\nprocessor was chosen (Fig. 2.3). This processor is highly suited for satellite\napplications based on all of the above criteria. The LEON3FT is a 32 bit\nSPARCTM V8 device with many interfaces suitable for multiple types of imple-\nmentations. For the FLP satellite program, it was decided at the program level to\nuse SpaceWire as the primary interface between all of the boards in the OBC unit.\nSpaceWire is a high speed serial bus uniquely suited for inter-system communi-\ncation and control of a satellite. The bus is essentially a bit shipping protocol with\nthe data being defined by the user for their own specific needs. For a full\ndescription of the SpaceWire protocol please refer to [11] and [12].\n\n2.3.2 The OBC Memory Configuration\n\nAll SBCs require memory in order to process data and perform tasks. Two dif-\nferent types of memory fulfill different functions inside an embedded computer:\n\nNon-volatile Memory:\nThe first type of memory is known as non-volatile and is named as such due to the\nfact that when the power is removed from the board the device retains the data\nstored inside its cells. Non-volatile memory is essential because it typically\ncontains the operating system the processor will use when it boots on power-up.\nIn a home PC the non-volatile memory is fulfilled by the boot EEPROM and the\n\nFig. 2.3 LEON3FT in CQFP\npackage. ? Aeroflex Inc.\n\n30 S. Stratton and D. Stevenson\n\n\n\nhard disk drive though in recent years we are seeing more and more solid state\ndevices take the place of a hard disk. Since there are no hard disk drives that are\nqualified to fly in space, the non-volatile memory in a satellite needs to be of the\nsolid state variety. Some types of non-volatile memory include Flash-Memory,\nEEPROM, FRAM, and MRAM. These devices will retain data when not powered.\n\nVolatile Memory:\nThe second type of memory on an SBC is referred to as volatile memory. Volatile\nmemory will not retain data when the power is removed and therefore can only be\nused by the processor when it is powered up and performing its intended function.\nCommon varieties of volatile memory include SRAM, Synchronous SRAM,\nDynamic RAM or DRAM, and Synchronous Dynamic RAM or SDRAM. These\nare all examples of volatile memory. For satellite applications, the most common\nform of volatile memory is Static Random Access Memory (SRAM).\n\n2.3.3 The OBC FPGA for Miscellaneous Functions\n\nDuring the course of designing a processor system, requirements that are not easily\nfulfilled using a microprocessor, will often require implementation in discrete\nlogic or most likely a Field Programmable Gate Array (FPGA). The FLP program\nhas some OBC Processor-Board requirements that are not easily implemented with\nsoftware on the LEON3FT. So the design team decided to implement these\nfunctions on a radiation tolerant FPGA (Fig. 2.4).\n\nThe FPGA is typically a better choice over discrete logic because an FPGA will\nusually take up less space on the board and will also most likely use less power.\nThe process of choosing an FPGA for a satellite system is similar to the process of\nchoosing a microprocessor. Electrical, temperature as well as mechanical and\nradiation performance need to be considered prior to making a choice of FPGA.\nFor the FLP satellite program the Aeroflex UT6325 in the CGA484 package was\nchosen for its radiation performance as well as for its relatively small footprint and\nease of implementation. The device is well suited for housekeeping functions and\nother tasks that would be very difficult if not impossible to implement using\ndiscrete logic devices. The device is readily available and has good flight history.\n\nFig. 2.4 UT6325 RadTol\neclipse FPGA. ? Aeroflex\nInc.\n\n2 The OBC Processor-Boards 31\n\n\n\n2.4 The OBC Processor-Board Functional Overview\n\nThe OBC Processor-Board is a UT699 LEON3FT based 3U PCB card with 8 MB of\non board SRAM and 4 MB of on board non-volatile FRAM memory. The primary\nmethod of communication on the OBC Processor-Board is through the four Space-\nWire ports that are connected directly to the LEON3FT. The SpaceWire ports give\naccess to and from the OBC Processor-Board and the other peripheral OBC Boards in\nthe system. Additional interfaces include Ethernet and RS422 interface which are\nboth used for ground testing and debug of the system. There is also a LEON3FT\nDebug Support Unit (DSU), that can be accessed using the front panel connector.\n\nThe on chip LEON3FT EDAC function has been implemented on the SBC for\nboth the volatile and the non-volatile memory spaces. The following section\ndiscuss in more detail all of the interfaces on the SBC.\n\nA top level functional diagram of the OBC flight board is shown in Fig. 2.5\nwhich provides a graphical view of the overall design of the OBC Processor-\nBoard.\n\nOne important aspect that will be covered in more detail in later sections is the\nfact that the FPGA is handling the CE signals to both the volatile and non-volatile\nmemories as explained in more detail in the following section.\n\n4MB \nEDAC \n\nNVMEM\n\nD\ne\n\nd\nic\n\na\nte\n\nd\nS\n\np\na\nc\ne\n\nW\nire\n\nB\nu\ns\ne\ns\n\nAddress /Data\n\nSpw1   10 Mbs\n\nSpw2   10 Mbs\n\nSpw3   10 Mbs\n\nRS-422\n\n8MB \nEDAC\nSRAM\n\nUT699\nLEON3\n\nSpw4   10 Mbs\n\nEthernet\n\nUT6325 \nFPGA\n\nLeon 3 Addr 20 to 22\n\nNVMEM CE\n\nSRAM CE\n\nRA\nM\n\nS\nand\n\nR\nO\n\nM\nS\n\nSignals\n\nSLEEP Bits\n\nOne Second Pulse\n\nFig. 2.5 OBC processor-Board block diagram (flight model). ? Aeroflex Inc.\n\n32 S. Stratton and D. Stevenson\n\n\n\n2.5 The OBC Processor-Board Memory Interface\n\nAll microprocessors require memory to perform their desired function. The OBC\nProcessor-Board memory interface was implemented based on requirements pas-\nsed down from the University of Stuttgart to the designers at Aeroflex. Any issues\nor changes to the board during the design process were made in consult with the\nUniversity.\n\nThe amount of on board memory contained on any Processor-Board is a very\nimportant element in the performance of the processor. This fact is true of home\nPCs as well as SBCs and follows the common understanding that more is better.\nAs mentioned previously, the processor requires two types of memory\u2014volatile\nand nonvolatile.\n\n\u2022 Non-volatile memory: This type of memory will retain data even when the\npower to the board has been turned off. It is suitable for storing the processor\noperating system. This type of memory is similar in function to the boot EE-\nPROM and hard disk used in home computers. It typically is slower than most\ntypes of volatile memory which however is acceptable since it is accessed only\nduring boot-up of the computer.\n\n\u2022 Volatile memory: This type of memory does not retain data when the power to\nthe device is turned off. It is suitable for use by the processor when running its\nintended tasks (Fig. 2.6).\n\nThe amount of each type of memory on the board is dependent on the functional\nrequirements of the board being designed. The non-volatile memory devices need\nto be dense enough to hold the entire RTOS image as well as any boot code that\nthe user desires.\n\nNon-volatile Memory Resources:\nFor the FLP satellite program it was decided to use FRAM devices for the flight\nconfiguration. On power up of the OBC board the LEON3FT will load the RTOS\nimage from the FRAM devices to the SRAM for flight operation. The FRAM\ndevices also have a \u2018Sleep Bit\u2019 that allows the user to set the device in a low power\nmode once the image has been loaded into SRAM. The interface on the SBC was\n\nFig. 2.6 Aeroflex stacked\nSRAM on Flight Unit. ?\nAeroflex Inc.\n\n2 The OBC Processor-Boards 33\n\n\n\ndesigned to use both of the ROM Select (ROMS) signals on the LEON3FT.\nROMS[0] begins at address 0x00000000 and ROMS[1] begins at 0x10000000.\nEach bank of non-volatile memory provides 2 MB of SRAM to the LEON3FT.\n\nNon volatile Interface to LEON3FT:\nThe non-volatile interface to the LEON3FT is fairly straight forward with the\nexception of the Chip Enable signals to the devices. The timing of these signals at\nthe 33 MHz system clock used for the LEON3FT is not compatible with the FRAM\ndevices under worst case conditions. It became necessary to use the on board FPGA\nto force these signals to meet the worst case timing of the FRAM device.\n\nFigure 2.7 shows the top level interface from the LEON3FT to the FRAM\ndevices. The ROMS signal from the LEON3FT to the FPGA, is essentially the\nChip Enable signal from the LEON3FT. The FPGA manipulates the timing of the\nROMS signal to create CE signals to the FRAM devices. The manipulation is such\nthat the CE signals will meet the timing of the FRAMs and the system impact is\nthe use of three wait states required when interfacing to the non-volatile memory\nspace by the LEON3FT. Since these memories are not read from frequently, the\nimpact to the processor performance is almost negligible.\n\n\u2022 LEON3FT Access to NVMEM:\nThe LEON3FT processor has two Chip Enables for the ROM memory area on\nthe device. The non-volatile memory devices are mapped into the ROMS[0] and\nthe ROMS[1] space of the LEON3FT. The ROMS signals are Chip Enables for\nnon-volatile memories. The result is there are two banks of 2 MB each of non-\nvolatile memory on the FM SBC.\n\n\u2022 NVMEM Wait States:\nA minimum of three wait states need to be set in the LEON3FT Memory\nConfiguration 1 (mcfg1) register when NVMEM accesses are performed. This is\nto ensure the timing of the LEON3FT interface using the FPGA to control the\nCE signals to the FRAM devices. The three wait states should be set for both\nread and write. Refer to the LEON3FT Functional Manual [50] for a detailed\ndescription of the mcfg registers in the LEON3FT. Note that on power up the\ndefault wait states for the PROM memory area are set to the maximum of 30.\n\nUT6325 \nFPGA\n\nData\n4MB EDAC \n\nNVMEM\n\nFR\nA\n\nM\nC\n\nE\n\nAddress\n\nUT699\nLEON3\n\nControl\n\nROMSFig. 2.7 LEON3FT NV\nmemory interface. ?\nAeroflex Inc.\n\n34 S. Stratton and D. Stevenson\n\n\n\n\u2022 NVMEM Sleep Bit Function:\nEach of the FRAM devices on the OBC Processor-Board has a \u2018Sleep Bit\u2019 that is\nused to put the device into a low power mode. Once the program code has been\nread from the LEON3FT and is stored into SRAM, it is recommended that the\nuser sets these bits low when the devices are not being accessed. The sleep bits\nare connected to GPIO signals on the LEON3FT and they have pull-ups con-\nnected to them because the LEON3FT defaults all GPIO signals to inputs.\nHaving the pull-ups ensures the LEON3FT will have access to the non-volatile\nmemory space after power up or after the LEON has been reset by the FPGA.\n\n\u2022 Sleep Bit Implementation:\nThe two Sleep Bits are implemented on the FM SBC using LEON3FT GPIO\nsignals. Each one controls one bank of 2 MB of non-volatile memory. Table 2.1\nexplains these signals and identifies their default condition.\n\n\u2022 NVMEM EDAC Implementation:\nThe LEON3FT on chip EDAC has been enabled on the FM SBC. Refer to the\nLEON3FT Functional Manual for a full description of the EDAC for the PROM\nmemory area.\n\nVolatile Memory Resources:\nThe SBC contains 8 MB of on-board SRAM. When the LEON3FT is powered up or\nis reset, it will load the program code stored in the non-volatile memory space into the\nSRAM memory space. All of the processing for the OBC is done with code running\nfrom the SRAM memory space. The SRAM chosen for the OBC Processor-Board is\nan Aeroflex stacked SRAM device with four die inside a single package. A single\nRAM Select (RAMS) signal from the LEON3FT is routed to the FPGA and subse-\nquently, four enables are generated from the FPGA to the SRAM device (Fig. 2.8).\n\nTable 2.1 NVSLEEP GPIO assignments\n\nSignal name LEON3FT I/O GPIO assignment Reset value Description\n\nNVSLEEP0 O GPIO12 High 2 MB Bank 0 Sleep bit\nNVSLEEP1 O GPIO13 High 2 MB Bank 1 Sleep bit\n\n512K by 39\nSRAM\nDie 1\n\n512K by 39\nSRAM\nDie 4\n\nAddress [18:0]\n\nW\nG\n\nE1\n\nE4\n\nData [31:0]\n\nFig. 2.8 Aeroflex 8 MB stacked SRAM with on chip EDAC bits. ? Aeroflex Inc.\n\n2 The OBC Processor-Boards 35\n\n\n\n\u2022 LEON3FT Access to SRAM:\nThere are four Chip Enables on the LEON3FT. The OBC uses one of these\nsignals along with upper address bits to control the four Chip Enable signals to\nthe SRAM device. The 32 bit data bus on the LEON3FT is connected to the\nlower 32 bits of data on the SRAM device and the Error Detection and Cor-\nrection (EDAC), check bits are connected to the upper 7 bits of data on the\nSRAM. Figure 2.9 shows a simplified version of this interface. The SRAM\ninterface does not need any wait states set in the LEON3FT memory controller.\n\n\u2022 LEON3FT SRAM EDAC:\nOne of the primary requirements for the OBC Processor-Bard was to have all\nmemories protected with EDAC. The OBC Processor-Board utilizes the\nLEON3FT on chip EDAC for the SRAM memory space. The Check bits on the\nLEON3FT are connected to the SRAM data bits [39:32]. Memory controller\nregisters manage the function of the EDAC as well as their enabling on the SBC.\nThe reader is referred to the LEON3FT Functional Manual [50] for a description\nof how the EDAC functions are enabled for the SRAM space.\n\n2.6 The OBC Processor-Board SpaceWire Interface\n\nSpaceWire is a point to point serial bus that supports full duplex communication at\na data rate of up to 200 Mbs. The protocol uses a simple \u2018token\u2019 based system to\nmanage data to and from each end point. Each token character tells the receiver of\nthe token that the transmitter has 8 bytes of data space available in its receive\nbuffer. Therefore, if a SpaceWire node has data to send it will send 8 bytes of data\nfor each token it receives. The resulting function is simply as follows: As long as\neach side has data to send, and the data that gets received is taken out of the\nreceive buffer, the system keeps running. For the FLP satellite program, the SBC\nimplements all four of the dedicated SpaceWire ports on the LEON3FT micro-\nprocessor operating at 10 Mbs (Fig. 2.10).\n\nUT6325 \nFPGA\n\nData\n\n8MB\nStacked \nSRAM\n\nS\nR\n\nA\nM\n\nC\nE\n\nAddress\nUT699\nLEON3\n\nControl\n\nRAMS[0]\n\nCheck Bits\n\n[31:0]\n[39:32]\n\nFig. 2.9 LEON3FT SRAM\ninterface. ? Aeroflex Inc.\n\n36 S. Stratton and D. Stevenson\n\n\n\nSpaceWire Ports Management:\nAll four SpaceWire ports on the LEON3FT are enabled for operation using\nLEON3FT SpaceWire registers. These registers control a number of important\ncharacteristics of the SpaceWire ports. Characteristics such as Port Enable, ini-\ntialization data rate, disconnect time and timeout duration to name a few. The\nregisters are discussed in detail in the LEON3FT User\u2019s Guide [50] and the reader\nis encouraged to refer to this document for detail discussion of the LEON3FT\nSpaceWire registers.\n\nSpaceWire Clock and Data Rate:\nThe SBC implements the SpaceWire clock input to the LEON3FT using a 10 MHz\noscillator. The registers that set the transmit data rate are set such that the\nSpaceWire ports operate at 10 Mbs.\n\n2.7 Miscellaneous Functions\n\nThe OBC Processor-Board has a number of miscellaneous functions that are not\nsuitable for the LEON3FT microprocessor. These functions have been designed\ninto the UT6325 FPGA and are discussed in the following sections. FPGAs are\nuniquely suited for Processor-Board utility functions and the UT6325 is used by\nthe OBC Processor-Board designers (Fig. 2.11).\n\nFig. 2.10 LVDS quad driver\nfootprint on SBC layout. ?\nAeroflex Inc.\n\nFig. 2.11 UT6325 in CQFP\npackage. ? Aeroflex Inc.\n\n2 The OBC Processor-Boards 37\n\n\n\n2.7.1 NVMEM Chip Enable\n\nAs stated previously, the FM22L16 FRAM devices chosen for the OBC Processor-\nBoard have timing that is incompatible with the timing of the LEON3FT. There-\nfore, certain signals required to control the memory need to be managed by the on-\nboard FPGA. The signals in this instance are the FRAM Chip Enables. The internal\nlogic of the FPGA ensures the proper timing over worst case flight conditions.\n\n2.7.2 SRAM Chip Enable\n\nThe LEON3FT is not designed to interface directly with SRAM devices that\nimplement a stacked die configuration. The used UT8ER2M39 SRAM devices\nhave four die layers inside one package. The on-board FPGA uses one of the Chip\nEnables from the LEON3FT along with upper address bits to generate the four\nChip Enables to the SRAM devices.\n\n2.7.3 Pulse Per Second Interface\n\nA very good example of a utility function suited for an FPGA is the Pulse Per\nSecond requirement (PPS). The signal is used to sync the star tracker interface of\nthe FLP satellite to the LEON3FT. The signal is generated by the on-board FPGA\nand provided on the 44 pin D-sub connector. Generating this type of signal using\nMSI devices would require four or five separate chips and would also most likely\ntake up more board space than the FPGA.\n\nThe one second pulse is shown in Fig. 2.12 and this scope plot was taken from\nthe OBC FM unit. The timing is measured from the rising edge to the next rising\nedge. The timing parameters for the signal are shown in Table 2.2. The signal is also\nrouted to one of the GPIOs on the LEON3FT. That way, the signal can be monitored\nby the LEON3FT if the user desires. The GPIO used for this input is GPIO 10.\n\nFig. 2.12 Processor-Board oscilloscope plot of the PPS signal. ? Aeroflex Inc.\n\n38 S. Stratton and D. Stevenson\n\n\n\nOne Second Pulse Reset:\nThere is a signal connected to LEON3FT GPIO 15 and routed to the FPGA that is\nused to reset the one second pulse. The minimum pulse width in order to reliably\nreset the one second pulse is two system clock cycles.\n\n2.7.4 Watchdog Signal and LEON3FT Reset\n\nThe LEON3FT has a watchdog trip signal on chip and the OBC processor routes\nthat signal to the FPGA. When enabled, the logic inside the FPGA will use the\nwatchdog signal trip to reset the LEON3FT.\n\nWatchdog Trip Enable:\nThe LEON3FT GPIO14 has been setup to enable the reset of the LEON3FT when\na watchdog trip occurs. If GPIO14 is set \u2018High\u2019 by the LEON3FT and there is a\nLEON3FT watchdog trip, the LEON3FT will be reset by the FPGA. The default\nupon power-up of the Watchdog Trip Enable is disabled (Low).\n\n2.7.5 RS422 Interface\n\nThe RS422 interface is implemented using a combination of the inputs on the P5\nconnector, the LEON3FT GPIO signals and the LEON3FT on chip UART. See\nalso Fig. 2.14.\n\nUnused Transmit and Receive Signal Handling:\nIf the user does not wish to use the RS422TXEN and RS422RXEN input signals\nthe following settings must be applied:\n\nIn the GPIO port direction register at address 0x80000908, bits [5] and [6] have\nto be set to \u2018High\u2019. This will set GPIO5 and GPIO6 to outputs.\n\n2.7.6 Resets\n\nAll digital circuit boards need to be reset at the very least on power up. The OBC\nprocessor is no exception. There is a Power On Reset circuit that will hold the\nLEON3FT in reset until the input power is stable (Fig. 2.13).\n\nTable 2.2 Pulse accuracy depending on operating temperature\n\nTemperature range (?C) Minimum pulse frequency (Hz) Maximum pulse frequency (Hz)\n-55 to +125 0.9999950 1.0000500\n\n2 The OBC Processor-Boards 39\n\n\n\nPOR Reset:\nThe Power On Reset (POR) on the OBC Processor-Board is approximately 250 ms\nlong. The LEON3FT and the FPGA will be reset at power-up. The FPGA is only\nreset at power-up and is designed to control the LEON3FT reset.\n\nLEON3FT External Reset:\nThe external reset signal is provided through the 44 pin connector that is used for\nan external reset of the LEON3FT. The implementation of this signal should be\nsuch that when the user wants to reset the LEON3FT, this signal is to be pulled\ndown to \u2018Low\u2019. When the reset is terminated, the signal should be left floating. On\nthe SBC, the FPGA performs the reset to the LEON3FT.\n\n2.7.7 Clock Interfaces\n\nLEON3FT System Clock:\nThe SBC implements the System Clock input to the LEON3FT using a 33 MHz\noscillator.\n\nSpaceWire Clock:\nThe SpaceWire clock as already cited is 10 MHz.\n\n2.7.8 DSU/Ethernet Interface Card (DEI)\n\nFor debug and test of the OBC Processor-Boards\u2014both EM and FM models\u2014a\nsmall PCB card was designed by Aeroflex Colorado Springs to interface to the\nLEON3FT DSU and Ethernet ports respectively. Details on this card can be found\nin Sect. 11.1.\n\nPOR \nCircuit\n\nUT6325 \nFPGA\n\n3.3V\n\nLEON3FT\n\n44\nP\n\nin\nC\n\non\nne\n\nct\nor\n\nExternal Reset\n\nWD_EN\nWD\n\nFig. 2.13 Processor-Board reset lines. ? Aeroflex Inc.\n\n40 S. Stratton and D. Stevenson\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\nThe Ethernet interface on the LEON3FT is implemented by routing the signals\nfrom the LEON3FT to the 44 pin D-sub connector. During debug the user will use\nthe DSU/Ethernet Interface card to implement the Ethernet connection.\n\nThe LEON3FT microprocessor on the OBC Processor-Board also has a Debug\nSupport Unit (DSU) on the device and these signals are routed on the SBC to the\n44 pin D-sub connector. When attempting to access the DSU, the user will use the\nDSU/Ethernet Interface card.\n\n2.8 Power Specifications\n\nThe SBC has a 44 pin D-sub connector which is used for the 3.3 V \u00b1 5 % input\npower. In addition there are five MDM 9 pin connectors, 4 of which are for\nSpaceWire interfaces and one for RS422. The SBC consumes a maximum of no\nmore than 5w at full throughput.\n\n2.9 Mechanical Design and Dimensions\n\nThe SBC is based on a 3U cPCI Printed Circuit Board (PCB). The dimensions are\n100 mm by 160 mm. Refer to Fig. 2.14 for a conceptual drawing of the board and\nthe connector placement.\n\n160.00 mm\n\n100.00 mm\n\n3.20 mm\n\n80.00 mm\n\n50.00 mm\n\n70.00 mm\n\n10.00 mm\nDrill Hole \n\nKeepout area\n\n9.7\n5\n\nby\n4\n\n0.2\n5\n\n6\n.5\n\n0\nb\n\ny\n1\n\n0.00\n\nD\nB\n\n-44\n\nE\nthernet and P\n\now\ner\n\nR\nS\n\n-422\n\nP\nort1\n\n6.0 mm\n\n6.0 mm\n\nP\nort 2\n\nP\nort 0\n\n6.5\n0\n\nb\ny\n\n10\n.00\n\n6\n.50\n\nby\n1\n\n0.0\n0\n\n6.5\n0\n\nb\ny\n\n10\n.00\n\n6\n.50\n\nby\n1\n\n0.0\n0\n\nP\nort 3\n\n2\n.\n\n0\n0\n\nm\nm\n\nProposed Frame \nDimensions\n\n2.0 mm\n\nSpaceWire\n\nFig. 2.14 Processor-Board mechanical concept. ? Aeroflex Inc.\n\n2 The OBC Processor-Boards 41\n\n\n\nChapter 3\nThe I/O-Boards\n\nBarry M. Cook, Paul Walker and Roger Peel\n\n3.1 Common Design for I/O and CCSDS-Boards\n\nThe approach for these two OBC components is a common design for the OBC\nI/O-Boards and the CCSDS decoder/encoder boards (or CCSDS-Boards for short).\nBoth of these board types are available with single redundancy inside the OBC and\nare connected to the two OBC Processor-Boards via cross coupled SpaceWire\nlinks running RMAP protocol. A key characteristic is that although implementing\n\nB. M. Cook (&) ? P. Walker ? R. Peel\n4Links Ltd., Milton Keynes, UK\ne-mail: barry@4links.co.uk\n\nP. Walker\ne-mail: paul@4links.co.uk\n\nR. Peel\ne-mail: roger@4links.co.uk\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_3,\n? Springer-Verlag Berlin Heidelberg 2013\n\n43\n\n\n\ncompletely different functionalities both boards are based on the same 3U printed\ncircuit board, FPGA chip and I/O-driver ICs design.\n\nThe I/O-Boards are designed by 4Links Limited, including both printed circuit\nboard and functionality implemented in the FPGA IP Core. All the I/O-Board IP,\nfor SpaceWire, RMAP, and the I/O interfaces is from 4Links. The SpaceWire core\nis derived from the design used in 4Links test equipment for SpaceWire, which\nuses synchronous clock and data recovery\u2014greatly simplifying the design and\neliminating problems of asynchronous design. The simplified IP Core\u2019s ease of use\nis testified by a recent customer who praised 4Links\u2019 support when, in practice,\nnegligible support was required (Fig. 3.1).\n\nThe CCSDS-Board is reusing the I/O-Board PCB with a limited interface\ninstrumentation and without mass memory chips. It only needs connection to the\nspacecraft\u2019s transceivers and the decoding Combined-Controller in the PCDU for\nHPC1 type high priority commands. The corresponding CCSDS functionality is\nimplemented by Aeroflex Gaisler AB, G\u00f6teborg, in an IP Core derived from the\nAeroflex Gaisler GR-TMTC-0002.\n\nBoth board types are based on an Microsemi/Actel A3PE3000L PQ208 FPGA.\nThis common board concept saves considerable cost for hardware development\nwhich is essential for a low-cost project like a University satellite. Both boards\u2019 IP\nCores are featuring Triple Module Redundancy (TMR), technology for achieving a\nhigher immunity against Single-Event Upsets (SEU).\n\n3.2 The I/O-Board as Remote Interface Unit\n\nThe I/O-Board provides connections between the currently active Processor-Board\nand operational sensors and actuators which means it takes the role of a Remote\nInterface Unit (RIU), in a conventional spacecraft architecture. In this sense it is\n\nFPGA \u2013 Actel ProASIC 3e\nA3PE3000 (Industrial temperature version )\n\nRS422/485 \nBuffers\n\nDigital line \nBuffers\n\nMRAM\n\nUARTs Digital I/O RAM \nInterface\n\nSpaceWire \nCODECs\n\nRemote Memory Access Protocol (RMAP) \nTargetLVDS \n\nBuffers\n\nIICBus \nI/F\n\nO/C \nBuffers\n\nFibreoptic \nGyro I/F\n\nFig. 3.1 I/O-Board\nblock diagram.\n? 4Links Ltd.\n\n44 B. M. Cook et al.\n\n\n\nrouting the onboard TM and TC signals directly to spacecraft\u2019s GPS receivers, star\ntrackers, fiberoptic gyros, reaction wheels, magnetotorquer electronics, magnetometer\nelectronics, telemetry tracking and control equipment, payload controller, payload\ndata downlink system and the power control and distribution unit. The reader inter-\nested in the details of the FLP target satellite\u2019s architecture is referred to Chap. 10 and\nspecifically to Fig. 10.5. In total, an I/O-Board provides 62 external interfaces:\n\n\u2022 2 SpaceWire links at 10 Mb/s.\n\u2022 22 UART interfaces, mostly full duplex, at rates from 9600 to 115200 baud\n\u2022 1 bus at 2 MHz for the fiberoptic gyro\n\u2022 2 IIC buses at 100 kHz and\n\u2022 35 digital I/O lines.\n\nData transfer between the I/O-Board and Onboard Computer occurs within a\nschedule of 1.25 ms time slots. The most demanding transfer, 1200 bytes in a\nsingle slot, amounts to not quite 1 MB/s. This is achieved with a SpaceWire raw\nline rate of 10 Mb/s. The FPGA can thus be run with a 10 MHz clock, reducing\ndynamic power consumption and also reducing the probability that an upset in the\ncombinatorial logic will be retained.\n\nTransfers between the I/O-Board and attached devices are slower and several\ntransactions can occur simultaneously\u2014this is far simpler and more easily verified\nas concurrent hardware in FPGA than as pseudo-concurrent software on a pro-\ncessor. The connection between the OBC and I/O-Board will be kept reasonably\nbusy with transfers at 10 Mb/s, making SpaceWire with its LVDS interface a good\nchoice. Other interfaces run at a much lower data rate and source terminated\nRS422/485 lines are used for most connections so that power is consumed only\nduring edge transitions, giving a very low average power consumption whilst also\nproviding a wide voltage swing to provide good noise immunity.\n\nSpaceWire CODECS conform to the current ECSS standard [11] and the\nassociated RMAP protocol [13, 14] was chosen to structure transfers. Although a\nRemote Memory Access Protocol (RMAP) is an obvious choice for accesses to\nmemory\u2014MRAM that can be used as both normal SRAM and NVRAM\u2014it is less\nclearly suited to streaming data such as found in UARTs.\n\nExternal (non-memory) transfers are made to look like memory transfers with a\nsimple additional protocol between RMAP and the device. Details differ, depending\non the exact interface requirement (UART, IIC, etc.) but all follow the same overall\nstructure. Data to be sent from the I/O-Board (to an instrument or actuator) is first\nwritten to a memory-mapped buffer where it is held until confirmed to be error-free.\nIt is transferred from the buffer to the external interface, taking account of those\ninterfaces that require a more complex action than a simple data-copy\u2014for\nexample an IIC read which uses a write/read sequence of sending an address\nfollowed by inputting data. Received data is stored in a buffer until read, as a\nstandard memory read, by a later transaction initiated by the OBC Processor-Board.\nEach external interface is given a unique RMAP memory address.\n\n3 The I/O-Boards 45\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-10\nhttp://dx.doi.org/10.1007/978-3-642-35557-10\nhttp://dx.doi.org/10.1007/978-3-642-35557-10\n\n\n3.3 The I/O-Board as OBC Mass Memory Unit\n\nFurthermore, the I/O-Boards is equipped with mass memory for\n\n\u2022 satellite housekeeping telemetry,\n\u2022 timeline storage,\n\u2022 storage of specific spacecraft status and health status information [10],\n\u2022 as well as for uploaded timelines.\n\nThe individual use, partitioning of the memory etc. is mission specific and under\nresponsibility of the satellite Onboard Software (OBSW). With respect to dimen-\nsioning of the memory it is not targeted for the storage of science data telemetry from\nsatellite payloads. In the FLP target satellite mission a dedicated Mass Memory Unit\n(MMU), managed by the payload controller is responsible for this task.\n\nTo avoid losing the stored information in case of a power outage of the OBC\u2014\nespecially not the housekeeping information and the spacecraft status informa-\ntion\u2014the I/O-Board memory is realized as non-volatile mass memory.\n\nThe non-volatile memory is Magnetic RAM (MRAM) which has the benefit\nthat is can be written and read as static random access memory (SRAM) with\nsimilar speed to SRAM. MRAM is claimed to have unlimited endurance (number\nof read or write cycles) and to retain non-volatile data for at least 20 years. The\nstorage elements are claimed to be immune to single-event-upsets. We selected\nEverspin MR4A16B devices, each with 1,048,576 words of 16 bits, used on the\nI/O-Board as 2MBytes (8-bit Bytes) per chip.\n\nTen chips are used to provide 20 MBytes overall non-volatile memory per\nI/O-Board, organised as two regions: telemetry data (16 MB) and status data\n(4 MB). Access is completely random access as individual Bytes.\n\nThe mass memory read/write accesses also are performed applying the RMAP\nprotocol. More information is provided later in Sect. 3.5.\n\n3.4 I/O-Board Hot Redundant Operation Mode\n\nIn normal operational cases one OBC I/O-Board is active, controlled by the active\nProcessor-Board. As described, the OBC controls all the satellite\u2019s onboard\nequipment through the driver interfaces of the I/O-Board and it stores all the\nrelevant status and housekeeping data and timeline processing status in the\nI/O-Board memory.\n\nHowever in case an interface driver\u2014e.g. a UART\u2014to an onboard equipment\nbecomes defective w.r.t. its hardware, cabling or maybe even on the controlled\nequipment\u2019s side, it might be required to switch over to the redundant I/O-Board. In\nsuch case however the operational board also should contain the current house-\nkeeping and status data as well as the recorded history. Therefore the functionality\nexists to reconfigure to the healthy I/O-Board and still keep the defective one\n\n46 B. M. Cook et al.\n\n\n\nswitched on with deactivated interface buffer chips. This permits the history of the\nrecorded telemetry on the defective I/O-Board to be copied over to the healthy one.\n\nThe buffer chips are deactivated by removing their power, in which case their\noutputs become high-impedance.\n\nThe I/O-Board\u2019s interface buffers are not powered until instructed by writing\nvalues at address 098100 (the value 255 powers the buffers, 0 removes power, any\nother value is invalid). The first logic value controls connector-D buffers and the\nsecond value controls connector-E buffers.\n\n3.5 I/O-Board RMAP Interface\n\nSpaceWire can be used with no protocol or with one or more of a variety of\nprotocols. As the I/O Board has a substantial memory that is written and read by\nthe OBC, the SpaceWire Remote Memory Access Protocol (RMAP), standardized\nby ECSS-E-ST-50-52C [14] was considered suitable.\n\n3.5.1 Board Identification for I/O-Boards\n\nThe developed I/O-Board type is called SIU B-012-PPFLPIO.\nThe board identity (Nominal or Redundant) via SpaceWire from OBC core is\n\nset by grounding selected pins on connector-E, allowing the board ID to be set by\nlocation in the wiring harness.\n\n\u2022 The Nominal board is selected by grounding1 the TMS pin 55 and leaving the\nTDI pin 80 open or connected to pin 81 (J_VJTAG), see Fig. 11.7.\nThe board will then respond to requests sent to logical address 0921.\n\n\u2022 The Redundant board is selected by grounding2 the TDI pin 80 and leaving the\nTMS pin 55 open or connected to pin 81 (J_VJTAG). The board will then\nrespond to requests sent to logical address 0922.\n\nOther combinations of TMS and TDI (both open/V_JTAG or both grounded)\nare invalid and will result in the board not responding to SpaceWire commands.\n\nWrites/Reads to undefined addresses will result in the RMAP status code 10\n(command not possible) being returned.\n\n1 If the JTAG function is required (for example, to load new firmware) the \u2018\u2018grounded\u2019\u2019 pin may\nbe connected via a 1 KX resistor to ground and the programmer can then be wired directly to the\nconnector pin. The JTAG programmer should be disconnected when it is not being used to ensure\ncorrect board operation.\n\nThe board will then respond to requests sent to logical address 0921.\n\n3 The I/O-Boards 47\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-11\nhttp://dx.doi.org/10.1007/978-3-642-35557-11\n\n\nT\nab\n\nle\n3.\n\n1\nI/\n\nO\n-B\n\noa\nrd\n\nR\nM\n\nA\nP\n\nad\ndr\n\nes\nse\n\ns\n\nE\nxt\n\nen\nde\n\nd\nad\n\ndr\nes\n\ns\nA\n\ndd\nre\n\nss\nF\n\nun\nct\n\nio\nn\n\nN\not\n\nes\n\n09\n03\n\n09\n00\n\n00\n00\n\n00\nto\n\n09\n00\n\n3F\nF\n\nF\nF\n\nF\n4\n\nM\nB\n\nM\nR\n\nA\nM\n\nS\nta\n\nte\n-v\n\nec\nto\n\nr\nm\n\nem\nor\n\ny\nA\n\ndd\nre\n\nss\nes\n\nw\nra\n\np\nar\n\nou\nnd\n\nw\nit\n\nhi\nn\n\nth\nis\n\nad\ndr\n\nes\ns\n\nsp\nac\n\ne\n09\n\n02\n09\n\n00\n00\n\n00\n00\n\nto\n09\n\n00\nF\n\nF\nF\n\nF\nF\n\nF\n16\n\nM\nB\n\nM\nR\n\nA\nM\n\nT\nel\n\nem\net\n\nry\nm\n\nem\nor\n\ny\nA\n\ndd\nre\n\nss\nes\n\nw\nra\n\np\nar\n\nou\nnd\n\nw\nit\n\nhi\nn\n\nth\nis\n\nad\ndr\n\nes\ns\n\nsp\nac\n\ne\n09\n\n01\n09\n\n81\n00\n\nL\nog\n\nic\n-o\n\nut\nC\n\non\ntr\n\nol\ns\n\npo\nw\n\ner\nto\n\nth\ne\n\nbu\nff\n\ner\ns\n\n09\n01\n\n09\n81\n\n10\nU\n\nA\nR\n\nT\n96\n\n00\nb/\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n11\n\nU\nA\n\nR\nT\n\n96\n00\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\n12\nU\n\nA\nR\n\nT\n96\n\n00\nb/\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n13\n\nU\nA\n\nR\nT\n\n96\n00\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\n20\nII\n\nC\n10\n\n0\nkH\n\nz,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n21\n\nII\nC\n\n10\n0\n\nkH\nz,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n30\nU\n\nA\nR\n\nT\n57\n\n60\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\n31\nU\n\nA\nR\n\nT\n57\n\n50\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n40\nU\n\nA\nR\n\nT\n57\n\n60\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n41\nU\n\nA\nR\n\nT\n57\n\n60\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n42\nU\n\nA\nR\n\nT\n57\n\n60\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n43\nL\n\nog\nic\n\n-o\nut\n\n3\nsi\n\ngn\nal\n\ns,\nC\n\non\nne\n\nct\nor\n\nE\n09\n\n01\n09\n\n81\n44\n\nL\nog\n\nic\n-i\n\nn\n3\n\nsi\ngn\n\nal\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n50\nU\n\nA\nR\n\nT\n11\n\n5\n20\n\n0\nb/\n\ns,\nC\n\non\nne\n\nct\nor\n\nE\n09\n\n01\n09\n\n81\n51\n\nL\nog\n\nic\n-o\n\nut\n1\n\nsi\ngn\n\nal\n,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n60\nF\n\nib\ner\n\nop\nti\n\nc\nG\n\nyr\no\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\n70\nU\n\nA\nR\n\nT\n11\n\n5\n20\n\n0\nb/\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n71\n\nU\nA\n\nR\nT\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n72\nU\n\nA\nR\n\nT\n11\n\n5\n20\n\n0\nb/\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n73\n\nU\nA\n\nR\nT\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n74\nL\n\nog\nic\n\n-o\nut\n\n3\nsi\n\ngn\nal\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n75\n\nL\nog\n\nic\n-o\n\nut\n3\n\nsi\ngn\n\nal\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n76\nL\n\nog\nic\n\n-i\nn\n\n6\nsi\n\ngn\nal\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n\n(c\non\n\nti\nnu\n\ned\n)\n\n48 B. M. Cook et al.\n\n\n\nT\nab\n\nle\n3.\n\n1\n(c\n\non\nti\n\nnu\ned\n\n)\n\nE\nxt\n\nen\nde\n\nd\nad\n\ndr\nes\n\ns\nA\n\ndd\nre\n\nss\nF\n\nun\nct\n\nio\nn\n\nN\not\n\nes\n\n09\n01\n\n09\n81\n\n77\nL\n\nog\nic\n\n-i\nn\n\n6\nsi\n\ngn\nal\n\ns,\nC\n\non\nne\n\nct\nor\n\nE\n09\n\n01\n09\n\n81\n80\n\nU\nA\n\nR\nT\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\n90\nU\n\nA\nR\n\nT\n11\n\n5\n20\n\n0\nb/\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n91\n\nU\nA\n\nR\nT\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\n92\nU\n\nA\nR\n\nT\n11\n\n5\n20\n\n0\nb/\n\ns,\nC\n\non\nne\n\nct\nor\n\nD\n09\n\n01\n09\n\n81\n93\n\nU\nA\n\nR\nT\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\nA\n0\n\nU\nA\n\nR\nT\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\nA\n1\n\nU\nA\n\nR\nT\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\nB\n1\n\nU\nA\n\nR\nT\n\n(s\npa\n\nre\n)\n\n96\n00\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\nB\n2\n\nU\nA\n\nR\nT\n\n(s\npa\n\nre\n)\n\n96\n00\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nD\n\n09\n01\n\n09\n81\n\nB\n3\n\nU\nA\n\nR\nT\n\n(s\npa\n\nre\n)\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\nB\n4\n\nU\nA\n\nR\nT\n\n(s\npa\n\nre\n)\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n09\n01\n\n09\n81\n\nB\n5\n\nU\nA\n\nR\nT\n\n(s\npa\n\nre\n,\n\nin\npu\n\nt\non\n\nly\n)\n\n11\n5\n\n20\n0\n\nb/\ns,\n\nC\non\n\nne\nct\n\nor\nE\n\n3 The I/O-Boards 49\n\n\n\n3.5.2 I/O Board Interface RMAP Addresses\n\nOverall, the board presents itself as a large, sparse, memory map accessed through\nthe RMAP protocol. Table 3.1 lists the mapping from RMAP memory space to\nreal memory and interfaces, showing how the \u2018extended address\u2019 field is used to\nselect major blocks and \u2018address\u2019 for the detailed selection.\n\nWrites to the state vector memory and telemetry memory are unbuffered:\nverification before writing is not possible. At least some of the data will be written\nto memory, even if an error occurs\u2014the RMAP Verify Bit will be ignored. If a\nwrite acknowledge is requested and an error occurs, a specific error code will be\nreturned (unless the header is corrupted, in which case there will be no reply\u2014and\nno data will be written to memory.)\n\nWrites to the UART, IIC, FOG and Logic-out are fully buffered and data may\nbe verified before it is written. Data will not be transferred if the RMAP Verify Bit\nis set and an error occurs. Some data may be transferred if the RMAP Verify Bit is\nnot set, even if an error occurs.\n\n3.5.3 Returned RMAP Status Values\n\nSee Table 3.2\n\nTable 3.2 I/O-Board RMAP return status values\nStatus value in a\nresponse packet\n\nMeaning Notes\n\n0 Completed OK Memory: Data in memory is correct; UART/Logic-out/IIC/\nFiberoptic Gyro: Data is being sent to interface\n\n2 Unused type code An invalid RMAP command was received\n\n3 Invalid key Must be 0900\n\n4 Invalid data CRC Memory: Data was written to memory; UART/Logic-out/\nIIC/Fiberoptic Gyro: Data was discarded, no data was sent\nto the interface\n\n5 Unexpected EOP Memory: Data was written to memory; UART/Logic-out/\nIIC/Fiberoptic Gyro: Data was discarded, no data was sent\nto the interface\n\n6 Too much data Memory: Data was written to memory; UART/Logic-out/\nIIC/Fiberoptic Gyro: Data was discarded, no data was sent\nto the interface\n\n7 Unexpected EEP Memory: Data was written to memory; UART/Logic-out/\nIIC/Fiberoptic Gyro: Data was discarded, no data was sent\nto the interface\n\n9 Verify buffer overrun Memory: Data was written to memory; UART/Logic-out/\nIIC/Fiberoptic Gyro: Data was discarded, no data was sent\nto the interface\nThis code will be returned if the amount of data sent\nexceeds the transmit buffer size.\n\n10 Command not possible All data was discarded\n\n12 Invalid target address Must be 0921 or 0922\n\n50 B. M. Cook et al.\n\n\n\n3.6 I/O Circuits, Grounding and Terminations\n\nThis section depicts the I/O circuitry diagrams for the diverse types of interface,\nfor both nominally grounded interfaces and for specific interfaces which due to the\ntarget satellite\u2019s connected equipment required I/O groups with isolated ground on\nthe board.\n\nThis interface type is applied for all RS485 and RS422 connections in the\nspacecraft. For the target platform the this interface applies to connections of the\nOBC with PCDU, magnetometer control electronics, the transceiver housekeeping\ninterfaces, the reaction wheels and the fiberoptic gyros.\n\nA low-pass filter is applied at the output terminals to reduce possible Electro-\nmagnetic Interference (EMI) to other signals/systems in the spacecraft. At a\nmaximum data rate of 2 Mb/s for any signal (and most at 100 kb/s or less) the\nbuffer output rise and fall times are far faster than required. Fast edges do not aid\nsignal integrity in this application (inputs all have Schmitt triggers) but merely\nenhance spurious emissions\u2014hence the filtering (Fig. 3.2).\n\nDifferential signals, such as the standard serial differential interface, complete\nthe circuit with their own signal return path\u2014the other wire of the differential pair.\nSingle ended signals need a return path, possibly common to a number of signals\nto the same place but, in order to avoid grounding problems, this must be isolated\nfrom the power ground. The ADuM14xx and ADum54xx series isolators were\nchosen as they also provide an isolated power supply for connector-side buffers.\n\nSome onboard equipment on the small satellite only provides IIC connections,\nsuch as the magnetotorquer control electronics. To avoid ground loops inside the\nspacecraft between the controlled equipment and the OBC these IICs are imple-\nmented as isolated groups (see Fig. 3.3). Isolation is achieved by means of mag-\nneto-couplers.\n\nFig. 3.2 Example for a standard serial differential interface. ? 4Links Ltd.\n\n3 The I/O-Boards 51\n\n\n\nAnother example for an isolated group interface is given in Fig. 3.4. It serves\nfor units requiring onboard SW patch functions. The example depicted here is\nfrom the GPS receiver (Fig. 3.5).\n\nAnd finally there may exist connected S/C units with a bunch of different\ncommand/control interfaces which all must be electrically isolated as being\ngrounded physically on equipment unit side. For such units entire isolated I/F\ngroups are provided on the I/O-Board. The example depicted in Fig. 3.5 is used for\na complex payload controller.\n\nFig. 3.3 Example for an isolated IIC group. ?4Links Ltd.\n\nnc\n\nnc\n\nnc\n\nnc\nnc\n\nnc\n\nnc\n\nselect_3V3_VISOnc\nGPS_CDM_2\n\nGPS_CDM_1\n\nGPS_CDM_0\n\nGPS_CDM_ON\n\nGPS_INT_ON\n\nSW_NVRET\n\nETR\n\nEUD\n\nEUR\n\nEVD\n\nEVR\n\nEYD\n\nEY_VOUT\n\nGPS_3V3\n\nGROUP_E3_RETURN\n\nS_ET_IN_T\n\nS_EU_IN_T\n\nS_EU_OUT_T\n\nS_EV_IN_T\n\nS_EV_OUT_T\n\nC50\n\n10nF\n\nC51\n\n10nF\n\nC52\n\n10nF\n\nC132\n\n10nF\n\nC\n13\n\n3\n\n10\n0n\n\nF\n\nC\n13\n\n4\n\n10\n0n\n\nF\n\nC\n13\n\n5\n\n10\n0n\n\nF\n\nC\n13\n\n6\n\n10\n0n\n\nF\n\nC\n16\n\n4\n\n+\n\n10\nu\n\nF\n\nC\n16\n\n5\n\n+\n\n10\nu\n\nF\n\nD1\n\nBAS40H\n\nD2\n\nBAS40H\n\nGND-ISO-A\nGND-ISO-B\n\nGND1A\nGND1B\n\nRCOUT\n\nVDD1\n\nVIA\n\nVIB\n\nVIC\n\nVID\n\nVISO\n\nVOA\n\nVOB\n\nVOC\n\nVOD\n\nVSEL\n\nIC40\nADuM5402\n\nGND1A\nGND1B\n\nGND2A\nGND2B\n\nVDD1 VDD2\n\nVE1 VE2\n\nVIA\n\nVIB\n\nVIC\n\nVID\n\nVOA\n\nVOB\n\nVOC\n\nVOD\n\nIC52\nADuM1402\n\n1A 1Y\n1Z\n\n2A 2Y\n2Z\n\n3A 3Y\n3Z\n\n4A 4Y\n4Z\n\nG\n\nGBAR GND\n\nVCC\n\nIC53\nAM26LV31\n\nR71\n\n10k\n\nR73\n\n10k\n\nR74\n\n100R\n\nR75\n\n10k\n\nR76\n\n100R\n\nR81\n\n100R\n\nGND\n\nGND\n\nGND\n\nS\nW\n\nE\n+3\n\nV\n3\n\nS\nW\n\nE\n+3\n\nV\n3\n\nFig. 3.4 Isolated group for equipment with SW patch function\u2014here GPS. ?4Links Ltd.\n\n52 B. M. Cook et al.\n\n\n\nThe I/O-Board debug/JTAG Interface finally completes the set of external OBC\ninterfaces. The electrical grounding and termination diagrams are provided in\nFig. 3.6.\n\nCPN_RESET_0\n\nCPN_V_ALERT_0\n\nCPN_MASTER_0\n\nCPN_T_ALERT_0\n\nPB_RESET_0\n\nPB_STATUS_0\n\nnc\n\nnc\nnc\n\nnc\n\nnc\n\nnc\n\nnc\n\nnc\n\nnc\n\nselect_3V3_VISO\n\nCPN_CC_ERROR_0\n\nCPN_CC_READY_0\n\nCPN_VTX_READY_0\n\nCPN_0_3V3\n\nD1BD\n\nD1BR\n\nD1CD\n\nD1CR\n\nDOD\n\nDOR\n\nDPD\n\nDPR\n\nDQD\n\nDQR\n\nDRR\n\nDSR\n\nDTR\n\nD_D1B_IN_I\n\nD_D1B_IN_T\n\nD_D1B_OUT_I\n\nD_D1B_OUT_T\n\nD_D1C_IN_I\n\nD_D1C_IN_T\n\nD_D1C_OUT_I\n\nD_D1C_OUT_T\n\nGROUP_D1_RETURN\n\nS_DO_IN_T\n\nS_DO_OUT_T\n\nS_DP_IN_T\n\nS_DP_OUT_T\n\nS_DQ_IN_T\n\nS_DQ_OUT_T\n\nS_DR_IN_T\n\nS_DS_IN_T\n\nS_DT_IN_T\n\nC\n21\n\n10\n0n\n\nF\n\nC\n22\n\n10\n0n\n\nF\n\nC\n23\n\n10\n0n\n\nF\n\nC24\n\n10nF\n\nC25\n\n10nF\n\nC26\n\n10nF\n\nC\n27\n\n10\n0n\n\nF\n\nC\n28\n\n10\n0n\n\nF\n\nC\n29\n\n10\n0n\n\nF\n\nC126\n\n10nF\n\nC\n13\n\n7\n\n10\n0n\n\nF\n\nC\n13\n\n8\n\n10\n0n\n\nF\n\nC139\n\n270pF\n\nC140\n\n270pF\n\nC\n15\n\n2\n\n+\n\n10\nuF\n\nC\n15\n\n3\n+\n\n10\nuF\n\nC156\n\n10nF\n\nC157\n\n10nF\n\nGND-ISO-A\nGND-ISO-B\n\nGND1A\nGND1B\n\nRCOUT\n\nVDD1\n\nVIA\n\nVIB\n\nVIC\n\nVID\n\nVISO\n\nVOA\n\nVOB\n\nVOC\n\nVOD\n\nVSEL\n\nIC30\nADuM5402\n\nGND1A\nGND1B\n\nGND2A\nGND2B\n\nVDD1 VDD2\n\nVE1 VE2\n\nVIA\n\nVIB\n\nVIC\n\nVID\n\nVOA\n\nVOB\n\nVOC\n\nVOD\n\nIC31\nADuM1402\n\nGND1A\nGND1B\n\nGND2A\nGND2B\n\nVDD1 VDD2\n\nVE1 VE2\n\nVIA\n\nVIB\n\nVIC\n\nVID\n\nVOA\n\nVOB\n\nVOC\n\nVOD\n\nIC32\nADuM1402\n\n1A 1Y\n1Z\n\n2A 2Y\n2Z\n\n3A 3Y\n3Z\n\n4A 4Y\n4Z\n\nG\n\nGBAR GND\n\nVCC\n\nIC33\nAM26LV31\n\nGND1A\nGND1B\n\nGND2A\nGND2B\n\nVDD1 VDD2\n\nVE1 VE2\n\nVIA\n\nVIB\n\nVIC\n\nVID\n\nVOA\n\nVOB\n\nVOC\n\nVOD\n\nIC54\nADuM1402\n\n8\n\n7\n\n3\n\n2\n\n5\n\n6\n\nA\n\nB\n\nY\n\nZ\n\nR\n\nD\n\nIC55\n\nSN65HVD30-3V3\n\n1\n4 GND\n\n+3V3\n\nIC55P\n\n8\n\n7\n\n3\n\n2\n\n5\n\n6\n\nA\n\nB\n\nY\n\nZ\n\nR\n\nD\n\nIC56\n\nSN65HVD30-3V3\n\n1\n4 GND\n\n+3V3\n\nIC56P\n\nR34\n\n220R\n\nR35\n\n220R\n\nR\n36\n\n22\n0R\n\nR37\n\n390R\n\nR38\n\n100R\n\nR39\n\n390R\n\nR40\n\n100R\n\nR\n41\n\n2k\n4\n\nR42\n\n100R\n\nR\n43\n\n2k\n4\n\nR44\n\n10k\n\nR45\n\n220R\n\nR46\n\n10k\n\nR47\n\n220R\n\nR48\n\n10k\n\nR\n49\n\n22\n0R\n\nR50\n\n390R\nR53\n\n390R\n\nR\n62\n\n2k\n4\n\nR\n64\n\n2k\n4\n\nR110\n\n10k\n\nR111\n\n10k\n\nR112\n\n10k\n\nGND\n\nGND\n\nGND\n\nGND\n\nGND\n\nGND\n\nSW\nD\n\n+3\nV3\n\nSW\nD\n\n+3\nV3\n\nSW\nD\n\n+3\nV3\n\nSW\nD\n\n+3\nV3\n\nFig. 3.5 Isolated I/F group for a complex payload controller. ?4Links Ltd.\n\n3 The I/O-Boards 53\n\n\n\n3.7 I/O-Board Interface Access Protocols\n\nThe board\u2019s interface types were already mentioned in the previous section. The\nprotocols for interface access from the OBC Processor-Board are listed here.\n\nMemory:\nBeyond the RMAP protocol, there is no additional protocol for data written to/read\nfrom State Vector and Telemetry data. All data bytes in a command or reply are\nexactly copied to the absolute memory addresses or read from absolute addresses.\n\nFig. 3.6 I/O-Board JTAG Interface. ?4Links Ltd.\n\n54 B. M. Cook et al.\n\n\n\nHandling of Data in the memory\u2014namely spacecraft configuration data, house-\nkeeping telemetry etc.\u2014has to be performed exclusively by the spacecraft\nOnboard Software.\n\nUART:\nThere is also no additional protocol for data written to/read from a UART. All data\nBytes in a command packet written to the UART are forwarded through the UART\nwithout addition or deletion or change of any Byte. Similarly, all data Bytes\nreceived by the UART are read from the UART\u2019s buffer without addition, deletion\nor change of any Byte.\n\nLogic-out:\nThe logic-out and logic-in interfaces use a simple protocol within the RMAP\npacket.\n\nEach logic-out address allows one or more signals to accessed. The signal may\nbe set low, set high, or left unchanged. The data is a sequence of bytes, one for\neach signal, in the order shown in the above interface table. A data value of 0 will\nset the output signal low, a value of 255 will set the output signal high, and any\nother value will leave the signal unchanged.\n\nIf fewer data bytes than signals are sent, Logic-out signals that are not sent data\nwill not change.\n\nIf more data bytes than signals are sent, excess bytes will be ignored and no\nerror will be reported.\n\nLogic-in:\nValues are returned as 0 (signal wire low) or 255 (signal wire high).\n\nIIC:\nThe IIC interfaces use a simple protocol within the RMAP packet.\nCommand: Commands consist of an address byte (with the least significant bit set\nto 0), one byte indicating how many bytes are to be written (may be zero), one byte\nindicating how many bytes are to be read (may be zero) and the bytes (if any) to be\nwritten.\n\nReply: the bytes read (if any) as follows:\n\\address (lsb clear)[\\bytes to write[\\bytes to read[[\\write bytes[]\n\nFiberoptic Gyro interface:\nThe interface to the fiberoptic gyro (FOG) is as specified in the I/O-Board ICD:\nCommand: Of the 32 bytes in the command, all unused bytes (31 of the 32) must\nbe set to zero. The implementation will send non-zero bytes to the bus.\nReply: 32-bytes.\n\n3 The I/O-Boards 55\n\n\n\n3.8 I/O-Board Connectors and Pin Assignments\n\nThe connector placement on the I/O-Boards is as depicted in Fig. 3.7. The CCSDS-\nBoard schematic is similar and is just comprising connectors A, B, C and E.\n\n3.8.1 Connectors-A and C (OBC internal)\n\nThe connectors A and C for SpaceWire links to the OBC Processor-Boards are\nfollowing SpaceWire standard and are implemented as Micro-D High Density\nconnectors.\n\nConnector-A: SpaceWire\u2014Nominal\nThis SpaceWire link will be used by default if it succeeds in establishing a con-\nnection with the OBC Processor Board.\n\nConnector-C: SpaceWire\u2014Redundant\nThis redundant SpaceWire link will be used if the nominal link fails to establish a\nconnection with the OBC Processor-Board. If the nominal SpaceWire link suc-\nceeds in establishing a connection with the OBC Processor-Board, the redundant\nlink is disabled.\n\n3.8.2 Connector-B (OBC internal)\n\nThe power supply of the I/O-Board is provided by the connected OBC Power-\nBoard via connector B, a Sub-D High Density connector, 15-way. The pin\nassignment is shown in Table 3.3:\n\n     D \u2013 I/O E \u2013 I/O   and   E \u2013 CCSDS\n\nC \u2013 SpaceWire\n\nB \u2013 power\n\nA \u2013 SpaceWire\n\nFig. 3.7 I/O-Board EM. ?4Links Ltd.\n\n56 B. M. Cook et al.\n\n\n\n3.8.3 Connectors-D and E (OBC external)\n\nConnectors D and E (or J5/6 and J11/12 on OBC unit level\u2014see Fig. 11.4) pro-\nvide the signal I/O between OBC and connected spacecraft equipment, connector\nE in addition carries the I/O-Board JTAG Interface. To avoid connection errors\nduring harness mounting\n\n\u2022 connector D is a Micro-miniature D-socket (female), 100-way and\n\u2022 connector E is a Micro-miniature D-plug (male), 100-way with pins protected\n\nby the connector body.\n\nThe signal I/O connections comprise both the standard grounded groups and the\nisolated I/F groups. The standard ground pins are all equivalent. Within each\nisolated group the ground pins are equivalent per connector.\n\n\u2022 Logic inputs can accept 3.3 V CMOS, 3.3 V TTL and 5 V TTL signals. Logic\noutputs meet the requirements of 3.3 V CMOS, 3.3 V TTL and 5 V TTL\nsignals.\n\n\u2022 The SW_NVRET (connector E) logic output has a series diode limiting the\noutput to being a voltage source at 3 V.\n\n\u2022 The connector data pins will behave as high-impedance wires when the buffers\n(or the whole board) is not powered\u2014these buffers must be powered before\nnormal I/O operation is possible.\n\n\u2022 JTAG pins on connector E connect to/from the FPGA via permanently powered\nbuffers to provide ESD protection.\n\n\u2022 JTAG TRST has a pull-down resistor to hold JTAG reset unless it is actively\ntaken high\u2014the programmer may need to be configured to drive this pin.\n\nTable 3.3 Power connector\npinout\n\nPin Voltage to\nI/O/CCSDS board\n\nHeater wires and\nnon-connected (NC) pins\n\n1 NC\n2 NC\n3 GND\n4 GND\n5 Heater2\n6 NC\n7 NC\n8 GND\n9 GND\n10 Heater1\n11 +3v3\n12 +3V3\n13 GND\n14 Heater4\n15 Heater3\n\n3 The I/O-Boards 57\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-11\nhttp://dx.doi.org/10.1007/978-3-642-35557-11\n\n\nThe connector pin assignments for connectors D and E are depicted in the\nannex Sects. 11.7. (I/O-Board) and 11.8. (CCSDS-Board).\n\n3.9 I/O and CCSDS-Board Radiation Characteristic\n\nBoth the I/O-Boards and the CCSDS-Boards use a MicroSemi/Actel ProAsic3\nFPGA as processing unit, as A3PE3000L in a PQ208 package. This chip provides\nthe following radiation immunity characteristics:\n\n\u2022 A Total Ionizing Dose (TID) up to 15 krad (Si)\n\u2022 A Single Event Latch-up immunity (SEL) to LETTH [ 6 MeVcm2/mg (before\n\nTMR)\n\u2022 An immunity to Single-Event Upsets (SEU) to LETTH [ 96 MeVcm2/mg.\n\n3.10 I/O and CCSDS-Board Temperature Limits\n\nThe operating temperature range of both the I/O and CCSDS-Board is from: -40\nto +85 ?C.\n\nNote that these limits apply to the temperature of the components/silicon.\nAllowance must be made for thermal conductivities from those components to the\nchassis.\n\nThe storage temperature range ranges from: -55 to +105 ?C.\n\n3.11 4Links Development Partner\n\n4Links gratefully acknowledges the support from Microsemi/Actel in providing\naccess to FPGA design software.\n\n58 B. M. Cook et al.\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-11\nhttp://dx.doi.org/10.1007/978-3-642-35557-11\nhttp://dx.doi.org/10.1007/978-3-642-35557-11\n\n\nChapter 4\nThe CCSDS Decoder/Encoder Boards\n\nSandi Habinc\n\n\u00a9 Edelweiss \u2013 Fotolia.com\n\n4.1 Introduction\n\nTraditionally the implementation of Telemetry Encoders and Telecommand\nDecoders for space has been made in hardware, at least for the last two decades.\nThis was also the approach that was envisaged when these OBC boards had been\nconceptualized. But with the availability of more processing power (e.g. the\nLEON3FT 32-bit fault-tolerant SPARCTM V8 processor), more of the encoding\nand decoding tasks can be moved to software, allowing flexibility for adapting the\nsystem to on-going standardization efforts. The European return of software-based\ndecoders in space was made in late 2009 with the launch of a European technology\ndemonstrator satellite (PROBA-II).\n\nS. Habinc (&)\nAeroflex Gaisler AB, G\u00f6teborg, Sweden\ne-mail: sandi@gaisler.com\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_4,\n? Springer-Verlag Berlin Heidelberg 2013\n\n59\n\n\n\nThe approach followed here in this CDPI architecture is that part of the CCSDS\ndecoding/encoding is performed in FPGA hardware on the CCSDS decoder/\nencoder board and part of the task is done in software using libraries provided by\nAeroflex Gaisler AB together with the RTEMS realtime operating system for the\nAeroflex Processor-Boards. The processing IP Cores in the FPGA on the CCSDS-\nBoard and the software libraries which are available in the RTEMS SPARC\ntailoring and which are running on the LEON3FT Processor-Board are designed in\na common architecture by Aeroflex Gaisler AB.\n\nThe CCSDS Decoder/Encoder boards are based on the same Microsemi/Actel\nRT ProASIC3 FPGA as the I/O-Boards and are also manufactured by 4Links Ltd.\nSince the CCSDS board only uses the SpaceWire interfaces to the Processor-\nBoard, the CLTU and CADU NRZ-L lines and the HPC UART interface to PCDU,\nit applies a reduced interface driver IC mounting on the PCB compared to the\nI/O-Board. The same applies to memory equipment on PCB. The board hardware\neven shares the PCB layout with the I/O-Boards as well as the SpaceWire interface\nLVDS transceiver design for the processor board interfaces. With respect to\nelectronic circuitry it is a \u2018\u2018not fully populated I/O-Board\u2019\u2019. The connector pinout\nof the CCSDS-Boards can be taken from the annex Sect. 11.8.\n\nThe IP Cores loaded in the FPGA are provided by Aeroflex Gaisler AB. The\nproduct name for this specific implementation is GR-TMTC-0004. The overall\narchitecture is based on IP Cores from the GRLIB VHDL IP Core library. All\nfunctions implemented in the FPGA are based on Triple Module Redundancy\n(TMR) technique to assure sufficiently high robustness under space environmental\nradiation conditions. The GR-TMTC-0004 is also available for other devices of the\nMicrosemi/Actel ProAsic3 series in other package types and for diverse speed\ngrades.\n\nThis main chapter consists of extracts from the Aeroflex Gaisler CCSDS\nTM/TC and SpaceWire FPGA Data Sheet and User\u2019s Manual [62], which is the\ndetailed documentation of the GR-TMTC-0004 product. The tailoring is done\naccording to what the overall OBC user needs to know for\n\n\u2022 installation of the GR-TMTC-0004 FPGA programming file on the CCSDS\nboards and for\n\n\u2022 applying the proper TC/TM link settings for ground equipment to connect to the\nOBC.\n\nSince this chapter is providing all the necessary details on the TM encoding, TC\ndecoding and on High Priority TC handling functionality, it exceeds the size of the\nother purely hardware oriented main chapters.\n\nThe TM/TC FPGA device features the following functions:\n\n\u2022 CCSDS/ECSS compliant Telemetry encoder:\n\n\u2013 Multiple Virtual Channels implemented in hardware, via two SpaceWire\nRMAP I/Fs\n\n\u2013 Reed-Solomon and Convolutional Encoding in hardware\n\n60 S. Habinc\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\n\u2022 CCSDS/ECSS compliant Telecommand decoder:\n\n\u2013 Multiple Virtual Channels implemented in software, via a SpaceWire RMAP\nI/F\n\n\u2013 One Virtual Channel implemented in hardware, with pulse commands\n\n\u2022 Start sequence search and BCH decoding in hardware.\n\nThe mix between hardware and software implementation caters for a safe and\nsound system at the same time as flexibility is provided to support upcoming\nstandards.\n\nThe novelty of this TM/TC FPGA design is that the communication between\nthe telemetry and telecommand system and Onboard Computer, as well as pay-\nload, is done by means of the Remote Memory Access Protocol (RMAP) over\nSpaceWire links. Via RMAP read and write commands the device status can be\nobserved and it can be controlled in a safe (by means of verified-write commands)\nand standardized way (ECSS standard).\n\nFor telemetry, the Space Packet is carried in the Data field of an RMAP write\ncommand. The RMAP protocol provides additional protection of the Space Packet\nby means of the 8-bit Data CRC field, which can be used to discard any packets\nthat have been received with errors. (The Space Packets can themselves include a\n16-bit CRC as optional Packet Error Control, but this would require the checking\nof the Space Packet which is not in line with a layered protocol approach).\n\nThe routing is done by means of the addressing capability of the RMAP write\ncommand; the address can be used for example to distinguish different Virtual\nChannels on a telemetry downlink. For telecommands, complete Transfer Frames\ncan be moved between the FPGA device and Onboard Computer.\n\nThe RMAP target implementation in the FPGA requires no local processor,\nsimplifying the design and releasing logic resources. The CCSDS/ECSS telemetry\nand telecommand software stacks are handled over RMAP.\n\n4.2 Architectural Overview\n\nFigure 4.1 shows a simple block diagram of the device. Although this block\ndiagram shows the functional structure, its external interfaces shown here directly\ncorrespond to the hardware interfaces of the CCSDS-Board:\n\n\u2022 On the left side the two SpaceWire interfaces to the processor boards can be\nseen which physically are implemented on the front side of the CCSDS Board,\nas for the I/O Board.\n\n\u2022 The same applies to the power supply connector. Power supply is not depicted in\nthis logical diagram.\n\n\u2022 Furthermore, on the left side of this figure the High Priority Command (HPC) of\nthe telecommand decoder is shown. It is cited with \u2018\u2018TC UART\u2019\u2019 here since it is\nimplemented as an RS422 type interface.\n\n4 The CCSDS Decoder/Encoder Boards 61\n\n\n\n\u2022 On the right side of the figure the CLTU Telecommand input interface and the\nCADU Telemetry interface are shown (both also of type RS422 in hardware).\n\nSome of the interfaces (e.g. TC input) is physically split into multiple signals.\nFor the explanations and the signal overview please refer to the later Sect. 4.2.9\nand Fig. 4.2. Note that all IP Cores with AMBA AHB master interfaces also have\nAPB slave interfaces for configuration and status monitoring, although not shown\nin the block diagram. The Telemetry and Telecommand specification comprises\nthe following elements:\n\n\u2022 CCSDS compliant Telemetry encoder:\n\n\u2013 Input:\n\n4 Virtual Channels ? 1 Virtual Channel for Idle Frames\n\nInput access via SpaceWire link\nCCSDS Space Packet data (or any custom data block)\n\nFig. 4.1 CCSDS decoder/encoder block diagram. ? Aeroflex Gaisler AB\n\n62 S. Habinc\n\n\n\nCLCW\n\nInput via SpaceWire link\nCLCW internally from hardware commands\nCLCW externally from two dedicated asynchronous bit serial inputs\n\n\u2013 Output:\n\nCADU/encoded CADU\nNRZ-L encoding\nPseudo-Randomization\nReed-Solomon and/or Convolutional encoding\nBit synchronous output: clock and data\n\n\u2022 CCSDS compliant Telecommand decoder (software commands):\n\n\u2013 Layers in hardware:\n\nCoding layer\n\n\u2013 Input:\n\nAuto adaptable bit rate\nBit synchronous input: clock, qualifier and data\n\n\u2013 Output:\n\u2013 Output access via SpaceWire link\n\nCLTU (Telecommand Transfer Frame and Filler Data)\nCLCW internally connected to Telemetry encoder\nCLCW on dedicated asynchronous bit serial output\n\n\u2022 CCSDS compliant Telecommand decoder (hardware commands):\n\n\u2013 Layers in hardware:\n\nCoding layer\nTransfer layer (BD frames only)\nCLCW internally connected to Telemetry encoder\n\n\u2013 Input:\n\nAuto adaptable bit rate\nBit synchronous input: clock, qualifier and data\nTelecommand Frame with Segment\n\n\u2013 Output:\n\nRedundant UART\nCLCW on dedicated asynchronous bit serial output.\n\n4 The CCSDS Decoder/Encoder Boards 63\n\n\n\n4.2.1 Interfaces\n\nThe following interfaces are provided:\n\n\u2022 Telemetry\n\n\u2013 Telemetry transmitter clock input\n\u2013 CLCW externally from two dedicated asynchronous bit serial inputs\n\u2013 Physical layer output:\n\nTwo sets of bit synchronous output: clock and data\n\n\u2022 Telecommand\n\n\u2013 Physical layer input:\n\nTwo sets of bit synchronous input: data, qualifier (bit lock), clock and RF\nstatus\n\n\u2013 Hardware commands:\n\nRedundant UART output\n\n\u2013 CLCW on dedicated asynchronous bit serial output (hardware commands)\n\u2013 CLCW on dedicated asynchronous bit serial output (software commands)\n\nFig. 4.2 Signal overview. ? Aeroflex Gaisler AB\n\n64 S. Habinc\n\n\n\n\u2022 System level\n\n\u2013 System clock and reset\n\u2013 SpaceWire link with RMAP support for telemetry and telecommand.\n\n4.2.2 Command Link Control Word Coupling\n\nAs special feature the CCSDS Decoders/Encoders provide an external routing of\nthe Command Link Control Word (CLCW) coupling (also as RS422) between the\ntwo redundant boards, so that if one transmitter of the spacecraft fails, the received\ncommand\u2019s CLCWs can still be downlinked via the redundant transmitter chain.\nThis significantly decomplicates command chain FDIR.\n\n4.2.3 Clock and Reset\n\nThe system clock is taken directly from a separate external input. The telemetry\ntransmitter clock is derived from the system clock. The SpaceWire transmitter\nclock is derived from system clock. The device is reset with a single external reset\ninput that need not be synchronous with the system clock input.\n\n4.2.4 Performance\n\nTelemetry downlink rate is programmable up to at least 2 Mbit/s, based on a\n10 MHz system clock. A telecommand uplink rate up to at least 100 kbit/s is\nsupported.\n\nA SpaceWire links rate up to at least 10 Mbit/s is supported, based on a 10 MHz\nsystem clock. System clock frequency up to at least 10 MHz is supported, based\non a 10 MHz input clock.\n\n4.2.5 Telemetry Encoder\n\nThe CCSDS Telemetry Encoder implements the Data Link Layer, covering the\nProtocol Sub-layer and the Synchronization and Coding Sub-layer and part of the\nPhysical Layer of the packet telemetry encoder protocol.\n\nThe Telemetry Encoder comprises several encoders and modulators imple-\nmenting the Consultative Committee for Space Data Systems (CCSDS) recom-\nmendations, European Cooperation on Space Standardization (ECSS) and the\n\n4 The CCSDS Decoder/Encoder Boards 65\n\n\n\nEuropean Space Agency (ESA) Procedures, Standards and Specifications (PSS) for\ntelemetry and channel coding.\n\nThe Telemetry Encoder implements four Virtual Channels accessible via\nSpaceWire links. The Virtual Channels accept CCSDS Space Packet data [27] as\ninput via the SpaceWire RMAP protocol. An additional Virtual Channel is\nimplemented for Idle Frames only.\n\nIn the target satellite project the \u2018\u2018Virtual Channel Generation Function Input\nInterface\u2019\u2019 of the encoder was used as it is described in depth in Sect. 4.3.12. This\nsimplifies VC handling for the software designers and only requires the proper use\nof the registers for submission of CCSDS Space Packets to the encoder and the\naccording activation and control registers. These are described further in Sect. 4.3.\n\n4.2.5.1 Telemetry Encoder Specification\n\nThe following Data Link Protocol Sub-layer [26] functionality (CCSDS-131.0) is\nnot implemented in hardware:\n\n\u2022 Packet Processing\n\u2022 Virtual Channel Frame Service (see also Virtual Channel 0, 1, 2 and 3)\n\u2022 Master Channel Frame Service (only single Spacecraft Identifier supported)\n\u2022 Master Channel Multiplexing (only single Spacecraft Identifier supported).\n\nThe following Data Link Protocol Sub-layer functionality (CCSDS-131.0) is\nimplemented in hardware:\n\n\u2022 Virtual Channel Generation (for Virtual Channels 0, 1, 2 and 3)\n\u2022 Virtual Channel Generation (for Idle Frame generation only, e.g. Virtual\n\nChannel 7)\n\u2022 Virtual Channel Multiplexing\n\u2022 Master Channel Generation\n\u2022 All Frame Generation\n\u2022 Multiplexing of four CLCW sources, of which two external via asynchronous bit\n\nserial interfaces.\n\nThis Synchronization and Channel Coding Sub-Layer [24] functionality (CCSDS\n130.0) is implemented in hardware:\n\n\u2022 Attached Synchronization Marker\n\u2022 Reed-Solomon coding\n\u2022 Pseudo-Randomizer\n\u2022 Convolutional coding.\n\nThis Physical Layer [21] functionality (ECSS-E-ST-50-05C) is implemented in\nhardware:\n\n66 S. Habinc\n\n\n\n\u2022 Non-Return-to-Zero Level modulation (NRZ-L).\n\nThe Telemetry Encoder fixed configuration is as follows:\n\n\u2022 fixed Transfer Frame format, version 00b, Packet Telemetry\n\u2022 fixed Transfer Frame length of 1115 octets\n\u2022 common Master Channel Frame Counter for all Virtual Channels\n\u2022 fixed nominal Attached Synchronization Marker usage\n\u2022 fixed 2 kB telemetry transmit FIFO\n\u2022 fixed 8 kB on-chip EDAC protected RAM memory per Virtual Channel 0, 1, 2\n\nand 3.\n\nThe Telemetry Encoder programmability is as follows:\n\n\u2022 telemetry Spacecraft Identifier\n\u2022 telemetry OCF/CLCW enable\n\u2022 telemetry No RF Available and No Bit Lock bits in CLCW overwriting from\n\ninput pins\n\u2022 telemetry Reed-Solomon enable\n\n(E = 16 coding, interleave depth 5, 160 check symbols)\n\u2022 telemetry Pseudo Randomization enable\n\u2022 telemetry Convolutional Encoder enable and rate\n\u2022 telemetry transfer rate.\n\nThe Telemetry Encoder does not implement the following:\n\n\u2022 no Frame Error Control Field (FECF)/CRC\n\u2022 no Advanced Orbiting Systems (AOS) support (also no Insert Zone (AOS) and\n\nno Frame Header Error Control (FHEC))\n\u2022 no Transfer Frame Secondary Header (also no Extended Virtual Channel Frame\n\nCounter)\n\u2022 no Turbo Encoding\n\u2022 no Split-Phase Level modulation\n\u2022 no Sub-carrier modulation.\n\n4.2.5.2 Virtual Channels 0, 1, 2 and 3\n\nVirtual Channels 0, 1, 2 and 3 are implemented in hardware without any software\nsupport being required. Data are input via SpaceWire RMAP commands. See\nSects. 4.3.12 and 4.6 for details.\n\nThe following Data Link-Protocol Sub-layer [26] functionality (CCSDS-132.0)\nis implemented:\n\n\u2022 Virtual Channel Generation\n\n\u2013 Transfer Frame Primary Header insertion\n\u2013 Transfer Frame Data Field insertion\n\n4 The CCSDS Decoder/Encoder Boards 67\n\n\n\n\u2013 First Header Pointer (FHP) handling and insertion\n\u2013 Buffering of two complete Transfer Frames per Virtual Channel\n\u2013 CCSDS Space Packet [27] data [CCSDS-133.0] input (or user-defined data-\n\nblocks).\n\n4.2.5.3 Virtual Channel 7\n\nIdle Frames are generated on a separate Virtual Channel, using identifier 7. See\nSect. 4.3.3.4.\n\n4.2.6 Telecommand Decoder\n\nThe CCSDS Telecommand Decoder implements part of the Data Link Layer,\ncovering the Protocol Sub-layer and the Synchronization and Coding Sub-layer\nand part of the Physical Layer of the packet telecommand decoder protocol.\n\nThe Telecommand Decoder supports decoding of higher protocol layers in\nsoftware, being accessible via a SpaceWire link. It also supports decoding in\nhardware for hardware commands (see Sect. 4.5), for which CLCW is produced to\non-chip Telemetry Encoder.\n\n4.2.6.1 Telecommand Decoder Specification\n\nThe following Data Link\u2014Synchronization and Channel Coding Sub-Layer [34]\nfunctionality (CCSDS-231.0) is implemented in hardware:\n\n\u2022 Pseudo-De-randomization\n\u2022 BCH codeblock decoding\n\u2022 Start Sequence Search.\n\nThe following Physical Layer [21] functionality (ECSS-E-ST-50-05C) is\nimplemented in hardware:\n\n\u2022 Non-Return-to-Zero Level de-modulation (NRZ-L).\n\nThe telecommand decoder fixed configuration is as follows:\n\n\u2022 fixed telecommand decoder support for CCSDS/ECSS functionality, not ESA\nPSS\n\nThe telecommand decoder provides the following fixed configuration values:\n\n\u2022 telecommand (hardware commands) Spacecraft Identifier\n\u2022 telecommand (hardware commands) Virtual Channel Identifier (with bit 1 taken\n\nfrom input pin)\n\n68 S. Habinc\n\n\n\n\u2022 telecommand Pseudo-De-randomization disabled\n\u2022 telecommand NRZ-L enabled\n\u2022 telecommand RF available indicator, positive polarity\n\u2022 telecommand active signal (bit lock), positive polarity\n\u2022 telecommand bit clock active, rising edge.\n\nThe Telecommand Decoder has multiple separate serial input streams from\ntransponders etc., comprising serial data, clock, channel active indicator (bit lock)\nand RF carrier available. The input stream is auto-adaptable.\n\n4.2.6.2 Software Virtual Channel\n\nThe interface between the Telecommand Decoder hardware and software is a\nSpaceWire link with RMAP protocol. The CLCW produced by the software is\ninput to the Telemetry Encoder via the Telecommand Decoder CLCW Registers\n(CLCWRn), see Sect. 4.4.9 for details, using the SpaceWire link with RMAP\nprotocol, with the same information being output on an asynchronous bit serial\noutput suitable for cross-strapping.\n\nThe higher protocol levels are implemented in software. These software tele-\ncommands are stored in memory and can be accessed via a SpaceWire interfaces.\nThe software implementation of the higher layers of the telecommand decoder\nallows for implementation flexibility and accommodation of future standard\nenhancements. See Sects. 4.4 and 4.6 for details.\n\n4.2.6.3 Hardware Virtual Channel\n\nA separate Virtual Channel for hardware commands is implemented in hardware,\nwithout the need of software support. The hardware commands are output on two\nserial UART ports. The hardware commands are carried as Space Packets inside\nthe Segment Data Field of a Transfer Frame Data Field, and the Transfer Frame\nincludes the Frame Error Control Field (FECF/CRC).\n\nThe Application Layer functionality is not implemented in hardware.\nThe Space Packet Protocol layer [27] functionality (CCSDS-133.0) is not\n\nimplemented in hardware. This Data Link Protocol Sub-Layer [35] functionality\n(CCSDS-232.0) is implemented in hardware:\n\n\u2022 Virtual Channel Packet Extraction\n\u2022 Virtual Channel Segment Extraction\n\u2022 Virtual Channel Reception:\n\n\u2013 Support for Command Link Control Word (CLCW)\n\n\u2022 Virtual Channel Demultiplexing\n\u2022 Master Channel Demultiplexing\n\n4 The CCSDS Decoder/Encoder Boards 69\n\n\n\n\u2022 All Frames Reception:\n\n\u2013 Frame Delimiting and Fill Removal Procedure; and\n\u2013 Frame Validation Check Procedure, in this order.\n\nThe CLCW is automatically transferred to the on-chip Telemetry Encoder, with\nthe same information being output on an asynchronous bit serial output suitable for\ncross-strapping.\n\nThe hardware telecommands are implemented entirely in hardware and do not\nrequire any software and therefore can be used for critical operations. See Sect. 4.5\nfor details.\n\n4.2.7 SpaceWire Link Interfaces\n\nThe SpaceWire links provide an interface between the on-chip bus and a Space-\nWire network. They implement the SpaceWire standard [12] with the protocol\nidentification extension [13]. The Memory Access Protocol (RMAP) command\nhandler implements the ECSS standard [14].\n\n4.2.8 On-Chip Memory\n\nTwo times 16 kB of on-chip volatile memory is provided in the FPGA for tem-\nporary storage of 7 Telemetry Transfer Frames for each of the Telemetry Virtual\nChannels 0 through 3, together with a dedicated hard-coded descriptor memory\ncontaining 7 descriptors for each channel. Additional 8 kB of on-chip volatile\nmemory is provided to be used for telecommand data. All memory is protected by\nEDAC. Neither automatic scrubbing nor an error counter are implemented.\n\n4.2.9 Signal Overview\n\nThe signal overview of the telemetry encoder and telecommand decoder is shown\nin Fig. 4.2.\n\nThe functional signals are shown in Table 4.1. Note that index 0 is MSB for\nTM/TC signals.\n\nFurther details on the applied IP Cores, interrupts, the memory map and signals\ncan be taken from the reference document [62].\n\n70 S. Habinc\n\n\n\n4.3 Telemetry Encoder\n\n4.3.1 Overview\n\nThe CCSDS/ECSS/PSS Telemetry Encoder implements part of the Data Link\nLayer, covering the Protocol Sub-layer and the Frame Synchronization and Coding\nSub-layer and part of the Physical Layer of the packet telemetry encoder protocol.\nThe operation of the Telemetry Encoder is highly programmable by means of\ncontrol registers. The Telemetry Encoder comprises several encoders and modu-\nlators implementing the Consultative Committee for Space Data Systems\n(CCSDS) recommendations, European Cooperation on Space Standardization\n(ECSS) and the European Space Agency (ESA) Procedures, Standards and\nSpecifications (PSS) for telemetry and channel coding. The encoder comprises the\nfollowing:\n\n\u2022 Packet Telemetry Encoder (TM)\n\u2022 Reed-Solomon Encoder\n\u2022 Pseudo-Randomizer (PSR)\n\nTable 4.1 External signals\n\nName Usage Direction Polarity Reset\n\nclk System clock (also SpaceWire and Telemetry\ntransmit clock)\n\nIn Rising \u2013\n\nresetn System reset In Low \u2013\ntck JTAG clock In \u2013 \u2013\ntms JTAG TMS In High \u2013\ntdi JTAG TDI In High \u2013\ntdo JTAG TDO Out High \u2013\ncaduclk[0:1] Telemetry CADU serial bit clock output Out \u2013 Low\ncaduout[0:1] Telemetry CADU serial bit data output Out \u2013 Low\nid[0:1] Identifier (id[1] used with Telecommand hardware\n\ncommand Virtual Channel Identifier and SpaceWire\nNode Address)\n\nIn \u2013 \u2013\n\ntcrfa[0:1] Telecommand CLTU RF available indicator In \u2013 \u2013\ntcactive[0:1] Telecommand CLTU input active indicator (bit lock) In \u2013 \u2013\ntcclk[0:1] Telecommand CLTU serial bit clock input In \u2013 \u2013\ntcdata[0:1] Telecommand CLTU serial bit data input In \u2013 \u2013\ntcuart[0:1] Telecommand (hardware command) UART output Out \u2013 High\nclcwin[0:1] Telemetry CLCW asynchronous bit serial inputs In \u2013 \u2013\nclcwout[0:1] Telecommand CLCW asynchronous bit serial outputs Out \u2013 High\nspw rxd[0:1] Data input In High \u2013\nspw rxs[0:1] Strobe input In High \u2013\nspw txd[0:1] Data output Out High Low\nspw txs[0:1] Strobe output Out High Low\n\n4 The CCSDS Decoder/Encoder Boards 71\n\n\n\n\u2022 Non-Return-to-Zero Level encoder (NRZ-L)\n\u2022 Convolutional Encoder (CE)\n\u2022 Clock Divider (CD).\n\nNote that the SpaceWire input interface is described separately. The SpaceWire\ninterfaces and corresponding Virtual Channel Generation function and buffer\nmemories are not shown in the block diagram below, as is the case for the CLCW\nmultiplexing function (Fig. 4.3).\n\n4.3.2 Layers\n\nThe relationship between Packet Telemetry standard and the Open Systems\nInterconnection (OSI) reference model is such that the OSI Data Link Layer\ncorresponds to two separate layers, namely the Data Link Protocol Sub-layer and\nSynchronization and Channel Coding Sub-Layer.\n\nFig. 4.3 Telemetry Encoder block diagram. ? Aeroflex Gaisler AB\n\n72 S. Habinc\n\n\n\n4.3.2.1 Data Link Protocol Sub-layer\n\nThe following functionality is not implemented in the core:\n\n\u2022 Packet Processing\n\u2022 Virtual Channel Frame Service (see also Virtual Channel 0, 1, 2 and 3)\n\u2022 Master Channel Frame Service (only single Spacecraft Identifier supported)\n\u2022 Master Channel Multiplexing (only single Spacecraft Identifier supported).\n\nThe following functionality is implemented in the core:\n\n\u2022 Virtual Channel Generation (for Virtual Channels 0, 1, 2 and 3)\n\u2022 Virtual Channel Generation (for Idle Frame generation only, e.g. Virtual\n\nChannel 7)\n\u2022 Master Channel Generation (for all frames)\n\u2022 All Frame Generation (for all frames).\n\n4.3.2.2 Synchronization and Channel Coding Sub-Layer\n\nThe following functionality is implemented in the core:\n\n\u2022 Attached Synchronization Marker\n\u2022 Reed-Solomon coding\n\u2022 Pseudo-Randomizer\n\u2022 Convolutional coding.\n\n4.3.2.3 Physical Layer\n\nThe following functionality is implemented in the core:\n\n\u2022 Non-Return-to-Zero Level modulation.\n\n4.3.3 Data Link Protocol Sub-Layer\n\n4.3.3.1 Physical Channel\n\nThe configuration of a Physical Channel covers the following parameters:\n\n\u2022 Transfer Frame Length is fixed to 1115 octets\n\u2022 Transfer Frame Version Number is fixed to 0, i.e. Packet Telemetry.\n\n4 The CCSDS Decoder/Encoder Boards 73\n\n\n\n4.3.3.2 Virtual Channel Frame Service\n\nThe Virtual Channel Frame Service is not implemented, except as a support for\nVirtual Channels 0, 1, 2, and 3.\n\n4.3.3.3 Virtual Channel Generation: Virtual Channels 0, 1, 2 and 3\n\nThere is a Virtual Channel Generation function for each of Virtual Channels 0, 1, 2\nand 3. The channels have each an on-chip memory buffer to store seven complete\nTransfer Frames. Each Virtual Channel Generation function receives data from the\nSpaceWire interface that are stored in the on-chip memory buffer that is EDAC\nprotected (see Sect. 4.3.12).\n\nThe function supports:\n\n\u2022 Transfer Frame Primary Header insertion\n\u2022 Transfer Frame Data Field insertion (with support for different lengths due to\n\nOCF)\n\u2022 First Header Pointer (FHP) handling and insertion.\n\nThe function keeps track of the number of octets received and the packet\nboundaries in order to calculated the First Header Pointer (FHP). The data are\nstored in pre-allocated slots in the buffer memory comprising complete Transfer\nFrames. The module fully supports the FHP generation and does not require any\nalignment of the packets with the Transfer Frame Data Field boundary. The buffer\nmemory space allocated to each Virtual Channel is treated as a circular buffer. The\nfunction communicates with the Virtual Channel Frame Service by means of the\non-chip buffer memory.\n\nThe data input format can be CCSDS Space Packet [27] or any user-defined\ndata-block (see Sect. 4.3.12).\n\nThe Virtual Channel Generation function for Virtual Channels 0, 1, 2 and 3 is\nenabled through the GRTM DMA External VC Control register. The transfer is\ndone automatically via the Virtual Channel Frame Service (i.e. DMA function).\n\n4.3.3.4 Virtual Channel Generation: Idle Frames\u2014Virtual Channel 7\n\nThe Virtual Channel Generation function is used to generate the Virtual Channel\nCounter for Idle Frames as described here below.\n\n4.3.3.5 Virtual Channel Multiplexing\n\nThe Virtual Channel Multiplexing Function is used to multiplex Transfer Frames\nof different Virtual Channels of a Master Channel. Virtual Channel Multiplexing\n\n74 S. Habinc\n\n\n\nin the core is performed between two sources: Virtual Channel Generation func-\ntion (Virtual Channels 0, 1, 2 and 3) and Idle Frames (Virtual Channel 7). Note\nthat multiplexing between different Virtual Channels is assumed to be done as part\nof the Virtual Channel Frame Service outside the core, i.e. in hardware for Virtual\nChannels 0, 1, 2 and 3. The Idle Frame generation is described hereafter.\n\nBandwidth allocation between Virtual Channels 0, 1,2 and 3 is done in hard-\nware and is equal between these channels, see Sect. 4.3.11 and [62]. Bandwidth\nallocation to VC7 is only done when no other VC has anything to send. If one VC\nhas no data to send, then the next one can send.\n\nIdle Frame generation can be enabled and disabled by means of a register. The\nSpacecraft ID to be used for Idle Frames is programmable by means of a register.\nThe Virtual Channel ID to be used for Idle Frames is programmable by means of a\nregister, e.g. Virtual Channel 7.\n\nMaster Channel Counter generation for Idle Frames can be enabled and disabled\nby means of a register. Note that it is also possible to generate the Master Channel\nCounter field as part of the Master Channel Generation function described in the\nnext section. When Master Channel Counter generation is enabled for Idle Frames,\nthen the generation in the Master Channel Generation function is bypassed.\n\n4.3.3.6 Master Channel Generation\n\nThe Master Channel Counter is generated for all frames on the master channel.\nThe Operational Control Field (OCF) is generated from a 32-bit input, via the\n\nCommand Link Control Word (CLCW) input of the Telecommand Decoder\u2014\nSoftware Commands (see Sect. 4.4.9) or the internal Telecommand Decoder\u2014\nHardware Commands. This is done for all frames on the master channel (MC OCF).\n\nThe transmit order repeats every fourth Transfer Frames and is as follows:\n\n\u2022 CLCW from the internal software commands register (Telecommand Decoder\nCLCW Register 1 (CLCWR1), see Sect. 4.4.9 for details) is transmitted in\nTransfer Frames with Transfer Frame Master Channel Counter value ending\nwith bits 0b00.\n\n\u2022 CLCW from the internal hardware commands is transmitted in Transfer Frames\nwith Transfer Frame Master Channel Counter value ending with bits 0b01.\n\n\u2022 CLCW from the external asynchronous bit serial interface input clcwin[0] is\ntransmitted in Transfer Frames with Transfer Frame Master Channel Counter\nvalue ending with bits 0b10.\n\n\u2022 CLCW from the external asynchronous bit serial interface input clcwin[1] is\ntransmitted in Transfer Frames with Transfer Frame Master Channel Counter\nvalue ending with bits 0b11.\n\nNote that the above order depends on the state of the static input pin id. If id is\nlogical zero, then the above scheme is applied, else the two first entries are\nswapped with the two last entries.\n\n4 The CCSDS Decoder/Encoder Boards 75\n\n\n\nNote that bit 16 (No RF Available) and 17 (No Bit Lock) of the CLCW and\nproject specific OCF are taken from information carried on discrete inputs tcrfa[]\nand tcactive[].\n\n\u2022 The Master Channel Frame Service is not implemented.\n\u2022 The Master Channel Multiplexing Function is not implemented.\n\n4.3.3.7 All Frame Generation\n\nThe All Frame Generation functionality operates on all Transfer Frames of a\nPhysical Channel.\n\n4.3.4 Synchronization and Channel Coding Sub-Layer\n\n4.3.4.1 Attached Synchronization Marker\n\nThe 32-bit Attached Synchronization Marker is placed in front of each Transfer\nFrame as per [25] and [19].\n\n4.3.4.2 Reed-Solomon Encoder\n\nThe CCSDS recommendation [25] and ECSS standard [19] specify Reed-Solomon\ncodes, one (255, 223) code. The ESA PSS standard [40] only specifies the former\ncode. Although the definition style differs between the documents, the (255, 223)\ncode is the same in all three documents. The definition used in this document is\nbased on the PSS standard [40]. Details shall be taken from [62].\n\n4.3.4.3 Pseudo-Randomizer\n\nThe Pseudo-Randomizer (PSR) generates a bit sequence according to [25] and [19]\nwhich is xor-ed with the data output of preceding encoders. This function allows\nthe required bit transition density to be obtained on a channel in order to permit the\nreceiver on ground to maintain bit synchronization. The implementation details are\ndescribed in [62].\n\n4.3.4.4 Convolutional Encoder\n\nThe Convolutional Encoder (CE) implements the basic convolutional encoding\nscheme. The ESA PSS standard [40] specifies a basic convolutional code without\n\n76 S. Habinc\n\n\n\npuncturing. This basic convolutional code is also specified in the CCSDS recom-\nmendation [25] and ECSS standard [19], which in addition specifies a punctured\nconvolutional code. For details of the implementation please again refer to [62].\n\n4.3.5 Physical Layer\n\n4.3.5.1 Non-Return-to-Zero Level Encoder\n\nThe Non-Return-to-Zero Level encoder (NRZ-L) encodes differentially a bit\nstream from preceding encoders according to [21]. The waveform is shown in\nFig. 4.4. Both data and the Attached Synchronization Marker (ASM) are affected\nby the coding. When the encoder is not enabled, the bit stream is by default non-\nreturn-to-zero level encoded.\n\n4.3.5.2 Clock Divider\n\nThe clock divider (CD) provides clock enable signals for the telemetry and\nchannel encoding chain. The clock enable signals are used for controlling the bit\nrates of the different encoder and modulators. The source for the bit rate frequency\nis the system clock input. The system clock input can be divided to a degree 215.\nThe divider can be configured during operation to divide the system clock fre-\nquency from 1/1 to 1/215. The bit rate frequency is based on the output frequency\nof the last encoder in a coding chain, except for the sub-carrier modulator. No\nactual clock division is performed, since clock enable signals are used. No clock\nmultiplexing is performed in the core. Details for the clock divider settings are\ncontained in [62].\n\n4.3.6 Connectivity\n\nThe output from the Packet Telemetry encoder can be connected to the following\npostprocessings:\n\nFig. 4.4 NRZ-L waveform\n\n4 The CCSDS Decoder/Encoder Boards 77\n\n\n\n\u2022 Reed-Solomon encoder\n\u2022 Pseudo-Randomizer\n\u2022 Non-Return-to-Zero encoder\n\u2022 Convolutional encoder.\n\nThe processing modules can be aligned to a chain with a certain variability of\nthe postprocessor sequencing. Possible I/O chain connections between these pro-\ncessors are explained in [62].\n\n4.3.7 Operation\n\nThe Telemetry Encoder DMA interface provides a means for the user to insert\nTransfer Frames in the Packet Telemetry and AOS Encoder. Depending on which\nfunctions are enabled in the encoder, the various fields of the Transfer Frame are\noverwritten by the encoder. It is also possible to bypass some of these functions for\neach Transfer Frame by means of the control bits in the descriptor associated to\neach Transfer Frame. The DMA interface allows the implementation of Virtual\nChannel Frame Service and Master Channel Frame Service, or a mixture of both,\ndepending on what functions are enabled or bypassed.\n\n4.3.7.1 Descriptor Setup\n\nThe transmitter DMA interface is used for transmitting Transfer Frames on the\ndownlink. The transmission is done using descriptors located in memory.\n\nA single descriptor is shown in Tables 4.2 and 4.3. The number of bytes to be\nsent is set globally for all Transfer Frames in the length field in register DMA\nlength register. The the address field of the descriptor should point to the start of\nthe Transfer Frame. The address must be word-aligned. If the Interrupt Enable (IE)\nbit is set, an interrupt will be generated when the Transfer Frame has been sent\n\nTable 4.2 GRTM transmit descriptor word 0 (address offset 0 9 0)\n31 16 15 14 13 1O 9 8 7 6 5 4 3 2 1 O\n\nRESERVED UE TS 000 VCE MCB FSHB OCFB FHECB lZB FECFB lE WR EN\n\n31: 16 RESERVED\n15 Underrun error (UE)\u2014underrun occurred while transmitting frame (status bit only)\n14 Time strobe (TS)\u2014generate a time strobe for this frame\n13: 10 RESERVED\n9 Virtual channel counter enable (VCE)\u2014enable virtual channel counter generation\n\n(using the Idle Frame virtual channel counter)\n8 Master channel counter bypass (MCB)\u2014bypass master channel counter\n\ngeneration (TM only)\n7 Frame secondary header bypass (FSHB)\u2014bypass frame secondary header\n\ngeneration (TM only)\n\n(continued)\n\n78 S. Habinc\n\n\n\n(this requires that the transmitter interrupt enable bit in the control register is also\nset). The interrupt will be generated regardless of whether the Transfer Frame was\ntransmitted successfully or not. The wrap (WR) bit is also a control bit that should\nbe set before transmission and it will be explained later in this section.\n\nTo enable a descriptor the enable (EN) bit should be set and after this is done,\nthe descriptor should not be touched until the enable bit has been cleared by the\ncore.\n\n4.3.7.2 Starting Transmissions\n\nEnabling a descriptor is not enough to start a transmission. A pointer to the\nmemory area holding the descriptors must first be set in the core. This is done in\nthe transmitter descriptor pointer register. The address must be aligned to a 1 kB\nboundary. Bits 31 to 10 hold the base address of descriptor area while bits 9 to 3\nform a pointer to an individual descriptor. The first descriptor should be located at\nthe base address and when it has been used by the core, the pointer field is\nincremented by 8 to point at the next descriptor. The pointer will automatically\nwrap back to zero when the next 1 kB boundary has been reached (the descriptor at\n\nTable 4.3 GRTM transmit descriptor word 1 (address offset 0 9 4)\n31 2 1 0\n\nADDRESS RES\n\n31: 2 Address (ADDRESS)\u2014pointer to the buffer area from where the packet\ndata will be loaded\n\n1: 0 RESERVED\n\nTable 4.2 (continued)\n\n6 Operational control field bypass (OCFB)\u2014bypass operational control field\ngeneration\n\n5 Frame error header control bypass (FECHB)\u2014bypass frame error header\ncontrol generation (AOS)\n\n4 Insert zone bypass (IZB)\u2014bypass insert zone generation (AOS)\n3 Frame error control field bypass (FECFB)\u2014bypass frame error control\n\nfield generation\n2 Interrupt enable (IE)\u2014an interrupt will be generated when the frame from this\n\ndescriptor has been sent provided that the transmitter interrupt enable bit in\nthe control register is set. The interrupt is generated regardless if the frame\nwas transmitted successfully or if it terminated with an error\n\n1 Wrap (WR)\u2014set to one to make the descriptor pointer wrap to zero after this\ndescriptor has been used. If this bit is not set the pointer will increment by 8.\nThe pointer automatically wraps to zero when the 1 kB boundary of the\ndescriptor table is reached\n\n0 Enable (EN)\u2014set to one to enable the descriptor. Should always be set last\nof all the descriptor fields\n\n4 The CCSDS Decoder/Encoder Boards 79\n\n\n\naddress offset 0 9 3F8 has been used). The WR bit in the descriptors can be set to\nmake the pointer wrap back to zero before the 1 kB boundary.\n\nThe pointer field has also been made writable for maximum flexibility but care\nshould be taken when writing to the descriptor pointer register. It should never be\ntouched when a transmission is active.\n\nThe final step to activate the transmission is to set the transmit enable bit in the\nDMA control register. This tells the core that there are more active descriptors in\nthe descriptor table. This bit should always be set when new descriptors are\nenabled, even if transmissions are already active. The descriptors must always be\nenabled before the transmit enable bit is set.\n\n4.3.7.3 Descriptor Handling After Transmission\n\nWhen a transmission of a frame has finished, status is written to the first word in\nthe corresponding descriptor. The Underrun Error bit is set if the FIFO became\nempty before the frame was completely transmitted. The other bits in the first\ndescriptor word are set to zero after transmission while the second word is left\nuntouched. The enable bit should be used as the indicator when a descriptor can be\nused again, which is when it has been cleared by the core.\n\nThere are multiple bits in the DMA status register that hold transmission status.\nThe Transmitter Interrupt (TI) bit is set each time a DMA transmission of a\n\nTransfer Frame ended successfully. The Transmitter Error (TE) bit is set each time\na DMA transmission of a Transfer Frame ended with an Underrun Error. For either\nevent, an interrupt is generated for Transfer Frames for which the Interrupt Enable\n(IE) was set in the descriptor (Virtual Channels 0 through 2 only). The interrupt is\nmaskable with the Interrupt Enable (IE) bit in the control register.\n\nThe Transmitter AMBA error (TA) bit is set when an AMBA AHB error was\nencountered either when reading a descriptor or when reading Transfer Frame\ndata. Any active transmissions were aborted and the DMA channel was disabled.\nThis can be a result of a DMA access caused by any Virtual Channel. It is\nrecommended that the Telemetry Encoder is reset after an AMBA AHB error. The\ninterrupt is maskable with the Interrupt Enable (IE) bit in the control register.\n\nThe Transfer Frame Sent (TFS) bit is set whenever a Transfer Frame has been\nsent, independently if it was sent via the DMA interface or generated by the core.\nThe interrupt is maskable with the Transfer Frame Interrupt Enable (TFIE) bit in\nthe control register. Any Virtual Channel causes this interrupt.\n\nThe Transfer Frame Failure (TFF) bit is set whenever a Transfer Frame has\nfailed for other reasons, such as when Idle Frame generation is not enabled and no\nuser Transfer Frame is ready for transmission, independently if it was sent via the\nDMA interface or generated by the core. The interrupt is maskable with the\nTransfer Frame Interrupt Enable (TFIE) bit in the control register.\n\n80 S. Habinc\n\n\n\nThe Transfer Frame Ongoing (TFO) bit is set when DMA transfers are enabled,\nand is not cleared until all DMA induced Transfer Frames have been transmitted\nafter DMA transfers are disabled.\n\nThe External Transmitter Interrupt (XTI) bit is set each time a DMA trans-\nmission of a Transfer Frame ended successfully (unused here). The External\nTransmitter Error (XTE) bit is set each time a DMA transmission of a Transfer\nFrame ended with an underrun error (for Virtual Channels 0 through 3 only).\n\n4.3.8 Registers\n\nThe core is programmed through registers mapped into APB address space\n(Table 4.4).\n\nIn the annex Sect. 11.3 only a selection of registers is described in detail\u2014those\nwhich were essential for accessing the TM Encoder by the OBSW of the Uni-\nversity satellite. Details for the complete register set again can be taken from [62].\n\nTable 4.4 GRTM registers\n\nAPB address offset Register\n\n0 9 00 GRTM DMA control register\n0 9 04 GRTM DMA status register\n0 9 08 GRTM DMA length register\n0 9 0C GRTM DMA descriptor pointer register\n0 9 10 GRTM DMA configuration register\n0 9 14 GRTM DMA revision register\n0 9 20 GRTM DMA external VC control and status register\n0 9 2C GRTM DMA external VC descriptor pointer register\n0 9 80 GRTM control register\n0 9 84 GRTM status register (unused)\n0 9 88 GRTM configuration register\n0 9 90 GRTM physical layer register\n0 9 94 GRTM coding sub-layer register\n0 9 98 GRTM attached synchronization marker (unused)\n0 9 A0 GRTM all frames generation register\n0 9 A4 GRTM master frame generation register\n0 9 A8 GRTM idle frame generation register\n0 9 C0 GRTM FSH/insert zone register 0 (unused)\n0 9 C4 GRTM FSH/insert zone register 1 (unused)\n0 9 C8 GRTM FSH/insert zone register 2 (unused)\n0 9 CC GRTM FSH/insert zone register 3 (unused)\n0 9 D0 GRTM operational control field register (unused)\n\n4 The CCSDS Decoder/Encoder Boards 81\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\n4.3.9 Signal Definitions and Reset Values\n\nThe signals and their reset values are described in Table 4.5. The key ones are \u2018\u2018RF\nAvailable\u2019\u2019 and \u2018\u2018Bit Lock\u2019\u2019 to start transmission not before the RF ground link\nreally is established.\n\n4.3.10 TM Encoder: Virtual Channel Generation\n\nThe CCSDS/ECSS/PSS Telemetry Encoder Virtual Channel Generation function\nimplements:\n\n\u2022 Transfer Frame Primary Header insertion\n\u2022 Transfer Frame Data Field insertion (with support for different lengths due to\n\nOCF and FECF)\n\u2022 First Header Pointer (FHP) handling and insertion.\n\nThe function keeps track of the number of octets received and the packet\nboundaries in order to calculated the First Header Pointer (FHP). The data are\nstored in pre-allocated slots in the buffer memory comprising complete Transfer\nFrames. The module fully supports the FHP generation and does not require any\nalignment of the packets with the Transfer Frame Data Field boundary.\n\nThe data input format can be CCSDS Space Packet [27] or any user-defined\ndata-block. Data is input via a separate Virtual Channel Generation function input\ninterface.\n\nThe function communicates with the Telemetry Encoder Virtual Channel\nFrame Service by means of a buffer memory space. The buffer memory space\nallocated to the Virtual Channel is treated as a circular buffer. The buffer memory\nspace is accessed by means of an AMBA AHB master interface.\n\n4.3.11 TM Encoder: Descriptor\n\nThe CCSDS/ECSS/PSS Telemetry Encoder Descriptor implements an automatic\ndescriptor handler for external Telemetry Virtual Channels implemented in\n\nTable 4.5 Signal definitions and reset values\n\nType Function Active Reset value\n\ntcrfa[] Input, async RF available \u2013 \u2013\ntcactive[] Input, async Bit lock \u2013 \u2013\ncaduout[] Output Serial bit data, output at caduclk edge (selectable) \u2013 \u2013\ncaduclk[] Output Serial bit data clock Rising Logical 0\nclcwin[] Input CLCW data input \u2013 \u2013\n\n82 S. Habinc\n\n\n\nhardware (Telemetry Encoder Virtual Channel Generation function), not requiring\nsoftware support. Details can be taken from [62].\n\n4.3.12 TM Encoder: Virtual Channel Generation Function\nInput Interface\n\nThe Telemetry Encoder Virtual Channel Generation function input interface\nimplements an interfaces towards the automatic Virtual Channel Generation\nfunction of the Telemetry Encoder (also called external Virtual Channels). Space\nPackets or any other user-defined data block can be input. It is the essential\ninterface for the user for TM generation.\n\nData is transferred to the Virtual Channel Generation function by writing to the\nAMBA AHB slave interface, located in the AHB I/O area. Writing is only possible\nwhen the packet valid delimiter is asserted, else the access results in an AMBA\naccess error. It is possible to transfer one, two or four bytes at a time, following the\nAMBA big-endian convention regarding send order. The last written data can be\nread back via the AMBA AHB slave interface. Data are output as octets to the\nVirtual Channel Generation function.\n\nIn the case the data from a previous write access has not been fully transferred\nover the interface, a new write access will result in an AMBA retry response. The\nprogress of the interface can be monitored via the AMBA APB slave interface. An\ninterrupt is generated when the data from the last write access has been transferred.\nAn interrupt is also generated when the ready for input packet indicator is asserted.\n\nThe core incorporates status and monitoring functions accessible via the AMBA\nAPB slave interface. This includes:\n\n\u2022 Busy and ready signaling from Virtual Channel Generation function\n\u2022 Interrupts on ready for new word, or ready for new packet (size 2048 octets).\n\nTwo interrupts are implemented by the interface:\n\nIndex Name Description\n\n0 NOT BUSY Ready for a new data (word, half-word or byte)\n1 READY Ready for new packet\n\nThe control registers for this function can be found in annex Sect. 11.4.\n\n4 The CCSDS Decoder/Encoder Boards 83\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\n4.4 TC Decoder: Software Commands\n\n4.4.1 Overview\n\nThe Telecommand Decoder (GRTC) is compliant with the Packet Telecommand\nprotocol and specification defined by [43] and [44]. The decoder is also compatible\nwith the CCSDS recommendations stated in [30], [31], [32] and [33]. The Tele-\ncommand Decoder (GRTC) only implements the Coding Layer (CL) (Fig. 4.5).\n\nIn the Coding Layer (CL), the telecommand decoder receives bit streams on\nmultiple channel inputs. The streams are assumed to have been generated in\naccordance with the Physical Layer specifications. In the Coding Layer, the\ndecoder searches all input streams simultaneously until a start sequence is\ndetected. Only one of the channel inputs is selected for further reception. The\nselected stream is bit-error corrected and the resulting corrected information is\npassed to the user. The corrected information received in the CL is transfer by\nmeans of Direct Memory Access (DMA) to the on-board processor.\n\nThe Command Link Control Word (CLCW) and the Frame Analysis Report\n(FAR) can be read and written as registers via the AMBA AHB bus. Parts of the\ntwo registers are generated by the Coding Layer (CL). The CLCW is automatically\ntransmitted to the Telemetry Encoder (TM) for transmission to the ground.\n\nNote that most parts of the CLCW and FAR are not produced by the Tele-\ncommand Decoder (GRTC) hardware part. This is instead done by the software\npart of the decoder.\n\nFig. 4.5 Telecommand Decoder block diagram. ? Aeroflex Gaisler AB\n\n84 S. Habinc\n\n\n\n4.4.1.1 Concept\n\nA telecommand decoder in this concept is mainly implemented by software in the\non-board processor (Figs. 4.6). The supporting hardware in the GRTC core\nimplements the Coding Layer, which includes synchronization pattern detection,\nchannel selection, codeblock decoding, Direct Memory Access (DMA) capability\nand buffering of corrected codeblocks. The hardware also provides a register via\nwhich the Command Link Control Word (CLCW) is made available to a\nTelemetry Encoder. The CLCW is to be generated by the software.\n\nThe GRTC has been split into several clock domains to facilitate higher bit rates and\npartitioning. The two resulting sub-cores have been named Telecommand Channel\nLayer (TCC) and the Telecommand Interface (TCI). Note that TCI is called AHB2TCI.\nA complete CCSDS packet telecommand decoder can be realized at software level\naccording to the latest available standards, staring from the Transfer Layer.\n\n4.4.1.2 Functions and Options\n\nThe Telecommand Decoder (GRTC) only implements the Coding Layer of the\nPacket Telecommand Decoder standard [43]. All other layers are to be imple-\nmented in software, e.g. Authentication Unit (AU). The Command Pulse Decoding\n\nFig. 4.6 Conceptual block diagram. ? Aeroflex Gaisler AB\n\n4 The CCSDS Decoder/Encoder Boards 85\n\n\n\nUnit (CPDU) is not implemented. As explained in chapter 1 for the CDPI archi-\ntecture a Command Pulse Distribution Unit is not needed.\n\nThe following functions of the GRTC are programmable by means of registers:\n\n\u2022 Pseudo De-Randomisation\n\u2022 Non-Return-to-Zero-Mark decoding.\n\nThe following functions of the GRTC are pin configurable:\n\n\u2022 Polarity of RF Available and Bit Lock inputs\n\u2022 Edge selection for input channel clock.\n\nThe pin configurable settings have been applied accordingly by 4Links Ltd. as\nthe CCSDS-Board hardware designer.\n\n4.4.2 Data Formats\n\nFigure 4.7 shows the telecommand input protocol waveform.\n\n4.4.3 Coding Layer\n\nThe Coding Layer (CL) synchronizes the incoming bit stream and provides an\nerror correction capability for the Command Link Transmission Unit (CLTU). The\nCoding Layer receives a dirty bit stream together with control information on\nwhether the physical channel is active or inactive for the multiple input channels.\n\nThe bit stream is assumed to be NRZ-L encoded, as the standards specify for\nthe Physical Layer. As an option, it can also be NRZ-M encoded. There are no\nassumptions made regarding the periodicity or continuity of the input clock signal\nwhile an input channel is inactive. The most significant bit (Bit 0 according to\n[43]) is received first.\n\nSearching for the Start Sequence, the Coding Layer finds the beginning of a\nCLTU and decodes the subsequent codeblocks. As long as no errors are detected, or\nerrors are detected and corrected, the Coding Layer passes clean blocks of data to\nthe Transfer Layer which is implemented in software. When a codeblock with an\nuncorrectable error is encountered, it is considered as the Tail Sequence, its con-\ntents are discarded and the Coding Layer returns to the Start Sequence search mode.\n\nFig. 4.7 Telecommand input protocol. ? Aeroflex Gaisler AB\n\n86 S. Habinc\n\n\n\nThe Coding Layer also provides status information for the FAR, and it is\npossible to enable an optional de-randomizer according to [30].\n\n4.4.3.1 Synchronization and Selection of Input Channel\n\nSynchronization is performed by means of bit-by-bit search for a Start Sequence\non the channel inputs. The detection of the Start Sequence is tolerant to a single bit\nerror anywhere in the Start Sequence pattern. The Coding Layer searches both for\nthe specified pattern as well as the inverted pattern. When an inverted Start\nSequence pattern is detected, the subsequent bit-stream is inverted till the detection\nof the Tail Sequence.\n\nThe detection is accomplished by a simultaneous search on all active channels.\nThe first input channel where the Start Sequence is found is selected for the CLTU\ndecoding. The selection mechanism is restarted on any of the following events:\n\n\u2022 The input channel active signal is de-asserted, or\n\u2022 a Tail Sequence is detected, or\n\u2022 a codeblock rejection is detected, or\n\u2022 an abandoned CLTU is detected, or the clock time-out expires.\n\nAs a protection mechanism in case of input failure, a clock time-out is provided\nfor all selection modes. The clock time-out expires when no edge on the bit clock\ninput of the selected input channel in decode mode has been detected for a\nspecified period.\n\nWhen the clock time-out has expired, the input channel in question is ignored\n(i.e. considered inactive) until its active signal is de-asserted (configurable with\ngTimeoutMask=1). [Not implemented]\n\n4.4.3.2 Codeblock Decoding\n\nThe received codeblocks are decoded using the standard (63, 56) modified BCH code.\nAny single bit error in a received codeblock is corrected. A codeblock is rejected as a\nTail Sequence if more than one bit error is detected. Information regarding Count of\nSingle Error Corrections and Count of Accept codeblocks is provided to the FAR.\nInformation regarding Selected Channel Input is provided via a register.\n\n4.4.3.3 De-Randomizer\n\nIn order to maintain bit synchronization with the received telecommand signal, the\nincoming signal must have a minimum bit transition density. If a sufficient bit\ntransition density is not ensured for the channel by other methods, the randomizer\nis required. Its use is optional otherwise. The presence or absence of randomization\nis fixed for a physical channel and is managed (i.e. its presence or absence is not\n\n4 The CCSDS Decoder/Encoder Boards 87\n\n\n\nsignaled but must be known a priori by the spacecraft and ground system). A\nrandom sequence is exclusively OR-ed with the input data to increase the fre-\nquency of bit transitions. On the receiving end, the same random sequence is\nexclusively OR-ed with the decoded data, restoring the original data form. At the\nreceiving end, the de-randomisation is applied to the successfully decoded data.\nThe de-randomizer remains in the \u2018\u2018all-ones\u2019\u2019 state until the Start Sequence has\nbeen detected. The pattern is exclusively OR-ed, bit by bit, to the successfully\ndecoded data (after the Error Control Bits have been removed). The de-randomizer\nis reset to the \u2018\u2018all-ones\u2019\u2019 state following a failure of the decoder to successfully\ndecode a codeblock or other loss of input channel.\n\n4.4.3.4 Non-Return-to-Zero: Mark\n\nAn optional Non-Return-to-Zero-Mark decoder can be enabled by means of a\nregister.\n\n4.4.3.5 Design Specifics\n\nThe coding layer is supporting 1 to 8 channel inputs, although PSS requires at least 4.\nA codeblock is fixed to 56 information bits (as per CCSDS/ECSS).\n\nThe CCSDS/ECSS (1024 octets) or PSS (256 octets) standard maximum frame\nlengths are supported, being programmable via bit PSS in the GCR register. The\nformer allows more than 37 codeblocks to be received.\n\nThe Frame Analysis Report (FAR) interface supports 8 bit CAC field, as well as\nthe 6 bit CAC field specified in ESA PSS-04-151 When the PSS bit is cleared to\n\u20180\u2019, the two most significant bits of the CAC will spill over into the \u2018\u2018LEGAL/\nILLEGAL\u2019\u2019 FRAME QUALIFIER field in the FAR. These bits will however be\nall-zero when PSS compatible frame lengths are received or the PSS bit is set to\n\u20181\u2019. The saturation is done at 6 bits when PSS bit is set to \u20181\u2019 and at 8 bits when\nPSS bit is cleared to \u20180\u2019.\n\nThe Pseudo-Randomizer decoder is included (as per CCSDS/ECSS), its usage\nbeing input signal programmable.\n\nThe Physical Layer input can be NRZ-L or NRZ-M modulated, allowing for\npolarity ambiguity. NRZ-L/M selection is programmable. This is an extension to\nECSS: Non-Return to Zero-Mark decoder added, with its internal state reset to\nzero when channel is deactivated.\n\nNote: If input clock disappears, it will also affect the codeblock acquired imme-\ndiately before the codeblock just being decoded (accepted by ESA PSS-04-151).\n\nIn state S1, all active inputs are searched for start sequence, there is no priority\nsearch, only round robin search. The search for the start sequence is sequential\nover all inputs: maximum input frequency = system frequency/(gIn ? 2)\n\nThe ESA PSS-04-151 [44] specified CASE-1 and CASE-2 actions are imple-\nmented according to aforementioned specification, not leading to aborted frames.\n\n88 S. Habinc\n\n\n\nExtended E2 handling is implemented:\n\n\u2022 E2b Channel Deactivation\u2014selected input becomes inactive in S3\n\u2022 E2c Channel Deactivation\u2014too many codeblocks received in S3\n\u2022 E2d Channel Deactivation\u2014selected input is timed-out in S3 (design choice\n\nbeing: S3 =[ S1, abandoned frame).\n\n4.4.3.6 Direct Memory Access\n\nThis interface provides Direct Memory Access (DMA) capability between the\nAMBA bus and the Coding Layer. The DMA operation is programmed via an\nAHB slave interface. This interface technique is used by the OBSW of the\nStuttgart University FLP satellite platform.\n\nThe DMA interface is an element in a communication concept that contains\nseveral levels of buffering. The first level is performed in the Coding Layer where\na complete codeblock is received and kept until it can be corrected and sent to the\nnext level of the decoding chain. This is done by inserting each correct information\noctet of the codeblock in an on-chip local First-In-First-Out (FIFO) memory which\nis used for providing improved burst capabilities. The data is then transferred from\nthe FIFO to a system level ring buffer in the user memory (i.e. on-chip memory\nlocated in the FPGA) which is accessed by means of DMA.\n\nThe following storage elements can thus be found in this design:\n\n\u2022 The shift and hold registers in the Coding Layer\n\u2022 The local FIFO (parallel; 32-bit; 4 words deep)\n\u2022 The system ring buffer (on-chip FPGA memory; 32-bit; 1 to 256 kB deep).\n\n4.4.4 Transmission\n\nThe serial data is received and shifted in a shift register in the Coding Layer when\nthe reception is enabled. After correction, the information content of the shift\nregister is put into a hold register.\n\nWhen space is available in the peripheral FIFO, the content of the hold register\nis transferred to the FIFO. The FIFO is of 32-bit width and the byte must thus be\nplaced on the next free byte location in the word.\n\nWhen the FIFO is filled for 50 %, a request is done to transfer the available data\ntowards the system level buffer.\n\nIf the system level ring buffer isn\u2019t full, the data is transported from the FIFO,\nvia the AHB master interface towards the main processor and stored in e.g. SRAM.\nIf no place is available in the system level ring buffer, the data is held in the FIFO.\n\nWhen the GRTC keeps receiving data, the FIFO will fill up and when it reaches\n100 % of data, and the hold and shift registers are full, a receiver overrun interrupt\nwill be generated (IRQ RX OVERRUN). All new incoming data is rejected until\nspace is available in the peripheral FIFO.\n\n4 The CCSDS Decoder/Encoder Boards 89\n\n\n\nWhen the receiving data stream is stopped (e.g. when a complete data block is\nreceived), and some bytes are still in the peripheral FIFO, then these bytes will be\ntransmitted to the system level ring buffer automatically. Received bytes in the\nshift and hold register are always directly transferred to the peripheral FIFO.\n\nThe FIFO is automatically emptied when a CLTU is either ready or has been\nabandoned. The reason for the latter can be codeblock error, time out etc. as\ndescribed in CLTU decoding state diagram.\n\nThe operational state machine is shown in Fig. 4.8.\n\nFig. 4.8 Direct memory access. ? Aeroflex Gaisler AB\n\n90 S. Habinc\n\n\n\nLegend:\nrx_w_ptr Write pointer\nrx_r_ptr Read pointer\n\n4.4.4.1 Data Formatting\n\nWhen in the decode state, each candidate codeblock is decoded in single error\ncorrection mode as described hereafter.\n\n4.4.4.2 CLTU Decoder State Diagram\n\nFigure 4.9 Note that the diagram has been improved with explicit handling of\ndifferent E2 possibilities listed below.\n\nState Definition:\nS1 Inactive\nS2 Search\nS3 Decode\n\nEvent Definition:\nE1 Channel Activation\nE2a Channel Deactivation\u2014all inputs are inactive\nE2b Channel Deactivation\u2014selected becomes inactive (CB = 0 ? frame\n\nabandoned)\nE2c Channel Deactivation\u2014too many codeblocks received (all ? frames\n\nabandoned)\nE2d Channel Deactivation\u2014selected is timed-out (all ? frames abandoned)\nE3 Start Sequence Found\nE4 Codeblock Rejection (CB = 0 ? frame abandoned)\n\nFig. 4.9 CLTU decoder states and transitions. ? Aeroflex Gaisler AB\n\n4 The CCSDS Decoder/Encoder Boards 91\n\n\n\n4.4.4.3 Nominal\n\nA: When the first \u2018\u2018Candidate Codeblock\u2019\u2019 (i.e. \u2018\u2018Candidate Codeblock\u2019\u2019 0, which\nfollows Event 3 (E3):START SEQUENCE FOUND) is found to be error free, or if\nit contained an error which has been corrected, its information octets are trans-\nferred to the remote ring buffer as shown in Table 4.6. At the same time, a \u2018\u2018Start\nof Candidate Frame\u2019\u2019 flag is written to bit 0 or 16, indicating the beginning of a\ntransfer of a block of octets that make up a \u2018\u2018Candidate Frame\u2019\u2019. There are two\ncases that are handled differently as described in the next sections.\n\nLegend: Bit [17:16] or [1:0]:\n\u2018\u201800\u2019\u2019 = continuing octet\n\u2018\u201801\u2019\u2019 = Start of Candidate Frame\n\u2018\u201810\u2019\u2019 = End of Candidate Frame\n\u2018\u201811\u2019\u2019 = Candidate Frame Abandoned\n\n4.4.4.4 CASE 1\n\nWhen an Event 4\u2014(E4): CODEBLOCK REJECTION\u2014occurs for any of the 37\npossible \u2018\u2018Candidate Codeblocks\u2019\u2019 that can follow codeblock 0 (possibly the tail\nsequence), the decoder returns to the SEARCH state (S2), with the following\nactions:\n\n\u2022 The codeblock is abandoned (erased)\n\u2022 No information octets are transferred to the remote ring buffer\n\u2022 An \u2018\u2018End of Candidate Frame\u2019\u2019 flag is written, indicating the end of the transfer\n\nof a block of octets that make up a \u2018\u2018Candidate Frame\u2019\u2019.\n\n4.4.4.5 CASE 2\n\nWhen an Event 2\u2014(E2): CHANNEL DEACTIVATION\u2014occurs which affects\nany of the 37 possible \u2018\u2018Candidate Codeblocks\u2019\u2019 that can follow codeblock 0, the\ndecoder returns to the INACTIVE state (S1), with the following actions:\n\nTable 4.6 Data format\n\nBit(31\u2026.24) Bit(23\u2026.16) Bit(15\u2026\u20268} Bit(7\u2026\u2026..0}\n0 9 40000000 information octet0 0 9 01 information octet1 0 9 00\n0 9 40000004 Information octet2 0 9 00 Information octet3 0 9 00\n0 9 40000008 Information octet4 0 9 00 End of frame 0 9 02\n0 9 400000xx Information octet6 0 9 01 Information octet7 0 9 00\n0 9 400000xx Information octet8 0 9 00 Abandoned frame 0 9 03\n\n92 S. Habinc\n\n\n\n\u2022 The codeblock is abandoned (erased)\n\u2022 No information octets are transferred to the remote ring buffer\n\u2022 An \u2018\u2018End of Candidate Frame\u2019\u2019 flag is written, indicating the end of the transfer\n\nof a block of octets that make up a \u2018\u2018Candidate Frame\u2019\u2019.\n\n4.4.4.6 Abandoned\n\n\u2022 B: When an Event 4 (E4), or an Event 2 (E2), occurs which affects the first\ncandidate codeblock 0, the CLTU shall be abandoned. No candidate frame\noctets have been transferred.\n\n\u2022 C: If and when more than 37 codeblocks have been accepted in one CLTU, the\ndecoder returns to the SEARCH state (S2). The CLTU is effectively aborted and\nthis is will be reported to the software by writing the \u2018\u2018Candidate Frame\nAbandoned flag\u2019\u2019 to bit 1 or 17, indicating to the software to erase the \u2018\u2018Can-\ndidate frame\u2019\u2019.\n\n4.4.5 Relationship Between Buffers and FIFOs\n\nDetails on the relationship between buffers and FIFOs, buffer full condition han-\ndling etc. again can be found in [55].\n\n4.4.6 Command Link Control Word Interface\n\nThe Command Link Control Word (CLCW) is inserted in the Telemetry Transfer\nFrame by the Telemetry Encoder (TM) when the Operation Control Field (OPCF)\nis present. The CLCW is created by the software part of the telecommand decoder.\nThe telecommand decoder hardware provides two registers for this purpose which\ncan be accessed via the AMBA AHB bus.\n\nNote that bit 16 (No RF Available) and 17 (No Bit Lock) of the CLCW are not\npossible to write by software. The information carried in these bits is based on\ndiscrete inputs.\n\nThe CLCW Register 1 (CLCWR1) is internally connected to the Telemetry\nEncoder.\n\nThe CLCW Register 2 (CLCWR2) is connected to the external clcwout[0]\nsignal. One Packet Asynchronous interfaces (PA) are used for the transmission of\nthe CLCW from the telecommand decoder. The protocol is fixed to 115200 baud,\n\n4 The CCSDS Decoder/Encoder Boards 93\n\n\n\n1 start bit, 8 data bits, 1 stop, with a BREAK command for message delimiting\n(sending 13 bits of logical zero). The CLCWs are automatically transferred over\nthe PA interface after reset, on each write access to the CLCW register and on each\nchange of the bit 16 (No RF Available) and 17 (No Bit Lock) (Table 4.7).\n\nFor the cross strapping of the CLCW routing between the redundant CCSDS-\nBoards please refer to Sect. 4.2.2.\n\n4.4.7 Configuration Interface (AMBA AHB slave)\n\nDetails on the TC Decoder configuration interface also go beyond the scope of this\nbook and shall be taken from [55].\n\n4.4.8 Interrupts\n\nThe core generates the interrupts defined in Table 4.8.\n\nTable 4.8 Interrupts\n\nInterrupt offset Interrupt name Description\n\n1:st RFA RF available changed\n2:nd BLO Bit lock changed\n3:rd FAR FAR available\n4:th CR CLTU ready/aborted\n5:th RBF Output buffer full\n6:th OV Input data overrun\n7:th CS CLTU stored\n\nTable 4.7 CLCW transmission protocol\n\nByte\nNumber\n\nCLCWR\nregister bits CLCW contents\n\nFirst [31:24] Control Word Type CLCW \nVersion \nNumber\n\nStatus\nField\n\nCOP In Effect\n\nSecond [23:16] Virtual Channel\nIdentifier\n\nReserved Field\n\nThird [15:8] No RF Available No Bit\nLock\n\nLock\nOut\n\nWait Retransmit Farm B \nCounter\n\nReport\nType\n\nFourth [7:0] Report Value\n\nFifth N/A [RS232 Break Command]\n\n94 S. Habinc\n\n\n\n4.4.9 Registers\n\nThe core is programmed through registers mapped into AHB I/O address space\n(Table 4.9).\n\nAlso for the TC Decoder only the most important registers shall be treated as far\nas they are used by the OBSW of the satellite target platform FLP. The register\ndescriptions can be found in the annex Sect. 11.5.\n\n4.4.10 Signal Definitions and Reset Values\n\nThe signals and their reset values are described in Table 4.10.\n\nTable 4.9 GRTC registers\n\nAHB address offset Register\n\n0 9 00 Global reset register (GRR)\n0 9 04 Global control register (GCR)\n0 9 0C Spacecraft identifier register (SIR)\n0 9 10 Frame acceptance report register (FAR)\n0 9 14 CLCW register 1 (CLCWR1) (internal)\n0 9 18 CLCW register 2 (CLCWR2) (external)\n0 9 1C Physical interface register (PHIR)\n0 9 20 Control register (COR)\n0 9 24 Status register (STR)\n0 9 28 Address space register (ASR)\n0 9 2C Receive read pointer register (RRP)\n0 9 30 Receive write pointer register (RWP)\n0 9 60 Pending interrupt masked status register (PIMSR)\n0 9 64 Pending interrupt masked register (PIMR)\n0 9 68 Pending interrupt status register (PISR)\n0 9 6C Pending interrupt register (PIR)\n0 9 70 Interrupt mask register (IMR)\n0 9 74 Pending interrupt clear register (PICR)\n\nTable 4.10 Signal definitions and reset values\n\nSignal name Type Function Active Reset value\n\ntcrfa[0:1] Input, async RF available for CLCW \u2013 \u2013\ntcactive[0:1] Input, async Active \u2013 \u2013\ntcclk[0:1] Input, async Bit clock \u2013 \u2013\ntcdata[0:1] Input, async Data \u2013 \u2013\nclcwout[0] Output CLCW output data 2 \u2013 Logical 1\n\n4 The CCSDS Decoder/Encoder Boards 95\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8\n\n\n4.5 TC Decoder: Hardware Commands\n\n4.5.1 Overview\n\nThe Telecommand Decoder\u2014hardware commands\u2014or High Priority Com-\nmands (HPC)\u2014provides access to an output port via telecommands.\n\nThe decoder implements the following layers:\n\n\u2022 Data Link\u2014Protocol Sub-Layer:\n\n\u2013 Virtual Channel Packet Extraction\n\u2013 Virtual Channel Segment Extraction\n\u2013 Virtual Channel Reception:\n\n\u2022 Support for Command Link Control Word (CLCW)\n\n\u2013 Virtual Channel Demultiplexing\n\u2013 Master Channel Demultiplexing\n\u2013 All Frames Reception\n\n\u2022 Data Link\u2014Synchronization and Channel Coding Sub-Layer:\n\n\u2013 Pseudo-De-randomization\n\u2013 BCH codeblock decoding\n\u2013 Start Sequence Search\n\n\u2022 Physical Layer:\n\n\u2013 Non-Return-to-Zero Level de-modulation (NRZ-L).\n\nThe Channel Coding Sub-Layer and the Physical Layer are shared with the\nTelecommand Decoder\u2014Software Commands, and are therefore not repeated here.\n\n4.5.2 Operation\n\nIn the Application Layer and the Data Link\u2014Protocol Sub-Layer, the information\noctets from the Channel Coding Sub-Layer are decoded as described in the fol-\nlowing subsections.\n\n4.5.2.1 All Frames Reception\n\nThe All Frames Reception function performs two procedures:\n\n\u2022 Frame Delimiting and Fill Removal Procedure; and\n\u2022 Frame Validation Check Procedure, in this order.\n\n96 S. Habinc\n\n\n\nThe Frame Delimiting and Fill Removal Procedure is used to reconstitute\nTransfer Frames from the data stream provided by the Channel Coding Sub-Layer\nand to remove any Fill Data transferred from the Channel Coding Sub-Layer. The\nFrame Length field is checked to correspond to the received data. The number of\ninformation octets is checked to match the frame length.\n\nThe Fill Data is checked to match the 0 9 55 pattern when Pseudo-De-ran-\ndomization is not enabled.\n\nThe Frame Validation Checks procedure performs the following checks:\n\n\u2022 Version Number is checked to be 0.\n\u2022 Bypass Flag is checked to be 1.\n\u2022 Control Command Flag is checked to be 0.\n\u2022 Reserved Spare bits are checked to be 0.\n\u2022 Spacecraft Identifier is compared with a fixed value, see Table 4.15.\n\u2022 Virtual Channel identifier is compared with a fixed value for bit 0 to 3, see\n\nTable 4.15, and bit 4 with value of id [1] input pin, and bit 5 with fixed value 1.\n\u2022 Frame Length field is checked to match the received frame and CLTU, maxi-\n\nmum 64 octets.\n\u2022 Frame Sequence Number is checked to be a fixed value of 0.\n\u2022 The Frame Error Control Field is checked to match the recomputed CRC value.\n\n4.5.2.2 Master Channel Demultiplexing\n\nThe Master Channel Demultiplexing is performed implicitly during the All Frames\nReception procedure described above.\n\n4.5.2.3 Virtual Channel Demultiplexing\n\nThe Virtual Channel Demultiplexing is performed implicitly during the All Frames\nReception procedure described above.\n\n4.5.2.4 Virtual Channel Reception\n\nThe Virtual Channel Reception supports Command Link Control Word (CLCW)\ngeneration and transfer to the Telemetry Encoder, according to the following field\ndescription.\n\n\u2022 Control Word Type field is 0.\n\u2022 CLCW Version Number field is 0.\n\u2022 Status Field is 0.\n\u2022 COP in Effect field is 1.\n\u2022 Virtual Channel Identification is taken from pin configurable input value.\n\n4 The CCSDS Decoder/Encoder Boards 97\n\n\n\n\u2022 Reserved Spare field is 0.\n\u2022 No RF Available Flag is 0, but is overwritten by the Telemetry Encoder.\n\u2022 No Bit Lock Flag is 0, but is overwritten by the Telemetry Encoder.\n\u2022 Lockout Flag is 1.\n\u2022 Wait Flag is 0.\n\u2022 Retransmit Flag is 0.\n\u2022 FARM-B Counter is taken from the to least significant bits of a reception\n\ncounter.\n\u2022 Reserved Spare field is 0.\n\u2022 Report Value field is 0.\n\nNote that the CLCW is not generated unless also the Segment and Packet\nextraction is successful and the Space Packet has been sent out via the UART\ninterfaces.\n\nThe CLCW transmission protocol is fixed to 115200 baud, 1 start bit, 8 data\nbits, 1 stop, with a BREAK command for message delimiting (sending 13 bits of\nlogical zero).\n\n4.5.2.5 Virtual Channel Segment Extraction\n\nThe decoder implements the Segmentation Sublayer and extracts the Segment\nfrom the Frame Data Unit on the Virtual Channel, received from the Virtual\nChannel Reception function. It supports blocking, but neither segmentation nor\npacket assembly control. It only supports one Virtual Channel.\n\nThe Segment Header is checked to have the following fixed values:\n\n\u2022 Sequence Flags are checked to be 11b\n\u2022 MAP Identifier is compared with a fixed value, see Table 4.15.\n\nThe Segment Data field may be between 1 and 56 octets in length.\n\n4.5.2.6 Virtual Channel Packet Extraction\n\nThe Virtual Channel Packet Extraction function extracts the Space Packet from the\nSegment Data Field received from the Virtual Channel Segment Extraction\nfunction. The aggregated length of all Space Packet(s) in one Segment Data Field\nmay be maximum 56 octets. The contents of the Space Packet(s) are not checked.\nThe Space Packet(s) are sent to the UART interface for output.\n\n98 S. Habinc\n\n\n\n4.5.2.7 UART Interfaces\n\nThe Space Packet(s) received from the Virtual Channel Packet Extraction function\nour sent out via the redundant UART outputs. For each correctly received Transfer\nFrame, a synchronization pattern containing two bytes, 0xFF followed by 0 9 55,\nis first sent out serially, followed by the Space Packet(s).\n\nThe CLCW transmission protocol is fixed to 115200 baud, 1 start bit, 8 data bits,\nand 1 stop bit. After the Space Packet(s) have been sent, the CLCW is updated.\n\n4.5.3 Telecommand Transfer Frame Format: Hardware\nCommands\n\nThe Telecommand Transfer Frame for hardware commands has the following\nstructures (Tables 4.11, 4.12, 4.13).\n\nTable 4.11 Telecommand transfer frame format\n\nTransfer Frame\nTransfer Frame\nPrimary Header\n\nTransfer Frame Data Field Frame Error\nControl Field\n\n(FECF)\nSegment\n\nSegment Header Segment Data Field\none or more Space Packets\n\n5 octets 1 octet 1 to 56 octets 2 octets\n\nTable 4.12 Telecommand transfer frame primary header format\n\nTransfer Frame Primary Header\nVersion Bypass\n\nFlag\nControl\n\nCommand\nFlag\n\nReserved\nSpare\n\nS/C Id Virtual\nChannel\n\nId\n\nFrame\nLength\n\nFrame\nSequence\nNumber\n\n00b 1b 0b 00b FIXED FIXED/PIN 9 to 64 00000000b\n0:1 2 3 4:5 6:15 16:21 22:31 32:39\n\n2 bits 1 bit 1 bit 2 bits 10 bits 6 bits 10 bits 8 bits\n2 octets 2 octets 1 octet\n\nTable 4.13 Segment format\n\nSegment\nSegment Header Segment Data Field\n\nSequence Flags MAP Identifier Space Packet(s)\n11b FIXED\n\n40:41 42:47 variable\n2 bits 6 bit variable\n\n1 octet 1 to 56 octets\n\n4 The CCSDS Decoder/Encoder Boards 99\n\n\n\n4.5.4 Signal Definitions and Reset Values\n\nThe signals and their reset values are described in Table 4.14.\n\n4.6 SpaceWire Interface with RMAP Target\n\nThe developed I/O-Board type is called SIU B-012-PPFLPCCSDS.\nThe board identity (Nominal or Redundant) via SpaceWire from OBC Pro-\n\ncessor-Board is set by grounding selected pins on connector-E, allowing the board\nID to be set by location in the wiring harness.\n\n\u2022 The TDI pin grounding (80 on connector E\u2014see Fig. 11.9) defines the board ID\nto be nominal or redundant.\n\n\u2022 TDI Pin floating results in the board responding to requests sent to logical\naddress 0 9 28 (nominal CCSDS-Board) and\n\n\u2022 TDI Pin grounded results in the board responding to requests sent to logical\naddress 0 9 29 (redundant CCSDS-Board).\n\nWrites/Reads to undefined addresses will result in the RMAP status code 10\n(command not possible) being returned.\n\nThe SpaceWire interface functionality on board the CCSDS Decoder/Encoder\nIP Core works out of the box without additional settings with the core running on\nthe 4Links CCSDS-Board hardware and with the Aeroflex Processor-Board fea-\nturing the SpaceWire interfaces in hardware on the UT699 LEON3FT chip,\ntogether with the Aeroflex Gaisler RTEMS operating system. In [55] this IP Core\nSpaceWire interface is described in detail which can be skipped here.\n\n4.7 JTAG Debug Interface\n\nThe JTAG Interface provides access to on-chip AMBA AHB bus through JTAG.\nThis interface is made available to the user by the 4Links CCSDS-Board but is no\nlonger available to the closed OBC unit external. For application on standard user\nside it is relevant only for loading the IP Core onto the 4Links board hardware.\n\nTable 4.14 Signal definitions and reset values\n\nSignal name Type Function Active Reset value\n\ntcuart[0:1] Output Hardware command UART outputs Logical 1 Logical 0\nid[1] Input, static Telecommand virtual channel identifier, bit 1 . .\nclcwout[1] Output CLCW output data \u2013 Logical 1\n\n100 S. Habinc\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\nThe JTAG debug interface implements a simple protocol which translates JTAG\ninstructions to AMBA AHB transfers. Details on its operation can be taken from\n[55] and (Fig. 4.10).\n\n4.8 Diverse Features\n\nAlso the CCSDS Decoder/Encoder IP Core is featuring triple module redundancy\ntechnique for its implementation.\n\nFurthermore, the memory implementation on the FPGA chip is including\nEDAC functionality (for technical details see [55])\n\nAlso for the CCSDS Decoder/Encoder IP Core status registers the reader is\nkindly referred to [55].\n\nThe interrupt controller in the CCSDS IP Core is also described in [55]. For\nstandard use of the Decoder/Encoder it is not needed except in special debugging\ncases.\n\nThe IP Core furthermore features a general purpose I/O port (see [55]). Since\nthis feature is not made available to the user by the 4Links CCSDS-Board hard-\nware, it is not described here any further.\n\nThe clock generator implements internal clock generation and buffering. The\nminimum clock period, and the resulting maximum clock frequency, is dependent\non the manufacturing lot for the Actel parts and expected radiation levels. In the\nCDPI implementation described here the clock period is 100 ns.\n\nThe reset generator implements input reset signal synchronization with glitch\nfiltering and generates the internal reset signal. The input reset signal can be\nasynchronous. The resetn input is re-synchronized internally. The signals do not\nhave to meet any setup or hold requirements.\n\nFig. 4.10 JTAG debug link block diagram. ? Aeroflex Gaisler AB\n\n4 The CCSDS Decoder/Encoder Boards 101\n\n\n\n4.9 CCSDS Processor Spacecraft Specific Configuration\n\nFor each individual spacecraft some fixed parameters of the design must be\nconfigured as shown in Table 4.15. This task is performed by Aeroflex Gaisler\naccording to the customer\u2019s specification.\n\nTable 4.15 Configuration at ordering\n\nParameter Value range Used Description\n\nSCID 10 bit 0 9 25D TC Hardware spacecraft identifier\nVCID 6 bit 0 9 01/\n\n0 9 03\nTC Hardware virtual channel\nidentifier\nNote: only the 4 most significant\nbits 0:3 are set by configuration.\nBit 4 is set by means of the id I\ninput pin. Bit 5 is always 1\n\nMAPID 6 bit 0 9 00 TC hardware MAP identifier\nRF available, polarity 0, 1 1 TC RF available indicator input\nTC active, polarity 0, 1 1 TC active indicator input (bit lock)\nTC sampling edge Rising, falling Rising TC clock input\nTC pseudo-de-randomization Enabled,\n\ndisabled\nDisabled TC pseudo-de-randomization\n\nTC NRZ-M demodulation Enabled,\ndisabled\n\nDisabled TC NRZ-M demodulation\n\nCLKDIV Integer 0 System clock division to get\nSpaceWire transmit frequency of\n10 Mbps\n\nSpaceWire node address\n(Destination logical address,\nDLA)\n\n8 bit 0 9 28/\n0 9 29\n\nSpaceWire node address\nNote: only the 7 most significant\nbits 7:1 are set by configuration.\nBit 0 is set by means of the id I\ninput pin\n\n102 S. Habinc\n\n\n\nChapter 5\nThe OBC Power-Boards\n\nRouven Witt and Manfred Hartling\n\n5.1 Introduction\n\nThe FLP PCDU supplies an unregulated power bus with voltage levels between\n19 V and 25 V as explained later in Chap. 8. The three data handling boards of the\nOBC, namely the Processor-Board, I/O-Board and CCSDS-Board, require a steady\nvoltage of approx. 3.3 V. Thus, the main task for the power conversion of the OBC\nPower Supply Board\u2014or OBC Power-Board for short\u2014is to establish a steady\nconversion of the unregulated FLP main power bus to the required 3.3 V, and\nwithin the range as specified for every board by their manufacturers.\n\nR. Witt (&) ? M. Hartling\nInstitute of Space Systems University of Stuttgart, Stuttgart, Germany\ne-mail: witt@irs.uni-stuttgart.de\n\nM. Hartling\ne-mail: hartling@irs.uni-stuttgart.de\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_5,\n? Springer-Verlag Berlin Heidelberg 2013\n\n103\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_8\n\n\nBesides provision of regulated power to the OBC data handling boards, the\nOBC Power-Boards fulfill a second task, which is the signal transmission and\nconversion for the FLP pulse signals. These are available for clock synchroniza-\ntion of OBC with GPS and star tracker system. The GPS, if powered, provides a\nPulse Per Second (PPS), signal which is transmitted to the OBC accompanied by a\ntime packet. The OBC can synchronize its own PPS signal to the GPS provided\none. Furthermore, the OBC Processor-Board is able to submit a PPS and a time\npacket to the star tracker system. Combining both the STR and GPS systems will\nbe working on a common clock strobe base as close as possible which significantly\nimproves packet communication stability between GPS and OBC and STR and\nOBC respectively.\n\nFinally, there are interfaces that need to be routed out of or into the OBC\nhousing. These are led via the OBC Power-Boards as well. All interfaces along\nwith all other boards are depicted in Fig. 5.1. From the main task, the power\nsupply lines for the data handling boards are displayed in red color. In purple, the\npulse signals are shown. The two blue shades depict the power lines for the OBC\nheaters, circuit 1 and circuit 2, or nominal (N) and redundant (R), respectively.\nThey are routed to a bi-metal thermostat switch and from there on to the corre-\nsponding heaters placed on the backside of every second frame. More details about\nheater placement can be taken from Figs. 5.11, 5.12 and 6.10. The green shades\nshow the Service Interface and the JTAG Interface lines to the OBC Processor-\nBoard. These are used to access the Processor-Boards after the assembly of the\ncomplete OBC, when the connector on the Processor-Board can no longer be\ndirectly accessed. The connectors in Fig. 5.1 are the same as in Fig. 1.2.\n\nIt can be identified here that the OBC Power-Boards don\u2019t provide cross-\ncoupling with the data handling boards. The data handling boards and their parts\nare significantly more complex than those of the Power-Boards. This implies the\ndata handling boards being more prone to hardware failure. This permitted\ndesisting from power line cross-coupling and simplified the electric design.\nThrough the Power-Board redundancy the overall OBC design is still single-\nfailure tolerant in accordance with the mission requirements.\n\nFig. 5.1 Connections of the OBC Power-Board. ? IRS, University of Stuttgart\n\n104 R. Witt and M. Hartling\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\n5.2 Power Conversion\n\nThe power conversion on the OBC Power-Board has to provide a steady 3.3 V\nvoltage output for all three data handling boards. Since the main power bus is\nunregulated, an exact steady supply voltage is not achievable. On the other hand,\nthe provision of a voltage exceeding the 3.3 V might cause damage to the sensitive\nparts on the data handling boards. Therefore, the manufacturers give a range of\nvoltage which is allowed in order for their board to work properly. These ranges\nare summarized in Table 5.1.\n\nAs second criterion for selection of converters, a minimum and a maximum\nload of the data handling boards have to be taken into consideration. These loads\nwere estimated by the manufacturers as well and provided before designing the\nOBC Power-Boards. They can also be taken from Table 5.1.\n\nAfter the converters had been selected, tests to prove compatibility between\nOBC Power-Boards and data handling boards were performed. The converters have\nbeen selected considering only the steady state loads provided by the manufac-\nturers. However, since there are non-ohmic resistances on the boards, board\nimpedance effects during power-up need to be taken into account. The current that\nis drawn at the power-up of a data handling board connected to the OBC Power-\nBoard differs from the steady state current. In case there is a longer phase when the\npower-up current is too low, the danger of an over-voltage from the converters to\nthe power consumers appears. Therefore, a characterization of the start-up behavior\nof the data handling boards (see Sect. 5.2.2) as well as of the OBC Power-Boards\n(Sect. 5.2.3) was performed before operating them in connection (Sect. 5.2.4).\n\n5.2.1 The DC/DC Converters\n\nFor the power conversion, DC/DC converters from Gaia Converter (hereafter\nsimply referred to as Gaia) have been selected. Gaia offers a series of single output\n\nTable 5.1 Requirements to the OBC Power-Boards derived from input characteristics of the data\nhandling boards\n\nDevice Permitted input voltage\nrange\n\nMaximum\npower\nconsumption\n\nBleeder resistors\n(power consumption\nat 3.3 V)\n\nProcessor-Board\n(Chap. 2)\n\n3.3 V \u00b1 5 % (3.135 \u2026 3.456 V) 2.5 \u2026 4.75 W 50 X (0.22 W)\n\nI/O-Board (Chap. 3) 3.3 V \u00b1 9 % (3.0 V \u2026 3.6 V) 0.53 \u2026 1.5 W 50 X (0.22 W)\n\nCCSDS-Board\n(Chap. 4)\n\n3.3 V \u00b1 9 % (3.0 V \u2026 3.6 V) 0.165 \u2026 1.0 W 33 X (0.33 W)\n\n5 The OBC Power-Boards 105\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\n\n\nconverters for a load of 4 W and 10 W which are specially designed for appli-\ncation in space, namely the SGDS04 and SGDS10 family. They can be ordered\nwith varying input and output voltages and have an operating temperature range of\n-40 ?C up to +85 ?C which is compliant with the operating temperature\nrequirements of the OBC. As taken from Gaia, the converters are characterized by\na heavy ions and ionizing dose of 20K rad, provide an undervoltage lockout and a\npermanent output current limitation. Furthermore, they comply to ESA standard\nPSS-01-301 [71].\n\nBy characterizing the input voltage to 9\u201336 VDC (? \u2018H\u2019) and the output\nvoltage to 3.3 V (? \u2018B\u2019) the selected converters for the three OBC boards are:\n\n\u2022 MGDS10-HB for the Processor-Board\n\u2022 MGDS04-HB for the I/O-Board\n\u2022 MGDS04-HB for the CCSDS-Board.\n\nPlease note that due to the estimated maximum load of the Processor-Board, the\nMGDS10 converter with 10 W maximum nominal load was selected for the OBC.\n\nOne disadvantage of these power converters however, is, that they require a\ncertain load being drawn to provide the desired output voltage. To demonstrate the\neffect, the output characteristics of an exemplary Gaia converter, namely the\nMGDS04JC with an input Voltage of 16\u201340 V and 5 V output voltage, is shown in\nFig. 5.2.1 It can be identified that for lower output currents the output voltage\nexceeds the nominal 5 V significantly. Only for a consumed current of 600 mA or\nmore, the dedicated output voltage of 5 V can be reached in the example of this\n\nFig. 5.2 Typical power\nconverter regulation\ncharacteristic\n\n1 The 5 V converter example is depicted here since the supplier does not provide an according\ndiagram for the selected converter models of the MGDS series.\n\n106 R. Witt and M. Hartling\n\n\n\nconverter. For the complete MGDS converter series this effect has to be consid-\nered. As for all OBC boards a certain input voltage range is prescribed with\nTable 5.1, it had to be guaranteed that these requirements are met by the OBC\nPower-Board output.\n\nAs result, additional tests had to be performed to exactly characterize the\npower-up behavior of each OBC data handling board on the one hand, and the\nexact behavior of the converter output on the other hand. The results of a load test\nof the ordered converters is provided in Table 5.2. The relevant voltage limits are\nmarked in bold.\n\nThe MGDS10-HB stays below the required 3.465 V at a drawn current of\n0.59 A which marks the power value of 3.465 V * 0.59 A = 2.04 W. It is spec-\nified in Table 5.1 that the Processor-Board exceeds a power consumption of\n2.5 W. So no further protective action had to be taken into account.\n\nAn analog examination for the I/O and CCSDS-Board power supply leads to the\nfollowing results:\n\nThe MGDS04-HB stays below the required 3.6 V at a drawn current of 0.075 A\ndue its significantly lower specified power level. This marks a power level of\n3.6 V * 0.075 A = 0.27 W which is below the specified minimum power con-\nsumption of the I/O-Board, yet greater than the one for the CCSDS-Board by\n0.105 W. Consequently, between the output of the converter and the CCSDS-\nBoard a bleeder resistor as constant power consumer had to be implemented. Its\nmaximum value results from the following (3.6 V)2 / 0.105 W = 123.428 X.\nTherewith a resistor with a value below 123.42 X had to be implemented.\n\nHowever, for reasons of security, in all three power lines of Processor, I/O and\nCCSDS-Board power supply a set of resistors is included to guarantee con-\nsumption of the minimum load. The resulting values for the bleeder resistors are\nalso provided in Table 5.1. As example the circuitry of the CCSDS power line is\ndepicted in Fig. 5.3, including the output line leading to the CCSDS-Board,\nbeginning at the MGDS04-HB DC/DC converter. For clarity reasons, all parts left/\nupstream of the converter are hidden.\n\nAs the Power-Board in this design meets the steady state requirements given by\nthe manufacturers of all three OBC data handling board types, an Engineering\nModel was built. Diverse tests combining this OBC Power-Board EM with the\nother OBC board types have been run as explained in the subsequent sections.\n\nTable 5.2 Load characterization of MGDS10-HB and MGDS04-HB\n\nMGDS10-HB MGDS04-HB\n\nVoltage level (V) at current (A) Voltage level (V) at current (A)\n\n3.6 0.104 3.6 0.075\n3.5 0.33 3.59 0.079\n3.465 0.59 3.497 0.157\n3.45 0.74 3.4 0.4\n3.4 1.32 3.38 0.5\n\n5 The OBC Power-Boards 107\n\n\n\n5.2.2 Start-Up Characterization of OBC Power Consumers\n\nThe previous section covered the proper Power-Board design concerning steady\noperation power consumption. Another important aspect is the behavior versus\nconsumer inrush current characteristics. Therefore, tests were performed to char-\nacterize supply voltage behavior of Power-Board on the lines of the different types\nof OBC data handling boards within the first couple of milliseconds after the\npower-up of the OBC Processor, I/O and CCSDS-Board.\n\nExpected was a voltage peak when applying the power due to the capacitances\non the OBC data handling boards and, either\n\n\u2022 after the peak, the steady state will be reached directly, or\n\u2022 after the peak the current decreases for a short period below the steady state\n\ncurrent and ramps up again.\n\nThe second case holds the danger that the converter delivers a higher output\nvoltage level during that current decrease period, which might be hazardous for the\nconnected OBC board.\n\nThe setup for this test is depicted in Fig. 5.4 as it was used to record the drawn\ncurrent by the data handling boards at start-up. A TTI Power Supply Unit (PSU)\nwas used as power source being configured for 3.3 V output. Between PSU and\n\nFig. 5.3 Bleeder resistors in\nCCSDS-Board power\nconversion line. ? IRS,\nUniversity of Stuttgart\n\nGND\n\nshunt\n\nDifferential\namplifier\n\nOscilloscope\n\n3.3 V \n\nCore /\nIO /\n\nCCSDS\n\nPower\nSupply\n\nFig. 5.4 Electrical set-up for\ntesting power-up of OBC\nboards. ? IRS, University of\nStuttgart\n\n108 R. Witt and M. Hartling\n\n\n\nOBC board there is a low resistive shunt where the current can be registered by\nmeans of an oscilloscope. A differential probe was used as input sensor for the\noscilloscope. The shunt resistors have been chosen as low resistive as possible so\nthat not too much of voltage is lost over the resistor, yet so high that the probe can\nstill detect the voltage properly. The resulting shunt resistor values are provided in\nTable 5.3. Since the OBC I/O-Board behaves very similar to the CCSDS-Board at\npower-up due to the delayed activation of the transmission interfaces on both\nboards, the same shunt and estimated power consumption was used for test of both\nboards. Due to the higher power consumption of the OBC Processor-Board, a\nsmaller resistor was used to minimize the shunt voltage drop.\n\nConducting the test resulted in the following diagrams. In Fig. 5.5 the start-up\nof the CCSDS-Board is depicted. The appearing peaks are marked.\n\nTable 5.3 Determination of shunt resistors\n\nBoard Resistor\nvalue (X)\n\nSteady State Power\nconsumption (W)\n(estimated)\n\nResulting\nCurrent\nI = P/U\n(A)\n\nVoltage loss over\nresistor (V)\n\nI/O/CCSDS 0.39 1 0.3 0.117\nProcessor-Board\n(compare)\n\n0.1\n(0.39)\n\n3.5\n(3.5)\n\n1.1\n(1.1)\n\n0.11\n(0.43)\n\nFig. 5.5 Current at power-up\u2014CCSDS-Board. ? IRS, University of Stuttgart\n\n5 The OBC Power-Boards 109\n\n\n\nIn Fig. 5.6 the power-up is shown for the I/O-Board without activating its\ntransmission interfaces. The diagrams don\u2019t differ significantly, both show several\npeaks and a slow re-drop of the inrush current down to the steady state value which\nimplies that there is no danger of over-voltage at start-up.\n\nIn Fig. 5.7 the start-up behavior of the OBC Processor-Board is depicted. It can\nbe identified that in this case, there is a possibly hazardous phase after the main\npeak when the inrush current drops significantly below the steady state current. A\n\nFig. 5.6 Current at power-up\u2014I/O-Board. ? IRS, University of Stuttgart\n\nFig. 5.7 Current at power-up\u2014Processor-Board. ? IRS, University of Stuttgart\n\n110 R. Witt and M. Hartling\n\n\n\ndedicated examination of the converter itself had to be performed in order to judge\nwhether changes to the electrical PCB design of the Power Supply Board would be\nnecessary or not. This verification is covered in Sect. 5.2.3.\n\n5.2.3 Start-Up Behavior of the Power Supply Board\n\nAfter the inrush behavior of the OBC Processor, I/O and CCSDS-Board had been\ncharacterized in the previous tests and since the Processor-Board was identified to\nbe problematic due to its power-up current behavior, dedicated tests of the OBC\ndata handling boards in combination with the Power-Board became necessary to\nassure overall design adequacy.\n\nThe following tests were conducted to verify the overall power supply charac-\nteristics of the Gaia converters on the Power-Boards with connected load. The\nelectrical set-up for this test can be taken from Fig. 5.8. Significant difference to the\nprevious test is the utilization of a Line Impedance Stabilization Network (LISN).\n\nDue to the 3.3 V low voltage range applied, during the previous board inrush\nbehavior tests such a device wasn\u2019t necessary. In current test the LISN is used to\nprovide representative 22 V as supplied by the satellite PCDU instantaneously at\npower line activation. Using only a PSU otherwise might have caused a non-\nrealistic, delayed build-up of the voltage. Basically, the LISN is a capacitor in\nparallel to the power line which provides the 22 V level at switch on.\n\nThe resistors R1, R2 and R3 were selected according to the actual steady state\ncurrents taken from the previous test diagrams, marked in magenta. The values of\nthe resistors are 22, 44.6 and 50 X for Processor, I/O and CCSDS-Board. Since\nthis test is only essential for the OBC Processor-Board line, only the result of that\ntest is discussed in particular. In Fig. 5.9 the behavior of the MGDS10-HB con-\nverter is shown, with a load of the mentioned 22 X as consumer. It can be seen that\ndespite the low power consumed temporarily at the beginning, the voltage con-\ntinuously increases to the nominal 3.3 V (please refer to Fig. 5.7). Furthermore,\ndespite the usual variations that appear within such processes, the voltage never\nexceeds the 3.465 V limit specified by the supplier in Table 5.2.\n\nPower\nBoard J1\n\nPower\nSupply J4\n\n22V Ret\n22V\n\nR1/2/3\n\n3.3V_OBC /\n3.3V_IO /\n\n3.3V_CCSDS\n\nOscilloscope\n\nLISN\n\nGND\n\nFig. 5.8 Test setup for characterization of Power-Board start-up behavior. ? IRS, University of\nStuttgart\n\n5 The OBC Power-Boards 111\n\n\n\nAfter completion of these behavioral measurements for OBC Power-Board and\nthe OBC data handling boards, the verification of their design compatibility was\ncompleted and the boards were connected for the first time in the CDPI devel-\nopment program.\n\n5.2.4 Connection of Power Supply Board and OBC Power\nConsumers\n\nThe test-set-up for the connection of Power-Board and the connected OBC data\nhandling boards can be taken from Fig. 5.10. The oscilloscope was kept included\nduring the test to observe the behavior of the DC/DC output lines and to allow fast\ncancellation of the test in case any unexpected over-voltage would be observed.\nThe boards proved to work together perfectly and the EMs are meanwhile being\noperated permanently in the STB in the configuration depicted in Fig. 5.10. The\nFM boards are integrated into the OBC flight model.\n\nFig. 5.9 Behavior of Power-Board at start-up\u2014Processor-Board line. ? IRS, University of\nStuttgart\n\nPower\nBoard\n\nJ1/\nJ2\n\nPower\nSupply J3\n\n22V Ret\n22V\n\nOscilloscope\n\nLISN Core /\nIO /\n\nCCSDS\n\n3.3V\n\nGNDGND\n\nFig. 5.10 Setup for final board connection test. ? IRS, University of Stuttgart\n\n112 R. Witt and M. Hartling\n\n\n\n5.3 Clock Strobe Signals\n\nAs already explained, the OBC Processor-Boards provide the functionality to\nreceive a PPS strobe signal from an external clock reference like a GPS or Galileo\nreceiver. The Processor-Boards also allow synchronization of OBC to this external\nPPS clock strobe on request as far as supported by OBSW and RTOS.\n\nFurthermore, the OBC provides a PPS strobe generated by its Processor-Board.\nThis PPS has to be available on an OBC external connector for syncing onboard\nequipment to the OBC. In the FLP target spacecraft mission this functionality is\nrequired for the star trackers.\n\nSince both PPS interfaces are located on OBC internal connectors of the Pro-\ncessor-Boards (please refer to Figs. 1.2 and 2.1), the signals require routing from/\nto external OBC connectors. The PPS signals on the OBC external connectors, as\ngenerated by the GPS or required by the star trackers, are transmitted as differ-\nential signals. Whereas inside the OBC on Processor-Board level they are handled\nas single-ended 5 V PPS lines. Therefore, besides the pure line routing from\ninternal to external connector a conversion of signal type was needed. Since the\nOBC Power-Board design and development was in the hands of the IRS, it was\ndecided to implement this signal routing and conversion feature onto the OBC\nPower-Boards.\n\nA further particularity of the FLP mission is that there are three redundant GPS\nreceivers for experimental reasons. All three are able to provide a pulse signal to\nthe OBC. During nominal operation, only one GPS receiver will be active and\nconsequently only one signal will be provided. In case one receiver becomes\ndefective the pulse signal needs to be taken from a redundant receiver. But there is\nonly one input available on OBC Processor-Board side. This means that all three\nGPS PPS input signals into the Power-Boards need to be logically merged to one\nsingle PPS going to the Processor-Board. This can be achieved easily by differ-\nential driver ICs featuring high impedance when deactivated, as long as there is\nonly one single receiver in use.\n\nHowever, during one particular FLP target mission experiment all three GPS\nreceivers are foreseen to be working in parallel. To avoid the PPS signals from all\nthree receivers interfering in an uncontrolled manner, a priority circuitry has been\ninstalled on the Power-Boards that permits only one of the three pulse signals to be\nrouted to the Processor-Board. If the nominal pulse signal is available, the other two\nsignals are blocked. A signal type conversion from differential to single-ended is\nperformed at Power-Board interface level by means of a standard RS422 driver IC.\n\nPlease note that only the PPS signals are routed via the Power-Board. Packet\ncommunication between GPS/Galileo receiver and OBC is handled via the\nI/O-Boards.\n\nFor the conversion of the pulse signal from Processor-Board to star tracker, a\nstraight forward conversion from single-ended to differential is performed using a\nstandard RS422 driver chip. The signal can be sent from both Processor-Boards of\nwhich only one will be working at any time.\n\n5 The OBC Power-Boards 113\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\n\n\nPlease note that packet communication between star tracker and OBC is han-\ndled via I/O-Boards as well.\n\nThe power for the driver and gate chips is taken from the Processor-Board\npower line since the conversion is only required as long as the according Pro-\ncessor-Board is active. A dedicated converter provides the voltage for the corre-\nsponding chips.\n\n5.4 Heaters and Thermal Sensors\n\nInside the OBC housing there are two heater circuits that can be activated if the\ntemperature drops below the minimum operational limit. Please also refer to the\nfigures and explanations in Sect. 7.3. The two circuits are redundant and each\ncomprises four heaters that are mounted on the backside of every second frame as\ndepicted in Figs. 5.11, 7.15 and 7.16. For the detection of the internal temperature\none bi-metal thermostat switch is included in each circuit. In case when the\ntemperature drops below the minimum operational limit of -40 ?C, the switches\nwill close and the heaters are activated\u2014provided that the PCDU power lines are\n\nTemp. - Sensor\nBimetal switch\n\nEmergency Heater \nOBC - nominal\n\nEmergency Heater \nOBC - redundant\n\nPCB\n\npwr ccsds cpu io pwr ccsds cpu io\n\nFig. 5.11 OBC internal heater positioning. ? IRS, University of Stuttgart\n\n114 R. Witt and M. Hartling\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_7\n\n\nswitched ON. Dedicated temperature sensors are glued onto the OBC housing and\nconnected to the PCDU to feed back actual housing temperature data to the\nthermal control loop. No dedicated wiring is necessary for these inside the housing\non the OBC power board.\n\nThe schematic of the heater and temperature sensor wiring is provided in\nFig. 5.12. On the PCDU there are two fuses and switches which are used for both\nthe OBC and the TTC system. One switch will activate the nominal heaters, the\nother activates the redundant side. From the heater power output of the PCDU the\nwire is routed to the bi-metal thermostat. After that the wire is split and leads to the\nfour heaters. The return lines are brought together on a star point on the power\nboard from which the rail leads back to the return pin of the PCDU. The same\nprinciple is applied for both nominal and redundant heater circuit.\n\n5.5 OBC Service Interface and JTAG Interface\n\nAs already cited and depicted in Fig. 5.1, the OBC Power-Boards also provide the\nrouting of the OBC Processor-Boards\u2019 serial Service Interface (SIF), and the JTAG\ndebug interface. The reason for routing these signals from OBC internal connec-\ntors of the Processor-Boards to the OBC housing\u2019s external connectors is the same\nas for the PPS signals discussed earlier. After OBC unit assembly completion and\nclosed housing the Processor-Board interfaces are no longer directly accessible.\nSIF and JTAG Interface are essential for upload of software versions after OBC\nintegration into the satellite and for OBSW debugging. For the FLP target satellite\nboth interfaces will be routed to the spacecraft\u2019s external skin connector.\n\nFig. 5.12 OBC heater\ncircuits wiring. ? IRS,\nUniversity of Stuttgart\n\n5 The OBC Power-Boards 115\n\n\n\n5.6 Connector Configuration\n\nAll connectors on the Power Board are Sub-D High Density connectors and have\neither 15 or 26 Pins. Power lines and data lines are routed over different con-\nnectors. Connectors with the same size on the same side of the board are of\ndifferent gender. All connectors are soldered with flying wires onto the board.\nFixed connectors might break at the soldering points under vibrational load.\nFig. 5.13 provides a schematic of the Power-Board. Also the different connectors\ncan be identified. The naming of the connectors is board specific. This differs from\nthe naming convention of the overall OBC unit as depicted in annex Sect. 11.6. A\nshort description on the connectors is provided below. The relevant pinouts of the\nOBC unit\u2019s external connectors of the power board (J2, J3 and J4)\u2014or according\nto annex Sect. 11.6\u2014(J1/J7, J2/J8, J3/J9) are included in annex Sect. 11.9.\n\nFrom connector J0 (Sub-D HD 26 male) the power supply lines lead to one\nOBC Processor-Board, one I/O-Board and one CCSDS-Board. The other Power-\nBoard supplies the redundant set. The power supply lines for the heaters are also\nprovided via this connector. And finally the forwarding of the pulse signals is\nestablished via this connector as LVTTL signals.\n\nJ1 is the data connector leading data lines for JTAG and SIF into the OBC\nhousing. There is no necessity to lead these lines over the Power Board\u2019s elec-\ntronics so they will be wired directly from connector J1 via PCB to connector J2\u2014\nsee below. The connector is a female Sub-D HD 15 connector.\n\nIn Table 11.45 the pins for the data connector J2 on the long side of the board\nare provided. This connector is the correspondent to data connector J1 on the short\nboard side and, thus, will also be of type Sub-D HD 15 (female). The cable\n\nFig. 5.13 OBC Power-Board connector configuration. ? IRS, University of Stuttgart\n\n116 R. Witt and M. Hartling\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\nmounted to this connectors will connect to the skin connector of the FLP target\nsatellite which will be mounted on the satellite\u2019s primary structure. Both data\nconnectors J2 of the Power-Boards are routed to one connector on the spacecraft\nskin connector of the FLP target satellite.\n\nIn Table 11.46 the pins for the Power Connector J3 on the long side of the board\nare listed. This connector is also of type Sub-D HD 15 (male). It receives the\npower lines for the individual OBC boards connected internally and for the\npowered heaters. All lines to this connector source from the PCDU.\n\nIn comparison to classical OBC designs here the \u2018\u2018OBC\u2019\u2019 receives a separate\npower line for each individual board since the reconfiguration unit\u2014the Common-\nController in the PCDU\u2014by this means is able to power each board individually\nfor nominal operation and to perform shutdowns, power-cycling and redundancy\nactivations in FDIR cases. In a classical OBC, this type of reconfiguration lines are\nimplemented inside the OBC housing. Here, they become visible due to the fact of\nthis CDPI prototype being physically realized as two boxes.\n\nIn Table 11.47 the pins of the PPS connector J4 are listed. The OBC receives\nPPS signal lines from the GPS receivers and it provides PPS line as output e.g. for\nthe star trackers in the FLP target satellite. The technical details of these PPS lines\nwere already covered in Sect. 5.3.\n\n5 The OBC Power-Boards 117\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\nChapter 6\nThe OBC Internal Harness\n\nArtur Eberle, Michael Wiest and Rouven Witt\n\n6.1 Introduction\n\nAs explained in Chap. 1 the OBC components have all been designed from scratch\nand were developed largely in parallel. A significant number of interface details\nhave not been available at project start which led to the decision of building the\nOBC as protoflight model based on an inter-board harness instead of a backplane.\n\nA. Eberle (&) ? M. Wiest\nHEMA Kabeltechnik GmbH & Co. KG, Salem, Germany\ne-mail: artur.eberle@hema-kabeltechnik.de\n\nM. Wiest\ne-mail: michael.wiest@hema-kabeltechnik.de\n\nR. Witt\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: witt@irs.uni-stuttgart.de\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_6,\n? Springer-Verlag Berlin Heidelberg 2013\n\n119\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\nFigure 6.1 provides an overview on the main OBC internal lines for the SpaceWire\nboard to board connections, the power supply lines and the heater supply lines.\n\nPlease also refer to Fig. 5.1 which only depicts the Power-Board relevant\ninterfaces but in addition details the \u2018\u2018Data Connections\u2019\u2019 cited in Fig. 6.1 into\npulse lines, Service Interface and JTAG Interface lines. Figure 6.2 in addition then\nshows the individual power and data connection routing through the Power Boards\nfor one of the redundant branches from Fig. 5.1. Thus it can be identified that the\nOBC internal harness can be split into two elements,\n\n\u2022 the SpaceWire subharness and\n\u2022 the Power Board subharness including\n\n\u2013 power lines,\n\u2013 heater lines,\n\u2013 pulse lines,\n\u2013 Serve Interface lines, and\n\u2013 JTAG debug interface lines.\n\nThe overall OBC internal harness was implemented by HEMA Kabeltechnik\nGmbH & Co. KG, a professional harness supplier for both space checkout\nequipment on ground and for space harness applications. The harness was\nassembled at HEMA under clean room conditions by applying a geometric con-\nnector mockup of the assembled OBC frame stck (Fig. 6.3).\n\n6.1.1 Requirements\nThe electric cabling input for the harness was handed over to HEMA in electronic\nform by the IRS. Further requirements where the types of to be used connectors,\ncleanliness during production and geometric constraints:\n\n\u2022 Connectors: Sub-D connectors and Micro-D connectors\n\u2022 Available Space for harness routing (Go/No-Go Areas)\n\u2022 Cleanliness for Space application: clean room of class 100 000/ISO 8\n\u2022 Final integration for customer at IRS.\n\n6.1.2 Challenges\nThe following challenges had to be considered during harness design and\nmanufacturing:\n\n\u2022 Cable routing was difficult in the small OBC front compartment area with a\ndimension of approximately 250 9 100 9 35 mm.\n\n\u2022 Small harness bending radii resulted from dimension limits.\n\u2022 Insufficient available space was available for cable splicing.\n\u2022 Insufficient space was available for standard SpaceWire cabling. In fact not\n\nenough space for the minimum bending radii of standard SpaceWire cables and\nno space for connector backshell mounting.\n\n120 A. Eberle et al.\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\n\n\nF\nig\n\n.\n6.\n\n1\nIn\n\nte\nr-\n\nbo\nar\n\nd\nca\n\nbl\nin\n\ng\nsc\n\nhe\nm\n\nat\nic\n\n.\n?\n\nIR\nS\n\n,\nU\n\nni\nve\n\nrs\nit\n\ny\nof\n\nS\ntu\n\ntt\nga\n\nrt\n\n6 The OBC Internal Harness 121\n\n\n\n\u2022 The stability of the harness routing had to be guaranteed also under vibration loads.\n\u2022 Mounting areas had to be foreseen for fixing of the harness bundles to tie-bases\n\nglued to the OBC cassette frames. The latter part of the integration into OBC\nframe assembly was foreseen to be performed by IRS.\n\n\u2022 The harness was required to be disconnectable which requires that the access for\nall connector screws and mounting screws had to be guaranteed by design.\n\nPWR 0 P0\n\n1\n\n10\n\n19\n\n2\n\n11\n\n20\n\n3\n\n12\n\n4\n\n13\n\n21\n\n22\n\n5\n\n14\n\n23\n\n6\n\n15\n\n24\n\n7\n\n16\n\n25\n\n8\n\n17\n\n9\n\n26\n\n18\n\nPWR 0 P1\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\n\n13\n\n14\n\n15\n\nCore N P4\n\n13\n\n14\n\n15\n\n16\n\n17\n\n18\n\n19\n\n20\n\n21\n\n22\n\n23\n\n24\n\n25\n\n26\n\n27\n\n28\n\n29\n\n30\n\n31\n\n32\n\n33\n\n34\n\n35\n\n36\n\n37\n\n38\n\n39\n\n40\n\n41\n\n42\n\n43\n\n44\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\n11\n\n12\nIO 0 P1\n\n2\n\n11\n\n12\n\n8\n\n13\n\n1\n\n6\n\n7\n\n3\n\n4\n\n9\n\n5\n\n10\n\n14\n\n15\n\nCCSDS 0 P1\n\n2\n\n11\n\n12\n\n8\n\n13\n\n1\n\n6\n\n7\n\n3\n\n4\n\n9\n\n5\n\n10\n\n14\n\n15\n\nBi-Metal\nSwitch\n\nIO R P1\n\nCCSDS 1 P1  \n\n5\n\n10\n\n5\n\n10\n\nCore N P5\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\nNot Connected\nDSU Signals\n\nDebug Output\n3.3V Power\n24V Power\n\nGround\nPPS Pulse Signal\n\nPWR 0 3.3V_Core_N\n\nPWR 0 3.3V_Core_N\n\nPWR 0 3.3V_Core_N\n\nPWR 0 3.3V_Core_N\n\nPWR 0 Ret_Core_N\n\nPWR 0 Ret_Core_N\nPWR 0 Ret_Core_N\n\nPWR 0 Ret_Core_N\n\nPWR 0 3.3V_IO_N\n\nPWR 0 3.3V_IO_N\n\nPWR 0 Ret_IO_N\n\nPWR 0 Ret_IO_N\n\nPWR 0 3.3V_CC_N\n\nPWR 0 3.3V_CC_N\n\nPWR 0 Ret_CC_N\n\nPWR 0 Ret_CC_N\n\nPWR 0 24V_Heater_N\n\nPWR 0 Ret_Heater_N\n\nPWR 0 Ret_Heater_N\n\nPWR 0 Ret_Heater_N\n\nPWR 0 Ret_Heater_N\n\nPWR 0 PPS_Clock_STR\n\nPWR 0 PPS_Clock_GPS\n\nPWR 0 3.3V_Ext_Power\n\nPWR 0 DSUTMS\n\nPWR 0 DSUTCK\n\nPWR 0 DSUTDI\n\nPWR 0 DSUTDO\n\nPWR 0 DSUEMDC\n\nPWR 0 DSUACT\nPWR 0 DSUBRK\n\nPWR 0 DSUEN\n\nPWR 0 DSURSTN\n\nPWR 0 RS422_Data+\n\nPWR 0 RS422_Data-\n\nPWR 1 24V_Heater_R\n\nPWR 1 Ret_Heater_R\n\nPWR 1 Ret_Heater_R\n\nPWR 1 24V_Heater_R\n\nPWR 0 GND\n\nPWR 0\nExt_Ret\n\nFig. 6.2 Debug-, pulse signal and thermostat line routing. ? IRS, University of Stuttgart\n\n122 A. Eberle et al.\n\n\n\nThese constraints resulted in the need of a mockup for manufacturing to assure\nthe exact positioning of the connectors and achieving proper harness bundle\nrouting and line lengths.\n\n6.1.3 Realization\n\nManufacturing was performed at HEMA Kabeltechnik as certificated manufac-\nturer according to the following standards:\n\n\u2022 ECSS-Q-ST-70-08C\nManual soldering of high-reliability electrical connections [45]\n\n\u2022 ECSS-Q-ST-70-26C\nCrimping of high-reliability electrical connections [46].\n\nCable design requirements for SpaceWire were followed according to ECSS-E-\n50-12C (see [12]).\n\n6.2 Harness Design\n\nThis section describes the engineering process for a space application harness.\n\n6.2.1 Harness Engineering\n\nEach harness line starts with a connector and is plugged to its corresponding target\nconnector on the according OBC board. Table 6.1 illustrates the OBC boards with\ntheir connectors.\n\nFig. 6.3 OBC internal harness in manufacturing mockup. ? HEMA/IRS\n\n6 The OBC Internal Harness 123\n\n\n\nThe detailed pin allocation list is included in the product documentation from\nHEMA [72]. The harness bundle definitions were the next step after freeze of the\npin allocation. Usually the signal lines of one interface (UART, RS488, HPC,\nStatus, etc.) are twisted to one cable. The cables are then combined to a bundle\n(Fig. 6.4).\n\nThe routing of the harness shall not disturb both the transmitted signal itself\n(reflections/damping) nor other signals (EMC). For this reason usually the power\nharness and signal harness are routed separately. HEMA decided to separate the\nSpaceWire harness and the power/signal harness. As illustrated in Fig. 6.5 the\norange lines represent the power and the green ones SpaceWire bundle.\n\nTable 6.1 Connector list\n\nOBC board Connector\nname\n\nConnector\ntype\n\nCorresponding\nconnector type\n\nConnector\nname\n\nNominal PWR 0 PWR 0 J0 DAMA-26P DAMA-26S PWR 0 P0\nPWR 0 J1 DEMA-15S DEMA-15P PWR 0 P1\n\nCCSDS 0 CCSDS 0 J0 MDM-9S MDM-9P CCSDS 0 P0\nCCSDS 0 J1 DEMA-15P DEMA-15S CCSDS 0 P1\nCCSDS 0 J2 MDM-9S MDM-9P CCSDS 0 P2\n\nProcessor board core N Core N J0 MDM-9S MDM-9P Core N P0\nCore N J1 MDM-9S MDM-9P Core N P1\nCore N J2 MDM-9S MDM-9P Core N P2\nCore N J3 MDM-9S MDM-9P Core N P3\nCore N J4 DBMA-44P DBMA-44P Core N P4\nCore N J5 MDM-9S MDM-9P Core N P5\n\nI/O N I/O N J0 MDM-9S MDM-9P I/O N P0\nI/O N J1 DEMA-15P DEMA-15P I/O N P1\nI/O N J2 MDM-9S MDM-9P I/O N P2\n\nRedundant PWR 1 PWR 1 J0 DAMA-26P DAMA-26S PWR 1 P0\nPWR 1 J1 DEMA-15S DEMA-15P PWR 1 P1\n\nCCSDS 1 CCSDS 1 J0 MDM-9S MDM 9P CCSDS 1 P0\nCCSDS 1 J1 DEMA-15P DEMA-15S CCSDS 1 P1\nCCSDS 1 J2 MDM-9S MDM-9P CCSDS 1 P2\n\nProcessor board Core R Core R J0 MDM-9S MDM-9P Core R P0\nCore R J1 MDM-9S MDM-9P Core R P1\nCore R J2 MDM-9S MDM-9P Core R P2\nCore R J3 MDM-9S MDM-9P Core R P3\nCore R J4 DBMA-44P DBMA-44P Core R P4\nCore R J5 MDM-9S MDM-9P Core R P5\n\nI/O R I/O R J0 MDM-9S MDM-9P I/O R P0\nI/O R J1 DEMA-15P DEMA-15P I/O R P1\nI/O R J2 MDM-9S MDM-9P I/O R P2\n\nLegend: Core = OBC Processor-Board, I/O = OBC I/O-Board, CCSDS = OBC CCSDS-Board\n\n124 A. Eberle et al.\n\n\n\n6.2.2 SpaceWire Harness\n\nSpaceWire is a high speed field bus interface standard for space equipment inter-\ncommunication, standardized by a consortium from multiple space agencies. The\nspecification can be found in literature (see for example [11, 12]). The SpaceWire\ninterfaces in the OBC accordingly consist of point-to-point, bidirectional data links.\n\nDAMA-26S\n\nPWR 0 P0\n\nDEMA-15P\n\nPWR 0 P1\n\nDEMA-15S\n\nCCSDS 0 P1\n\nDEMA-15P\n\nIO N P1\n\nDAMA-26S\n\nPWR 0 P0\n\nDEMA-15P\n\nPWR 0 P1\n\nDEMA-15S\n\nCCSDS 1 P1\n\nBi-Metall \nSwitch 0\n\n9xSL22\n\n3xSL-22\n\n4xTP22\n1xSL-22\n\n2xTP22\n1xSL-22\n\n2xTP-22\n1xSL-22\n\n1xSL-22 Bi-Metall \nSwitch 1\n\nDEMA-15P\n\nIO R P11xSL-22\n\n1xSL-22\n\n1xSL22 Micro-D 9P\nCore N P5 3xSL-22\n\n9xSL-22\n\n4xTP-22\n\n2xTP-22\n1xSL-22\n\n2xTP-22\n1xSL-22\n\n1xSL-22\n\n1xSL-22\n\n1xSL-22\n\n1xSL22\n\n1xSL22\n\n1xSL22\n\n1xSL-22\n\nDBMA-44P\n\nCore R P4\n\nMicro-D 9P\n\nCore R P5\n\nDBMA-44P\n\nCore N P4\n\nFig. 6.4 Harness power bundle. ? HEMA/IRS\n\nD\nA\n\nM\nA\n\n-2\n6S\n\nP\nW\n\nR\n 0\n\n P\n0\n\nD\nE\n\nM\nA\n\n-1\n5P\n\nP\nW\n\nR\n 0\n\n P\n1\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\nC\n\nS\nD\n\nS\n 0\n\n P\n0\n\nD\nE\n\nM\nA\n\n-1\n5S\n\nC\nC\n\nS\nD\n\nS\n 0\n\n P\n1\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\nC\n\nS\nD\n\nS\n 0\n\n P\n2\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n N\n\n P\n0\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n N\n\n P\n1M\n\nic\nro\n\n-D\n 9\n\nP\n\nC\no\n\nre\n N\n\n P\n2\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n N\n\n P\n3\n\nD\nB\n\nM\nA\n\n-4\n4P\n\nC\no\n\nre\n N\n\n P\n4\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n N\n\n P\n5 M\n\nic\nro\n\n-D\n 9\n\nP\n\nIO\n N\n\n P\n2\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nIO\n N\n\n P\n0\n\nD\nE\n\nM\nA\n\n-1\n5P\n\nIO\n N\n\n P\n1\n\nD\nA\n\nM\nA\n\n-2\n6S\n\nP\nW\n\nR\n 1\n\n P\n1\n\nD\nE\n\nM\nA\n\n-1\n5P\n\nP\nW\n\nR\n 1\n\n P\n1\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\nC\n\nS\nD\n\nS\n 1\n\n P\n0\n\nD\nE\n\nM\nA\n\n-1\n5S\n\nC\nC\n\nS\nD\n\nS\n 1\n\n P\n1\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\nC\n\nS\nD\n\nS\n 1\n\n P\n2\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n R\n\n P\n0\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n R\n\n P\n1M\n\nic\nro\n\n-D\n 9\n\nP\n\nC\no\n\nre\n R\n\n P\n2\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n R\n\n P\n3\n\nD\nB\n\nM\nA\n\n-4\n4P\n\nC\no\n\nre\n R\n\n P\n4\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nC\no\n\nre\n r\n\n P\n5 M\n\nic\nro\n\n-D\n 9\n\nP\n\nIO\n R\n\n P\n2\n\nM\nic\n\nro\n-D\n\n 9\nP\n\nIO\n R\n\n P\n0\n\nD\nE\n\nM\nA\n\n-1\n5P\n\nIO\n R\n\n P\n1\n\nB\ni-\n\nM\net\n\nal\nl \n\nS\nw\n\nit\nch\n\nB\ni-\n\nM\net\n\nal\nl \n\nS\nw\n\nit\nch\n\nPWR 0 CCSDS 0 CORE N IO N PWR 1 CCSDS 1 CORE R IO R\n\nFig. 6.5 OBC harness schematic routing. ? HEMA/IRS\n\n6 The OBC Internal Harness 125\n\n\n\nTwo differential signal pairs in each direction make a total of eight signal wires with\nan additional screen wire (Fig. 6.6).\n\nThe SpaceWire connector is required to provide eight signal contacts plus a\nscreen termination contact. A nine pin micro-miniature D-type is specified as\nstandard connector for SpaceWire. All OBC internal SpaceWire connections are\nusing the same connector type and pin allocation in accordance to [15].\n\nThe OBC inter-board SpaceWire harness consist of eight SpaceWire bundles.\nCable type follows AWG 26, non-impedance controlled harness. One side is\nimplemented as solder connector to reduce reflection points (such as a splice).\nFigure 6.7 provides some impressions from the stepwise harness implementation.\n\nFig. 6.6 Micro-D\nSpaceWire connector. ?\nHEMA Kabeltechnik GmbH\n& Co. KG\n\nFig. 6.7 SpaceWire Harness stepwise implementation. ? HEMA Kabeltechnik GmbH & Co. KG\n\n126 A. Eberle et al.\n\n\n\nThe completed OBC internal SpaceWire harness is depicted in Fig. 6.8.\n\n6.2.3 OBC Power Harness\n\nThe OBC internal power harness includes the line routing for power supply lines\nfrom the OBC Power-Boards to the consumers, the routing of the OBC internal\nheater lines from Power-Board via thermostats to the boards equipped with heaters\nand finally the routing of pulse lines and debug lines. Figure 6.9 provides an\nimpression of the power harness.\n\nFig. 6.8 Complete OBC internal SpaceWire harness. ? HEMA/IRS\n\nFig. 6.9 OBC internal power harness. ? HEMA/IRS\n\n6 The OBC Internal Harness 127\n\n\n\nAs already explained the OBC is equipped with internal heater lines controlled\nby thermostats. These are included in the power harness and are positioned on the\naccording OBC frames (Fig. 6.10).\n\nThe thermostats are pre-integrated into the power harness already by HEMA.\nThe allocation of the thermostats in the OBC are:\n\n\u2022 Position 1: Thermostat 1 (5702BJ3628639 0642 007)\n\u2022 Position 2: Thermostat 2 (5702BJ3628639 0642 011).\n\n6.3 Verification\n\nThe OBC Harness was tested against potential failures and to verify proper\nmanufacturing quality and correct interconnections. The following tests were\nperformed:\n\nFig. 6.10 Thermostat positions. ? IRS, University of Stuttgart\n\n128 A. Eberle et al.\n\n\n\n\u2022 Contact Retention Test (only for crimped contacts)\n\u2022 Resistance/Continuity Test\n\u2022 Insulation Test.\n\nThese tests were intended to detect failures such as:\n\n\u2022 Contacts not inserted\n\u2022 Interconnection status between source and target\n\u2022 Interconnection of shield groups\n\u2022 Short circuits\n\u2022 Insulation defects.\n\nFigure 6.11 shows the principle harness test configuration:\n\nTest Conditions\nThe tests were performed with the same clean room conditions and following the\nsame handling procedures as during harness manufacturing. The tests had to avoid\noverstressing the harness. To limit the mate/de-mate rate of the connector the use\nof test adapters was mandatory. The test conductor was not allowed to be the same\nperson as the harness assembler.\n\nRetention Test\nThe contacts of the connectors was tested with the contact retention tool, to verify\nfull contact insertion and correct retention forces. This test only was applied to\ncontacts being crimped to the wire (Fig. 6.12).\n\nOBC Harness\n\nS\nU\n\nP Test \nEquipment\n\nTest Harness\n\nR\nT\n\nN\n\nFig. 6.11 Harness test setup. ? HEMA Kabeltechnik GmbH & Co. KG\n\nNylon Hand Protector\n\nPin End Socket End\n\nColor coded area\n\nFig. 6.12 Retention test. ? HEMA Kabeltechnik GmbH & Co. KG\n\n6 The OBC Internal Harness 129\n\n\n\nResistance Test (Milliohm-Test)\nA resistance test was performed to verify the contact quality between harness parts\n(contacts, overall-shield) which should have a perfect connection. Technically this\nis not directly possible so the quality of the connection must be verified by two\nmeans: The first test is a bonding test and the second is a continuity test (Fig. 6.13).\n\nThe bonding value that was used reflects only the transitions, which are elec-\ntrically relevant to the system. An acceptable value stays far below 1 X. In the\nmost applications the value must be far below 20 mX, which also was the refer-\nence limit for this harness.\n\nIn the continuity test the harness was checked for the correct point to point pin\nallocation and the resistance value for each line was recorded. This allowed for\ncomparison of values between multiple cables in the harness, and an analysis\nbased on length and diameter. Cables with the same length and diameter should\nhave also the same resistance value.\n\nInsulation Test\nThis test was performed to verify the proper electrical isolation between two parts\nsuch as contacts to each other or to housing. The applied test conditions were\n500VDC, Test Current: 1A (Fig. 6.14).\n\nMilliohmmeter\n\nHarness\n\n025.8m?\n\nMilliohmmeter\n\nHarness\n\n003.7m?     \n\ncontact to contact resistance test (continuity) contact to shield resistance test (bonding)(a) (b)\n\nFig. 6.13 Resistance test. ? HEMA Kabeltechnik GmbH & Co. KG\n\nInsulation Test Equipment\n\nHarness\n\nR\nT\n\nN\n\n>500M?\n\nS\nU\n\nP\n\nInsulation Test Equipment\n\nHarness\n\nR\nT\n\nN >500M?\n\nS\nU\n\nP\n\ncontact to contact insulation test contact to shield insulation test(a) (b)\n\nFig. 6.14 Insulation test. ? HEMA Kabeltechnik GmbH & Co. KG\n\n130 A. Eberle et al.\n\n\n\n6.4 Quality and Manufacturing Documentation\n\nThe documentation of harness in space application was combined in a so-called\nManufacturing Data Package (MDP), defined by the customer. For the FLP target\nsatellite mission it consists of the following sections:\n\n\u2022 Test list (connection tests performed and corresponding results)\n\u2022 Test procedure (how the tests were performed)\n\u2022 History Record (every step from kitting to packing, recorded by person and\n\ndate)\n\u2022 Connector Mate/De-mate List (how often the connector was mated/de-mated)\n\u2022 Configuration Item List (Material list sorted by bundle)\n\u2022 Declared Materials List (The sum of all material that was used).\n\n6 The OBC Internal Harness 131\n\n\n\nChapter 7\nOBC Mechanical and Thermal Design\n\nMichael Lengowski and Fabian Steinmetz\n\n\u00a9 Vilnis \u2013 Fotolia.com\n\n7.1 Mechanical and Thermal Requirements\n\nThe mechanical structure and thermal system of the OBC was designed by the\nIRS. With this approach it was possible to find a configuration of the OBC housing\nand electronics as compact as possible and well adapted to the FLP target\nspacecraft. The conceptual design of the mechanical and thermal architecture was\nconducted on the base of the following requirements:\n\nMechanical:\n\nM01: The mechanical structure shall cover Processor-Board, I/O-Board, CCSDS-\nBoard and the Power-Board as well as their redundancies.\n\nM. Lengowski (&) ? F. Steinmetz\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: lengowski@irs.uni-stuttgart.de\n\nF. Steinmetz\ne-mail: steinmetz@irs.uni-stuttgart.de\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_7,\n? Springer-Verlag Berlin Heidelberg 2013\n\n133\n\n\n\nM02: The maximum envelope of the OBC shall not exceed 220 9 300 9 140 mm3\n\n(see Fig. 7.1) and the the mass shall not exceed 6 kg.\n\nM03: The OBC shall be dimensioned to withstand a quasi static load of 100 g in\nall axes. The first eigenfrequency of the OBC shall be higher than 130 Hz.\n\nM04: The mechanic structure shall provide a rigid connection between the elec-\ntronic boards as well as a firm attachment to the satellite.\n\nM05: All circuit boards as well as the internal connection harness shall be sealed\nfrom each other with regard to HF interferences.\n\nM06: All circuit boards shall be separately testable and safely embedded for\nhandling.\n\nM07: The mechanical structure shall be designed for possible removal of all\nPCBs.\n\nM08: The used components shall withstand the orbit environment with respect to\nthermal, EMC and radiation conditions.\n\nThermal:\n\nT01: The OBC shall feature an operating temperature range of -40 to 80 ?C.\nT02: The thermal connection of the circuit boards to the structure of the OBC\n\nhousing shall be designed to prevent high temperature spots.\n\nT03: The temperature of the OBC shall be measured with 2 thermal sensors.\n\nT04: Redundant survival heaters shall be installed preventing cold switch on\ntemperatures of the OBC. Furthermore, they shall be controlled without\ntelecommand.\n\nFig. 7.1 Envelope of OBC in the FLP satellite. ? IRS, University of Stuttgart\n\n134 M. Lengowski and F. Steinmetz\n\n\n\n7.2 Mechanical Design of the OBC\n\n7.2.1 OBC Structure Concept\n\nThe given mechanical requirements lead to a compact configuration with a modu-\nlarity for testing each circuit board on its own. In order to meet the required envelope\nthe boards are of 3u Eurocard type (100 mm 9 160 mm) and are all oriented in\nvertical direction\u2014see Fig. 1.2. This design furthermore results in a balanced\nthermal coupling of all boards to the satellite radiator baseplate leading to a\nhomogeneous temperature profile over the entire OBC housing. The modular con-\nfiguration is reached by covering each board with a single cassette frame (Fig. 7.2).\n\nCassette configurations of electronic components are a common design concept\nfor electronic units with a large number of circuit boards. A cassette configuration\noffers the possibility for separation of each board for tests and assures a safe and\naccurate handling. The cassette frames are designed to seal the mounted circuit\nboards from HF influences from external and from each other. This is achieved by\nusing two rectangle contact surfaces for every connecting edge between the frames\nand outer plates. Additionally screws spaced every 20 mm along the contact\nsurfaces generate compression forces, creating a very thin gap between the con-\nnecting surfaces. Thus HF signals can not pass the non-straight and thin gap at the\nedges and the cassette is sealed in every direction.\n\nIn order to connect the PCB to the cassette additional tie rods are implemented in\nthe most commercial electronics, creating a well stiff stack. This standard solution\n\nFig. 7.2 Power Board frame as example for design principle. ? IRS, University of Stuttgart\n\n7 OBC Mechanical and Thermal Design 135\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\nwith four rods requires a high volume of envelope. For very compact Micro Sat-\nellites the flight harness connection envelope does not allow this solution for the\nOBC. In the selected design every single cassette is mounted to the base plate of the\nsatellite structure by means of three M5 screws to achieve the required stack\nstability. Therewith this base plate takes over the function of the lower tie rods. To\npermit mounting and multiple dis-/re-mountings of the entire OBC from the\nsatellite\u2019s base plate, helicoils are used for all M5 screws. The upper tie rods of a\nconventional cassette design are replaced by the form-locking cassette intercon-\nnection to prevent movements of the cassettes relative to each other. The design is\nstrengthened by the numerous M2 screws. In order to achieve a plane mounting area\nat the frame/baseplate contact surface small counter-sunk screws were selected.\n\nThe OBC boards connect to two different harnesses. The first one is the harness\nto the satellite providing the power for OBC and the interfaces to the spacecraft\ncomponents. This harness directly starts at the CCSDS, the I/O and Power-Boards.\nDue to the required pin number on these OBC external connectors the PCB long\nside is used for these connections whereas the short side of each PCB provides the\ninternal connectors (see Figs. 1.2, 2.1, 3.7, 7.3 and 7.4).\n\nFig. 7.3 Cassette separation for I/O-Board frame. ? IRS, University of Stuttgart\n\nFig. 7.4 Cassette separation\nfor Processor-Board frame.\n? IRS, University of Stuttgart\n\n136 M. Lengowski and F. Steinmetz\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_2\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\n\n\nThe significantly large number of the external harness lines connecting to the I/\nO-Board requires two special connectors featuring a higher integration density\nthan standard D-Sub connectors. Special 100 pin Micro-D Axon connectors are\nused for these interfaces\u2014see connectors D and E in Fig. 3.7.\n\nThe OBC internal harness (see Chap. 6) interlinks the OBC boards with each\nother. It is required that the internal harness is shielded against HF influences from\nthe circuit boards, that it does not radiate any HF towards the circuit boards and that\nit is shielded against HF influences from the OBC\u2019s outer environment. Therefore\nthe frames are designed with an upper and lower, overlapping \u2018\u2018nose\u2019\u2019 to create an\nadditional front compartment in the OBC housing when assembled all together\u2014\nsee Figs. 1.2, 7.3 and 7.4. These edges of the compartments are manufactured in the\nsame way as the circuit board compartments with two rectangle contact surfaces.\n\nIn order to provide the possibility of replacing the circuit boards for maintenance\nthe frames are designed in two parts. In case of CCSDS, I/O and Power-Board the\ncassette is separated into a frame part and a cover plate for the external connectors.\nThis design allows dismounting of the circuit board from the frame after dismounting\nthe frame cover plate. To assure high-frequency signal shielding also here contacting\noverlapping edges are used. For the CPU cassette which has no external connectors it\nis required to remove the cassette rear plane for accessing the internal connectors.\nThe configuration of the cassette assemblies are depicted in Figs. 7.3 and 7.4.\n\nAll frames are supplied with cut-outs in the rear plane and the outer surfaces for\nmass reduction. The top and side cut-outs are applied from the outside and can be\nmilled. The rear plane cut-outs had to be made from the inside of the frame in\norder to produce an elevated contact surface for thermal coupling between PCB\nand frame. These cut-outs are manufactured by eroding because of the undercut. In\norder to increase the eigenfrequency of the circuit boards themselves in a frame, an\nadditional mounting point was foreseen in the center of each board.\n\nFurthermore, two venting-holes are foreseen in each frame for faster evacuation\nof the cassette. To prevent a potential HF leak these venting-holes are realized with\na very small diameter of 1.5 mm and going around a rectangular corner. The\ncorner is realized by a hole from inside and a hole from the outside meeting each\nother in a right angle. All remaining open surfaces of the OBC housing are closed\nby three integrally manufactured plates\u2014see front cover (removed in Fig. 1.2),\ncover of rightmost frame and small left front compartment cover in Fig. 1.2. The\ngeneral mechanical properties of the OBC are provided in Table 7.1. Figure 7.5\nshows the closed assembly of the OBC housing.\n\nTable 7.1 Characteristics of OBC\n\nCharacteristic Property\n\nMass 4,98 kg\nVolume 267 9 217 9 121 mm3\n\nMaterial EN AW-6082 (AlMgSi1)\nMoments of inertia (kg m3) Lxx = 0.095 Lyy = 0.137 Lzz = 0.181\n\nLxy = 0.065 Lxz = -0.039 Lyz = -0.03\nFirst eigenfrequency (FEM) 174 Hz\nQuasi-static design load 100 g\n\n7 OBC Mechanical and Thermal Design 137\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\n7.2.2 Mechanical Dimensioning and Concept Validation\n\nThe design and dimensioning of the OBC housing is done using the CAD software\nCATIA V5 R20 from Dassault Systems and Nx I-deas 6.1 from Siemens PLM\nSoftware. CATIA is a multi-platform CAD/CAM/CAE program, and is used as the\nprincipal mechanical design software for the Stuttgart Small Satellites Program.\nThe CAD/FEM software NX I-deas is used to assist in mechanical dimensioning.\nDue to differences in the software tools and their implementation, two different\nmodels were created:\n\n\u2022 In CATIA a 3D-model was created to be used for fitting and collision analyses\nas well as to detail the manufacturing process.\n\n\u2022 On the other hand the FEM model consists of 2D-elements for shell meshing of\nthe simulation.\n\nThis meshing type was selected in order to reduce computing time and to\nincrease the accuracy of the simulation. The use of 3D-elements would have\ngenerated a higher number of elements than desirable for simulating a structure\nwith such small wall thicknesses.\n\nThe OBC frames and their circuit boards are both modeled in the FEM simu-\nlation. All shell elements are defined with their corresponding shell thicknesses\ntaken from the CAD data. To simplify the modeling process the radii of the cut-\nouts are not included in the simulation. The electrical components of the circuit\nboards are modeled as non-structural masses on the boards. A quasi homogeneous\ndistribution of the components over the PCBs is expected. The connection of the\n\nFig. 7.5 OBC assembly with closed front cover. ? IRS, University of Stuttgart\n\n138 M. Lengowski and F. Steinmetz\n\n\n\nboards to the frame is represented with one dimensional rigid elements in all seven\nscrew locations. Such a rigid element is a connection between two nodes that\nmaintains the distance and angle constant between them (Fig. 7.6).\n\nThe OBC model is fixed by 24 restraints as boundary conditions, each without\nany translational and rotational degree of freedom. For these restraints the nodes at\nthe screwing points were selected. The dimensioning was done with quasi-static\nand modal analysis. In the quasi-static simulation an acceleration load of 100 g was\napplied to the model. In order to simulate the quasi-static loading from different\ndirections, three load cases are defined to model acceleration in the x, y and z\ndirection of OBC. Through these simulations the structural stresses were deter-\nmined, which must stay below than the permitted material characteristic values.\n\nThe modal analysis calculates the first eigenfrequencies of the OBC. These\nfrequencies are required to be above 130 Hz in order to have enough margin to the\nfirst resonance frequency of the FLP target satellite induced by the launcher. The\ndesign of the OBC in the CAD model could be optimized with results from these\nsimulations. The results are depicted in Table 7.2.\n\nFig. 7.6 Quasi-static simulation of OBC (data in N/mm2). ? IRS, University of Stuttgart\n\nTable 7.2 Loads, deformations and first eigenfrequency from OBC FEM simulations\n\nSimulation Results Approval value\n\nQuasi-static load of 100 g in x direction 39.0 N/mm2; 0.042 mm 135 N/mm2\n\nQuasi-static load of 100 g in y direction 38.9 N/mm2; 0.311 mm 135 N/mm2\n\nQuasi-static load of 100 g in z direction 47.4 N/mm2; 0.155 mm 135 N/mm2\n\nFirst eigenfrequency of modal analysis 174.6 Hz 130 Hz\n\n7 OBC Mechanical and Thermal Design 139\n\n\n\nThe OBC assembly is vibration tested when mounted into the target satellite\nplatform. The capability of the applied cassette frame concept was demonstrated\nwith other components of the FLP target satellite featuring PCBs of the same size\nand resulting same frame sizes. The OBC cassettes also correlate with respect to\nwall thicknesses, screw mountings and interconnection between cassettes. The\nloads applied to these units are included in Tables 7.3 and 7.4. The random and the\nsine vibration tests were conducted in each axis.\n\n7.3 Thermal Design of OBC\n\nThe design of an electronic box for a very compact satellite has to consider some\nparticularities with respect to thermal balancing. In contrast to electronics in large\nsatellites such a SmallSat unit has no large compartment where to radiate heat into\nand where waste heat can be absorbed and further conducted/radiated away.\nTherefore the CDPI units OBC and PCDU are thermally designed to be mounted on\na radiator plate where waste heat can be conducted to and on the spacecraft outer\nside gets radiated into space. In case of the FLP target satellite this radiator at the\nsame time forms the structure baseplate with the launch adapter ring\u2014see also\nSect. 10. For proper cooling the CDPI units additionally are coated on their outer\nsurface with thermal paint featuring a high emissivity. The inside of the OBC unit\nframes also is painted black to prevent hot spots on the electronic boards and to\nallow thermally high emissive chips to radiate their waste heat to the board\u2019s frame.\n\nAs was explained in the previous sections on the OBC Power-Boards and the\ninternal OBC harness, the OBC is equipped with compartment heaters on each\nsecond PCB frame for keeping the OBC boards above the minimum operating\n\nTable 7.3 Random vibration\ntest loads\n\nFrequency (Hz) Qualification level PSD (g2/Hz)\n\n20 0.017\n110 0.017\n250 0.3\n1,000 0.3\n2,000 0.077\ngRMS 19.86\nDuration 3 min/axis\n\nTable 7.4 Sine vibration test\nloads\n\nFrequency range (Hz) Qualification level\n\nLongitudinal axis 5\u201321 12.5 mm (0 to peak)\n21\u2013100 11 g\n\nLateral axis 5\u201316.7 12.5 mm (0 to peak)\n16.7\u2013100 7 g\n\nSweep rate 2 Oct/min\nNumber of sweeps One up-sweep\n\n140 M. Lengowski and F. Steinmetz\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10\n\n\ntemperature. The heater control is performed by simple thermostats to also work in\ncase of an OBSW failure. The positioning of the heaters and switches are already\nshown in Figs. 5.11 and 6.10 in the previous chapters. The consequence of the\nOBC cooling design for the nominal operational mode results in the the fact, that\nthe OBC\u2019s temperature can drop below -40 ?C after a severe OBC failure out of\nground contact where the reconfiguration needs multiple attempts and lasts several\norbits if no heater power is supplied from PCDU. Furthermore, OBC power-up\ncannot take place before thermal preconditioning of the OBC through powering\nthe heaters by the PCDU and by verification of the OBC unit temperature. This\ntask is taken over by the CPDI FDIR functionality embedded in the Combined-\nController inside the PCDU unit.\n\n7.3.1 Thermal Model\n\nTo identify the thermal behavior of the OBC housing, a lumped parameter model\nwas established with the software ESATAN-TMS (see [73]). The model is shown\nin Fig. 7.7 depicting each separate frame with a different color. For comparison the\nCAD model of the OBC is presented in Fig. 7.8.\n\nFig. 7.7 Thermal model of\nthe OBC.\nCyan: power frame,\nblue: CCSDS frame,\nred: Processor-Board frame,\nyellow: IO frame,\ngreen: harness cover. ? IRS,\nUniversity of Stuttgart\n\n7 OBC Mechanical and Thermal Design 141\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_6\n\n\nEach part of the OBC is modeled separately and is connected via user-defined\nconductive couplings. Solid part elements were merged together in order to rep-\nresent correctly the heat conductivity within each integrally machined part.\n\nFigure 7.9 shows a frame in CAD compared to the ESATAN model in\nFig. 7.10. The mesh of the PCB was designed to represent correctly the area of\ncontacting surfaces between PCB and frame. This contact substantially influences\nthe conducted heat flux and therefore the temperature of the PCB. For contact\nconductivity between nodes a value of 300 W/(m2K) was assumed. This value\nrepresents an average value for screw connections [74]. These values were con-\nfirmed by thermal-vacuum tests (Fig. 7.11).\n\nFig. 7.8 CAD model of the\nOBC with the IO frame\nhighlighted. ? IRS,\nUniversity of Stuttgart\n\nFig. 7.9 CAD representation\nof an OBC frame. ? IRS,\nUniversity of Stuttgart\n\n142 M. Lengowski and F. Steinmetz\n\n\n\nFor analysis purposes the heat dissipation over the PCBs was assumed as being\nequally distributed over each board, independent from board type. Figure 7.12\nshows the heat dissipating parts of the mesh. The power dissipated in each PCB\ncan be taken from Table 7.5.\n\nFig. 7.10 Thermal network model of a frame (yellow) and a PCB (green). ? IRS, University of\nStuttgart\n\nFig. 7.11 Contact resistance of the OBC boards. ? IRS, University of Stuttgart\n\n7 OBC Mechanical and Thermal Design 143\n\n\n\nEvery PCB is redundant in the OBC unit. Processor-Boards and I/O-Boards are\nnormally operated in cold redundancy except for certain FDIR and software patch\ncases. The CCSDS-Boards are permanently operated in hot redundancy. The\nmaterial parameters applied for the OBC thermal model can be taken from\nTables 7.10 and 7.11.\n\n7.3.2 Thermal Calculation Results\n\nThe thermal model was also used to verify the heat conduction to the radiator plate\nunder different thermal environmental conditions. The applied conditions are\ngiven in Table 7.6.\n\nFig. 7.12 Heat dissipating\nsurfaces on a PCB (purple).\n? IRS, University of Stuttgart\n\nTable 7.5 Thermal power\ndissipation\n\nPCB Board Power (Watts)\n\nProcessor-Board 4.75\nI/O-Board 1.5\nCCSDS-Board (hot redundant) 29 1.0\nPower-Board 0.95\n\n+0.3\n+2 9 0.2\n= 1.65\n\nTable 7.6 Thermal simulation boundary conditions\n\nHot case Cold case\n\nSatellite interior temperature 50 ?C 0 ?C\nOrbit height 500 km 650 km\nSatellite pointing Inertial Spin stabilized\nSatellite mode Idle Safe\n\n144 M. Lengowski and F. Steinmetz\n\n\n\nThe results of the simulation runs is shown in Figs. 7.13 and 7.14. From these\nthe conclusion can be drawn that the heat transport within the OBC is sufficient to\nconduct its own dissipated power and the dissipation from satellite interior onto the\nOBC towards the radiator. The PCBs are sufficiently coupled to the mounting\nframes.\n\nFig. 7.13 Temperature chart\u2014hot case. ? IRS, University of Stuttgart\n\nFig. 7.14 Temperature chart\u2014cold case. ? IRS, University of Stuttgart\n\n7 OBC Mechanical and Thermal Design 145\n\n\n\n7.3.3 OBC Internal Heaters\n\nIt was already discussed that the OBC temperature can drop below the minimum\noperational temperature in case of a longer deactivation\u2014e.g. in case of a satellite\nOBSW failure, resulting satellite tumbling and longer power outage in eclipse. The\nheaters to warm up the OBC before activation any board also was mentioned. In\nthe following paragraphs more details on these heaters, their dimensioning and the\nselected parts shall be provided. For the positioning of such heaters on each second\nOBC frame (please refer to Figs. 7.15 and 7.16).\n\nThe heaters are realized as heater mats, glued onto the frame cassette floors.\nThey conduct heat through the frame bottom into the cassette onto which they are\nmounted. And they radiate heat into the neighbor frame stacked to it with its open\nside oriented towards the heaters.\n\nFig. 7.15 Model of the\nheaters on a frame (purple).\n? IRS, University of Stuttgart\n\nFig. 7.16 CAD drawing of\nthe heaters on a frame\n(yellow). ? IRS, University\nof Stuttgart\n\n146 M. Lengowski and F. Steinmetz\n\n\n\nAn analysis with the thermal model showed that an electrical power above\n40 W becomes inefficient for PCB heat up as more and more of the generated heat\nis directly conducted to the radiator of the satellite rather than reaching the PCB\n(see Fig. 7.17). As result the resistance of the heaters was selected to lead to a\nmaximum dissipation of 40 W in total. Variations may result from the unregulated\npower bus voltage.\n\nInside the OBC a set of four nominal heaters are in switched parallel and\nanother chain of four heaters for the same compartments represents the redundant\nchain. So in each second compartment where heaters are placed, there exists one\nheater from the nominal and one from the redundant chain. In a worst case sce-\nnario the heaters are activated in eclipse where the solar panels do not supply any\npower to the satellite bus. For that case the design voltage for the heaters is the\nlowest possible battery voltage being 22 V. The resistance of the heaters thus was\nchosen to provide approximately 5 W in this scenario (please refer to Fig. 7.18).\n\nFig. 7.17 Simulation of\nheaters with different heater\npower. ? IRS, University of\nStuttgart\n\nFig. 7.18 Heat dissipation per heater over battery voltage (blue), manufacturing tolerance\n(black), minimum battery voltage (red). ? IRS, University of Stuttgart\n\n7 OBC Mechanical and Thermal Design 147\n\n\n\nThe heaters are acquired from Minco Inc. as these models are suitable for\nvacuum environment according NASA standard [57]. The type of heaters selected\nfor the OBC is model HK5591 with aluminum backing and pressure sensitive\nadhesive, suitable for a temperature range from -73 to 150 ?C.\n\nHeaters are activated by bimetallic thermostats as long as power is supplied to\nthe heater line so that no micro-controller needs to be active for their control in an\nFDIR state. The thermostats are manufactured and tested by the company\nCOMEPA according ESA ESCC 3702 & 3702/001 standard for bimetallic\nswitches [76]. These thermostats are listed in the European Preferred Parts List\n(EPPL) for space components [77].\n\nThe definition of the optimum thermostat switch temperatures was again\nachieved by using the thermal lumped parameter model. The temperatures at the\nthermostat positions and the PCB temperatures were analyzed by means of a\nsimulated cool down and a warm up scenario. For the precise assessment of the\nnecessary lower heater activation limit Tr transient cool-down simulations have\nbeen performed with the OBC thermal model. One scenario started from the OBC\u2019s\nupper operational temperature limit, one from a cold case with moderate temper-\natures. The model assumed all OBC boards themselves being in \u2018\u2018off\u2019\u2019 state, i.e. not\ndissipating any heat. The results show that when reaching the minimum operational\ntemperature of -40 ?C there are almost no temperature gradients anymore in the\nnetwork. Therefore the activation temperature of the thermostats can be set directly\nto the minimum operational temperature of the PCBs which is -40 ?C.\n\nThe switch temperatures of the procured OBC FM thermostats were charac-\nterized in a thermal vacuum chamber at IRS premises. The test results are in\naccordance with the supplier data and a measurement tolerance of \u00b11 K for the\nupper switching temperature Tf. The measured values of the lower switch tem-\nperature Tr are exceeding this tolerance. But the overall system performance is still\nvalid with these devices since they will activate heating even before the critical\ntemperature of -40 ?C is reached (Table 7.7).\n\nBy means of the thermal model it was analyzed after which time during heat up\nthe upper thermistor switch temperature will be reached, considering the ther-\nmostat positions in the OBC housing front compartment, analyzing different heater\nconfigurations and varying power supply voltages. The results of these simulations\nas well as an exemplary temperature chart of a heat\u2013up simulation are condensed\nin Table 7.8 and Fig. 7.19.\n\nTable 7.7 Thermostat switch temperatures\u2014specification and measured data\n\nManufacturer\nspec. value\n\nMeasured value Manufacturer spec. value Measured value\n\nThermostat 1 (?C) -27.43 -27.31 -41.74 -39.45\nThermostat 2 (?C) -25.62 -24.92 -39.51 -37.66\n\n148 M. Lengowski and F. Steinmetz\n\n\n\n7.4 OBC Housing Material Properties\n\nSee Tables 7.9, 7.10, and 7.11.\n\nTable 7.8 Heat-up duration and consumed energy\nBattery 22 V ? 5.88 W per Heater Battery 25 V ? 7.60 W per Heater\n\nHeater lines 1&2 ? 47.1 W 1 ? 23.52 W 2 ? 23.52 W 1&2 ? 60.8 W 1 ? 30.4 W 2 ? 30.4 W\n\ntime to reach -40 ?C\nat PCB (s)\n\n1,680 4,080 4,080 1,320 2,760 2,760\n\ntime to reach\n-27.43 and -25.62\nat thermostat (s)\n\n4,020 16,800 16,800 3,240 8,940 8,940\n\nResulting heating\nperiod (s)\n\n2,340 12,720 12,720 1,920 6,180 6,180\n\nRequired additional\nenergy (Wh)\n\n26.0 141.3 141.3 21.3 68.7 68.7\n\nFig. 7.19 OBC warm up, all heaters active, battery at 25 V. ? IRS, University of Stuttgart\n\nTable 7.9 OBC mechanical model\u2014material properties\n\nProperty AL EN AW 6082 T651\n\nMaterial Metal\nE (N/mm2) 70.000\nG (N/mm2) 26.700\nm (\u2013) 0.34\n. (kg/m3) 2.700\na (10-6/K) 23.04.12\nk [W/(mK)] 170\nc [J/(kg K)] 900\nRp0,2 (N/mm\n\n2) 240\n\n7 OBC Mechanical and Thermal Design 149\n\n\n\nTable 7.10 Thermal model\u2013bulk properties\n\nBulk material q (kg/m3) c (J/kg K) kp (W/m K) kn (W/m K)\n\nAluminum\n(Al 6082)\n\n2,700.00 900.00 150.00 150.00\n\nCopper 8,920.00 385.00 394.00 394.00\n\nFR4 1,500.00 1.800.00 0.30 0.30\n\nPCB 1,662.00 1,634.00 8.90 0.31\n\nKapton 1,420.00 1,090.00 0.37 0.37\n\nKapton heater 3,770.00 606.21 5.21 0.55\n\nTable 7.11 Thermal model\u2014optical properties of applied materials\n\nSurface material eIR aS\nAeroglaze Z307 0.89 0.97\n\nSecond surface mirror 0.75 0.09\n\nFR4 0.91 \u2013\n\nKapton 0.62 0.39\n\n150 M. Lengowski and F. Steinmetz\n\n\n\nChapter 8\nThe Power Control and Distribution Unit\n\nN.N. and Alexander N. Uryu\n\n8.1 Introduction\n\nA Power Control and Distribution Unit (PCDU), traditionally performs the power\nregulation, control and distribution activities in a satellite system. Furthermore, the\nPCDU is responsible for monitoring and protecting the satellite power bus. Thus,\nthe PCDU is one of the key components on board the satellite together with the\nOBC. Some specific functionalities were implemented into the PCDU design in\norder to facilitate the overall Combined Data and Power Management Infra-\nstructure (CDPI). This chapter describes both the specific PCDU functionality\nwhich enable this CDPI concept as well as the standard PCDU functions.\n\nThe FLP satellite\u2019s Power Control and Distribution Unit is developed in\ncooperation with an experienced industrial partner. The expertise and compliance\n\nN.N.\nVectronic Aerospace GmbH, Berlin, Germany\n\nA. N. Uryu (&)\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: uryu@irs.uni-stuttgart.de\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_8,\n? Springer-Verlag Berlin Heidelberg 2013\n\n151\n\n\n\nwith Quality Assurance (QA) in an industrial organization contributes significantly\nto the quality standard of the unit. This industrial partner for the PCDU is Vec-\ntronic Aerospace GmbH in Berlin. Vectronic Aerospace can look back to many\nyears of experience in the sector of manufacturing PCDUs and other satellite\ncomponents for small satellite projects.\n\nThe specification for the PCDU functionality which is described in this chapter\nwas composed accounting for the CDPI system and the FLP target satellite\u2019s\nmission requirements. Based on this specification, Vectronic Aerospace manu-\nfactured an electrical EM and an FM unit which both were electrically verified at\nVectronic Aerospace premises and verified with respect to functionality at IRS\npremises.\n\nThis chapter covers the following topics:\n\n\u2022 The target satellite\u2019s Power Supply Subsystem\n\u2022 The overall PCDU design\n\u2022 Power regulation and control concept\n\u2022 Analog data handling concept\n\u2022 Reconfiguration functionality for the OBC\n\u2022 Reconfiguration functionality for the entire satellite system\n\u2022 Diverse functions\n\u2022 Operational constraints/limits\n\u2022 Unit interfaces.\n\n8.2 The PCDU in a Typical Power Supply Subsystem\n\nLike most satellites orbiting Earth, the FLP follows the standard implementation\napproach for the primary power source and energy storage device:\n\nPrimary power source: Photovoltaic solar cells\nSecondary energy storage: Battery cells\n\nThe FLP features three solar panels in total which are implemented in two\ndifferent configurations, a side panel type which is deployed after separation from\nthe upper stage of the launcher, and a center panel type which is body mounted\n(please also refer to Chap. 10). The GAGET1-ID/160-8040 [78] solar cells from\nAZUR Space Solar Power are applied as primary energy source together with\nlithium iron phosphate secondary battery cells for energy storage from A123\nSystems [79]. The center solar panel includes a test string with experimental solar\ncells with an efficiency of 27.8 % (BoL, 28 ?C, AM0) from AZUR Space Solar\nPower [80] which shall be qualified for space use during the FLP mission.\nTable 8.1 gives a short overview of the FLP target satellite\u2019s power sources. Please\nconsult the respective data sheet for detailed technical information.\n\n152 A. N. Uryu\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_10\n\n\n8.3 PCDU Unit Design Overview\n\nThe PCDU features two SH7045 32-bit high-speed, single-chip microcontrollers\n[84] from RENESAS Electronics for the operational tasks. Those controllers have\nalready been successfully applied for multiple space missions by Vectronic\nAerospace.\n\nThe PCDU is composed of five PCB stacks which are assembled with a cover\nplate on top. Two screw threads at the connector side allow for the fastening of\nground straps for the proper electrical connection to the structure. All PCBs are\nconnected to chassis-ground.\n\nAll connectors are of Sub-D Standard or Sub-D High Density type, as both\nconnector types are relatively inexpensive and can be processed easily. Figure 8.1\nshows the engineering model of the PCDU, which was used to conduct the\nfunctional verification at the IRS in Stuttgart. Table 8.2 shows the main electrical\nand mechanical characteristics of the unit. A CAD Drawing of the PCDU can be\nfound in Sect. 11.10.\n\nTable 8.1 Overview of the\nsatellite\u2019s solar cell and\nbattery key characteristics\n\nSolar cells\nIdentification GAGET1-ID/160-8040\nBase material GaInP2/GaAs/Ge\n\non Ge substrate\nEfficiency at BOL,\n28 ?C, AM0\n\n25.3 %\n\nMaximum power output\nin FLP configuration\n\nApproximately 270 W\n\nSecondary battery\nType Lithium iron phosphate\nIdentification ANR26650M1-B\nTotal capacity for the\nconfiguration, BOL\n\n35 Ah\n\nFig. 8.1 Engineering model\nof the PCDU. ? Vectronic\nAerospace GmbH\n\n8 The Power Control and Distribution Unit 153\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\nSteady state power consumption of the unit lies below 5 W. By design, heat\nemitting parts like fuses, switches or the CPUs are placed by Vectronic on PCBs\nnear the baseplate, which is connected to the structure for thermal conductance\nreasons. The remaining surface sections are anodized in a matt black color to\nincrease the thermal balancing by radiation. A PCB internal heating for the CPU\nPCBs facilitates a fast warm-up to -20 ?C in order to prevent damaging of\nelectronic parts due to thermal stress due to high temperature gradients. Moreover,\nthe PCDU is qualified to a lower limit of -40 ?C for operational use to increase\nthe availability of the PCDU and thus satellite system reliability. The thermal\nconditions are monitored by five internal temperature sensors the PCDU.\n\nAccording to FLP design regulations the PCDU is designed single failure tol-\nerant. This means that a specific functionality is covered by a redundant unit or\nfunctional path in case the nominal unit fails. The FM unit was also subjected to\nenvironmental tests, such as vibration and thermal-vacuum tests, to facilitate a safe\nlaunch and reliable operations in orbit. Additionally, the PCDU is designed to\nfulfill its tasks reliably under the influence of the expected space radiation for the\nprojected mission lifetime of two years. According to [81] 1\u201310 krad are to be\nexpected per year.\n\n8.3.1 PCDU Interfaces\n\nThe PCDU is equipped with a number of interfaces for connecting digital and\nanalog equipment plus the serial interconnection to the OBC. Furthermore, the\nPCDU provides electrical interfaces for power generation, storage and distribution.\nIn addition interfaces are implemented for satellite operations, system monitoring\nand for all tasks of OBC monitoring and reconfiguration in the frame of the overall\nCDPI architecture. The listing provided below comprises all interfaces that are\nimplemented for FLP use, see also Table 8.12 in sect. 8.9 and Tables 11.48\u201311.50\nin the annex for the connector affiliation. Figure 11.10 depicts the PCDU\ndimensions.\n\nTable 8.2 PCDU\ncharacteristics\n\nParameter Min Typical Max Unit\n\nSupply current at 25 V\nauxiliary supply (standby)\n\n90 100 120 mA\n\nPower consumption at 25 V\nauxiliary supply (standby)\n\n2.5 W\n\nBus voltage 18.5 \u2013 25.5 V\nReset recovery time \u2013 10 20 s\nMass \u2013 4.14 \u2013 kg\nDimensions:\n\nHeight \u2013 117.4 \u2013 mm\nWidth \u2013 220 \u2013 mm\nDepth \u2013 160 \u2013 mm\n\n154 A. N. Uryu\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\n\u2022 Interface to solar arrays\n\u2022 Interface to batteries\n\u2022 Power supply for all components\n\u2022 Battery overcharge protection\n\u2022 Interface to the launcher\n\u2022 RS422 communication interfaces to the OBC Processor-Board through I/O-\n\nBoard\n\u2022 RS422 communication interface for High Priority Commands\n\u2022 Interface for temperature sensors\n\u2022 Interface for sun sensors\n\u2022 Interface for solar panel deployment detection\n\u2022 Interface to experimental solar test string.\n\n8.3.2 PCDU Command Concept\n\nIn general, Common Commands are available to control the fuses, switches and\nPCDU modes and to request sensor data as well as PCDU status. All Common\nCommands and according TM data can be transmitted with a baud rate of 115200\nthrough a full-duplex RS422 interface. The transmission protocol for commanding\nconsists of a mandatory part of 8 bytes and an optional data part, see Table 8.3.\n\nEvery Common Command is acknowledged by a command return, also referred\nto as echo, informing about the reception and execution status. The command\nreturn can also contain Telemetry (TM) to previously sent commands. The pro-\ntocol structure for the command reply is composed as shown in Table 8.4.\n\nTable 8.3 Protocol structure of Common Commands\n\n8-byte protocol structure\n\nByte no 0 1 2 3 4 5 6 7 8\nMeaning LEN1 LEN0 CMDC CMDID P1 P0 CRCH CRCL CC Data\n\nwith\n\nByte Explanation\n\nLENx Length of data block following the command, big endian, initial\n8 bytes of a command are always mandatory\n\nCMDC Command count, increment for every sent command, for\nacknowledgment identification\n\nCMDID Command ID, identification for a command group\nPx Command parameter\nCRCH 16 bit CRC-CCITT (byte 0\u20135), higher byte\nCRCL 16 bit CRC-CCITT (byte 0\u20135), lower byte\nData Optional block of data, max 65536 byte plus 2 byte of data CRC\n\n8 The Power Control and Distribution Unit 155\n\n\n\n8.4 Boot-Up Sequence of the PCDU and PCDU Modes\n\nA safe and reliable step-by-step boot-up sequence of the PCDU and thus of the\nentire satellite system is implemented to facilitate the completion of the first stable\nsatellite mode, the System Safe Mode. The boot-up procedure includes specific\nprerequisites before the OBC boards are powered by the PCDU and assume\ncontrol of the satellite. Thereby, following actions are performed to prevent the\ndamaging of critical satellite units:\n\n1. PCDU internal heaters warm up the unit up to its operational temperature limit.\n2. Check of the power level of the batteries to complete the entire boot-up pro-\n\ncedure up to the System Safe Mode.\n3. Check of the temperature level of the OBC unit and the TT&C transceivers If\n\ntemperature is below the operational limit, the PCDU activates the power\nswitches for the redundant heater design of both units. These heaters include\nthermistors to facilitate the heating up to the specified operating temperature.\nAlternatively, a timer condition is implemented which is set according to the\nresults of thermal simulations. As soon as the timer condition is met, the PCDU\ncontinues the boot-up process.\n\n4. The last step concludes the boot-up procedure to the System Safe Mode.\n\nFrom here, the OBC can command every other defined operations mode of the\nsatellite.\n\nTable 8.4 Basic command reply structure\n\n8-byte reply structure\n\nByte no 0 1 2 3 4 5 6 7 8\u2026\nMeaning LEN1-E LEN0-E B2-E CMDID-E P1-E P0-E CRCH CRCL Rx Data\n\nByte Explanation\n\nLENx-E Length of data block following the echo, big endian, initial 8 bytes\nof a command are always mandatory\n\nB2-E Byte 2: 0x00\nCMDID-E CMDID; Command ID of the received command\nP1-E Execution of received command: 0xF0 ? Yes; 0x0F ? No\nP0-E CMDC, Command Count of the received command\nCRCH 16 bit CRC-CCITT (Echo byte 0\u20135), higher byte\nCRCL 16 bit CRC-CCITT (Echo byte 0\u20135), lower byte\nRx Data Optional block of data, max 65536 byte plus 2 byte of data CRC\n\n156 A. N. Uryu\n\n\n\n8.5 Power Control and Distribution Functions\n\nThe main task of the PCDU is the distribution and regulation of the electric power\non board the satellite. The power handling design is specified in order to safeguard\nthe power supply of the satellite bus as far as possible. Furthermore, specific\nprotection features are implemented in order to prevent damaging of the on-board\ncomponents or the batteries which are essential for accomplishing the mission\nobjectives. Figure 8.2 shows the circuitry of the PCDU and its connections to the\nsatellite bus.\n\nEach solar panel is connected to only one battery string by a Battery Charge\nRegulator (BCR), in order to prevent a single point failure. If all power strings\nwere interconnected, the complete power supply would for example be disabled in\nthe case when a non-insulated cable accidentally contacts the structure. The FLP\ntarget satellite configuration represents a non-DET system [82] with an unregu-\nlated power bus supplying the power bus with a voltage between 18.5 V and\n25.5 V. The BCR is located in the direct energy path to protect the satellite bus\nfrom excessive voltage or current transients. Each BCR is adjusted to an upper\nvoltage limit of 25.5 V, which corresponds with the end charge voltage value of\neach battery string.\n\nThe three independent power strings are combined before the Main Switch of\nthe PCDU, but secured with diodes to prevent the current flow of one string into\nanother. In case a battery string or solar panel is broken or short-circuited, the\nenergy of the other two strings can be used to operate the S/C. String 0 and 1\nrepresent the energy paths of the side solar panels, whereas string 2 represents the\npath of the middle solar panel and solar test string. The solar test string is used for\nthe generation of electrical energy by default.\n\nThe distribution of power to the consumer loads is controlled by the appli-\ncation of a fuse and switch system. The PCDU deactivates the power supply by\nthe respective Latching Current Limiters (LCLs), as soon as an over-current is\nmeasured. Due to volume and cost reasons some power outputs are combined at\none fuse. However, critical on-board components such as the OBC boards and the\nTC receivers are implemented as single loads on a fuse. For reliability reasons\nand due to the combined allocation of multiple loads to one fuse, additional\nswitches are used to regulate power supply of single loads. High-power con-\nsuming components are equipped with two switches in series in order to protect\nthe satellite bus. If a switch should break during the mission lifetime, the second\nserially connected switch can be opened to deactivate the respective component,\nif necessary. The LCL fuses can be reactivated after the event of an over-current\nand the connected consumers are not lost for the mission. A complete list of the\ncomponent affiliations to fuses and switches can be found in Table 11.51 in the\nannex.\n\nIn addition to the given fuse-switch control and protection system for the on-\nboard loads, there are two bi-stable relays. Each one of these bi-stable relays is\ndedicated to a battery survival heater. The relays are implemented in order to\n\n8 The Power Control and Distribution Unit 157\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\nF\nig\n\n.\n8.\n\n2\nC\n\nir\ncu\n\nit\nry\n\nan\nd\n\npo\nw\n\ner\nco\n\nnn\nec\n\nti\non\n\ns\nof\n\nth\ne\n\nP\nC\n\nD\nU\n\n.\n?\n\nIR\nS\n\n,\nU\n\nni\nve\n\nrs\nit\n\ny\nof\n\nS\ntu\n\ntt\nga\n\nrt\n\n158 A. N. Uryu\n\n\n\nsafeguard the heating of the battery compartment, even if the satellite is deacti-\nvated due to the under-voltage protection feature. Since the batteries are very\nsensitive with regard to their storage temperature conditions, this mean was\nimplemented to protect the energy storage devices from damage.\n\nFigure 8.3 shows the connections between the PCDU and one battery string.\nCharge and discharge of the battery is managed by the power interface (IF). By\ndefault, the switch is closed in order to allow the charging of the battery string. If\nthe charge process shall be interrupted the switch can be opened. The energy path\nwith the diode still allows energy extraction from the battery.\n\nSince the PCDU only monitors the voltage level of a complete battery string,\nsingle cells are not protected from overcharging. In order to prevent overcharging\nof a single cell, an electrical circuitry is applied at the battery side which monitors\nthe respective cell voltage. If the voltage of single, serially connected cells\ndiverges too much, single cells could be overcharged before the combined charge\nlimit of 25.5 V is reached. The PCDU features the reception interfaces for dedi-\ncated signals sent by the monitoring circuitry. As soon as the PCDU receives the\ninterrupt signal, battery charging is stopped by opening the respective switch in the\nenergy path for a specified time. In case of a fault event there exists the possibility\nto command the PCDU to ignore the interrupt signal.\n\nEach battery string is equipped with two temperature sensors for thermal\nmonitoring. In case the temperature limits for a stable energy output are violated,\nthe charging is disabled to prevent long-term damaging of the cells.\n\n   Battery String\n\nBalancing and Monitoring Circuitry\n\nPower Control and Distribution Unit (PCDU)\n\nTS\nTS\n\nData IF Power IFPower IF\n\nNot available for \nbattery string at \n\nmiddle solar panel\n\nLegend:\n\nIF: Interface               TS: Temperature Sensor\n\n+-\n\nSwitchDiode\n\nFig. 8.3 Connection of the PCDU and a battery string. ? IRS, University of Stuttgart\n\n8 The Power Control and Distribution Unit 159\n\n\n\nThe battery\u2019s State of Charge (SoC), is usually calculated by the Onboard\nSoftware (OBSW), in the OBC on the basis of the received PCDU TM. The OBC\npasses the calculated value to the PCDU for mode control. Calculation of the SoC\nis independently performed by the PCDU, since this information is required during\nthe start-up sequence when the OBC is still deactivated.\n\nThe available under-voltage protection feature preserves the batteries, if the\nvoltage level falls below 18.5 V. The measurement point is located at the main\nswitch of the PCDU. Exhaustion of the batteries must be prevented as the batteries\ncould be damaged or even corrupted. When under-voltage protection becomes\nactive, the PCDU and hence the complete satellite is deactivated. Therefore, this\nlower limit is to be avoided by the OBSW operations management of the satellite.\nIn under-voltage case the satellite system is set into a low-power Safe Mode,\nwhere the available power charges only the batteries and survival is assured with a\nsufficient margin before the minimum voltage level is reached. In order to avoid a\nmeta-stable state, in which the satellite turns on and off, the PCDU reactivation\nthreshold is specified to a higher voltage level of 21.5 V.\n\nA further implication of the combined loads at one fuse is a current monitoring\nfeature by S/W through a Current State Table. The Current State Table contains\nreference values of the allowed current level for all on-board components. Addi-\ntionally, the PCDU records and monitors which components are powered on at a\nrespective fuse with the help of the configuration list. As soon as the LCLs\ndetermines a current flow exceeding the referenced value in the Current State\nTable, the PCDU deactivates the respective LCL to avoid corruption of the con-\nnected components. This monitoring functionality is performed with a repetition\nrate of higher than 20 Hz (more than twice the main control loop frequency) to\nincrease the protection potential.\n\n8.6 PCDU Specific Functions in the CDPI Architecture\n\n8.6.1 Analog Data Handling Concept\n\nOne of the special characteristics which exceeds the scope of duties of a common\nPCDU is the different approach for the on-board data reception. Usually, the\ncollection of all data data is conducted by a separate unit in an industrial satellite,\nsometimes referred to as Remote Interface Unit [10].\n\nFor the FLP, digital and analog data interfaces are separated in the command\nchain. Making use of synergies, the PCDU contains all analog on-board IFs. Since\nthe PCDU contains Analog-to-Digital Converters (ADCs), for the measurement of\nvoltages and currents anyway, this step was a reasonable decision. Most of the\ndigital IFs to the satellite units are comprised by the I/O-Board. Dividing the two\ninterface types and assigning these to two distinct components reduces complexity\nin each of the respective units. Each interface unit can thus be developed as fast as\n\n160 A. N. Uryu\n\n\n\npossible, only dependent on the definition status of the respective IFs. Moreover,\nthe required qualification effort is split and qualification time can be minimized as\nboth units may be tested in parallel.\n\nAccording to this interface control concept, the PCDU collects all analog sensor\ndata on board the satellite. Some digital sensor data which is required for the\nPCDU tasks is collected as well. The sensor data as shown in Table 8.5 is collected\nby the PCDU.\n\nThis sensor data is not processed inside the PCDU. Whereas the analog sensor\ndata is converted to digital data by the ADCs, all sensor data is forwarded to the\nOBC. The handling is conducted in the OBC, utilizing its processing power, where\nthe relevant data is also distributed to the respective subsystem control module.\n\n8.6.2 Reconfiguration Logic for the OBC\n\nAs explained in Sect. 1.4 and as published in [4], the Combined-Controller in this\nCombined Data and Power Management Infrastructure (CDPI), also serves as\nReconfiguration Unit for the OBC. In this context the PCDU controller is taking\nover the role of the CDPI Combined-Controller. The diverse boards of the OBC\nand their functions were described earlier in Sect. 1.2. There is always one\noperational instance of the OBC Processor-Boards and I/O-Boards required in\norder to facilitate a working command chain on board the satellite. Since both\nCCSDS-Boards are permanently powered, their hot-redundant board is instantly\navailable in case of a malfunction. This hot-redundant operations concept is not\napplied for the OBC Processor-Boards.\n\nHowever, it is essential to guarantee the detection and reconfiguration of any\nmalfunctioning OBC boards. Industrial satellites usually feature an independent\nOBC internal Reconfiguration Unit that permanently monitors the operation of the\n\nTable 8.5 Overview of sensor data collected by PCDU\n\nData information Quantity of functional\nconnections\n\nData type\n\nTemperature sensors (resistance) 32 Analog\nSun sensors (current) 16 Analog\nSolar panel and battery condition\n(voltage/current)\n\n3 (for solar panels)/\n3 (for batteries)\n\nAnalog\n\nCharacterization of a experimental\ntest string (voltage/current)\n\n1 Analog\n\nReed sensors for deployment status\nof two solar wing panels\n\n4 Digital\n\nSeparation detection from upper\nstage of the launcher\n\n1 Digital\n\nInput for monitoring signals for\nbattery overcharge protection\n\n3 Digital\n\n8 The Power Control and Distribution Unit 161\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\nOBC components. In case an OBC component is not working properly anymore,\nthis independent Reconfiguration Unit IC\u2014in most cases a radiation-hardened\nASIC\u2014switches over to the corresponding redundant component. As explained in\nChap. 1 the key idea of the Combined Data and Power Infrastructure is to use the\nprocessor of an intelligent PCDU to take over the task of the classic Reconfigu-\nration Unit and thus to save the development, qualification and manufacturing of\none entire OBC ASIC.\n\nThe first essential step in OBC FDIR is failure detection: In the FLP concept,\nthe OBC requests important housekeeping data from the PCDU at a regular\ninterval of 10 Hz by a Common Command. This data is recorded by the PCDU\nwithin its control loop which is adjusted to match the 10 Hz polling cycle of the\nOBC. All requested data is submitted to the OBC as requested. Among the\nperiodically accumulated data are:\n\n\u2022 Status of batteries: voltage/current/battery depth of discharge or state of charge\ncalculated by PCDU\n\n\u2022 Status of fuses: on/off\n\u2022 Status of switches: on/off\n\u2022 Status of panels: voltage/current\n\u2022 Temperature sensor data\n\u2022 Sun sensor data.\n\nIn case the PCDU is not polled cyclically as specified, a failure of the OBC\nsystem is assumed by its reconfiguration function. Figure 8.4 shows the four\nOBC boards that are involved in the command chain of Common Commands from\nOBC to the PCDU. These are the nominal and the redundant OBC Processor-\nBoard\u2014or \u2018\u2018OBC Core\u2019\u2019 for short\u2014as well as the nominal and redundant I/O-\nBoard. Figure 8.4 also depicts the connections between the OBC\u2019s CCSDS-Boards\nand the PCDU for High Priority Commanding, which is explained in the following\nsection in detail.\n\nThe affiliation \u20180\u2019 and \u20181\u2019 indicate that the respective units are operated in a hot\nredundant mode. In contrast, the boards which are operated in a cold redundant\nmode are affiliated Nominal (N) and Redundant (R).\n\nConsidering a single OBC failure leading to a watchdog timeout or TM request\ntimeout on PCDU side, in the first place for the CDPI Combined-Controller it is\nimpossible to identify which of the OBC boards is defective\u2014defective in this\ncontext meaning either electrically defective or simply non operational due to\ncrashed OBSW. Therefore, a specific reconfiguration procedure for the OBC is\nperformed to restore the command chain operability by switching through the\navailable instances. After each switch step a delay time is foreseen\u2014e.g. to allow\nthe redundant Processor-Board to boot up entirely\u2014and it is verified by the PCDU\nwhether telemetry polling is resumed again by the OBC. This default hold time can\nbe adapted by command. If polling is resumed, the reconfiguration is considered\nsuccessful and the further sequence is aborted. If no polling is occurring yet, the\nnext switchover step is performed:\n\n162 A. N. Uryu\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\n\u2022 Turn the switches off for both I/O-Boards and on for the nominal I/O-Board\n\u2022 Turn the switches off for both OBC Processor-Boards and on for the nominal\n\nOBC Processor-Board\n\u2022 Turn the switch off for the nominal I/O-Board and activate the switch for\n\nthe redundant I/O-Board\n\u2022 Turn the switch off for the nominal OBC Processor-Board and activate the\n\nswitch for the redundant OBC Processor-Board\n\u2022 Turn the switch off for the redundant I/O-Board and activate the switch for the\n\nnominal I/O-Board.\n\nAs soon as a working command chain configuration is found, the PCDU is\nautonomously set into Mini Operations Mode, which corresponds to the Safe\nMode at system level. By implementing the autonomous reconfiguration procedure\nthe down time of the satellite system is minimized. This is essential, since an\nuncontrolled satellite puts the mission at risk. Without OBC operation the satellite\nloses its controlled attitude for power generation and its thermal balance can be\ncompromised. Additionally, there is only a limited number of ground stations\navailable for academic projects and they are not staffed all the time. Days could\npass before someone notices the fault and reinstates the system, which drastically\nincreases the risk of losing the mission.\n\nOBC\n\nCommon\nCommands\n\nHigh Priority \nCommands\n\nPCDU\n\nI/O Board N I/O Board R\n\nOBC Core N OBC Core R\n\nCCSDS 0 CCSDS 1\n\nInterface 0 Interface 1\n\nCPU 0 CPU 1\n\nSpaceWire\nRS 422\n\nLegend\n\nCommon Com.\nHigh Priority Comm.\n\nFig. 8.4 Interface communication between the OBC and the PCDU. ? IRS, University of\nStuttgart\n\n8 The Power Control and Distribution Unit 163\n\n\n\nThe implementation of the above described concept for the OBC reconfigura-\ntion is only reasonable, since the PCDU itself is equipped with an internal\nwatchdog circuit which facilitates the autonomous switching between the PCDU\ninternal, redundant controllers. Thus, the monitoring and switching tasks can be\nperformed without significant delays and thus safeguard a minimum downtime of\nthe satellite system.\n\nFigure 8.5 shows the watchdog functionality for the autonomous switching of\nthe PCDU internal controllers. Both, the nominal and the redundant controller, are\noperated in a hot-redundant concept with a master and a slave unit at separate\nelectric circuits. The master unit performs all actions, whereas the slave monitors\nthe master.\n\nThe master CPU is sending a confirmation signal during its processing cycle in\norder to permanently confirm its operability. If this condition is no longer met, the\nswitch logic commands to switch the master functionality to the slave unit.\n\n8.6.3 Reconfiguration Functionality for the Spacecraft\n\nThe PCDU incorporates a further functionality, which is essential for FDIR\noperations at S/C system level. In order to establish a reliable concept for\nspacecraft operations and system commandability so-called High Priority Com-\nmands (HPCs) are to be applied in case the spacecraft OBSW has crashed and an\nautomatic reconfiguration failed. The concept of HPCs is explained in [10]. Such\ncommands are applied in case the nominal command chain units, such as OBC\nProcessor-Boards and I/O-Boards, or the OBC\u2019s OBSW is not operational. In\nstandard architectures the HPCs are submitted from ground to a dedicated Com-\nmand Pulse Decoding Unit (CPDU), of the OBC which then commands the PCDU\nrelays switching via dedicated pulse command lines. In case of the integrated\n\nSwitch\n\nController N Controller R\n\nconfirmation signal during each processing cycle\n\nMaster\n\nswitch\nsignal\n\nMaster\n\nswitch\nsignal\n\nFig. 8.5 Functional design of the switch logic for the PCDU internal CPUs. ? IRS, University of\nStuttgart\n\n164 A. N. Uryu\n\n\n\nCDPI architecture HPCs also bypass the OBSW command chain but do not need a\nCPDU as they are transmitted directly from the CCSDS-Boards to the PCDU (see\nSect. 1.4 and [4]).\n\nThe following explanations of the CCSDS protocol are limited to the parts that\nare necessary to understand the HPC transmission and forwarding. Please consult\nthe CCSDS standards [23] for further information. Figure 1.11 in Sect. 1.6.2\nshows an example of the composition of an uplinked TC packet that is transmitted\nfrom ground to the satellite. After the decoding of the so-called Command Link\nTransmission Unit (CLTU), the TC Transfer Frame contains the commands from\nground. Only the Frame Header and the TC Segment must be considered to\nunderstand the HPC forwarding. The Virtual Channel (VC), in the Frame Header\nindicates which command chain unit receives the data. The following four VCs are\navailable for FLP target spacecraft:\n\n\u2022 VC0: nominal command to OBC Processor-Board N\n\u2022 VC1: HPC1 to CCSDS-Board N\n\u2022 VC2: nominal command to OBC Processor-Board R\n\u2022 VC3: HPC1 to CCSDS-Board R.\n\nWhereas nominal commands are assigned to the VCs \u20180\u2019 and \u20182\u2019, HPCs are\nallocated to the VCs \u20181\u2019 and \u20183\u2019. An HPC that is commanded by ground is referred\nto as High Priority Command Level 1 (HPC1). HPCs Level 2 are processed by the\nOBC S/W. The TC Segment contains the Multiplexer Access Point Identifier\n(MAP-ID). A MAP-ID that equals \u20180\u2019 states that the TC Segment contains HPC1 s\nand that containing commands are directly forwarded from the CCSDS-Board to\nthe PCDU. All MAP-IDs unequal to \u20180\u2019 imply PUS packets and are transmitted to\nthe OBC Processor-Board for further processing by the OBC S/W.\n\nAs described in Sect. 1.4.2 industrial satellites may feature a so-called Com-\nmand Pulse Decoding Unit (CPDU) on board to receive HPCs. This unit routes the\ncommands to the respective units. An HPC consists of 2 bytes. The first 8 bits\ncontain information on the channel selection, the second 8 bits on pulse length\ndefinition. So it is possible to command 256 units (channel selection) through 256\ncommands (pulse length definition) by utilizing HPCs. For FLP, the CPDU is\nintegrated in the PCDU as the only unit commanded by HPCs. Thus, 65536\ndifferent commands may be implemented to reconfigure the satellite system by\nswitching LCLs and component switches. The PCDU features a nominal and a\nredundant RS422 communication interface for the reception of HPCs from the\nOBC CCSDS-Boards (see Fig. 8.4) with a baud rate of 115200. All HPC packets\nare implemented with a 2 byte header that serve as an identifier for the following\nHPC frame. The composition of the HPC header is shown in Table 8.6.\n\nTable 8.6 Header composition of an HPC Frame\n\nByte number 1 2\nBit composition 11111111 01010101\n\n8 The Power Control and Distribution Unit 165\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\nAn HPC frame can contain up to four high priority commands. Every command\nstarts with a TC Source Packet Header (TSPH) which is completely dismissed.\nEach of the HPCs consists of the 6 bytes TSPH, 2 bytes command plus 2 bytes\nchecksum. HPCs can be used to activate or deactivate a single or a specific set of\non-board components which cover a specific safety aspect. By virtue of their\nimportance, HPCs are processed immediately after reception at the PCDU and in\nfavor to Common Commands. The most important HPCs are:\n\n\u2022 Activate or deactivate the on-board heaters\n\u2022 Deactivate all non-essential loads for the Safe Mode to save energy\n\u2022 Reconfigure the command chain.\n\nThe structure of a single HPC is as shown in Table 8.7.\n\nTable 8.8 shows an example of an HPC command sequence which may contain\nup to four single HPCs. Table 8.9 gives an overview of all implemented HPCs for\nthe FLP.\n\n8.7 Diverse PCDU Functions\n\nThe PCDU furthermore features a number of functionalities which partly are\nstandard for PCDUs, partly are resulting from the PCDU\u2019s role in the overall CDPI\narchitecture and some also are implemented as specifics of the FLP target satellite.\nThese functions are explained very briefly here only. For further information\nplease refer to [83, 85].\n\nTable 8.7 Basic HPC structure\n\nHPC structure\n\nByte no. 0\u20135 6 7 8 9\nMeaning TSPH CMD ID-H CMD ID-L CRCH CRCL\n\nwith\n\nByte Explanation\n\nHeader 0xFF55\nTSPH TC source packet header (0x00)\nCMD ID-H Activate: 0x0F; deactivate: 0xF0\nCMD ID-L HPC No.\nCRCH 16 bit CRC (byte 0\u20137), higher byte\nCRCL 16 bit CRC (byte 0\u20137), lower byte\n\nTable 8.8 HPC frame composition\n\nHPC sequence structure (up to 4 commands)\n\nByte no. 0\u20131 2\u201311 12\u201321 22\u201331 32\u201341\nMeaning Header HPC1 HPC2 HPC3 HPC4\n\n166 A. N. Uryu\n\n\n\n8.7.1 Launcher Separation Detection\n\nDue to the PCDU taking over in the CDPI architecture some functions of a\nclassical OBC Remote Interface Unit (RIU), it features an arming switch for\ndetection of spacecraft separation from the launcher by opening the according\ncircuits. This prerequisite together with a sufficient level of solar array input power\nis required to startup the PCDU operations.\n\n8.7.2 Control and Monitoring of Solar Panel Deployment\n\nThe control and the monitoring of the deployment procedure of the solar panels by\nthe PCDU is based on both implemented deployment timers (timer 0 and timer 1)\nand on the activation flag. The control is performed if the activation flag is enabled\n(default setting).\n\nAfter the timer 0 becomes active (time after launcher separation) the PCDU\nactivates the fuses and the switches of the heaters for the deployment mechanism\nand checks its status. As soon as the deployment mechanism signalizes a successful\ndeployment of the solar panels, the PCDU switches off the heaters and disables the\nactivation flag. If the deployment mechanism does not signalize a successful\ndeployment of the solar panels and the timeout value is exceeded, the PCDU\nwill switch off the heaters without disabling the deployment process.\n\nTable 8.9 HPC commands\n\nHPC\nNumber\n\nAction\n\n1\u201377 Activate switch 0\u201376\n(turn single components on)\n\n78\u2013144 Deactivate switch 0\u201376\n(turn single components off)\n\n145 Activate all heater switches\n146 Activate nominal core component switches (OBC N, I/O board N)\n147 Activate redundant core component switches (OBC R, I/O board R)\n148 Activate first core component cross-coupling switches (OBC N, I/O board R)\n149 Activate second core component cross-coupling switches (OBC R, I/O board N)\n150 Deactivate nominal core component switches (OBC N, I/O board N)\n151 Deactivate redundant core component switches (OBC R, I/O board R)\n152 Deactivate first core component cross-coupling switches (OBC N, I/O board R)\n153 Deactivate second core component cross-coupling switches (OBC R, I/O board N)\n154 Deactivate all payload switches\n155 Deactivate all switches except for \u2018Safe Mode\u2019 components and \u2018Survival heaters\u2019\n156 Deactivate all heater switches\n\n8 The Power Control and Distribution Unit 167\n\n\n\nA total of five attempts will be made (with a wait interval in between) to release the\nsolar panels by switching the deployment device heaters. After five unsuccessful\nattempts the autosequence is finally deactivated in order to save power, and FDIR\nfrom ground has to take over.\n\n8.7.3 Control of the Payload Data Transmission Subsystem\nPower\n\nThe power switches for the Data Downlink System for payload data transmission\nare deactivated after a certain duration. This feature is implemented to restrict\nthe data downlink only to the specified access times. Thus, the transmission of\ndata is avoided over specific regions of the Earth according to the International\nTelecommunication Union (ITU), regulations.\n\n8.7.4 History Log Function\n\nThe PCDU software includes a history log functionality for commands, events and\nconfiguration of working components. The history log functionality is introduced\nin order to establish a means to check on actions inside the unit in case of oper-\national issues. Each of the above given values that are recorded are identified by an\ndedicated ID and a time stamp.\n\n8.7.5 Time Synchronization Between Internal Controllers\n\nThe PCDU features a time synchronization mechanism between the current\noperating PCDU controller and the redundant one. The synchronization occurs\nevery 5 min through an emulated UART interface between both controllers.\n\n8.7.6 Overvoltage Protection\n\nIn addition to the under voltage protection feature for the batteries, the PCDU\nfeatures an overvoltage protection for itself. The PCDU is switched off automa-\ntically via its main switch as soon as a bus voltage greater than 28.5 V is detected.\nThis case may apply during tests on ground, when the PCDU is powered through\nthe auxiliary power input.\n\n168 A. N. Uryu\n\n\n\n8.7.7 Measurement of Test-String Characteristics\n\nThe PCDU features a measurement circuitry base on a DAC for recording the\ncharacteristic line of the test string of the satellite\u2019s middle solar array. The\nmeasurement is initiated by command. The PCDU sets the current flow through a\nshunt resistor and records the values of the current and of the associated voltage.\n\n8.8 PCDU Environmental Qualification Characteristics\n\nThe PCDU is environmentally qualified regarding the launcher and operational\nrequirements in orbit. Thereby, the load limits were implemented according to the\nECSS-E-10-03A standard [47], if possible. However, full compliance to the ECSS\nstandard (e.g. testbench setup, intermediate testing,\u2026) was not applied due to\nfinancial reasons.\n\n8.8.1 Thermal-Vacuum Limits\n\nThe PCDU is tested under varying thermal and vacuum conditions. The tempe-\nrature profile of the thermal testing of the unit is shown in Fig. 8.6. Usually, the\nlower non-operational is specified lower than the lower operational temperature\nlimit. The lower operational temperature was adapted to -40 ?C in order to\nincrease the operational reliability of the unit and thus for the overall satellite\nsystem.\nThe operating temperature range of the PCDU ranges from: -40 ?C to +70?\nThe non-operational temperature range is from: -40 ?C to +80 ?C\nNumber of thermal cycles: 5\n\nThe vacuum tests were conducted with a maximum pressure level lower than\n1 9 10-5, where the operability of the unit and the PCB-internal heaters were\nconfirmed.\n\n8.8.2 Radiation Limits\n\nThe PCDU resists at least a radiation up to 20 krad total dose, without significant\ndegradation.\n\n8 The Power Control and Distribution Unit 169\n\n\n\n8.8.3 Vibration Limits\n\nThe PCDU survives and performs without any degradation after being exposed to\nthe vibration loads as shown in Tables 8.10 and 8.11.\n\nTime\n\nTnh\n\nTnl,ol\n\nTa\n\n4h 4h 4h 4h 4h4h\n\n4h 4h 4h 4h\n\nTemperature\n\nToh\n\nTa Ambient temperature\nTnh, nl Non-operational temperature, high orlow\nToh, ol Operational temperature, high orlow\n\nElectrical Test\noperational\nnon-operational\n\n\u2026..\n\nThermal Cycling4h\n\n4h4h\n\nFig. 8.6 Test profile for thermal testing of the PCDU. ? Vectronic Aerospace, IRS\n\nTable 8.10 PCDU sine vibration limits\n\nAxis Frequency (Hz) Level\n\nLongitudinal axis 4\u201310.8\n10.8\u2013100\n\n15 mm (0 to peak)\n11 g\n\nLateral axis 2\u20138.5\n8.5\u2013100\n\n15 mm (0 to peak)\n7 g\n\nSweep rate 2 octaves per minute\nNumber of sweeps One up-sweep\n\n170 A. N. Uryu\n\n\n\n8.9 List of Connectors\n\nThe table below provides an overview over all connectors of the PCDU unit\nincluding a keyword description on the connector use. Detailed pin allocations\nobviously are driven by the onboard equipment of the individual mission\u2014in this\ncase the FLP satellite\u2014and are therefore not provided here.\n\nConnector pin allocations for the CDPI inter-unit cabling between OBC and\nPCDU for standard commanding and HPCs are included in the annex in\nTables 11.49 and 11.50 (Table 8.12).\n\nTable 8.11 PCDU random vibration limits\n\nAxis Frequency (Hz) Level (g2/Hz)\n\nAll three axes 20\n110\n250\n1,000\n2,000\n\n0.017\n0.017\n0.3\n0.3\n0.077\n\nOverall level 19.86 gRMS\nDuration 3 min per axis\n\nTable 8.12 List of connectors\n\nName Type Description\n\nJ1 SUB-D 25, male Solar panel 0, battery 0,\nJ2 SUB-D 25, male Solar panel 1, battery 1,\nJ3 SUB-D 25, male Solar panel 2, battery 2, EGSE power input, solar test\n\nstring\nJ4 SUB-HD 62, female S/C equipment power supplies I\n\n(including power lines for CCSDS-Boards 0 and 1)\nJ5 SUB-HD 62, female S/C equipment power supplies II\n\n(including power lines for OBC Processor-Boards\nN ? R and I/O-Boards N ? R)\n\nJ6 SUB-HD 62, female S/C equipment power supplies III\nJ7 SUB-D 25, female S/C equipment power supplies IV\nJ8 SUB-HD 62, male Temperature sensor inputs I\nJ9 SUB-HD 62, male Temperature sensor inputs II\nJ10 SUB-D 25, female Deployment sensor inputs; sun sensor inputs I\nJ11 SUB-D 9, male Communication interface for\n\nCommon Commanding and High Priority\nCommanding I\n\nJ12 SUB-D 9, male Communication interface for\nCommon Commanding and High Priority\nCommanding II\n\nJ13 SUB-D 25, female Sun sensor inputs II\n\n8 The Power Control and Distribution Unit 171\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_11\n\n\n8.10 PCDU Commands Overview\n\nThe PCDU provides a large number of commands for controlling all the described\nfunctions and for requesting the according telemetry for the processing activities\nby the OBSW. For details on the commands and telemetry messages, for the full\nlists and their detailed syntax and arguments the reader is kindly referred to the\nPCDU ICD from Vectronic Aerospace [85]. Below a brief overview is given to\ndepict the sophisticated features of the PCDU:\n\n\u2022 Power control commands\n\n\u2013 Status requests commands (e.g. currents and voltages of components, solar\npanels, batteries)\n\n\u2013 Control commands for all component LCLs, switches and relays\n\u2013 Adjustment commands for the over current monitoring by PCDU software\n\u2013 Adjustment commands for the charge regulation of the batteries.\n\n\u2022 Commands for Satellite Operations\n\n\u2013 Adjustment and status request commands of solar panel deployment\n\u2013 Status request commands of thermistor temperatures\n\u2013 Status request commands for sun sensors\n\u2013 Control and status request commands for solar panel test string measurement\n\u2013 Adjustment commands for the boot-up procedure and its prerequisites.\n\n\u2022 Reconfiguration Activities and FDIR commands\n\n\u2013 Adjustment and status request commands for the reconfiguration process of\nOBC units\n\n\u2013 Control and status request commands for internal PCDU controllers\n\u2013 Request commands for History Log.\n\n\u2022 Diverse Commands\n\n\u2013 PCDU Reset\n\u2013 Status Request commands for software version info.\n\n172 A. N. Uryu\n\n\n\nChapter 9\nCDPI System Testing\n\nMichael Fritz, Nico Bucher and Rouven Witt\n\n9.1 Introduction\n\nBoth the modularity and the novelty of the presented CDPI infrastructure require\nextensive system testing. These tests cover the fields of\n\n\u2022 hardware/software compatibility,\n\u2022 internal communication between Onboard Computer elements and\n\u2022 OBC communication with external equipment and infrastructure.\n\nM. Fritz (&) ? N. Bucher ? R. Witt\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: fritz@irs.uni-stuttgart.de\n\nN. Bucher\ne-mail: bucher@irs.uni-stuttgart.de\n\nR. Witt\ne-mail: witt@irs.uni-stuttgart.de\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_9,\n? Springer-Verlag Berlin Heidelberg 2013\n\n173\n\n\n\nFinally the complete communication chain has to be proven, covering\n\n\u2022 commanding the OBC unit from a ground control system,\n\u2022 controlling satellite equipment units connected to the OBC and\n\u2022 retrieving telemetry back through the entire chain.\n\nFailure Detection, Isolation and Recovery (FDIR) testcases come on top. This\nchapter provides a brief overview on the entire test program of the CDPI and gives\nan overview about tests of OBC components, OBC subsystem, PCDU subsystem\nup to the entire CDPI infrastructure system tests. A subset of the HW/SW inte-\ngration tests is described in more detail in [87].\n\nThe early tests were performed with Breadboard (BBM) and Engineering\nModels (EM). The OBC Processor-Board Engineering Model is depicted in\nFig. 1.8. BBMs and EMs do not yet have full FM functionality. Thus, additional\nFM tests are usually necessary later and tests previously performed for BBMs and\nEMs need to be re-run on the FM CDPI units. This BBM/EM approach however\nreduces the effort for test debugging on FM hardware\u2014which is available later in\nthe program\u2014and by this means it reduced the overall test program duration for\nthe entire campaign. Figure 1.17 depicts both parts of the CPDI\u2014the OBC Flight\nModel and the PCDU FM.\n\n9.2 Test Scope\n\nThe complexity of the tests required a consistent concept. This concept had to\ncover the following tasks:\n\n\u2022 Configuration tests of all OBC modules. This comprises read and write opera-\ntion from/to memory, IP Core updates as well as successful OBSW uploads and\nruns.\n\n\u2022 Communication tests between the OBC modules. The elements (boards and\nfunctional subgroups such as I/O-Board memory) must interact as specified.\nEMs were to be exchanged step by step by FMs. After each replacement, the\ntests needed to be re-run. Modules to test in interaction were:\n\n\u2013 CCSDS-Board and OBC Processor-Board\n\u2013 OBC Processor-Board and I/O-Board covering:\n\nequipment interface read/write access by OBC Processor Board via I/O-Board\ndrivers and\nhousekeeping data management on I/O-Board\n\n\u2013 OBC Processor-Board, I/O-Board and PCDU covering:\n\nPCDU cmd./ctrl. by OBC and\nOBC reconfiguration by PCDU\n\n\u2013 CCSDS-Board and PCDU\n\n174 M. Fritz et al.\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\n\u2022 System chain tests were necessary for controlling the CDPI from the Mission\nControl System ESA SCOS-2000 [88] via CCSDS protocol (see [23\u201328]) as\nforeseen for the target satellite through the frontend equipment to the CCSDS-\nBoard (Fig. 9.1).\n\n\u2022 System tests for the onboard chains between OBC and S/C equipment were\nnecessary, e.g. for PCDU, star tracker and reaction wheels. Such tests served to\nprove that specification requirements were implemented correctly both on OBC\nand on equipment side and in the OBSW.\n\n\u2022 Communication tests with simulated S/C equipment for Onboard Software\nverification. Thus, operational scenarios could be tested applying closed-loop\nscenarios without sensor stimulation.\n\n9.2.1 Test Conditions\n\nThe test conditions for functional tests are driven by\n\n\u2022 cleanliness,\n\u2022 temperature and\n\u2022 humidity.\n\nFor EMs the tests were performed under ambient conditions in an air-condi-\ntioned laboratory. For FMs all tests concerning boards or tests concerning inte-\ngrated units were performed exclusively in a temperature and humidity controlled\nclass 100.000/ISO 8 cleanroom at IRS premises.\n\nFig. 9.1 ESA mission control system SCOS-2000. ? IRS, University of Stuttgart\n\n9 CDPI System Testing 175\n\n\n\n9.2.2 Involved Personnel\n\nThis aspect is of key relevance for this particular university project since it had to\ncope with significant personnel fluctuation over the development period\u2014partic-\nularly in the domain of Assembly, Integration and Tests (AIT) of the CDPI. For all\nprojects it is necessary to determine between:\n\n\u2022 Engineering staff\u2014designing the foreseen tests up to a specification level and\n\u2022 AIT staff\u2014debugging the test flows, executing them and documenting the results.\n\nThe areas of responsibilities have to be clearly defined. This also applies for a\nuniversity project. However, some simplifications are necessary at university level\ndue to limited manpower and the requirement for lean system engineering. At\nuniversity, almost the entire team consists of students and PhD candidates, which\nimplies the high personnel fluctuation in the project. Students support the project\nfor less than 1 year, PhD candidates for 3\u20134 years. It is favorable to perform a\nlimited, clearly defined subset of the test campaign with the same set of people and\nthe next functional subset with the successor team to be as efficient as possible.\nTeam fluctuation in such a program implies the necessity to organize proper know-\nhow transfer and system test status handover from one to the next sub-team with\nsufficient handover time. Furthermore, a proper tracking of personnel to tests and\nof lessons learned is required. Such tasks are preferably assigned to PhD candi-\ndates due to their longer availability in the team.\n\nSince the OBC Processor-Board is an item subjected to ITAR, there were test\ntasks which could only be performed by authorized personnel.\n\n9.2.3 Test Program Simplifications\n\nAs already mentioned there were simplifications necessary in the test program\nwhich result from university constraints like\n\n\u2022 limited manpower,\n\u2022 limited experience and\n\u2022 budget.\n\nThese simplifications affected the entire functional verification program, par-\nticularly the hardware and software integration tests\u2014also due to the fact that the\nsatellite OBSW development program was running with a minimum staff. Thus, it\nhad to be elaborated where simplifications were feasible. This was a balancing\nbetween risk and schedule/cost efficiency. The most important simplification\nidentified in this program was a substantial reduction of unit tests at IRS, since\nexcept for the IRS-made OBC Power-Boards and the PCDU functional behavior\nthe commercially manufactured units already had undergone a test suite at supplier\nlevel. This reduced unit test program also implied skipping some tests on system\n\n176 M. Fritz et al.\n\n\n\nlevel. All mentioned considerations directly lead to a test plan which is presented\nin condensed form in the following section.\n\n9.3 Test Plan\n\nThis section provides a condensed overview on the most important elements of the\ntest plan which served as baseline for the qualification test campaign of the CDPI\nSystem. In order to keep the overview on the to be performed tests, to track test\nexecution status during the campaign and to track test success status, so called\nfunctional verification matrices were used. These FV matrices address the fol-\nlowing questions on:\n\n\u2022 Which tests have to be performed?\u2014Test scope\n\u2022 Which testbench is to be used?\u2014Test setup and environment\n\u2022 Which HW model is to be used in the test?\u2014BBM, EM or FM\u2014Item under test\n\nExact documentation of the used software version as well as TM/TC database\nwas essential in order to reproduce the tests\u2014especially if they had to be run on\nmultiple testbenches or with multiple hardware models (EM ? FM). Furthermore,\nthe test plan had to consider the test concept. It organized the order of tests,\ndescribed simplifications and served as documentation both for internal and\nexternal purposes. Furthermore, lessons-learned were part of this document in\norder to accumulate experience and knowledge.\n\nThe next step in the test program was to develop test procedures for each test\nidentified in the test plan. Then the tests had to be executed and test reports were to\nbe filled out for documentation. To simplify the overall procedure in the frame of\nthe university program, combined test procedure/report documents were\nestablished:\n\n\u2022 First the test procedure part was implemented, containing sections on test setup,\nrequired equipment/instrumentation, test conditions, personnel, etc. and finally\nat the end a step by step procedure to be executed with entry fields for expected\nand as received results. The latter column first remains empty.\n\n\u2022 Then the procedure was reviewed and formally signed off by the senior engineer\nof the program.\n\n\u2022 Thereafter the test was executed\u2014potential procedure variations directly were\nadded to the document and the as-is result was entered into the according column\ntogether with an OK/NOK information to track success/failure. Each test with\nFM HW was executed at least with 2 persons to guarantee 4 eyes principle.\n\nThe general component functional tests\u2014except for OBC reconfiguration\u2014unit\nperformance tests and all EM unit tests were executed on a dedicated Satellite Test\nBed which included a ground station frontend for the TC/TM traffic to/from the\nOBC on one side and a simulation of the target satellite on the backside. This\ntestbench (see Fig. 1.16) includes BBM/EM units of the OBC and PCDU. It does\n\n9 CDPI System Testing 177\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\nnot provide redundancy for the OBC units. The development of this testbed is\ndescribed in more detail in Sect. 9.5.\n\nThe tests requiring OBC redundancy and certain reconfiguration functionality\nof the PCDU were performed exclusively in the FM FlatSat setup of the project\n(see Fig. 1.17, 9.12) since some prerequisite features were not yet available in the\nPCDU EM.\n\nFunctional verification matrices in the tables presented on the following pages\nprovide a brief overview on all tests and show which kind of tests were performed\nin which particular setup.\n\nTest-types:\n\nQ = Qualification by the unit supplier\nBB = Bread Board Model test at IRS\nEM = EM Qualification test at IRS\nFM = FM Qualification tests at IRS\n\nTest-setups:\n\n\u2022 Test at supplier premises: supplier specific test infrastructure\n\u2022 Satellite Test Bed (STB) in configuration 1 and 2 as described in Sect. 9.5\n\u2022 FlatSat as described in Sect. 9.5\n\u2022 Test configuration for Thermal Vacuum (TV) Chamber\n\u2022 Test configuration for vibration test on Shaker\n\n9.3.1 PCDU Tests\n\nThe Power Control and Distribution Unit was completely qualified on supplier\nside. To prove compatibility with the CDPI System, an extensive series of com-\nmunication tests with the OBC was performed at IRS (Table 9.1). Since the PCDU\nis an essential element in the overall concept of the CDPI system it was also\nsignificantly involved in reconfiguration tests for the entire system\u2014see Table 9.7.\n\nTable 9.1 PCDU FV matrix\n\nPCDU Supplier STB\nconf.1\n\nSTB\nconf.2\n\nFlatSat Shaker TV\nchamber\n\nElectrical qualification tests Q \u2013 \u2013 \u2013 \u2013 \u2013\nShaker tests Q \u2013 \u2013 \u2013 \u2013 \u2013\nThermal vacuum tests Q \u2013 \u2013 \u2013 \u2013 \u2013\nPreliminary software tests Q \u2013 \u2013 \u2013 \u2013 \u2013\nInitial power-up Q \u2013 EM FM \u2013 \u2013\nCommunication tests with OBC:\nCmd./ctrl. interfaces and HPC interfaces\n\n\u2013 \u2013 EM FM \u2013 \u2013\n\n178 M. Fritz et al.\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\n9.3.2 Processor-Board Tests\n\nThe FM Processor-Boards were tested during the FlatSat campaign whilst the EM\nwas used to run test software with the connected satellite simulation environ-\nment\u2014the STB. The FM Boards were operated exclusively under cleanroom\nconditions for the FlatSat tests (Table 9.2). It is envisaged to use the Satellite Test\nBed with the Processor-Board EM later for system simulations on ground during\nPhase E of the mission as well as for pretests of OBSW patches before uplinking\nthem to the spacecraft in orbit.\n\n9.3.3 Power-Board Tests\n\nTests for the Power-Boards were focused on verifying the requirements to be met\nby each Power-Board. The most critical phase regarding voltage control is during\nthe startup process of the connected OBC data handling boards. More details on\nthis topic are provided in Sect. 5.2. Further tests were conducted to verify signal\nconversion of the GPS PPS signals and STR PPS and their routing to an external\nOBC connector. Please see Chap. 5. Dedicated unit shaker tests were performed\nonly with the EM in order to avoid damaging of flight hardware (Table 9.3).\n\nTable 9.2 Processor-Board FV matrix\n\nProcessor-Boards Supplier STB\nconf.1\n\nSTB\nconf.2\n\nFlatSat Shaker TV\nchamber\n\nInitial power-up \u2013 EM EM FM \u2013 \u2013\nCharacterization of electrical parameters:\nPower consumption, inrush current at\npower-up, etc\n\n\u2013 EM EM FM \u2013 \u2013\n\nTest boot process from FRAM \u2013 EM EM FM \u2013 \u2013\nTest reboot process from SRAM \u2013 \u2013 EM FM \u2013 \u2013\nTest PPS output \u2013 \u2013 EM FM \u2013 \u2013\nTest PPS Input \u2013 \u2013 EM FM \u2013 \u2013\nTest FPU functionality \u2013 EM EM FM \u2013 \u2013\nTest debug I/O functionality \u2013 EM EM FM \u2013 \u2013\nTest of SpaceWire ports 1\u20134 \u2013 EM EM FM \u2013 \u2013\n\nThermal qualification Q \u2013 \u2013 \u2013 \u2013 \u2013\n\nMechanical qualification:\nFM qualification in the frame of the overall\nsatellite vibration and shock test campaign\n\n\u2013 \u2013 \u2013 \u2013 FM \u2013\n\n9 CDPI System Testing 179\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_5\n\n\n9.3.4 CCSDS and I/O-Board Tests\n\nThe PCBs for I/O-Boards and CCSDS-Boards are based on the same design and\nthe hardware of both board types is manufactured by 4Links Ltd. Therefore, basic\nhardware qualification for both boards was performed on supplier side except for\nenvironmental tests. This environmental qualification was performed by IRS in\nthe frame of the overall mechanical and thermal spacecraft test campaign\n(Tables 9.4, 9.5).\n\nTable 9.3 Power-Board FV matrix\n\nPower-Boards Supplier STB\nconf.1\n\nSTB\nconf.2\n\nFlatSat Shaker TV\nchamber\n\nTest supply voltage for Processor-Board \u2013 \u2013 EM FM \u2013 \u2013\nTest supply voltage for I/O-Board \u2013 \u2013 EM FM \u2013 \u2013\nTest supply voltage for CCSDS-Board \u2013 \u2013 EM FM \u2013 \u2013\nTest priority circuit function \u2013 \u2013 EM FM \u2013 \u2013\nTest power for OBC heaters \u2013 \u2013 EM FM \u2013 \u2013\nTest conversion of PPS signal \u2013 \u2013 EM FM \u2013 \u2013\nTest signal forwarding for debug output \u2013 \u2013 EM FM \u2013 \u2013\n\nShaker test \u2013 \u2013 \u2013 \u2013 EM \u2013\n\nThermal Qualification:\nFM qualification in the frame of the\noverall satellite TV test campaign\n\n\u2013 \u2013 \u2013 \u2013 \u2013 FM\n\nTable 9.4 CCSDS-Board FV matrix\n\nCCSDS-Boards Supplier STB\nconf.1\n\nSTB\nconf.2\n\nFlatSat Shaker TV\nchamber\n\nTest IP core upload Q \u2013 EM \u2013 \u2013 \u2013\nTest SpaceWire interface Q BB EM FM \u2013 \u2013\nTest RMAP access to memory Q BB EM FM \u2013 \u2013\nTest HPC forwarding \u2013 BB EM FM \u2013 \u2013\nTest telecommand decoding \u2013 BB EM FM \u2013 \u2013\nTest telemetry encoding \u2013 BB EM FM \u2013 \u2013\n\nMechanical qualification:\nFM qualification in the frame\nof the overall satellite vibration\nand shock test campaign\n\n\u2013 \u2013 \u2013 \u2013 \u2013 FM\n\nThermal qualification:\nFM qualification in the frame\nof the overall satellite TV test\ncampaign\n\n\u2013 \u2013 \u2013 \u2013 \u2013 FM\n\n180 M. Fritz et al.\n\n\n\nFor preliminary tests Breadboard Models were used while assembling the\nSatellite Test Bed infrastructure. The BBM for the CCSDS-Board was provided by\nAeroflex Gaisler. 4Links provided the BBM for the I/O-Board in the form of a\npartially populated PCB. Later in the project a full I/O-Board EM was supplied by\n4Links.\n\n9.3.5 OBC Subsystem Tests\n\nThe OBC subsystem was assembled from the diverse delivered boards plus the\nOBC internal harness in the cleanroom at IRS premises. Therefore, it also had to\nbe electrically and functionally qualified by the IRS team. This qualification was\nperformed within the FlatSat test campaign. Board and unit thermal qualification\ncould also be performed in-house while vibration and shock tests were only per-\nformed externally in the frame of the shaker tests of the completely integrated\nsatellite for reduced stress of the CDPI components (Table 9.6).\n\nTable 9.5 I/O-Board FV matrix\n\nI/O-Boards Supplier STB\nconf.1\n\nSTB\nconf.2\n\nFlatSat Shaker TV\nchamber\n\nTest IP core upload Q BB EM \u2013 \u2013 \u2013\nTest SpaceWire interface Q BB EM FM \u2013 \u2013\nTest RMAP and RMAP error codes Q BB EM FM \u2013 \u2013\nCheck RMAP access to NVRAM Q \u2013 EM FM \u2013 \u2013\nCheck RMAP access to SRAM Q \u2013 EM FM \u2013 \u2013\nCheck RMAP access to transmission\nbuffer\n\nQ BB EM FM \u2013 \u2013\n\nTest RS422 interface Q BB EM FM \u2013 \u2013\nTest LVDS interface Q \u2013 EM FM \u2013 \u2013\nTest IIC interface Q \u2013 EM FM \u2013 \u2013\nTest FOG interface Q \u2013 EM FM \u2013 \u2013\nTest logical interface Q \u2013 EM FM \u2013 \u2013\n\nMechanical qualification:\nFM qualification in the frame\nof the overall satellite vibration\nand shock test campaign\n\n\u2013 \u2013 \u2013 \u2013 \u2013 FM\n\nThermal qualification:\nFM qualification in the frame of the\noverall satellite TV test campaign\n\n\u2013 \u2013 \u2013 \u2013 \u2013 FM\n\n9 CDPI System Testing 181\n\n\n\n9.3.6 CDPI Reconfiguration Tests\n\nThe CDPI reconfiguration test series was targeted to prove the redundancy man-\nagement of the CDPI system. The reconfiguration functionality is controlled by the\nCDPI Common-Controller which in this implementation is the processor of the\nPCDU. The test series included basic switching between single nominal and\nredundant boards by externally commanded HPCs as well as by automatic routines\nof the PCDU. The final test was an artificially created, critical outage of one\nProcessor-Board. The system needed to successfully recover automatically back to\nan operational configuration and within specified parameters in order to pass the\ntest (Table 9.7).\n\nFor the overall test campaign a distinction between Engineering Model tests\n(EM tests) and flight model tests (FM tests) had to be made. Both groups of tests\ninvolved different hardware and had completely different objectives.\n\nThe objective of the EM tests was to functionally verify the system itself. This\ncovers interface tests and the first assembly of all EM parts where subsequently\ncomplexity was added until one non redundant OBC EM was complete and all\ninterfaces were tested and working as desired. This EM of the OBC is powered by an\nexternal power supply\u2014not via Power-Boards and therefore doesn\u2019t represent the\ncomplete system as it is used within the satellite. Such limitations were the reason\n\nTable 9.6 OBC subsystem tests FV matrix\n\nOBC subsystem Supplier STB\nconf.1\n\nSTB\nconf.2\n\nFlatSat Shaker TV\nchamber\n\nElectrical verification \u2013 \u2013 EM FM \u2013 \u2013\nTest SpaceWire/RMAP access to\nI/O-Board\n\n\u2013 \u2013 EM FM \u2013 \u2013\n\nTest SpaceWire RMAP access to\nCCSDS-Board\n\n\u2013 \u2013 EM FM \u2013 \u2013\n\nTest access to debug interface \u2013 \u2013 EM FM \u2013 \u2013\nTest OBC service interface \u2013 \u2013 EM FM \u2013 \u2013\nTest PPS synchronization \u2013 \u2013 \u2013 FM \u2013 \u2013\nTest spacecraft units electrical integration\nwith OBC\n\n\u2013 \u2013 \u2013 FM \u2013 \u2013\n\nTable 9.7 CPDI reconfiguration FV matrix\n\nCDPI reconfiguration Supplier STB\nconf.1\n\nSTB\nconf.2\n\nFlatSat Shaker TV\nchamber\n\nTest switching nom./red. I/O-Board \u2013 \u2013 \u2013 FM \u2013 \u2013\nTest switching nom./red. Processor-Board \u2013 \u2013 \u2013 FM \u2013 \u2013\nTest HPC forwarding and execution \u2013 \u2013 \u2013 FM \u2013 \u2013\nTest automatic reconfiguration by PCDU \u2013 \u2013 \u2013 FM \u2013 \u2013\nComplete CDPI recovery test \u2013 \u2013 \u2013 FM \u2013 \u2013\n\n182 M. Fritz et al.\n\n\n\nwhy only functional tests could be performed on the STB. This resulted in leaving out\nall tests regarding power supply and redundancy. After the test had passed, the EM\nwas used to conduct simulation tests with the real-time simulator, i.e. attitude control\ntest scenarios, and will also be used during the mission to verify software updates.\n\nThe focus for FM tests was on reliability aspects and CDPI redundancy man-\nagement. Compared to EM tests, the group of tests for the FM follows a different path.\nThe main objective was to qualify the FM system for space. This means the entire\nsystem including Power-Boards had to be assembled and tested thoroughly under\nclean-room conditions. In this setup tests like OBC reconfiguration between nominal\nand redundant Processor-Board and I/O-Board were performed interactively with the\nPCDU. Nevertheless, the FM OBC had to undergo similar interface tests as con-\nducted for the EM too but for the FM additional safety aspects came into play.\n\n9.4 EM Testbench Infrastructure\n\nThe Satellite Test Bed described in Sect. 9.2 is schematically depicted in Figs. 9.2\nand 9.3. The first line in Fig. 9.3 represents the command/control infrastructure\nwhich is representative for what will later be used in the satellite ground station.\nAll parts of the OBC are depicted in the second line. The third line shows a\nsimulation environment for OBSW verification.\n\nOne part of the command/control infrastructure is the ESA Mission Control\nSystem SCOS-2000 shown in the middle of the top line. It supports telecommand/\ntelemetry data handling, visualization and packet processing and is applied as\nstandard tool in ESA and DLR satellite project ground infrastructures. In order to\nconvert TC and TM packets into formats which are suitable for lossless trans-\nmission, there is a Telemetry and Telecommand Frontend implemented which\nperforms the transformation of TC packets to Command Link Transmission Units\n(CLTU) and vice versa of Channel Acquisition Data Units (CADU) back to TM\npackets for the ground.\n\nOBC\n\nS\nim\n\nul\nat\n\nor\n K\n\ner\nne\n\nl\n\nSimulator I/O \n\nS/C Simulator\n\nTestbench LAN\n\nPower\nFront-\nend\n\nTM/TC\nFront-\nend\n\nControl\nConsole\n\nEquipment\nModel\n\nEquipment\nModel\n\nEquipment\nModel\n\nEquipment\nModel\n\nS\nys\n\nte\nm\n\n M\nod\n\nel\ns \n\n(E\nnv\n\n./D\nyn\n\n./e\ntc\n\n.)\n\nFig. 9.2 STB with complete OBC in the loop. ? Jens Eickhoff [9]\n\n9 CDPI System Testing 183\n\n\n\nThe procedure execution engine MOIS from RHEA Group is integrated to\nexecute sequences of commands, so-called Flight Procedures. The Onboard\nComputer is connected to this environment applying cables which bypass the radio\ntransmission link. Fictive transmission errors can be artificially injected into the\nTM/TC-Frontend in order to test on board forward error correction.\n\nFigure 1.16 in Chap. 1 \u2018\u2018The System Design Concept\u2019\u2019 depicts the real setup.\nThe screens on the left belong to the command/control infrastructure. Onboard\nComputer and simulator are located in the rack on the right side. On-board\nequipment can be added onto the grounded table on the very right of the STB setup.\n\nThe testbench needed to comply to several requirements:\n\n\u2022 Correct grounding is essential to prevent both ground loops and unintended\nelectrostatic discharging. It was necessary to carefully design a grounding\nconcept for all mounted units which was verified by measurements.\n\nFig. 9.3 Testbench schematic. ? IRS, University of Stuttgart [87]\n\n184 M. Fritz et al.\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\n\u2022 The power supply for the testbench electronic components in the rack had to be\nindependent from primary power fluctuations. This comprised both blackouts\nand overvoltages. A non-interruptable power supply was integrated to act as\nbuffer between primary network power and consumers.\n\n\u2022 Due to the OBC Processor-Boards falling under ITAR regulations, access to OBC\ncomponents had to be restricted to authorized personnel. However full setup\nconfiguration for all non ITAR elements of the testbench was required and so was\n\n\u2022 quick access for installation and de-installation of both OBC EM components\nand equipment.\n\nAll requirements together lead to a rack based design solution. Based on a UPS\nand a remote power switch, the power supply fulfills all requirements. The rack\nitself provides a star point for correct grounding. The rack can be locked. As the\nrack frontend only consists of one plug for mains power supply and one Ethernet\nconnector, it is simple to move. In order to keep the temperature at an acceptable\nlevel, a temperature-controlled ventilation is installed at the top side of the rack.\n\n9.5 EM Test Execution and Results\n\nThe testbed in Fig. 1.16 for the performed EM tests in its full deployment is called a\nSatellite Test Bed or STB (see also [9]). In an initial configuration CDPI component\nbreadboard versions were tested (Fig. 9.4). In an upgraded setup 2 the EM hardware\nwas tested (still non redundant). Full CDPI redundancy and reconfiguration testing\nwas performed on the FLP satellite FlatSat setup later\u2014see Sect. 9.6.\n\nS\nim\n\nul\nat\n\nor\n K\n\ner\nne\n\nl\n\nSimulator I/O \n\nS/C Simulator\n\nTestbench LAN\n\nPower\nFront-\nend\n\nTM/TC\nFront-\nend\n\nOBC\n\nEquipment\n\nControl\nConsole\n\nEquipment\nModel\n\nEquipment\nModel\n\nEquipment\nModel\n\nS\nys\n\nte\nm\n\n M\nod\n\nel\ns \n\n(E\nnv\n\n./D\nyn\n\n./e\ntc\n\n.)\n\nFig. 9.4 EFM testbed with S/C equipment hardware connected to OBC. ? Jens Eickhoff [9]\n\n9 CDPI System Testing 185\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\nBoth the I/O-Boards and the CCSDS-Boards of the OBC are FPGA based. The\nIP Core of each board was updated several times during the test program in order to\ninstall new respectively corrected functionality. The FPGAs are programmable via\na JTAG Interface. The JTAG pins are located on the 100 pin Micro-D connectors E\nof each board as described in Sect. 3.8 respectively in the according annex tables.\n\n9.5.1 STB Tests Stage 1: Connecting OBC Processor-Board\nand S/C-Simulator\n\nFor stage 1 the connection between the OBC Processor-Board EM and the Real-\ntime Simulator (RTS) was established. Therefore a SpaceWire Router manufac-\ntured by 4Links was used. The Realtime Simulator (RTS) uses a standard Ethernet\nconnection for communication with the 4Links SpaceWire Router. The SpaceWire\nRouter was connected on the other side to the same SpaceWire port of the OBC\nProcessor-Board that I/O-Board normally would use. This is why either the RTS or\nthe real I/O-Board can be used\u2014not both in parallel. The RTS holds a simulated\nFront-End which acts as a replacement for the actual I/O-Board (Fig. 9.5).\n\n9.5.2 STB Tests Stage 2: Connecting OBC Processor-Board\nand CCSDS-Board\n\nAfter connecting the RTS to the OBC Processor-Board it was possible to conduct\nsimulation tests focusing on the device handling part of the OBSW. However, to\nreasonably control and monitor the OBSW telecommanding and telemetry han-\ndling is required. Therefore as next step, the CCSDS-Board was taken into\noperation (Fig. 9.6).\n\nCore I/O\n\nOnboard Computer\n\nCCSDS-Board\nBBM\n\nProcessor-Board\nEM\n\nI/O-Board\nEM\n\nSpWR RTS\n\nReal-Time Simulator\n\n4Links SpW Router Real-Time Simulator\n\nCCSDS\n\nFig. 9.5 Connecting processor-board and S/C simulator. ? IRS, University of Stuttgart\n\n186 M. Fritz et al.\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_3\n\n\nThe preliminary OBSW used for this stage had to configure CCSDS-Board\nparameters such as link encoding and decoding settings, Spacecraft Identifier,\nsymbol-rates and clock dividers. Also TC reception buffers were configured by this\nOBSW release.\n\n9.5.3 STB Tests Stage 3: Entire Command Chain Bridging\nthe RF Link\n\nThe test infrastructure concept was to conduct all tests with a command/control\ninfrastructure that also will be used during the mission in flight. The only hardware\npart that cannot be used within a laboratory environment is the Radio Frequency\n(RF) equipment. To bridge the RF link in the test setup, a bypass is used. The\nuplink input for the bypass line is the clock-driven synchronous signal that will\nlater be the input for the baseband up and down-converters. This signal corre-\nsponds to the line signal from the onboard receiver to the OBC\u2019s CCSDS-Boards.\nSimilarly the downlink signal on the bypass line is the encoded output of the\nCCSDS-Boards which normally would be routed to the spacecraft\u2019s transmitters.\nIn the bridge it is directly connected to the telemetry decoding frontend in the\nground infrastructure. The connection is physically realized by an RS422 interface.\nThis chain test served for:\n\n\u2022 Testing High Priority Command reception and routing (RS422)\n\u2022 Testing command reception using OBSW\n\u2022 Testing telemetry generation by the OBSW\n\u2022 Testing TM Idle Frame generation and reception on ground\n\nCore I/O\n\nOnboard Computer\n\nCCSDS-Board\nBBM\n\nProcessor-Board\nEM\n\nI/O-Board\nEM\n\nSpWR RTS\n\nReal-Time Simulator\n\n4Links SpW Router Real-Time Simulator\n\nCCSDS\n\nFig. 9.6 Connecting Processor-Board and CCSDS-Board. ? IRS, University of Stuttgart\n\n9 CDPI System Testing 187\n\n\n\nFigure 9.7 shows all involved components and CCSDS layer conversions [24].\nThe ground control system i.e. SCOS-2000 operates on the packetization layer.\nThese packets are forwarded and returned to and from the TM/TC-Frontend via\nTCP/IP using the facility LAN. The TM/TC-Frontend can be operated either alone\nor in combination with radio frequency up and down-converters as an RF-SCOE for\nRF tests. For this stage of EM tests only the TM/TC-Frontend was used. It handles\nconversions between packetization layer and coding layer. On the corresponding\nside these conversions are partly done by the CCSDS-Board and the OBSW.\n\nSince the bypass line is a synchronous connection, the correct interpretation of\nthe clock signal is mandatory for this link. If the clock signal on the submitting side\nis valid on the rising flank, it has to be read out by the receiver on the rising flank,\ntoo. Otherwise the interpretation gets screwed up and corruption of data will occur.\n\nBoth interfaces as well as the cable-bridge have proven to be compatible. TC\nFrames that have been sent to the CCSDS-Board have been stored in full integrity\nwithin the TC Buffer. From this point onwards it is the responsibility of the OBSW\nto manage this buffer and to forward the packets to their designated PUS Terminal.\n\nTo test the TM link direction, generic TM frames have been created by the\nOBSW and forwarded to the CCSDS-Boards memory. The TM stream conversion\nis part of the functionality of the CCSDS-Board. The packets were then extracted\nby the TM/TC-Frontend and forwarded to the Mission Control System where they\ncan be prepared for display (Fig. 9.8).\n\nPck. Layer\n\nSegm. Layer\n\nFrame Layer\n\nCLTU Layer\n\nDecoder / Encoder\n\nOBC Processor Board\n\nNRZ-L\n\nNRZ-L\n\nPckt.\n\nSCOS / MOIS\n\nTM/TC-FE\n\nCCSDS Board\n\nSBC Board\n\nNRZ-L cable bridge\n\nR\nF\n\n-S\nC\n\nO\nE\n\nCADU Layer\n\nGnd Ctrl System,\nTM/TC-DB\n\nScript Engine\n\nPck. Layer\n\nFrame Layer\n\nFig. 9.7 TM/TC chain overview. ? IRS, University of Stuttgart\n\n188 M. Fritz et al.\n\n\n\nThe OBSW is responsible for configuring the CCSDS-Board. It can configure\ne.g. the TM transmission rate and other mission specific parameters needed for\ngeneration of TM frames as well as the correct interpretation of TC frames. The\naccording details can be found in Chap. 4.\n\n9.5.4 STB Tests Stage 4: Verify High Priority Commanding\n\nHigh Priority Commands (HPCs) are an essential means for the safety concept of\nthe spacecraft system design. With HPC type 1 commands certain emergency\nshutdown and reconfiguration functions can be commanded from ground without\nan OBSW running on board the spacecraft. Therefore the CCSDS-Board func-\ntionalities which directly forward HPC1 packets to the CDPI Common-Controller\nin the PCDU were tested. The command concept in this implementation foresees\nthe identification of HPCs by Virtual Channels (see Fig. 1.11) and not by MAP-ID\n(see also [10]).\n\nReceived HPCs are submitted directly from the CCSDS-Board to the PCDU.\nThis is why for this test an EM of the PCDU was required. The PCDU EM was\nplaced in the hardware test frame right next to the STB rack (see Fig. 1.16). It was\ndirectly connected to the HPC UART ports of the CCSDS-Board (Fig. 9.9).\n\nMOIS SCOS TMTC\n\nGround Station Equipment\n\nProcedure Execution\nEngine (MOIS)\n\nMission Control \nSystem\n\nTelemetry &  \nTelecommand\n\nFront-End\n\nCore I/O\n\nOnboard Computer\n\nCCSDS-Board\nBBM\n\nProcessor-Board\nEM\n\nI/O-Board\nEM\n\nSpWR RTS\n\nReal-Time Simulator\n\n4Links SpW Router Real-Time Simulator\n\nCCSDS\n\nFig. 9.8 Entire command chain bridging RF link. ? IRS, University of Stuttgart\n\n9 CDPI System Testing 189\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_4\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\n\n\n9.5.5 STB Tests Stage 5: Commanding Equipment Unit\nHardware\n\nFor commanding actual hardware devices, the preliminary version of the OBSW\nneeded to provide at least rudimentary device handling capability. Once this\nrequirement was met, the I/O-Board could be integrated into the STB followed by\na series of tests that firstly verified the proper SpaceWire address mapping of each\ndevice. Furthermore, these tests served to check whether the I/O-Board input and\noutput signals were interpreted respectively generated correctly. In the STB each\ndevice interface then was tested by connecting an engineering model of the\naccording spacecraft equipment hardware to the corresponding I/O-Board\ninterface.\n\nWith the possibility of connecting actual EM devices to the I/O-Board, the\nassembly of the STB was completed. The OBC EM now could be operated from\nthe Mission Control System while the OBC either was connected to the RTS for\nsimulation of scenarios or to real EM hardware for interface tests. In summary the\nfollowing types of tests were performed:\n\nMOIS SCOS TMTC\n\nGround Station Equipment\n\nProcedure Execution\nEngine (MOIS)\n\nMission Control \nSystem\n\nTelemetry &  \nTelecommand\n\nFront-End\n\nCore I/O\n\nOnboard Computer\n\nCCSDS-Board\nBBM\n\nProcessor-Board\nEM\n\nI/O-Board\nEM\n\nSpWR RTS\n\nReal-Time Simulator\n\n4Links SpW Router Real-Time Simulator\n\nPCDUCCSDS\n\nFig. 9.9 Verification of high priority commanding. ? IRS, University of Stuttgart\n\n190 M. Fritz et al.\n\n\n\n\u2022 Test of high priority commanding with PCDU\n\u2022 Test of regular commanding with PCDU\n\u2022 Test of each UART Interface\n\u2022 Test of IIC Bus communication with MGT EM electronics\n\u2022 Test of communication with FOG EMs\n\nThe final STB setup is depicted in Fig. 9.10. This setup is referred to as \u2018\u2018STB\nConfiguration 2\u2019\u2019 in the test matrices in Sect. 9.3 and will remain unchanged until\nthe end of the mission.\n\n9.5.6 STB Tests Stage 6: Performance Tests with Attitude\nControl Software\n\nA further type of tests concerns some early performance tests which were run to\nevaluate the CPU load induced by the Onboard Software in realistic load cases\u2014\nmore complex than only small channel access tests, boot or debug testcases. The\n\nMOIS SCOS TMTC\n\nGround Station Equipment\n\nProcedure Execution\nEngine (MOIS)\n\nMission Control \nSystem\n\nTelemetry &\nTelecommand\n\nFront-End\n\nCore I/O\n\nOnboard Computer\n\nCCSDS-Board\nEM\n\nProcessor-Board\nEM\n\nI/O-Board\nEM\n\nSpWR RTS\n\nReal-Time Simulator\n\n4Links SpW Router Real-Time Simulator\n\nEquip-\nment\n\nCCSDS\n\nFig. 9.10 Commanding simulated S/C equipment and hardware in the loop. ? IRS, University\nof Stuttgart\n\n9 CDPI System Testing 191\n\n\n\ntests were run on STB with the EM OBC connected to the spacecraft simulator\nrunning attitude control scenarios for the FLP target satellite. The Attitude Control\nSystem (ACS) software implements preliminary control functions which were\ndesigned in Simulink?, converted to C++ and integrated into the OBSW\nframework.\n\nAll test showed good results with respect to minor control precision errors due\nto the early stage of the OBSW. The attitude control system provides a good\nexample for numeric load tasks which the system has to cope with during oper-\nation. The ACS controller software represents one application module in the\nOBSW framework and accesses diverse equipment handlers for all the ACS\nsensors and actuators. In addition to pure data handling functions like TC handling\nand TM generation in OBSW the ACS is also performing significant floating-point\ncalculations and thus complements the scope of used processor functionality of the\nLEON3FT, namely the extensive use of the processor\u2019s floating point unit.\n\nAfter successful debugging of the ACS test scenario, a performance analysis\nwas conducted in order to estimate margins of available processing time. For this\ntest, the CPU time of the ACS task was measured. A design guideline for the\noverall system was to keep the CPU time for ACS below 33 % of the overall CPU\nload. Figure 9.11 shows a CPU load result summary from multiple test scenarios\nwith the ACS subsystem controlling the satellite in its different operational modes\n(x-Axis). As can be seen, even normal target pointing mode consumes only a bit\nmore than 20 % of CPU load thanks to the high CPU performance of the\nLEON3FT. Only with activated additional numeric filter the limit is reached as\nworst case. The blue bars for device handling represent the CPU load for access of\nACS sensor and actuator equipment. Since I/O access timings are fixed in a\ncommon polling sequence table over all operational modes of the software this\nload is not influenced by the complexity of the ACS computations.\n\nFig. 9.11 Performance test results example. ? IRS, University of Stuttgart\n\n192 M. Fritz et al.\n\n\n\n9.6 FM Test Execution and Results\n\nAll FM components have to be operated and stored under clean room conditions.\nTo test these components, a so-called FlatSat assembly was built up in the IRS\nclean room. This assembly in its full deployment consists of all FM components of\nthe satellite. For the FlatSat assembly, all satellite components are electrically\nconnected together on a table to check the proper operability of the complete\nsatellite system. It serves as a final interface test environment before equipment is\nintegrated into the structure of the satellite. The FlatSat starts out with the CDPI\nsystem units, the OBC and the PCDU plus a power supply replacing the Solar\nPanels, and expands until the complete S/C system is assembled.\n\nFigure 9.12 provides an outline of the FlatSat assembly of the FLP project. For\na better overview the figure illustrates only a subset of the overall equipment\nassembly as far as relevant for the CDPI testing and as far as including the\nfunctional connections of the main technical units. The Command and Data\nHandling subsystem and the Power Subsystem are shown with their distinct\nsubunits. All remaining subsystems that are composed of multiple component\nboxes are illustrated in an abstracted view. An additional simplification is achieved\nby the illustration of only one side of the redundant component sets and conse-\nquently also by leaving out cross-strappings.\n\nThe EGSE that is necessary for the control of the simulator and the FlatSat\nassembly incorporates control applications for:\n\n\u2022 Flight procedure execution which again was realized by a second instance of\nMOIS supplied by RHEA Group\n\nMOIS Script \nEngine\n\nSCOS Control\nStation\n\nOBC Config. \nPC\n\nTM/TC-\nFrontend\n\nModulator/ \nDemodulator\n\nTransceivers\n\nCCSDS \nBoards\n\nBattery\n\nSolar Array \nSimulator\n\nThermal Ctrl. \nSubsystem\n\nAttitude Ctrl. \nSystem\n\nPayloads\n\nR\nF\n\n-S\nC\n\nO\nE\n\nEGSE\n\nPwr. Subsystem\n\nCombined Data and Power\nManagement Infrastructure\n\nPCDU\n\nProcessor\nBoards\n\nI/O-Boards\n\nS/C Simulator\n\nOBC Unit\n\nP\now\n\ner\n B\n\noa\nrd\n\ns\n\nFig. 9.12 Functional overview of the FlatSat assembly. ? IRS, University of Stuttgart\n\n9 CDPI System Testing 193\n\n\n\n\u2022 Mission control realized again via a SCOS-2000 provided by ESA/ESOC\n\u2022 Simulating the transmission between ground and satellite by a Radio Frequency\n\nSpecial Check-Out Equipment (RF-SCOE) from Satellite Services B.V.\n\u2022 Uploading and patching the OBC S/W via an OBC configuration PC.\n\nSo except for providing also RF-Link test functionality the FlatSat EGSE could\nbe kept almost identical to the command and control infrastructure used for the\nSTB which was a strategic issue to avoid running EM and FM tests with different\ninfrastructures. By this means a maximum similarity for test setups and procedures\nbetween the testbenches could be achieved and as a consequence also a maximum\ncomparability of the test runs and results. The used RF-SCOE consists of two\nparts. A TM/TC-Frontend as in the EM STB covers the transmission coding and\ndecoding functionality. The system is complemented by a modulation/demodu-\nlation unit respectively which prepares commands or receives telemetry packets\nfor transmission.\n\nThe performed system tests with the completely assembled OBC and the CDPI\nreconfiguration tests can be taken from the test matrices presented in Sect. 9.3.\n\n194 M. Fritz et al.\n\n\n\nChapter 10\nThe Research Target Satellite\n\nHans-Peter R\u00f6ser and FLP Team\n\n10.1 Introduction\n\nThe FLP is the first in a series of planned satellites implemented in the frame of the\nSmallSat Program of the IRS at the University of Stuttgart, Germany. It is being\ndeveloped and built primarily by PhD and graduate students funded by the major\nindustry partner Astrium (Astrium Satellites GmbH and its daughter TESAT\nSpacecom), by space agency and research facilities (German Aerospace Center,\nDLR) and contributing other universities. The project is financed by the federal\nstate of Baden-W\u00fcrttemberg, the university and industry partners. Current devel-\nopment status is assembly Phase D with a functional test program on the FlatSat\ntestbench and the qualification of a structural/thermal model of the flight structure.\nThe flight hardware units have been built at IRS or have been procured and unit as\nwell as system and OBSW tests are still ongoing.\n\nH.-P. R\u00f6ser (&) ? FLP Team\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: roeser@irs.uni-stuttgart.de\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_10,\n? Springer-Verlag Berlin Heidelberg 2013\n\n195\n\n\n\nA main project goal for the industry partners is to qualify electronic components\nfor space, in particular the elements of the innovative, integrated OBC/PCDU\ninfrastructure CDPI. For the university it is to establish the expertise and infra-\nstructure for development, integration, test and operations of satellites at the IRS. It\nis also used to improve the education of students by providing a possibility for\nhands on experience within a challenging space project. Once in orbit, the satellite\nshall be used to demonstrate new technologies and to perform Earth observation.\n\nThe FLP is three-axis stabilized and features target pointing capabilities. The\ntotal pointing error during one pass is less than 150 arcsec and the pointing\nknowledge is better than 7 arcsec. To achieve these values, state of the art star\ntrackers, magnetometers and fiberoptic gyros as well as GPS receivers are used to\nmeasure the attitude. Reaction wheels and magnetotorquers are used as actuators.\nAs an asset, the star trackers can also be used in camera mode to search for both\nInner Earth Asteroids and Near Earth Asteroids. The FLP is not equipped with any\nmeans for propulsion or orbit control (Table 10.1).\n\n10.2 Orbit and Operational Modes\n\nThe satellite has been designed for a circular Sun-Synchronous Orbit (SSO) with a\nLocal Time of Descending Node (LTDN) between 9:30 and 11 h. As the opera-\ntional lifetime of the satellite is targeted to be two years and the satellite should not\nstay in orbit for more than 25 years after end of life (considering the European Code\nof Conduct on Space Debris Mitigation), the desired orbital altitude is between 500\nand 650 km. For de-orbiting after operational use the satellite is equipped with an\nexperimental De-Orbiting Mechanism (DOM) from Tohoku University, Japan.\n\n10.3 Mechanical Design and Launcher Interface\n\nThe FLP is a cuboid with two deployable solar panels. It has an estimated total\nmass of less than 130 kg. The exact mass cannot be provided before completion of\nthe flight harness manufacturing. Figure 10.1 shows the satellite configuration with\n\nTable 10.1 Satellite\ncharacteristics\n\nDimensions 60 9 70 9 80 cm3\n\nMass 130 kg\nLaunch type Piggy-back (secondary payload)\nDesired orbit Circular, polar\nOrbit altitude 500\u2013800 km\nAttitude control 3-axis stabilized\nCommunications S-Band\nSolar panels 3(2 deployable)\n\n196 H.-P. R\u00f6ser\n\n\n\ndeployed solar panels. Its main dimensions during launch with undeployed solar\npanels are 600 by 702 by 866 mm as depicted in Fig. 10.2. An adapter ring to the\nlauncher adapter is installed on the satellite. The depicted variant was designed to\nbe compliant to the PSLV piggy-back separation adapter. For alternative launch\nvehicles this still can be adapted accordingly. It needs to be noted that the\ndeployable De-Orbiting Mechanism (DOM) is located inside the launch adapter\nring.\n\nThe structure of the FLP is designed to be a hybrid structure. The lower part is\nmade of integral aluminum parts and the upper part, where the optical payloads are\ninstalled, consists of carbon-fiber reinforced sandwich structures which provide a\nmore stable alignment of the cameras due to their low thermal expansion. The\nThermal Control System (TCS) of the satellite consists of several temperature\nsensors and heaters inside the satellite as well as Multi Layer Insulation and\nradiators on the outside. No active cooling system is used.\n\nFig. 10.1 FLP in-orbit simulation and mechanical configuration. ? IRS, University of Stuttgart\n\n10 The Research Target Satellite 197\n\n\n\nFl\nyi\n\nng\n L\n\nap\nto\n\np \nLa\n\nun\nch\n\n C\non\n\nfig\nur\n\nat\nio\n\nn\nLe\n\nng\now\n\nsk\ni\n\nca\n. 1\n\n20\n k\n\ng\n\nTe\nl.(\n\nZe\nic\n\nhn\ner\n\n):\nTe\n\nl.(\nBe\n\ntre\nue\n\nr):\nBe\n\ntre\nue\n\nr:\n\nAl\nlg\n\nem\nei\n\nnt\nol\n\ner\nan\n\nz\nna\n\nch\n IS\n\nO\n 2\n\n76\n8-\n\nm\nK\n\nZu\nst\n\n.\n\u00c4n\n\nde\nru\n\nng\nD\n\nat\num\n\nN\nam\n\ne\n\nD\nat\n\num\n02\n\n.0\n7.\n\n20\n12\n\nN\nam\n\ne\nBe\n\nar\nb.\n\nG\nep\n\nr.\nBe\n\nre\nch\n\n.\nN\n\nor\nm\n\nIn\nst\n\nitu\nt f\n\n\u00fcr\nR\n\nau\nm\n\nfa\nhr\n\nts\nys\n\nte\nm\n\ne\n\nM\na\u00df\n\nst\nab\n\n  1\n:1\n\n0\n\nW\ner\n\nks\nto\n\nff/\nH\n\nal\nbz\n\neu\ng\n\nM\nas\n\nse\n\nZe\nic\n\nhn\ngs\n\nnu\nm\n\nm\ner\n\n:\n\nZe\nic\n\nhn\ngs\n\nda\nte\n\ni:\nFl\n\nyi\nng\n\nLa\npt\n\nop\n L\n\nau\nnc\n\nh \nC\n\non\nfig\n\nur\nat\n\nio\nn.\n\nC\nAT\n\nD\nra\n\nw\nin\n\ng\nEr\n\ns. \nf\u00fc\n\nr:\n\nBl\nat\n\nt Bl\n.\n\nFo\nrm\n\nat A3\nD\n\nIN\n 6\n\n78\n4\n\n+0\n.3\n\n+0\n.1\n\n-0\n.2\n\n-0\n.4\n\n29\n8\n\n35\n8\n\n60\n0\n\n702\n\nD\ne-\n\nO\nrb\n\niti\nng\n\n M\nec\n\nha\nni\n\nsm\n p\n\nlu\nng\n\ned\n in\n\n th\ne \n\nla\nun\n\nch\n a\n\nda\npt\n\ner\n\n86\n5.\n\n95\n83\n\n6.\n45\n\n162Sa\nte\n\nllit\ne \n\nLa\nun\n\nch\n A\n\nda\npt\n\ner\n M\n\nou\nnt\n\nF\nig\n\n.\n10\n\n.2\nF\n\nL\nP\n\nsa\nte\n\nll\nit\n\ne\nla\n\nun\nch\n\nco\nnfi\n\ngu\nra\n\nti\non\n\n.\n?\n\nIR\nS\n\n,\nU\n\nni\nve\n\nrs\nit\n\ny\nof\n\nS\ntu\n\ntt\nga\n\nrt\n\n198 H.-P. R\u00f6ser\n\n\n\n10.4 Technology and Payloads\n\nAs mentioned above, the purpose of the FLP is to demonstrate new technologies.\nThe main asset\u2014although it is not a payload\u2014concerns the Combined Data and\nPower Management Infrastructure (CDPI), namely the OBC based on a LEON3FT\nprocessor, SpaceWire driven I/O-Boards which serve as a communication interface\nbetween the Processor-Boards, full CCSDS/PUS protocols based TC/TM via\nCCSDS-Decoder/Encoder-Boards and the OBC reconfiguration performed by the\nCDPI Common-Controller in the PCDU. The international partner consortium for\nthe architecture is Astrium GmbH Satellites (Germany), Aeroflex Colorado Springs\nInc. (USA), Aeroflex Gaisler AB (Sweden), 4Links Ltd. (UK), HEMA Kabel-\ntechnik GmbH & Co. KG (Germany) and Vectronic Aerospace GmbH (Germany).\n\nOn instrument side the FLP is equipped with an Optical Infrared Link System\n(OSIRIS) to demonstrate high speed downlink capabilities using an optical ter-\nminal which was developed by DLR. Furthermore, a new reconfigurable FPGA\narchitecture is implemented as payload controller, the Payload On-Board Com-\nputer (PLOC). Besides that, three GPS sensors shall be used to precisely determine\nthe position and the attitude of the satellite (GENIUS experiment).\n\nThe main payload is the Multi-spectral Imaging Camera System (MICS), which\nconsists of three separate cameras, using filters for green, red and near-infrared\nspectral ranges. It is used for multi-angle and multi-spectral imaging of the Earth\nwith a ground sample distance of approximately 25 m and a swath width of\nroughly 25 km. An interesting application of the MICS is to determine the Bidi-\nrectional Reflectance Distribution Function (BRDF) of certain features of the\nEarth\u2019s surface.\n\nThe MICS is additionally used in a ship observation experiment. For this\nexperiment the satellite is equipped with an Automatic Identification System (AIS)\nto receive ship transponder signals for navigation and ship traffic control. The AIS-\nReceiver is developed and built at the Institute of Space Systems of DLR Bremen.\nBy mapping the AIS information over the optical data of the MICS the satellite\nbased observation of ship traffic shall be studied and improved.\n\nAnother camera with a wider field of view is used to get a better overview of\nthe region observed by the MICS. This Panoramic Camera (PAMCAM) is based\non a commercial off-the-shelf product and has a swath width of approximately\n200 km. The large amount of image data is stored and handled in the PLOC and\ncan be transmitted to the ground station using a High Frequency Amateur (HAM)\nradio S-Band downlink system featuring a custom designed directional antenna.\n\nThe last payload implemented in the Flying Laptop is a De-Orbiting Mecha-\nnism (DOM) to meet the 25 year maximum orbital lifetime proposed by the United\nNations Inter-Agency Space Debris Coordination Committee (IADC) in order to\nreduce the buildup of orbital debris. At end of the satellite lifetime the DOM\nreleases a large-area foil shield for generation of a higher interaction with the\nresidual atmosphere in orbit resulting in a negative DV and thus a faster reentry of\nthe satellite.\n\n10 The Research Target Satellite 199\n\n\n\n10.5 Satellite Attitude Control System\n\nThe Attitude Control System (ACS) of the FLP satellite and its algorithms are fully\ndefined, developed and were tested as described in [89, 90] in a Matlab/Simulink\nenvironment. The ACS key features are:\n\n\u2022 Damping of rotational rates after its separation from the launch-vehicle or in\ncase of emergency.\n\n\u2022 A safe-mode in which power supply is ensured by utilizing reliable equipment\nonly.\n\n\u2022 Coarse attitude determination by using reliable sensors.\n\u2022 The capability of pointing the satellite to any given target with an absolute\n\npointing accuracy of 150 arcsec.\n\u2022 A Kalman Filter for increased accuracy of rate and attitude measurements.\n\u2022 Propagation of orbit and magnetic field models.\n\u2022 State estimation and rating of sensor data.\n\n10.5.1 Sensors and Actuators\n\nTable 10.2 shows all sensors of the FLP satellite that are used for the attitude\ncontrol system. Two redundant magnetometer systems (MGM), four fiberoptic\ngyros (FOG), eight sun sensors (SUS) distributed all over the satellite, a GPS\nsystem with three receivers and antennas and a high precision star tracker (STR)\nsystem with two camera units.\n\nTable 10.3 gives the key parameters of the FLP satellite\u2019s actuator system\nwhich is composed of three magnetotorquers (MGT) and four reaction wheels\n(RWL).\n\nTable 10.2 Sensors overview\n\nMGM FOG SUS GPS STR\n\nOutput Magnetic field\nvector (3 9 1)\n\nRotational\nrate (scalar)\n\nSolar cell\ncurrent\n(scalar)\n\nPosition (3 9 1)\nvelocity (3 9 1)\n\nInertial\nquaternion\n(4 9 1)\n\nSensors 2 4 6 3 2\nUnit (T) (?/s) (A) (m) 9m/s) (\u2013)\nResolution/\naccuracy\n\n5 nT (LSB) 2*10-6 ?/s\n(LSB)\n\n50 mA 10 m 0.1 m/s 5 arcsec\n\nControl rate 1.5 Hz/3 Hz/\n6 Hz\n\n10 Hz 10 Hz 1 Hz 5 Hz\n\nConnection\ntype\n\nRS422 FOG IF RS422\n(PCDU)\n\nRS422 RS422\n\nManufacturer ZARM NG-LITEF Vectronic\nAerospace\n\nDLR DTU\n\n200 H.-P. R\u00f6ser\n\n\n\n10.5.2 Control Modes\n\nThe FLP satellite control system can be operated in six different modes\u2014see\nFigs. 10.3 and 10.4:\n\nTable 10.3 Actuators overview\n\nMGT RWL\n\nInput Magnetic dipole moment Rotational rate\nQuantity 1 unit\n\n3 redundant coils\n4 reaction wheels\n\nUnit (Am2) (Nm)\nControl rate 10 Hz 10 Hz\nConnection type IIC RS422\nManufacturer ZARM Rockwell collins\n\nFig. 10.3 FLP mode transitions. ? IRS, University of Stuttgart\n\nFig. 10.4 Satellite control modes. ? IRS, University of Stuttgart\n\n10 The Research Target Satellite 201\n\n\n\nDe-tumble and Safe Mode\nAfter separation from the launcher the FLP satellite will be spinning with\n\nrotational rates |xB| of up to 10 deg/s. For that situation and in case of an\nemergency the de-tumble mode is designed to reduce the rotational rate to a\nthreshold of |xB| = 0.4 deg/s by using only magnetotorquers as actuators.\n\nThe satellite will then be switched into safe mode where it orients the negative\nz-axis (cf. Fig. 10.1) to the sun and builds up a spin of |xB| = 2 deg/s around the\nz-axis to stabilize this orientation. This mode intends to provide a safe state in\nwhich power supply is secured and only a minimum of reliable sensors and\nactuators are used.\n\nThe safe and de-tumble mode are the fallback modes of the satellite. They have\nto bring it to a safe state and have to be designed very robust in order to prolong\nthe satellites time of survival in case of an onboard failure.\n\nIdle Mode\nThe idle mode is designed for recharging the batteries during normal operation\n\nwhen the FLP satellite is in idle with respect to ground commanding or between\nscheduled observations of the loaded mission timeline. In this mode the satellite\u2019s\n3-axis control with according sensors and actuators is operational.\n\nOperational Pointing Modes\nTo perform any payload operation task the FLP satellite has three different\n\npointing modes. The first one is designed to orient the satellite\u2019s coordinate system\nto the inertial coordinate system so this mode is called Inertial Pointing Mode. For\nthis mode no information about the current position is required since the inertial\nreference vector is not depending on it. In contrast the other two pointing modes,\nNadir-Pointing and Target-Pointing, do need satellite position information since\nthe direction to nadir, the earths center, or to any given target is depending on the\nsatellites current position. So target pointing and nadir pointing with respect to\nattitude control laws is essentially the same except for a fixed target ~tnadir \u00bc\n0; 0; 0\u00f0 \u00deT in Nadir-Pointing Mode.\n\nFigure 10.3 shows all possible satellite mode transitions, the commanded ones\nbeing depicted with bold lines and automatic transitions (in most cases induced to\ndetected onboard problems) are represented by dotted lines.\n\n10.6 Satellite Communication Links\n\nFor the communication with the ground stations, the TT&C system uses omni-\ndirectional antennas to receive telecommands and transmit telemetry in com-\nmercial S-Band. All these TM/TC packages are encoded in standard protocols\naccording to the Consultative Committee for Space Data Systems (CCSDS).\n\nPayload data downlink is handled also in S-Band range on an amateur radio\nfrequency with a separate onboard transmitter.\n\n202 H.-P. R\u00f6ser\n\n\n\nF\nig\n\n.\n10\n\n.5\nF\n\nL\nP\n\nS\nat\n\nel\nli\n\nte\nel\n\nec\ntr\n\nic\nal\n\nbl\noc\n\nk\ndi\n\nag\nra\n\nm\n.\n\n?\nIR\n\nS\n,\n\nU\nni\n\nve\nrs\n\nit\ny\n\nof\nS\n\ntu\ntt\n\nga\nrt\n\n \n\n!\n\"#$%\n\"#$\n\"#&%\n\"#&\n\"#'%\n\"#'\n\n\"\"&\n\n\"\"$\n\n#\n \n\n \n\n \n\n \n\n \n\n \n\n('\n\n(!\n\n(&\n\n($\n\n $%\n $\n\n )%\n )\n\n  \n\n'\n\n&\n\n$\n\n\"\n\n\"\n\n\"%\n\n\"\"\n\n+'\n\n+&\n\n+$\n\n %- *, \n\n %- *, \n\n . %%, \n\n!,-, #/-\n\n*\n\n $\n\n '\n\n &\n\n \n\n \n\n \n\n   \n   \n   \n\n  \n\n  \n\n  \n\n  \n\n  0\n\n  %%, \n  %%, \n\n  0\n\n  \n\n ', *, \n\n ', *, \n\n  *, \n\n  *, \n\n . %%, \n\n$\n$\n\n$\n\n  \n\n  %%, \n\n  %%, \n\n01\n##\n\n0\n\n10 The Research Target Satellite 203\n\n\n\n10.7 Satellite Electrical Architecture and Block Diagram\n\nThe satellite is powered by three solar panels equipped with triple junction GaInP2/\nGaAs/Ge solar cells. On the center panel, there is a further string of more advanced\ntriple junction cells, of which the on-orbit performance shall be verified.\n\nThe maximum achievable power is estimated to be about 230 W. The power\nsystem is controlled by a Power Control and Distribution Unit (PCDU), which\nincludes the Battery Charge Regulators and provides an unregulated bus voltage of\n19\u201325 V to the instruments. A battery assembled from off-the-shelf Lithium-Iron-\nPhosphate cells is used to provide electrical power during eclipse periods\n(Fig. 10.5).\n\nTo deploy the solar panels after launch, no pyrotechnics are used. Instead, a\nmelting wire mechanism has been developed by IRS. For this mechanism, the bolts\nretaining the solar panels during launch are attached to the satellite using a split\npod, which is held together by the melting wire. After the separation from the\nupper stage of the launcher, the wire is melted by heat resistors and the panels are\ndeployed.\n\nThe De-Orbiting Mechanism is stowed within the launch adapter ring until its\ndeployment at the end of the satellite mission. It is a flat square sail and is\ndeployed using a non-explosive bi-metal switch.\n\n10.8 EMC Launcher and Primary Payload Compliance\n\nFor the launch supplier it essential that the satellite is designed to be launched in\noff-mode and will boot after cut of launcher separation straps. The Launch and\nEarly Orbit Phase (LEOP) autosequence will then be performed automatically.\nThus during the launch the satellite will not emit any RF spectrum.\n\n204 H.-P. R\u00f6ser\n\n\n\nChapter 11\nCDPI Assembly Annexes and Data Sheets\n\n11.1 Processor-Board DSU/Ethernet Interface Card\n\nOverview\nFor debug and test of the OBC Processor-Boards\u2014both EM and FM models\u2014a\nsmall PCB card was designed by Aeroflex Colorado Springs to interface to the\nLEON3FT DSU and Ethernet ports respectively. The DEI card is also valuable for\nengineers to verify the Processor-Boards have arrived unharmed at end user premises.\n\nThe DEI card is used for essentially three purposes:\n\n\u2022 Resetting the SBC:\nDuring software development, code running on the processor is typically not\nmature and therefore crashes can and do quite often occur. The external reset is\nvaluable and allows the user to reset the processor without cycling power.\nThis feature was extensively used during OBSW testing with the OBC EM on\nthe Satellite Test Bed. Please refer to Figs. 1.16 and 9.3.\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8_11,\n? Springer-Verlag Berlin Heidelberg 2013\n\n205\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9\n\n\n\u2022 DSU Interface:\nThe LEON3FT has a Debug Support Unit that gives the user the ability to\nmodify registers, load programs and generally interface to the LEON3FT using\nsimple commands running out of a DOS shell.\nThis functionality has been used with both EM Processor-Board in STB as well\nas with the complete OBC FM in the FlatSat environment. Please refer to Figs.\n1.16 and 9.12.\n\n\u2022 Ethernet Interface:\nThe single ended Ethernet signals are routed to the 44 pin connector on the SBC\nand these signals are connected to an Ethernet Phy device on the DEI. The\nEthernet connector on the DEI is then used to connect to the Ethernet port on the\nLEON3FT of the SBC.\n\nDEI Connectors\nThere are four connectors on the DEI card. Type and function are as follows\n(please also refer to Fig. 11.1):\n\n\u2022 44 Pin D-Sub Female:\nUsed to interface to the SBC and contains all of the signals to power, reset and\ninterface to Ethernet and the DSU.\n\n\u2022 Ethernet Connector:\nInterface to any 10/100 Mb Ethernet network.\n\n\u2022 DSU Molex:\nStandard 14 pin connector used to interface to the LEON3FT DSU using a\nXilinx JTAG Interface pod.\n\n\u2022 Nine pin D-Sub Female Connector:\n3.3 V Power and Ground input from any bench power supply.\n\nBlock Diagram and Dimensions\nFigure 11.1 shows the general layout of the DEI card as well as the dimensions.\nThe card is designed to connect to the SBC with or without a cable.\n\n 63.56 mm\n\n 76.27 mm\n44 P\n\nin D\n-S\n\nub C\nonnector\n\n9 Pin D-Sub\nConnector\n\nEthernet\nConnector\n\nDSU Molex\nConnector\n\nExternal Reset \nSwitch\n\nFig. 11.1 DSU/ethernet\ninterface card. ? Aeroflex\nInc.\n\n206\n\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_1\nhttp://dx.doi.org/10.1007/978-3-642-35557-8_9\n\n\nLEON3FT Ethernet Interface\nA standard Ethernet Phy device is connected from the Ethernet connector on the\nDSU/Ethernet Interface card to the Ethernet signals on the 44 Pin D-Sub.\n\nLEON3FT DSU Interface\nThe signals on the 14 pin Molex connector on the DSU/Ethernet Interface card are\nconnected directly to the 44 pin D-sub connector. This allows the user to use the\nXilinx Platform USB to connect to the LEON3FT DSU unit.\n\nDSU/Ethernet Interface Jumper Settings\nSee Table 11.1.\n\nPower Connector\nThe DEI card gets power through a 9 pin D-sub connector. These are readily\navailable through many electronics suppliers (Table 11.2).\n\nTable 11.1 DSU/ethernet interface card jumper settings\n\nJumper Title Description\n\nJ4 Leon DSU EN Leon DSU enable jumper. Connect jumper to enable the active high\nLEON3FT DSU enable signal\n\nJ5 JTAG reset Active low JTAG/DSU reset to the LEON3FT. Connect jumper to\nassert reset\n\nJ6 DSU break Active high DSU break signal. Attach jumper to enable the break\nJ8 Ethernet clock\n\nTri-state\nActive low connection to the 25 MHz ethernet oscillator. Attach\njumper to tri-state oscillator output\n\nJ10 DSU mode test\npoint\n\nActive high signal indicates if DSU has been enabled\n\nJ11 Ethernet error\ntest point\n\nThis signal will go high when there is an error and is detected on the\nethernet Phy device\n\nTable 11.2 9 Pin D-sub on\nDSU/ethernet interface card\npin assignments\n\nPin number I/O Pin assignment\n\n1 I GND\n2 I GND\n3 I 3.3 V\n4 I 3.3 V\n5 I 3.3 V\n6 I GND\n7 I GND\n8 I 3.3 V\n9 I 3.3 V\n\n11 CDPI Assembly Annexes and Data Sheets 207\n\n\n\nDSU and Ethernet Implementation\nWhen implementing the DSU and Ethernet Interface on the SBC the 44 pin D-Sub\nFemale connector on the DSU/Ethernet Interface card has to be connected to the 44\npin D-Sub Male connector on the OBC Processor-Board as shown in Fig. 11.2. Note\nthat a cable may be used if greater distance is required between the DEI card and the\nSBC. A Xilinx Platform USB programmer has to be used to interface to the DSU.\nSuch devices are readily available and come with a ribbon cable that connects to the\nMolex 14 pin connector on the DEI card. Please refer to LEON3FT documentation\nfor implementing the DSU using the Xilinx Platform USB.\n\n11.2 CCSDS Conventions\n\n11.2.1 CCSDS Field Definition\n\nThe subsequent sections present the convention according to the Consultative\nCommittee for Space Data Systems (CCSDS) recommendations, applying to all\nrelevant structures of the CCSDS-Board decoder/encoder firmware and OBC\nsoftware:\n\nStuttgart SBC EM\n\n3.3V +/-5%\nInput\n\nEthernet\n\n44 Pin D\n-Sub Connector\n\n9 Pin D-Sub\nConnector\n\nEthernet\nConnector\n\nDSU Molex \nConnector\n\nPersonal \nComputer\n\nUSB\n\nDSU/Ethernet \nInterface Card\n\nFig. 11.2 Using the DSU/ethernet interface card. ? Aeroflex Inc.\n\n208\n\n\n\n\u2022 The most significant bit of an array is located to the left, carrying index number\nzero, and is transmitted first.\n\n\u2022 An octet comprises eight bits.\n\nGeneral convention, applying to signals and interfaces:\n\n\u2022 Signal names are in mixed case.\n\u2022 An upper case \u2018_N\u2019 suffix in the name indicates that the signal is active low\n\n(Table 11.3).\n\n11.2.2 Galois Field\n\nConvention according to the Consultative Committee for Space Data Systems\n(CCSDS) recommendations, applying to all Galois Field GF(28) symbols:\n\n\u2022 A Galois Field GF(28) symbol comprises eight bits.\n\u2022 The least significant bit of a symbol is located to the left, carrying index number\n\nzero, and is transmitted first (Table 11.4).\n\n11.2.3 Telemetry Transfer Frame Format\n\nThe Telemetry Transfer Frame specified in [19, 26] is composed of a Primary\nHeader, a Secondary Header, a Data Field and a Trailer with the following\nstructures (Tables 11.5, 11.6, 11.7, 11.8, and 11.9).\n\nTable 11.4 Galois field GF(28) symbol definition\n\nGalois Field GF(28)\nsymbol\n\nleast significant most significant\n0 1 to 6 7\n\nTable 11.5 Telemetry transfer frame format\n\nTransfer Frame\nTransfer Frame Header Transfer Frame\n\nData Field\nTransfer Frame Trailer\n\nPrimary Secondary (optional) ket I Packet I Pa OCF / FECF (optional)\n6 octets variable variable 0 / 2 /4 / 6 octets\n\nup to 2048 octets\n\nTable 11.3 CCSDS n-bit field definition\n\nCCSDS n-bit field\nmost significant least significant\n\n0 1 to n-2 n-1\n\n11 CDPI Assembly Annexes and Data Sheets 209\n\n\n\n11.2.4 Reed-Solomon Encoder Data Format\n\nThe applicable standards [17, 25] specify a Reed-Solomon E = 16 (255, 223) code\nresulting in the frame lengths and code block sizes listed in Table 11.10.\n\nTable 11.6 Telemetry transfer frame primary header format\n\nTransfer Frame Primary Header\nFrame Identification Master Channel\n\nFrame\nCount\n\nVirtual Channel\nFrame\nCount\n\nFrame Data \nField\n\nStatus\nVersion S/C Id VC Id OCF Flag\n\n2 bits\n0:1\n\n10 bits\n2:11\n\n3 bits\n12:14\n\n1 bit\n15\n\n8 bits 8 bits 16 bits\n\n2 octets 1 octet 1 octet 2 octets\n\nTable 11.7 Part of telemetry transfer frame primary header format\n\nFrame Data Field Status\nSecondary Header Flag Sync Flag Packet Order Flag Segment Length Id First Header Pointer\n\n1 bit\n0\n\n1 bit\n1\n\n1 bit\n2\n\n2 bits\n3:4\n\n11 bits\n5:15\n\n2 octets\n\nTable 11.8 Telemetry transfer frame secondary header format\n\nTransfer Frame Secondary Header (optional)\nSecondary Header Identification Secondary Header Data Field\n\nSecondary Header Version Secondary Header Length Custom data\n2 bits\n0:1\n\n6 bits\n2:7\n\n1 octet up to 63 octets\n\nTable 11.9 Telemetry transfer frame trailer format\n\nTransfer Frame Trailer (optional)\nOperational Control Field (optional) Frame Error Control Field (optional)\n\n0 / 4 octets 0 / 2 octets\n\nTable 11.10 Reed-solomon E = 16 code blocks with attached synchronization marker\n\nInterleave\ndepth\n\nAttached synchronization\nmarker (octets)\n\nTransfer frame\n(octets)\n\nReed solomon check\nsymbols (octets)\n\n1 4 223 32\n2 446 64\n3 669 96\n4 892 128\n5 1115 160\n8 1784 256\n\n210\n\n\n\nThe applicable standards [25] also specifies a Reed-Solomon E = 8 (255, 239)\ncode resulting in the frame lengths and codeblock sizes listed in Table 11.11\n\n11.2.5 Attached Synchronization Marker\n\nThe Attached Synchronization Marker pattern depends on the encoding scheme in\nuse, as specified in [17, 25] as shown in Table 11.12.\n\n11.2.6 Telecommand Transfer Frame Format\n\nThe Telecommand Transfer FrameTelecommand Transfer Frame specified in\n[20, 35] is composed of a Primary Header, a Data Field and a trailer with\n(Tables 11.13, 11.14 and 11.15).\n\nTable 11.11 Reed-solomon E = 8 codeblocks with attached synchronization marker\n\nInterleave\ndepth\n\nAttached synchronization\nmarker (octets)\n\nTransfer frame\n(octets)\n\nReed-solomon check\nsymbols (octets)\n\n1 4 239 16\n2 478 32\n3 717 48\n4 956 64\n5 1195 80\n8 1912 128\n\nTable 11.12 Attached synchronization marker hexadecimal pattern\n\nMode Hexadecimal stream (left to right)\n\nNominal 1ACFFC1Dh\n\nTable 11.13 Telecommand transfer frame format\n\nTransfer Frame\nTransfer Frame Primary\n\nHeader\nTransfer Frame Data Field Frame Error Control Field\n\nFECF (optional)Segment Header (optional) ket I Packet I Pac\n5 octets variable variable 2 octets\n\nup to 1024 octets\n\nTable 11.14 Telecommand transfer frame primary header format\n\nTransfer Frame Primary Header\nVersion Bypass\n\nFlag\nControl\n\nCommand\nFlag\n\nReserved\nSpare\n\nS/C Id Virtual\nChannel\n\nId\n\nFrame\nLength\n\nFrame\nSequence\nNumber\n\n2 bits 1 bit 1 bit 2 bits 10 bits 6 bits 10 bits 8 bits\n0:1 3 4 5 6:15 16:21 22:31 32:39\n\n2 octets 2 octets 1 octet1\n\n11 CDPI Assembly Annexes and Data Sheets 211\n\n\n\n11.2.7 Command Link Control Word\n\nThe Command Link Control Word (CLCW) can be transmitted as part of the\nOperation Control Field (OCF) in a Transfer Frame Trailer. The CLCW is spec-\nified in [20, 35] and is listed in Table 11.16.\n\n11.2.8 Space Packet\n\nThe Space Packet defined in the CCSDS [27, 28] recommendation and is listed in\nTable 11.17.\n\n11.2.9 Asynchronous Bit Serial Data Format\n\nThe asynchronous bit serial interface complies to the data format defined in EIA-\n232. It also complies to the data format and waveform shown in Table 11.18 and\nFig. 11.3. The interface is independent of the transmitted data contents. Positive\nlogic is considered for the data bits. The number of stop bits can optionally be\neither one or two. The parity bit can be optionally included.\n\nTable 11.15 Transfer frame secondary header format\n\nSegment Header (optional)\nSequence Flags Multiplexer Access Point (MAP) Id\n\n2 bits 6 bits\n40:41 42:47\n\n1 octet\n\nTable 11.16 Command link control word\n\nCommand Link Control Word\nControl Word Type Version Number Status Field COP in Effect Virtual Channel Identifier Reserved Spare\n\n0 1:2 3:5 6:7 8:13 14:15\n1 bit 2 bits 3 bits 2 bits 6 bits 2 bits\n\nNo RF Available No Bit Lock Lock Out Wait Retransmit FARM B \nCounter\n\nReserved\nSpare\n\nReport Value\n\n16 17 18 19 20 21:22 23 24:31\n1 bit 1 bit 1 bit 1 bit 1 bit 2 bits 1 bit\n\nTable 11.17 CCSDS space packet format\n\nSpace Packet\n\nPrimary Header Packet Data Field\n\nPacket \nVersion\nNumber\n\nPacket Identification Packet Sequence Control Packet\nData\n\nLength\n\nSecondary \nHeader \n\n(optional)\n\nUser \nData \nField\n\nPacket\nError\n\nControl\n(optional)\n\nType Secondary\nHeader Flag\n\nApplication\nProcess Id\n\nSequence\nFlags\n\nSequence\nCount\n\n0:2 3 4 5:15 16:17 18:31 32:47\n\n3 bits 1 bit 1 bit 11 bits 2 bits 14 bits 16 bits variable variable variable\n\n212\n\n\n\n11.2.10 SpaceWire Remote Memory Access Protocol\n\nA general definition of RMAP commands is specified in [14]. For Telemetry\nVirtual Channels 0 through 3, a complete CCSDS Space Packet [27, 28] is carried\ninside an RMAP write command [14], which in turn is carried inside a SpaceWire\npacket [12], as shown in the Table 11.19.\n\n11.2.11 Command Link Control Word Interface\n\nSee Table 11.20.\n\n11.2.12 Waveform Formats\n\nThe design receives and generates the waveform formats as shown in Fig. 11.3:\n\nTable 11.18 Asynchronous bit serial data format\nAsynchronous\nbit serial\nformat\n\nStart D0 D1 D2 D3 D4 D5 D6 D7 Parity Stop Stop\nFirst lsb msb Last\n\nGeneral\ndata format\ni = {0, n}\n\n8*i ? 7 8*i ? 6 8*i ? 5 8*i ? 4 8*i ? 3 8*i ? 2 8*i ? 1 8*i\n\nLast First\n\nTable 11.19 CCSDS space packet, in RMAP write command, in spacewire packet\n\nSpaceWire\nPacket\n\nDestination\nAddress\n\nCargo EOP\n\nRMAP Write \nCommand\n\nTarget \nSpaceWire \n\nAddress\n\nTarget \nLogical \nAddress\n\nProtocol \nldentifier\n\nlnstruction Key Reply\nAddress\n\nlnitiator \nLogical \nAddress\n\nTransaction \nldentifier\n\nExtended\nAddress\n\nAddress Data\nLength\n\nHeader\nCRC\n\nData Data\nCRC\n\nEOP\n\nCCSDS \nSpace \nPacket\n\nCCSDS \nSpace \nPacket\n\noptionalv, \nari- able\n\n1 byte 1 byte 1 byte 1 byte optional, \nvariable\n\n1 byte 2 bytes 1 byte 4 bytes 3 bytes 1 byte variable 1 byte token\n\nTable 11.20 CLCW transmission protocol\n\nByte \nNumber\n\nCLCW\nregister bits\n\nCLCW contents\n\nFirst [31:24] Control Word Type CLCW Version \nNumber\n\nStatus \nField\n\nCOP In Effect\n\nSecond [23:16] Virtual Channel ID Reserved Field\nThird [15:8] No RF Available No Bit Lock Lock \n\nOut\nWait Retransmit Farm B \n\nCounter\nReport\nType\n\nFourth [7:0] Report Value\nFifth N/A [RS232 Break Command]\n\n11 CDPI Assembly Annexes and Data Sheets 213\n\n\n\n11.3 Selected TM Encoder Registers\n\nSee Tables 11.21, 11.22, 11.23, 11.24, 11.25, 11.26, 11.27, and 11.28.\n\nTable 11.21 GRTM DMA external VC control and status register\n31 6 5 4 3 2 1 0\n\nRESERVED XTFO RESERVED XTl XTE XEN\n\n31:6 RESERVED\n5 External Transfer Frame Ongoing (XTFO)\u2014telemetry frames via DMA transfer for\n\nexternal VC (Virtual Channels 3 through 6) are on-going (read-only)\n4:3 RESERVED\n2 External Transmitter Interrupt (XTI)\u2014DMA interrupt for external VC, cleared by\n\nwriting a logical 1 (unused)\n1 External Transmitter Error (XTE)\u2014DMA transmitter underrun for external VC\n\n(Virtual Channels 3 through 6), cleared by writing a logical 1\n0 External Enable (XEN)\u2014enable DMA transfers for external VC (Virtual Channels 3\n\nthrough 6) (note that descriptor table is checked continuously till this bit is cleared)\n\n0 1 2 3 4 5 6 7 n-8 n-7 n-6 n-5 n-4n-3 n-2 n-1\n\nDelimiter\n\nClock\n\nData\n\nMSB LSB\n\nStart Data Stop\n\nStart LSB MSB Stop\n\nStart LSB MSB Stop Stop\n\nStart Data parity Stop\n\nStart LSB MSB p Stop\n\nStart LSB MSB p Stop Stop\n\nBreak\nStart Stop\n\nFig. 11.3 Telecommand input protocol/waveform. ? Aeroflex Gaisler AB\n\nTable 11.22 GRTM DMA external VC descriptor pointer register\n31 10 9 3 2 0\n\nBASE lNDEX \"OOO\"\n\n31:10 Descriptor base (BASE)\u2014base address of descriptor table (Virtual Channels 3 through 6)\n9:3 Descriptor index (INDEX)\u2014index of active descriptor in descriptor table\n2:0 Reserved\u2014fixed to \u2018\u2018000\u2019\u2019\n\n214\n\n\n\nTable 11.23 GRTM control register\n31 1 0 \n\nRESERVED TE\n\n31:1 RESERVED\n0: Transmitter Enable (TE)\u2014enables telemetry transmitter (should be done after the complete\n\nconfiguration of the telemetry transmitter, including the LENGTH field in the GRTM DMA\nlength register)\n\nTable 11.24 GRTM configuration register (read-only)\n31 23 22 21 20 19 18 17 16 15 14 13 12 11 10 9 8 6 5 4 3 2 1 0\n\nRESERVED O\nC\nF\nB\n\nC\nl\nF\n\nA\nO\nS\n\nF\nH\nE\nC\n\nI\nZ\n\nM\nC\nG\n\nF\nS\nH\n\nl\nD\nL\nE\n\nE\nV\nC\n\nO\nC\nF\n\nF\nE\nC\nF\n\nA\nA\nS\nM\n\nRS RS\nDEPTH\n\nTE P\nS\nR\n\nN\nR\nZ\n\nCE SP SC\n\n31:23 RESERVED\n22 Operational Control Field Bypass (OCFB)\u2014CLCW implemented externally, no OCF\n\nregister\n21 Encryption/Cipher Interface (CIF)\u2014interface between protocol and channel coding sub-\n\nlayers\n20 Advanced Orbiting Systems (AOS)\u2014AOS Transfer Frame generation implemented\n19 Frame Header Error Control (FHEC)\u2014frame header error control implemented, only if\n\nAOS also set\n18 Insert Zone (IZ)\u2014insert zone implemented, only if AOS also set\n17 Master Channel Generation (MCG)\u2014master channel counter generation implemented\n16 Frame Secondary Header (FSH)\u2014frame secondary header implemented\n15 Idle Frame Generation (IDLE)\u2014idle frame generation implemented\n14 Extended VC Cntr (EVC)\u2014extended virtual channel counter implemented (ECSS)\n13 Operational Control Field (OCF)\u2014CLCW implemented internally, OCF register\n12 Frame Error Control Field (FECF)\u2014Transfer Frame CRC implemented\n11 Alternative ASM (AASM)\u2014alternative attached synchronization marker implemented\n10:9 Reed-Solomon (RS)\u2014Reed-Solomon encoder implemented, \u2018\u201801\u2019\u2019 E = 16, \u2018\u201810\u2019\u2019 E = 8,\n\n\u2018\u201811\u2019\u2019 E = 16 & 8\n8:6 Reed-Solomon Depth (RSDEPTH)\u2014Reed-Solomon interleave depth -1 implemented\n5 Turbo Encoder (TE)\u2014turbo encoder implemented (reserved)\n4 Pseudo-Randomizer (PSR)\u2014Pseudo-Randomizer implemented\n3 Non-Return-to-Zero (NRZ)\u2014non-return-to-zero\u2014mark encoding implemented\n2 Convolutional Encoding (CE)\u2014convolutional encoding implemented\n1 Split-Phase Level (SP)\u2014split-phase level modulation implemented\n0 Sub Carrier (SC)\u2014sub carrier modulation implemented\n\nTable 11.25 GRTM physical layer register\n31 30 16 15 14 0\n\nSF SYMBOLRATE SCF SUBRATE\n\n31 Symbol Fall (SF)\u2014symbol clock has a falling edge at start of symbol bit\n30:16 Symbol Rate (SYMBOLRATE)\u2014symbol rate division factor\u20141\n15 Sub Carrier Fall (SCF)\u2014sub carrier output start with a falling edge for logical 1\n14:0 Sub Carrier Rate (SUBRATE)\u2014sub carrier division factor\u20141\n\n11 CDPI Assembly Annexes and Data Sheets 215\n\n\n\nTable 11.26 GRTM coding sub-layer register\n31 20 19 18 17 16 15 14 12 11 10 8 7 6 5 4 2 1 0\n\nRESERVED C\nl\nF\n\nCSEL A\nA\nS\nM\n\nRS RSDEPTH R\nS\n8\n\nRESERVED P\nS\nR\n\nN\nR\nZ\n\nCE CE RATE SP SC\n\n31:20 RESERVED\n19 Encryption/Cipher Interface (CIF)\u2014enable external encryption/cipher interface between\n\nsub-layers\n18:17 Clock Selection (CSEL)\u2014selection of external telemetry clock source (application\n\nspecific)\n16 Alternative ASM (AASM)\u2014alternative attached synchronization marker enable. When\n\nenabled the value from the GRTM Attached Synchronization Marker register is used, else\nthe standardized ASM value 0x1ACFFC1D is used\n\n15 Reed-Solomon (RS)\u2014Reed-Solomon encoder enable\n14:12 Reed-Solomon Depth (RSDEPTH)\u2014Reed-Solomon interleave depth -1\n11 Reed-Solomon Rate (RS8)\u2014\u20180\u2019 E = 16, \u20181\u2019 E = 8\n10:8 RESERVED\n7 Pseudo-Randomizer (PSR)\u2014Pseudo-Randomizer enable\n6 Non-Return-to-Zero (NRZ)\u2014non-return-to-zero\u2014mark encoding enable\n5 Convolutional Encoding (CE)\u2014convolutional encoding enable\n4:2 Convolutional Encoding Rate (CERATE):\n\n\u2018\u201800-\u2019\u2019rate 1/2, no puncturing\n\u2018\u201801-\u2019\u2019rate 1/2, punctured\n\u2018\u2018100\u2019\u2019rate 2/3, punctured\n\u2018\u2018101\u2019\u2019rate 3/4, punctured\n\u2018\u2018110\u2019\u2019 rate 5/6, punctured\n\u2018\u2018111\u2019\u2019rate 7/8, punctured\n\n1 Split-Phase Level (SP)\u2014split-phase level modulation enable\n0 Sub Carrier (SC)\u2014sub carrier modulation enable\n\nTable 11.27 GRTM attached synchronization marker register\n31 0 \n\nASM\n\n31:0 Attached Synchronization Marker (ASM)\u2014pattern for alternative ASM, (bit 31 MSB sent\nfirst, bit 0 LSB sent last) (The reset value is the standardized alternative ASM value\n0x352EF853)\n\nTable 11.28 GRTM idle frame generation register\n31 24 23 22 21 20 19 18 17 16 15 10 9 0\n\nlDLEMCFC RE-\nSER-\nVED\n\nI\nD\nL\nE\n\nO\nC\nF\n\nE\nV\nC\n\nF\nS\nH\n\nV\nC\nC\n\nMC VClD SClD\n\n31:24 Idle Master Channel Frame Counter (IDLEMCFC)\u2014diagnostic read out (read only, TM\nonly)\n\n23:22 RESERVED\n21 Idle Frames (IDLE)\u2014enable idle frame generation\n\n(continued)\n\n216\n\n\n\n11.4 TM Encoder: Virtual Channel Generation Registers\n\nThe Virtual Channel Generation function core is programmed through registers\nmapped into APB address space (Table 11.29).\n\nStatus Register (R)\nSee Table 11.30.\n\nControl Register (R/W)\nSee Table 11.31.\n\nTable 11.28 (continued)\n\n20 Operation Control Field (OCF)\u2014enable OCF for idle frames\n19 Extended Virtual Channel Counter (EVC)\u2014enable extended virtual channel counter\n\ngeneration for idle frames (TM only, ECSS)\n18 Frame Secondary Header (FSH)\u2014enable FSH for idle frames (TM only)\n17 Virtual Channel Counter Cycle (VCC)\u2014enable virtual channel counter cycle generation\n\nfor idle frames (AOS only)\n16 Master Channel (MC)\u2014enable separate master channel counter generation for idle frames\n\n(TM only)\n15:10 Virtual Channel Identifier (VCID)\u2014virtual channel identifier for idle frames\n9:0 Spacecraft Identifier (SCID)\u2014spacecraft identifier for idle frames\n\nTable 11.29 GRTM PAHB registers\n\nAPB address offset Register\n\n16#004# Status register\n16#008# Control register\n\nTable 11.30 Status register\n31 2 1 0 \n\nBUSY READY\n\n1: BUSY Not ready for new input, busy with octet\n0: READY Ready for new packet of maximum size\nAll bits are cleared to 0 at reset\n\nTable 11.31 Control register\n31 10 9 8 7 3 2 1 0\n\n- BUSYEN READYEN - VALID RST EN\n\n9: BUSYEN Enable not-busy interrupt when 1\n8: READYEN Enable ready for packet interrupt when 1\n2: VALID Packet valid delimiter, packet valid when 1, in-between packets when\n\n0 (read-only)\n1: RST Reset complete core when 1\n0: EN Enable interface when 1\nAll bits are cleared to 0 at reset. Note that RST is read back as 0\n\n11 CDPI Assembly Annexes and Data Sheets 217\n\n\n\nAHB I/O Area\nData to be transferred to the Virtual Channel Generation function is written to the\nAMBA AHB slave interface which implements a AHB I/O area. See [64] for details.\n\nNote that the address is not decoded by the core. Address decoding is only done\nby the AMBA AHB controller, for which the I/O area location and size is fixed. It\nis possible to transfer one, two or four bytes at a time, following the AMBA big-\nendian convention regarding send order. The last written data can be read back via\nthe AMBA AHB slave interface. Data are output as octets on the Virtual Channel\nGeneration interface (Tables 11.32, and 11.33).\n\n11.5 Selected TC Decoder Registers\n\nSee Tables 11.34 to 11.44.\n\nTable 11.32 AHB I/O area\u2014data word definition\n31 24 23 16 15 8 7 0\n\nDATA [31:24] DATA [23:16] DATA [15:8] DATA [7:0]\n\nTable 11.33 AHB I/O area\u2014send order\n\nTransfer\nsize\n\nAddress\noffset\n\nDATA\n[31:24]\n\nDATA\n[23:16]\n\nDATA\n[15:8]\n\nDATA\n[7:0]\n\nComment\n\nWord 0 First Second Third Last Four bytes\nsent\n\nHalfword 0 First Last \u2013 \u2013 Two bytes\nsent\n\n2 \u2013 \u2013 First Last Two bytes\nsent\n\nByte 0 First \u2013 \u2013 \u2013 One byte sent\n1 \u2013 First \u2013 \u2013 One byte sent\n2 \u2013 \u2013 First \u2013 One byte sent\n3 \u2013 \u2013 \u2013 First One byte sent\n\nTable 11.34 Global reset register\n31 24 23 1 0\n\nSEB RESERVED SRST\n\n31:24 SEB (Security Byte):\nWrite: \u20180 9 55\u2019 = the write will have effect (the register will be updated)\nAny other value = the write will have no effect on the register\nRead: All zero\n\n23:1 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n0 System reset (SRST): [1]\nWrite: \u20181\u2019 = initiate reset, \u20180\u2019 = do nothing\nRead: \u20181\u2019 = unsuccessful reset, \u20180\u2019 = successful reset\nNote: The Coding Layer is not reset\n\nPower-up default: 0x00000000\n\n218\n\n\n\nThe following register sets the spacecraft ID for telecommands. It depends on\nIP Core configuration at ordering as explained in Table 4.15.\n\nTable 11.35 Global control register (GCR)\n31 24 23 13 12 11 10 9 0\n\nSEB RESERVED PSS NRZM PSR RESERVED\n\n31:24 SEB (Security Byte):\nWrite: \u20180x55\u2019 = the write will have effect (the register will be updated)\nAny other value = the write will have no effect on the register\nRead: All zero\n\n23:13 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n12 PSS (ESA/PSS enable) [11]\nWrite/Read: \u20180\u2019 = disable, \u20181\u2019 = enable [read-only]\n\n11 NRZM (Non-Return-to-Zero Mark Decoder enable)\nWrite/Read: \u20180\u2019 = disable, \u20181\u2019 = enable [read-only]\n\n10 PSR (Pseudo-De-Randomizer enable)\nWrite/Read: \u20180\u2019 = disable, \u20181\u2019 = enable [read-only]\n\n9:0 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\nPower-up default: 0x00001000, The default value depends on the tcmark and tcpseudo inputs\n\nTable 11.36 Spacecraft identifier register (SIR)[7]\n\n31 0901\n\nRESERVED SCID\n\n31:10 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n9:0 SCID (Spacecraft Identifier)\nWrite: Don\u2019t care\nRead: Bit[9] = MSB, Bit[0] = LSB\n\nPower-up default: Depends on SCID input configuration\n\nTable 11.37 Frame acceptance report register (FAR)[7]\n\n31 30 25 24 19 18 16 15 14 13 11 10 0\n\nSSD RESERVED CAC CSEC RESERVED SCl RESERVED\n\n31 SSD (Status of Survey Data) (see [44])\nWrite: Don\u2019t care\nRead: Automatically cleared to 0 when any other field is updated by the coding layer\nAutomatically set to 1 upon a read\n\n30:25 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n(continued)\n\n11 CDPI Assembly Annexes and Data Sheets 219\n\n\n\nTable 11.37 (continued)\n\n24:19 CAC (Count of Accept Codeblocks) (see [44])\nWrite: Don\u2019t care.\nRead: Information obtained from coding layer[2]\n\n18:16 CSEC (Count of Single Error Corrections) (see [44])\nWrite: Don\u2019t care\nRead: Information obtained from coding layer\n\n15:14 RESERVED\nWrite: Don\u2019t care\n\nRead: All zero\n13:11 SCI (Selected Channel Input) (see [44])\n\nWrite: Don\u2019t care\nRead: Information obtained from coding layer\n\n10:0 RESERVED\nWrite: Don\u2019t care\nRead:All zero\n\nPower-up default: 0x00003800\n\nTable 11.38 CLCW register (CLCWRx)\u2014see [43]\n31 30 29 28 26 25 24 23 18 17 16 15 14 13 12 11 10 9 8 7 0\n\nCWTY VNUM STAF ClE VCl RESERVED NRFA NBLO LOUT WAlT RTMl FBCO RTYPE RVAL\n\n31 CWTY (Control Word Type)\n30:29 VNUM (CLCW Version Number)\n28:26 STAF (Status Fields)\n25:24 CIE (COP In Effect)\n23:18 VCI (Virtual Channel Identifier)\n17:16 Reserved (PSS/ECSS requires \u2018\u201800\u2019\u2019)\n15 NRFA (No RF Available)\n\nWrite: Don\u2019t care\nRead: Based on discrete inputs\n\n14 NBLO (No Bit Lock)\nWrite: Don\u2019t care\nRead:Based on discrete inputs.\n\n13 LOUT (Lock Out)\n12 WAIT (Wait)\n11 RTMI (Retransmit)\n10:9 FBCO (FARM-B Counter)\n8 RTYPE (Report Type)\n7:0 RVAL (Report Value)\nPower-up default: 0x00000000\n\n220\n\n\n\nThe following register provides to the OBSW the RF-Available flag and the\nBit-Lock flag as coming from the receivers.\n\nThe following register is essential for the OBSW to detect overrun and FIFO\nfull errors:\n\nTable 11.39 Physical interface register (PHIR)[7]\n\n31 16 15 8 7 0 \n\nRESERVED\n\n31:16 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n15:8 RFA (RF Available)[3]\n\nOnly implemented inputs are taken into account. All other bits are zero.\nWrite: Don\u2019t care\nRead: Bit[8] = input 0, Bit[15] = input 7\n\n7:0 BLO (Bit Lock)[3]\n\nOnly implemented inputs are taken into account. All other bits are zero\nWrite: Don\u2019t care\nRead: Bit[0] = input 0, Bit[7] = input 7\n\nPower-up default: Depends on inputs\n\nTable 11.40 Control register (COR)\n31 24 23 10 9 8 1 0\n\nSEB RESERVED CRST RESERVED RE\n\n31:24 SEB (Security Byte):\nWrite: \u20180x55\u2019 = the write will have effect (the register will be updated). Any other\nvalue = the write will have no effect on the register\nRead: All zero\n\n23:10 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n9 CRST (Channel reset)[4]\n\nWrite: \u20181\u2019 = initiate channel reset,\u20180\u2019 = do nothing\nRead: \u20181\u2019 = unsuccessful reset, \u20180\u2019 = successful reset\nNote: The Coding Layer is not reset\n\n8:1 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n0 RE (Receiver Enable)\nThe input from the Coding Layer receiver is masked when the RE bit is disabled\nRead/Write: \u20180\u2019 = disabled, \u20181\u2019 = enabled\n\nPower-up default: 0x00000000\n\n11 CDPI Assembly Annexes and Data Sheets 221\n\n\n\nThe following register must be initialized by the OBSW with a memory address\nrepresenting the start address of the TC buffer:\n\nTable 11.41 Status register (STR)[7]\n\n31 11 10 9 8 7 6 5 4 3 1 0\n\nRESERVED RBF RESERVED RFF RESERVED OV RESERVED CR\n\n31:11 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n10 RBF (RX BUFFER Full)\nWrite: Don\u2019t care\nRead: \u20180\u2019 = Buffer not full, \u20181\u2019 = Buffer full (this bit is set if the buffer has less than 1/8\nof free space)\n\n9:8 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n7 RFF (RX FIFO Full)\nWrite: Don\u2019t care\nRead: \u20180\u2019 = FIFO not full, \u20181\u2019 = FIFO full\n\n6:5 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n4 OV (Overrun)[5]\n\nWrite: Don\u2019t care\nRead: \u20180\u2019 = nominal, \u20181\u2019 = data lost\n\n3:1 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n0 CR (CLTU Ready)[5]\n\nThere is a worst case delay from the CR bit being asserted, until the data has actually been\ntransferred from the receiver FIFO to the ring buffer. This depends on the PCI load etc\nWrite: Don\u2019t care\nRead: \u20181\u2019 = new CLTU in ring buffer. \u20180\u2019 = no new CLTU in ring buffer\n\nPower-up default: 0x00000000\n\nTable 11.42 Address space register (ASR)[8]\n\n31 10 9 8 7 0 \n\nBUFST RESERVED RXLEN\n\n31:10 BUFST (Buffer Start Address)\n22-bit address pointer\nThis pointer contains the start address of the allocated buffer space for this channel.\nRegister has to be initialized by software before DMA capability can be enabled\n\n9:8 RESERVED\nWrite: Don\u2019t care\nRead: All zero\n\n7:0 RXLEN (RX buffer length)\nNumber of 1 kB-blocks reserved for the RX buffer\n(Min. 1 kByte = 0x00, Max. 256 kByte = 0xFF)\n\nPower-up default: 0x00000000\n\n222\n\n\n\nThe following read and write pointers have to be reinitialized at each TC\naccess:\n\nLegend:\n\n[1]. The global system reset caused by the SRST-bit in the GRR-register results in\nthe following actions:\n\n\u2022 Initiated by writing a \u20181\u2019\u2019, gives \u20180\u2019 on read-back when the reset was\nsuccessful.\n\n\u2022 No need to write a \u20180\u2019 to remove the reset.\n\u2022 Unconditionally, means no need to check/disable something in order for\n\nthis reset- function to correctly execute.\n\u2022 Could of course lead to data-corruption coming/going from/to the reset core.\n\u2022 Resets the complete core (all logic, buffers & register values).\n\u2022 Behaviour is similar to a power-up.\n\nNote that the above actions require that the HRESET signal is fed back\ninverted to HRESETn, and the CRESET signal is fed back inverted to\nCRESETn.\n\n\u2022 The Coding Layer is not reset.\n\nTable 11.43 Receive read pointer register (RRP)[6, 9, 10]\n\n31 24 23 0 \n\nRxRdPtrUpper RxRdPtrLower\n\n31:24 10-bit upper address pointer\nWrite: Don\u2019t care\nRead: This pointer = ASR[31..24]\n\n23:0 24-bit lower address pointer\nThis pointer contains the current RX read address. This register is to be incremented with\nthe actual amount of bytes read\n\nPower-up default: 0x00000000\n\nTable 11.44 Receive write pointer register (RWP)[6, 9]\n\n31 24 23 0 \n\nRxWrPtrUpper RxWrPtrLower\n\n31:24 10-bit upper address pointer\nWrite: Don\u2019t care\nRead: This pointer = ASR[31..24]\n\n23:0 24-bit lower address pointer\nThis pointer contains the current RX write address. This register is incremented with the\nactual amount of bytes written\n\nPower-up default: 0x00000000\n\n11 CDPI Assembly Annexes and Data Sheets 223\n\n\n\n[2]. The FAR register supports the CCSDS/ECSS standard frame lengths\n(1024 octets), requiring an 8 bit CAC field instead of the 6 bits specified for\nPSS. The two most significant bits of the CAC will thus spill over into the\n\u2018\u2018LEGAL/ILLEGAL\u2019\u2019 FRAME QUALIFIER field, Bit [26:25]. This is only\nthe case when the PSS bit is set to \u20180\u2019.\n\n[3]. Only inputs 0 through 3 are implemented.\n[4]. The channel reset caused by the CRST-bit in the COR-register results in the\n\nfollowing actions:\n\n\u2022 Initiated by writing a \u20181\u2019\u2019, gives \u20180\u2019 on read-back when the reset was\nsuccessful.\n\n\u2022 No need to write a \u20180\u2019 to remove the reset.\n\u2022 All other bit\u2019s in the COR are neglected (not looked at) when the CRST-bit\n\nis set during a write, meaning that the value of these bits has no impact on\nthe register-value after the reset.\n\n\u2022 Unconditionally, means no need to check/disable something in order for\nthis reset- function to correctly execute.\n\n\u2022 Could of course lead to data-corruption coming/going from/to the reset\nchannel.\n\n\u2022 Resets the complete channel (all logic, buffers & register values)\n\u2022 Except the ASR-register of that channel which remains it is value.\n\u2022 All read- and write-pointers are automatically re-initialized and point to the\n\nstart of the ASR-address.\n\u2022 All registers of the channel (except the ones described above) get their\n\npower-up value.\n\u2022 This reset shall not cause any spurious interrupts.\n\nNote that the above actions require that the CRESET signal is fed back\ninverted to CRESETn.\n\n\u2022 The Coding Layer is not reset.\n\n[5]. These bits are sticky bits which means that they remain present until the\nregister is read and that they are cleared automatically by reading the register.\n\n[6]. The value of the pointers depends on the content of the corresponding\nAddress Space Register (ASR).\nDuring a system reset, a channel reset or a change of the ASR register, the\npointers are recalculated based on the values in the ASR register.\nThe software has to take care (when programming the ASR register) that the\npointers never have to cross a 16MByte boundary (because this would cause\nan overflow of the 24-bit pointers).\nIt is not possible to write an out of range value to the RRP register. Such\naccess will be ignored with an HERROR.\n\n224\n\n\n\n[7]. An AMBA AHB ERROR response is generated if a write access is attempted\nto a register without any writable bits.\n\n[8]. The channel reset caused by a write to the ASR-register results in the fol-\nlowing actions:\n\n\u2022 Initiated by writing an updated value into the ASR-register.\n\u2022 Unconditionally, means no need to check/disable something in order for this\n\nreset- function to correctly execute.\n\u2022 Could of course lead to data-corruption coming/going from/to the reset\n\nchannel.\n\u2022 Resets the complete channel (all logic & buffers) but not all register values,\n\nonly the following:\n\u2022 COR-register, TE & RE bits get their power-up value, other bits remain their\n\nvalue.\n\u2022 STR-register, all bits get their power-up value.\n\u2022 Other registers remain their value.\n\u2022 Updates the ASR-register of that channel with the written value.\n\u2022 All read- and write-pointers are automatically re-initialized and point to the\n\nstart of the ASR-address.\n\u2022 This reset shall not cause any spurious interrupts.\n\u2022 The Coding Layer is not reset.\n\n[9]. During a channel reset the register is temporarily unavailable and HRETRY\nresponse is generated if accessed.\n\n[10]. It is not possible to write an out of range value to the RRP register. Such\naccess will be ignored without an error.\n\n[11]. The PSS bit usage is only supported if the gPSS generic is set on the TCC\nmodule. Fixed to 0.\n\nA number of interrupt registers of the TC decoder give complete freedom to the\nsoftware, by providing means to mask interrupts, clear interrupts, force interrupts\nand read interrupt status. Details on these can be taken from [55].\n\n11 CDPI Assembly Annexes and Data Sheets 225\n\n\n\n11.6 OBC Unit CAD Drawing\n\nSee Fig. 11.4.\n\nO\nnb\n\noa\nrd\n\n C\nom\n\npu\nte\n\nr \n\ndf\nds\n\nf\n\nLe\nng\n\now\nsk\n\ni\n\n5 \nkg\n\nTe\nl.(\n\nZe\nic\n\nhn\ner\n\n):\nTe\n\nl.(\nBe\n\ntre\nue\n\nr):\nBe\n\ntre\nue\n\nr:\n\nAl\nlg\n\nem\nei\n\nnt\nol\n\ner\nan\n\nz\nna\n\nch\n IS\n\nO\n 2\n\n76\n8-\n\nm\nK\n\nZu\nst\n\n.\n\u00c4n\n\nde\nru\n\nng\nD\n\nat\num\n\nN\nam\n\ne\n\nD\nat\n\num\n06\n\n.1\n1.\n\n20\n12\n\nN\nam\n\ne\nBe\n\nar\nb.\n\nG\nep\n\nr.\nBe\n\nre\nch\n\n.\nN\n\nor\nm\n\nIn\nst\n\nitu\nt f\n\n\u00fcr\nR\n\nau\nm\n\nfa\nhr\n\nts\nys\n\nte\nm\n\ne\n\nM\na\u00df\n\nst\nab\n\n  1\n:2\n\nW\ner\n\nks\nto\n\nff/\nH\n\nal\nbz\n\neu\ng\n\nM\nas\n\nse\n\nZe\nic\n\nhn\ngs\n\nnu\nm\n\nm\ner\n\n:\n\nZe\nic\n\nhn\ngs\n\nda\nte\n\ni:\nAs\n\nm\n, O\n\nBC\n.C\n\nAT\nD\n\nra\nw\n\nin\ng\n\nEr\ns. \n\nf\u00fc\nr:\n\nBl\nat\n\nt Bl\n.\n\nFo\nrm\n\nat A3\nD\n\nIN\n 6\n\n78\n4\n\n+0\n.3\n\n+0\n.1\n\n-0\n.2\n\n-0\n.4\n\nX\n\nY\n\nX\n\nZ\n\nJ1J2\n\nJ3J4\n\nJ5\nJ6\n\nJ7J8\n\nJ9J1\n0\n\nJ1\n1\n\nJ1\n2\n\nJ1\n: S\n\nub\n-D\n\n H\nD\n\n 1\n5 \n\nm\nal\n\ne\nJ2\n\n: S\nub\n\n-D\n H\n\nD\n 1\n\n5 \nfe\n\nm\nal\n\ne\nJ3\n\n: S\nub\n\n-D\n 2\n\n5 \nm\n\nal\ne\n\nJ4\n: M\n\nic\nro\n\n-D\n 1\n\n00\n m\n\nal\ne\n\nJ5\n: M\n\nic\nro\n\n-D\n 1\n\n00\n fe\n\nm\nal\n\ne\nJ6\n\n: M\nic\n\nro\n-D\n\n 1\n00\n\n m\nal\n\ne\nJ7\n\n: S\nub\n\n-D\n H\n\nD\n 1\n\n5 \nm\n\nal\ne\n\nJ8\n: S\n\nub\n-D\n\n H\nD\n\n 1\n5 \n\nfe\nm\n\nal\ne\n\nJ9\n: S\n\nub\n-D\n\n 2\n5 \n\nm\nal\n\ne\nJ1\n\n0:\n M\n\nic\nro\n\n-D\n 1\n\n00\n m\n\nal\ne\n\nJ1\n1:\n\n M\nic\n\nro\n-D\n\n 1\n00\n\n fe\nm\n\nal\ne\n\nJ1\n2:\n\n M\nic\n\nro\n-D\n\n 1\n00\n\n m\nal\n\ne\n\nTo\np \n\nVi\new\n\nR\nea\n\nr V\nie\n\nw\nBo\n\ntto\nm\n\n V\nie\n\nw\n\n12\n1\n\nM\nat\n\ner\nia\n\nl: \nEN\n\n A\nW\n\n-6\n08\n\n2 \n(A\n\nlM\ngS\n\ni1\n)\n\nSu\nrfa\n\nce\n: A\n\nlu\nm\n\nin\niu\n\nm\n: C\n\nhr\nom\n\nat\ned\n\n   \n   \n\n   \n   \n\n  a\nll \n\nno\nn-\n\nco\nnn\n\nec\nte\n\nd \nAl\n\num\nin\n\niu\nm\n\n F\nac\n\nes\n:\n\n   \n   \n\n   \n   \n\n  c\noa\n\nte\nd \n\nw\nith\n\n A\ner\n\nog\nla\n\nze\n Z\n\n30\n7\n\nM\nas\n\ns:\n 5\n\nkg\nM\n\nom\nen\n\nts\n o\n\nf I\nne\n\nrti\na \n\n[k\ngm\n\n\u00b3]:\n   \n\n  L\nxx\n\n=0\n.0\n\n95\n   \n\nLy\ny=\n\n0.\n13\n\n7 \n  L\n\nzz\n=0\n\n.1\n81\n\n   \n  L\n\nxy\n=-\n\n0.\n06\n\n5 \n L\n\nxz\n=-\n\n0.\n03\n\n9 \n L\n\nyz\n=-\n\n0.\n0316\n\n.5\n\n55\n.5\n\n89 11\n9\n\n14\n6.\n\n5\n\n18\n5.\n\n5\n\n21\n9\n\n24\n9\n\n10\n94\n\n17\n8\n\n6\nM\n\n24\nx\n\n(H\nel\n\nic\noi\n\nls\n)\n\n21\n7\n\n267\n\nF\nig\n\n.\n11\n\n.4\nO\n\nB\nC\n\nho\nus\n\nin\ng\n\nC\nA\n\nD\ndr\n\naw\nin\n\ng.\n?\n\nir\ns,\n\nU\nni\n\nve\nrs\n\nit\ny\n\nof\nS\n\ntu\ntt\n\nga\nrt\n\n226\n\n\n\n11.7 OBC Unit I/O-Board Connector Pin Allocation\n\nI/O-Board Connector D:\n\n\u2022 I/O-Board internal nomenclature D\n\u2022 External instantiations J5/J11 according to annex Sect. 11.6\n\nGeneric Pin Allocations (IF Type)\nSee Fig. 11.5.\n\nFig. 11.5 I/O-Board connector D\u2014generic pin allocations. ? 4Links Ltd.\n\n11 CDPI Assembly Annexes and Data Sheets 227\n\n\n\nPin Allocation to Target Satellite Equipment Interfaces\nSee Fig. 11.6.\n\nFig. 11.6 I/O-Board connector D\u2014target satellite specific interfaces. ? 4Links Ltd.\n\n228\n\n\n\nI/O-Board Connector E\n\n\u2022 I/O-Board internal nomenclature E\n\u2022 External instantiations J6/J12 according to annex Sect. 11.6\n\nGeneric Pin Allocations (IF Type)\nSee Fig. 11.7.\n\nFig. 11.7 I/O-Board connector E\u2014generic pin allocations. ? 4Links Ltd.\n\n11 CDPI Assembly Annexes and Data Sheets 229\n\n\n\nPin Allocation to Target Satellite Equipment Interfaces\nSee Fig. 11.8.\n\nFig. 11.8 I/O-Board connector E\u2014target satellite specific interfaces. ? 4Links Ltd.\n\n230\n\n\n\n11.8 OBC Unit CCSDS-Board Connector Pin Allocation\n\nTransceiver Interfaces and Cross Coupling\n\n\u2022 CCSDS-Board internal nomenclature E (Fig. 11.9).\n\u2022 External instantiations J4/J10 according to annex Sect. 11.6.\n\nFig. 11.9 CCSDS-Board connector E\u2014pin allocations. ? 4Links Ltd.\n\n11 CDPI Assembly Annexes and Data Sheets 231\n\n\n\n11.9 OBC Power-Board Connectors Pin Allocation\n\nThe connector/pin allocations of the OBC Power-Boards external connectors are\nprovided in Tables (11.45\u201311.47):\n\nPower-Board Data Connector\n\n\u2022 Power-Board internal nomenclature J2\n\u2022 External instantiations J1/J7 according to annex Sect. 11.6 Table 11.46.\n\nTable 11.45 J2\u2014Data connector on long board side (female)\n\nPin To Pwr-Board From Pwr-Board Voltage/signal Name\n\n1 Processor-Board N/R Data DSUTMS\n2 Processor-Board N/R Data DSUTCK\n3 Processor-Board N/R Data DSUTDI\n4 Processor-Board N/R Data DSUTDO\n5 Processor-Board N/R Data EMDC (DSU)\n6 Processor-Board N/R Data DSUACT\n7 Processor-Board N/R Data DSUBRK\n8 Processor-Board N/R Data DSUEN\n9 Processor-Board N/R Data DSURSTN\n10 Processor-Board N/R Data (RS422) data+\n11 Processor-Board N/R Data (RS422) data-\n13 Processor-Board N/R 3.3 V Ext. power\n15 Processor-Board N/R GND Ext. ground\n\nTable 11.46 J3\u2014power connector on long board side (female)\n\nPin To Pwr-Board From Pwr-Board Voltage/signal Usage Name\n\n1 x 20\u201325 Core Pwr24 V-processor\n\n2 x 20\u201325 IO Pwr24 V-IO\n\n3 x 20\u201325 CCSDS Pwr24 V-CCSDS\n\n6 x Return Core Pwr24 V-Ret-processor\n\n11 x Return IO Pwr24 V-Ret-IO\n\n12 x Return CCSDS Pwr24 V-Ret-CCSDS\n\n4 x 20\u201325 Heater Pwr24 V-heater\n\n13 x Return Pwr24 V-Ret-heater\n\n9 x GND Shield\n15 x GND Shield\n\n232\n\n\n\nThe lines routed via external connector J1 (see Fig. 11.2) connect to OBC\nProcessor-Board N. The lines routed via external connector J7 connect to OBC\nProcessor-Board R.\n\nPower-Board Power Connector\n\n\u2022 Internal nomenclature J3\n\u2022 External instantiations J2/J8 according to annex Sect. 11.6 Table 11.47.\n\nThe lines routed via external connector J2 connect to OBC Boards N. The lines\nrouted via external connector J8 connect to OBC Boards R.\n\nPower-Board PPS Signal Connector\n\n\u2022 Internal nomenclature J4\n\u2022 External instantiations J3/J9 according to annex Sect. 11.6.\n\nThe lines routed via external connector J3 connect to OBC Processor-Board N.\nThe lines routed via external connector J9 connect to OBC Processor-Board R.\n\nTable 11.47 J4\u2014PPS signal connector on long board side (male)\n\nPin To PWR-Board From PWR-Board Voltage/signal Usage\n\n1 x PPS+ STR\n10 x PPS- STR\n19 x GND STR\n2 x PPS+ 0 GPS0\n11 x PPS- 0 GPS0\n20 x GND GPS0\n4 x PPS+ 1 GPS1\n13 x PPS- 1 GPS1\n22 x GND GPS1\n6 x PPS+ 2 GPS2\n15 x PPS- 2 GPS2\n24 x GND GPS2\n3 x PPS+ 0 GPS0\n12 x PPS- 0 GPS0\n21 x GND GPS0\n5 x PPS+ 1 GPS1\n14 x PPS- 1 GPS1\n23 x GND GPS1\n7 x PPS+ 2 GPS2\n16 x PPS- 2 GPS2\n25 x GND GPS2\n\n11 CDPI Assembly Annexes and Data Sheets 233\n\n\n\n11.10 PCDU Unit CAD Drawing\n\nSee Fig. 11.10.\n\nF\nig\n\n.\n11\n\n.1\n0\n\nP\nC\n\nD\nU\n\nho\nus\n\nin\ng\n\nC\nA\n\nD\ndr\n\naw\nin\n\ng.\n?\n\nV\nec\n\ntr\non\n\nic\nA\n\ner\nos\n\npa\nce\n\nG\nm\n\nbH\n\n234\n\n\n\n11.11 PCDU Unit Connector Pin Allocations\n\nThe connector pin assignments of the PCDU are something very mission specific,\ndriven by the spacecraft design. Therefore here only an overview concerning\nwhich PCDU connector routes which type of signals is provided. Just for the\nconnectors J11 and J12 the detailed assignments are given further below since they\nroute\n\n\u2022 the HPC interface lines from OBC CCSDS-Board to PCDU and\n\u2022 the PCDU command/Control interfaces between OBC I/O-Boards and PCDU,\n\nand thus they are key interfaces between the OBC and PCDU in the frame of the\noverall CDPI architecture (Tables 11.48, 11.49, and 11.50).\n\nTable 11.48 List of connectors\n\nName Type Description\n\nJ1 SUB-D 25, male Solar panel 0, battery 0,\nJ2 SUB-D 25, male Solar panel 1, battery 1,\nJ3 SUB-D 25, male Solar panel 2, battery 2, EGSE power input, Solar test string\nJ4 SUB-HD 62, female S/C equipment power supplies I\nJ5 SUB-HD 62, female S/C equipment power supplies II\nJ6 SUB-HD 62, female S/C equipment power supplies III\nJ7 SUB-D 25, female S/C equipment power supplies IV\nJ8 SUB-HD 62, male Temperature sensor inputs I\nJ9 SUB-HD 62, male Temperature sensor inputs II\nJ10 SUB-D 25, female Deployment sensor inputs; sun sensor inputs I\nJ11 SUB-D 9, male Communication interface for Common Commanding and\n\nHigh Priority Commanding I\nJ12 SUB-D 9, male Communication interface for Common Commanding and\n\nHigh Priority Commanding II\nJ13 SUB-D 25, female Sun sensor inputs II\n\nTable 11.49 Pin assignment of J11(X13) Sub -D 9, male\n\nPin Name Signal description\n\n1 GND Signal ground\n2 Rx1A RS422 HPC interface from OBC CCSDS-Board 0\n3 Rx1B RS422 HPC interface from OBC CCSDS-Board 0\n4 Tx1A RS422 HPC interface from OBC CCSDS-Board 0\n5 Tx1B RS422 HPC interface from OBC CCSDS-Board 0\n6 Rx0A RS422 command interface from/to OBC I/O-Board N\n7 Rx0B RS422 command interface from/to OBC I/O-Board N\n8 Tx0A RS422 command interface from/to OBC I/O-Board N\n9 Tx0B RS422 command interface from/to OBC I/O-Board N\n\n11 CDPI Assembly Annexes and Data Sheets 235\n\n\n\n11.12 PCDU Switch and Fuse Allocation to Spacecraft\nEquipment\n\nThe design of the PCDU includes a total of 27 fuses and 77 power switches plus 2\nspecial switches for high-power consuming loads. The Table (11.51) provides an\noverview of the assignments of the fuses and switches to equipment of the FLP\ntarget spacecraft.\n\nTable 11.50 Pin assignment of J12 (X12) Sub -D 9, male\n\nPin Name Signal description\n\n1 GND Signal ground\n2 Rx1A RS422 HPC interface from OBC CCSDS-Board 1\n3 Rx1B RS422 HPC interface from OBC CCSDS-Board 1\n4 Tx1A RS422 HPC interface from OBC CCSDS-Board 1\n5 Tx1B RS422 HPC interface from OBC CCSDS-Board 1\n6 Rx0A RS422 command interface from/to OBC I/O-Board R\n7 Rx0B RS422 command interface from/to OBC I/O-Board R\n8 Tx0A RS422 command interface from/to OBC I/O-Board R\n9 Tx0B RS422 command interface from/to OBC I/O-Board R\n\nTable 11.51 Switch and fuse register description\n\nNo. of fuse (SW) No. of Switch (SW) Component\n\n00 00 OBC Processor-Board N\n01\n\n01 02 OBC Processor-Board R\n03\n\n02 04 OBC I/O-Board N\n05\n\n03 06 OBC I/O-Board R\n07\n\n04 08 OBC CCSDS-Board N\n09\n\n05 10 OBC CCSDS-Board R\n11\n\n06 12 TC receiver 0\n\n07 13 TC receiver 1\n\n08 14 Camera Payload: MICS channel green\n15 Payload controller power channel N\n16 Payload data transmitter N\n17\n\n(continued)\n\n236\n\n\n\nTable 11.51 (continued)\n\nNo. of fuse (SW) No. of Switch (SW) Component\n\n09 18 Camera Payload: MICS channel red\n19 Payload controller power channel R\n20 Payload data transmitter R\n21\n\n10 22 Camera payload: MICS channel near infrared\n23 TM transmitter N\n24\n25 STR N\n\n11 26 RWL 3\n27 STR R\n28 FOG 3\n\n12 29 FOG 0\n30 RWL 0\n\n13 31 FOG 1\n32 RW 1\n\n14 33 FOG 2\n34 RW 2\n\n15 35 MGM 0\n\n16 36 MGM 1\n17 37 Camera payload: PAMCAM\n\n38 MGT unit R\n39 GPS electronics 1\n\n18 40 GPS electronics 0\n41 MGT unit N\n42 GPS electronics 2\n\n19 43 Laser payload: Osiris channel 2\n44\n45 TM transmitter R\n46\n\n20 47 Laser payload: Osiris channel 1\n48\n49 Data transmission power amplifier R\n50\n51 Survival heater OBC R ? TT&C R (with thermostat)\n\n21 52 Survival heater OBC N ? TT&C N (with thermostat)\n53 Data transmission power amplifier N\n54\n\n(continued)\n\n11 CDPI Assembly Annexes and Data Sheets 237\n\n\n\nTable 11.51 (continued)\n\nNo. of fuse (SW) No. of Switch (SW) Component\n\n22 55 Satellite payload compartment heater N\n56\n57 Satellite core compartment heater N\n58\n59 Satellite service compartment heater N\n60\n\n23 61 Satellite payload compartment heater R\n62\n63 Satellite core compartment heater R\n64\n65 Satellite service compartment heater R\n66\n\n24 67 SA retaining mechanism N\n68\n\n25 69 SA retaining mechanism R\n70\n\n26 71 De-orbiting mechanism\n72\n73 Payload: AIS antenna\n74\n75 Payload: AIS receiver\n76\n\n238\n\n\n\nReferences\n\n\u00a9 selenamay - Fotolia.com\n\nReferences on the CDPI System Concept\n\n1. Leon3FT Processor: http://www.aeroflex.com/ams/pagesproduct/prods-hirel-leon.cfm\n\n2. Stratton, Sam: Fault Tolerant LEON Processing, Devices and Circuit Cards MAPLD 2009 -\nGreenbelt, Maryland, August 31 - September 3, 2009\n\n3. Aeroflex Gaisler Leon3FT IP Core: http://www.gaisler.com/cms/index.php?option=\ncom_content&task=view&id=13&Itemid=53\n\n4. Eickhoff, Jens; Stratton, Sam; Butz, Pius; Cook, Barry; Walker, Paul; Uryu, Alexander;\nLengowski, Michael; R\u00f6ser, Hans-Peter: Flight Model of the FLP Satellite OBC and\nReconfiguration Unit Data Systems in Aerospace, DASIA 2012 Conference, 14\u201316 May,\n2012, Dubrovnik, Croatia\n\n5. Habinc, Sandi A.; Cook, Barry; Walker, Paul; Eickhoff, Jens; Witt, Rouven; R\u00f6ser, Hans-\nPeter: Using FPGAs and a LEON3FT Processor to Build a \u2018\u2018Flying Laptop\u2019\u2019, ReSpace/\nMAPLD 2011 Conference 2011, 22\u201325 August 2011, Albuquerque, New Mexico, USA\n\n6. Uryu, Alexander N.; Fritz, Michael; Eickhoff, Jens; R\u00f6ser, Hans-Peter: Cost and Time\nEfficient Functional Verification in Hardware and Software 28th ISTS (International\nSymposium on Space Technology and Science), 05\u201320 June, 2011, Okinawa, Japan\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8,\n? Springer-Verlag Berlin Heidelberg 2013\n\n239\n\nhttp://www.aeroflex.com/ams/pagesproduct/prods-hirel-leon.cfm\nhttp://www.gaisler.com/cms/index.php?option=com_content&task=view&id=13&Itemid=53\nhttp://www.gaisler.com/cms/index.php?option=com_content&task=view&id=13&Itemid=53\n\n\n7. Eickhoff, Jens; Cook, Barry; Walker, Paul; Habinc, Sandi A.; Witt, Rouven; R\u00f6ser, Hans-\nPeter: Common board design for the OBC I/O unit and the OBC CCSDS unit of the Stuttgart\nUniversity Satellite \u2018\u2018Flying Laptop\u2019\u2019 Data Systems in Aerospace, DASIA 2011 Conference,\n17\u201320 May, 2011, San Anton, Malta\n\n8. Eickhoff, Jens; Stevenson, Dave; Habinc, Sandi; R\u00f6ser Hans-Peter:University Satellite\nfeaturing latest OBC Core & Payload Data Processing Technologies, Data Systems in\nAerospace, DASIA 2010 Conference, Budapest, Hungary, June, 2010\n\nReferences on S/C Engineering\n\n9. Eickhoff, Jens: Simulating Spacecraft Systems, Springer, 2009, ISBN: 978-3-642-01275-4\n\n10. Eickhoff, Jens: Onboard Computers, Onboard Software and Satellite Operations - An\nIntroduction, Springer, 2011, ISBN 978-3-642-25169-6\n\nReferences on General Engineering Standards\n\n11. http://www.spacewire.esa.int/content/Home/HomeIntro.php\n\n12. ECSS-E-ST-50-12C (31 July 2008) SpaceWire - Links, nodes, routers and networks\n\n13. ECSS-E-ST-50-51C (5 February 2010) SpaceWire protocol Identification\n\n14. ECSS-E-ST-50-52C (5 February 2010) SpaceWire - Remote memory access protocol\n\n15. ECSS-E-50-12C SpaceWire cabling\n\n16. ECSS-E-ST-50C Communications\n\n17. ECSS-E-ST-50-01C Space data links - Telemetry synchronization and channel coding\n\n18. ECSS-E-ST-50-02C Ranging and Doppler tracking\n\n19. ECSS-E-ST-50-03C Space data links - Telemetry Transfer Frame protocol\n\n20. ECSS-E-ST-50-04C Space data links - Telecommand protocols, synchronization and channel\ncoding\n\n21. ECSS-E-ST-50-05C Radio frequency and modulation\n\n22. ECSS-E-70-41A Ground systems and operations - Telemetry and telecommand packet\nutilization\n\n23. Consultative Committee for Space Data Systems: CCSDS Recommended Standards, Blue\nBooks, available online at http://public.ccsds.org/publications/BlueBooks.aspx\n\n24. CCSDS 130.0-G-2 CCSDS layer conversions\n\n25. CCSDS-131.0-B-1 TM Synchronization and Channel Coding\n\n26. CCSDS-132.0-B-1 TM Space Data Link Protocol\n\n27. CCSDS 133.0-B-1 Space Packet Protocol\n\n28. CCSDS-133.0-B-1-C1 Encapsulation Service Technical Corrigendum 1\n\n29. CCSDS-135.0-B-3 Space Link Identifiers\n\n30. CCSDS-201.0 Telecommand - Part 1 - Channel Service, CCSDS 201.0-B-3, June 2000\n\n31. CCSDS-202.0 Telecommand - Part 2 - Data Routing Service, CCSDS 202.0-B-3, June 2001\n\n32. CCSDS-202.1 Telecommand - Part 2.1 - Command Operation Procedures, CCSDS 202.1-B-\n2, June 2001\n\n33. CCSDS-203.0 Telecommand - Part 3 - Data Management Service, CCSDS 203.0-B-2, June\n2001\n\n240 References\n\nhttp://www.spacewire.esa.int/content/Home/HomeIntro.php\nhttp://public.ccsds.org/publications/BlueBooks.aspx\n\n\n34. CCSDS-231.0-B-2 TC Synchronization and Channel Coding\n\n35. CCSDS 232.0-B-2 TC Space Data Link Protocol\n\n36. CCSDS-232.1-B-2 Communications Operation Procedure-1\n\n37. CCSDS-401.0-B Radio Frequency and Modulation Systems\n\n38. CCSDS-732.0-B-2 AOS Space Data Link Protocol\n\n39. ESA PSS-04-0: Space data communications\n\n40. ESA PSS-04-103: Telemetry channel coding standard, Issue 1\n\n41. ESA PSS-04-105: Radio frequency and modulation standard\n\n42. ESA PSS-04-106: Packet telemetry standard, Issue 1\n\n43. ESA PSS-04-107: Packet Telecommand Standard, Issue 2\n\n44. ESA PSS-04-151: Telecommand Decoder Standard, Issue 1\n\n45. ECSS-Q-ST-70-08C Manual soldering of high-reliability electrical connections\n\n46. ECSS-Q-ST-70-26C Crimping of high-reliability electrical connections\n\n47. ECSS-E-10-03A Space Engineering - Testing, February 2002\n\n48. Astrium Patent Affiliation P700377-DE-NP: Multifunktionaler Kontroller f\u00fcr einen Satelliten\nDeutsches Patent- und Markenamt DPMA 10 2012 009 513.9\n\nReferences on the Processor-Boards\n\n49. UT699 LEON3 Datasheet: http://www.aeroflex.com/ams/pagesproduct/datasheets/leon/\nut699LEON3datasheet.pdf\n\n50. UT699 LEON3FT Functional Manual: http://www.aeroflex.com/ams/pagesproduct/\ndatasheets/leon/UT699LEON3UserManual.pdf\n\n51. UT8R2M39 80Megabit SRAM MCM: http://www.aeroflex.com/ams/pagesproduct/\ndatasheets/UT8ER1M39SRAMMCM.pdf\n\n52. FM22L16 4Mbit F-RAM Memory: http://www.ramtron.com/files/datasheets/FM22L16_\nds.pdf\n\n53. UT6325 RadTol Eclipse FPGA: http://www.aeroflex.com/ams/pagesproduct/datasheets/\nRadTolEclipseFPGA.pdf\n\n54. UT54LVDS031LVE 3.3-VOLT QUAD LVDS Driver: http://www.aeroflex.com/ams/\npagesproduct/datasheets/LVDSDriver3v.pdf\n\n55. UT54LVDS032LVE 3.3-VOLT QUAD LVDS Receiver: http://www.aeroflex.com/ams/\npagesproduct/datasheets/LVDSReceiver3v.pdf\n\n56. DS16F95QMLRS-422 Transceiver: http://www.national.com/ds/DS/DS16F95QML.pdf\n\nReferences on Low Level Software and Operating System\n\n57. OAR Corporation: http://www.rtems.com\n\n58. Aeroflex Gaisler RTEMS: http://www.aeroflex.com/gaisler\n\nReferences 241\n\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/leon/ut699LEON3datasheet.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/leon/ut699LEON3datasheet.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/leon/UT699LEON3UserManual.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/leon/UT699LEON3UserManual.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/UT8ER1M39SRAMMCM.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/UT8ER1M39SRAMMCM.pdf\nhttp://www.ramtron.com/files/datasheets/FM22L16_ds.pdf\nhttp://www.ramtron.com/files/datasheets/FM22L16_ds.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/RadTolEclipseFPGA.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/RadTolEclipseFPGA.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/LVDSDriver3v.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/LVDSDriver3v.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/LVDSReceiver3v.pdf\nhttp://www.aeroflex.com/ams/pagesproduct/datasheets/LVDSReceiver3v.pdf\nhttp://www.national.com/ds/DS/DS16F95QML.pdf\nhttp://www.rtems.com\nhttp://www.aeroflex.com/gaisler\n\n\nReferences on the I/O-Boards\n\n59. 4Links Ltd.: SpaceWire Interface Unit for Interfacing to Avionics, Payloads, and TM/TC\nunits, User Manual for FLP IO, FM SIU B-012-PPFLPIO\n\n60. Everspin MRAM Brochure: http://everspin.com/PDF/MSG-14349_MRAM_Sales_Bro.pdf\n\n61. Everspin MR4A16b Data Sheet: http://everspin.com/PDF/EST_MR4A16B_prod.pdf\n\nReferences on the CCSDS TM/TC Encoder / Decoder\n\n62. Aeroflex Gaisler AB: CCSDS TM / TC and SpaceWire FPGA Data Sheet and User\u2019s Manual\nGR-TMTC-0004 July 2012, Version 1.2\n\n63. 4Links Ltd.: SpaceWire Interface Unit for Interfacing to Avionics, Payloads, and TM/TC\nunits, User Manual for FLP CCSDS, FM SIU B-012-PPFLPCCSDS\n\n64. GRLIB IP Library User\u2019s Manual, Aeroflex Gaisler http://www.aeroflex.com/gaisler\n\n65. GRLIB IP Core User\u2019s Manual, Aeroflex Gaisler http://www.aeroflex.com/gaisler\n\n66. Spacecraft Data Handling IP Core User\u2019s Manual, Aeroflex Gaisler http://www.aeroflex.\ncom/gaisler\n\n67. AMBA Specification, Rev 2.0, ARM IHI 0011A, Issue A, ARM Limited\n\n68. Radiation-Tolerant ProASIC3 Low Power Space-Flight Flash FPGAs, 51700107-1/11.09,\nRevision 1, November 2009, Actel Corp\n\n69. ProASIC3L Low Power Flash FPGAs, 51700100-9/2.09, February 2009, Actel Corp\n\n70. ProASIC3E Flash Family FPGAs, 51700098-9/8.09, August 2009, Actel Corp\n\nReferences on the OBC Power Boards\n\n71. ESA PSS-01-301: Derating Requirements applicable to Electronic, Electric and\nElectromechanical (EEE) Components for ESA Space Systems\n\nReferences on the OBC Internal Harness\n\n72. Manufacturing Data Package for IRS OBC internal harness HEMA Kabeltechnik GmbH &\nCo. KG, 2012\n\nReferences on the OBC Mechanical / Thermal Design\n\n73. Schuh: Konstruktion und Analyse eines Struktur-Thermal Modells des Onboard-Computers\nf\u00fcr den Kleinsatelliten Flying Laptop, Study Thesis, IRS, 2011\n\n74. Ley: Handbuch der Raumfahrttechnik Hanser Verlag, 2008\n\n75. http://www.mincoglobal.de/uploadedFiles/Products/Thermofoil_Heaters/Kapton_Heaters/hs202b-\nhk.pdf\n\n242 References\n\nhttp://everspin.com/PDF/MSG-14349_MRAM_Sales_Bro.pdf\nhttp://everspin.com/PDF/EST_MR4A16B_prod.pdf\nhttp://www.aeroflex.com/gaisler\nhttp://www.aeroflex.com/gaisler\nhttp://www.aeroflex.com/gaisler\nhttp://www.aeroflex.com/gaisler\nhttp://www.mincoglobal.de/uploadedFiles/Products/Thermofoil_Heaters/Kapton_Heaters/hs202b-hk.pdf\nhttp://www.mincoglobal.de/uploadedFiles/Products/Thermofoil_Heaters/Kapton_Heaters/hs202b-hk.pdf\n\n\n76. ESCC Detail Specification No. 3702/001 SWITCHES, THERMOSTATIC, BIMETALLIC,\nSPST, OPENING CONTACT\n\n77. https://escies.org/epplcomponent/show?id=3976\n\nReferences on the Power Control and Distribution Unit\n\n78. Gaget1-ID/160-8040 data sheet: RWE Space Solar Power GmbH, Gaget1-ID/160-8040 Data\nSheet, HNR 0002160-00, 2007\n\n79. Battery data sheet:: A123 Systems, Inc.: Nanophosphate High Power Lithium Ion Cell\nANR26650M1B, MD100113-01, 2011\n\n80. Test String data sheet: RWE Space Solar Power GmbH, RWE3G-ID2*/150-8040 Data Sheet,\n2005\n\n81. NASA radiation: PD-ED-1258: Space radiation Effects on Electronic Components in Low-\nEarth Orbit, April 1996, NASA - Johnson Space Center (JSC)\n\n82. Wertz, J. R.; Larson, W. J.: Space Mission Analysis and Design, 3rd ed., Microcosm Press,\n1999, ISBN 978-1881883104\n\n83. Uryu, A. N.: Development of a Multifunctional Power Supply System and an Adapted\nQualification Approach for a University Small Satellite, Dissertation, University of Stuttgart,\nStuttgart, Germany, Institute of Space Systems, 2012\n\n84. PCDU Microcontroller data sheet: RENESAS Electronics, Renesas 32-Bit RISC\nMicrocomputer, SuperH RISC engine Family/SH7040 Series, hardware manual, Issue 6.0,\n2003\n\n85. VECTRONIC Aerospace GmbH: Interface Control Document & Operation Manual for\nPower Control and Distribution Unit Type VPCDU-1, Project IRS-FLP TD-VAS-PCDU-\nFLP-ICD16.doc Issue 6, 12.12.2011\n\nReferences on System Tests\n\n86. Brandt, Alexander; Kossev, Ivan; Falke, Albert; Eickhoff, Jens;R\u00f6ser Hans-Peter:\nPreliminary System Simulation Environment of the University Micro-Satellite Flying\nLaptop, 6th IAA Symposium on Small Satellites for Earth Observation, German Aerospace\nCenter (DLR), 23\u201326 April 2007, Berlin, Germany\n\n87. Fritz, Michael: Hardware und Software Kompatibilit\u00e4tstests f\u00fcr den Bordrechner eines\nKleinsatelliten PhD thesis, Institute of Space Systems, 2012\n\n88. http://www.egos.esa.int/portal/egos-web/products/MCS/SCOS2000/\n\nReferences on the Target Satellite\n\n89. Grillmayer, Georg: An FPGA based Attitude Control System for the Micro-Satellite Flying\nLaptop.PhD thesis, Institute of Space Systems, 2008\n\n90. Zeile, Oliver: Entwicklung einer Simulationsumgebung und robuster Algorithmen f\u00fcr das\nLage- und Orbitkontrollsystem der Kleinsatelliten Flying Laptop und PERSEUS. PhD thesis,\nInstitute of Space Systems, 2012\n\nReferences 243\n\nhttps://escies.org/epplcomponent/show?id=3976\nhttp://www.egos.esa.int/portal/egos-web/products/MCS/SCOS2000/\n\n\nIndex\n\nA\nA3PE3000L FPGA, 21, 44, 58\nADuM14xx Isolator, 51\nADum54xx Isolator, 51\nAMBA bus, 15\nAnalog data handling, 152\nAnalog RIU, 160\nAnalog-to-Digital Converter, 160\nARM, 15\nASIC, 9\nAssembly, Integration and Tests, 176\nAttitude Control System, 192\nAuthentication Unit, 85\nAutonomous reconfiguration, 163\n\nB\nBackplane, 4, 119\nBandwidth allocation, 75\nBase plate, 136\nBaseplate, 135, 140\nBattery, 152\nBattery Charge Regulator, 157\nBattery power, 156\nBattery status, 162\nBattery survival heater, 157\nBCR, 157\nBi-stable relay, 157\nBleeder resistor, 107\nBoard identity, 47\nBoot-up sequence, 156\nBreadboard Model, 18, 174, 180\nBuffer chips, 47\n\nC\nCAD software, 138\nCAN bus, 15\n\nCATIA, 138\nCCSDS, 5, 65, 71, 208\nCCSDS protocol, 175\nChannel Acquisition Data Unit (CADU), 18,\n\n60, 62, 183\nChip Enable, 34, 36, 38\nCLCW, 63, 68, 70, 75, 84, 85, 93, 97, 98, 212\nCleanroom, 175\nClock, 6, 45\nClock divider, 77\nClock signal, 188\nClock strobe, 104\nCLTU, 17, 60, 62, 86, 165, 183\nCMOS, 57\nCodeblock decoding, 87\nCodeblock rejection, 87\nCoding Layer, 87\nCold redundancy, 144, 162\nCombined Data and Power Management\n\nInfrastructure, 1, 2, 14, 60, 86, 151, 161,\n182, 199\n\nCombined-Controller, 9, 11, 18, 22, 44, 141,\n161, 162\n\nCommand Link Control Word, 75, 84, 85, 93,\n97, 212\n\nCommand Link Transmission Unit, 86, 165, 183\nCommand Pulse Decoding Unit, 8, 9, 85, 164,\n\n165\nCommunication tests, 175\nCompact PCI, 15\nConductive coupling, 142, 144\nConnectors, 56\nConsultative Committee for Space Data\n\nSystems, 65, 71, 208\nControl loop, 160, 162\nConvolutional encoding, 60, 63, 76\nCPDU, 86, 164, 165\nCPU load, 191\n\nJ. Eickhoff (ed.), A Combined Data and Power Management Infrastructure,\nSpringer Aerospace Technology, DOI: 10.1007/978-3-642-35557-8,\n? Springer-Verlag Berlin Heidelberg 2013\n\n245\n\n\n\nD\nData bus, 7\nData Handling and Operations, 7\nData Link Protocol, 66, 69\nDC/DC converter, 105\nDebug Support Unit, 32, 41, 206\nDeformation, 139\nDeployment autosequence, 168\nDeployment timer, 167\nDepth of discharge, 162\nDe-randomizer, 87\nDigital I/O, 45\nDigital RIU, 160\nDirect Memory Access, 84, 85, 89\nDownlink rate, 65\nDRAM, 31\nDSU, 32\nDSU/Ethernet Interface, 41\n\nE\nECSS, 65, 71\nEDAC, 7, 32, 35, 36, 70\nEEPROM, 31\nEigenfrequency, 139\nElectromagnetic Interference, 51\nEMC, 124, 134\nEngineering Model, 174, 182\nEPPL, 148\nError Detection and Correction, 36\nESA Procedures, Standards and Specifications,\n\n66, 71\nESATAN-TMS, 141\nEthernet, 15, 28, 32, 40, 206\nEuropean Code of Conduct on Space Debris\n\nMitigation, 196\nEuropean Cooperation on Space Standardiza-\n\ntion, 65, 71\nEuropean Preferred Parts List, 148\nExternal reset, 40\n\nF\nFailure Detection, Isolation and Recovery, 2,\n\n6, 174\nFailure tolerance, 104\nFDIR, 65, 164, 174\nFEM model, 138\nFEM simulation, 138\nField Programmable Gate Array, 31\nFIFO, 89\nFlash-memory, 31\nFlatSat, 179, 181, 185, 193\n\nFlight model, 182\nFlight Model, 24\nFlight Procedure, 184\nFM22L16 FRAM, 38\nFOG, 50\nFPGA, 4, 9, 18, 31, 44, 45, 57, 60\nFRAM, 31\u201334\nFrame Error Control Field, 69\nFunctional verification matrix, 178\nFuse, 154, 157, 162, 167, 236\n\nG\nGPIO, 35, 38, 39\nGPS, 104, 113\nGround loop, 51\nGrounding, 184\nGR-TMTC-0004 IP-core, 60\n\nH\nHardware command, 63, 64, 69, 96, 99\nHeater circuits, 114\nHeaters, 127, 140, 146\nHeat-up duration, 149\nHF influences, 135, 137\nHigh Priority Command, 5, 7, 11, 18, 22, 44,\n\n60, 61, 96, 155, 162, 164, 165, 187, 189\nHistory log function, 168\nHK5591 Heater, 148\nHot redundancy, 144, 162, 164\nHousekeeping data, 5\nHousekeeping telemetry, 46\nHPC command sequence, 166\nHPC command structure, 166\nHPC frame header, 165\n\nI\nIdle Frame, 62, 66, 75, 187\nIIC, 4, 45, 50, 51, 55\nInrush current, 110\nInsulation test, 129\nInter-board harness, 119\nInternational Telecommunication\n\nUnion, 168\nInternational Traffic in Arms Regulations, 27,\n\n176, 185\nIsolated group, 51, 52, 57\n\nJ\nJTAG Interface, 4, 53, 57, 100, 104, 115\n\n246 Index\n\n\n\nL\nLatching Current Limiter, 7, 157, 160, 165, 172\nLaunch and Early Orbit Phase, 204\nLEON3FT, 59\nLine Impedance Stabilization Network, 111\nLocal Time of Descending Node, 196\nLogic-in, 55\nLogic-out, 50, 55\nLumped parameter model, 141, 148\nLVDS, 45\n\nM\nMagneto-coupler, 51\nManufacturing Data Package, 131\nMass, 137\nMass memory, 7\nMaster Channel Counter, 75\nMechanical properties, 137\nMemory, 33, 44, 45, 54\nMemory controller, 36\nMGDS04-HB power\n\nconverter, 106, 107\nMGDS10-HB power converter, 106\nMicrocontroller, 5\nMini Operations Mode, 163\nMockup, 123\nModal analysis, 139\nMoments of inertia, 137\nMR4A16B MRAM, 46\nMRAM, 31, 45, 46\nMultiplexer Access Point Identifier, 18, 165,\n\n189\n\nN\nNoise immunity, 45\nNominal heaters, 147\nNon-interruptable power supply, 185\nNon-Return-to-Zero Level, 68, 77\nNon-Return-to-Zero-Mark, 88\nNon-volatile memory, 4, 30, 33, 34, 46\nNRZ-L, 60, 68, 69, 77, 86\nNRZ-L encoding, 63\nNRZ-M, 86\nNVRAM, 45\nNx I-deas, 138\n\nO\nOBC CCSDS-Board, 12\nOBC heaters, 104\nOBC housing, 104, 114, 148\n\nOBC I/O-Board, 10, 12, 46, 109, 235\nOBC Power-Board, 103, 104, 127, 140, 176,\n\n232\nOBC Processor-Board, 4, 12, 28, 43, 54, 100,\n\n104, 113, 155, 162\u2013165, 185, 186, 205\nOBC temperature, 156\nOBSW, 186\nOBSW device handling, 186\nOnboard Computer, 1\nOnboard Software, 2, 46, 175\nOperating temperature, 58, 106, 134, 140\nOSI reference model, 72\nOvercharge, 159\nOvervoltage protection, 168\n\nP\nPacket Telecommand protocol, 84\nPCB internal heating, 154\nPCDU commands, 172\nPCDU Common Command, 155, 162\nPCDU controller, 164, 168\nPCDU controller redundancy, 164\nPCDU internal heater, 156\nPCDU non-operational temperature, 169\nPCDU operating temperature, 169\nPhysical Layer, 66\nPort Enable, 37\nPower bus, 5, 7, 9, 103, 105, 151, 157\nPower Control and Distribution Unit, 1, 12, 23,\n\n24, 44, 60, 103, 115, 140, 141, 151, 174,\n176, 178, 182, 193, 199, 204\n\nPower harness, 127\nPower On Reset, 40\nPower On Reset circuit, 39\nPower supply, 185\nPower Supply Unit, 108\nPower switch, 156, 236\nPPS, 38, 113\nPrinted Circuit Board, 41, 153\nPriority circuitry, 113\nProASIC3 FPGA, 60\nPROM, 6, 34, 35\nProtocol Sub-layer, 68\nPseudo-De-randomization, 69\nPseudo-Randomization, 63, 76\nPulse Per Second, 16, 38, 104\nPulse signal, 104\n\nQ\nQuasi-static analysis, 139\nQuasi-static design load, 137\n\nIndex 247\n\n\n\nR\nRadiation tolerance, 4, 31, 169\nRadiator, 140\nRAM, 6\nRandom vibration, 140\nReal Time Operating System, 2, 29, 33\nRealtime Simulator, 186\nReconfiguration, 8, 11, 152, 161, 163, 177, 182\nReconfiguration Unit, 7\u20139, 161\nRedundancy, 6, 23, 161, 182, 183\nRedundant heaters, 147\nReed-Solomon encoding, 60, 63, 76, 210\nReflection, 124\nReliability, 183\nRemote Interface Unit, 5, 21, 44, 160, 167\nRemote Memory Access Protocol, 18, 43,\n\n45\u201347, 60, 61, 70, 213\nResistance test, 130\nRetention test, 129\nRF available indicator, 69\nRMAP addresses, 50\nRMAP memory address, 45\nRMAP packet, 55\nRMAP Verify Bit, 50\nRS422, 18, 32, 39, 41, 45, 51, 61, 65, 155, 165\nRS485, 45, 51\nRTEMS, 17, 18, 60\n\nS\nSafeguard Memory, 6\nSafe Mode, 9, 156, 160, 163\nSafety, 183\nSatellite resonance frequency, 139\nSatellite Test Bed, 23, 177\u2013179, 183, 185\nSchmitt trigger, 51\nSCOS, 175\nSDRAM, 31\nSegment, 98\nSegment Data Field, 69\nSenior engineer, 177\nSensor data, 161\nSeparation detection, 167\nSerial differential interface, 51\nService Interface, 4, 104, 115\nSH7045 microcontroller, 153\nShaker, 178\nShunt resistor, 109\nSine vibration, 140\nSingle Board Computer, 4, 14, 28, 29\nSingle Event Latch-up, 58\nSingle-Event Upset, 8, 44, 58\nSkin connector, 4, 115, 117\nSleep Bit, 35\n\nSoftware-based decoder, 59\nSolar panel, 152, 157, 162\nSolar panel deployment, 167\nSpace Packet, 61, 62, 69, 74, 98, 212\nSpace Packet Protocol layer, 69\nSpacecraft Identifier, 68, 187\nSpacecraft status, 46\nSpaceWire, 2, 4, 15, 18, 21, 30, 32, 36, 37, 41,\n\n43, 44, 45, 47, 60\u201362, 66, 100, 213\nSpaceWire Clock, 40\nSpaceWire harness, 127\nSpaceWire link, 56\nSpaceWire packet, 213\nSpaceWire port, 37\nSpaceWire Router, 186\nSPARC, 30, 59\nSRAM, 31\u201333, 35, 36, 38, 45, 46\nStacked die, 38\nStandard grounded group, 57\nStar tracker, 104, 113\nStart Sequence, 87\nState of Charge, 160\nStatic Random Access Memory, 31\nStorage temperature range, 58\nSun-Synchronous Orbit, 196\nSwitch, 154, 157, 162, 167, 236\nSynchronization, 87\nSynchronization and Channel Coding, 66\nSynchronization and Coding Sub-layer, 68\nSynchronous clock and data recovery, 44\nSystem chain tests, 175\nSystem clock, 40\nSystem tests, 175\n\nT\nTechnical Assistance Agreement, 27\nTelecommand, 5\nTelecommand active signal, 69\nTelecommand bit clock active, 69\nTelecommand Decoder, 17, 59, 69, 84, 85\nTelecommand Frame, 18\nTelecommand input interface, 62\nTelecommand Source Packet Header, 166\nTelecommand Transfer Frame, 63, 99, 165,\n\n211\nTelemetry, 5, 155\nTelemetry downlink, 61\nTelemetry Encoder, 18, 59, 65, 67, 69, 71, 84,\n\n93\nTelemetry Encoder Descriptor, 82\nTelemetry interface, 62\nTelemetry Transfer Frame, 70, 209\nTemperature limit, 159\n\n248 Index\n\n\n\nTemperature sensor, 115, 154, 162\nTest execution, 177\nTest plan, 177\nTest procedure, 177\nThermal preconditioning, 141\nThermal-vacuum chamber, 178\nThermal-vacuum test, 154\nThermostat, 128, 148\nThermostat switch, 104, 114\nTimeline, 46\nTotal Ionizing Dose, 58\nTransceiver temperature, 156\nTransfer Frame, 61, 69\nTransfer Frame Data Field, 69\nTransistor-Transistor Logic, 57\nTriple Module Redundancy, 21, 44, 60\n\nU\nUART, 4, 45, 50, 55, 60, 63, 98, 99\nUnder-voltage protection, 159, 160\nUnregulated power bus, 157\nUT6325 RadTol Eclipse FPGA, 31, 37\nUT699 LEON3FT, 14, 30, 32\nUT8ER2M39 SRAM, 38\n\nV\nVenting-holes, 137\nVibration loads, 170\nVibration test, 140, 154\nVirtual Channel, 18, 60\u201362, 66, 67, 69, 74, 83,\n\n98, 165, 189\nVirtual Channel Generation, 74, 82, 217, 218\nVirtual Channel Identifier, 68\nVirtual Channel Multiplexing, 74\nVirtual Channel Packet Extraction, 99\nVirtual Channel Segment Extraction, 98\nVolatile memory, 31, 33, 35, 70\nVolume, 137\n\nW\nWait states, 34\nWatchdog, 8, 11, 39, 162, 164\nWrite acknowledge, 50\n\nX\nXilinx Platform USB Programmer, 208\n\nIndex 249\n\n\n\tForeword\n\tPreface\n\tAcknowledgments\n\tDonation for Life\n\tContents\n\tAbbreviations\n\t1 The System Design Concept\n\t1.1\u2026Introduction\n\t1.2\u2026The Onboard Computer Concept Baseline\n\t1.3\u2026The PCDU as Analog RIU\n\t1.4\u2026Common System Reconfiguration Controller\n\t1.4.1 Component Functions During Failure Handling\n\t1.4.1.1 Failure Type 1: Failures Identifiable by the Running OBSW\n\t1.4.1.2 Failure Type 2: Crash of the OBSW and Auto-Reconfiguration\n\t1.4.1.3 Failure Type 3: Crash of OBSW and Reconfiguration from Ground\n\t1.4.1.4 Failure Type 4: Power Bus Undervoltage Failures\n\n\t1.4.2 Innovation: A Combined-Controller for all FDIR Functions\n\t1.4.3 Failure Management with the Combined-Controller\n\t1.4.4 Advantages of the Combined-Controller Approach\n\n\t1.5\u2026Completeness of System Architecture\n\t1.6\u2026Component Selection\n\t1.6.1 Processor-Boards\n\t1.6.2 CCSDS Decoder/Encoder\n\t1.6.3 I/O and CCSDS-Board\n\t1.6.4 OBC Power-Boards\n\t1.6.5 The PCDU with Enhanced Functionality\n\n\t1.7\u2026Testing the CDPI in an Integrated Environment\n\t1.8\u2026The Flight Model Assembly\n\t1.9\u2026Conceptual Outlook for future Missions\n\n\t2 The OBC Processor-Boards\n\t2.1\u2026The Processor-Boards as ITAR Item\n\t2.2\u2026The Processor-Board: A Single Board Computer\n\t2.3\u2026Technical Overview\n\t2.3.1 The OBC Microprocessor Device\n\t2.3.2 The OBC Memory Configuration\n\t2.3.3 The OBC FPGA for Miscellaneous Functions\n\n\t2.4\u2026The OBC Processor-Board Functional Overview\n\t2.5\u2026The OBC Processor-Board Memory Interface\n\t2.6\u2026The OBC Processor-Board SpaceWire Interface\n\t2.7\u2026Miscellaneous Functions\n\t2.7.1 NVMEM Chip Enable\n\t2.7.2 SRAM Chip Enable\n\t2.7.3 Pulse Per Second Interface\n\t2.7.4 Watchdog Signal and LEON3FT Reset\n\t2.7.5 RS422 Interface\n\t2.7.6 Resets\n\t2.7.7 Clock Interfaces\n\t2.7.8 DSU/Ethernet Interface Card (DEI)\n\n\t2.8\u2026Power Specifications\n\t2.9\u2026Mechanical Design and Dimensions\n\n\t3 The I/O-Boards\n\t3.1\u2026Common Design for I/O and CCSDS-Boards\n\t3.2\u2026The I/O-Board as Remote Interface Unit\n\t3.3\u2026The I/O-Board as OBC Mass Memory Unit\n\t3.4\u2026I/O-Board Hot Redundant Operation Mode\n\t3.5\u2026I/O-Board RMAP Interface\n\t3.5.1 Board Identification for I/O-Boards\n\t3.5.2 I/O Board Interface RMAP Addresses\n\t3.5.3 Returned RMAP Status Values\n\n\t3.6\u2026I/O Circuits, Grounding and Terminations\n\t3.7\u2026I/O-Board Interface Access Protocols\n\t3.8\u2026I/O-Board Connectors and Pin Assignments\n\t3.8.1 Connectors-A and C (OBC internal)\n\t3.8.2 Connector-B (OBC internal)\n\t3.8.3 Connectors-D and E (OBC external)\n\n\t3.9\u2026I/O and CCSDS-Board Radiation Characteristic\n\t3.10\u2026I/O and CCSDS-Board Temperature Limits\n\t3.11\u20264Links Development Partner\n\n\t4 The CCSDS Decoder/Encoder Boards\n\t4.1\u2026Introduction\n\t4.2\u2026Architectural Overview\n\t4.2.1 Interfaces\n\t4.2.2 Command Link Control Word Coupling\n\t4.2.3 Clock and Reset\n\t4.2.4 Performance\n\t4.2.5 Telemetry Encoder\n\t4.2.5.1 Telemetry Encoder Specification\n\t4.2.5.2 Virtual Channels 0, 1, 2 and 3\n\t4.2.5.3 Virtual Channel 7\n\n\t4.2.6 Telecommand Decoder\n\t4.2.6.1 Telecommand Decoder Specification\n\t4.2.6.2 Software Virtual Channel\n\t4.2.6.3 Hardware Virtual Channel\n\n\t4.2.7 SpaceWire Link Interfaces\n\t4.2.8 On-Chip Memory\n\t4.2.9 Signal Overview\n\n\t4.3\u2026Telemetry Encoder\n\t4.3.1 Overview\n\t4.3.2 Layers\n\t4.3.2.1 Data Link Protocol Sub-layer\n\t4.3.2.2 Synchronization and Channel Coding Sub-Layer\n\t4.3.2.3 Physical Layer\n\n\t4.3.3 Data Link Protocol Sub-Layer\n\t4.3.3.1 Physical Channel\n\t4.3.3.2 Virtual Channel Frame Service\n\t4.3.3.3 Virtual Channel Generation: Virtual Channels 0, 1, 2 and 3\n\t4.3.3.4 Virtual Channel Generation: Idle Frames---Virtual Channel 7\n\t4.3.3.5 Virtual Channel Multiplexing\n\t4.3.3.6 Master Channel Generation\n\t4.3.3.7 All Frame Generation\n\n\t4.3.4 Synchronization and Channel Coding Sub-Layer\n\t4.3.4.1 Attached Synchronization Marker\n\t4.3.4.2 Reed-Solomon Encoder\n\t4.3.4.3 Pseudo-Randomizer\n\t4.3.4.4 Convolutional Encoder\n\n\t4.3.5 Physical Layer\n\t4.3.5.1 Non-Return-to-Zero Level Encoder\n\t4.3.5.2 Clock Divider\n\n\t4.3.6 Connectivity\n\t4.3.7 Operation\n\t4.3.7.1 Descriptor Setup\n\t4.3.7.2 Starting Transmissions\n\t4.3.7.3 Descriptor Handling After Transmission\n\n\t4.3.8 Registers\n\t4.3.9 Signal Definitions and Reset Values\n\t4.3.10 TM Encoder: Virtual Channel Generation\n\t4.3.11 TM Encoder: Descriptor\n\t4.3.12 TM Encoder: Virtual Channel Generation Function Input Interface\n\n\t4.4\u2026TC Decoder: Software Commands\n\t4.4.1 Overview\n\t4.4.1.1 Concept\n\t4.4.1.2 Functions and Options\n\n\t4.4.2 Data Formats\n\t4.4.3 Coding Layer\n\t4.4.3.1 Synchronization and Selection of Input Channel\n\t4.4.3.2 Codeblock Decoding\n\t4.4.3.3 De-Randomizer\n\t4.4.3.4 Non-Return-to-Zero: Mark\n\t4.4.3.5 Design Specifics\n\t4.4.3.6 Direct Memory Access\n\n\t4.4.4 Transmission\n\t4.4.4.1 Data Formatting\n\t4.4.4.2 CLTU Decoder State Diagram\n\t4.4.4.3 Nominal\n\t4.4.4.4 CASE 1\n\t4.4.4.5 CASE 2\n\t4.4.4.6 Abandoned\n\n\t4.4.5 Relationship Between Buffers and FIFOs\n\t4.4.6 Command Link Control Word Interface\n\t4.4.7 Configuration Interface (AMBA AHB slave)\n\t4.4.8 Interrupts\n\t4.4.9 Registers\n\t4.4.10 Signal Definitions and Reset Values\n\n\t4.5\u2026TC Decoder: Hardware Commands\n\t4.5.1 Overview\n\t4.5.2 Operation\n\t4.5.2.1 All Frames Reception\n\t4.5.2.2 Master Channel Demultiplexing\n\t4.5.2.3 Virtual Channel Demultiplexing\n\t4.5.2.4 Virtual Channel Reception\n\t4.5.2.5 Virtual Channel Segment ExtractionVirtual Channel Segment Extraction\n\t4.5.2.6 Virtual Channel Packet Extraction\n\t4.5.2.7 UART Interfaces\n\n\t4.5.3 Telecommand Transfer Frame Format: Hardware Commands\n\t4.5.4 Signal Definitions and Reset Values\n\n\t4.6\u2026SpaceWire Interface with RMAP Target\n\t4.7\u2026JTAG Debug Interface\n\t4.8\u2026Diverse Features\n\t4.9\u2026CCSDS Processor Spacecraft Specific Configuration\n\n\t5 The OBC Power-Boards\n\t5.1\u2026Introduction\n\t5.2\u2026Power Conversion\n\t5.2.1 The DC/DC Converters\n\t5.2.2 Start-Up Characterization of OBC Power Consumers\n\t5.2.3 Start-Up Behavior of the Power Supply Board\n\t5.2.4 Connection of Power Supply Board and OBC Power Consumers\n\n\t5.3\u2026Clock Strobe Signals\n\t5.4\u2026Heaters and Thermal Sensors\n\t5.5\u2026OBC Service Interface and JTAG Interface\n\t5.6\u2026Connector Configuration\n\n\t6 The OBC Internal Harness\n\t6.1\u2026Introduction\n\t6.1.1 Requirements\n\t6.1.2 Challenges\n\t6.1.3 Realization\n\n\t6.2\u2026Harness Design\n\t6.2.1 Harness Engineering\n\t6.2.2 SpaceWire Harness\n\t6.2.3 OBC Power Harness\n\n\t6.3\u2026Verification\n\t6.4\u2026Quality and Manufacturing Documentation\n\n\t7 OBC Mechanical and Thermal Design\n\t7.1\u2026Mechanical and Thermal Requirements\n\t7.2\u2026Mechanical Design of the OBC\n\t7.2.1 OBC Structure Concept\n\t7.2.2 Mechanical Dimensioning and Concept Validation\n\n\t7.3\u2026Thermal Design of OBC\n\t7.3.1 Thermal Model\n\t7.3.2 Thermal Calculation Results\n\t7.3.3 OBC Internal Heaters\n\n\t7.4\u2026OBC Housing Material Properties\n\n\t8 The Power Control and Distribution Unit\n\t8.1\u2026Introduction\n\t8.2\u2026The PCDU in a Typical Power Supply Subsystem\n\t8.3\u2026PCDU Unit Design Overview\n\t8.3.1 PCDU Interfaces\n\t8.3.2 PCDU Command Concept\n\n\t8.4\u2026Boot-Up Sequence of the PCDU and PCDU Modes\n\t8.5\u2026Power Control and Distribution Functions\n\t8.6\u2026PCDU Specific Functions in the CDPI Architecture\n\t8.6.1 Analog Data Handling Concept\n\t8.6.2 Reconfiguration Logic for the OBC\n\t8.6.3 Reconfiguration Functionality for the Spacecraft\n\n\t8.7\u2026Diverse PCDU Functions\n\t8.7.1 Launcher Separation Detection\n\t8.7.2 Control and Monitoring of Solar Panel Deployment\n\t8.7.3 Control of the Payload Data Transmission Subsystem Power\n\t8.7.4 History Log Function\n\t8.7.5 Time Synchronization Between Internal Controllers\n\t8.7.6 Overvoltage Protection\n\t8.7.7 Measurement of Test-String Characteristics\n\n\t8.8\u2026PCDU Environmental Qualification Characteristics\n\t8.8.1 Thermal-Vacuum Limits\n\t8.8.2 Radiation Limits\n\t8.8.3 Vibration Limits\n\n\t8.9\u2026List of Connectors\n\t8.10\u2026PCDU Commands Overview\n\n\t9 CDPI System Testing\n\t9.1\u2026Introduction\n\t9.2\u2026Test Scope\n\t9.2.1 Test Conditions\n\t9.2.2 Involved Personnel\n\t9.2.3 Test Program Simplifications\n\n\t9.3\u2026Test Plan\n\t9.3.1 PCDU Tests\n\t9.3.2 Processor-Board Tests\n\t9.3.3 Power-Board Tests\n\t9.3.4 CCSDS and I/O-Board Tests\n\t9.3.5 OBC Subsystem Tests\n\t9.3.6 CDPI Reconfiguration Tests\n\n\t9.4\u2026EM Testbench Infrastructure\n\t9.5\u2026EM Test Execution and Results\n\t9.5.1 STB Tests Stage 1: Connecting OBC Processor-Board and S/C-Simulator\n\t9.5.2 STB Tests Stage 2: Connecting OBC Processor-Board and CCSDS-Board\n\t9.5.3 STB Tests Stage 3: Entire Command Chain Bridging the RF Link\n\t9.5.4 STB Tests Stage 4: Verify High Priority Commanding\n\t9.5.5 STB Tests Stage 5: Commanding Equipment Unit Hardware\n\t9.5.6 STB Tests Stage 6: Performance Tests with Attitude Control Software\n\n\t9.6\u2026FM Test Execution and Results\n\n\t10 The Research Target Satellite\n\t10.1\u2026Introduction\n\t10.2\u2026Orbit and Operational Modes\n\t10.3\u2026Mechanical Design and Launcher Interface\n\t10.4\u2026Technology and Payloads\n\t10.5\u2026Satellite Attitude Control System\n\t10.5.1 Sensors and Actuators\n\t10.5.2 Control Modes\n\n\t10.6\u2026Satellite Communication Links\n\t10.7\u2026Satellite Electrical Architecture and Block Diagram\n\t10.8\u2026EMC Launcher and Primary Payload Compliance\n\n\t11 CDPI Assembly Annexes and Data Sheets\n\t11.1\u2026Processor-Board DSU/Ethernet Interface Card\n\t11.2\u2026CCSDS Conventions\n\t11.2.1 CCSDS Field Definition\n\t11.2.2 Galois Field\n\t11.2.3 Telemetry Transfer Frame Format\n\t11.2.4 Reed-Solomon encodingReed-Solomon Encoder Data Format\n\t11.2.5 Attached Synchronization Marker\n\t11.2.6 Telecommand Transfer Frame Format\n\t11.2.7 Command Link Control Word\n\t11.2.8 Space Packet\n\t11.2.9 Asynchronous Bit Serial Data Format\n\t11.2.10 SpaceWire Remote Memory Access ProtocolRemote Memory Access Protocol\n\t11.2.11 Command Link Control Word Interface\n\t11.2.12 Waveform Formats\n\n\t11.3\u2026Selected TM Encoder Registers\n\t11.4\u2026TM Encoder: Virtual Channel Generation Registers\n\t11.5\u2026Selected TC Decoder Registers\n\t11.6\u2026OBC Unit CAD Drawing\n\t11.7\u2026OBC Unit I/O-Board Connector Pin Allocation\n\t11.8\u2026OBC Unit CCSDS-Board Connector Pin Allocation\n\t11.9\u2026OBC Power-Board Connectors Pin Allocation\n\t11.10\u2026PCDU Unit CAD Drawing\n\t11.11\u2026PCDU Unit Connector Pin Allocations\n\t11.12\u2026PCDU Switch and Fuse Allocation to Spacecraft Equipment\n\n\tReferences\n\tReferences on the CDPI System Concept\n\tReferences on S/C Engineering\n\tReferences on General Engineering Standards\n\tReferences on the Processor-Boards\n\tReferences on Low Level Software and Operating System\n\tReferences on the I/O-Boards\n\tReferences on the CCSDS TM/TC Encoder / Decoder\n\tReferences on the OBC Power Boards\n\tReferences on the OBC Internal Harness\n\tReferences on the OBC Mechanical / Thermal Design\n\tReferences on the Power Control and Distribution Unit\n\tReferences on System Tests\n\tReferences on the Target Satellite\n\tIndex\n\n\n\n"}