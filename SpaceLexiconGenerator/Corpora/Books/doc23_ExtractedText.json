{"content": "\nSpringer Aerospace Technology\n\nThe FLP \nMicrosatellite \nPlatform\n\nJens Eickhoff   Editor\n\nFlight Operations Manual\n\n\n\nSpringer Aerospace Technology\n\n\n\nMore information about this series at http://www.springer.com/series/8613\n\nhttp://www.springer.com/series/8613\n\n\nJens Eickhoff\nEditor\n\nThe FLP Microsatellite\nPlatform\nFlight Operations Manual\n\n123\n\n\n\nEditor\nJens Eickhoff\nAirbus DS GmbH\nFriedrichshafen\nGermany\n\nISSN 1869-1730 ISSN 1869-1749 (electronic)\nSpringer Aerospace Technology\nISBN 978-3-319-23502-8 ISBN 978-3-319-23503-5 (eBook)\nDOI 10.1007/978-3-319-23503-5\n\nLibrary of Congress Control Number: 2015950460\n\nSpringer Cham Heidelberg New York Dordrecht London\n\u00a9 Springer International Publishing Switzerland 2016\nThis work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part\nof the material is concerned, specifically the rights of translation, reprinting, reuse of illustrations,\nrecitation, broadcasting, reproduction on microfilms or in any other physical way, and transmission\nor information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar\nmethodology now known or hereafter developed.\nThe use of general descriptive names, registered names, trademarks, service marks, etc. in this\npublication does not imply, even in the absence of a specific statement, that such names are exempt from\nthe relevant protective laws and regulations and therefore free for general use.\nThe publisher, the authors and the editors are safe to assume that the advice and information in this\nbook are believed to be true and accurate at the date of publication. Neither the publisher nor the\nauthors or the editors give a warranty, express or implied, with respect to the material contained herein or\nfor any errors or omissions that may have been made.\n\nPrinted on acid-free paper\n\nSpringer International Publishing AG Switzerland is part of Springer Science+Business Media\n(www.springer.com)\n\n\n\nForeword\n\nDear Readers,\nOne of the most common trends in the space sector is the evolution of small\n\nsatellites. This development will be intensified in the next years. Small satellites of\nany kind offer a lot of opportunities; no matter if it is small satellite of micro-, nano-\nor pico-class.\n\nNot least, small satellites enable a lot of different entities with new chances to be\nspace actors. Entities like universities or developing countries bring a new look on\nspace related questions. That is a reason to welcome any new technology helping\nthose to participate. At the end we find in some respects a new space \u201cdemocracy.\u201d\n\nThis generation experiences more and faster technological new developments.\nMiniaturization implies the core of it. Therefore it is a forward-looking idea to\ndevelop not only a new class of satellites but a new platform. A platform with its\nsubsystems provides adaptations and can be used for a variety of different payloads.\nThat is the basic idea of the Future Low-cost Platform (FLP). The German\nAerospace Center DLR supported that idea from its early beginnings up to now.\n\nEditor Jens Eickhoff and all the authors submit a formidable compendium\u2014the\n\u201cFlight Operations Manual.\u201d\n\nThis book is a useful introduction and a practical help for all who want to base\ntheir work on the FLP, even if they want to familiarize or to deepen their\nknowledge.\n\nI wish to any reader great benefit by studying the manual and great success for\nthis oeuvre.\n\nJune 2015 Dr. Gerd Gruppe\nMember of the Executive Board of DLR\n\nGerman Aerospace Center DLR\nCologne, Germany\n\nv\n\n\n\nPreface\n\nThis manual represents the flight operations handbook for the \u201cFuture Low-Cost\nPlatform\u201d (FLP), a microsatellite platform developed by the Institut f\u00fcr\nRaumfahrtsysteme, Universit\u00e4t Stuttgart, Germany with the engineering support\nfrom Airbus DS GmbH, Friedrichshafen, Germany.\n\nThe FLP is a three-axis-stabilized satellite platform for the 100\u2013150 kg class of\nsatellites corresponding to approximately 1 m3 size. The manual was developed in\nparallel to final assembly and test phase of the first satellite based on this FLP\nplatform\u2014the \u201cFlying Laptop\u201d from the IRS, Stuttgart.\n\nSince the manual serves as handbook for the flight operators during mission\ncontrol it provides a thorough insight into the performance and architecture of the\nplatform and the and the operations techniques\u2014information not available for\nstudents in classic academic literature. The manual is therefore structured for an\nefficient training of new spacecraft operators (i.e., students being trained to control\nthe university satellite) and thus it does not follow document content guidelines for\nFlight Operations Manuals from ESA, NASA, or any other agency standards.\n\nAlthough the manual focuses on the generic platform to provide a documenta-\ntion for future FLP-based spacecraft, it quotes for some passages and elements\nmission specific data, taken from the \u201cFlying Laptop\u201d project for better illustration\npurposes, such as for topics like\n\n\u2022 the interfaces between platform and payloads,\n\u2022 the thermal control subsystem\u2014which obviously always covers the entire\n\nspacecraft,\n\u2022 the ground infrastructures from Stuttgart and DLR/GSOC being used for this\n\nmission and\n\u2022 a number of limit table values and event tables in the chapters and annexes.\n\nThe first FLP-based satellite \u201cFlying Laptop\u201d provides only an attitude control\nsubsystem but does not yet feature propulsion module for orbit control. It also does\nnot yet provide a SpaceWire-based payload control and payload data processing\nnetwork. Both such elements have been studied by Airbus DS, Friedrichshafen for\n\nvii\n\n\n\n\u2022 an ESA Phase-A space debris detection mission called \u201cSpace-based Space\nSurveillance\u201d and\n\n\u2022 in an R&T study called OBC-SA together with DLR, Fraunhofer FOKUS and\nother partners.\n\nSome very brief sections on these topics\u2014including the upgraded onboard\ncomputer design under test\u2014are included in this manual to demonstrate the\npotential of the architecture. The corresponding literature and papers are cited in the\nreferences. In house Airbus DS this enhanced design with an upgraded onboard\ncomputer, SpaceWire payload equipment network and propulsion subsystem is\ncalled \u201cFLP Generation 2.\u201d\n\nJune 2015 Prof. Dr.-Ing. Jens Eickhoff\n\nviii Preface\n\n\n\nDonation for Life\n\nWith the royalties of this book the authors sponsor the German and international\nbone marrow donor\u2019s database for the fight against leukemia and other blood cancer\nvariants. Many of these patients can only be saved by a bone marrow transplant and\nneed a compatible donor.\n\nGermany:\nDKMS Deutsche\nKnochenmarkspenderdatei\ngemeinn\u00fctzige Gesellschaft mbH\nPhone: +49-(0) 70 71-9 43-0\nhttps://www.dkms.de/\n\nUSA:\nwww.deletebloodcancer.org/\n\nUK:\nwww.deletebloodcancer.org.uk\n\nPoland:\nwww.dkms.pl\n\nSpain:\nwww.dkms.de/de/fundaci\u00f3n-\ndkms-espa\u00f1a\n\nix\n\nhttps://www.dkms.de/\nhttp://www.deletebloodcancer.org/\nhttp://www.deletebloodcancer.org.uk\nhttp://www.dkms.pl\nhttp://www.dkms.de/de/fundaci<ucode Type=\nhttp://www.dkms.de/de/fundaci<ucode Type=\n\n\nContents\n\n1 Introduction to the Microsatellite Platform . . . . . . . . . . . . . . . . . 1\nJens Eickhoff\n1.1 The University Small Satellite Program . . . . . . . . . . . . . . . . 2\n1.2 Satellite Orbit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4\n1.3 Mechanical Design and Launcher Interface. . . . . . . . . . . . . . 4\n1.4 Technology and Payloads. . . . . . . . . . . . . . . . . . . . . . . . . . 4\n1.5 Platform Re-usability . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7\n1.6 Platform Redundancy Concept . . . . . . . . . . . . . . . . . . . . . . 8\n1.7 Power Subsystem and Electrical Block Diagram . . . . . . . . . . 10\n\n1.7.1 Solar Panels . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n1.7.2 Battery. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 10\n1.7.3 The Power Control and Distribution Unit . . . . . . . . 11\n\n1.8 Core Data Handling Subsystem. . . . . . . . . . . . . . . . . . . . . . 12\n1.9 FLP Payload Control Computer . . . . . . . . . . . . . . . . . . . . . 13\n1.10 Attitude Control Subsystem . . . . . . . . . . . . . . . . . . . . . . . . 14\n\n1.10.1 Sensors and Actuators . . . . . . . . . . . . . . . . . . . . . 15\n1.10.2 Satellite System Modes . . . . . . . . . . . . . . . . . . . . 17\n\n1.11 Reaction Control Subsystem . . . . . . . . . . . . . . . . . . . . . . . . 19\n1.12 Communication Subsystem. . . . . . . . . . . . . . . . . . . . . . . . . 20\n1.13 Thermal Control Subsystem . . . . . . . . . . . . . . . . . . . . . . . . 21\n1.14 Satellite Deorbiting at End of Life. . . . . . . . . . . . . . . . . . . . 22\n1.15 Possible Mechanical Platform Configurations . . . . . . . . . . . . 23\n\n2 The FLP Platform Operability . . . . . . . . . . . . . . . . . . . . . . . . . . 25\nKai-S\u00f6ren Klemich and Jens Eickhoff\n2.1 Spacecraft Configuration Handling Concept . . . . . . . . . . . . . 26\n\n2.1.1 System Mode Changes Using the OBSW\nObject Hierarchy . . . . . . . . . . . . . . . . . . . . . . . . . 26\n\n2.1.2 Overview on the FLP Operational Modes . . . . . . . . 27\n2.1.3 Launch Mode . . . . . . . . . . . . . . . . . . . . . . . . . . . 29\n2.1.4 Boot Mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 30\n\nxi\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec5\n\n\n2.1.5 Detumble/Safe Mode . . . . . . . . . . . . . . . . . . . . . . 30\n2.1.6 Idle Mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31\n2.1.7 Coarse Nadir Pointing Mode. . . . . . . . . . . . . . . . . 32\n2.1.8 Operational Modes\u2014Ground Contact. . . . . . . . . . . 32\n2.1.9 Operational Modes\u2014Payload Operations . . . . . . . . 33\n2.1.10 None Mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33\n2.1.11 Open Mode Concept . . . . . . . . . . . . . . . . . . . . . . 34\n2.1.12 Mode Tables and Sequences Control Service . . . . . 34\n2.1.13 Spacecraft Equipment Operation Versus Modes. . . . 47\n\n2.2 Spacecraft Telecommand and Telemetry Structure . . . . . . . . . 51\n2.2.1 CCSDS Protocol Addressing. . . . . . . . . . . . . . . . . 51\n2.2.2 Spacecraft ID . . . . . . . . . . . . . . . . . . . . . . . . . . . 54\n2.2.3 System Authentication . . . . . . . . . . . . . . . . . . . . . 55\n\n2.3 Application Process ID Definitions (APIDs) . . . . . . . . . . . . . 55\n2.4 PUS Tailoring Concept . . . . . . . . . . . . . . . . . . . . . . . . . . . 56\n\n2.4.1 PUS-Service 1\u2014Telecommand Verification . . . . . . 57\n2.4.2 PUS-Service 2\u2014Device Command Distribution . . . 57\n2.4.3 PUS-Service 3\u2014Housekeeping and Diagnostic\n\nReporting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59\n2.4.4 PUS-Service 4\u2014Parameter Statistics Reporting . . . . 60\n2.4.5 PUS-Service 5\u2014Event Reporting . . . . . . . . . . . . . 60\n2.4.6 PUS-Service 6\u2014Memory Management Service . . . . 61\n2.4.7 PUS-Service 8\u2014Function Management Service. . . . 62\n2.4.8 PUS-Service 9\u2014Time Management Service . . . . . . 62\n2.4.9 PUS-Service 11\u2014On-board Operations Scheduling\n\nService. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n2.4.10 PUS-Service 12\u2014On-board Monitoring Service . . . 64\n2.4.11 PUS-Service 15\u2014On-board Storage and Retrieval\n\nService. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65\n2.4.12 PUS-Service 17\u2014Test Service . . . . . . . . . . . . . . . 65\n2.4.13 PUS-Service 18\u2014On-board Control Procedures\n\nService. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66\n2.4.14 PUS-Service 19\u2014Event-Action Service . . . . . . . . . 66\n2.4.15 PUS Service 200\u2014Mode Control Service. . . . . . . . 66\n2.4.16 PUS-Service 201\u2014Health Flag Control Service. . . . 67\n2.4.17 PUS-Service 202\u2014Mode Tables and Sequences\n\nControl Service . . . . . . . . . . . . . . . . . . . . . . . . . . 67\n2.4.18 PUS-Service 203\u2014Payload Control Service . . . . . . 68\n\n2.5 Spacecraft Commandability and Observability. . . . . . . . . . . . 69\n2.6 Spacecraft On-board Time Management . . . . . . . . . . . . . . . . 70\n\nxii Contents\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec26\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec26\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec27\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec27\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec29\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec29\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec29\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec30\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec30\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec31\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec31\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec31\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec32\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec32\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec33\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec33\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec33\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec34\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec34\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec36\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec36\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec38\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec38\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec39\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec39\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec40\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2#Sec40\n\n\n3 Data Handling and Control Concept . . . . . . . . . . . . . . . . . . . . . . 73\nUlrich Mohr, Bastian B\u00e4tz and Jens Eickhoff\n3.1 Onboard Software Architecture . . . . . . . . . . . . . . . . . . . . . . 74\n\n3.1.1 OBSW Hierarchy Concept . . . . . . . . . . . . . . . . . . 75\n3.1.2 Command/Reply Flow Through the OBSW . . . . . . 78\n\n3.2 OBSW Object Types . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80\n3.2.1 Service Objects . . . . . . . . . . . . . . . . . . . . . . . . . . 81\n3.2.2 Device Handler Objects . . . . . . . . . . . . . . . . . . . . 81\n3.2.3 Assembly Objects . . . . . . . . . . . . . . . . . . . . . . . . 86\n3.2.4 Controller Objects . . . . . . . . . . . . . . . . . . . . . . . . 87\n3.2.5 Subsystem Objects. . . . . . . . . . . . . . . . . . . . . . . . 89\n3.2.6 Top-Level System Object . . . . . . . . . . . . . . . . . . . 89\n3.2.7 Object Execution . . . . . . . . . . . . . . . . . . . . . . . . . 89\n3.2.8 OBSW Object-IDs and PRIDs . . . . . . . . . . . . . . . 90\n\n3.3 Observability Functions Provided by the OBSW . . . . . . . . . . 93\n3.3.1 Command Verification . . . . . . . . . . . . . . . . . . . . . 93\n3.3.2 Cyclic HK . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93\n3.3.3 Event Messages. . . . . . . . . . . . . . . . . . . . . . . . . . 94\n\n3.4 FLP Software Dynamic Architecture . . . . . . . . . . . . . . . . . . 95\n3.4.1 Process/Task Management . . . . . . . . . . . . . . . . . . 96\n3.4.2 Object Tasks. . . . . . . . . . . . . . . . . . . . . . . . . . . . 97\n3.4.3 Polling Sequence Table . . . . . . . . . . . . . . . . . . . . 98\n3.4.4 Dynamic Scheduling . . . . . . . . . . . . . . . . . . . . . . 100\n3.4.5 Modes versus Actions . . . . . . . . . . . . . . . . . . . . . 100\n\n3.5 Onboard Software Death Report . . . . . . . . . . . . . . . . . . . . . 102\n\n4 Core Data Handling Subsystem . . . . . . . . . . . . . . . . . . . . . . . . . . 103\nJens Eickhoff, Rouven Witt and Bastian B\u00e4tz\n4.1 On-Board Data Handling Subsystem . . . . . . . . . . . . . . . . . . 104\n4.2 Combined Data and Power Management Infrastructure . . . . . 104\n\n4.2.1 The PCDU as Analog RIU . . . . . . . . . . . . . . . . . . 106\n4.2.2 A Combined-Controller for Power\n\nand DHS FDIR . . . . . . . . . . . . . . . . . . . . . . . . . . 106\n4.2.3 Completeness of System Architecture. . . . . . . . . . . 107\n\n4.3 Data Management . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109\n4.3.1 PROM Data . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110\n4.3.2 I/O-Board Persistent RAM . . . . . . . . . . . . . . . . . . 111\n4.3.3 OBC RAM and PROM Direct Access . . . . . . . . . . 111\n\n4.4 System Boot at Launcher Separation . . . . . . . . . . . . . . . . . . 112\n4.5 OBSW Controlled Functions . . . . . . . . . . . . . . . . . . . . . . . 114\n4.6 Core DHS Subsystem Control . . . . . . . . . . . . . . . . . . . . . . 115\n\n4.6.1 I/O-Board Handler. . . . . . . . . . . . . . . . . . . . . . . . 115\n4.6.2 I/O-Board Assembly . . . . . . . . . . . . . . . . . . . . . . 117\n4.6.3 Core DHS Controller . . . . . . . . . . . . . . . . . . . . . . 118\n4.6.4 Core DHS Mode Transitions and Telemetry . . . . . . 119\n\nContents xiii\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4#Sec16\n\n\n5 Power Supply Subsystem . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121\nKai-S\u00f6ren Klemich and Bastian B\u00e4tz\n5.1 Subsystem Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122\n5.2 Solar Panels . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123\n5.3 Solar Array Deployment Mechanism . . . . . . . . . . . . . . . . . . 124\n5.4 Battery. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 127\n\n5.4.1 General Monitoring . . . . . . . . . . . . . . . . . . . . . . . 129\n5.4.2 Battery SoC Estimation . . . . . . . . . . . . . . . . . . . . 131\n5.4.3 Operating the Battery . . . . . . . . . . . . . . . . . . . . . . 133\n\n5.5 Power Control and Distribution Unit . . . . . . . . . . . . . . . . . . 134\n5.5.1 Power Control and Distribution Functions . . . . . . . 135\n5.5.2 PCDU Design Overview . . . . . . . . . . . . . . . . . . . 139\n5.5.3 PCDU Boot-up Sequence and PCDU Modes . . . . . 141\n5.5.4 Specific PCDU Functions in the CDPI\n\nArchitecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143\n5.5.5 Diverse PCDU Functions . . . . . . . . . . . . . . . . . . . 144\n\n5.6 Power Subsystem Control . . . . . . . . . . . . . . . . . . . . . . . . . 146\n5.6.1 PCDU Device Handler . . . . . . . . . . . . . . . . . . . . . 148\n5.6.2 PSS Controller . . . . . . . . . . . . . . . . . . . . . . . . . . 148\n5.6.3 Power Subsystem Mode Transitions\n\nand Telemetry. . . . . . . . . . . . . . . . . . . . . . . . . . . 156\n5.6.4 Power Subsystem Object-IDs, Controller Variables\n\nand Limits . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159\n5.6.5 Power Subsystem Variables, Limits,\n\nand Parameters . . . . . . . . . . . . . . . . . . . . . . . . . . 160\n\n6 Platform Communication Subsystem . . . . . . . . . . . . . . . . . . . . . . 173\nJens Eickhoff and Kai-S\u00f6ren Klemich\n6.1 TTC Subsystem Overview . . . . . . . . . . . . . . . . . . . . . . . . . 174\n6.2 Signal Acquisition Procedure . . . . . . . . . . . . . . . . . . . . . . . 177\n6.3 TTC Subsystem Control. . . . . . . . . . . . . . . . . . . . . . . . . . . 178\n\n6.3.1 TTC Subsystem Device Handlers . . . . . . . . . . . . . 179\n6.3.2 TTC Subsystem Assemblies . . . . . . . . . . . . . . . . . 182\n6.3.3 TTC Subsystem Object-IDs . . . . . . . . . . . . . . . . . 183\n6.3.4 TTC Controller . . . . . . . . . . . . . . . . . . . . . . . . . . 184\n6.3.5 TTC Subsystem Mode Transitions and Telemetry . . . 186\n\n7 Attitude Control Subsystem. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 195\nOliver Zeile, Ulrich Mohr, Bastian B\u00e4tz and Nico Bucher\n7.1 Subsystem Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 196\n7.2 Mission Objectives and ACS Subsystem Modes . . . . . . . . . . 197\n7.3 Magnetometers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 197\n7.4 Sun Sensor Unit . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 198\n7.5 GPS Receiver System . . . . . . . . . . . . . . . . . . . . . . . . . . . . 200\n\nxiv Contents\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec36\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec36\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec36\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec5\n\n\n7.6 Fiberoptic Gyroscopes . . . . . . . . . . . . . . . . . . . . . . . . . . . . 201\n7.7 Star Tracker . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 203\n7.8 Reaction Wheels . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 204\n7.9 Magnetotorquers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 205\n7.10 Extensions for FLP Generation 2 . . . . . . . . . . . . . . . . . . . . 206\n7.11 ACS Subsystem Control . . . . . . . . . . . . . . . . . . . . . . . . . . 208\n\n7.11.1 ACS Subsystem Modes . . . . . . . . . . . . . . . . . . . . 209\n7.11.2 ACS Device Handlers . . . . . . . . . . . . . . . . . . . . . 209\n7.11.3 ACS Assemblies . . . . . . . . . . . . . . . . . . . . . . . . . 221\n7.11.4 ACS Controller . . . . . . . . . . . . . . . . . . . . . . . . . . 225\n7.11.5 ACS Subsystem Mode Transitions and Telemetry. . . 231\n\n8 Thermal Control Subsystem . . . . . . . . . . . . . . . . . . . . . . . . . . . . 245\nFabian Steinmetz and Sebastian Keil\n8.1 Thermal Subsystem Overview. . . . . . . . . . . . . . . . . . . . . . . 246\n8.2 Sensors, Calibration, Limits . . . . . . . . . . . . . . . . . . . . . . . . 254\n8.3 TCS Subsystem Control. . . . . . . . . . . . . . . . . . . . . . . . . . . 256\n\n8.3.1 Initial Control Concept. . . . . . . . . . . . . . . . . . . . . 258\n8.3.2 TCS Controller . . . . . . . . . . . . . . . . . . . . . . . . . . 260\n8.3.3 TCS Subsystem Mode Transitions and Telemetry. . . 269\n\n9 Payload Control Subsystem . . . . . . . . . . . . . . . . . . . . . . . . . . . . 271\nPhilipp Hagel, Paul Walker and Jens Eickhoff\n9.1 Aspects of Payload Control and Data Handling. . . . . . . . . . . 272\n\n9.1.1 Payload Control via the Platform OBC. . . . . . . . . . 273\n9.1.2 Payload Control via Dedicated PMC . . . . . . . . . . . 273\n\n9.2 Payload Control on the First FLP Based Satellite . . . . . . . . . 275\n9.2.1 PMC Hardware . . . . . . . . . . . . . . . . . . . . . . . . . . 275\n9.2.2 PMC Mainboard Elements and Function . . . . . . . . 277\n9.2.3 PMC Software . . . . . . . . . . . . . . . . . . . . . . . . . . 278\n\n9.3 Payload Control in Network-Centric Architectures. . . . . . . . . 282\n9.3.1 FLP Generation 2 SpaceWire Network. . . . . . . . . . 283\n9.3.2 FLP Generation 2 Target Architecture . . . . . . . . . . 287\n\n10 Failure Detection, Isolation and Recovery Concept . . . . . . . . . . . . 291\nRouven Witt and Jens Eickhoff\n10.1 General Principles . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 292\n\n10.1.1 Applying ECSS Terminology . . . . . . . . . . . . . . . . 292\n10.1.2 FDIR Requirements . . . . . . . . . . . . . . . . . . . . . . . 293\n10.1.3 Fault Tolerance Through Redundancy . . . . . . . . . . 295\n10.1.4 Redundancy on FLP . . . . . . . . . . . . . . . . . . . . . . 297\n10.1.5 Three Stages of Device Failure Detection . . . . . . . . 298\n10.1.6 System Failure Detection . . . . . . . . . . . . . . . . . . . 298\n10.1.7 Event Utilization . . . . . . . . . . . . . . . . . . . . . . . . . 299\n\nContents xv\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec34\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7#Sec34\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec8\n\n\n10.1.8 Event Flow. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 300\n10.1.9 Failure Event Management . . . . . . . . . . . . . . . . . . 302\n\n10.2 Core DHS FDIR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 304\n10.2.1 Component Functions During Failure Handling . . . . 305\n10.2.2 PCDU as Reconfiguration Unit . . . . . . . . . . . . . . . 307\n10.2.3 Reconfiguration Sequence. . . . . . . . . . . . . . . . . . . 310\n10.2.4 HPC-Based Spacecraft Reconfiguration . . . . . . . . . 318\n10.2.5 Software Watchdog . . . . . . . . . . . . . . . . . . . . . . . 321\n10.2.6 Software (Re-) Boot. . . . . . . . . . . . . . . . . . . . . . . 323\n10.2.7 Data Transmission Between I/O-Boards . . . . . . . . . 326\n10.2.8 PCDU Automated Fault Management . . . . . . . . . . 327\n10.2.9 IO- and CCSDS-Board SpaceWire FDIR . . . . . . . . 327\n10.2.10 Memory EDAC/TM Store Integrity . . . . . . . . . . . . 327\n10.2.11 Spacecraft State and Configuration Vector . . . . . . . 328\n10.2.12 SW Watchdog for FLP Generation 2 . . . . . . . . . . . 329\n10.2.13 Events in the Core DHS FDIR . . . . . . . . . . . . . . . 329\n\n10.3 Power FDIR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 332\n10.3.1 Battery State-of-Charge Surveillance . . . . . . . . . . . 333\n10.3.2 Voltage Levels and Fuse Currents . . . . . . . . . . . . . 336\n10.3.3 Failure Handling for PSS Devices . . . . . . . . . . . . . 338\n10.3.4 System Reactions . . . . . . . . . . . . . . . . . . . . . . . . 348\n10.3.5 PSS FDIR Events . . . . . . . . . . . . . . . . . . . . . . . . 349\n\n10.4 Equipment FDIR. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 353\n10.4.1 Device Failure Versus I/O-Board Failure\n\nSymptoms . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 353\n10.4.2 Device Failure Isolation and Recovery . . . . . . . . . . 356\n10.4.3 Failure and Boot Counter Evaluation . . . . . . . . . . . 359\n10.4.4 Device Handler FDIR Events . . . . . . . . . . . . . . . . 361\n\n10.5 TTC FDIR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 361\n10.5.1 Receiver Failure Handling . . . . . . . . . . . . . . . . . . 361\n10.5.2 Transmitter Failure Handling . . . . . . . . . . . . . . . . 364\n10.5.3 Transceiver Health Monitoring . . . . . . . . . . . . . . . 364\n10.5.4 CCSDS-Board FDIR . . . . . . . . . . . . . . . . . . . . . . 365\n10.5.5 Communication System Events . . . . . . . . . . . . . . . 366\n\n10.6 ACS FDIR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 366\n10.6.1 Magnetometer Failure Detection . . . . . . . . . . . . . . 367\n10.6.2 GPS Sensor Failure Detection . . . . . . . . . . . . . . . . 368\n10.6.3 Star Tracker System Failure Detection . . . . . . . . . . 372\n10.6.4 Sun Sensor Failure Detection . . . . . . . . . . . . . . . . 374\n10.6.5 Fiber Optic Gyro Failure Detection . . . . . . . . . . . . 375\n10.6.6 Magnetotorquer Failure Detection . . . . . . . . . . . . . 377\n10.6.7 Reaction Wheel Failure Detection . . . . . . . . . . . . . 379\n10.6.8 Attitude Control System Failure Detection . . . . . . . 381\n10.6.9 ACS Autonomy . . . . . . . . . . . . . . . . . . . . . . . . . 384\n10.6.10 ACS Events . . . . . . . . . . . . . . . . . . . . . . . . . . . . 384\n\nxvi Contents\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec26\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec26\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec27\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec27\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec32\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec32\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec33\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec33\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec34\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec34\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec35\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec36\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec36\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec37\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec38\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec38\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec39\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec39\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec40\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec40\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec41\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec41\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec42\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec42\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec43\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec43\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec44\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec44\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec45\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec45\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec46\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec46\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec47\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec47\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec48\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec48\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec49\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec49\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec50\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec50\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec51\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec51\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec52\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec52\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec53\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec53\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec54\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec54\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec55\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec55\n\n\n10.7 TCS FDIR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 389\n10.7.1 TCS Failure Detection and Isolation . . . . . . . . . . . 389\n10.7.2 TCS Failure Recovery . . . . . . . . . . . . . . . . . . . . . 392\n10.7.3 TCS Survival Mode. . . . . . . . . . . . . . . . . . . . . . . 393\n10.7.4 TCS FDIR Events . . . . . . . . . . . . . . . . . . . . . . . . 395\n\n10.8 Payload FDIR. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 396\n10.8.1 General Failure Handling . . . . . . . . . . . . . . . . . . . 397\n10.8.2 Payload FDIR Events. . . . . . . . . . . . . . . . . . . . . . 400\n\n10.9 Failure Propagation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 400\n10.10 Satellite Safe Mode Implementation. . . . . . . . . . . . . . . . . . . 401\n10.11 Ground Based FDIR . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 402\n\n10.11.1 Observability of the Space Segment. . . . . . . . . . . . 402\n10.11.2 Commandability of the Space Segment . . . . . . . . . 403\n10.11.3 Ground Analyses. . . . . . . . . . . . . . . . . . . . . . . . . 404\n\n11 Satellite Mission Phases and Planning . . . . . . . . . . . . . . . . . . . . . 405\nJens Eickhoff, Michael Lengowski and Kai-S\u00f6ren Klemich\n11.1 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 406\n11.2 Launcher Mechanical Interface . . . . . . . . . . . . . . . . . . . . . . 407\n11.3 Launcher Electrical Interface. . . . . . . . . . . . . . . . . . . . . . . . 409\n11.4 Activities Before Launcher Integration . . . . . . . . . . . . . . . . . 410\n11.5 Pre-launch Activities and Checks . . . . . . . . . . . . . . . . . . . . 412\n11.6 Launch and Early Orbit Phase . . . . . . . . . . . . . . . . . . . . . . 413\n\n11.6.1 Spacecraft Power-up to Safe Mode . . . . . . . . . . . . 413\n11.6.2 Spacecraft Link Establishment. . . . . . . . . . . . . . . . 415\n11.6.3 Initial System Checkout . . . . . . . . . . . . . . . . . . . . 416\n\n11.7 Platform Equipment Commissioning in Orbit . . . . . . . . . . . . 417\n11.8 Nominal Operation Phase. . . . . . . . . . . . . . . . . . . . . . . . . . 419\n11.9 End of Life Phase . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 419\n\n12 Stuttgart Mission Control Infrastructure . . . . . . . . . . . . . . . . . . . 421\nJens Eickhoff, Nico Bucher, Maximilian B\u00f6ttcher,\nCharles Thibaut, Dougie Johnman and Bryan Tatman\n12.1 Platform Control Infrastructure . . . . . . . . . . . . . . . . . . . . . . 422\n\n12.1.1 Digital TM/TC Processing Components . . . . . . . . . 424\n12.1.2 RF Signal Processing . . . . . . . . . . . . . . . . . . . . . . 428\n12.1.3 The High Frequency Chain. . . . . . . . . . . . . . . . . . 441\n12.1.4 The Antenna System . . . . . . . . . . . . . . . . . . . . . . 442\n\n12.2 Flight Dynamics Infrastructure . . . . . . . . . . . . . . . . . . . . . . 446\n12.3 Spacecraft Link Establishment Process. . . . . . . . . . . . . . . . . 448\n12.4 Science Data Signal Chain . . . . . . . . . . . . . . . . . . . . . . . . . 448\n\nContents xvii\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec56\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec56\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec57\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec57\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec58\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec58\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec59\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec59\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec60\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec60\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec61\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec61\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec62\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec62\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec63\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec63\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec64\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec64\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec65\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec65\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec66\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec66\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec67\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec67\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec68\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec68\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec69\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10#Sec69\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12#Sec14\n\n\n13 Stuttgart/DLR Infrastructure for LEOP . . . . . . . . . . . . . . . . . . . 451\nPeter Willburger, Klaus Wiedemann, Rolf Kozlowski, Marcin Gnat,\nCiprian Furtuna, Jens Eickhoff and Nico Bucher\n13.1 Link Between IRS and the DLR Antenna Station . . . . . . . . . 452\n13.2 DLR Antenna Station Infrastructure. . . . . . . . . . . . . . . . . . . 453\n13.3 GSOC Systems Supporting the FLP Mission . . . . . . . . . . . . 457\n\n13.3.1 Space Link Extension (SLE) System . . . . . . . . . . . 457\n13.3.2 Automated File Distribution System. . . . . . . . . . . . 460\n\n13.4 Operations Workflow . . . . . . . . . . . . . . . . . . . . . . . . . . . . 462\n13.4.1 Scheduling Process . . . . . . . . . . . . . . . . . . . . . . . 462\n13.4.2 LEOP Phase . . . . . . . . . . . . . . . . . . . . . . . . . . . . 464\n13.4.3 Commissioning Phase . . . . . . . . . . . . . . . . . . . . . 464\n13.4.4 Routine Phase . . . . . . . . . . . . . . . . . . . . . . . . . . . 465\n\n14 Earth Observation Mission Planning . . . . . . . . . . . . . . . . . . . . . . 467\nKai-S\u00f6ren Klemich, Gianluca Cerrone and Wolfgang Heinen\n14.1 MOIS Infrastructure . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 468\n14.2 Scheduler Resource Model . . . . . . . . . . . . . . . . . . . . . . . . . 472\n14.3 Mission Planning Infrastructure and Work Flow . . . . . . . . . . 473\n\n15 Flight Procedures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 481\nKai-S\u00f6ren Klemich and Jens Eickhoff\n15.1 Definitions for FLP Flight Procedures . . . . . . . . . . . . . . . . . 482\n15.2 Types of Procedures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 482\n\n15.2.1 Types of Procedures by Content . . . . . . . . . . . . . . 482\n15.2.2 Types of Procedures by Usage Scenario . . . . . . . . . 484\n\n15.3 Flight Procedure Naming Convention . . . . . . . . . . . . . . . . . 486\n15.4 Flight Procedure Example . . . . . . . . . . . . . . . . . . . . . . . . . 486\n15.5 List of FLP Flight Procedures. . . . . . . . . . . . . . . . . . . . . . . 492\n\n16 FLP Mission Information Database . . . . . . . . . . . . . . . . . . . . . . . 493\nKai-S\u00f6ren Klemich and Jens Eickhoff\n16.1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 494\n16.2 General Concepts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 494\n16.3 Telecommands and TC Sequence Tables . . . . . . . . . . . . . . . 498\n16.4 TM Packet Definitions and Identification . . . . . . . . . . . . . . . 499\n16.5 TM Parameter and Displays Tables . . . . . . . . . . . . . . . . . . . 502\n16.6 TM Parameter Identification . . . . . . . . . . . . . . . . . . . . . . . . 503\n16.7 Parameter Format Definition. . . . . . . . . . . . . . . . . . . . . . . . 505\n\n17 Annexes and Data Sheets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 507\nJens Eickhoff\n17.1 Software Constants and FDIR Limits. . . . . . . . . . . . . . . . . . 508\n17.2 Polling Sequence Table for I/O-Board Access. . . . . . . . . . . . 509\n\nxviii Contents\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec2\n\n\n17.3 Spacecraft Telecommand/Telemetry Definitions . . . . . . . . . . 512\n17.3.1 Telecommand Definitions . . . . . . . . . . . . . . . . . . . 512\n17.3.2 Telemetry Definitions. . . . . . . . . . . . . . . . . . . . . . 556\n17.3.3 Event Telemetry Definitions . . . . . . . . . . . . . . . . . 556\n\n17.4 FLP Flight Procedures . . . . . . . . . . . . . . . . . . . . . . . . . . . . 616\n17.5 TTC Subsystem Data Sheets. . . . . . . . . . . . . . . . . . . . . . . . 623\n\n17.5.1 Bit Error Rate Reference Data. . . . . . . . . . . . . . . . 623\n17.5.2 TTC Housekeeping Parameter Reference Data . . . . 624\n\n17.6 TC/TM Link Budgets for the IRS Antenna Station . . . . . . . . 631\n17.7 Power Subsystem Data Sheets . . . . . . . . . . . . . . . . . . . . . . 635\n\n17.7.1 PCDU Switch and Fuse Allocation . . . . . . . . . . . . 635\n17.7.2 Power Consumption Versus Modes . . . . . . . . . . . . 637\n17.7.3 Power Budget . . . . . . . . . . . . . . . . . . . . . . . . . . . 642\n\n17.8 TCS Subsystem Data Sheets. . . . . . . . . . . . . . . . . . . . . . . . 642\n17.9 Mass Budget . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 647\n17.10 Orbit Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 648\n\n17.10.1 Orbit Environment. . . . . . . . . . . . . . . . . . . . . . . . 648\n17.10.2 Orbit Definition for the FLP Mission\n\nFlying Laptop . . . . . . . . . . . . . . . . . . . . . . . . . . . 649\n17.10.3 Longitudinal Displacement per Pass\n\nand Orbit Repeat Cycle . . . . . . . . . . . . . . . . . . . . 651\n17.10.4 Contact to IRS and Other Ground Stations . . . . . . . 652\n17.10.5 Sun, Umbra and Penumbra Phases. . . . . . . . . . . . . 655\n17.10.6 Orbital Drift . . . . . . . . . . . . . . . . . . . . . . . . . . . . 657\n17.10.7 Multi-angle Earth Observation. . . . . . . . . . . . . . . . 659\n\n17.11 Spacecraft Skin Connector Panel Layout . . . . . . . . . . . . . . . 659\n17.12 Red-Tagged Items . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 664\n17.13 Green-Tagged Items . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 664\n17.14 Two Line Element Orbit Data Definitions . . . . . . . . . . . . . . 665\n\nReferences. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 667\n\nIndex . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 675\n\nContents xix\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec18\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec19\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec20\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec21\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec22\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec23\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec24\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec25\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec26\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec26\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec27\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec27\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec28\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec29\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17#Sec29\n\n\nContributors\n\nBastian B\u00e4tz Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nMaximilian B\u00f6ttcher Institute of Space Systems, University of Stuttgart,\nStuttgart, Germany\n\nNico Bucher Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nGianluca Cerrone RHEA System S.A., Wavre, Belgium\n\nJens Eickhoff Airbus DS GmbH, Friedrichshafen, Germany\n\nCiprian Furtuna Deutsches Raumfahrt Kontrollzentrum (GSOC),\nOberpfaffenhofen, Germany\n\nMarcin Gnat Deutsches Raumfahrt Kontrollzentrum (GSOC), Oberpfaffenhofen,\nGermany\n\nPhilipp Hagel Institute of Space Systems, Deutsches Zentrum f\u00fcr Luft- und\nRaumfahrt, Bremen, Germany\n\nWolfgang Heinen RHEA System S.A., Wavre, Belgium\n\nDougie Johnman Satellite Services B.V., Noordwijk, The Netherlands\n\nSebastian Keil Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nKai-S\u00f6ren Klemich Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nRolf Kozlowski Deutsches Raumfahrt Kontrollzentrum (GSOC),\nOberpfaffenhofen, Germany\n\nMichael Lengowski Institute of Space System, University of Stuttgart, Stuttgart,\nGermany\n\nxxi\n\n\n\nUlrich Mohr Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nFabian Steinmetz Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nBryan Tatman Satellite Services B.V., Noordwijk, The Netherlands\n\nCharles Thibaut Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nPaul Walker 4Links Ltd, Milton Keynes, UK\n\nKlaus Wiedemann Deutsches Raumfahrt Kontrollzentrum (GSOC),\nOberpfaffenhofen, Germany\n\nPeter Willburger Deutsches Raumfahrt Kontrollzentrum (GSOC),\nOberpfaffenhofen, Germany\n\nRouven Witt Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nOliver Zeile Institute of Space Systems, University of Stuttgart, Stuttgart,\nGermany\n\nxxii Contributors\n\n\n\nAbbreviations\n\nGeneral Abbreviations\n\na.m. Above mentioned\ncf. Confer\ne.g. Example given\ni.e. Id est -> that is\nw.r.t. With respect to\n\nTechnical Abbreviations\n\nAD Acceptance Check (Bypass Flag = 0) and Data (Control Command\nFlag = 0) Mode or AD-Mode\n\nAFD Automated File Distribution System\nAIS Automatic Identification System (Ship Tracking)\nAIT Assembly, Integration and Test\nAOS Attitude of Sight\nAPI Application Programming Interface\nAPID Application ID\nASM Attached Synchronization Marker (of a CCSDS CADU)\nBCR Battery Charge Regulator\nBD Bypass of Acceptance Check (Bypass Flag = 1) and Data (Control\n\nCommand Flag = 0) Mode or BD-Mode\nBER Bit Error Rate\nBoL Begin of Life\nBRDF Bidirectional Reflectance Distribution Function (of observed ground\n\ntargets)\nCAD Computer Aided Design\nCADU Channel Access Data Unit\nCC Combined-Controller\nCCSDS Consultative Committee for Space Data Systems\n\nxxiii\n\n\n\nCD Clock Divider\nCDM Clock Distribution Module\nCDPI Combined Data and Power Management Infrastructure\nCLCW Command Link Control Word\nCLTU Command Link Transmission Unit\nCPDU Command Pulse Decoding Unit\nCPU Central Processing Unit\nCRC Cyclic Redundancy Code\nCSP Command Sequence Parameter File\nCTR Controller\nCVP Command Verification Profiles\nCVS Concurrent Versioning System\nCW Continuous Wave Mode or CW-Mode\nDFT Data Flow Test\nDH Device Handler\nDoD Depth of Discharge\nDOM De-Orbiting-Mechanism\nDPU Data Processing Unit (of the Star Trackers)\nDRAM Dynamic Random Access Memory\nECSS European Cooperation on Space Standardization\nEDAC Error Detection and Correction\nEEPROM Electrically Erasable PROM\nEoL End of Life\nESA European Space Agency\nESD Electrostatic Discharge\nFCLTU Forward Communications Link Transmission Unit\nFDE Flight Dynamics Events\nFDIR Failure Detection, Isolation, and Recovery\nFM Flight Model\nFOG Fiberoptic Gyro\nFOM Flight Operations Manual\nFPGA Field Programmable Gate Array\nFRAM Ferroelectric Random Access Memory\nGCC Ground Control Center\nGDS Ground Data Systems (DLR)\nGPS Global Positioning System\nHF High Frequency\nHK Housekeeping\nHPC High Priority Command\nHW Hardware\nI/O Input/Output\nIADC United Nations Inter-Agency Space Debris Coordination Committee\nIF Interface\nIMBU Integrated Modem and Baseband Unit\n\nxxiv Abbreviations\n\n\n\nIRS Institut f\u00fcr Raumfahrtsysteme, Institute of Space Systems,\nUniversity of Stuttgart, Germany\n\nITAR International Traffic in Arms Regulations\nITU International Telecommunication Union\nJTAG Joint Test Actions Group (Test Interface)\nLCL Latching Current Limiter\nLEOP Launch and Early Orbit Phase\nLHCP Left Hand Circular Polarization\nLOS Line of Sight\nLTAN Local Time of Ascending Node\nLTDN Local Time of Descending Node\nMAP-ID Multiplexer Access Point Identifier\nMCS Mission Control System\nMGM Magnetometer\nMGT Magnetotorquer\nMIB Mission Information Base\nMOIS Manufacturing and Operations Information System\nMRAM Magnetoresistive Random Access Memory\nNASA National Aeronautics and Space Administration\nNCTRS Network Control and Telemetry Routing System\nNIS Network Integration System\nNORAD North American Aerospace Defense Command\nNRZ-L Non-Return-to-Zero Level\nNRZ-M Non-Return-to-Zero Mode\nNV-RAM Non-Volatile RAM\nOBC Onboard Computer\nOBSW Onboard Software\nOBSW-DP Onboard Software Data Pool\nOS Operating System\nPCB Printed Cirquit Board\nPCDU Power Control and Distribution Unit\nPLOC Payload Controller\u2014\u201cPayload Onboard Computer\u201d\nPPS Pulse Per Second\nPROM Programmable Read-Only Memory\nPST Polling Sequence Table\nPSU Power Supply Unit\nPUS ESA Packet Utilization Standard\nQA Quality Assurance\nRAF Remote Acquisition Forwarding\nRAM Random Access Memory\nRCF Remote Call Forwarding\nRF Radio Frequency\nRF-SCOE Radio Frequency Special Checkout Equipment\nRHCP Right Hand Circular Polarization\nRISC Reduced Instruction Set Computer\n\nAbbreviations xxv\n\n\n\nRMS Rate Monotonic Scheduling\nROM Read-Only Memory\nRTEMS Real-Time Executive for Multiprocessor Systems\nRTOS Real-Time Operating System\nRTS Real-Time Simulator\nRW Reaction Wheel\nS/C Spacecraft\nS2K SCOS-2000\nSA Solar Array\nSBC Single Board Computer\nSCID Spacecraft Identifier\nSCOE Special Checkout Equipment\nSCV Spacecraft Configuration Vector\nSEU Single Event Upset\nSIF Service Interface\nSLE Space Link Extension\nSoC Battery State of Charge\nSPARC Scalable Processor Architecture\nSpW SpaceWire\nSRAM Static Random Access Memory\nSSB SLE Switchboard\nSSO Sun-Synchronous Orbit\nSSRAM Synchronous Static Random Access Memory\nSTR Star Tracker\nSUS Sun Sensor\nSV State Vector\nSW Software\nTAA Technical Assistance Agreement\nTC Telecommand\nTCC Telecommand Channel Layer\nTCS Thermal Control System\nTF Transfer Frame\nTID Total Ionizing Dose\nTM Telemetry\nVC Virtual Channel\nVCID Virtual Channel Identifier\nWS Workstation\nWSP-C Weilheim SLE Provider to Cortex\nXNS Extended Navigation Solution\n\nxxvi Abbreviations\n\n\n\nChapter 1\nIntroduction to the Microsatellite Platform\n\nJens Eickhoff\n\nAbstract The book represents the Flight Operations Manual of the microsatellite\nplatform. Before diving into the operations of the platform and its subsystems, into\nfailure management and ground station functions, this chapter provides a brief\noverview on the Future Low-cost Platform (FLP). It explains the basic concept of\nthe platform versus a complete satellite, it sketches out the first FLP prototype\nsatellite \u201cFlying Laptop\u201d and explains which parts represent the re-usable platform.\nThese platform elements can be taken over for other missions to significantly\nreduce the development effort.\n\nKeywords Stuttgart small satellite program ? Future low-cost platform (FLP) ?\nPrototype satellite \u201cFlying Laptop\u201d ? Orbit and operational modes ? Platform\nre-usability ? Subsystems overview ? Combined Data and Power Management\nInfrastructure\n\nJ. Eickhoff (&)\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_1\n\n1\n\n\n\n1.1 The University Small Satellite Program\n\nOver the past 6 years a microsatellite platform has been developed at the \u201cInstitut\nf\u00fcr Raumfahrtsysteme\u201d (IRS) of the University of Stuttgart, Germany with\nsubstantial coaching and co-funding from its partner Airbus DS GmbH,\nFriedrichshafen, Germany. This platform is called the \u201cFuture Low-cost Platform\u201d\n(FLP) and it is targeted for the 50\u2013150 kg class of small satellites, corresponding\napproximately to the up to 1 m3 volume class and it is designed for satellites\nlaunched as secondary passengers.\n\nThe FLP is a fully three-axis stabilized platform. It is suited for a variety of\nmission scenarios performing either nadir-pointing Earth observation with e.g.\nscanner instruments, or target pointing Earth observation e.g. with camera instru-\nments or inertial pointing e.g. for astronomical missions and telescope payloads\u2014\nand obviously for combinations thereof. The total pointing error during one pass is\nless than 150 arcsec and the pointing knowledge is better than 7 arcsec. To achieve\nthese values, state of the art star trackers, magnetometers and fiberoptic gyros as\nwell as GPS receivers are used as avionics sensors. Reaction wheels and magne-\ntotorquers are used as actuators.\n\nThe \u201cFlying Laptop\u201d (see Fig. 1.1) is the first satellite in the SmallSat Program\nof the IRS and is based on the FLP design. It has been developed and built primarily\n\nFig. 1.1 Flying Laptop artist\u2019s view and mechanical configuration. \u00a9 IRS, University of Stuttgart\n\n2 J. Eickhoff\n\n\n\nby Ph.D. and graduate students, supported in manpower, material and facility usage\nby Airbus DS GmbH, by the Airbus DS daughter TESAT Spacecom, by space\nagency and research facilities (Deutsches Zentrum f\u00fcr Luft- und Raumfahrt, DLR).\nThe project is financed by the federal state of Baden-W\u00fcrttemberg, the university\nand the industry partners. At time of manuscript submission the \u201cFlying Laptop\u201d\nhas successfully completed its environmental test campaign, its final Onboard\nSoftware (OBSW) tests and is waiting for a launch opportunity. The partners share\ndiverse interests in this platform/satellite project:\n\n\u2022 The main project goals for the industry and agency partners is to qualify elec-\ntronic components for space, in particular the elements of the innovative,\nintegrated OBC/PCDU infrastructure CDPI [47] and to qualify the \u201cFuture\nLow-cost Platform\u201d (FLP)\u2014\u201cfuture\u201d since at time of manuscript submission\u2014it\nstill lacks in-orbit qualification.\n\n\u2022 For the university the mission goals are and have been to establish the expertise\nand infrastructure for development, integration, test and operations of satellites\nat the IRS. The program is also used to improve the education of students by\nproviding the possibility for hands on experience within a challenging space\nproject. Once in orbit, the satellite will be used to demonstrate new technologies,\nto perform Earth observation and to train students as mission operators using a\nstate-of-the-art mission control infrastructure.\n\nThe \u201cFlying Laptop\u201d\u2014as FLP Generation 1 spacecraft\u2014is not yet equipped\nwith any propulsion subsystem for orbit control. For more details please refer to\nSect. 1.11. Airbus DS GmbH meanwhile has studied an enhanced version of the\nplatform\u2014FLP Generation 2\u2014featuring a hydrazine propulsion subsystem for orbit\ncontrol and de-orbiting from higher orbit altitudes (Table 1.1).\n\nTable 1.1 \u201cFlying Laptop\u201d satellite characteristics\n\nDimensions 60 \u00d7 70 \u00d7 80 cm\n\nMass 117 kg\n\nLaunch Type Piggy-Back (secondary payload)\n\nDesired Orbit circular, polar\n\nOrbit Altitude 500\u2013650 km\n\nAttitude Control 3-axis stabilized\n\nCommunications S-band\n\nSolar Panels 3 (2 deployable)\n\n1 Introduction to the Microsatellite Platform 3\n\n\n\n1.2 Satellite Orbit\n\nThe satellite has been designed for a circular Sun-Synchronous Orbit (SSO) with a\nLocal Time of Descending Node (LTDN) between 9:30 h and 11:00 h. As the\noperational lifetime of this satellite is targeted to be two years and the satellite\nshould not stay in orbit for more than 25 years after end of life (considering the\nEuropean Code of Conduct on Space Debris Mitigation [1]), the desired orbital\naltitude is between 500 and 650 km. For de-orbiting after operational use the\nsatellite is equipped with an experimental De-Orbiting-Mechanism (DOM) from\nTohoku University, Japan.\n\n1.3 Mechanical Design and Launcher Interface\n\nThe \u201cFlying Laptop\u201d is a cuboid with two deployable solar panels. It has a total\nmass of 117 kg. Figure 1.1 shows the satellite configuration with deployed solar\npanels. Its main dimensions during launch with undeployed solar panels are 600 by\n702 by 866 mm3 as depicted in Fig. 1.2.\n\nA launcher adapter ring is installed on the satellite. The depicted variant is\ndesigned to be compliant to the Soyuz piggy-back separation adapter. A deployable\nDe-Orbiting-Mechanism (DOM) is located inside the launch adapter ring.\n\nThe structure of the \u201cFlying Laptop\u201d is a hybrid design. The lower part is made\nof integral aluminum parts and the upper part, where the optical payloads are\ninstalled, consists of carbon-fiber reinforced sandwich structures which provide a\nmore stable alignment of the cameras due to their low thermal expansion. The\nthermal control subsystem (TCS) of the satellite consists of several temperature\nsensors and heaters inside the satellite as well as Multi-Layer-Insulation and radi-\nators on the outside. No active cooling system is used (Fig. 1.3).\n\n1.4 Technology and Payloads\n\nAs mentioned above, the purpose of the \u201cFlying Laptop\u201d mission is to demonstrate\nnew technologies and to space qualify the FLP platform design. The main asset\u2014\nalthough it is not a payload\u2014concerns the \u201cCombined Data and Power\nManagement Infrastructure\u201d (CDPI) with the Onboard Computer (OBC) based on a\nLEON3FT processor, SpaceWire driven I/O-Boards which serve as a communi-\ncation interface between the Processor-Boards, full CCSDS/PUS standard based\nTelecommand (TC) and Telemetry (TM) via CCSDS-Decoder/Encoder-Boards and\nthe OBC reconfiguration performed by the CDPI Combined-Controller in the\nPCDU. The international partner consortium for the CDPI architecture is Airbus DS\nGmbH (Germany), Aeroflex Colorado Springs Inc. (USA), Aeroflex Gaisler AB\n\n4 J. Eickhoff\n\n\n\n(Sweden), 4Links Ltd. (UK), HEMA Kabeltechnik GmbH & Co. KG (Germany)\nand Vectronic Aerospace GmbH (Germany). For more details please refer to [47].\n\nThe main payload of the FLP mission \u201cFlying Laptop\u201dis the Multi-spectral\nImaging Camera System (MICS), which consists of three separate cameras, using\n\nFig. 1.2 Flying Laptop satellite launch configuration. \u00a9 IRS, University of Stuttgart\n\n1 Introduction to the Microsatellite Platform 5\n\n\n\nFig. 1.3 Flying Laptop with solar arrays deployed. \u00a9 IRS, University of Stuttgart\n\n6 J. Eickhoff\n\n\n\nfilters for green, red and near-infrared spectral ranges. It is used for multi-angle and\nmulti-spectral imaging of the Earth with a ground sample distance of approximately\n25 m and a swath width of 25 km. The MICS is additionally used in a ship\nobservation experiment. For this experiment the satellite is equipped with an\nAutomatic Identification System (AIS) to receive ship transponder signals for\nnavigation and ship traffic control. The AIS-Receiver is developed and built at the\nInstitute of Space Systems of DLR, Bremen. By mapping the AIS information over\nthe optical data of the MICS the satellite based observation of ship traffic shall be\nstudied and improved. Another camera with a wider field of view is used to get a\nbetter overview of the area observed with the MICS. This Panoramic Camera\n(PAMCAM) is based on a commercial off-the-shelf product and has a swath width\nof approximately 200 km. Furthermore on instrument side the satellite is equipped\nwith an Optical Infrared Link System (OSIRIS) to demonstrate high speed down-\nlink capabilities using an optical terminal which was developed by DLR,\nOberpfaffenhofen, Germany.\n\nAll payloads are controlled via a dedicated FPGA-based payload controller\u2014the\nPayload On-Board Computer (PLOC). Besides that, three GPS sensors shall be\nused to precisely determine the position of the satellite (and in the GENIUS\nexperiment even the attitude).\n\n1.5 Platform Re-usability\n\nOver the development phase of the spacecraft, the satellite platform design was\ntailored subsequently to meet international agency and industry standards, such as\nthe CCSDS [15] and ESA Packet Utilization Standard [13] based communication\nprotocols, SpaceWire data handling standard [3] etc.\n\nThe platform setup is depicted in Fig. 1.4. It comprises a data handling sub-\nsystem, an attitude control subsystem, the power subsystem and the telecommand/\ntelemetry and control subsystem.\n\nFigure 1.5 depicts the platform equipment integration into the first FLP based\nsatellite, the \u201cFlying Laptop\u201d. Color codes are kept compatible with Fig. 1.6. Its\npayloads are marked in orange while structural elements are presented in grey\nshades. Although this Flight Operations Manual, focuses on the satellite platform\nmanagement in orbit, in some sections performance data of the entire satellite\nconfiguration are cited, such as solar array total power, mechanical parameters like\nmoments of inertia and others. The usability of the platform elements in other\ngeometric satellite configurations is treated later in Sect. 1.15.\n\n1 Introduction to the Microsatellite Platform 7\n\n\n\n1.6 Platform Redundancy Concept\n\nThe platform design is fully redundant with either internally redundant units\u2014like\nOBC or PCDU, 3-out-of-4 redundancy as for reaction wheels and fiberoptic\ngyroscopes, or external redundancy as for the receivers and transmitters.\n\nFig. 1.5 Platform plus payload plus structure of the first FLP based mission, the \u201cFlying Laptop\u201d.\n\u00a9 IRS, University of Stuttgart\n\nCore Data Handling \n\nAttitude Control \n\nPower \n\nPlatform \nTelecommand/Telemetry \n\nFig. 1.4 FLP Generation 1 platform infrastructure. \u00a9 IRS, University of Stuttgart\n\n8 J. Eickhoff\n\n\n\n/\n/\n\n/\n\nFig. 1.6 Flying Laptop satellite electrical block diagram. \u00a9 IRS, University of Stuttgart\n\n1 Introduction to the Microsatellite Platform 9\n\n\n\nThus every subsystem provides internal redundancy to prevent the mission from\nbeing lost due to a single point failure. As cross-coupling is applied for all exter-\nnally redundant equipment units, the harness is very unlikely to initiate a mission\nfailure. Please also refer to Fig. 1.6.\n\n1.7 Power Subsystem and Electrical Block Diagram\n\n1.7.1 Solar Panels\n\nThe solar panels of the \u201cFlying Laptop\u201d consist of GAGET1-ID/160-8040 cells\nmanufactured by AZUR SPACE Solar Power GmbH. These cells are triple junction\nGaInP2/GaAs/Ge cells with an average efficiency of 25.3 % and area of 30.18 cm\n\n2.\nThe EoL efficiency of the final panel assembly is estimated to be approximately\n19 % [59]. There are 105 cells on each of the two wing panels allocated in seven\nstrings of 15 cells each.\n\nOn the body mounted panel which will be warmer due to increased heat con-\nduction from the main body there are four strings of 16 cells each in order to\nachieve a similar operating voltage to the cooler wing panels. The panels feature\nshunt diodes for every cell so that damaged or shaded cells do not cause an entire\nstring to fail.\n\nThe body mounted panel also features an additional test string made of more\nadvanced triple junction cells of type RWE3G-ID2*/150-8040. These cells are are\nsimilar to the standard cells described above, but can reach an average efficiency of\n27.6 % [60]. The performance of these cells will be thoroughly monitored during\nthe mission.\n\nThe maximum achievable power in this overall solar panel configuration sums\nup to 230 W.\n\nTo deploy the solar panels after launch, no pyrotechnics are used. Instead, a\nmelting wire mechanism has been developed by IRS. For this mechanism, the bolts\nretaining the solar panels during launch are attached to the satellite using a split pod,\nwhich is held together by the melting wire. After the separation from the upper stage\nof the launcher, the wire is melted by heat resistors and the panels are deployed. This\nprocess is controlled automatically by the Power Control and Distribution Unit\n(PCDU) during satellite boot-up in orbit. For more details see Sect. 5.3.\n\n1.7.2 Battery\n\nThe battery consists of ANR 26650 M1-B Lithium-Iron-Phosphate (LiFePO4) cells\nmanufactured by A123 Systems. One cell has a nominal capacity of 2.5 Ah at a\nnominal voltage of 3.3 V. One battery string is directly attached to each of the solar\npanels. The strings for the side panels consist of 35 cells each, with blocks of five\n\n10 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\ncells in parallel and seven of these blocks in series, yielding a total capacity of\n12.5 Ah at a voltage between 18.5 and 25.2 V. For the center panel string, there are\nonly four cells in parallel, reducing the nominal capacity to 10 Ah. Thus the entire\nbattery has a nominal BoL capacity of 32.5 Ah.\n\nIn sunlight, the battery is charged with the maximum possible current from the\nsolar panels until a single cell reaches a voltage of 3.6 V at which point trickle\ncharging is applied until the end of the sunlight period. During nominal operations,\nthe battery is only discharged to approximately 70 % SoC. The Battery Charge\nRegulators (BCR) for the three strings are part of the PCDU.\n\nThe selected cells have a high cycle life and can deliver high currents without\nbeing damaged. However, they are also susceptible to overcharging and the volt-\nages of cells in series tend to drift apart. In order to minimize this effect, the cells in\na string are selected by comparing their charge/discharge characteristics and\nbringing them to the same State-of-Charge (SoC) before integrating them into the\nstring. Furthermore a passive equalizing concept using bleed resistors is applied to\nbalance the state of charge of the cells. There is a bleed resistor of 820 ? for every\nblock of cells in parallel in order to reduce the SoC of cells with higher voltages.\nA simple comparator circuit is used to control the voltage of the single blocks\nduring charge. If the voltage of one block exceeds the maximum charge voltage of\n3.6 V a signal is sent to the PCDU to stop charging of the affected string.\n\n1.7.3 The Power Control and Distribution Unit\n\nThe power subsystem is controlled by a Power Control and Distribution Unit\n(PCDU), which includes the Battery Charge Regulators, provides an unregulated\nbus voltage to the satellite platform and instrument units. In the configuration of the\n\u201cFlying Laptop\u201d due to solar array size and resulting number of cells per string the\nbus voltage ranges between 18.0 and 25.0 V. In a configuration with larger panels\nthe usually applied 28 V bus voltage can be achieved for future FLP spacecraft.\n\nThe PCDU is custom designed and is manufactured by Vectronic Aerospace,\nBerlin, Germany. It is controlled by the OBC and is able to switch the individual\nplatform and payload equipment power lines. For every component the voltage\nconversion is done by DC/DC-converters on dedicated electronic boards.\nThe PCDU manages the charge control of the cited battery.\n\nInside the PCDU the electric design is as follows (for details see Fig. 5.9):\n\n\u2022 Each solar panel is connected to a separate Battery Charge Regulator (BCR) and\nto a single battery string.\n\n\u2022 Depending on the input from the solar panels and the battery SoC, the PCDU\nswitches between battery charge and discharge.\n\n\u2022 It also measures several voltages, currents and temperatures.\n\u2022 The loads are connected to the PCDU via fuses and switches using an unreg-\n\nulated power-bus of 18\u201328 V DC.\n\n1 Introduction to the Microsatellite Platform 11\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\n\u2022 Each load has its own DC/DC-converter to achieve the specified supply voltage.\n\u2022 The control and measurement parameters which are transferred between\n\nOnboard Computer and PCDU as well as the PCDU commanding are treated in\nmore detail in Chap. 5.\n\nBesides its main function to control and distribute power to the loads, the PCDU\nis able to restart the satellite system in case of a complete power outage shutdown.\nFurthermore, it is used to distribute High Priority Commands (HPC) in case the\nOBC needs to be power-cycled for hard reset or to be reconfigured. In this case,\nthese commands are routed directly from the CCSDS-Board to the PCDU, which\ncan then switch any unit on or off. Further details are provided in Chap. 10.\n\n1.8 Core Data Handling Subsystem\n\nThe core data handling subsystem (Core DHS) of the FLP platform consists of a\nso-called Combined Data and Power Management Infrastructure (CDPI) as it is\ndescribed in detail in [47]. In the FLP Generation 1 design this CDPI controls the\nsatellite platform and a dedicated payload control computer is foreseen for payload\nmanagement as it is described in Sect. 1.9.\n\nIn the upgraded FLP Generation 2 design conceptualized by Airbus DS both\nplatform and payload control are managed by a single CDPI, based on a SpaceWire\nnetwork architecture. For more details see Sect. 9.3.2 and Fig. 9.14.\n\nA CDPI is a logical merge of a classic Onboard Computer (OBC) and a Power\nControl and Distribution Unit (PCDU). The key features are:\n\n\u2022 The OBC only includes the digital I/O interfaces.\n\u2022 The PCDU covers the analog I/O as it is anyway equipped with D/A and A/D\n\nconverters.\n\u2022 The infrastructure distributes I/O functions over OBC and PCDU and it is\n\nequipped with one single reconfiguration controller, which is able to handle both\npower failures as well as PCDU and OBC board reconfiguration cases.\n\n\u2022 The reconfiguration and power control chip is based on a real processor plus\nfirmware.\n\n\u2013 This saves qualification and manufacturing of a dedicated OBC reconfigu-\nration control ASIC.\n\n\u2013 Furthermore such a unit is able to directly process emergency commands of\nHPC type without an intermediate pulse decoding unit.\n\nDetails on the CDPI functionality and its embedding in the overall Core DHS\ncan be found in Chap. 4.\n\nFor the first FLP based mission, the \u201cFlying Laptop\u201d, the two units OBC and\nPCDU are kept in two separate housings (see Fig. 1.7) just for reasons of physical\nmounting in separate compartments of the spacecraft (cf. Figs. 1.4 and 1.5). They\n\n12 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\ncan also easily be combined into one single box for other missions with different\nmechanical design of the spacecraft structure.\n\nIn the assembly for the \u201cFlying Laptop\u201d the Reconfiguration Unit is physically\nincluded in the PCDU.\n\n1.9 FLP Payload Control Computer\n\nA Payload Module Controller (PMC) and a science data Mass Memory Unit\n(MMU) are not part of the FLP Generation 1 satellite platform itself, since they are\nhighly dependent on the number of individual payloads and their type\u2014both\nsubject to the individual mission goals. The first FLP platform based satellite, the\n\u201cFlying Laptop\u201d for example uses a university made, FPGA based, internally\nredundant PMC with directly coupled MMU Modules. In case of the \u201cFlying\nLaptop\u201d this payload control computer is called \u201cPayload Onboard Computer\u201d\n(PLOC). The EM of this assembly is depicted in Fig. 1.8.\n\nThis volume of the Flight Operations Manual only covers the general commands\nto manage the PMC w.r.t. power, mode switching. An IRS internal volume 2 covers\nthe \u201cFlying Laptop\u201d mission specific payloads comprises all payload command and\ncontrol via the PMC.\n\nFig. 1.7 OBC and PCDU forming a Combined Data and Power Management Infrastructure.\n\u00a9 IRS, University of Stuttgart\u2014from [47]\n\n1 Introduction to the Microsatellite Platform 13\n\n\n\n1.10 Attitude Control Subsystem\n\nThe attitude control subsystem (ACS) of the FLP satellite and its algorithms were\nfully defined, developed and tested as described in [41, 42, 124, 125] in a\nMatlab/Simulink environment. In a second step they were converted into C++ and\nintegrated into the OBSW objects. The ACS key features are:\n\n\u2022 Damping of rotational rates after its separation from the launch-vehicle or in\ncase of emergency.\n\n\u2022 A safe-mode in which power supply is ensured by utilizing reliable equipment\nonly.\n\n\u2022 Coarse attitude determination by using reliable sensors.\n\u2022 Coarse nadir attitude acquisition without Reaction Wheels (RWL) for RWL\n\nservicing in orbit and for taking the RWLs into operation during the satellite\nCommissioning Phase.\n\n\u2022 The capability of pointing the satellite to any given target with an absolute\npointing accuracy of 150 arcsec.\n\n\u2022 State estimation and rating of sensor data.\n\nFig. 1.8 Payload module\ncomputer: \u201cFlying Laptop\u201d\nmission example. \u00a9 IRS,\nUniversity of Stuttgart\n\n14 J. Eickhoff\n\n\n\n1.10.1 Sensors and Actuators\n\nPlatform sensors\nTable 1.2 shows all sensors of the FLP Generation 1 platform that are used for the\nattitude control subsystem:\n\n\u2022 Two redundant Magnetometers (MGM),\n\u2022 four Fiberoptic Gyros (FOG),\n\u2022 eight Sun Sensors (SUS) distributed all over the satellite,\n\u2022 a GPS system with three receivers and antennas and\n\u2022 a high precision Star Tracker (STR) system with two camera units.\n\nMagnetometers (MGM) The satellite platform is equipped with two three axis\nanisotropic-magnetoresistive (AMR) magnetometers manufactured by\nZARM-Technik, Bremen, Germany. The measured vector of the magnetic field of\nthe Earth is used as input information for the magnetic torquers, for detumble, safe\nmode and for the desaturation of the reaction wheels.\n\nSun Sensor Unit (SSU) The design of the sun sensor unit is based on two GaAs\nsolar cell on each PCB to make it a hot redundant configuration. Eight such units on\nthe FLP body are utilized to construct the overall 4? view.\n\nGPS unit The GPS system consists of three independent GPS receiver boards,\neach connected with a separate antenna and low noise amplifier. The chosen\nconfiguration is a requirement of an experiment which will be conducted in\ncooperation with the German Space Agency (DLR/GSOC) for GPS based attitude\ndetermination (GENIUS).\n\nFOG Unit Four fiber optic gyros are used in a tetrahedron configuration for the\nmeasurement of the body angular rates. The tetrahedron configuration offers a\n\nTable 1.2 Sensors overview\n\nMGM FOG SUS GPS STR\n\nOutput magnetic field\nvector (3 \u00d7 1)\n\nrotational\nrate\n(scalar)\n\nsolar cell\ncurrent\n(scalar)\n\nposition\n(3 \u00d7 1)\nvelocity\n(3 \u00d7 1)\n\ninertial\nquaternion\n(4 \u00d7 1)\n\nSensors 2 4 6 3 2\n\nUnit [T] [deg/s] [A] [m]\n[m/s]\n\n[\u2013]\n\nResolution/\nAccuracy\n\n5 nT (LSB) 2 \u00d7 10?6\n\ndeg/s\n(LSB)\n\n50 mA 10 m\n0.1 m/s\n\n5 arcsec\n\nControl Rate 1.5 Hz/3 Hz/6 Hz 10 Hz 10 Hz 1 Hz 5 Hz\n\nConnection\nType\n\nRS422 FOG IF RS422\n(PCDU)\n\nRS422 RS422\n\nManufacturer ZARM NG-LITEF Vectronic\nAerospace\n\nDLR DTU\n\n1 Introduction to the Microsatellite Platform 15\n\n\n\n3-out-of-4 redundancy. The type of the sensor is a C-FORS (Commercial Fiber\nOptic Rate Sensor) from Northrop-Grumman/Litef, Freiburg, Germany. The\nC-FORS as specified by the manufacturer has a maximum rate bias of 27\u00b0/h over\n?40\u00b0 to +77\u00b0 and a maximum angular random walk of 0.15\u00b0/?h.\n\nStar Tracker (STR) The star tracker system consists of a micro data processing\nunit and two camera head units (CHU), each equipped with a baffle system. The\nselected model is a micro-Advances Stellar Compass (?ASC) developed by the\nTechnical University of Denmark (DTU), Kgs. Lyngby, Denmark. Each CHU uses\na CCD-chip with a size of 7.95 mm \u00d7 6.45 mm with 752 \u00d7 558 pixels to take an\nimage of the stars. With the used optics the field of view (FOV) results to\n13.4\u00b0 \u00d7 18.4\u00b0 and its diagonal covers 22.76\u00b0.\nPlatform actuators\nTable 1.3 gives the key parameters of the FLP satellite\u2019s actuator system which is\ncomposed of:\n\n\u2022 Three Magnetotorquers (MGT) and\n\u2022 four Reaction Wheels (RW).\n\nMagnetic Torquers (MGT) Three magnetic torquers with a linear dipole\nmoment of 6 Am2 are used as an actuator in detumble and safe mode and during\nnormal operation they dump the momentum accumulated by the reaction wheels.\nThe magnetic torquers are also provided by ZARM-Technik, Bremen, Germany.\nEach torquer consists of two concentric coils wound parallel on top of each other.\nBoth can be operated independently, which is providing redundancy. The mass of\none torquer is 0.24 kg.\n\nTable 1.3 Actuators overview\n\nMGT RWL\n\nInput magnetic dipole moment rotational rate\n\nQuantity 1 unit\n3 redundant coils\n\n4 reaction wheels\n\nUnit [Am2] [Nms] resp. [Nm]\n\nPerformance Max. magnetic momentum:\n6 [Am2]\n\nMax. angular momentum:\n\u00b10.12 [Nms]\nMax. torque:\n\u00b10.015 [Nm]\n\nControl Rate 10 Hz 10 Hz\n\nConnection Type IIC RS422\n\nManufacturer ZARM Rockwell Collins\n\n16 J. Eickhoff\n\n\n\nReaction Wheels (RW) Four reactions wheels are arranged in a hot redundant\ntetrahedron like configuration. Each of the wheels has an angular momentum\ncapacity of 0.12 Nms and a reaction torque of 5 mNm over the range of\n\u00b13,000 rpm. The selected reaction wheel is manufactured by Rockwell Collins of\ntype RSI 01-5/28 having a mass of 0.7 kg. Each RW is connected to an FPGA-\nbased electronics assembly in a star like configuration via its RS-422 bidirectional\ninterface. This allows the parallel RW commanding via ACS commands.\n\n1.10.2 Satellite System Modes\n\nThe FLP satellite control system can be operated in several different modes of\nwhich here only a brief overview shall be given. The mode details and the tran-\nsitions and fallback transitions are explained in detail later in Chap. 2. Figure 1.9\ndepicts the satellite orientation corresponding to the diverse modes.\n\nFig. 1.9 Satellite control modes. \u00a9 IRS, University of Stuttgart\n\n1 Introduction to the Microsatellite Platform 17\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nThe start-up and commissioning modes are\n0 Launch Mode\n1a Detumble Mode\n1b Coarse Nadir Pointing Mode\n\nwhich are not included in Fig. 1.9.\n\nThe safe spin stabilized orientation of the satellite is achieved in\n2 Safe Mode\n\nwhere the satellite is controlled only by means of sun sensors, magnetometers\nand magnetotorquers.\n\nThe nominal operational modes of the spacecraft are just differing w.r.t. the\nsatellite\u2019s orientation and the ACS submodes\u2014see also Fig. 1.9. In Idle Mode the\nS/C is Sun oriented three axis stabilized.\n\nFor payload operation scenarios the platform offers nadir pointing, target\npointing and inertial pointing.\n3 Idle Mode\n4 Inertial Pointing Mode\n5 Nadir Pointing Mode\n6 Target Pointing (rollover) Mode\n\nDetumble and Safe Mode\nAfter separation from the launcher an FLP satellite will be spinning with rotational\nrates |?B| of up to 10\u00b0/s. For that situation and in case of an emergency the\nDe-tumble Mode is designed to reduce the rotational rate to a threshold of\n|?B| = 0.4\u00b0/s by using only magnetotorquers as actuators.\n\nThe satellite will then be switched into the Safe Mode where it orients the\nnegative z-axis (cf. Fig. 1.1) to the sun and builds up a spin of |?B| = 2\u00b0/s around\nthe z-axis to stabilize this orientation. This mode intends to provide a safe state in\nwhich power supply is secured and only a minimum of reliable sensors and actu-\nators are used.\n\nThe Detumble Mode and Safe Mode are the fallback modes of the satellite they\nhave to bring it to a safe state and have to be designed very robust in order to extend\nthe satellite survival to a maximum in case of an on-board failure. Therefore in both\nDetumble and Safe Mode the spacecraft orientation is only coarse and due to\nlimited sensors also the attitude information is only coarse.\nCoarse Nadir-Pointing Mode\nThe Coarse Nadir-Pointing Mode is used during the satellite Commissioning Phase\nfor taking the RWs into operation carefully and later during normal operation of the\nsatellite it can be used for RWL servicing.\n\nThe mode is characterized by the spacecraft already having its high performance\nACS sensors in operation (GPS, STR and potentially also the FOGs), whereas\nthe RWLs are still off and the coarse nadir orientation is achieved by means of the\n\n18 J. Eickhoff\n\n\n\nmagnetotorquers. For the detailed sequence of taking spacecraft ACS units into\noperations please refer to Sect. 11.7 on platform commissioning tasks.\n\nThe mode avoids a complete reorientation of the satellite to the Sun and offers an\nimproved antenna visibility during ground station passover compared to Safe Mode\nor Idle Mode which are both Sun-pointing modes.\nIdle Mode\nThe Idle Mode is designed for recharging the batteries during normal operation\nwhen the FLP satellite is in idle with respect to ground commanding or between\nscheduled observations of the loaded mission timeline. In this mode the satellite is\n3-axis controlled with the necessary sensors and actuators being operational and the\nsatellite is oriented Sun-pointing with its solar arrays. The sun sensors and star\ntrackers are used to determine the attitude and the fiber optic gyros are used to\ndetermine the body rates. Reaction wheels are used as actuators in this mode. In this\nmode the satellite is not spinning around its Z-Axis as in Safe Mode.\nOperational Pointing Modes\nTo perform any payload operation task the FLP satellite has three different oper-\national pointing modes:\n\n\u2022 The first one is designed to orient the satellite\u2019s coordinate system to the inertial\ncoordinate system so this mode is called Inertial Pointing Mode. For this mode\nno information about the current position is required since the inertial reference\nvectors are not depending on it. This mode is foreseen for astronomy experi-\nments in case where a camera or telescope payload on an FLP mission is\noriented towards a target relative to the fixed stars.\n\n\u2022 In contrast the other two pointing modes, Nadir Pointing Mode and Target\nPointing Mode, do need satellite position information since the direction to\nnadir, the earths center, or to any given ground target is depending on the\nsatellites current position. Star trackers and fiber optic gyros are used to\ndetermine attitude and reaction wheels are used for the actuation in this mode.\nThe nadir coordinate system is derived from the GPS output. So target pointing\nand nadir pointing with respect to attitude control laws is essentially the same\nexcept for a fixed target~tnadir \u00bc \u00f00; 0; 0\u00deT in Nadir Pointing Mode.\n\n1.11 Reaction Control Subsystem\n\nThe first FLP satellite\u2014the \u201cFlying Laptop\u201d\u2014is not yet equipped with a propulsion\nsubsystem for orbit correction maneuvers. The satellite platform by design however\nallows to provide an additional CAN-Bus port by the OBC and thus to be able to\nequip it with an SSTL 150 electric propulsion subsystem (see [154]).\n\n1 Introduction to the Microsatellite Platform 19\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\nIn the frame of the ESA Space-based Space Surveillance study for a low-cost\nmission for space debris detection Airbus DS GmbH has studied the feasibility of\nthe FLP Generation 2 platform which is based on FLP but enhanced with an\nupgraded OBC and a hydrazine propulsion subsystem (see [144]). The propulsion\nmodule is a mono-ergol hydrazine system from Airbus Defence and Space,\nGermany, operated in blow-down mode. It is used to perform orbit corrections\nrequiring large ?V (initial transfer, launcher dispersion correction, orbital param-\neters tuning) and for orbit maintenance (for which small ?V in the cm/s range is\nrequired)\u2014see Fig. 1.10.\n\n1.12 Communication Subsystem\n\nThe \u201cTelemetry, Tracking and Command\u201d (TTC) subsystem\u2014or TTC subsystem\nfor short\u2014consists of a transceiver manufactured by STT Systemtechnik, Munich,\nGermany (see [70]), and two omnidirectional turnstile antennas manufactured by\nSpaceQuest, Fairfax, VA, USA (see [72]). The frequencies used for the \u201cFlying\nLaptop\u201d are 2.2635 GHz for the downlink and 2.0835 GHz for the uplink. Details\non the polarization, modulation etc. can be found in [77] and in Chap. 6.\n\nFig. 1.10 Schematic of\noptional propulsion module\nfor FLP Generation 2.\n\u00a9 Airbus DS from [120]\n\n20 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\n\n\nAs can be seen in Fig. 1.6 the system consists of two receivers and two trans-\nmitters, in combination referred to as the transceiver, one nominal and one\nredundant each. The nominal and redundant \u201cpaths\u201d both use a separate diplexer for\nthe connection to the antennas. A 3 dB hybrid coupler is used to split the signal to\nthe two antennas.\n\nThe transceiver is connected to both redundant CCSDS-Boards of the OBC as\nshown in Fig. 1.6 which establishes the TM/TC connection to the OBC\nProcessor-Boards (see Sect. 4.2). The TTC subsystem is powered by the PCDU. An\nadditional connection between the transceiver and the OBC is used to acquire\nhousekeeping on-board TM on the TTC subsystem status by the OBSW. This TM\nincludes temperatures, state and validity flags and performance data.\n\n1.13 Thermal Control Subsystem\n\nThe FLP platform is tailored for a passive thermal control subsystem (TCS). Most\nof the main body of the satellite is covered in Multi-Layer-Insulation (MLI) to\nminimize heat exchange with the space environment. On all surfaces not covered\nwith MLI, radiators emit heat from the satellite while reflecting the sunlight. Each\nof the satellite modules possesses a pair of redundant electrical heating films\ncontrolled by thermostats. These heaters are used in case where the temperature\nwithin the modules is below the specified operating temperature range. Furthermore\nthe most critical components (battery, OBC, PCDU, TTC) have their own heaters to\nassure permanent operability. Pt1000 thermistors are distributed across the satellite\nto measure the temperatures of the components. For the \u201cFlying Laptop\u201d as first\nsatellite being built on the FLP Platform, it is divided into three segments which are\nstructural horizontal plates\u2014the service module, the core module and the payload\nmodule (see also Chap. 8 and Fig. 1.11). The segments are connected by vertical\nshear plate crosses in the center and two shear panels at the side of the cube (see\nFig. 1.5).\n\nFig. 1.11 Mechanical\nconfiguration of the Flying\nLaptop. \u00a9 IRS, University of\nStuttgart\n\n1 Introduction to the Microsatellite Platform 21\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\n\n\n1.14 Satellite Deorbiting at End of Life\n\nThe last platform element is the already mentioned \u201cDe-Orbiting-Mechanism\u201d\n(DOM) to meet the 25-year maximum post-operational deorbiting requirement\nproposed by the United Nations Inter-Agency Space Debris Coordination\nCommittee (IADC) and mandatory according to the European Code of Conduct on\nSpace Debris Mitigation [1]. At end of the satellite lifetime the DOM releases a\nlarge-area foil shield to generate of a higher interaction with the residual atmo-\nsphere in orbit, resulting in a negative ?V and thus a faster reentry of the satellite.\nThe De-Orbiting-Mechanism is stowed within the launch adapter ring until its\ndeployment at the end of the satellite mission. It is a flat square sail and is deployed\nusing a non-explosive bi-metal switch.\n\n\u00a9 GFZ/IABG \n\n\u00a9 CNES / Airbus DS \n\n\u00a9 ESA \u00a9 Airbus DS \n\n\u00a9 IRS, Uni Stuttgart \u00a9 Airbus DS \n\nConfigurations with deployable Solar Arrays \n\nConfigurations with body-mounted Solar Arrays \n\nFig. 1.12 Possible satellite body configurations for the FLP\n\n22 J. Eickhoff\n\n\n\n1.15 Possible Mechanical Platform Configurations\n\nThe FLP microsatellite platform is mainly a functional platform comprising the\npower subsystem, the core data handling subsystem, the telecommand and\ntelemetry subsystem for satellite control, the attitude and orbit control subsystem\nand the thermal control subsystem. The entire infrastructure can be implemented by\ndesign into a variety of structure variants, with deployable or body-mounted solar\narrays. Some example layouts cited from other mission are depicted in Fig. 1.12.\n\n1 Introduction to the Microsatellite Platform 23\n\n\n\nChapter 2\nThe FLP Platform Operability\n\nKai-S\u00f6ren Klemich and Jens Eickhoff\n\nAbstract This chapter provides the basic overview on how an FLP-based space-\ncraft is operated. It explains the basic system modes and commanded transitions as\nwell as fallback transitions. It explains the table-driven specification of mode-\ntransitions. And it finally details all the command/control services which the plat-\nform provides\u2014both standard PUS services, according to ECSS as well as defined\nprivate services. Command addressing and telemetry source definition via Virtual\nChannels and APIDs are also addressed.\n\nKeywords Spacecraft modes ? Attitude control subsystem modes ? Mode transi-\ntions and control tables ? Telecommand packet definition ? Telemetry packet\ndefinition ? Virtual channels ? Application IDs ? ECSS standard PUS services ?\nPrivate PUS services\n\nK.-S. Klemich (&)\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: klemich@irs.uni-stuttgart.de\n\nJ. Eickhoff\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_2\n\n25\n\n\n\n2.1 Spacecraft Configuration Handling Concept\n\nIn this section the spacecraft configuration management mechanisms are explained.\nThe configuration comprises the information on\n\n\u2022 which devices\n\n\u2013 are active on and are\n\u2013 commanded into which mode and\n\n\u2022 which software processes\n\n\u2013 are in which mode.\n\nThus the configuration defines the operational mode of the entire spacecraft. In\norder to better understand the configuration handling, some concepts of the OBSW\nare introduced hereafter.\n\n2.1.1 System Mode Changes Using the OBSW Object\nHierarchy\n\nBefore explaining the platform modes in more detail, the principle of mode tran-\nsitions and transition commanding shall be explained. See Sect. 3.2 then for further\ndetails. The FLP OBSW is based on the object-oriented paradigm and features a\nhierarchy of \u201cobjects\u201d. In this hierarchy the System object is the top-level one. The\nmodes of the spacecraft correspond 1:1 to the modes of the System object.\n\nBelow the System object (see Fig. 3.3 and Sect. 3.2.6), there exist the subsystem\nobjects (see Sect. 3.2.5), ACS_Subsystem (Attitude Control), PSS_Subsystem\n(Power Supply), TCS_Subsystem (Thermal Control), TTC_Subsystem (Telemetry/\nTelecommand), Payload. System and subsystem objects also are called \u201chigh level\u201d\nobjects. Below these subsystem objects are the \u201clow level\u201d objects, which are\n\n\u2022 device handlers (see Sect. 3.2.2) which are configuring and communicating with\nthe hardware components,\n\n\u2022 assemblies (see Sect. 3.2.3) which manage redundancies of device handlers in\ncase of redundant devices like the RWL and\n\n\u2022 controllers (see Sect. 3.2.4) which are software objects using data from the\ndevices to calculate control variables, e.g. the ACS_Controller which performs\nthe attitude control.\n\nAll of these objects have different operational modes, which are defined by a\ncombination of a mode (ID) and a submode (ID). For device handlers the available\nmodes are defined by the device\u2019s internal modes, for controllers the modes are\ndefined by different control strategies, for high level objects the modes are defined\nas lists of modes of their sub-objects (explained later in Sect. 2.1.12).\n\n26 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nIf System is commanded to a certain mode (e.g. Idle Mode) it commands its\nsub-objects (i.e. the subsystem objects) to the necessary sub-object modes. For\nexample ACS would be commanded to the ACS Idle Mode. Also PSS will be\ncommanded to the required submode and similarly TCS etc.\n\nThe subsystems themselves then command their sub-objects, i.e. device han-\ndlers, assemblies and controllers to their necessary modes, e.g. for ACS Idle Mode\nthe reaction wheels must be active and the ACS_Controller must be set to a mode in\nwhich it applies the Idle Mode control strategy. Following this concept, com-\nmanding the System object to a mode triggers mode changes of all lower level\nobjects, i.e. of all objects.\n\n2.1.2 Overview on the FLP Operational Modes\n\nThe diagram Fig. 2.1 shows the mode transitions of the spacecraft\u2014in the OBSW\nrepresented by the modes of the System object. All of its lower modes, up to Idle\nMode, are closely coupled to the respective ACS_Subsystem modes and the\nACS_Controller modes which share the same mode names. The ACS modes are\n\nFig. 2.1 FLP spacecraft modes and transitions. \u00a9 IRS, University of Stuttgart\n\n2 The FLP Platform Operability 27\n\n\n\nillustrated in Fig. 2.2. The different operational modes of the System object are\nexplained in the following sections.\n\nThe \u201coperational modes\u201d cited in Figs. 2.1 and 2.2 include all payload modes as\nwell as modes where no payload is activated but ACS is in a dedicated pointing\nmode e.g. target pointing for TM/TC ground station contact. There exist three kinds\nof mode transitions depicted in the diagram:\n\n\u2022 The black continuous arrows show mode transitions which are available as\n\u201c Flight Procedures\u201d (see Chap. 15). Note that technically the mode machine in\nthe OBSW does not restrict the modes which are allowed to be commanded.\nThis restriction is induced by the availability of corresponding Flight\nProcedures. There are procedures to transit from lower to higher modes step by\nstep, but also from Safe Mode to Idle Mode, and to from higher to lower modes\nin arbitrary steps, i.e. also from the highest modes to Safe Mode.\n\n\u2022 The black dashed arrows show fallback mode transitions which are automati-\ncally triggered by the mode machine as fallback modes in case where a higher\nmode cannot be kept. Such a fallback transition is triggered in two cases:\n\n\u2013 A mode cannot be kept or cannot be reached, e.g. because the \u201cFailure\nDetection, Isolation and Recovery\u201d controller FDIR has marked a vital\ndevice for this mode as faulty or a vital device goes into an error mode or an\n\nFig. 2.2 FLP ACS modes and transitions. \u00a9 IRS, University of Stuttgart\n\n28 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\n\n\nassembly (a logical group of identical devices\u2014like for the 4 reaction\nwheels) cannot reach its target mode.\n\n\u2013 The ACS_Controller detects that the rotational rates or mispointings are too\nlarge for the respective mode. In such case, the ACS_Controller will notify\nthe ACS_Subsystem that it cannot keep its mode which will trigger the fall-\nback transition of the ACS_Subsystem, which in turn will trigger the depicted\nfallback transition of the System object (i.e. of the entire spacecraft).\n\n\u2022 The red arrows show additional transitions triggered by FDIR from higher\nmodes to a lower mode. These are induced in critical cases\u2014for example when\nthe battery State-of-Charge drops below certain limits (see Sect. 10.3).\n\nThe FLP is designed for satellites which are launched as secondary passengers\nand which fulfill the requirement of being entirely switched off until after separation\nfrom launcher.\n\nStarting from Launch Mode, where the system is completely switched off, the\nOBSW performs its boot sequence (Boot Mode) and then starts to detumble the\nsatellite (Detumble Mode). Once the overall rotational rate drops below ca. 0.4\u00b0/s, it\norients the satellite\u2019s solar panels to the sun and spins the satellite about the sun axis\n(Safe Mode). If the estimated rotational rate diverges from the target rotational rate\nof 2\u00b0/s by more than 3\u00b0/s (named \u201cdelta omega\u201d in the diagram), the system is set\nback to Detumble mode.\n\nHigher modes than Safe Mode have to be commanded from ground, which is\ngenerally possible in both directions, i.e. from high to low and from low to high. In\nCoarse Nadir Pointing and Idle mode, the satellite system falls back to Detumble\nmode when the total rotational rate exceeds 3\u00b0/s. The diverse modes are explained\nin more detail from Sect. 2.1.3 onwards.\n\nOnce the satellite has reached an operational mode with a pointing control\nstrategy, Idle Mode serves as an additional fallback option to avoid a transition to\nthe Safe Mode in case of a failure with low severity. This fallback is triggered when\nthe total rotational rate exceeds 1.5\u00b0/s or the higher mode cannot be kept, e.g. due to\na failure in a payload device. If the failure is more severe, another fallback from Idle\nto Safe mode will be triggered.\n\nAs the flight modes of the satellite are closely related to the corresponding ACS\ncontrol strategies, the ACS modes and transition diagram as illustrated in Fig. 2.2\nlooks rather similar.\n\n2.1.3 Launch Mode\n\nThe Launch Mode is included in Fig. 2.1 although it does not really exist as\noperational mode. In the Launch Mode the PCDU is still off\u2014except for the\nlauncher separation detection circuit\u2014and the Onboard Computer (OBC) is still off.\nUpon detection of the separation from the launcher, the spacecraft transits through\nthe Boot Mode and switches to the Detumble/Safe Mode automatically.\n\n2 The FLP Platform Operability 29\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n2.1.4 Boot Mode\n\nThe Boot Mode in Fig. 2.1 also is no real mode but just an operational transition. It\ncan however be commanded in case where a reboot of the satellite system becomes\nnecessary. As soon as the PCDU\u2019s launcher separation circuit detects separation,\nthe PCDU boots and thereafter initiates power-up of diverse equipment for the Safe\nMode, namely OBC and Transceivers. The OBC/OBSW then perform the final\nsteps to reach Detumble/Safe Mode. The overall satellite system boot at launcher\nseparation is explained in more detail later in Sect. 4.4.\n\nDuring boot the PCDU switches on both TTC receivers and both OBC\nCCSDS-Boards in hot redundancy to avoid single point failures. In addition it\nactivates the power lines for magnetotorquers and magnetometers.\n\n2.1.5 Detumble/Safe Mode\n\nAfter separation from the launcher, the satellite tumbles with random rates. The\nactual rates depend on the used launch vehicle and the separation mechanism.\nDuring Launch and Early Orbit Phase (LEOP) and if the satellite starts tumbling\nduring nominal operations, the orientation of the solar panels to the Sun and thus\nthe generated energy cannot be predicted and changes very quickly. Therefore the\nactive devices are reduced to a minimum. Only the magnetotorquers are used as\nactuators to detumble the satellite. Magnetometers and Sun sensors are used as\nsensor equipment in this mode. In order to achieve a sufficient torque, both, the\nnominal and redundant coils of the magnetotorquers are used. The solar panel\ndeployment mechanisms will be activated for a maximum of 1 min during\nLEOP. More details are provided in Sect. 5.3 and in Sect. 11.6.1.\n\nAs soon as the total angular rate of the satellite decreases below 0.4\u00b0/s, the\nsatellite ACS changes the control strategy from rate damping to Sun orientation (see\nSect. 2.3) and spin-up around the ?z axis up to a rate of approximately 2\u00b0/s (see\nFigs. 1.9 and 2.3).\n\nThe angle between the panel normal and the principal axis of inertia is\napproximately 8\u00b0. The accuracy of the measurement of the direction of the sun by\nthe Sun sensors depends on the direction to the Earth. The maximum error is\napproximately 20\u00b0. Thus the maximum pointing error is in the range of 28\u00b0.\nHowever due to the spin its mean value is significantly smaller.\n\nBesides the ACS components, only the most vital components are switched on,\nin order to avoid unnecessary power consumption. Thus, the battery can be\nrecharged and the satellite is kept safely in operation even in case of a loss of\ncontrol by ground. This mode is also entered in case of a contingency and can be\nautomatically initiated by the FDIR or can be commanded from ground (see\nFig. 2.1).\n\n30 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\nFrom Safe Mode upwards the normal transition is to Idle Mode. The Coarse\nNadir Pointing Mode which is illustrated in Fig. 2.1 is used only during the\nspacecraft Commissioning Phase or during failure debugging (see Sect. 11.7).\n\n2.1.6 Idle Mode\n\nIf the satellite operates nominally in Safe Mode and the battery is sufficiently\nrecharged, the Idle Mode can be entered\u2014commanded by telecommand (TC) from\nground. In this mode, the solar panels are accurately oriented to the sun using the\nfull capabilities of the ACS, using reaction wheels as actuators and GPS and STRs\nas sensors. Note that the attitude control algorithms avoid blinding of the STR by\nthe Earth and the Sun at all times. In order to achieve this, the satellite is rotated\nonce per orbit (see Fig. 2.4). No payload equipment is activated in Idle Mode.\n\nFrom this state, the satellite can be brought into the operational modes like for\nEarth Observation (Nadir and Target Pointing Mode) or Inertial Pointing Mode for\nobservation of celestial bodies. These operational modes are mission specific.\n\nIf an observation or data downlink period is finished and the battery needs to be\nrecharged, the satellite will always be commanded back to Idle Mode.\n\nTo Sun \n\nNorth \n\nFig. 2.3 Satellite safe mode. \u00a9 IRS, University of Stuttgart\n\n2 The FLP Platform Operability 31\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\n2.1.7 Coarse Nadir Pointing Mode\n\nThe Coarse Nadir Pointing Mode is an intermediate mode which is used during the\nspacecraft platform Commissioning Phase. Its control strategy is nadir pointing as\nthis allows to achieve longer ground station contact times as in Safe Mode.\nHowever, in Coarse Nadir Pointing Mode the Earth orientation is achieved purely\nbased on magnetotorquer control. The RWs are off when entering the mode from\nSafe Mode. The Coarse Nadir Pointing Mode is used to safely take the RWs into\noperations for the first time in the Commissioning Phase\u2014see also Sect. 11.7.\n\nThe Coarse Nadir Pointing Mode can also be used for deeper spacecraft\ninspection in contingency operations to perform ground based FDIR or to perform\nEarth observation in case the RW cannot be used anymore.\n\n2.1.8 Operational Modes\u2014Ground Contact\n\nIn this mode the FLP points to and tracks a ground station antenna by target\npointing. On S-band contact establishment the satellite starts to downlink life\n\nNorth \n\nTo Sun \n\nFig. 2.4 Satellite idle mode. \u00a9 IRS, University of Stuttgart\n\n32 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\ntelemetry (TM), playback telemetry and Event telemetry via its diverse TM virtual\nchannels (for details see Sect. 2.2.1). The satellite can also be commanded by\nground via telecommands.\n\nPayload data is transmitted to ground using the science \u201cData Downlink System\u201d\n(DDS) of the satellite which is mission specific and can be S-band (as for the first\nFLP mission of the University), X-Band (as foreseen for FLP Generation 2) or even\nKa-Band.\n\nWith respect to ACS operation this mode represents a standard ACS target\npointing mode as also used for target pointing payload operations\u2014see next\nsection.\n\n2.1.9 Operational Modes\u2014Payload Operations\n\nIn these modes, the full ACS capabilities are required to perform platform opera-\ntions with payload pointing and mission product generation. The PLOC is switched\non and it is possible to activate the other payload components according to mission\ntimeline or life manual command. The Data Downlink System (DDS) is not active.\nAs part of this mode, several different sub-modes are possible which depend on the\ndedicated mission. The FLP as platform supports by default:\n\n\u2022 Earth observation in nadir pointing\n\u2022 Earth observation in target pointing\n\u2022 Inertial pointing for astronomical observations etc.\n\nThe activation of the necessary devices and the switching of the different\nrequired ACS modes is controlled by the OBC taking into account the required\nACS mode transitions (see Sect. 2.1.12 and following). If the satellite starts spin-\nning with a rate exceeding 1.5\u00b0/s during payload operations, it is automatically\nswitched back to the Idle Mode (see Fig. 2.1).\n\n2.1.10 None Mode\n\nThe None Mode is a fallback mode for extreme failure situations where the OBSW\nis not able to control the spacecraft anymore. Only the bare minimum equipment is\nkept operational which are PCDU, OBC and TTC Receivers and Transmitter. The\nheater strategy is reduced to battery thermal conditioning. No ACS control is\nperformed. All payloads are disabled. The spacecraft attends ground support. If\nbattery state of charge is decreasing further the PCDU will even shut off TTC and\nOBC and finally itself. For more details see Sects. 10.2 and 10.3.\n\n2 The FLP Platform Operability 33\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n2.1.11 Open Mode Concept\n\nOn the FLP a so-called open mode concept (as explained in [140]) is applied, which\nmeans that the devices and software functions turned on during a specific mode can\nbe modified by telecommands from the ground station. The actual modification can\nbe done for the system and subsystem objects\u2014like the ACS in the example in\nSect. 2.1.2. The implemented concept is very flexible and leads to a design, where\nno PUS1 (see Sect. 2.4) Service 18 (On-board Control Procedures) is mandatory\nand no Event-Action Service 19.\n\nFor every system or subsystem mode a standard set of mode/submode combi-\nnations of the lower level objects is preprogrammed into the OBSW image in the\nOBC memory. For system level modes, these sets consist of subsystem modes and\nfor subsystem modes, these sets consist of assembly, controller and device handler\nmodes. This way, different configurations of the complete spacecraft are saved.\nChanges of these predefined mode sets as well as new mode definitions can be\ncommanded at all times via loadable tables (see the following section).\n\nNote that assemblies manage device handlers of redundant devices. For such\ndevices, only the assembly mode is defined as part of the a.m. mode tables and the\ndevice modes are controlled by the assembly. This way, switching between\nredundant units can be performed by setting health flags rather than changing any\npredefined modes. If a nominal unit is set to faulty, its assembly will automatically\nswitch it off and switch on the redundant unit.\n\nTo save the health statuses of all devices a Spacecraft State Vector is stored in\ndedicated memory areas on the I/O-Boards of the OBC (see Sects. 4.3.2 and 10.2.11).\nAt launch, no component should be defective, so all flags are set to \u201cHEALTHY\u201d.\nThese can be changed automatically to \u201cFAULTY\u201d by the FDIR upon a detection of\nan error or by a telecommand from ground. However, to change the status of a device\nback to \u201cHEALTHY\u201d, this is only possible by telecommand from ground\u2014see also\nSect. 2.4.16.\n\n2.1.12 Mode Tables and Sequences Control Service\n\nThe satellite modes are defined in the OBSW by tables which contain mode/\nsubmode combinations and by sequences which contain sets of tables. In order to\nmanipulate these tables and sequences, a dedicated on-board Packet Utilization\nStandard (PUS) Service is used, which is referred to as Service 202\u2014see later in\nSect. 2.4.17 for details.\n\n1ESA Packet Utilization Standard (PUS)\u2014see [13].\n\n34 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nSatellite mode target tables are defined for the spacecraft, one for Safe Mode,\none for Idle Mode etc. There also may be tables defined for mission specific modes.\nMode table comprise n ? 0 mode entries. Each entry (a dedicated line in the table)\nconsists of an object-ID as well as the object\u2019s mode ID and submode ID.\n\nAs example the Idle Mode target table contains mode/submode entries for the\nSTR, the RW\u2014defining these devices to be in On mode. The entry for the Safe\nMode target table of the spacecraft will also comprise entry lines for STR and RWs\n\u2014however defining these devices to be in Off mode.\n\nThe concept of mode transitions is explained at hand of Fig. 2.5 and Table 2.1:\nA mode transition sequence includes one target table and one or multiple\n\nso-called sequence tables. Figure 2.5 depicts the principle of an overall layout as\nsketch\u2014not for readability. Table 2.1 further below depicts the detailed table for the\nsatellite system modes and transitions. Each subsystem chapter later in this book\ncontains such a table set for the subsystem modes and transitions\u2014see for example\nTable 6.12. For typesetting layout purposes in this book here the sequence tables\nare placed below the target table.\n\n\u2022 The first table in a sequence\u2014the target table\u2014contains the system/subsystem\ntarget mode\u2014i.e. into which status the system shall be brought\u2014plus the\nintended modes of the child objects.\n\n\u2022 A sequence table has in principal the same logic and layout as a target table, but\ncorresponds to an intermediate stage only. Several sequence tables make up a\nswitch sequence, and define each an intermediate mode status of the devices/\nassemblies/controller.\n\n\u2022 The mode transitions of the next sequence table are started when the transitions\nof the previous table are finished, plus a configurable time offset (WaitTime).\nFor example the transition of the system to Boot Mode in Table 2.1 shows that 3\nsequence tables are to be processed one by one when the system enters transition\nto boot mode. These sequence tables are executed in the defined order until the\ntarget mode settings are reached.\n\n\u2022 One target table plus one or more sequence tables corresponds exactly to one\nmode of the controlled system/subsystem. E.g.\u2014on satellite system level\u2014there\nwill be one such arrangement for Detumble/Safe Mode, one for Idle Mode etc.\n\n\u2022 The actual spacecraft/subsystem mode is regularly checked against the target\ntable once the mode transition sequence to the target has finished.\n\nTarget Table Sequence Table I Sequence Table II\n\nName Seq ID HardCoded? Fallback\nIdle 0x19040000 1 0x19020000\nName Table ID WaitTime Check? Name Table ID WaitTime Check? Name Table ID WaitTime Check?\nIdle_Target 0x19040000 0 1 Idle_Trans_1 0x19040100 0 1 Idle_Trans_2 0x19040200 0 0\nSystem Obj ID Mode Mode ID Submode Submode ID System Obj ID Mode Mode ID Submode Submode ID System Obj ID Mode Mode ID Submode Submode ID\nACS Controller 0x43410000 Normal 2 Idle 4 ACS Controller 0x43410000 ACS Controller 0x43410000 Normal 2 Idle 4\nMGT Ass. 0x41000300 Normal 2 Single 0 MGT Ass. 0x41000300 Normal 2 Single 0 MGT Ass. 0x41000300\nMGM Ass. 0x41000200 Normal 2 Fast 2 MGM Ass. 0x41000200 Normal 2 Fast 2 MGM Ass. 0x41000200\nRW Ass. 0x41000100 Normal 2 Torque 1 RW Ass. 0x41000100 Normal 2 Torque 1 RW Ass. 0x41000100\nSTR Ass. 0x41000800 Normal 2 Default 7 STR Ass. 0x41000800 Normal 2 Default 7 STR Ass. 0x41000800\nFOG Ass. 0x41000400 Normal 2 Default 0 FOG Ass. 0x41000400 Normal 2 Default 0 FOG Ass. 0x41000400\nGPS Ass. 0x41000500 On 1 Single 0 GPS Ass. 0x41000500 On 1 Single 0 GPS Ass. 0x41000500\n\nFig. 2.5 Mode switch tables\u2014sequence sketch. \u00a9 IRS, University of Stuttgart\n\n2 The FLP Platform Operability 35\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\n\n\nT\nab\n\nle\n2.\n1\n\nFL\nP\nsy\nst\nem\n\nle\nve\nl\nm\nod\n\nes\nan\nd\ntr\nan\nsi\ntio\n\nn\nta\nbl\ne\n\nSy\nst\nem\n\nM\nod\n\nes\n0x\n\n01\n00\n\n01\n00\n\nC\nom\n\nm\nan\n\ndi\nng\n\nto\nN\n\non\ne\n\nM\nod\n\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nN\non\n\ne\n0x\n\n79\n00\n\n00\n00\n\n1\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nN\non\n\ne_\nT\n\nar\nge\n\nt\n0x\n\n79\n00\n\n00\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nN\non\n\ne_\nT\n\nra\nns\n\n1\n0x\n\n79\n00\n\n01\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nO\n\nff\n0x\n\n19\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nO\n\nff\n0x\n\n49\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nO\n\nff\n0x\n\n69\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nO\n\nff\n0x\n\n59\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nN\non\n\ne\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n36 K.-S. Klemich and J. Eickhoff\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd)\n\nC\nom\n\nm\nan\n\ndi\nng\n\nto\nB\n\noo\nt\n\nM\nod\n\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nB\noo\n\nt\n0x\n\n79\n01\n\n00\n00\n\n1\n0x\n\n79\n00\n\n00\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nB\noo\n\nt_\nT\n\nar\nge\n\nt\n0x\n\n79\n01\n\n00\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nB\noo\n\nt_\nT\n\nra\nns\n\n1\n0x\n\n79\n01\n\n01\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nO\n\nff\n0x\n\n19\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nO\n\nff\n0x\n\n49\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nO\n\nff\n0x\n\n69\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nO\n\nff\n0x\n\n59\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nN\non\n\ne\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n2 The FLP Platform Operability 37\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) 2 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nB\noo\n\nt_\nT\n\nra\nns\n\n2\n0x\n\n79\n01\n\n02\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nB\n\noo\nt\n\n0x\n49\n\n02\n00\n\n00\nN\n\non\ne\n\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n3 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nB\noo\n\nt_\nT\n\nra\nns\n\n3\n0x\n\n79\n01\n\n03\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nO\n\nff\n0x\n\n49\n00\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# C\nom\n\nm\nan\n\ndi\nng\n\nto\nD\n\net\num\n\nbl\ne/\n\nSa\nfe\n\nM\nod\n\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nD\net\n\num\nbl\n\ne\n0x\n\n79\n02\n\n00\n00\n\n1\n0x\n\n79\n00\n\n00\n00\n\n(c\non\n\ntin\nue\n\nd)\n\n38 K.-S. Klemich and J. Eickhoff\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nD\net\n\num\nbl\n\ne_\nT\n\nar\nge\n\nt\n0x\n\n79\n02\n\n00\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nD\n\net\num\n\nbl\ne\n\n0x\n19\n\n01\n00\n\n00\nN\n\non\ne\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nSu\n\nrv\niv\n\nal\n0x\n\n59\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nN\non\n\ne\n0\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nD\net\n\num\nbl\n\ne_\nT\n\nra\nns\n\n1\n0x\n\n79\n02\n\n01\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nD\n\net\num\n\nbl\ne\n\n0x\n19\n\n01\n00\n\n00\nN\n\non\ne\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nSu\n\nrv\niv\n\nal\n0x\n\n59\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nN\non\n\ne\n0\n\n# C\nom\n\nm\nan\n\ndi\nng\n\nto\nC\n\noa\nrs\n\ne\nN\n\nad\nir\n\nM\nod\n\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nC\noa\n\nrs\neN\n\nad\nir\n\n0x\n79\n\n04\n00\n\n00\n1\n\n0x\n79\n\n03\n00\n\n00\n(c\n\non\ntin\n\nue\nd)\n\n2 The FLP Platform Operability 39\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\noa\n\nrs\neN\n\nad\nir\n\n_T\nar\n\nge\nt\n\n0x\n79\n\n04\n00\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nC\n\noa\nrs\n\neN\nad\n\nir\n0x\n\n19\n03\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\noa\n\nrs\neN\n\nad\nir\n\n_T\nra\n\nns\n1\n\n0x\n79\n\n04\n01\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nC\n\noa\nrs\n\neN\nad\n\nir\n0x\n\n69\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nO\n\nff\n0\n\nN\non\n\ne\n0\n\n# C\nom\n\nm\nan\n\ndi\nng\n\nto\nId\n\nle\nM\n\nod\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nId\nle\n\n0x\n79\n\n05\n00\n\n00\n1\n\n0x\n79\n\n03\n00\n\n00\n(c\n\non\ntin\n\nue\nd)\n\n40 K.-S. Klemich and J. Eickhoff\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nId\nle\n\n_T\nar\n\nge\nt\n\n0x\n79\n\n05\n00\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nId\n\nle\n0x\n\n19\n04\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nId\nle\n\n_T\nra\n\nns\n1\n\n0x\n79\n\n05\n01\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nId\n\nle\n0x\n\n19\n04\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nN\non\n\ne\n0\n\n# C\nom\n\nm\nan\n\ndi\nng\n\nto\nG\n\nro\nun\n\nd\nC\n\non\nta\n\nct\nM\n\nod\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nT\nar\n\nge\ntP\n\nt_\nG\n\nS\n0x\n\n79\n06\n\n00\n00\n\n1\n0x\n\n79\n05\n\n00\n00\n\n(c\non\n\ntin\nue\n\nd)\n\n2 The FLP Platform Operability 41\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nT\nar\n\nge\ntP\n\nt_\nG\n\nS\n0x\n\n79\n06\n\n00\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nN\n\nad\nir\n\nPt\n0x\n\n19\n06\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nT\nar\n\nge\ntP\n\nt_\nG\n\nS_\nT\n\nra\nns\n\n1\n0x\n\n79\n03\n\n01\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nT\n\nar\nge\n\ntP\nt\n\n0x\n19\n\n06\n00\n\n00\nN\n\non\ne\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nC\n\nom\nm\n\n0x\n69\n\n01\n00\n\n00\nN\n\non\ne\n\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nN\non\n\ne\n0\n\n# C\nom\n\nm\nan\n\ndi\nng\n\nto\nN\n\nad\nir\n\nPo\nin\n\ntin\ng\n\nE\nO\n\nM\nod\n\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nN\nad\n\nir\nPt\n\n0x\n79\n\n0B\n00\n\n00\n1\n\n0x\n79\n\n05\n00\n\n00\n(c\n\non\ntin\n\nue\nd)\n\n42 K.-S. Klemich and J. Eickhoff\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nN\nad\n\nir\nPt\n\n_T\nar\n\nge\nt\n\n0x\n79\n\n0B\n00\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nN\n\nad\nir\n\nPt\n0x\n\n19\n05\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nN\nad\n\nir\nPt\n\n_T\nra\n\nns\n1\n\n0x\n79\n\n0B\n01\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nN\n\nad\nir\n\nPt\n0x\n\n19\n05\n\n00\n00\n\nN\non\n\ne\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nN\n\non\ne\n\n0\n\n# C\nom\n\nm\nan\n\ndi\nng\n\nto\nT\n\nar\nge\n\nt\nPo\n\nin\ntin\n\ng\nE\n\nO\nM\n\nod\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nT\nar\n\nge\ntP\n\nt\n0x\n\n79\n13\n\n00\n00\n\n1\n0x\n\n79\n05\n\n00\n00\n\n(c\non\n\ntin\nue\n\nd)\n\n2 The FLP Platform Operability 43\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nT\nar\n\nge\ntP\n\nt_\nT\n\nar\nge\n\nt\n0x\n\n79\n13\n\n00\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nT\n\nar\nge\n\ntP\nt\n\n0x\n19\n\n06\n00\n\n00\nN\n\non\ne\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nT\nar\n\nge\ntP\n\nt_\nT\n\nra\nns\n\n1\n0x\n\n79\n13\n\n01\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nT\n\nar\nge\n\ntP\nt\n\n0x\n19\n\n06\n00\n\n00\nN\n\non\ne\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nN\n\non\ne\n\n0\n\n# C\nom\n\nm\nan\n\ndi\nng\n\nto\nIn\n\ner\ntia\n\nl\nPo\n\nin\ntin\n\ng\nM\n\nod\ne\n\n# Se\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nIn\ner\n\ntia\nlP\n\nt\n0x\n\n79\n07\n\n00\n00\n\n1\n0x\n\n79\n05\n\n00\n00\n\n(c\non\n\ntin\nue\n\nd)\n\n44 K.-S. Klemich and J. Eickhoff\n\n\n\nT\nab\n\nle\n2.\n1\n\n(c\non\n\ntin\nue\n\nd) N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nIn\ner\n\ntia\nlP\n\nt_\nT\n\nar\nge\n\nt\n0x\n\n79\n03\n\n00\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nIn\n\ner\ntia\n\nlP\nt\n\n0x\n19\n\n07\n00\n\n00\nN\n\non\ne\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\n1 N\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nIn\ner\n\ntia\nlP\n\nt_\nT\n\nra\nns\n\n1\n0x\n\n79\n07\n\n01\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nIn\n\ner\ntia\n\nlP\nt\n\n0x\n19\n\n07\n00\n\n00\nN\n\non\ne\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nT\nC\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nN\non\n\ne\n0\n\nT\nC\nS\nSu\n\nbs\nys\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nN\non\n\ne\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\nys\nte\nm\n\n0x\n01\n\n00\n50\n\n00\nN\n\non\ne\n\n0\n\n#\n\n2 The FLP Platform Operability 45\n\n\n\n\u2022 Thus a mode transition to a new target mode\u2014by ground command, by fallback\nor triggered by FDIR\u2014starts with the first sequence table of the mode. All\nnecessary equipment/subsystem switching for such a sequence table happens\nsemi-parallel. If a subsystem/equipment already is in the prescribed mode, no\nswitching is necessary. If the CheckFlag is set, the status of all items is checked\nagainst the sequence table and if the check is successful, the next sequence table\nis processed. In a failure case the fallback is triggered. The target table defines\nthe final state to be reached during the mode transition.\n\n\u2022 All of these target/sequence tables for the satellite system level mode transitions\nare included in Table 2.1 at the end of this section.\n\n\u2022 As an exception, on system level (Table 2.1), the subsystems are defined as to be\ncommanded \u201csubunits\u201d. In the standard subsystem tables like Tables 4.5, 5.8, 6.\n12, 7.16 and 8.6 the subitems are the subsystem controller and the assemblies\nand, for those elements where no assembly is available, the devices. Where\nassemblies are available, only the assemblies are commanded. They command\ntheir controlled lower level devices into the right mode.\n\n\u2022 Each table has a \u201cWaitTime\u201d in seconds associated, which indicates how long\nthe OBSW shall wait after a sequence table has been commanded until the next\none is commanded. In addition, a check flag indicating whether or not the\nOBSW shall check the successful commanding of all objects in a sequence table\ncan be set. The WaitTime and Check Flag are ignored for target tables. The\n\u201cHardCoded\u201d flag indicates whether the sequence shall be stored in the OBC\nsafeguard memory to be available after reboot, or whether it s only a handcoded\ntest sequence which will not be used later.\n\n\u2022 Also, fallback modes may be given in Table 2.1, which correspond to the\nfallback transitions depicted in Fig. 2.1. Similarly fallbacks for ACS in the mode\ntransition table of ACS (Table 7.16) correspond to the fallbacks in Fig. 2.2.\nA fallback in fact indicates a transition to another mode, which means another\ntarget/sequence table arrangement. In Table 2.1 for example the fallback of the\nboot mode is 0x09000000 which is the None Mode. The lowest operational\nmode of system or a subsystem has no further fallback. The transition to a\nfallback mode is triggered when an object reports that it cannot keep its mode\nany longer, e.g. due to a vital device marked faulty, or when a mode transition\nfails, e.g. due to a device handler not reaching its commanded mode.\n\n\u2022 If the status of a subsystem or controller/assembly/device shall not be checked in\na certain mode (so that Ground can switch it to arbitrary settings during failure\ninspection without violating cyclical status checks by the OBSW) the item\nsimply is left out in the mode/sequence table. This feature is also used during\nplatform commissioning, e.g. to test higher ACS devices in Safe Mode without\nviolating any ACS subsystem mode target table mode definitions.\n\n46 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\n\u2022 If the CheckFlag is set, the status of all items is checked against the sequence\ntable and if the check is successful, the next sequence table is processed. In a\nfailure case the fallback is triggered. The target table defines the final state to be\nreached during the mode transition.\n\n\u2022 A transition sequence then can be defined by means of Srv. (202,2) as for\nexample provided in Table 2.1 further below for the satellite system level or\nTable 6.14 for the power subsystem.\n\nIt is important to note that in this processing scheme it may not be a concern\nfrom which mode the system switches to a new table. E.g. the sequence for the\ntransition to Safe Mode should be designed in a way, that it is of no concern\nwhether the system enters Safe Mode from a higher operational mode by FDIR\ndetected failure, by ground command or by an automatic boot up transition during\nLEOP.\n\nHowever, mode transitions may also be designed in such a way that they can\nonly be used in one \u201cdirection\u201d, i.e. from higher to lower or vice versa. This\nbecomes necessary when devices like GPS and STR are activated, which need a\nlonger time to get a first measurement. A wrong usage of such transitions is avoided\nby the mission planning system in which the system mode is tracked and the\nrespective Flight Procedures are provided (see Chaps. 14 and 15).\n\nFor such system mode transitions a large number of transitions on subsystem,\nassembly, controller and device level is performed (also in nominal cases) for which\nthe OBSW generates corresponding Event TM. By this means ground can easily\ntrack all the transitions occurring on board.\n\nNote that the TTC subsystem is left out of all system mode target tables in\nTable 2.1. This is because the system is planned to be operated in such a way that\nsystem and TTC subsystem modes are commanded separately. This avoids dupli-\ncate system mode definitions for Safe, Idle, Coarse Nadir Pointing and other modes,\nwhich can be used both with and without ground station contact. Leaving the TTC\nsubsystem out of the target table allows commanding it independently from the\nsystem mode.\n\n2.1.13 Spacecraft Equipment Operation Versus Modes\n\nTable 2.2 (part 1\u20133) contains a detailed illustration of the diverse satellite subsys-\ntems and devices being off or in their diverse operational modes related to the\nspacecraft modes.\n\n2 The FLP Platform Operability 47\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\n\n\nT\nab\n\nle\n2.\n2\n\nFL\nP\nsy\nst\nem\n\nm\nod\n\nes\n\nSy\nst\n\nem\nO\n\nbj\nec\n\nt\nID\n\nN\non\n\ne\n0x\n\n79\n00\n\n00\n00\n\nB\noo\n\nt\n0x\n\n79\n01\n\n00\n00\n\nSa\nfe\n\n0x\n79\n\n03\n00\n\n00\n\n(h\nex\n\n)\nM\n\nod\ne\n\n#\nSu\n\nbm\nod\n\ne\n#\n\nM\nod\n\ne\n#\n\nSu\nbm\n\nod\ne\n\n#\nM\n\nod\ne\n\n#\nSu\n\nbm\nod\n\ne\n#\n\nF\nD\n\nIR\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n46\n\n00\n00\n\nO\nff\n\n0\nO\n\nff\n\nA\nC\n\nS\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nO\n\nff\n0x\n\n19\n00\n\n00\n00\n\nO\nff\n\n0x\n19\n\n00\n00\n\n00\n\nA\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n41\n\n00\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\nSa\n\nfe\n2\n\nM\nG\n\nT\nA\n\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\nM\nul\n\nti\n1\n\nM\nG\n\nM\nA\n\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n\n.\n0x\n\n41\n00\n\n01\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nST\nR\n\nA\nss\n\n.\n0x\n\n41\n00\n\n08\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nF\nO\n\nG\nA\n\nss\n.\n\n0x\n41\n\n00\n04\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\n\nG\nP\n\nS\nA\n\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\n\nC\nD\n\nH\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n06\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n29\n00\n\n00\n00\n\nI/\nO\n\n-B\noa\n\nrd\nA\n\nss\n.\n\n0x\n41\n\n01\n00\n\n00\n1\n\nSi\nng\n\nle\n0\n\nO\nn\n\n1\nSi\n\nng\nle\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nO\n\nff\n0x\n\n49\n00\n\n00\n00\n\nO\nff\n\n0x\n49\n\n00\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nP\now\n\ner\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n50\n\n00\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nP\nC\n\nD\nU\n\n0x\n44\n\n00\n32\n\n00\nId\n\nle\n0\n\n2\nId\n\nle\n0\n\nN\nor\n\nm\nal\n\n2\nId\n\nle\n0\n\nT\nT\n\nC\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nO\n\nff\n0x\n\n69\n00\n\n00\n00\n\nO\nff\n\n0x\n69\n\n00\n00\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nC\nom\n\nm\nun\n\nic\n.\n\nC\non\n\ntr\nol\n\nle\nr\n\n0x\n43\n\n52\n00\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nN\n\nor\nm\n\nal\n2\n\nSt\nan\n\ndb\ny\n\n1\n\nR\nx\n\nA\nss\n\nem\nbl\n\ny\n0x\n\n41\n00\n\n06\n00\n\n1\nD\n\nef\nau\n\nlt\n0\n\n1\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nT\nx\n\nA\nss\n\nem\nbl\n\ny\n0x\n\n41\n00\n\n07\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nC\nC\n\nSD\nS-\n\nB\noa\n\nrd\nA\n\nss\n.\n\n0x\n41\n\n10\n00\n\n00\n1\n\nPa\nss\n\niv\ne\n\n0\n1\n\nPa\nss\n\niv\ne\n\n0\nO\n\nn\n1\n\nA\nct\n\niv\ne\n\n1\n\nT\nC\n\nS\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nO\n\nff\n0x\n\n59\n00\n\n00\n00\n\nO\nff\n\n0x\n59\n\n00\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nT\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n54\n\n00\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nN\nor\n\nm\nal\n\n2\nA\n\nut\no\n\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\n\nys\nte\n\nm\n0x\n\n01\n00\n\n50\n00\n\nO\nff\n\n0x\n39\n\n00\n00\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nO\nff\n\n0x\n39\n\n00\n00\n\n00\n\nP\nay\n\nlo\nad\n\nC\non\n\ntr\nol\n\nle\nr\n\n0x\n43\n\n70\n00\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\n\nP\nL\n\n1\n0x\n\n44\n50\n\n10\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nP\nL\n\n2\n0x\n\n44\n50\n\n0F\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nP\nL\n\n3\n0x\n\n44\n50\n\n0B\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nP\nL\n\n4\n0x\n\n44\n50\n\n0E\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nD\nD\n\nS\nA\n\nss\n.\n\n0x\n41\n\n01\n02\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\n\nP\nL\n\nO\nC\n\nA\nss\n\n.\n0x\n\n41\n01\n\n01\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nD\nef\n\nau\nlt\n\n0x\n29\n\n00\n00\n\n00\n\n1\nSi\n\nng\nle\n\n0\nO\n\nn\n\nN\nor\n\nm\nal\n\n2\n\nO\nn\n\nO\nn\n\nD\nef\n\nau\nlt\n\n0x\n29\n\n00\n00\n\n00\n\nO\nn\n\nO\nn\n\nO\nn\n\n0\nO\n\nff\n0\n\nD\nef\n\nau\nlt\n\n0\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\n\nSa\nfe\n\n0x\n19\n\n02\n00\n\n00\n\n0\nN\n\nor\nm\n\nal\n2\n\n0\nN\n\nor\nm\n\nal\n2\n\n0\nN\n\nor\nm\n\nal\n2\n\n(c\non\n\ntin\nue\n\nd)\n\nN\nor\n\nm\nal\n\n \n\n48 K.-S. Klemich and J. Eickhoff\n\n\n\nSy\nst\n\nem\nO\n\nbj\nec\n\nt \nID\n\nC\noa\n\nrs\neN\n\nad\nir\n\n0x\n79\n\n04\n00\n\n00\nId\n\nle\n0x\n\n79\n05\n\n00\n00\n\nT\nar\n\nge\ntP\n\nt_\nG\n\nS\n0x\n\n79\n06\n\n00\n00\n\n(h\nex\n\n)\nM\n\nod\ne\n\n#\nSu\n\nbm\nod\n\ne\n#\n\nM\nod\n\ne\n#\n\nSu\nbm\n\nod\ne\n\n#\nM\n\nod\ne\n\n#\nSu\n\nbm\nod\n\ne\n#\n\nF\nD\n\nIR\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n46\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nA\nC\n\nS\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nC\n\noa\nrs\n\neN\nad\n\nir\n0x\n\n19\n03\n\n00\n00\n\nId\nle\n\n0x\n19\n\n04\n00\n\n00\nT\n\nar\nge\n\ntP\nt\n\n0x\n19\n\n06\n00\n\n00\n\nA\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n41\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nC\n\noa\nrs\n\neN\nad\n\nir\n3\n\nN\nor\n\nm\nal\n\n2\nId\n\nle\n4\n\nN\nor\n\nm\nal\n\n2\nT\n\nar\nge\n\ntP\nt\n\n6\n\nM\nG\n\nT\nA\n\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\n\nor\nm\n\nal\n2\n\nSi\nng\n\nle\n0\n\nN\nor\n\nm\nal\n\n2\nSi\n\nng\nle\n\n0\nN\n\nor\nm\n\nal\n2\n\nSi\nng\n\nle\n0\n\nM\nG\n\nM\nA\n\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\n\nor\nm\n\nal\n2\n\nFa\nst\n\n2\nN\n\nor\nm\n\nal\n2\n\nFa\nst\n\n2\nN\n\nor\nm\n\nal\n2\n\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n\n.\n0x\n\n41\n00\n\n01\n00\n\n0\nO\n\nff\n0\n\nN\nor\n\nm\nal\n\n2\nT\n\nor\nqu\n\ne\n1\n\nN\nor\n\nm\nal\n\n2\nT\n\nor\nqu\n\ne\n1\n\nST\nR\n\nA\nss\n\n.\n0x\n\n41\n00\n\n08\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n7\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n7\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n7\n\nF\nO\n\nG\nA\n\nss\n.\n\n0x\n41\n\n00\n04\n\n00\n0\n\nO\nff\n\n0\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\n\nG\nP\n\nS\nA\n\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nO\nn\n\n1\nSi\n\nng\nle\n\n0\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nC\nD\n\nH\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n06\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n29\n00\n\n00\n00\n\nD\nef\n\nau\nlt\n\n0x\n29\n\n00\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n29\n00\n\n00\n00\n\nI/\nO\n\n-B\noa\n\nrd\nA\n\nss\n.\n\n0x\n41\n\n01\n00\n\n00\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nO\nn\n\n1\nSi\n\nng\nle\n\n0\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nP\now\n\ner\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nD\nef\n\nau\nlt\n\n0x\n49\n\n01\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nP\now\n\ner\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n50\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nP\nC\n\nD\nU\n\n0x\n44\n\n00\n32\n\n00\nN\n\nor\nm\n\nal\n2\n\nId\nle\n\n0\nN\n\nor\nm\n\nal\n2\n\nId\nle\n\n0\nN\n\nor\nm\n\nal\n2\n\nId\nle\n\n0\n\nT\nT\n\nC\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nSt\nan\n\ndb\ny\n\n0x\n69\n\n02\n00\n\n00\nC\n\nom\nm\n\n0x\n69\n\n01\n00\n\n00\n\nC\nom\n\nm\nun\n\nic\n.\n\nC\non\n\ntr\nol\n\nle\nr\n\n0x\n43\n\n52\n00\n\n00\nN\n\nor\nm\n\nal\n2\n\nSt\nan\n\ndb\ny\n\n1\nN\n\nor\nm\n\nal\n2\n\nSt\nan\n\ndb\ny\n\n1\nN\n\nor\nm\n\nal\n2\n\nC\nom\n\nm\n2\n\nR\nx\n\nA\nss\n\nem\nbl\n\ny\n0x\n\n41\n00\n\n06\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nT\nx\n\nA\nss\n\nem\nbl\n\ny\n0x\n\n41\n00\n\n07\n00\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nn\n\n1\nD\n\nef\nau\n\nlt\n0\n\nC\nC\n\nSD\nS-\n\nB\noa\n\nrd\nA\n\nss\n.\n\n0x\n41\n\n10\n00\n\n00\nO\n\nn\n1\n\nA\nct\n\niv\ne\n\n1\nO\n\nn\n1\n\nA\nct\n\niv\ne\n\n1\nO\n\nn\n1\n\nA\nct\n\niv\ne\n\n1\n\nT\nC\n\nS\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nD\nef\n\nau\nlt\n\n0x\n59\n\n01\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nT\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n54\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nA\n\nut\no\n\n0\nN\n\nor\nm\n\nal\n2\n\nA\nut\n\no\n0\n\nN\nor\n\nm\nal\n\n2\nA\n\nut\no\n\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\n\nys\nte\n\nm\n0x\n\n01\n00\n\n50\n00\n\nO\nff\n\n0x\n39\n\n00\n00\n\n00\nO\n\nff\n0x\n\n39\n00\n\n00\n00\n\nO\nff\n\n0x\n39\n\n00\n00\n\n00\n\nP\nay\n\nlo\nad\n\nC\non\n\ntr\nol\n\nle\nr\n\n0x\n43\n\n70\n00\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\n\nP\nL\n\n1\n0x\n\n44\n50\n\n10\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nP\nL\n\n2\n0x\n\n44\n50\n\n0F\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nP\nL\n\n3\n0x\n\n44\n50\n\n0B\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nP\nL\n\n4\n0x\n\n44\n50\n\n0E\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nD\nD\n\nS\nA\n\nss\n.\n\n0x\n41\n\n01\n02\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\n\nP\nL\n\nO\nC\n\nA\nss\n\n.\n0x\n\n41\n01\n\n01\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\nO\nff\n\nO\nff\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n 2\n\n.2\n (\n\nco\nnt\n\nin\nue\n\nd)\n\n2 The FLP Platform Operability 49\n\n\n\nSy\nst\n\nem\nO\n\nbj\nec\n\nt\nID\n\nIn\ner\n\nti\nal\n\nP\nT\n\n0x\n79\n\n07\n00\n\n00\nN\n\nad\nir\n\nP\nt\n\n0x\n79\n\n0B\n00\n\n00\nT\n\nar\nge\n\ntP\nt\n\n0x\n79\n\n13\n00\n\n00\n\n(h\nex\n\n)\nM\n\nod\ne\n\n#\nSu\n\nbm\nod\n\ne\n#\n\nM\nod\n\ne\n#\n\nSu\nbm\n\nod\ne\n\n#\nM\n\nod\ne\n\n#\nSu\n\nbm\nod\n\ne\n#\n\nF\nD\n\nIR\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n46\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nA\nC\n\nS\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n02\n\n00\nIn\n\ner\ntia\n\nlP\nt\n\n0x\n19\n\n08\n00\n\n00\nN\n\nad\nir\n\nPt\n0x\n\n19\n05\n\n00\n00\n\nT\nar\n\nge\ntP\n\nt\n0x\n\n19\n06\n\n00\n00\n\nA\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n41\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nIn\n\ner\ntia\n\nlP\nt\n\n7\nN\n\nor\nm\n\nal\n2\n\nN\nad\n\nir\nPt\n\n5\nN\n\nor\nm\n\nal\n2\n\nT\nar\n\nge\ntP\n\nt\n6\n\nM\nG\n\nT\nA\n\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\n\nor\nm\n\nal\n2\n\nSi\nng\n\nle\n0\n\nN\nor\n\nm\nal\n\n2\nSi\n\nng\nle\n\n0\nN\n\nor\nm\n\nal\n2\n\nSi\nng\n\nle\n0\n\nM\nG\n\nM\nA\n\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\n\nor\nm\n\nal\n2\n\nFa\nst\n\n2\nN\n\nor\nm\n\nal\n2\n\nFa\nst\n\n2\nN\n\nor\nm\n\nal\n2\n\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n\n.\n0x\n\n41\n00\n\n01\n00\n\nN\nor\n\nm\nal\n\n2\nT\n\nor\nqu\n\ne\n1\n\nN\nor\n\nm\nal\n\n2\nT\n\nor\nqu\n\ne\n1\n\nN\nor\n\nm\nal\n\n2\nT\n\nor\nqu\n\ne\n1\n\nST\nR\n\nA\nss\n\n.\n0x\n\n41\n00\n\n08\n00\n\nN\nor\n\nm\nal\n\n2\nN\n\nE\nO\n\n71\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n7\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n7\n\nF\nO\n\nG\nA\n\nss\n.\n\n0x\n41\n\n00\n04\n\n00\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\n\nG\nP\n\nS\nA\n\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nO\nn\n\n1\nSi\n\nng\nle\n\n0\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nC\nD\n\nH\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n06\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n29\n00\n\n00\n00\n\nD\nef\n\nau\nlt\n\n0x\n29\n\n00\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n29\n00\n\n00\n00\n\nI/\nO\n\n-B\noa\n\nrd\nA\n\nss\n.\n\n0x\n41\n\n01\n00\n\n00\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nO\nn\n\n1\nSi\n\nng\nle\n\n0\nO\n\nn\n1\n\nSi\nng\n\nle\n0\n\nP\now\n\ner\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n03\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nD\nef\n\nau\nlt\n\n0x\n49\n\n01\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n49\n01\n\n00\n00\n\nP\now\n\ner\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n50\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nP\nC\n\nD\nU\n\n0x\n44\n\n00\n32\n\n00\nN\n\nor\nm\n\nal\n2\n\nId\nle\n\n0\nN\n\nor\nm\n\nal\n2\n\nId\nle\n\n0\nN\n\nor\nm\n\nal\n2\n\nId\nle\n\n0\n\nT\nT\n\nC\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n04\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nSt\nan\n\ndb\ny\n\n0x\n69\n\n02\n00\n\n00\nSt\n\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\nC\nom\n\nm\nun\n\nic\n.\n\nC\non\n\ntr\nol\n\nle\nr\n\n0x\n43\n\n52\n00\n\n00\nN\n\nor\nm\n\nal\n2\n\nSt\nan\n\ndb\ny\n\n1\nN\n\nor\nm\n\nal\n2\n\nSt\nan\n\ndb\ny\n\n1\nN\n\nor\nm\n\nal\n2\n\nSt\nan\n\ndb\ny\n\n1\n\nR\nx\n\nA\nss\n\nem\nbl\n\ny\n0x\n\n41\n00\n\n06\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nT\nx\n\nA\nss\n\nem\nbl\n\ny\n0x\n\n41\n00\n\n07\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nC\nC\n\nSD\nS-\n\nB\noa\n\nrd\nA\n\nss\n.\n\n0x\n41\n\n10\n00\n\n00\nO\n\nn\n1\n\nA\nct\n\niv\ne\n\n1\nO\n\nn\n1\n\nA\nct\n\niv\ne\n\n1\nO\n\nn\n1\n\nA\nct\n\niv\ne\n\n1\n\nT\nC\n\nS\nSu\n\nbs\nys\n\nte\nm\n\n0x\n01\n\n00\n05\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nD\nef\n\nau\nlt\n\n0x\n59\n\n01\n00\n\n00\nD\n\nef\nau\n\nlt\n0x\n\n59\n01\n\n00\n00\n\nT\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n0x\n\n43\n54\n\n00\n00\n\nN\nor\n\nm\nal\n\n2\nA\n\nut\no\n\n0\nN\n\nor\nm\n\nal\n2\n\nA\nut\n\no\n0\n\nN\nor\n\nm\nal\n\n2\nA\n\nut\no\n\n0\n\nP\nay\n\nlo\nad\n\nSu\nbs\n\nys\nte\n\nm\n0x\n\n01\n00\n\n50\n00\n\nIn\ner\n\ntia\nlP\n\nt\n0x\n\n39\n09\n\n00\n00\n\nN\nad\n\nir\nPt\n\n0x\n39\n\n01\n00\n\n00\nT\n\nar\nge\n\ntP\nt\n\n0x\n39\n\n07\n00\n\n00\n\nP\nay\n\nlo\nad\n\nC\non\n\ntr\nol\n\nle\nr\n\n0x\n43\n\n70\n00\n\n00\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\nN\n\nor\nm\n\nal\n2\n\nD\nef\n\nau\nlt\n\n0\n\nP\nL\n\n1\n0x\n\n44\n50\n\n10\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nO\nff\n\n0\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nP\nL\n\n2\n0x\n\n44\n50\n\n0F\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nO\nff\n\n0\nD\n\nef\nau\n\nlt\n0\n\nP\nL\n\n3\n0x\n\n44\n50\n\n0B\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nO\nff\n\n0\nD\n\nef\nau\n\nlt\n0\n\nP\nL\n\n4\n0x\n\n44\n50\n\n0E\n00\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nO\nff\n\n0\nD\n\nef\nau\n\nlt\n0\n\nO\nff\n\n0\nD\n\nef\nau\n\nlt\n0\n\nD\nD\n\nS\nA\n\nss\n.\n\n0x\n41\n\n01\n02\n\n00\nO\n\nff\n0\n\nO\nff\n\n0\nO\n\nff\n0\n\nD\nef\n\nau\nlt\n\n0\nO\n\nff\n0\n\nD\nef\n\nau\nlt\n\n0\n\nP\nL\n\nO\nC\n\nA\nss\n\n.\n0x\n\n41\n01\n\n01\n00\n\nO\nff\n\n0\nO\n\nff\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nN\nor\n\nm\nal\n\n2\nD\n\nef\nau\n\nlt\n0\n\nT\nab\n\nle\n 2\n\n.2\n (\n\nco\nnt\n\nin\nue\n\nd)\n\n50 K.-S. Klemich and J. Eickhoff\n\n\n\n2.2 Spacecraft Telecommand and Telemetry Structure\n\nFigures 2.6 and 2.7 illustrate the structure of the FLP telecommands and telemetry\nrespectively from packet layer to transmission layer according to the CCSDS\nstandards [15\u201327]. The exact Virtual Channel settings, Packet length settings, CRC\nusage etc. can be taken from these figures.\n\n2.2.1 CCSDS Protocol Addressing\n\nAs defined in the CCSDS standards [18, 27], several different IDs are defined to\nidentify the channel and the origin of a TM packet or the destination of a TC packet\n(please also refer to the Figs. 2.6 and 2.7). The highest level of the channels is the\nphysical channel, identified by its name. Physical channels are typically used for\ndifferent ground/space links, i.e. for missions with multiple spacecraft and/or\nmultiple ground stations.\n\nFor the FLP mission \u201cFlying Laptop\u201d there is only one spacecraft and only one\nground station involved at a time (either Weilheim or Stuttgart) so there is no need\nto assign a specific ID to the Physical Channel.\n\nThe physical channel consists of several Master Channels identified by the\nMaster Channel ID (MCID). The MCID consists of the Transfer Frame Version\nNumber (TFVN, see Sect. 2.5) and the Spacecraft ID (SCID, see Sect. 2.2.2), both\nof which are given in the Transfer Frame Header. As for the FLP platform the\nTFVN is always \u201c00\u201d (in binary).\n\nA Master Channel consists of several Virtual Channels, identified by the Global\nVirtual Channel ID (GVCID). The GVCID consists of the MCID and the Virtual\nChannel ID (VCID). As mentioned before, the MCID is fix for the \u201cFlying Laptop\u201d\nmission. Different VCID sets exist for uplink and downlink:\n\nUplink\nFor the uplink the VCID determines whether the command is a High Priority\nCommand (HPC) or not and to which OBC CCSDS-Board the command is directed\n(nominal or redundant). The FLP platform uplink VCID definitions are provided in\nTable 2.3.\n\nFor the uplink only\u2014according to the CCSDS standard\u2014a Virtual Channel can\nconsist of several Multiplexer Access Point (MAP) channels, identified by a Global\nMultiplexer Access Point ID (GMAPID) according to [27]. The GMAPID consists\nof the GVCID and the MAP ID.\n\nFor the FLP platform, there are no MAPs defined, so the MAPID is fixed to 0 for\nall commands. The TC routing is performed through the APID mechanism provided\nby the Packet Utilization Standard (PUS)\u2014see Sect. 2.4. The APID definitions are\nprovided in Sect. 2.3.\n\n2 The FLP Platform Operability 51\n\n\n\nA\ng\n\ng\nre\n\ng\nat\n\nio\nn\n\n =\n O\n\nF\nF\n\n: n\n =\n\n 1\n / \n\nsi\nng\n\nle\n   \n\n P\nac\n\nke\nt  \n\n in\n S\n\neg\nm\n\nen\nt D\n\nat\na \n\nF\nie\n\nld\nA\n\ng\ng\n\nre\ng\n\nat\nio\n\nn\n =\n\n O\nN\n\n  :\n n\n\n >\n 1\n\n / \nm\n\nul\ntip\n\nle\n P\n\nac\nke\n\nts\n in\n\n S\neg\n\nm\nen\n\nt D\nat\n\na \nF\n\nie\nld\n\nS\neg\n\nm\nen\n\nt D\nat\n\na \nF\n\nie\nld\n\n fi\nlle\n\nd \nup\n\n b\ny\n\nin\nte\n\ngr\nal\n\n n\num\n\nbe\nr \n\nof\n p\n\nac\nke\n\nts\n\nT\nC\n\n S\neg\n\nm\nen\n\nt\nS\n\neg\nm\n\nen\nt H\n\nea\nde\n\nr\n\n1 \nby\n\nte\n\nS\neq\n\nue\nnc\n\ne \nF\n\nla\ngs\n\nM\nA\n\nP\n ID\n\n2\n6\n\nva\nria\n\nbl\ne \n\nle\nng\n\nth\n -\n\n 2\n48\n\n b\nyt\n\ne \nm\n\nax\n.\n\nS\neg\n\nm\nen\n\nt D\nat\n\na \nF\n\nie\nld\n\nP\nac\n\nke\nt #\n\n1\nP\n\nac\nke\n\nt #\nn\n\nV\nal\n\nid\n t\n\nai\nl s\n\neq\nu\n\nen\nce\n\ns \nu\n\nse\nd\n\n:\n55\n\n  5\n5 \n\n 5\n5 \n\n55\n  5\n\n5 \n55\n\n  5\n5 \n\n55\n (\n\nhe\nx)\n\nC\n5 \n\nC\n5 \n\nC\n5 \n\nC\n5 \n\nC\n5 \n\nC\n5 \n\nC\n5 \n\n79\n (\n\nhe\nx)\n\nC\nL\n\nT\nU\n\n -\n C\n\no\nm\n\nm\nan\n\nd\n L\n\nin\nk \n\nT\nra\n\nn\nsm\n\nis\nsi\n\no\nn\n\n U\nn\n\nit\nS\n\nta\nrt\n\nS\neq\n\nue\nnc\n\ne\nE\n\nB\n90\n\n (\nhe\n\nx)\n\n1s\nt\n\nC\nod\n\neb\nlo\n\nck\n2n\n\nd\nC\n\nod\neb\n\nlo\nck\n\nn-\nth\n\nC\nod\n\neb\nlo\n\nck\nT\n\nai\nl\n\nS\neq\n\nue\nnc\n\ne\n\n16\n b\n\nit\n8 \n\nby\nte\n\n8 \nby\n\nte\n8 \n\nby\nte\n\n8 \nby\n\nte\n\nT\nC\n\n S\no\n\nu\nrc\n\ne \nP\n\nac\nke\n\nt\n\nP\nac\n\nke\nt H\n\nea\nde\n\nr\n\nP\nac\n\nke\nt D\n\nat\na \n\nF\nie\n\nld\nP\n\nac\nke\n\nt\nE\n\nrr\nor\n\n C\non\n\ntr\nol\n\n \n(C\n\nR\nC\n\n)\n6 \n\nby\nte\n\nva\nria\n\nbl\ne \n\nle\nng\n\nth\n -\n\n 2\n36\n\n b\nyt\n\ne \nm\n\nax\n.\n\n2 \nby\n\nte\n\nA\npp\n\nlic\nat\n\nio\nn \n\nD\nat\n\na\n>\n\nC\no\n\nm\nm\n\nan\nd\n\n D\nat\n\na \n<\n\nD\nat\n\na \nF\n\nie\nld\n\nH\nea\n\nde\nr\n\n4 \nby\n\nte\n\nP\nac\n\nke\nt:\n\n v\nar\n\nia\nb\n\nle\n -\n\n 2\n48\n\n b\nyt\n\ne \nm\n\nax\n.\n\nT\nC\n\n S\neg\n\nm\nen\n\nt:\n   \n\n   \n   \n\n   \n  v\n\nar\nia\n\nb\nle\n\n -\n 2\n\n49\n b\n\nyt\ne \n\nm\nax\n\n.\n\nC\no\n\nm\nm\n\nan\nd\n\n:\n   \n\n   \n   \n\n   \n  v\n\nar\nia\n\nb\nle\n\n -\n 2\n\n36\n b\n\nyt\ne \n\nm\nax\n\n.\n\nT\nC\n\n F\nra\n\nm\ne:\n\n   \n   \n\n   \n   \n\nva\nri\n\nab\nle\n\n -\n 2\n\n56\n b\n\nyt\ne \n\nm\nax\n\n.\n\nC\nL\n\nT\nU\n\n: \nva\n\nri\nab\n\nle\n -\n\n 3\n20\n\n b\nyt\n\ne \nm\n\nax\n.\n\nC\no\n\nd\neb\n\nlo\nck\n\ns:\n v\n\nar\nia\n\nb\nle\n\n -\n 3\n\n7 \nm\n\nax\n.\n\nT\nC\n\n T\nra\n\nn\nsf\n\ner\n F\n\nra\nm\n\ne\n\nF\nra\n\nm\ne \n\nH\nea\n\nde\nr\n\nT\nC\n\n F\nra\n\nm\ne \n\nD\nat\n\na \nU\n\nni\nt\n\n=\n 1\n\n T\nC\n\n S\neg\n\nm\nen\n\nt\n\nT\nC\n\n F\nra\n\nm\ne \n\nE\nrr\n\nor\n C\n\non\ntr\n\nol\n \n\n(C\nR\n\nC\n)\n\n5 \nby\n\nte\nva\n\nria\nbl\n\ne \nle\n\nng\nth\n\n -\n 2\n\n49\n b\n\nyt\ne \n\nm\nax\n\n.\n2 \n\nby\nte\n\nS\neq\n\nu\nen\n\nce\n F\n\nla\ng\n\ns \n= \n\n11\n : \n\nno\n S\n\neg\nm\n\nen\nta\n\ntio\nn\n\nP\nac\n\nke\nt \n\nH\nea\n\nd\ner\n\nV\ner\n\nsi\non\n\n(=\n00\n\n0)\n\n2 \nby\n\nte\n\n3\n\nT\nyp\n\ne\n(=\n\n1) 1\n\nD\nF\n\nH\nF\n\nla\ng\n\n1\n\nP\nID 7\n\nP\nkt\n\n C\nA\n\nT\n\n4\n\nS\neq\n\nue\nnc\n\ne\nF\n\nla\ngs\n\n(=\n11\n\n)\n\n2\n\nS\neq\n\nue\nnc\n\ne\nC\n\nou\nnt\n\n14\n\nP\nac\n\nke\nt\n\nD\nat\n\na \nF\n\nie\nld\n\nLe\nng\n\nth\n\n16\n\n2 \nby\n\nte\n2 \n\nby\nte\n\nA\nP\n\nID\n\nP\nac\n\nke\nt I\n\nD\nP\n\nac\nke\n\nt S\neq\n\nue\nnc\n\ne \nC\n\non\ntr\n\nol\nP\n\nkt\n L\n\nen\ngt\n\nh\nD\n\nat\na \n\nF\nie\n\nld\n H\n\nea\nd\n\ner\nS\n\nec\n.\n\nH\nea\n\nd.\nF\n\nla\ng\n\n(=\n0)\n\n1 \nby\n\nte\n1\n\nC\nR\n\nC\nF\n\nla\ngs\n\n0=\n n\n\no \nC\n\nR\nC\n\n1=\n   \n\n   \nC\n\nR\nC\n\n3\n4\n\nS\ner\n\nvi\nce\n\nT\nyp\n\ne\n\n8\n\nS\ner\n\nvi\nce\n\nS\nub\n\n-T\nyp\n\ne\n\n8\n8\n\n2 \nby\n\nte\n1 \n\nby\nte\n\nT\nC\n\n A\nck\n\n F\nla\n\ng\ns\n\n00\n01\n\n =\n  a\n\ncc\nep\n\nte\nd\n\n00\n10\n\n =\n s\n\nta\nrt\n\n e\nxe\n\nc\n01\n\n00\n =\n\n  p\nro\n\ngr\nes\n\ns\n10\n\n00\n =\n\n  e\nxe\n\ncu\nte\n\nd\n\nS\nou\n\nrc\ne\n\nID\n\nF\nra\n\nm\ne \n\nH\nea\n\nd\ner\n\nV\ner\n\nsi\non\n\n(=\n00\n\n)\n\n2 \nby\n\nte\n2\n\nB\nyp\n\nas\ns\n\nF\nla\n\ng\n\n1\n\nC\non\n\ntr\nol\n\nC\nm\n\nd\nF\n\nla\ng\n\n1\n\nS\npa\n\nre\n(=\n\n00\n)\n\n2\n\nS\npa\n\nce\ncr\n\naf\nt\n\nID 10\n\nV\nirt\n\nua\nl\n\nC\nha\n\nnn\nel\n\nID 6\n\nF\nra\n\nm\ne\n\nLe\nng\n\nth\n\n10\n\nF\nra\n\nm\ne\n\nS\neq\n\nue\nnc\n\ne\nN\n\num\nbe\n\nr\n8\n\n2 \nby\n\nte\n1 \n\nby\nte\n\nC\no\n\nd\neb\n\nlo\nck\n\n\u2013 \no\n\nn\ne \n\no\nu\n\nt \no\n\nf \nn\n\nT\nC\n\n D\nat\n\na\n7 \n\nB\nyt\n\nes\nE\n\nrr\nor\n\n C\non\n\ntr\nol\n\n7 \nP\n\nar\nity\n\n B\nits\n\n | \n1 \n\nF\nill\n\ner\n B\n\nit\n\n56\n b\n\nit\n8 \n\nbi\nt\n\nF\nra\n\nm\ne \n\nH\nea\n\nd\ner\n\n T\nC\n\n V\nC\n\n:\nV\n\nC\n1 \n\n= \nS\n\nW\n T\n\nC\n O\n\nB\nC\n\n C\no\n\nre\n N\n\nV\nC\n\n2 \n= \n\nH\nP\n\nC\n1 \n\nC\nC\n\nS\nD\n\nS\n p\n\nro\nce\n\nss\no\n\nr \nN\n\nV\nC\n\n3 \n= \n\nS\nW\n\n T\nC\n\n O\nB\n\nC\n C\n\no\nre\n\n R\nV\n\nC\n4 \n\n= \nH\n\nP\nC\n\n1 \nC\n\nC\nS\n\nD\nS\n\n p\nro\n\nce\nss\n\no\nr \n\nR\n\nF\nig\n.2\n\n.6\nT\nel\nec\nom\n\nm\nan\nd\npa\nck\net\n\nde\nfi\nni\ntio\n\nn.\n\u00a9\n\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt,\nT\nem\n\npl\nat\ne\n\u00a9\n\nA\nir\nbu\n\ns\nD\nS\n\n52 K.-S. Klemich and J. Eickhoff\n\n\n\nP\nac\n\nke\nt:\n\n v\nar\n\nia\nb\n\nle\n -\n\n 2\n04\n\n8 \nb\n\nyt\ne \n\nm\nax\n\n.\n\nT\nel\n\nem\net\n\nry\n:\n\n   \n   \n\n   \n   \n\n  v\nar\n\nia\nb\n\nle\n -\n\n 2\n02\n\n8 \nb\n\nyt\ne \n\nm\nax\n\n.\n\nT\nM\n\n F\nra\n\nm\ne:\n\n 1\n11\n\n5 \nb\n\nyt\ne \n\n= \n89\n\n20\n b\n\nit\ns\n\nC\nA\n\nD\nU\n\n: \n12\n\n79\n b\n\nyt\ne\n\nT\nM\n\n S\no\n\nu\nrc\n\ne \nP\n\nac\nke\n\nt\n\nP\nac\n\nke\nt H\n\nea\nde\n\nr\n\nP\nac\n\nke\nt D\n\nat\na \n\nF\nie\n\nld\nP\n\nac\nke\n\nt\nE\n\nrr\nor\n\n C\non\n\ntr\nol\n\n \n(C\n\nR\nC\n\n)\n6 \n\nby\nte\n\nva\nria\n\nbl\ne \n\nle\nng\n\nth\n -\n\n 2\n02\n\n8 \nby\n\nte\n m\n\nax\n.\n\n2 \nby\n\nte\n\nS\nou\n\nrc\ne \n\nD\nat\n\na\n>\n\nT\nel\n\nem\net\n\nry\n D\n\nat\na \n\n<\nD\n\nat\na \n\nF\nie\n\nld\nH\n\nea\nde\n\nr\n\n12\n b\n\nyt\ne\n\nT\nM\n\n T\nra\n\nn\nsf\n\ner\n F\n\nra\nm\n\ne\n\nF\nra\n\nm\ne \n\nH\nea\n\nde\nr\n\nF\nra\n\nm\ne \n\nD\nat\n\na \nF\n\nie\nld\n\nF\nra\n\nm\ne \n\nT\nra\n\nile\nr\n\n6 \nby\n\nte\n11\n\n05\n b\n\nyt\ne\n\n4 \nby\n\nte\n\nT\nra\n\nn\nsf\n\ner\n F\n\nra\nm\n\ne \nT\n\nra\nile\n\nr\nC\n\nL\nC\n\nW\n\n4\nby\n\nte\n\nF\nra\n\nm\ne \n\nE\nrr\n\nor\n \n\nC\non\n\ntr\nol\n\n (\nC\n\nR\nC\n\n)\nno\n\nt u\nse\n\nd.\nC\n\nov\ner\n\ned\n b\n\ny \nR\n\nS\n\n0\nby\n\nte\n\nC\ntr\n\nl\nW\n\nor\nd\n\nT\nyp\n\ne\n(=\n\n0) 1\n\nC\nLC\n\nW\nV\n\ner\nsi\n\non\n\n(=\n00\n\n)\n\n2\n\nS\nta\n\ntu\ns\n\nF\nie\n\nld\ns\n\n3\n\nC\nO\n\nP\nin\n\nE\nffe\n\nct\n(=\n\n01\n)\n\n2\n\nV\nirt\n\nua\nl\n\nC\nha\n\nnn\nel\n\nID 6\n\nS\npa\n\nre\n\n2\n\nR\nep\n\nor\nt\n\nV\nal\n\nue 8\n\nS\npa\n\nre\n\n1\n\nF\nar\n\nm\nB\n\nC\nou\n\nnt\n\n2\n\nN\no\n\nR\nF\n\nA\nva\n\nil\n\n1\n\nF\nla\n\ng\ns\n\nN\no\n\nB\nit\n\nLo\nck 1\n\nLo\nck\n\n-\nO\n\nut 1\n\nW\nA\n\nIT\n\n1\n\nR\ne-\n\ntr\nan\n\ns-\nm\n\nit 1\n\nP\nac\n\nke\nt \n\nH\nea\n\nd\ner\n\nV\ner\n\nsi\non\n\n(=\n00\n\n0)\n\n2 \nby\n\nte\n\n3\n\nT\nyp\n\ne\n(=\n\n0) 1\n\nD\nF\n\nH\nF\n\nla\ng\n\n1\n\nP\nID 7\n\nP\nkt\n\n C\nA\n\nT\n\n4\n\nS\neq\n\nue\nnc\n\ne\nF\n\nla\ngs\n\n(=\n11\n\n)\n\n2\n\nS\neq\n\nue\nnc\n\ne\nC\n\nou\nnt\n\n14\n\nP\nac\n\nke\nt\n\nD\nat\n\na \nF\n\nie\nld\n\nLe\nng\n\nth\n\n16\n\n2 \nby\n\nte\n2 \n\nby\nte\n\nA\nP\n\nID\n\nP\nac\n\nke\nt I\n\nD\nP\n\nac\nke\n\nt S\neq\n\nue\nnc\n\ne \nC\n\non\ntr\n\nol\nP\n\nkt\n L\n\nen\ngt\n\nh\nD\n\nat\na \n\nF\nie\n\nld\n H\n\nea\nd\n\ner\nF\n\nill\ner\n\n(=\n0)\n\n1\nby\n\nte\n1\n\nE\nrr\n\nor\nC\n\non\ntr\n\nol\nF\n\nla\ngs 3\n\n4\n\nS\ner\n\nvi\nce\n\nT\nyp\n\ne\n\n8\n\nS\ner\n\nvi\nce\n\nS\nub\n\n-T\nyp\n\ne\n\n8\n4\n\n2\nby\n\nte\n1\n\nby\nte\n\nF\nill\n\ner\n\n(=\n0)\n\nS\nyn\n\nc \nS\n\nta\ntu\n\ns\n\nP\nP\n\nS\nS\n\nou\nrc\n\ne\n\nS\nyn\n\nc\nQ\n\nua\nl.\n\nIn\nde\n\nx\n\n4\n16\n\n6\nby\n\nte\n\nT\nim\n\ne\n-\n\nD\nay\n\n S\neg\n\nm\nen\n\nte\nd \n\n(C\nD\n\nS\n)\n\nD\nay\n\n o\nf\n\nE\npo\n\nch\n:\n\n0\n:=\n\n1.\n1.\n\n20\n00\n\nM\nill\n\nis\nec\n\n.\nof\n\n D\nay\n\n32\n\nF\nra\n\nm\ne \n\nH\nea\n\nd\ner\n\nV\ner\n\nsi\non\n\n(=\n00\n\n)\n\n2 \nby\n\nte\n2\n\nD\nF\n\nH\nF\n\nla\ng\n\n(=\n0) 1\n\nV\nirt\n\nua\nl\n\nC\nha\n\nnn\nel\n\nId 3\n\nO\np\n\nC\ntr\n\nl\nF\n\nla\ng\n\n1\n\nS\npa\n\nce\ncr\n\naf\nt\n\nID 10\n\nM\nas\n\nte\nr\n\nC\nha\n\nnn\nel\n\nF\nra\n\nm\ne\n\nC\nou\n\nnt\n\n1 \nby\n\nte\n\nF\nra\n\nm\ne \n\nId\nen\n\ntif\nic\n\nat\nio\n\nn\nV\n\nirt\nua\n\nl\nC\n\nha\nnn\n\nel\nF\n\nra\nm\n\ne\nC\n\nou\nnt\n\n1 \nby\n\nte\n\nF\nra\n\nm\ne \n\nD\nat\n\na \nF\n\nie\nld\n\n S\nta\n\ntu\ns\n\n2 \nby\n\nte\n\nS\nyn\n\nc\nF\n\nla\ng\n\n(=\n0) 1\n\nP\nkt\n\nO\nrd\n\ner\nF\n\nla\ng\n\n(=\n0) 1\n\nS\neg\n\nm\nen\n\nt\nLe\n\nng\nth\n\nID\n(=\n\n11\n)\n\n2\n\nF\nirs\n\nt\nH\n\nea\nde\n\nr\nP\n\noi\nnt\n\ner\n\n11\n\nLe\nge\n\nnd\n: (\n\n=\n<\n\nva\nlu\n\ne>\n) \n\n::=\n=\n\n fi\nx \n\nnu\nm\n\ner\nic\n\nal\n v\n\nal\nue\n\n   \n   \n\n   \n   \n\n  n\nex\n\nt l\nin\n\ne \nfr\n\nom\n b\n\not\nto\n\nm\n: n\n\num\nbe\n\nr \nof\n\n b\nits\n\n in\n \n\nfie\nld\n\n   \n   \n\n   \n   \n\n  b\not\n\nto\nm\n\n li\nne\n\n: n\num\n\nbe\nr \n\nof\n b\n\nyt\nes\n\n in\n fi\n\nel\nd\n\nC\nA\n\nD\nU\n\nA\ntta\n\nch\ned\n\nS\nyn\n\nc.\n M\n\nar\nke\n\nr\n1A\n\nC\nF\n\nF\nC\n\n1D\nD\n\nat\na \n\nS\npa\n\nce\n\n32\n b\n\nits\n89\n\n20\n b\n\nits\n\n4 \nby\n\nte\n\nR\nee\n\nd-\nS\n\nol\nom\n\non\n C\n\nod\neb\n\nlo\nck\n\nC\nhe\n\nck\n S\n\nym\nbo\n\nls\n\n12\n80\n\n b\nits\n\n12\n75\n\n b\nyt\n\ne \n(1\n\n02\n00\n\n b\nits\n\n)\n\n16\n\n8\nby\n\nte\n\nT\nim\n\ne\n-\n\nD\nay\n\n S\neg\n\nm\nen\n\nte\nd \n\n(C\nD\n\nS\n)\n\nD\nay\n\n o\nf\n\nE\npo\n\nch\n:\n\n0\n:=\n\n1.\n1.\n\n20\n00\n\nM\nill\n\nis\nec\n\n.\nof\n\n D\nay\n\n32\n\n-s\nec\n\nof\n D\n\nay\n\n16\n\n4\nby\n\nte\n32\n\nO\nffs\n\net\nC\n\nou\nnt\n\ner\n\u00b5\n\nF\nig\n.2\n\n.7\nT\nel\nem\n\net\nry\n\npa\nck\net\n\nde\nfi\nni\ntio\n\nn.\n\u00a9\n\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt,\nT\nem\n\npl\nat\ne\n\u00a9\n\nA\nir\nbu\n\ns\nD\nS\n\n2 The FLP Platform Operability 53\n\n\n\nDownlink\nFor the downlink the VCID determines the origin of the TM, i.e. whether it is live\nTM or not and if not, from which packet store it originates (see Sects. 2.4.11 and 4.\n3.2). Thus the VC also determines the priority of the submitted TM frames and thus\nthe routing priority in the CCSDS-Board multiplexer. Four Virtual Channels can be\ndetermined according to the origin of the TM, as summarized in Table 2.4.\n\n2.2.2 Spacecraft ID\n\nEach spacecraft transmitting CCSDS protocol in the S-band range reserved for\nspace communication, needs an official registered spacecraft ID number. The of-\nficial CCSDS Spacecraft ID (SCID) assigned to the FLP mssion \u201cFlying Laptop\u201d is\n\u201c001001011101\u201d in binary or \u201c25D\u201d in hexadecimal numbers. It will appear in\nevery TM- and TC-Frame Header. It was requested by M. Pilgram of DLR/GSOC\nand was initially assigned on August 1st, 2011. The entry in the official database of\nregistered spacecraft Space Assigned Number Authority (SANA) [46] is provided\nin Table 2.5:\n\nTable 2.3 Uplink VCIDs overview\n\nTC VCIDs CCSDS-Board Command Taype\n\nVC1 CCSDS N Nominal High Priority TC\n\nVC2 Nominal standard TC\n\nVC3 CCSDS R Redundant High Priority TC\n\nVC4 Redundant standard TC\n\nTable 2.4 Downlink VCIDs overview\n\nTM\nVCIDs\n\nCommand Type\n\nVC0 Live TM\n\nVC1 Stored TM: Srv 3 Housekeeping/Diagnistic\npackets\n\nVC2 Stored TM: Srv 5 Event packets\n\nVC3 Stored TM: all other packets\n\n54 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\n2.2.3 System Authentication\n\nThe FLP core data handling subsystem (Core DHS) provides a simplified authen-\ntication concept to prevent satellite hijacking. This is developer intellectual property\nand is not subject to this published FOM release.\n\n2.3 Application Process ID Definitions (APIDs)\n\nThe CCSDS Space Packet Protocol Standard [20] defines the lower protocol\nstructure, namely the TM or TC packets (see Sect. 2.5). Within this standard, the\nApplication Process ID (APID) is defined as the main ID to define the origin of a\nTM packet respectively the target of a TC packet. The APID range 2040\u20132047 is\nhowever reserved by certain standards (see [21]).\n\nThe APID can be used to address different parts of the OBSW or different\ndevices. It needs to be noted that a device which has its own APID must be a PUS\nterminal. Thus it has to be able to receive/interprete and to send PUS compatible\npackets. This requires a certain integrated \u201cintelligence\u201d in such a device. For the\nFLP only the STR has this capability and thus its own APID. All other devices are\ncontrolled by the OBSW and addressed using the OBSW APID.\n\nInside the FLP OBSW the diverse processes do not have individual APIDs\u2014so\nthere exist no diverse Process IDs (PRID) and Categories (PCAT). The entire\nOBSW has a single APID. For the defined APIDs see Table 2.6:\n\nTable 2.6 FLP APIDs definition\n\nProcess/Hardware APID (dez) APID (bin) Remarks\n\nIdle Packet 2047 11111111111 Defined in [20]\n\nOBSW general 53 00000110101\n\nStar Tracker 1937 11110010001\n\nSimulator 1804 11100001100 Fixed, as compiled in simulator kernel\n(source code IP of Airbus DS)\n\nTMTCFE\nRemote Control\n\n1540 11000000100 Configurable\n\nTable 2.5 Spacecraft ID overview\n\nSpacecraft Name Channel Version Id\n(hex)\n\nRequestor\nName\n\nRequestor\nAffiliation\n\nRequestor\nAffiliation\nCountry\n\nAssigned\nDate\n\nAssignor Status\n\nFLYINGLAPTOP TC,\nTLM\n\n1 25D M.\nPilgram\n\nDLR DE 2011-08-01 JGG Assigned\n\n2 The FLP Platform Operability 55\n\n\n\n2.4 PUS Tailoring Concept\n\nThe ECSS Standard ECSS-E-70-41A \u201cGround systems and operations\u2014Telemetry\nand telecommand packet utilization\u201d [13] defines the so-called \u201cPacket Utilization\nStandard\u201d (PUS) Services. Within these PUS Services generic functionalities are\ndefined on how telecommands and telemetry can be utilized for spacecraft control,\nand for on-board and on-ground data handling, telecommand verification etc. Each\nservice includes several subservices which can either be a request to a service\nprovider, i.e. an on-board application process, or a report from the provider. Often a\nreport is defined as a \u201creply\u201d to a service request, the request being a telecommand\n(TC) which is uplinked and the report being a telemetry (TM) packet which is\ndownlinked.\n\nThe ECSS standard defined services are numbered from 1 to 19, with the ser-\nvices 7, 10 and 16 currently being reserved but unused [13]. Not all services and\nsubservices defined by the ECSS need to be implemented for a dedicated mission.\nAdditional services may be defined by a spacecraft manufacturer for special mission\npurposes with service numbers above 127. For self-defined services and for\nstandard services also additional subservices may be defined by a spacecraft\nmanufacturer. Several of these additional services are defined for the FLP. For each\nservice a \u201cminimum capability\u201d set of subservices is defined, which are considered\nmandatory if the service itself is implemented.\n\nDue to the generic nature of the PUS standard, there are no dedicated services for\nspecific equipment operations, but standard PUS Services can be extended for such\npurposes. Examples for such extensions are specific payload functions, specific\nfailure handling functions or specific onboard data handling functions.\n\nFor these reasons of mission specific services and mission specific additional\nsubservices the PUS standard needs to be tailored for each mission. In the following\nsections all services and all corresponding subservices are described which are\nimplemented in the FLP Core Data Handling Subystem (Core DHS). For each\nservice used on the FLP, a table of all subservices is provided at the end of each\nsection. The implementation of the telecommand and telemetry packets and vari-\nables in the Flight Control System\u2019s database\u2014the so-called Mission Information\nBase (MIB)\u2014is covered in detail in Chap. 16.\n\nThe FLP Onboard Software by default supports the following standard PUS\nServices:\n\n\u2022 Service 1: Acknowledge Service\n\u2022 Service 2: Device Commanding Service\n\u2022 Service 3: Housekeeping Service\n\u2022 Service 5: Event Reporting Service\n\u2022 Service 6: Memory Management Service\n\u2022 Service 8: Function Service\n\u2022 Service 9: Time Management Service\n\u2022 Service 11: On-board Operations Scheduling Service\n\u2022 Service 12: On-Board Monitoring Service\n\n56 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16\n\n\n\u2022 Service 15: On-board Storage and Retrieval Service\n\u2022 Service 17: Test Service\n\u2022 Service 20x: Self-defined services for mode commanding.\n\nThe following sections describe the FLP PUS implementation. For the detailed\nTC/TM/Event lists refer to the annex Sect. 17.3.\n\n2.4.1 PUS-Service 1\u2014Telecommand Verification\n\nService 1 defines the reporting of telecommand reception and execution in various\nstages (see also Table 2.7). In general, telecommands shall be verified upon\nreception on board the satellite. When a command is received, a Telecommand\nAcceptance Report is sent to Ground\u2014Service (1,1) for successful reception\u2014\nrespectively (1,2) in case of failed reception or corrupted command. After a com-\nmand has been successfully executed or in case where an error occurred during the\nexecution, a Telecommand Execution Completed Report\u2014Service (1,7) respec-\ntively (1,8)\u2014is be generated. The execution of more complex commands can be\nacknowledged by sending execution start and execution progress success and\nfailure reports\u2014Service (1,3)\u2014(1,6). All of these report types are implemented in\nthe FLP Core DHS.\n\n2.4.2 PUS-Service 2\u2014Device Command Distribution\n\nPUS-Service 2\u2014see Table 2.8\u2014is used for direct commanding of on-board devices\n(equipment\u2014like a star tracker, a reaction wheel etc.). It is used mainly for testing,\ninternal OBSW commanding and contingency situations. During nominal opera-\ntions, Service 2 commands can be used e.g. to request and report settings or other\ndata from devices, which is not part of the housekeeping TM or to trigger certain\nrarely used functions:\n\nTable 2.7 PUS-Service 1\u2014telecommand verification\n\nNr. Description TM/TC\n\n(1,1) Telecommand Acceptance Report\u2014Success TM\n\n(1,2) Telecommand Acceptance Report\u2014Failure TM\n\n(1,3) Telecommand Execution Started Report\u2014Success TM\n\n(1,4) Telecommand Execution Started Report\u2014Failure TM\n\n(1,5) Telecommand Execution Progress Report\u2014Success TM\n\n(1,6) Telecommand Execution Progress Report\u2014Failure TM\n\n(1,7) Telecommand Execution Completed Report\u2014Success TM\n\n(1,8) Telecommand Execution Completed Report\u2014Failure TM\n\n2 The FLP Platform Operability 57\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nSubservice (2,128) is used to command a device (on-board equipment) using a\ncommand structure which is understood by the device itself (\u201craw commanding\u201d).\nThe command is directly routed to the device by the device handler, if the handler is\nin raw mode (see Sect. 3.2.2). Subservice (2,129) is the report answer to the (2,128)\nrequest, containing the actual answer packet from the commanded device. It is also\ndirectly routed to the ground by the device handler without any interpretation.\n\nDue to the complexity of the PCDU, this functionality is mainly used during the\nPCDU verification, which is why only the Service (2,129) reports from the PCDU\nare interpreted by the Mission Control System (MCS).\n\nSubservice (2,130) is used to command a device by a simpler command, which\nis \u201cknown\u201d by the OBSW (\u201cdirect commanding\u201d). Thus, it is not in a format\nunderstood by the target device, but is interpreted by the device handler in the\nOBSW. Furthermore, the reply packet of the device is also interpreted by the device\nhandler. To use this Subservice, the device handler must be in On or Normal mode\n(see Sect. 3.2.2). Note that not all commands of a given device are necessarily\nimplemented in the OBSW so that they can be sent by Service (2,130). For the other\ncommands, Service (2,128) must be used.\n\nTM answers to direct commands of type (2,130) containing requests of TM from\ndevices are downlinked as Subservice (2,135). This can be used to downlink TM\nparameters, which are not requested by the device handlers on a regular basis. This\nincludes mainly status variables which do not change frequently (as for example\nbi-stable relays states in the PCDU) and which are not used by any on-board\ncontroller. All values requested by service (2,130) are not written into the OBSW\ndatapool (see Sect. 4.3) and cannot be downlinked using PUS Service 3\n(Housekeeping).\n\nIn general, Service 2 is mainly used for troubleshooting during testing and\npossibly on orbit. However, using Service (2,130) commands to receive (2,135) TM\nis part of nominal operations.\n\nSubservice (2,133) is used to enable and disable a so-called \u201cwiretapping mode\u201d\nof a device handler. In this mode, the device handler downlinks all communication\nbetween a device and the device handler. Commands from the handler to the device\nare downlinked as Service (2,134) packets and answer packets from the device as\nService (2,129) (see above). This service is intended to be used for debugging\npurposes during tests and possibly in orbit. Wiretapping can be activated in any\n\nTable 2.8 PUS-Service 2\u2014\ndevice command distribution\n\nNr. Description TM/TC\n\n(2,128) Distribute Raw Device Commands TC\n\n(2,129) Raw Device Command Report TM\n\n(2,130) Distribute Direct Device Commands TC\n\n(2,132) Distribute Channel Switch Command TC\n\n(2,133) Device Wiretapping Request TC\n\n(2,134) Device Wiretapping TC Report TM\n\n(2,135) Direct Device Command Report TM\n\n58 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\ndevice handler mode (see Sect. 3.2.2). However, it needs to be used carefully as\nlarge amounts of data might be generated, possibly spamming the downlink\nchannel, especially when the handler is in on or normal mode. It can be useful to\nenable the service shortly before a to be debugged command is sent, and to disable\nit shortly after command execution and error recording. Generally, the packets are\nhowever not interpreted within the Mission Control System but their TM (see\nservice (2,135) explained below) needs to be interpreted manually.\n\nService (2,3) is a subservice which is used on board of standard spacecraft for\nemergency commanding. They are used to send pulse commands to the so-called\nCommand Pulse Distribution Unit (CPDU) to switch units on or off, directly from\nground (see also [140]). Due to the special Combined Data and Power Management\nInfrastructure (CDPI) on the FLP here the High Priority Commands (HPC) here are\ndistinguished by their virtual channels, provide more sophisticated features and are\nnot PUS compliant. Thus there is no need for implementation of Service (2,3).\n\n2.4.3 PUS-Service 3\u2014Housekeeping and Diagnostic\nReporting\n\nThis service provides the possibility to report housekeeping (HK) and diagnostic\ndata to ground. The term HK data refers to nominal telemetry in the PUS, whereas\ndiagnostic data is telemetry sent in case of anomalies occurring within the HK data.\n\nBoth the nominal HK and diagnostic data can be downlinked in periodic or\nfiltered mode. In periodic mode, the packets are generated at a predefined sampling\nrate, whereas in filtered mode, packets are only generated if predefined thresholds\nare exceeded. However, the filtered mode is not used on the FLP.\n\nWithin the service a list of HK and diagnostic parameter reports is maintained\n(see Table 2.9), in which sampling rates and parameters to be sampled are defined.\nThe first eight subservices of this service will be used on the FLP in order to define\nnew (3,1)/(3,2) or to erase old (3,3)/(3,4) HK or diagnostic parameter reports and to\nenable (3,5)/(3,7) or to disable (3,6)/(3,8) the generation of HK and diagnostic\nparameter reports.\n\nSubservices (3,9) to (3,12) provide the possibility to downlink the HK and\ndiagnostic parameter report definitions in order to double check the definitions\nactually used on board.\n\nSubservices (3,25)/(3,26) define reports for HK and diagnostic parameters.\nThese subservices are the minimum capability of the service.\n\nThere exist predefined housekeeping packets for the FLP, containing the dat-\napool parameters of a single subsystem or device. Every datapool variable can be\nfound in at least one (3,25) packet.\n\n2 The FLP Platform Operability 59\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n2.4.4 PUS-Service 4\u2014Parameter Statistics Reporting\n\nThis service provides the possibility to report only statistics of certain TM (mini-\nmum, maximum, mean values, standard deviation) in order to reduce the amount of\ndata to be downlinked. This service is not implemented in the Core DHS of the\nFLP.\n\n2.4.5 PUS-Service 5\u2014Event Reporting\n\nThis service is used to report event TM to Ground. Event TM can be generated in\ncase of anomalies and errors or if certain autonomous on-board actions have been\ncarried out or milestones have been reached. There are four different kinds of event\nreports defined\u2014subservices (5,1) to (5,4) for\n\n\u2022 normal/progress reports for autonomous on-board actions or milestones\u2014\nService (5,1) and for\n\n\u2022 error/anomaly reports with three different levels of severity, namely low,\nmedium and high\u2014Services (5,2) to (5,4).\n\nSubservices (5,5) and (5,6) are used to activate/deactivate the Event generation\non board in flight\u2014individually for the diverse report types by their Report-ID\n(RID). This is useful in case of a device sending corrupted TM or when priority of\ncertain reports change during flight.\n\nFor the FLP it needs to be noted that when an Event is disabled by its RID, it is\ndisabled for all on-board objects, which are able to generate it.\n\nTable 2.9 PUS Service 3\u2014housekeeping and diagnostics data handling\n\n(3,1) Define new Housekeeping Parameter Report TC\n\n(3,2) Define New Diagnostic Parameter Report TC\n\n(3,3) Clear Housekeeping Parameter Report Definitions TC\n\n(3,4) Clear Diagnostic Parameter Report Definitions TC\n\n(3,5) Enable Housekeeping Parameter Report Generation TC\n\n(3,6) Disable Housekeeping Parameter Report Generation TC\n\n(3,7) Enable Diagnostic Parameter Report Generation TC\n\n(3,8) Disable Diagnostic Parameter Report Generation TC\n\n(3,9) Report Housekeeping Parameter Report Definitions TC\n\n(3,10) Housekeeping Parameter Report Definitions Report TM\n\n(3,11) Report Diagnostic Parameter Report Definitions TC\n\n(3,12) Diagnostic Parameter Report Definitions Report TM\n\n(3,25) Housekeeping Parameter Report TM\n\n(3,26) Diagnostic Parameter Report TM\n\n60 K.-S. Klemich and J. Eickhoff\n\n\n\nAll Service 5 subservices are used on the FLP (see Table 2.10).\nThe private subservice Service (5,128) can be used to trigger reporting of a\n\ncertain event. This is used exclusively for test purposes.\n\n2.4.6 PUS-Service 6\u2014Memory Management Service\n\nThis service is used to directly access different parts of the on-board memory. It is\ncommonly used in case of OBSW updates/patches or STR star-map patches or in\ncontingency situations, in which certain parts of the memory of a PUS com-\nmandable device/software needs to be dumped or overwritten directly.\n\nHowever, for the FLP this service was extended to enable higher level data\naccess. For example, it is possible to set configuration variables of controllers\u2014like\nthe ACS_Controller with its control laws for steering the satellite or the power\nsupply subsystem\u2019s PSS_Controller with its variables for battery State-of-Charge\ncomputation. For more background on the controllers see Sect. 3.2.8.\n\nThis access to variables is done by using the controller object-ID as a memory\nID and the ID of the parameter as the memory address. This allows performing high\nlevel data access operations within the standard PUS framework.\n\nIn general, there are two different ways to access the memory, either by an\nabsolute memory address or by using a base address plus an offset. All subservices\nare defined for both ways. For FLP, only the absolute addressing is used.\n\nThe handling of memory management is somewhat similar to the access of\ndevice specific information via Service 2. Service 6 however is not used for\naccessing the OBSW device handlers and the devices, but the assemblies and\ncontrollers. The similarity is depicted below (see also Table 2.11):\n\n\u2022 TC Service to set a value of a device: Srv. (2,130)\n\u2022 TC Service to query a value of a device: Srv. (2,130)\n\u2022 TM Service with the requested values of a device: Srv. (2,135)\n\u2022 TC Service to set a value of a controller: Srv. (6,132)\n\u2022 TC Service to query a value of a controller: Srv. (6,135)\n\u2022 TM Service with the requested values of a controller: Srv. (6,136)\n\nParameter setting in Service 6 is for one parameter at a time. Setting of multiple\nparameters requires multiple individual Service 6 TCs.\n\nTable 2.10 PUS Service 5\u2014\nEvent reporting service\n\n(5,1) Normal/Progress Report TM\n\n(5,2) Error/Anomaly Report - Low Severity TM\n\n(5,3) Error/Anomaly Report - Medium Severity TM\n\n(5,4) Error/Anomaly Report - High Severity TM\n\n(5,5) Enable Event Report Generation TC\n\n(5,6) Disable Event Report Generation TC\n\n(5,128) Inject Event for Test Purposes TC\n\n2 The FLP Platform Operability 61\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n2.4.7 PUS-Service 8\u2014Function Management Service\n\nThis service has only one subservice defined in the PUS called \u201cPerform Function\u201d\n(see Table 2.12). It is used to invoke all sorts of non-standard functions, e.g.\npayload commanding, mode switches etc.\n\nService (8,1) is used to set groups of often used parameters in controllers, e.g. all\nparameters for the battery State-of-Charge estimation with a single command, and\nto query the data. The answers to request commands are downlinked using Service\n(8,129).\n\nAs the FLP uses the mode switching concept based on the mode tables and\nsequence tables described in Sect. 2.1.12 it does not need a full implementation of\nthe classic PUS Service 8.\n\n2.4.8 PUS-Service 9\u2014Time Management Service\n\nThis service can be used to report the on-board time to the ground to coordinate it\nwith UTC (9,2) and to change the rate with which this report is generated (9,1).\n\nOn the FLP a clock supplied by the OBC operating system counts the seconds\nfrom a defined starting point (OBC boot). This service is used to link this seconds\ncounter with UTC by uplinking the current UTC as Service (9,128) TC\u2014see\nTable 2.13. Once the GPS system is on, an on-board time in UTC format is\n\nTable 2.11 PUS-Service 6\u2014memory management service\n\n(6,2) Load Memory using Absolute Addresses TC\n\n(6,5) Dump Memory using Absolute Addresses TC\n\n(6,6) Memory Dump using Absolute Addresses Report TM\n\n(6,9) Check Memory using Absolute Addresses TC\n\n(6,10) Memory Check using Absolute Addresses Report TM\n\n(6,132) Load Memory using Absolute Addresses customized TC\n\n(6,135) Dump Memory using Absolute Addresses customized TC\n\n(6,136) Memory Dump using Absolute Addresses Report customized TM\n\nTable 2.12 PUS-Service 8\u2014function management service\n\n(8,1) Perform Function TC\n\n(8,129) Request Data Function Report TM\n\nTable 2.13 PUS Service 9\u2014time management service\n\n(9,1) Change Time Report Generation Rate TC\n\n(9,128) Set Time Request TC\n\n62 K.-S. Klemich and J. Eickhoff\n\n\n\navailable from the GPS time packets on board and GPS time is used. This time code\nis more precise than any OBC OS seconds counter based on-board time.\n\nWhen the GPS system is switched off (safe mode, detumble mode), the corre-\nlation between the on-board time counter and UTC can still be done using any live\nTM packet containing a time stamp. Thus the standard subservices (9,1) and (9,2)\nare not essential and are not implemented in the FLP Generation 1 OBSW. In the\nPUS it is explicitly stated that the concepts for missions using a GPS system (like\nFLP spacecraft) are not covered.\n\n2.4.9 PUS-Service 11\u2014On-board Operations Scheduling\nService\n\nWithin this PUS Service a command schedule is maintained, which consists of\nloadable telecommands to be executed at a specified time. According to the ECSS\nstandard [14] such a schedule can be divided into subschedules, which each can\ncontain a dedicated commands or Flight Procedures for example. For the first FLP\nmission at the University of Stuttgart, however subschedules are not supported by\nthe older version of the Mission Control System (MCS).\n\nVia PUS Service 11 it is also possible to downlink the contents of the schedule\nto double check its integrity. Within the standard, the possibilities for summarized\nand detailed reports of the contents of the schedule are provided.\n\nThe service\u2014as implemented for the FLP\u2014consists of subservices to enable\n(11,1) and to disable (11,2) the release of commands from the schedule, to reset the\nentire schedule (11,3) and to insert (11,4) commands into the schedule. These are\nall part of the minimum capability set and are available on the FLP\u2014see\nTable 2.14.\n\nIt is only possible to enable the schedule if the system time has been set. When\ninserting new telecommands into the mission timeline, the following rules apply:\n\n\u2022 New commands may be inserted both when the schedule is enabled and\ndisabled.\n\n\u2022 Telecommands do not need to be ordered according time tag during uplink/load.\nThe scheduling service orders them by time-tag.\n\n\u2022 If a system time is set, the service rejects TCs which are already outdated at time\nof insertion. Otherwise, insertion is possible.\n\nTable 2.14 PUS-Service 11\n\u2014On-board operations\nscheduling service\n\n(11,1) Enable Release of Telecommands TC\n\n(11,2) Disable Release of Telecommands TC\n\n(11,3) Reset Command Schedule TC\n\n(11,4) Insert Telecommands in Command Schedule TC\n\n2 The FLP Platform Operability 63\n\n\n\nIn the FLP Generation 1 OBSW the schedule is stored in the OBC RAM,\ntherefore it is lost in case of a system reboot. Resetting the schedule (11,3) works as\nspecified in the ECSS standard. The service disables the schedule in case of a time\njump, as defined in the PUS standard.\n\nMore sophisticated subservices for reporting, time shifting of commands etc. are\nnot yet implemented\u2014also due to the fact that the payload management in FLP\nGeneration 1 via the PLOC is somewhat limited compared to the architecture later\ntargeted for FLP Generation 2\u2014see Sect. 9.3.\n\n2.4.10 PUS-Service 12\u2014On-board Monitoring Service\n\nThis Service is used to monitor on-board variables in order to generate Event TM or\nto notify the FDIR in the OBSW if specified parameter limits are exceeded. The\ngenerated Monitoring Reports contain details on all limit transitions since the last\ntime the same Report was issued, including how long and how often limits were\nexceeded. The service also maintains a list of parameters to be monitored and the\napplicable limits.\n\nPUS Service 12 implementation is also minimized and tailored for its imple-\nmentation on FLP Generation 1. As the parameter monitoring is performed already\nin the device handlers and controllers of the object-oriented OBSW (see Sect. 3.2),\nit is sufficient to provide the modification service and transition report (12,12)\u2014see\nTable 2.15. The only other standard service is the definition of the maximum\nreporting delay via Service (12,3).\n\nBesides the PUS Service to modify the parameter checking information (=set\nlimits) (12,7), there is a custom subservice (12,137) to be used for specific objects\nwith additional limits, e.g. the battery strings which have a maximum spatial gra-\ndient limit.\n\nMonitoring of parameters in a specific object, e.g. a controller, can also be\nenabled and disabled by Services (12,131) and (12,132) respectively.\n\nTable 2.15 PUS-Service 12\n\u2014On-board monitoring\nservice\n\n(12,3) Change maximum reporting delay TC\n\n(12,7) Modify Parameter Checking Information TC\n\n(12,12) Check Transition Report TM\n\n(12,131) Enable Monitoring of Parameters within\none object\n\nTC\n\n(12,132) Disable Monitoring of Parameters within\none object\n\nTC\n\n(12,137) Modify Parameter Checking Information\nfor objects with additional limits\n\nTC\n\n64 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n2.4.11 PUS-Service 15\u2014On-board Storage and Retrieval\nService\n\nThis service maintains a list which TM packet is to be stored in which memory area\n(packet store). There exist three packet stores in the OBC I/O-Board, one for\nService 3 HK and diagnostic packets, one for Service 5 event TM and one for all\nother TM (see Sects. 2.4.11 and 4.3.2). The service is used to organize storage of\nthe packets during times of no ground station access and to retrieve the packets in\norder to downlink them\u2014see also Table 2.16:\n\n2.4.12 PUS-Service 17\u2014Test Service\n\nThis service is a simple \u201cping\u201d service, designed to test the connection between the\nground station and the spacecraft during tests, during LEOP and potentially at the\nbeginning of each ground station contact. It consists of a request to perform a\nconnection test (17,1) and a connection test report (17,2) as a reply to the request\n(see Table 2.17). If both packets are received correctly by each side, the connection\nis established successfully. Both subservices are implemented on in the FLP\nCore DHS.\n\nTable 2.16 PUS_Service 15\u2014On-board storage and retrieval service\n\n(15,1) Enable Storage in Packet Stores TC\n\n(15,2) Disable Storage in Packet Stores TC\n\n(15,3) Add Packets to Storage Selection Definition TC\n\n(15,4) Remove Packets from Storage Selection Definition TC\n\n(15,5) Report Storage Selection Definition TC\n\n(15,6) Storage Selection Definition Report TM\n\n(15,7) Downlink Packet Store Contents for Packet Range TC\n\n(15,10) Delete Packet Stores Contents up to Specified Packets TC\n\n(15,12) Report Catalogues for Selected Packet Stores TC\n\n(15,13) Packet Store Catalogue Report TM\n\nTable 2.17 PUS-Service 17\u2014test service\n\n(17,1) Perform Connection Test (\u201cPing\u201d) TC\n\n(17,2) Connection Test Report TM\n\n2 The FLP Platform Operability 65\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\n2.4.13 PUS-Service 18\u2014On-board Control Procedures\nService\n\nThis service can be used to define On-board Control Procedures by means of a\npredefined scripting language interpreter in the OBSW. Such a feature is not\ndirectly provided by the FLP OBSW.\n\nA similar functionality as what OBCPs provide w.r.t. sequence control is pro-\nvided by the custom service 202 Sequences Control Service (Sect. 2.4.17).\n\n2.4.14 PUS-Service 19\u2014Event-Action Service\n\nDue to the object-oriented OBSW design and the encapsulation of functions the\nreaction chains on certain symptom occurrences are not implemented via\nEvent-Action chains but by handling through the next higher OBSW instance.\n\nOn symptom occurrence Events are generated as in a classic procedural software\ndesign for information of the flight operators and for function triggering in the next\nhigher object instance.\n\nTherefore the classic Event-Action Service is not needed for the FLP OBSW.\n\n2.4.15 PUS Service 200\u2014Mode Control Service\n\nThe PUS service 200 is custom defined for the FLP mode management and thus\nreplaces certain functionalities of a classical PUS Service 8. As shown in\nTable 2.18, Service (200,1) is used to command any \u201cobject\u201d of the satellite system,\nwhich has different modes (see Sect. 3.1.2), in one of its modes\u2014identified by a\ncombination of mode and submode.\n\nAn object can be any software or hardware component which is identified by an\nobject-ID (see Sect. 3.2) and has different modes, like\n\n\u2022 device handlers,\n\u2022 assemblies,\n\u2022 controllers,\n\u2022 subsystems or\n\u2022 the satellite system object.\n\nSubservices (200,2) and (200,3) are used to query the mode of an object or an\nobject and all of its children recursively, e.g. all ACS objects for the ACS\n\nTable 2.18 PUS-Service 200\n\u2014mode control service\n\n(200,1) Set Object Mode TC\n\n(200,2) Request Object Mode TC\n\n(200,3) Request Object Mode Recursively TC\n\n66 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nsubsystem. There are no report answers defined for these subservices, because the\nreplies are provided in the form of Event TM via Service 5 (see Sect. 2.4.5).\n\n2.4.16 PUS-Service 201\u2014Health Flag Control Service\n\nThe PUS service 201 is tailored for the FLP to control the health states of the\ndevices on-board the satellite, which have an associated health flag (for more details\nsee Sect. 3.1.2). As shown in Table 2.19, there is a subservice to set an object\u2019s\nhealth flag (201,1). The subservice (201,4) is used to query the health flag of an\nobject.\n\nThe TM of this request is returned in form of Service 5 Event TM (see\nSect. 2.4.5), similar to services (200,2) and (200,3). There exist also subservices to\nrequest and report the health flags of all objects having a health flag assigned.\n\n2.4.17 PUS-Service 202\u2014Mode Tables and Sequences\nControl Service\n\nThe PUS Service 202 is tailored for managing the FLP spacecraft high level object\nmodes. These comprise the\n\n\u2022 satellite System object modes (which correspond 1:1 to the spacecraft modes)\nand\n\n\u2022 the subsystem modes of all the spacecraft subsystems. The latter are also repre-\nsented by a control object in the hierarchy of the OBSW (see later in Sect. 3.1.1).\n\nThis custom PUS Service is used to control the tables and sequences that are\nused to change the S/C system or a subsystem level mode and which were intro-\nduced already in Sect. 2.1.12.\n\nThe definitions of subsystem/assembly/device modes versus S/C modes\u2014see\nTable 2.2\u2014are defined in internal \u201cMode Tables\u201d which are preloaded in the\nOBSW ROM image and are reloadable/modifiable via this service from ground.\n\nIn general, these tables contain several entries of mode commands for invoking\nthe system transition from one mode to the next\u2014similar to Service (200,1)\nrequests. Functional sequences (sequence tables) on board can contain a number of\nsuch mode commands in a table to be executed sequentially and to achieve a mode\nchange on subsystem or even system level.\n\nTable 2.19 PUS-Service 201\u2014health flag control service\n\n(201,1) Set Object Health Flag TC\n\n(201,2) Request All Object Health Flags TC\n\n(201,3) Report All Object Health Flags TM\n\n(201,4) Request Single Object Health Flag TC\n\n2 The FLP Platform Operability 67\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nAs listed in Table 2.20, there are subservices implemented to add such tables2\n\nand sequences3 (202,1), (202,2), to delete them (202,3), (202,4), to request and\nreport lists of available tables and sequences (202,5) to (202,8). Furthermore, there\nexist subservices\n\n\u2022 to request and report the data contained within these tables (202,9) to (202,12)\nand\n\n\u2022 to request and report the available memory slots for tables and sequences\n(202,13) to (202,14)\n\n\u2022 and to request and report the available memory slots for tables or sequences of a\nsingle object via the subservices (202,15) to (202,18).\n\n2.4.18 PUS-Service 203\u2014Payload Control Service\n\nThe FLP OBSW by default provides a dedicated PUS Service for interfacing a\npayload controller if implemented in the spacecraft. In the case of the first FLP\n\nTable 2.20 PUS-Service 202\u2014mode tables and sequences service\n\n(202,1) Add Mode Change Table TC\n\n(202,2) Add Mode Change Sequence TC\n\n(202,3) Delete Mode Change Table TC\n\n(202,4) Delete Mode Change Sequence TC\n\n(202,5) Request Mode Change Tables Available TC\n\n(202,6) Report Mode Change Tables Available TM\n\n(202,7) Request Mode Change Sequences Available TC\n\n(202,8) Report Mode Change Sequences Available TM\n\n(202,9) Request Mode Change Table Data TC\n\n(202,10) Report Mode Change Table Data TM\n\n(202,11) Request Mode Change Sequence Data TC\n\n(202,12) Report Mode Change Sequence Data TM\n\n(202,13) Request Available Memory Slots for Mode Change Tables and Sequences TC\n\n(202,14) Report Available Memory Slots for Mode Change Tables and Sequences TM\n\n(202,15) Request Available Memory Slots for Mode Change Tables of an Object TC\n\n(202,16) Report Available Memory Slots for Mode Change Tables of an Object TM\n\n(202,17) Request Available Memory Slots for Mode Change Sequences of an\nObject\n\nTC\n\n(202,18) Report Available Memory Slots for Mode Change Sequences of an Object TM\n\n2target tables in the context described in Sect. 2.1.12.\n3sequence tables in the context described in Sect. 2.1.12.\n\n68 K.-S. Klemich and J. Eickhoff\n\n\n\nbased satellite based\u2014the \u201cFlying Laptop\u201d\u2014this custom Service is used for con-\ntrolling the Payload Control Computer (PLOC).\n\nDetails on the specific implementation of payload commands please are to be\ndefined in a mission specific Payload Flight Operations Manual.\n\n2.5 Spacecraft Commandability and Observability\n\nAs mentioned the communication between spacecraft and ground station applies the\nCCSDS standards. Telecommand packets are segmented and framed and converted\nto Command Link Transmission Units (CLTU) in the ground segment. The CLTUs\nare modulated, transferred to the spacecraft and demodulated on board by the\nreceivers. The demodulated bitstream is forwarded to the CCSDS-Boards. The\nCCSDS-Boards extract the TC frames from the CLTUs by performing all the nec-\nessary decoding and unpacking. The on-board software cyclically acquires the TC\nframes from the locked CCSDS-Board (see Chap. 6) and unpacks the TC packets to\nprocess them.\n\nAs explained in more detail in Sect. 6.1 the FLP is equipped with two\nCCSDS-Boards, a nominal and a redundant one. The CCSDS-Boards are operated\nin hot redundancy. When ground contact is achieved the first board reporting\nreceiver lock and carrier lock status to the OBSW will be used to downlink TM\nunless being marked non-healthy by FDIR or by ground. The board used to process\nthe uplinked commands is selected by ground via the TC Virtual Channel (see\nSect. 2.2.1).\n\nAs the transmitter itself is operated in cold redundancy, there will never be two\ndifferent signals sent at the same time. During nominal operations, the nominal\nCCSDS-Board is used. When no TM is received on ground, it is possible that the\nCCSDS-Board in use is marked as non-healthy or is not working correctly.\nA switchover has to be commanded.\n\nSpacecraft telemetry also follows the CCSDS standards and transmission is\nagain performed via the CCSDS-Boards to the active transmitter (see Fig. 6.1). TM\nframes including the TM packets are submitted to the CCSDS-Boards by the\nOBSW via separate TM Virtual Channels for life TM, and different kinds of\nplayback TM (see Sect. 2.2.1).\n\nThe active CCSDS-Board performs the diverse encoding down to Channel\nAcquisition Data Units (CADU) which are forwarded to the active transmitter and\nwhich are modulated there. When ground connection is established and currently no\nTM is downlinked by the OBSW the CCSDS-Board generates Idle Frames to keep\nthe data connection to Ground alive.\n\nThe diverse PUS services for TC and TM that are supported by the FLP have\nbeen explained in the previous chapter.\n\nHigh Priority Commands of class 1 (HPC1)\u2014which bypass the OBC and\nOBSW\u2014can be sent to the spacecraft and are identified in the CCSDS-Board\u2014by\nVirtual Channel ID, not by MAP-ID (see Sect. 2.2.1). They are sent to the PCDU\n\n2 The FLP Platform Operability 69\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\n\n\ndirectly from the CCSDS-Boards and directly processed by the Combined-\nController in the PCDU\u2014see Sect. 4.2 and Figs. 4.1 and 4.2.\n\nThe FLP Generation 1 does not provide High Priority TM replies for these HPC1\ncommands.\n\nThe mode control service Srv.(200) and the mode table management via Srv.\n(202) allow a flexible adaptation of the spacecraft transition sequences by upload of\nnew mode tables also in flight. This obsoletes a complex OBCP interpreter engine\nin the OBSW and supports the concept of an easy to use low-cost platform.\n\nWith this set of features the commandability and observability of the spacecraft\nplatform in nominal and contingency situations is sufficiently complete.\n\n2.6 Spacecraft On-board Time Management\n\nOn-board time management is performed via PUS Service 9 (Sect. 2.4.8). In the\nFLP platform, the On-Board Computer (OBC), the GPS system and the Star\nTracker (STR) share time information.\n\nThe FLP platform does not utilize a dedicated real-time clock which keeps time\nand date information available at any time, but relies on the time information\ndelivered by ground or by the GPS system. There exist two independent\npulse-per-second (PPS) lines, one from the GPS to the OBC and one from the OBC\nto the STR (see Fig. 2.8). In fact electrically they all are redundant but only one of\neach pair of redundant lines is active at a time.\n\nA Time_Manager object in the OBSW is responsible for collection and distri-\nbution of timestamps. A time tag is allocated to the incoming pulse from the GPS,\nwhich, together with the absolute time information in the GPS time packet, can be\nused to set the on-board time in the OBC to an absolute value.\n\nSimilarly, the Time_Manager forwards the absolute time of the outgoing pulse to\nthe STR unit, which automatically uses this information to compute and report its\nattitude information with the OBC on-board time.\n\nThe Time Manager in the OBC handles two different time domains:\n\n\u2022 After reboot, it uses the CPU uptime as time reference. To maintain a monotonic\nclock, the current uptime value is stored in the OBC PROM (see Sect. 4.3.1) in\nregular intervals. It is retrieved at boot time.\nBy this means a system restart with a runtime smaller than the previous one is\navoided.\n\nFig. 2.8 Time distribution in the spacecraft\n\n70 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\n\u2022 An absolute time in (CCSDS CDS format [26]) is used as soon as the time is set\nby ground command or has been acquired from GPS.\n\nA precise synchronization (in the range of a few ms) to the GPS pulse-\nper-second is possible with this set-up, but is subject to later implementation in the\nFLP Generation 2. The current implementation implies jumps in the on-board time\nwhen switching from uplinked UTC time to GPS time.\n\n2 The FLP Platform Operability 71\n\n\n\nChapter 3\nData Handling and Control Concept\n\nUlrich Mohr, Bastian B\u00e4tz and Jens Eickhoff\n\nAbstract This chapter addresses all the fact on the onboard software which an\noperator needs to know when controlling an FLP-based spacecraft from ground. The\nimplemented onboard software objects tree is explained, from low level device\nhandlers to the top level system object. Furthermore the command/reply flow through\nthe onboard software and the onboard software object types are treated. The object\nmodes and the specifics of controller objects are covered and many further details on\nobject IDs, their addressing in commands and also on the onboard software dynamic\narchitecture like tasks, cycle times and the polling sequence table and crash handling.\n\nKeywords Onboard software objects tree ? Command/reply flow through the\nonboard software ? Object types, modes, IDs ? Software event management\nSoftware dynamic architecture ? Tasks and cycle times ? Polling sequence table\nOBSW death report\n\n\u00a9 Fotolia\n\nU. Mohr (&) ? B. B\u00e4tz\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: mohr@irs.uni-stuttgart.de\n\nB. B\u00e4tz\ne-mail: baetz@irs.uni-stuttgart.de\n\nJ. Eickhoff\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_3\n\n73\n\n\n\n3.1 Onboard Software Architecture\n\nFor spacecraft software the key issue is to meet real-time requirements. This means\nto fulfill strict timing conditions and to react to occurring events\u2014nominal ones like\na telecommand, or non-nominal ones like a failure\u2014instantaneously. Developing a\ncomplete real-time operating system was beyond the scope and capacity of the FLP\nproject. Thus, an already existing product, the open-source software RTEMS1 was\nselected as a basis for the platform OBSW. Figure 3.1 taken from [140] depicts the\nbasic elements of a standard satellite on-board software. A detailed explanation of\nthe figure is not provided here. The reader is referred to the cited reference. RTEMS\nprovides all operating system (OS) kernel functions plus time managing functions,\ntask scheduling and inter-process communication [81]. These elements are included\nin the \u201cRTOS\u201d block in Fig. 3.1 and are accessible via an RTEMS C-language\nprogramming Application Programming Interface (API). The FLP OBSW pursues\nthis design with some deviations which are due to its implementation in\nobject-oriented design, coded in the programming language C++.\n\nFor device communication, I/O Line Drivers are implemented, which in this case\nare represented by an RMAP-stack managing the communication over the\nSpaceWire (SpW) data links. Equipment handlers contain information about how\nthe devices communicate regarding their protocols and CRC mechanisms. They\nextract measurement data from incoming device data packets and forward them into\na software datapool. Further information about the equipment handlers (called\ndeviceHandler in the FLP software) is provided in Sect. 3.2.2.\n\nThe mission specific applications, including control algorithms for power\nmanagement, thermal control and attitude/orbit control, use the Onboard Software\n(OBSW) datapool parameter values to evaluate the current state of the spacecraft\nand command actuators to reach or keep a target state (see Fig. 3.1). However in the\nFLP OBSW design these control applications are encapsulated in software objects\nwhich will be explained later\u2014see also Fig. 3.3 for a quick overview.\n\nOn all levels there are failure detection functions that report to a system-wide\nFailure Detection, Isolation and Recovery (FDIR) object the failure Events that are\ndetected. If possible, the system FDIR will take measures to compensate for the\nfailure and allow continuing the current operation (system FDIR hereafter only\ncalled FDIR for short). The FDIR functionality for all subsystems is covered in\ndetail in Chap. 10.\n\nFor standardized access from a ground station to the spacecraft, a technique\ncalled Packet Utilization Standard (PUS) has been developed by ESA. This stan-\ndard recommends certain service functions that should be available on board a\nspacecraft, and how the OBSW is to be configured and commanded and controlled\n\n1Real-Time Executive for Multiprocessor Systems\u2014developed by NASA in 1988. The Real-Time\nExecutive for Multiprocessor Systems or RTEMS is an open source fully featured Real Time\nOperating System (RTOS) that supports a variety of open standard Application Programming\nInterfaces (API) and interface standards\u2014see [81].\n\n74 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nvia these PUS Services from ground in a standardized manner. This allows for\ncompatibility with different, commercial ground stations that operate conform to\nthis PUS standard. For a university satellite, this offers an advantageous usage of\ncommercial ground stations as support.\n\nThis chapter briefly describes the principles of the FLP OBSW as it was\ndesigned by the FLP OBSW team and as far as they are relevant for spacecraft\noperations. It introduces the software objects that are important for operations,\ndevice communications and failure management. It also covers basic information\nhandling and data flow through the software as far as required and used by the\nmechanisms specified in the FDIR chapters after this. The dynamic architecture\naspects like tasking and timings are also covered. More details about the OBSW\nframework and the application for FLP will be provided in [134].\n\nThe failure management concept for FLP makes use of these basic principles.\nThey are described in Sect. 10.1 and following. However, the details of the fault\nmanagement functions for the different domains have been designed independent\nfrom the software design (see [132]) and served as requirements for the OBSW team.\n\n3.1.1 OBSW Hierarchy Concept\n\nThe FLP software is entirely designed following the object-oriented paradigm, not\nonly with respect to coding, but also with respect to modeling system aspects. This\nis realized by encapsulation of system functionality in independent software\nobjects. Each of these objects covers certain system functionality such as handling a\ndevice or performing control operations. There are aggregation objects that group\n\nFig. 3.1 OBSW block diagram. \u00a9 Jens Eickhoff\u2014from [140]\n\n3 Data Handling and Control Concept 75\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nobjects into subsystems or assemblies. The general attempt is to store certain\nknowledge only in one dedicated object and to provide interfaces for other objects\nto access that information.\n\nFor example the ACS_Subsystem of the satellite is modeled as one so-called\n\u201chandler\u201d and is equipped with sub-handlers for the reaction wheel RW_, the FOG-\nAssembly and others. The RW_Assembly holds the sub-handlers for the individual\nreaction wheels. This is illustrated in Fig. 3.2. The lowest level of handlers are the\ndevice handlers (DH). They are equivalent to the Equipment Handlers in Fig. 3.1.\n\nOn RW_Assembly level the information is available about the health status of the\nindividual wheels and default selection. And the RW_Assembly then will command\nthe individual RW_Handler to start up the wheels (including control parameters\nsuch as speed). The process of wheel startup with first requesting power supply\nfrom PCDU, RW startup, monitoring of tacho sensor signal and currents etc. up to\nfinal success report of startup success up to the RW_Assembly is entirely encap-\nsulated on this RW_Handler level.\n\nSo far the lower level in the object hierarchy. On the other end, the top level is\nrepresented in Fig. 3.3 with the System object (Object-ID 0x1000100) on the highest\nlevel of the hierarchy. The System object modes correspond 1:1 to the spacecraft\noperational modes as depicted in Fig. 2.1. Commanding a spacecraft mode change in\nsoftware is represented by commanding a mode change of the System object.\n\nBelow the System the next layer in the tree are the subsystem objects, one for\neach of the main spacecraft subsystems\u2014Core DHS, Power, TTC, ACS, Thermal\nand Payloads.2 Below these subsystems the assemblies and devices are located\nwhich in Fig. 3.3 only can be imagined. In the subsequent chapters on each sub-\nsystem, they will be revisited with individual figures in higher detail and resolution.\n\nFig. 3.2 OBSW handler concept. \u00a9 IRS, University of Stuttgart\n\n2The latter being specific for each mission and not treated here in this platform Flight Operations\nManual.\n\n76 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nEach of these handlers on whatever level can be commanded into dedicated\nmodes. A handler being commanded a mode change cares for all its subobjects\nbeing mode-changed accordingly.\n\nFig. 3.3 The implemented OBSW subsystem objects tree. \u00a9 IRS, University of Stuttgart\n\n3 Data Handling and Control Concept 77\n\n\n\nFor the low level objects like device handlers (see more in Sect. 3.2.2) and\nassemblies (more in Sect. 3.2.3) this is rather straight forward. For example a\nreaction wheel assembly transiting from 4 wheel mode to 3 wheel mode as result of\na defective wheel just shuts down the affected wheel via its device handler. The\nstandard modes of the low level handler objects are Off, On and Normal.\nExceptions and extensions will be covered in the individual subsystem Chaps. 4\u20138.\n\nFor higher level objects like System a mode change implies an entire change\nprocess through the entire hierarchy chain. Therefore on system and subsystem\nlevel the mode changes are controllable by loaded mode switch tables\u2014as it was\nexplained in Sect. 2.1.12 and is visualized in Fig. 2.5 and Table 2.1.\n\nAn additional aspect are the subsystem controllers. Each subsystem has a ded-\nicated controller (marked blue in Fig. 3.3). The controller contain the algorithms or\ncontrol laws for the individual modes. E.g. the control laws for all ACS modes\n(Idle, Nadir-pointing, Target-pointing) are implemented inside the ACS_Controller.\nIf ACS is switched from for example Idle Mode to Nadir-pointing Mode the\nACS_Controller is commanded by the ACS_Subsystem object into the new mode\nand applies the corresponding numerics.\n\nThese controller objects (see Sect. 3.2.4) themselves are low level handler\nobjects as the device handlers and assemblies. They have the standard modes of the\nlow level handlers (Off, On and Normal) or, like in case of the ACS_Controller\nhave modes matching 1:1 to their subsystem object\u2019s modes (ACS_Subsystem\nmodes in this example). So for the example of the Idle Mode (see Fig. 2.1), there\nexists a\n\n\u2022 System Idle Mode of the spacecraft\n\u2022 ACS_Subsystem Idle Mode\n\u2022 ACS_Controller Idle Mode\n\nThis section is only intended to explain the basic principle. Special cases like\ndirect device commanding, failure management and sequence chains of\ninter-depending actions will be treated in later sections.\n\n3.1.2 Command/Reply Flow Through the OBSW\n\nThe ESA Packet Utilization Standard (PUS) covers two aspects\u2014the protocol\naspect and the service functionality aspect. The protocol aspect describes how\npackets are to be structured and interpreted, while the functionality aspect defines\nwhich actions are triggered by individual commands. The distinction between those\naspects allows to distribute their implementation to different parts of the software.\n\nThis service concept is useful as the FLP software framework anyway organizes\nall functionality into encapsulated software objects. Software objects can be the\nequipment handlers, assemblies or controllers as cited above, but also the PUS\nservices themselves are modeled as objects. See therefore the service handlers\ndepicted in Fig. 3.1 on the right\u2014and similarly in Fig. 3.4.\n\n78 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nThe PUS services are implemented in the FLP on-board software such that each\nservice is assigned with an interface which defines the functions needed for this\nspecific service. An object can now provide one or more interfaces and thus can\noffer the functions required by the services (see Fig. 3.4).\n\nThe protocol aspect for a service is implemented in a dedicated PUS service\nobject class. Incoming PUS telecommands are routed to the derived PUS service\nobjects implementing the dedicated service handler. Note that messages sent\ninternally between a PUS service handler object and an addressed target object\u2014\nlike e.g. the depicted ACS_Subsystem in Fig. 3.4\u2014are no longer representing PUS,\nbut an internal format. One advantage of translating the commands to an internal\nformat is that by this means objects can command other objects internally as well,\nwithout any telecommand. In this case the target does not see any difference and no\nseparate functions need to be implemented.\n\nIn some cases the object executing the commanded request does not need to be a\nseparate object. One example would be the housekeeping service. Here, the func-\ntionality is directly implemented in the service handler object as no other objects\nneed to be involved and, hence, no internal messages are being sent.\n\nAnother important aspect is that a dedicated service can be implemented based\non multiple objects. For example a mode command can be accepted by a \u201cDevice\nHandler\u201d-object, which takes care of the equipment mode transition from \u201cOn\u201d to\n\u201cOff\u201d and vice versa, which may include power-up, configuration and simple\nfunctionality tests. The accepted mode command is generic, so a configurable\nsubsystem object (Fig. 3.3), which has a number of \u201cmode objects\u201d attached can\nchange their modes with the help of predefined mode tables (as it was explained in\n\nFig. 3.4 Command/reply flow through the OBSW. \u00a9 IRS, University of Stuttgart\n\n3 Data Handling and Control Concept 79\n\n\n\nSect. 2.1.12 and visualized in Fig. 2.5 and Table 2.1). Execution of a sequence of\nmode tables can also be initiated by a mode command, so that subsystems can be\ncommanded by other subsystems, allowing hierarchical grouping of the objects (see\nFig. 3.4 and Table 2.1). As a result, most typical standard Flight Procedures (Chap.\n15)\u2014like for transiting from the satellite Idle Mode to a Target-pointing Mode\u2014\nonly require a single mode command to the top-level system object.\n\nThe OBSW is designed in UML, coded in C++. Some of its code objects are\n\u201cvisible\u201d to the operator\u2014meaning commandable from ground\u2014while others are\nperforming their functionality out of the operator\u2019s accessibility. The latter class of\nobjects serve to build the functional framework of the code, supply inherited fea-\ntures to subclasses or control the software dynamics. Such inaccessible elements of\nthe code will not be treated further in the frame of this Flight Operations Manual but\nin [134]. Each object has a unique identifier, the \u201cobjectID\u201d. The visible objects are\nlisted in Sect. 3.2.8.\n\nObjects receive commands which trigger various actions. Commands are\ngrouped together into interfaces. If an object implements an interface, it is able to\nreceive all of the commands that are defined in this interface. Objects can imple-\nment an arbitrary number of interfaces.\n\nSome of the most important interfaces are:\n\n\u2022 HasModesIF This interfaces declares that an object has a mode and a submode.\nIt receives commands to change and read the current mode and submode. The\nmode is used to change the behavior of a periodically working object, while the\nsubmode optionally specifies parameters for the mode.\n\n\u2022 HasHealthIF This interface declares that an object has a health state. It receives\ncommands to set and read the health state.\n\n\u2022 DeviceHandlerIF This interface declares an object that handles communications\nwith a device connected to the I/O-Board of the OBC. It receives various\ncommands related to the monitoring, interception and insertion of commands\nfrom and to the device.\n\n\u2022 HasMemoryIF This interface declares an object that manages some sort of\nmemory (e.g. TM packet stores). It receives commands to read, write and verify\nthis memory.\n\n\u2022 AcceptsTelecommandsIF This interface declares an object that is able to parse\nPUS Telecommands. It receives a commands to parse it.\n\n3.2 OBSW Object Types\n\nThe objects of the OBSW can be grouped into types according to common inter-\nfaces they implement and the function that they perform. While all objects of a\ncertain type implement the common interfaces, it is possible that individual objects\nimplement additional extended interfaces (Fig. 3.5).\n\n80 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\n\n\nOne example is the device handler of the star tracker. It is of the type device\nhandler. As the selected star tracker type is able to directly command via PUS\ntelecommands and telemetry [61], its device handler additionally implements the\nHasMemoryIF and AcceptsTelecommandsIF to allow changing of configuration\nvariables and sending PUS commands directly to the device.\n\n3.2.1 Service Objects\n\nService objects provide the interface to the ground. As example refer to the PUS\nService 3 Housekeeping Service Handler \u201cHK Srv. Hdlr.\u201d\u2014colored in orange\u2014in\nthe upper right of Fig. 3.4. Inside the OBSW this object is called\nPUS_HK_SERVICE. These service objects accept telecommands and generate\ntelemetry replies which are forwarded to ground. Each PUS Service type imple-\nmentation on board is represented by one service object.\n\nThese service objects extract the data from the PUS packets, check the recipient,\nidentified by its object-ID and forward the request to the addressed target object. The\ntarget executes the request and reports all significant execution steps, which includes\nfailure or completion, to the service object. Depending on the service either the same\nor another service object transforms the reports into PUS verification or house-\nkeeping messages. Service objects implement the AcceptsTelecommandsIF to be\nable to receive telecommands.\n\n3.2.2 Device Handler Objects\n\nDevice handler (DH) objects handle the communication with devices attached to\nthe OBC. During nominal operations, the handlers are commanded from ground\ninstead of the devices themselves so that the actual protocol used by the devices is\nhidden from the operator through a common commanding approach. Device han-\ndlers also collect telemetry from the devices on a regular basis and write it to the\ncommon datapool.\n\nFig. 3.5 Interfaces, types and objects. \u00a9 IRS, University of Stuttgart\n\n3 Data Handling and Control Concept 81\n\n\n\nDevice handlers implement the HasModesIF and by standard offer the five\nmodes, described in Fig. 3.6. Submodes are specific to individual devices. Device\nhandler also implement the DeviceHandlerIF with a set of available commands to\nsend a specific command to the device or to read specific telemetry from the device\nwhich is then stored in the common datapool. There exists also a set of commands\nto monitor the connection between the device handler and its device.\n\nFor the PUS services used for commanding dedicated device mode transitions\nplease refer to the detailed explanations in Sect. 2.4.\n\nOn Mode\nIn this mode a device (e.g. a reaction wheel) is switched on, fully configured and\nready to perform its tasks. The device is commanded to be passive, which means\nthat actuators are commanded to zero torque and sensors are not polled. Also, no\nroutine communication is performed.\n\n\u2022 This mode can be commanded from all modes from except Error On.\n\u2022 If this mode is commanded from Off mode, the handler will command the\n\nPCDU to switch on the switches necessary to power the device and to perform\nthe boot-sequence necessary to make the device ready for full operation.\n\n\u2022 If this mode is commanded from any other mode, the device will be set to be\npassive.\n\n\u2022 In On mode, service (2,130) direct TCs (see Sect. 2.4) are accepted and\nexecuted.\n\n\u2022 If a device handler has reached the On mode successfully, there has always been\na basic successful communication between the handler and the device. Thus\ncommanding a device handler from Off to On mode and checking for success,\ncan be used as a simple functional test of the device.\n\nFig. 3.6 Device handler\nmodes. \u00a9 IRS, University of\nStuttgart\n\n82 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nOff Mode\nIn this mode, the device is not powered. The Off mode can be commanded from all\nother modes.\n\n\u2022 If a device handler is set to off mode, it shuts down the device nominally in case\nwhere the device is still On, and it commands the PCDU to deactivate the\ndevice\u2019s power supply.\n\n\u2022 Only service (2,131) raw device TCs (see Sect. 2.4) are accepted in this mode.\n\nNormal Mode\nIn Normal mode, the device handler continuously submits commands to the device.\nACS actuators are commanded to the torque requested by the controller and both\nsensors and actuators are polled on a regular basis and their telemetry is written to\nthe OBSW datapool.\n\n\u2022 This mode can only be commanded from On mode and Raw mode.\n\u2022 In Normal mode, service (2,130) TC (see Sect. 2.4) are accepted and executed.\n\nError On Mode\nThe Error-On mode is entered if the device handler is unable to switch off the\ndevice during the transition to Off mode.\n\n\u2022 The only way to leave this mode is to switch off the device by telecommand and\nto send send an Off mode command.\n\n\u2022 If a switch can not be switched off anymore but the device handler still must be\nset to Off mode, the switch state in the datapool can be overwritten temporarily\nas this is the value checked by the device handler to get the switch state. This\ncan be done by Service (2,131) raw TCs.\n\nRaw Mode\nThe Raw mode is used for direct device commanding from ground. The device\nhandler only serves as a router. Raw device commands of Service (2,128) are sent\nto the device and the command replies are sent back to ground directly as Service\n(2,129) telemetry (see Sect. 2.4). This functionality can be used for all devices in\ncontingency situations or for test purposes.\n\n\u2022 This mode can be commanded from On, Off and Normal mode.\n\u2022 If Raw mode is commanded from On or Normal mode, the handler does not\n\nperform any operation but setting actuators to zero torque so that the state of the\ndevice is left unchanged.\n\n\u2022 If Raw mode is commanded from Off mode, the device handler does not per-\nform any operation without dedicated telecommand (also no power-up the\ndevice). This is intended for contingency cases requiring manual boot-up of a\ndevice.\n\n\u2022 The handler does not accept any (2,130) TCs in Raw mode.\n\n3 Data Handling and Control Concept 83\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nDevice Handler Internal Data\nA deviceHandler stores knowledge about the physical device it represents. This\nincludes:\n\n\u2022 communication protocol used by the device\u2014start bit, stop bit, message length,\nCRC\n\n\u2022 calibration functions for measurement values of the device\n\u2022 the specific number of its power switch and fuse in the PCDU\n\u2022 frequency of HK data polling\n\u2022 boot up sequence of the device\n\u2022 boot up duration of the device\n\u2022 device modes\n\u2022 device health status.\n\nBy storing the ID of the device\u2019s power switch in the PCDU, the process of how\nto switch the device on/off is stored in this device handler. The mechanism of\npowering off a device by triggering the switch in the PCDU is such that a command\nis sent to the corresponding device handler object. The device handler performs the\ndevice preparation for shutdown and handshakes the electric power-line opening\nwith the PCDU.\n\nThis also works in failure cases. For example FDIR can send a healthCommand()\nwith the target health state to the device handler. Figure 3.7 provides an illustration\nfor this mechanism. The currently implemented health states (healthFlag) are:\n\n\u2022 HEALTHY\u2014nominal operation is possible if activated.\n\u2022 PASSIVE\u2014the device has a passive state and is currently in this state.\n\u2022 DEACTIVATED\u2014the device is healthy, but is switched off.\n\u2022 EXTERNAL_CONTROL\u2014the device is under control of the ground operator.\n\nIt ignores commands from the S/C system. The ground operator is responsible\nfor the device.\n\n\u2022 FAULTY\u2014there have been malfunctions (might be one or more) of a device\nwithin a certain period of time for FDIR to decide to initiate a reboot of the\ndevice.\n\n\u2022 PERMANENTLY_FAULTY\u2014there have been malfunctions (might be one or\nmore) of the device within a certain period of time for FDIR to decide that the\ndevice must not be used any further. Recovery is only possible through ground\ninteraction.\n\nFor every device, a healthFlag is stored in the OBSW datapool (see Fig. 3.1)\u2014\ncalled datapool in the SW\u2014and in the Spacecraft State Vector on the I/O-Boards\u2014\nsee later in Sects. 4.3.2 and 10.2.11. This is required so that after a software reboot\nthe system can be made aware of which device has been marked as\nPERMANENTLY_FAULTY before, to avoid unsing this device again. Devices\nthat have been marked as PERMANENTLY_FAULTY by FDIR or ground can\nonly be reset to HEALTHY through ground interaction.\n\n84 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nEvery device handler has an interface to the PCDU device handler. This inter-\nface allows for a device handler to initiate a switchCommand() to the PCDU that\ncontains the device\u2019s switch ID. This technique is also depicted in Fig. 3.7. During\nnominal operation a standard command is sent to the device for HK polling. Only\nwhen the health state changes, a switchCommand() is sent to the PCDU. The\ncommand is sent to the PCDU device handler to forward the command to the\nPCDU and initiate the change of the switch\u2019s status On ? Off or vice versa.\n\nAs consequence of a mode transition, several devices might be switched On or\nOff at the same time. The according device handlers will all send a separate\ncommand to the PCDU device handler. However, the PCDU can only process one\ncommand per cycle. Therefore, it will take several cycles until all desired devices\nare switched On/Off.\n\nIt is intended that a device handler does not store information about the power\nconsumption of its device. All information about power consumption throughout\nthe system is stored in the power controller object.\n\nFig. 3.7 Device health command\u2014controlling of devices. \u00a9 IRS, University of Stuttgart\n\n3 Data Handling and Control Concept 85\n\n\n\n3.2.3 Assembly Objects\n\nAssembly objects implement the HasModesIF. The mode of an assembly reflects\nthe mode of the underlying device handlers. Thus, assemblies offer all of the modes\nof device handlers except for the Error-On mode.\n\nAssemblies store information about the redundancy approach of their devices and\nhandle /hide redundancy switching operations, which is encapsulated in the\nassembly. In case where one device fails and is switched off by FDIR or ground,\nthe corresponding assembly checks whether its current mode can be kept with the\nremaining devices, and if so the current operation is continued. Otherwise, it signals\nthat it cannot keep the mode which will lead to the system switching off the assembly\nand the devices. This might lead to a system mode switch as well. The mode of\nan assembly reflects the mode of the underlying device handlers. Thus, assemblies\noffer all the modes of device handlers.\n\nFigure 3.8 is an example for the behavior and function of two assemblies\nillustrating their redundancy handling. The RW system is based on a 3-out-of-4\nredundancy concept. Four wheels are physically assembled in a tetrahedron con-\nfiguration. This allows for the compensation of one RW in case of a failure.\n\nThe assembly is in nominal operational mode when all four RWs are available.\nThe availability of the RWs is verified in every ACS cycle. If one RW is marked as\nnon-healthy and is deactivated, the assembly will verify whether there are still three\nRWs available to continue the current operation. The S/C System object itself is not\nallowed to reactivate a device marked as non-healthy. But during the operation with\nthree RWs, ground interaction could lead to resetting the health state of the faulty\none to HEALTHY.\n\nIf another RW fails, the assembly will check again whether at least three RWs\nare available. If this is not the case, the assembly will report that the current mode\ncannot be continued and will automatically deactivates its devices, namely all\nwheels.\n\nIn Sect. 3.2.2 and Fig. 3.7 the status EXTERNAL_CONTROL has been intro-\nduced. This means that the device is ignored by all automatic processes in the\nsystem. This state can be applied by ground for device tests and could lead to\nresetting its healthFlag to HEALTHY.\n\nDepending on the mode, only one working device is required for the\nGPS_Assembly in the example. So the assembly steps through the devices until\nfinding a healthy and activated one. If no healthy device is found, it signals that it\ncannot keep the current mode and the assembly will be switched off.\n\nNote: The event CANT_KEEP_MODE can be generated by different objects.\nSeparation between the events, or determination of a reaction, can be achieved by\nexamining the contained event parameters, for example the ID of the reporting\nobject.\n\n86 U. Mohr et al.\n\n\n\n3.2.4 Controller Objects\n\nThese objects are on a similar level as assemblies and monitor and control the\nbehavior of subsystems. The monitoring and processing of TM parameters is\n\nFig. 3.8 Example for assembly behavior\u2014GPS and RW system. \u00a9 IRS, University of Stuttgart\n\n3 Data Handling and Control Concept 87\n\n\n\nperformed within the controllers and control algorithms like the attitude control or\nthe battery State-of-Charge estimation are executed here.\n\nController objects implement the HasModesIF and offer three modes:\n\n\u2022 Off: The controller does not perform any action\n\u2022 On: The controller performs its nominal operation but does not give any\n\ncommanding output\n\u2022 Normal: The controller performs its nominal operation\n\nThere might be additional modes for some of the controller objects. Controller\nobjects implement the HasMemoryIF to allow access to configuration values.\n\nController (CTR) objects contain knowledge about the (mathematical) mecha-\nnisms that are required to keep the satellite in operation. Basically, they make\ncontrol decisions and initiate commands based on sensor measurement inputs.\n\nFrom software perspective, the controller objects are on a similar level as\nassemblies and monitor/control the behavior of subsystems. In Fig. 3.9 an abstract\nexample for a controller object is shown with the three steps that are executed by\nthese objects.\n\nAs a first step, input from sensors is monitored and checked for validity. This\naction will be detailed in the FDIR mechanisms of the different subsystems in\nSects. 10.5\u201310.8. Some sensor input will need calibration before further usage, e.g.\ntemperatures are provided in raw value, calibrated Centigrade units, or even as\nelectrical resistance. Equal measurements from redundant sensors are correlated\n(sensor fusion) so that all further steps have one common set of input values to\nwork with.\n\nIn a second step, the controller verifies whether it has valid input for all cal-\nculations that its current mode comprises. The execution of the control algorithms\nwill be performed and torque, speed or On/Off settings will be obtained and stored\nin the controller. Depending on the required visibility of these data in the software,\nthey will be stored in the central datapool, or internally in the controller. They are\naccessible from ground by requesting the according TM packet. If the availability of\nvalid sensor information is not sufficient to execute the functions, the controller will\ntrigger a CANT_KEEP_MODE event.\n\nFig. 3.9 Example content of a controller object. \u00a9 IRS, University of Stuttgart\n\n88 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nThe final step of a controller uses the results of the control algorithm and\ngenerates the required commands for the actuator devices. The commands are\nstored in the datapool where actuator device handlers have access to them.\n\n3.2.5 Subsystem Objects\n\nSubsystem objects (see also Fig. 3.3) are abstract objects used to aggregate other\nobjects into a hierarchical tree. Subsystem objects can group controllers, assem-\nblies, device handlers (where no assembly exists) and other subsystems as their\nchildren.\n\n\u2022 On this level, mode management for the spacecraft subsystem modes is\nperformed.\n\n\u2022 Subsystem objects are one level above the subsystem controller or assembly\nobjects. E.g. the TCS_Subsystem object is in the hierarchy above the\nTCS_Controller.\n\nSubsystem objects will be commanded by one central system object.\n\n3.2.6 Top-Level System Object\n\nIn the OBSW there exists one top-level system object with the ID = 0x1000100\nwhich represents the mode interface of the software (see also Fig. 3.3). It is called\nSystem object. It is the root element of the hierarchical mode tree and handles mode\ntransitions of the complete satellite. It corresponds to the \u201cKernel Root\u201d layer in\nFig. 3.1.\n\nCommands or mode transitions are hereafter often given in diagrams as\nSystem::function(). System::Boot() commands System to execute the Boot()-function.\n\nBoot() in this case does not mean that the software is booted. This particular\nfunction attempts to convert the satellite system into a known and reasonable\nstarting state, that the software is aware and in control of. The system object will be\ncommanded from ground or by FDIR if a mode transition is to be performed.\n\n3.2.7 Object Execution\n\nIn a procedural real-time software, different functions of a software are usually\nencapsulated in separate processes (threads or tasks\u2014depending on the technical\nrealization), which are executed quasi-parallel (or truly parallel in multiprocessor\nsystems).\n\n3 Data Handling and Control Concept 89\n\n\n\nFor the object-oriented FLP OBSW, this concept is used as well, but with the\nvariation that the objects themselves provide a standardized function, called\nperformOperation(), which is executed periodically. Underlying, standard RTEMS\ntasks are used, as further described later in Sect. 3.4.\n\n3.2.8 OBSW Object-IDs and PRIDs\n\nOBSW objectID variables are used to identify each object (devices, OBSW ele-\nments or controllers) of the satellite system. object-IDs are four byte values, typi-\ncally given in a hexadecimal form. The first byte represents the type/level of the\nobject (device handler, subsystem,\u2026). The second and third byte provide infor-\nmation to identify the specific device. The last byte is used as a reference counter\nfor child objects of a given parent object, e.g. for temperature sensors in the TCS.\nThe object-IDs are listed in Table 3.1.\n\nNote: The possible range of objectID is limited by the identification mechanism\nfor TM packets in the mission control system. The maximum possible ID is\n231 \u2013 1 = 0x7FFFFFFF. The maximum value used in the current state is\n0x55FFFFFF.\n\nTo facilitate the reading of object-IDs for an operator, the numbers are selected\naccording to the name of the objects and the ASCII number of the object\u2019s first\nletter if possible. Temperature sensors and heaters are considered as child instances\nof the TCS_Controller. They will not be represented by their own objects since they\ndo not offer any complicated functionality. The TCS Controller will report in their\nstead. They need particular object-IDs, however, because they are assigned with a\nhealth state. The same is true for fuses and switches being considered as children of\nthe Power Supply System (PSS).\n\nFor the IO- and CCSDS-Boards there exist two \u2018Handler\u2019 objects and two\n\u2018RMAP\u2019 objects. The reason for this is that the \u2018Handler\u2019 instance is derived from\nthe common deviceHandler base class, while the SpW communication between\nOBC Processor-Board and peripheral OBC boards requires additional functions.\nThe base class stores the PCDU switch number and mode information as well as the\ndefinitions of basic failure events. For the communication over SpW and RMAP\nprotocol, a separate object is defined, containing the necessary information and\nreport functions about the hardware links, the latter being encapsulated in a further\nobject. PUS-Services have their own ID range as well as system objects.\n\nIn commercial spacecraft missions, oftentimes process identification numbers\n(PRIDs) are used to address distinct processes. For FLP, PRIDs will not be used.\nProcesses or services can be addressed by their respective object-ID.\n\n90 U. Mohr et al.\n\n\n\nTable 3.1 OBSW object-ID ranges\n\nLast ByteFirst ByteInstanceObject\n\nIICSA=d56=(14x0ylbmessA \u2018A\u2019)\n\nRW 0x41 0x00 0x01 0x00\n\nMGM 0x41 0x00 0x02 0x00\n\nMGT 0x41 0x00 0x03 0x00\n\nFOG 0x41 0x00 0x04 0x00\n\nGPS 0x41 0x00 0x05 0x00\n\nTTC_RX 0x41 0x00 0x06 0x00\n\nTTC_TX 0x41 0x00 0x07 0x00\n\nSTR 0x41 0x00 0x08 0x00\n\nIO 0x41 0x01 0x00 0x00\n\nPLOC 0x41 0x01 0x01 0x00\n\nDDS 0x41 0x01 0x02 0x00\n\nCCSDS 0x41 0x01 0x03 0x00\n\n=d76=(34x0rellortnoC \u2018C\u2019)\n\nACS 0x43 0x41(\u2018A\u2019) 0x00 0x00\n\nCore 0x43 0x43 (\u2018C\u2019) 0x00 0x00\n\nFDIR 0x43 0x46 (\u2018F\u2019) 0x00 0x00\n\nPSS 0x43 0x50 (\u2018P\u2019) 0x00 0x00\n\nFuses 0x43 0x50 0x01 0x00.. 0x1A\n\nSolar Panels 0x43 0x50 0x02 0x00 \u2026\n0x03\n\nBus Power\nSensor\n\n0x43 0x50 0x03 0x00\n\nBatt. String and\nSensors\n\n0x43 0x50 0x04 \u2026\n0x06\n\n0x00 \u2026\n0x01\n\nTTC 0x43 0x52 (\u2018R\u2019)\n(Radio)\n\n0x00 0x00\n\nTCS 0x43 0x54 (\u2018T\u2019) 0x00 0x00\n\nTemp. Sensors 0x43 0x54 0x00 0x01 \u2026\n0x64\n\nHeater 0x43 0x54 0x00 0x71 \u2026\n0x76\n\nDevice\nHandler\n\n0x44 (=68d=\u2018D\u2019)\n\nPST 0x44 0x00 0x00 0x00\n\nTTC RX N 0x44 0x00 0x06 0x00\n\nTTC RX R 0x44 0x00 0x07 0x00\n\nTTC TX N 0x44 0x00 0x08 0x00\n\nTTC TX R 0x44 0x00 0x09 0x00\n\nSTR 0x44 0x00 0x10 0x00\n\n(continued)\n\n3 Data Handling and Control Concept 91\n\n\n\nFOG 0x44 0x00 0x14 0x00\n\nRW 0 \u2026 3 0x44 0x00 0x15 \u2026\n0x18\n\n0x00\n\nMGM 0 & 1 0x44 0x00 0x1A &\n0x1B\n\n0x00\n\nMGT 0 & 1 0x44 0x00 0x1C &\n0x1D\n\n0x00\n\nGPS 0 \u2026 2 0x44 0x00 0x1F \u2026\n0x21\n\n0x00\n\nPCDU 0x44 0x00 0x32 0x00\n\nI/O-Board 0x44 0x45 0x00 &\n0x01\n\n0x00\n\nIO RMAP 0x44 0x46 0x00 &\n0x01\n\n0x00\n\nCCSDS- Board 0x44 0x47 0x00 &\n0x01\n\n0x00\n\nCCSDS RMAP 0x44 0x48 0x00 &\n0x01\n\n0x00\n\nPL Device\nHandler\n\n0x44 0x50 0x00 \u2026\n0xFF\n\n0x00 \u2026\n0xFF\n\nPLOC 0x44 0x50 0x00 \u2026\n0x06\n\n0x00\n\nDDS 0x44 0x50 0x00 \u2026\n0x0A\n\n0x00\n\nOSIRIS 0x44 0x50 0x0B 0x00 \u2026\n0x02\n\nAIS 0x44 0x50 0x0E 0x00 &\n0x01\n\nPAMCAM 0x44 0x50 0x0F\n\nMICS 0x44 0x50 0x10 0x00 \u2026\n0x03\n\nDeploy-ments 0x44 0x50 0x11\u2026\n0x12\n\nDOM 0x44 0x50 0x11\n\nDeployment\nMechanism\n\n0x44 0x50 0x12 0x00 &\n0x01\n\nPUS-\nServices\n\n0x50.. 0x52 0x00 0x00 \u2026\n0xFF\n\n0x00 \u2026\n0xFF\n\nSystem\nObjects\n\n0x53.. 0x55 0x00 \u2026\n0xFF\n\n0x00 \u2026\n0xFF\n\n0x00 \u2026\n0xFF\n\nLast ByteFirst ByteInstanceObject\n\nTable 3.1 (continued)\n\n92 U. Mohr et al.\n\n\n\n3.3 Observability Functions Provided by the OBSW\n\nThere are three default ways in which the FLP software provides observability to\nthe ground operator. These are:\n\n\u2022 Command verification packets\n\u2022 Cyclic housekeeping (HK) packets\n\u2022 Event packets\n\nThe first type indicates successful or failed execution of individual telecom-\nmands. HK packets are generated to observe periodically changing sensor and\ncontrol data and event packets report aperiodic activities and state changes.\n\n3.3.1 Command Verification\n\nThe PUS standard defines three stages of command verification:\n\n\u2022 Acceptance\n\u2022 Execution started\n\u2022 Execution step (n-times)\n\u2022 Completion\n\nIn the FLP software, each telecommand is formally checked before being routed\nto the destination service object:\n\n\u2022 During the step of formal checking, the acceptance report is generated.\n\u2022 All service objects that forward commands to other objects generate the \u201cexe-\n\ncution started\u201d report after checking the existence and availability of the object.\n\u2022 Depending on the interface, an object needs to report a certain number of\n\nintermittent steps when commanded. The service objects forward this infor-\nmation as \u201cstep\u201d reports and take care of proper step counting.\n\n\u2022 Every object reports successful or failed completion to the commanding one,\nwhich is also forwarded as \u201ccompletion\u201d report.\n\n\u2022 Thus, ground operators can precisely monitor execution of telecommands by the\ndestination object.\n\n\u2022 In case execution failed, a failure code is forwarded with the report which\nindicates the precise failure root cause.\n\n3.3.2 Cyclic HK\n\nCyclic data reporting is required only for values that change over time and whose\nchange is measured with an on-board sensor or calculated from sensor data\n\n3 Data Handling and Control Concept 93\n\n\n\non-board. Such data is stored in the datapool. Therefore, it is sufficient to make the\ncontent available to the HK Service.\n\nEvery element of the datapool\u2014identified by a unique parameter-ID\u2014can be\nreported in configurable housekeeping packets. For details on the housekeeping\nservice, please refer to Sect. 2.4.3.\n\n3.3.3 Event Messages\n\nIn the OBSW, Events\u2014in the sense of PUS Events\u2014are used to inform the system\nthat a failure has been detected or that a decision has been reached. Event Messages\nhave the format:\n\nThat means one event message contains a unique event identifier, the severity\nlevel of this Event (see below), the object-ID (see Sect. 3.2.8) of the reporting\nsoftware object, and two parameters to specify more details required for event\nhandling. The reporting software object might be the device handler representing\nthe faulty device itself, but also a software object that reports for a different device\n(for example if the TCS_Controller object reports a limit violation of a temperature\nsensor). In some of the diagrams later in this book, Events are displayed. The typing\nconvention is CAPITAL_LETTERS with underscore, and they might include\nadditional arguments in square brackets, for example EVENT\n[additionalInformation]. additionalInformation in most cases will be the object-ID\nof the reporting object. Events are either informational events, marked in black in\nflow diagrams of this document, or are failure events, marked in red.\n\nThe Packet Utilization Standard [13] defines four different levels of on-board\nEvents, namely normal progress Events, and low, medium and high severity\nwarnings. Event packets are generated by on-board processes identified by their\nobject-ID. If the Event telemetry is activated in the Event reporting service (see\nSect. 2.4.5), the Events are also downlinked as Service 5 telemetry with the sub-\nservice indicating the Event severity. The Event severity levels are used on the FLP\nplatform as follows:\n\nSeverity Level 0 (Normal Progress) Events shall indicate an information\nmessage initiated through nominal actions happening on board. They are generated\nto provide operational progress visibility for ground. Possible scenarios are:\n\n\u2022 Boot Event from software\n\u2022 Successful powering of the payload computer\n\n94 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\n\u2022 Successful mode change of the system or subsystems\n\u2022 Heater activation and deactivation for thermal control\n\nSeverity Level 1 (Low Severity) Events shall indicate that somewhere in the\nsystem a failure has been detected. The failure will be transmitted to FDIR for\nfurther investigations or isolation and recovery actions. This type of Event can be\nreported from any level of OBSW objects (device handlers, assemblies, subsystems,\netc.). Possible scenarios are:\n\n\u2022 communication failures with equipment\n\u2022 malfunction of heaters, sensors, etc.\n\nSeverity Level 2 (Medium Severity) Events will be generated by FDIR usually\nafter processing of (several) Severity Level 1 Events. Possible scenarios are:\n\n\u2022 A device has been switched off due to failures\n\u2022 A mode cannot be kept\n\u2022 Devices have been switched off due to low available power\n\nSeverity Level 3 (High Severity) Events will be generated by FDIR and\nindicate Events of the highest possible severity. Possible scenarios are:\n\n\u2022 Battery State-of-Charge is low,\n\u2022 Safe Mode needs to be activated,\n\u2022 FDIR cannot handle the Event and/or\n\u2022 Event is mission critical.\n\nThere will be Events, that will be processed, but cannot be handled by the\non-board FDIR. However, these will be classified again after processing. If they are\ndeemed not to endanger the system, they will not be processed any further on board.\nThey will be visible for the ground operator and according recovery steps are to be\nconducted by ground. If they are critical, they will be classified according to\nseverity and be reported to the ground separately. This will signal the significance\nof the Event to the operator.\n\n3.4 FLP Software Dynamic Architecture\n\nThis chapter outlines how CPU time is shared among the individual objects. Task\nmanagement was not reinvented, but has it\u2019s foundations in normal procedural task\nmanagement of the applied RTEMS operating system. On top of this, a framework\nto periodically execute individual objects is constructed.\n\n3 Data Handling and Control Concept 95\n\n\n\n3.4.1 Process/Task Management\n\nDifferent functions of a software are usually encapsulated in separate processes\u2014\nscheduled in parallel or pseudo-parallel, especially regarding multiprocessor plat-\nforms as of today. In RTEMS, these different processes are called tasks [81]. In the\nFLP OBSW logically separate processes have their own dedicated task. RTEMS\noffers several mechanisms to manage tasks. For scheduling, RTEMS utilizes the\n\u201cRate Monotonic Scheduling\u201d method.\n\nIn the FLP flight software, all tasks are executed periodically (see also Table 3.2)\nand have a priority proportional to their activation frequency, in accordance with\nthe rules for Rate Monotonic Scheduling (RMS). RTEMS also offers task pre-\nemption control to interrupt tasks through a task with higher priority. For\ninter-process communication via datapool, RTEMS semaphores are used to lock\nthe datapool while a task is accessing it. Details about task management,\nthread-safety and prioritization have been determined in [134].\n\nTable 3.2 Task timings of the relevant single object tasks\n\nObject NAME Task Id Priority\n[0-99]\n\nPeriod\n[ms]\n\nStack size\n[kB]\n\nPUS_VERIFICATION_SERVICE s01 50 400 2\n\nPUS_DEVICE_COMMAND_SERVICE s02 40 200 2\n\nPUS_HK_SERVICE s03 40 200 3\n\nPUS_EVENT_REPORT_SERVICE s05 25 200 3\n\nPUS_FUNCTION_SERVICE s08 25 800 2\n\nPUS_TIME_SERVICE s09 50 400 2\n\nPUS_OPERATIONS_SCHEDULING s11 25 1000 2\n\nPUS_MONITORING_SERVICE s12 25 1200 2\n\nPUS_STORAGE_AND_RETRIEVAL SrAR 25 1200 2\n\nPUS_TEST_SERVICE s17 20 2000 1\n\nPUS_MODE_COMMANDING s200 25 1200 2\n\nPUS_HEALTH s201 25 1200 2\n\nPUS_MODE_TABLES s202 25 1200 2\n\nCORE_CONTROLLER core 60 1000 1\n\nTCS_CONTROLLER tcsC 50 1000 1\n\nEVENT_MANAGER evnt 80 200 1\n\nDATA_POOL_ADMIN DP 40 1600 1\n\nPSS_CONTROLLER pssC 40 800 2\n\nACS_CONTROLLER acsC 40 200 2\n\nCOMM_CONTROLLER ttcC 40 2000 1\n\nPAYLOAD_CONTROLLER payC 40 2000 1\n\nDDS_CONTROLLER ddsC 40 5000 1\n\nFDIR_CONTROLLER fdC 50 100 1\n\nTC_PACKET_DISTRIBUTOR dist 50 400 1\n\n96 U. Mohr et al.\n\n\n\n3.4.2 Object Tasks\n\nAll software objects provide a performOperation() method, which is executed\nperiodically. Execution is managed with special ObjectTask classes that handle the\ninterface with the underlying RTEMS task features.\n\nIf the order of object execution is relevant, multiple objects may be executed in\none task in a pre-defined order (as depicted in Fig. 3.10). Also, if an objects is part\nof another object, the owner object may execute its part in its own\nperformOperation() call.\n\n\u2022 In the FLP OBSW it is not intended to quit a running task, i.e. tasks are started at\nboot and expected to run \u201cforever\u201d.\n\n\u2022 Also, neither period nor priority are intended to be changed at run-time in orbit,\nas their values are carefully determined by analysis and verified by tests against\nspacecraft simulator, EM equipment and FM hardware.\n\n\u2022 Safe concurrent access on global objects (e.g. datapool, healthtable) is ensured\nby locking the objects for short periods of time.\n\n\u2022 No external command activities are required for safe handling of global objects.\n\nAt the current state of the FLP Generation 1 OBSW implementation there is a\nlarge number of single object tasks, e.g. one for each single PUS Service, for\ncontrollers and for several system tasks. A future refinement may reduce the total\nnumber of tasks by consequently grouping related elements. Table 3.2 provides an\noverview of all object tasks in use.\n\nFig. 3.10 Execution of multiple objects in one task. \u00a9 IRS, University of Stuttgart\n\n3 Data Handling and Control Concept 97\n\n\n\nTable 3.3 lists all tasks that currently have more than one object assigned. Most\nof those are set up for performance reasons, i.e. to keep the execution delay between\ntwo objects small. Execution order is as listed in the table.\n\n3.4.3 Polling Sequence Table\n\nA special task in S/C software is the Polling Sequence Table (PST) which schedules\nall device communication that goes via the I/O-Board of the OBC. One device after\nthe other it executes the communication functions of the deviceHandler objects in a\npredefined order. For time optimization, device communication is designed such\nthat every device handler is executed twice within a communication cycle. During\nthe first execution a data request is submitted to the device, which in reality is sent\nto the I/O-Board and then is forwarded electrically from there on to the device. In\nthe meantime, other device handlers and tasks are executed. This allows for the\ndevice to have time to execute the command and to return the requested data to the\nI/O-Board, where it is stored in the corresponding device transmission buffer. Upon\n\nTable 3.3 Task with more than one assigned object\n\nTask Id Priority\n[0\u201399]\n\nPeriod\n[ms]\n\nStack\nSize [kB]\n\nObjects\n\nMEM 40 200 2 PUS_MEMORY_MANAGEMENT_SERVICE\nLOCAL_MEMORY_MANAGER\n\nStAF 50 100 3 PUS_PACKET_FORWARDING\nTM_STORE_EXEC\n\nccsdA 60 100 10 CCSDS_HANDLER_0\nCCSDS_HANDLER_1\nCCSDS_ASSEMBLY\n\nttcA 40 400 1 TTC_TX_ASSEMBLY\nTTC_RX_ASSEMBLY\n\nassy 40 400 1 FOG_ASSEMBLY\nGPS_ASSEMBLY\nMGM_ASSEMBLY\nMGT_ASSEMBLY\nRW_ASSEMBLY\nSTR_ASSEMBLY\n\npAss 40 400 1 PLOC_ASSEMBLY\nDDS_ASSEMBLY\n\nsubs 40 200 1 SYSTEM\nSUBSYSTEM_ACS\nSUBSYSTEM_TCS\nSUBSYSTEM_TTC\nSUBSYSTEM_PSS\nSUBSYSTEM_PAYLOAD\n\n98 U. Mohr et al.\n\n\n\nthe second device handler execution the data from the I/O-Board\u2019s transmission\nbuffer is polled and for evaluation in the device handler.\n\nFigure 3.11 illustrates the data flow and the timing of the PST in one commu-\nnication cycle. The process is described in the following steps:\n\n(1) The DHs are executed in the PST and, if in normal mode, generate a data\nrequest command that is collected by the RMAP driver. All DHs perform this\none after the other. All requests are collected by the RMAP driver.\n\n(2) In a \u201cdata burst\u201d the collected data requests are sent via RMAP and SpW\ninterface to the I/O-Board.\n\n(3) On the I/O-Board the requests are forwarded to the corresponding device\ninterface simultaneously, e.g. RW0 I/F or MGM0 I/F.\n\n(4) The I/F drivers send the requests via their electrical link to the devices. This\nhappens simultaneously, but may take different amounts of time depending on\nthe data rate of the I/F.3\n\n(5) After processing the command, the devices send back their response to the\nOBC.\n\n(6) For every device there is a transmission buffer on the I/O-Board that is used to\nstore the response data from the devices until the OBSW fetches the data.\n\n(7) After a period of 45 ms the OBSW RMAP driver collects the data via SpW\nand stores them in the RMAP buffer on the Processor-Board. All data\n\nFig. 3.11 Polling sequence table. \u00a9 IRS, University of Stuttgart\n\n3Example\u2014RW interface and MGM interface: Both interfaces are RS-422 standard. The RWs\nsupports a data rate of 9.6 kBit/s whereas the MGMs support 115.2 kBit/s.\n\n3 Data Handling and Control Concept 99\n\n\n\ninterfaces of the devices are fast enough. And the devices are confirmed to be\nquick enough, to provide a response within the latency period between request\nsend and data retrieval. Otherwise, a failure event will be reported by the\ncorresponding device handler.\n\n(8) After a total of 50 ms the PST executes the DHs again which one after the\nother retrieves the requested data from the RMAP buffer. Upon reception of\nthe device response, they evaluate the response and perform basic failure\ndetection as described in Sect. 10.4.\n\n3.4.4 Dynamic Scheduling\n\nThere is no fixed execution order for tasks. But, due to the nature of Rate\nMonotonic Scheduling, task execution is automatically ordered by priority, i.e. a\nhigh priority task will typically execute before a lower priority task.\n\nStill, passing on requests from the services to the executing objects introduces\ndelays in command execution (see Sect. 3.2.1). Depending on the arrival of a TC,\nworst case execution delay for a given object is the corresponding task\u2019s period,\nwhich is typically below 1 s, but may be up to 5 s for some slow responding\npayloads. However, there is no risk of nested delays, as commands are directly\nforwarded to the executing object.\n\nThe flight software supports reporting of task statistics to ground. This is\nmanaged by a function of the Core_Controller element of the\nCoreDHS_Subsystem.\n\n3.4.5 Modes versus Actions\n\nFor the OBSW dynamic architecture two types of dynamic processing must be\ndetermined. These are periodic mode execution on the one hand and sporadic action\nprocessing on the other (please also refer to Fig. 3.12).\n\nObjects in a given mode are cyclically scheduled and perform their computa-\ntional task in each cycle. An example are the low-level device handlers which\ncyclically poll the equipment TM and command TC to the equipment if applicable.\n\nBut also the main control applications, such as the thermal control, power\ncontrol belong to this type. The algorithms computed throughout the loop depend\non the mode the object is in, which is controlled by the subsystem mode. E.g the\nACS will compute different things in spacecraft Idle Mode compared to Target\nPointing Mode. Another example is the thermal control application. In sun-pointing\nIdle Mode it will control spacecraft heaters differently than in Nadir Pointing Mode.\n\nIn contrast to this periodic execution stand the actions. These embed control\nflows which are triggered on command and then process a sequence of steps. These\n\n100 U. Mohr et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nsequences correspond to \u201cOn-board Control Procedures\u201d (OBCP) in a conventional\nspacecraft. Depending on their individual implementation these sequences can\ngenerate start/end Events and can submit step counter TM during their processing.\n\nA typical application for this functionality is the payload control application (see\nalso Fig. 3.1). For each payload such individual control sequences are implemented\u2014\nfor example for acquiring images with a camera payload. In this example a number of\nsteps are necessary until such an image is stored on board.\n\n\u2022 Power status must be checked.\n\u2022 The payload compartment must be temperature stabilized.\n\u2022 The payload controller must be activated.\n\u2022 The PCDU must close the LCL to supply the camera with power.\n\u2022 Payload settings must be adjusted.\n\u2022 The platform pointing must be initiated and monitored.\n\u2022 The image acquisition must be started and stopped.\n\u2022 The raw image data eventually have to be compressed and stored.\n\nSuch a control flow can be initiated directly with a single command via ground\nTC. However such a flow also can be initiated via the sequence start being part of a\n\nFig. 3.12 Sequence-control and loop-control objects. \u00a9 IRS, University of Stuttgart\n\n3 Data Handling and Control Concept 101\n\n\n\nmission timeline which includes multiple operations of one or more payloads while\nthe satellite being out of ground visibility.\n\nThese actions are not limited to the payload control application. This means they\nalso can be used for other one-shot activities such as establishing ground contact\nwith the payload data downlink system. More details on control sequence features\nare provided in the individual subsystem control chapters later.\n\n3.5 Onboard Software Death Report\n\nThe death report (or in the the FLP terminology \u201cFatal Error Report\u201d) is stored in\nthe OBC PROM to be able to also store it, when no communication with the\nI/O-Boards is possible any more.\n\nWhen the OBC boots the next time after a death report was stored, the death\nreport will be reported as a high severity Event (RID 7803) through service (5,4). If\nthis happens during an orbit period without ground station contact, the death report\nEvent packet will be stored in the Event store on the I/O-Board and downloaded\nduring the Event TM dump at the next ground station contact.\n\nAdditionally, the last stored death report then is available from the datapool\nthrough service 3 HK TM. The information in the datapool is also available if the\nsoftware rebooted in between the fatal crash and the current boot.\n\nThe parameters in the datapool are:\n\n\u2022 Error code (the code describing the fatal error which lead to the crash).\n\u2022 Additional info for some error codes (usually 0).\n\u2022 A flag indicating whether the report is new. If the flag is \u201cold\u201d, the software\n\nreported the death report already during an earlier boot and rebooted at least\nonce since the error occurred.\n\n\u2022 A flag indicating if the error is internal or external (always internal with the\ncurrent implementation of FLP Generation 1 OBSW)\n\n\u2022 The error source (from the OS or from the OBSW)\n\nAs the Fatal Error Report information is then available in the datapool, the HK\ntelemetry packet SID 2602 can be activated which transmit the datapool internals to\nground as normal housekeeping TM.\n\nNote: This packet normally is deactivated since most of the datapool entries are\nrather static and the packet downlink consumes considerable bandwidth.\n\n102 U. Mohr et al.\n\n\n\nChapter 4\nCore Data Handling Subsystem\n\nJens Eickhoff, Rouven Witt and Bastian B\u00e4tz\n\nAbstract The first spacecraft subsystem\u2014the Core Data Handling Subsystem\n(Core DHS)\u2014is described in this chapter. As the FLP platform is based on the very\ninnovative concept of a Combined Data and Power Management Infrastructure\n(CDPI) instead on the classic 3 unit design of onboard computer, power control and\ndistribution unit and remote interface unit, this CDPI concept and its benefits are\nexplained first. Then the chapter describes the stepwise boot process of an\nFLP-based spacecraft after its separation from the launcher. The last part comprises\nthe onboard software elements and functions for control of the Core DHS\nsubsystem.\n\nJ. Eickhoff (&)\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\nR. Witt ? B. B\u00e4tz\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: witt@irs.uni-stuttgart.de\n\nB. B\u00e4tz\ne-mail: baetz@irs.uni-stuttgart.de\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_4\n\n103\n\n\n\nKeywords Combined data and power management infrastructure (CDPI) ? CDPI\nfailure detection, isolation and recovery ? OBC memories (PROM, RAM,\nI/O-Board persistent RAM) ? The satellite boot process after launcher separation ?\nCore DHS subsystem control\n\n4.1 On-Board Data Handling Subsystem\n\nThe FLP platform core data handling subsystem (Core DHS) is based on a specific\narchitecture of OBC and PCDU. As it was mentioned in Sect. 1.8 this infrastructure\nis called a Combined Data and Power Management Infrastructure (CDPI)\u2014see also\nFig. 1.7 and [47].\n\nThe overall system control for nominal cases is performed by the OBSW which\nis described in Chap. 3 and for non nominal cases by the reconfiguration functions\nand emergency function of the CDPI Combined-Controller for OBC and PCDU\nsubunits\u2014see Sect. 10.2.\n\nThe top-level satellite mode control is performed by the system object in the\nOBSW (see Sect. 3.2.6), the control algorithms, control of the equipment assem-\nblies and of the individual devises is performed by corresponding sub-objects all\nexplained in Chap. 3.\n\nThe treatment of non-nominal operational cases of the Core DHS\u2014such as\nOBSW reboots or OBC hardware reconfiguration or OBSW/power related topics\u2014\nare treated in the Sects. 10.2 and 10.3.\n\nHere the CDPI hardware shall be explained in more detail and subsequently the\nmain OBSW objects which control/monitor the hardware. As it is a Combined Data\nand Power Management Infrastructure also some topics related to the boot process\nafter launcher separation are treated in this chapter.\n\n4.2 Combined Data and Power Management\nInfrastructure\n\nA CDPI is a logical merge of a classic Onboard Computer (OBC) and a Power\nControl and Distribution Unit. The main features are:\n\n\u2022 The OBC is designed for single redundancy of all its subunits. Therefore each\nprinted circuit board (PCB) type is available in two instances and all OBC\ninternal data interfaces between its boards are cross-coupled.\n\n\u2022 The first OBC board type is the power supply board, which provides the 3.3 V\npower supply to the individual PCBs and which itself is coupled to the 19\u2013\n25.5 V satellite power supply from the PCDU. The OBC Power-Board in\naddition performs the routing of some OBC Processor-Board interfaces to the\n\n104 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\noutside of the box to the satellite skin connector, namely the SIF, the JTAG-I/F,\nthe line-in of the 1 Hz GPS PPS strobe and the line-out of the star tracker PPS\nstrobe.\n\n\u2022 The second board type is the Processor-Board, a so-called Single Board\nComputer (SBC), since it comprises not only the CPU, but also non-volatile\nmemory for boot loader, operating system and Onboard Software (OBSW) boot\nimage, as well as volatile RAM for running the OBSW. Packet stores for OBSW\nhousekeeping data, for the S/C state vector and the S/C configuration vector are\navailable on the next board type, the so-called I/O-Boards.\n\n\u2022 The I/O-Boards are coupled to the Processor-Boards via SpaceWire interfaces\nand serve for bridging to all types of lower level digital interfaces of S/C\nonboard equipment. So all onboard units providing interface types like UART,\nRS422 or others are coupled to the I/O-Boards and the Processor-Board can\naccess their data via its SpaceWire interface (see also Fig. 1.6).\nThe I/O-Board design is based on a radiation tolerant FPGA with an according\nIP Core which is accessed via SpaceWire from the Processor-Board. And sec-\nondly it is based on according driver ICs for each type of digital I/O interface to\nconnected spacecraft equipment.\nSince this approach requires some buffers and memory chips on the board\nanyway, these boards are designed to handle the storage of OBSW house-\nkeeping data, the S/C state vector and the S/C configuration vector via additional\nmemory and according enhanced IP Core functions.\n\n\u2022 The fourth type of boards are the CCSDS protocol decoder/encoder boards (or\nCCSDS-Boars for short) which are also coupled to the Processor-Boards via\nSpaceWire interfaces and on the other side are interfacing the spacecraft\u2019s\ntransceiver units (see also Fig. 1.6). These boards perform the low-level\ndecoding of the uplinked telecommands and the low level encoding of the\ntelemetry to be downlinked during ground station visibility.\nThe approach for these boards was to use the identical PCB and FPGA as for the\nI/O-Boards, and to just equip the CCSDS-Boards with only a limited number of\nexternal interfaces, namely those to the transceivers, to the PCDU for High\nPriority Commands (HPC) and those for cross-coupling of the Command Link\nControl Word (CLCW) interfaces. Obviously these CCSDS-Boards comprise a\ndifferent IP Core since they perform a completely different task.\nThe CCSDS-Boards subsystem-wise belong to the Telemetry and Telecommand\n(TTC) subsystem. More details on reading telecommands from the receivers into\nthe OBSW and vice versa writing TM from OBSW to the transmitters therefore\ncan be found in Chap. 6.\n\nThe full technical specification of the FLP Generation 1 CDPI is [47]. When\nlooking at the above mentioned design paradigms, a reader who is familiar with\nclassic OBC design immediately will identify some elementary OBC functions to\nbe missing in the so far described board types. These functions have been imple-\nmented through a sort of functional merge of OBC and PCDU and they will be\nexplained in the following sections.\n\n4 Core Data Handling Subsystem 105\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\n\n\n4.2.1 The PCDU as Analog RIU\n\nAlready at begin of the OBC development a PCDU from Vectronic Aerospace,\nBerlin, was preselected for satellite power-bus management. This family of PCDUs\nis equipped with relatively performant microcontrollers and with analog measure-\nment functions for current and voltage measurement and with according functions\nfor TM reporting to the OBC. More details can be found in Sect. 5.5.\n\nThus part of classic OBC functions such as the tasks of\n\n\u2022 analog current measurement,\n\u2022 voltage measurement and\n\u2022 parameter analog to digital conversion\n\nfor the analog power lines and also for all analog sensor interfaces\u2014as e.g. thermistor\nand sun-sensor readings\u2014is implemented as PCDU function in this OBC/PCDU\nco-design. Thus in the CDPI now the PCDU takes over these tasks instead of a\nRemote Interface Unit (RIU) in classic OBC design (see also Sect. 5.5.4.1).\n\n4.2.2 A Combined-Controller for Power and DHS FDIR\n\nIn a classic unit architecture on board of a satellite three controllers implement the\nFailure Detection, Isolation and Recovery (FDIR) functionality, namely the OBC\u2019s\nReconfiguration Unit [140] and as subunit the OBC\u2019s Command Pulse Decoding\nUnit (CPDU) [140] as well as the PCDU\u2019s internal controller IC. These elements\nare typically implemented without being based on onboard software but either as\npure electronic circuits or as FPGA or ASIC implementation.\n\nThis implies that the spacecraft flies three controllers which need to be highly\nreliable and thus require according design and test effort. The basic idea behind the\nCDPI patent affiliation [39, 40] is to implement only one FDIR controller for both\ndata handling FDIR and power FDIR, reconfiguration and emergency functions\u2014\nthe patent cites it as a \u201cCombined-Controller\u201d. As this controller covers FDIR for\nboth data handling and power is of no relevance, whether it is mounted physically\ninside the OBC housing or the PCDU housing or even in a common housing of\nboth.\n\nThe FLP Generation 1 based \u201cFlying Laptop\u201d satellite from the University of\nStuttgart is the first spacecraft to fly such a CDPI architecture with a\nCombined-Controller. In this first implementation the Combined-Controller phys-\nically resides in the PCDU housing and is an implementation of the standard\nVectronic Aerospace PCDU controller with enhanced firmware functions defined\nby the Stuttgart FLP team and implemented by Vectronic Aerospace.\n\nIn normal operational cases the OBSW can still command the \u201cPCDU con-\ntroller\u201d\u2014i.e. the Combined-Controller\u2014to switch on/off spacecraft equipment\npower lines. The reconfiguration is triggered by the Combined-Controller either via\n\n106 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\nsoft-reset command lines to the individual OBC subunits (e.g. CPU) or via power\nresets respectively via power-down of the defective unit and power-up of the\ncomponent\u2019s redundancy.\n\nAs example the Combined-Controller (in the PCDU in the current implemen-\ntation example) can separately power each OBC decoder/encoder board, each\nProcessor-Board with CPU, NV-RAM, RAM, clock module and finally also each\nOBC I/O-Board (Fig. 4.1).\n\n4.2.3 Completeness of System Architecture\n\nWith this system design approach for the Combined Data and Power Management\nInfrastructure all necessary flight relevant functions are covered (see also [140])\u2014\nalthough they are not all allocated to the classic boards or component:\n\n\u2022 OBC power supply -> on OBC Power-Boards\n\u2022 OBC processor and internal data-bus -> on OBC Processor-Boards\n\u2022 OBC memory\u2014non volatile for boot loader and operating system and OBSW\u2014\n\nand volatile as work memory -> on OBC Processor-Boards\n\u2022 OBC packet stores for Housekeeping Telemetry (HK TM), Spacecraft State\n\nVector -> on I/O-Board\n\nMemory A \n\nMemory B \n\nData \nBus \n\nCtrl A \n\nData \nBus \n\nCtrl B \n\nCPU A \n\nCPU B \n\nDecoder \nEncoder \nBoard A \n\nDecoder \nEncoder \nBoard B \n\nBattery \n\nSolar \nArray \n\nTrans- \nceiver \n\nPwr \nElectronics \n\nDecoder Pwr Core Pwr \n\nPwr Bus A \nPwr Bus B \n\nLCLs/FCLs \n\nOnboard \nComputer\n\nPower Control & Distribution Unit \n\nBus, I/O Pwr \n\nCombined \nController B \n\nCombined \nControllerl A \n\nData   Bus A \n\nData   Bus B \n\nFig. 4.1 Combined data and power management infrastructure. \u00a9 Airbus DS\u2014see [39]\n\n4 Core Data Handling Subsystem 107\n\n\n\n\u2022 OBC digital RIU function\u2014coupling of all non SpaceWire digital equipment\nI/O to the OBC -> on I/O-Board\n\n\u2022 Interface to the spacecraft transceivers decoding TCs and encoding TM -> on\nCCSDS-Boards\n\n\u2022 OBC analog RIU functions\u2014coupling of all analog interface control and analog\nparameter measurements to the OBC -> implemented in PCDU and\ncommanded/controlled from OBC via OBC-PCDU UART interfaces.\n\n\u2022 OBC reconfiguration functions -> implemented in the Combined-Controller and\nin this implementation realized by the PCDU controller with enhanced firmware.\n\n\u2022 The OBC High Priority Command (HPC) interface functionality to implement\nimplicitly the functions of an OBC\u2019s CPDU -> implemented in the\nCombined-Controller firmware and accessible through additional UART inter-\nfaces via the OBC CCSDS-Boards\n\n\u2022 Bus power management functions -> implemented in the PCDU\nCombined-Controller\n\n\u2022 Equipment power supply switching and overvoltage/overcurrent protection ->\nimplemented in the PCDU Combined-Controller\n\n\u2022 Power-bus undervoltage FDIR functions (DNEL functions) -> implemented in\nthe PCDU Combined-Controller.\n\nFig. 4.2 The combined data and power management infrastructure. \u00a9 Jens Eickhoff\u2014from [47]\n\n108 J. Eickhoff et al.\n\n\n\nAn overview of the CDPI with all external I/Os and the interlinks between OBC\nand PCDU part is included in Fig. 4.2. Box internal cross-couplings\u2014like between\nProcessor-Boards and I/O-Boards\u2014are not included for not overcomplicating the\nfigure here. The same applies for cross-couplings of redundant elements within\nOBC respectively PCDU.\n\n4.3 Data Management\n\nThe FLP software implements different methods to manage different types of data.\nOn the lowest level, data are stored and held in one of the physical memory areas\nwithin the FLP On-Board Computer (see Fig. 4.3). Data in the OBC RAM are not\nmanually allocated but are managed by the OBSW application itself. Accessible\ndata are either held in the global OBSW datapool (see Fig. 3.1) or in the individual\nobjects. Data areas in the OBC PROM and the I/O-Board persistent RAM are\nreserved manually.\n\nIn the center of on-board communication is the datapool, cited in Fig. 3.1 as\n\u201cOBSW DP\u201d. In this datapool all variables that need to be accessed by more than\none object are stored, such as measurement and control loop data.\n\ndatapool is a global object in RAM that stores and delivers the containing\nelements to other objects. Distribution is performed in a blackboard manner, i.e.\nnew data overwrite the existing ones.\n\nThis is in contrast to a controller internal private pool which is only accessed by\none distinct controller object\u2014as Fig. 4.4 illustrates. However, the data of the\nprivate pool can be accessed by ground to validate the controller\u2019s function if\nrequired.\n\nAll data in datapool carry a validFlag that indicates the validity of the entry. If a\ndevice does not provide data or the CRC of its housekeeping packet is not suc-\ncessful, the device handler still writes the provided data into the datapool to allow\nground access, but it marks the data as invalid.\n\nFig. 4.3 Memory areas in the OBC managed by software. \u00a9 IRS, University of Stuttgart\n\n4 Core Data Handling Subsystem 109\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n4.3.1 PROM Data\n\nThe OBC PROM space is allocated manually. It is mainly used to hold the software\nboot images. In addition, some essential state vector data is stored in the PROM.\nThe PROM in the Processor-Board design is no real PROM in the classic sense but\nis implemented using NV-RAM chips (see [47]).\n\n\u2022 Each OBC Processor-Board has a redundant PROM\u2014called primary and sec-\nondary PROM.\n\n\u2022 Both PROMs contain a complete OBSW image.\n\u2022 The boot loader is located at the start address of the primary PROM, which is\n\ncalled each time whenever the Processor-Board is booted.\n\u2022 At start of the secondary PROM some configuration variables are located which\n\nare partly for use by the boot loader and partly for the OBSW itself.\n\u2022 Both PROMs have a sleep-state, in which the memory chips consume less\n\npower and in which the memory is secured against read and write access.\n\u2022 The sleep-state can be set individually for each PROM (primary and secondary).\n\u2022 Furthermore the LEON3FT processor provides a control bit for defining the\n\nwrite-access for all PROMs. This is not individually configurable for primary\nand secondary PROM.\n\n\u2022 After the boot process both PROMS are in sleep-state and write-access is\ndisabled.\n\nThe boot loader has two functions:\n\n\u2022 At each start of a Processor-Board a boot-counter variable is increased to monitor\nthe number of boot processes (e.g. during FDIR operations without ground vis-\nibility). The boot-counter is located at the start address of the secondary PROM.\n\n\u2022 At each boot of a dedicated Processor-Board, either the OBSW image in the\nprimary or in the secondary PROM is booted. The decision is based on a second\ncounter\u2014another variable at start of the secondary PROM.\n\n\u2013 In case where this second counter is >0 the OBSW image in the secondary\nPROM is used and the counter is decreased by one.\n\n\u2013 In case where the counter equals zero the OBSW image from the primary\nPROM is booted.\n\nFig. 4.4 OBSW datapool access. \u00a9 IRS, University of Stuttgart\n\n110 J. Eickhoff et al.\n\n\n\nFurther variables in the secondary PROM are the Fatal-Error-Counter and the\non-board time which is stored there and which is refreshed in larger cycles to\nfacilitate OBSW and ACS recovery after Core DHS crashes (HW or SW).\n\nIn case where the OBSW reaches a point where it cannot continue (Fatal Error) it\nstill tries to dump the last error in the secondary PROM. At next boot after such a\nFatal Error the error code is read out and is stored in the datapool and is transmitted\nto ground as failure Event (5,4).\n\n4.3.2 I/O-Board Persistent RAM\n\nBoth I/O-Boards provide an extension of non-volatile RAM for the OBC. There are\nfive MRAM banks of 4 MB each available, organized in two regions of 16 and\n4 MB. These memory regions are accessible via RMAP calls over SpaceWire. The\nfirst region is used to keep telemetry stores for HK, event and miscellaneous\ntelemetry, such as technology demonstration data. The second region, memory\nrange 0x03000000\u20130x033FFFFF is reserved for use as Spacecraft State Vector\nstorage.\n\nAllocation of RAM to the different telemetry stores is done in the OBSW\nconfiguration. Table 4.1 lists the allocation of memory blocks to TM stores.\nSection 2.4.11 further describes the internal data usage of these data blocks.\n\n4.3.3 OBC RAM and PROM Direct Access\n\nAs mentioned above, data in the OBC RAM are allocated by the executing\napplication and the boot loader. Therefore it is not intended (and not recommended)\nto directly manipulate data in RAM from ground.\n\nIn contingency cases however, it may be necessary to check or read elements\ndirectly. In addition, loading a new software image to PROM requires direct access\nto the PROM memory from ground.\n\nThis direct memory manipulation of OBC memory is handled with the Memory\nManagement Service and the LocalMemory object of the CoreDHS_Subsystem,\nwhich manages access to all local memory on one Processor-Board.\n\nTable 4.1 Allocation of memory blocks to TM stores on the I/O-Boards\n\nTm Store Address range Size\n\nHousekeeping Store 0x02000000-0x027FFFFF 8 MB\n\nEvent Store 0x02800000-0x02AFFFFF 3 MB\n\nMisc. Store 0x02B00000-0x02FFFFFF 5 MB\n\n4 Core Data Handling Subsystem 111\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\n4.4 System Boot at Launcher Separation\n\nAs the FLP platform is suitable for launches in Off Mode, the boot process of the\nsatellite starts with the separation from the launch vehicle (initiated by the launcher\nitself). The satellite is equipped with a short circuitry in the PCDU which\u2014when\nopened\u2014causes the PCDU to boot (please also refer to Sect. 11.6.1). The PCDU\ncontrolled parts of the LEOP Autosequence are shown in Fig. 4.5.\n\nIn the left swim-lane of the diagram, the activities of the PCDU are depicted.\nThese activities include the separation detection and the boot procedure of the\nPCDU itself (see [57] and Sects. 5.5.3 and 5.6.2.2), during which the battery state\nof charge is checked to be SoC > 45 % and whether OBC and TTC heater lines are\noperational. These are activated automatically by thermostat switches in case where\nthe unit temperatures are below the operational minimum of ?40 \u00b0C.1 It is not\nexpected that the OBC/TTC become that cold. Thus the PCDU is expected to boot\nsafely into its so-called MiniOps Mode [47, 57] which takes about 20 s. At that\npoint the initially acquired battery SoC value will not yet be reliable until the first\nbattery calibration and will therefore be initialized to an artificially high value\n(100 % SoC) for safety reasons. From PCDU MiniOps Mode the further operations\nperformed purely by PCDU and the tasks of the OBC start running in parallel\u2014\nplease refer to Fig. 4.5.\n\nAfter launcher separation detection a preset counter is continuously being\ndecreased inside the PCDU (Deployment Timer 0). The value of the Deployment\nTimer will be prescribed by the launch supplier to induce some delay between\nsatellite separation and first mechanical activities.\n\nAfter reaching (Deployment Timer 0) value 0, the PCDU starts to try the solar\npanels deployment by melting the clampbands of the panel hold down and release\nmechanisms (see also Sect. 5.3). The circuits for all four deployment mechanisms\nare closed for 60 s (controlled by another timer\u2014Deployment Timer 1) to deploy\nthe solar panels.\n\nThe complete deployment is achieved, when all four Reed sensors detect the\nopening of the panels (see [57]). In this case, the deployment flag within the PCDU\nin such case will be set to \u201c1\u201d (Off)\u2014indicating deployment process being com-\npleted\u2014and powering of the panel deployment mechanisms is stopped.\n\nIn case where the deployment was not successfully completed after a minute\n(Deployment Timer 1), the timer is reset for another minute until performing a\ndeployment retry\u2014see also Sect. 10.3.3. At maximum five such retry attempts are\nperformed by the PCDU, until the deployment flag is set to \u201c1\u201d (Off) even in case\nthe panels have not deployed correctly. This is a safety feature to avoid that the\nbattery is emptied by the continuously high deployment mechanism currents being\nconsumed in an endless loop.\n\n1The latter two constraints are normally of no relevance for the LEOP boot of the satellite but for\nemergency recovery boots in orbit and thus according checks are included in the PCDU boot\nsequence.\n\n112 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nIn such case where deployment is stopped and it is left for the operators to\nhandle the problem. The deployment flag can be reset to \u201c0\u201d (On) by TC in order to\ncontinue trying to deploy the panels. The entire process is implemented in the\n\nFig. 4.5 LEOP automatic activities after launcher separation. \u00a9 IRS, University of Stuttgart\n\n4 Core Data Handling Subsystem 113\n\n\n\nPCDU and is performed automatically. The On-Board Software (OBSW) and the\nOBC are not needed yet and operate completely independently\u2014as can be seen\nfrom Fig. 4.5.\n\nWhen the PCDU has booted into MiniOps Mode, it activates the power circuits\nof the OBC, resulting in the OBC booting on its nominal side with Processor-Board\nN and I/O-Board N being active. The OBSW then detects the last S/C mode prior to\nboot having been Off Mode and thus starts S/C operation by setting the satellite\nautomatically into Detumble Mode. As the PCDU MiniOps Mode is very limiting,\nafter the OBSW is up and running it will command the PCDU into its Idle Mode.\n\nThis implies also setting the \u201cAttitude Control System\u201d (ACS) into Detumble\nMode which then starts to reduce rotational rates of the satellite resulting from the\nlauncher separation by means of magnetotorquers, measuring the achieved attitude\nby means of sun sensors and magnetometers.2 Furthermore, other vital parts of the\nOBSW such as the controllers for \u201cpower supply subsystem\u201d, (PSS), the \u201ctelemetry\nand telecommand subsystem\u201d, (TTC), and the \u201cthermal control subsystem\u201d, (TCS),\nare set to their standard modes.\n\nDuring these initial operational steps of the OBSW it generates the according\nboot Event TM (being written to the TM packet store on the I/O-Board) for later\ndownlink. The OBSW furthermore collects all relevant TM of initial rotational\nrates, the deployment status data from the PCDU and the number of deployment\nattempts and allocates the data in according system TM packets for downlink.\n\nPotential OBSW reboots after software failure, OBC reconfigurations after\nhardware failure or entire satellite reboots after complete satellite power failure are\ncovered in the diverse subsections of Chap. 10.\n\n4.5 OBSW Controlled Functions\n\nThe Core DHS hardware including the running OBSW controls all functions on\nboard the satellite. The overall OBSW controlled functions comprise:\n\n\u2022 Spacecraft operational modes and mode transitions\n\u2022 Subsystem modes and mode transitions\n\u2022 All management function of the subsystems Power, TTC, ACS, TCS and\n\nPayload (including control of science data downlink)\n\u2022 All control loops of the subsystems Power, ACS and TCS\n\u2022 Mission timeline driven functions\n\u2022 Orbit position scheduled functions\n\u2022 And in the completeness of the CDPI architecture consisting of OBC and PCDU\n\nalso all FDIR functions of the spacecraft\u2014be it OBSW controlled or purely\nhardware controlled.\n\n2Magnetotorquers and magnetometers are operated in interleaved mode to avoid the magneto-\ntorquers biasing magnetic field measurements.\n\n114 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nThese diverse function are explained in detail in the corresponding subsystem\nchapter and Chap. 10.\n\nHere however an ambiguity has to be clarified: While the entire OBSW covers\nall the previously listed functions, the CoreDHS_Subsystem inside the OBSW is\n\u201conly\u201d the part which controls the OBC electronics\u2014see also Fig. 4.6. Therefore\nthe Core DHS as subsystem only comprises the device handlers, assemblies etc.\nwhich are required for this task.\n\n4.6 Core DHS Subsystem Control\n\nThe OBSW and the Core DHS hardware are inherently interwoven as the OBSW\nruns on the Processor-Boards. The core data handling software concept has already\nbeen discussed in Chap. 3. In this chapter now only the software handlers and\ncontrollers for the Core DHS hardware are described (see Fig. 4.6).\n\nThe Core DHS hardware is handled by four dedicated software objects, which\nmanage the functionality of the Processor-Boards boards. The objects are the\nI/O-Board handlers and the associated I/O-Board assembly, and a so called\nCore_Controller, which manages functionality of the Processor-Board itself.\n\nThe CCSDS-Boards are physically placed in the OBC housing. Logically they\nbelong to the TTC subsystem. Therefore their control assembly and handler\ndescription is provided in Sects. 6.3.1.2 and 6.3.2.2.\n\n4.6.1 I/O-Board Handler\n\nThe I/O-Board handler has two main objectives:\n\n\u2022 Handling I/O-Board modes\n\u2022 Accessing the I/O-Board memory\n\nThe board can be commanded into two different modes (MODE_ON and\nMODE_OFF), with a number of submodes. These modes are listed in Table 4.2.\nThe additional \u201cNo Switch\u201d submode results from the fact that the I/O-Board can be\nturned off by the PCDU autonomously.\n\nFig. 4.6 Core DHS subsystem control elements in OBSW. \u00a9 IRS, University of Stuttgart\n\n4 Core Data Handling Subsystem 115\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\n\n\nThe I/O-Board handlers also mange low-level access to the on-board memory of\nthe I/O-Board. The memory regions and their usage are described in Sect. 4.3.2. All\nhigher level features such as the TM packet store use these access methods. In\n\nTable 4.2 I/O-Board device handler modes\n\nObject-IDs Mode M# Submode SM# Description\n\nI/O-Board\nN/R\n0x44450000\n0x44450100\n\nOff 0 Default 0 Off\n\nNo\nSwitch\n\n1 Used to command\nBoard to Off without\nsending a switch\ncommand. Used when\nno PCDU connection\nis available. Handler\nwill enter Mode (Off,\nDefault) when\nsuccessful\n\nOn 1 Passive 0 Board On, memory\naccess possible,\ncommunication with\nexternal devices not\npossible\n\nActive 1 Board On, memory\naccess possible,\ncommunication with\nexternal devices is\npossible\n\nNo\nSwitch\n\n255 Used to command\nBoard to On without\nsending a switch\ncommand. Used when\nno PCDU connection\nis available. Handler\nwill enter Mode (On,\nPassive) when\nsuccessful\n\nWaiting_for_Board 16 Default 0 Waiting for Space\nWire Activation\nMode cannot be\ncommanded but is a\ntransition state entered\nwhen commanded to\nOn and no active\nSpaceWire connection\nexists. This mode is\nleft to (On, Passive) as\nsoon as an active\nSpaceWire connection\nis detected\n\n116 J. Eickhoff et al.\n\n\n\naddition to accessing the MRAM banks, the handler also allows a memory-like\naccess to the device communication buffers on the I/O-Board. A write command to\na given buffer will effectively forward the written data to the associated device, a\nread command will read data from that device. This feature is not used during\nnominal operations (device communication is handled directly with RMAP calls),\nbut is provided for contingency operations.\n\n4.6.2 I/O-Board Assembly\n\nThe main task of the I/O-Board assembly is to keep device communication active\nunder all circumstances. This is a complex activity, as communication with the\nPCDU, which is necessary to turn switches on and off, also reconfigures the\nI/O-Boards in case of failure\u2014see Sect. 10.2. In addition, the PCDU is allowed to\nreconfigure the I/O-Boards by itself, an activity for which the assembly must be\nprepared to avoid unnecessary software reboots. Also, the I/O-Boards may be\noperated in single or dual mode, the latter with one board active doing commu-\nnication and one board passive, but permitting memory access.\n\nThis leads to a complex state machine to check the current state of the boards and\nto always reach a safe state. Controlling this machine is achieved by the modes\navailable for the assembly and the health flags of the I/O-Board handlers. These may\nbe overwritten by the assembly in certain cases. Table 4.3 describes the available\nmodes of the I/O-Board assembly. The overall OBC reconfiguration workflow\u2014\nincluding the I/O-Boards is explained later in the FDIR chapter in Sect. 10.2.3.\n\nThe I/O-Board assembly furthermore routes memory commands to the currently\nactive I/O-Board, i.e. if an application\u2014such as a TM store\u2014intends to write data\nto the active I/O-Board, it may send the request to the I/O-Board assembly, which\nforwards the request to the active board or triggers an error if no board is available.\n\nTable 4.3 I/O-Board assembly mode table\n\nObject-IDs Mode M# Submode SM# Description\n\nI/O-Board\n0x41010000\n\nOff 0 Default 0 Both boards are Off, i.e. PCDU\nRecovery is forced until OBC\nreboot. Commands are still possible\nin Off mode\n\nRecover 1 Forces first step of PCDU Recovery\n(I/O-Board Off and the other one\nOn), then back to On, Single mode.\nCommands are still possible in Off\nmode\n\nOn 1 Single 0 One board active, the other one Off\n\nDual 1 One board active, the other one\npassive\n\n4 Core Data Handling Subsystem 117\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n4.6.3 Core DHS Controller\n\nThe Core_Controller provides a number of functions to handle the Processor-Board\nhardware and the overall software. They are listed in Table 4.4.\n\nThere is no mechanism inside the I/O-Board electronics to directly mirror data\nfrom the active I/O-Board to the cold redundant one. Stored data therefore would\nonly be recoverable with direct memory access as a contingency operation or even\nwould be lost in case of a board defect.\n\nTherefore the Core_Controller can be commanded to cyclically activate the\nredundant board in passive mode (i.e. not electrically activating its equipment\ninterface circuitry) and to copy data stored on the nominal board over to the\nredundant one with the Memory Management Service via the I/O-Board Handler.\n\nThe controller uses the general system-wide mode concept (i.e. it can be com-\nmanded with default mode commands) to control the execution of the inter-board\nsynchronization:\n\n\u2022 If the controller is in OFF mode, it does not synchronize\n\u2022 If the controller is in ON mode, it will synchronize the two boards every 10 min.\n\nTable 4.4 Core_Controller functions\n\nFunction Name ID Parameters Information\n\nSET_PROM_SLEEP_STATE 1 PROM ID\n(0/1) (1B),\nAWAKE\n(0/1) (1B)\n\nSets the sleep line of one\nindividal PROM (see\nSect. 4.3.1)\n\nSET_READ_WRITE_STATE 2 ENABLED\n(0/1)(1B)\n\nSets the write state of all\nPROMs (see Sect. 4.3.1)\n\nREAD_PROM_STATE 3 \u2013 Returns PROM sleep and\nwrite states\n\nWRITE_ON_BOARD_TIME 4 OBT offset\n(4B)\n\nSet the seconds of OBT\nalready elapsed\n\nRESET_CPU_USAGE_\nSTATISTICS\n\n10 \u2013 Resets CPU utilization\nstatistics.\n\nREAD_CPU_USAGE_STATISTICS 11 \u2013 Dump CPU utilization\nstatistics\n\nSET_SECONDARY_COUNTER 20 New\nsecondary\ncounter (4B)\n\nSets the boot count for the\nsecondary image\n\nREAD_SECONDARY_COUNTER 21 \u2013 Reads the boot count for the\nsecondary image\n\n118 J. Eickhoff et al.\n\n\n\n4.6.4 Core DHS Mode Transitions and Telemetry\n\nThe Core DHS subsystem mode commanding is performed via PUS service 200\nand the following sequence\u2014see Table 4.5. The Core DHS subsystem itself only\nhas one Default Mode.\n\nThe satellite system transitions controlled by the Core DHS have already been\nlisted in Table 2.1 in Chap. 2:\n\nThe System, OBC and I/O-Board relevant TC packet definitions are included in\nthe spacecraft TC table in annex Sect. 17.3.1.\n\nThe System, OBC and I/O-Board relevant TM packet definitions are included in\nthe spacecraft TM table in annex Sect. 17.3.2.\n\nThe System, OBC and I/O-Board relevant Event TM packets are included in the\nspacecraft Event TM table in annex Sect. 17.3.3.\n\nDetails on the TM parameter positions in the diverse packets have to be taken\nfrom the MIB.\n\nTable 4.5 Core DHS subsystem modes and transition sequences\n\n# CDH Modes 0x1000600\n\nCommanding to Default\nMode\n\nSequence Name Seq ID HardCoded? Fallback\n\nDefault 0x29000000 1\n\nName Table ID WaitTime Check?\n\nDefault_Target 0x29000000 0 0\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nI/O-Board\nAss.\n\n0x41010000 On 1 Single 0\n\n#\n\nAchieved by transitions\n\nName Table ID WaitTime Check?\n\nDefault_Trans 0x29000100 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nI/O-Board\nAss.\n\n0x41010000 On 1 Single 0\n\n4 Core Data Handling Subsystem 119\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nChapter 5\nPower Supply Subsystem\n\nKai-S\u00f6ren Klemich and Bastian B\u00e4tz\n\nAbstract The chapter contains first an overview on the power supply subsystem\nand discusses all the components. These are the solar panels including the\ndeployment mechanism, the battery and in particular the Power Control and\nDistribution Unit (PCDU). The PCDU modes and its particular functions in the\nframe of the Combined Data and Power Management Infrastructure (CDPI) are\nexplained. The last part comprises the onboard software elements and functions for\ncontrol of the power supply subsystem. Additional tables are provided in the book\u2019s\nannexes.\n\nKeywords Power subsystem ? Solar panels ? Battery ? Power Control and\nDistribution Unit ? Specific PCDU functions in the CDPI architecture ? Power\nsubsystem control\n\nK.-S. Klemich (&) ? B. B\u00e4tz\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: klemich@irs.uni-stuttgart.de\n\nB. B\u00e4tz\ne-mail: baetz@irs.uni-stuttgart.de\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_5\n\n121\n\n\n\n5.1 Subsystem Overview\n\nThe power subsystem of the FLP platform is based on an unregulated power-bus,\nsolar arrays, a Power Control and Distribution Unit (PCDU) and a battery. The\npower subsystem is marked in red in Figs. 1.6 and 5.1 provides a zoomed view on\nthe main components.\n\nThe battery and the solar panels are connected to the PCDU. The power-bus\nvoltage is in the range 20\u201325.5 V according to the state of charge of the battery and\nto the battery current.\n\nAll power consuming spacecraft equipment is connected to the non-regulated\npower-bus through power lines (see Fig. 1.6). The power connections are switched\nand protected by Latching Current Limiters (LCL) inside the PCDU. The LCLs are\ncommanded by the OBC via the RS422 digital link to the PCDU. Obviously the\nOBC itself is directly connected to the non-regulated bus, without LCL. The pro-\ntection of the bus for the OBC itself is ensured by the OBC internal Power-Boards\n(see [47]).\n\nThe FLP Generation 1 has two deployable solar panels\u2014panels 0 and 1\u2014and\none body mounted paner\u2014panel 2. The platform in this configuration does not\nprovide a solar array drive to reduce complexity. More details are given in Sect. 5.2.\nThe power subsystem is controlled by the PSS_Controller in the OBSW.\n\nFig. 5.1 Power supply subsystem overview. \u00a9 IRS, University of Stuttgart\n\n122 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\n5.2 Solar Panels\n\nThe three solar panels are implemented in two different configurations, a side panel\ntype which is deployed after separation of the spacecraft from the launcher, and a\ncenter panel type which is body mounted (please also refer to Figs. 1.2, 1.3, and 1.5).\n\nThe GAGET1-ID/160-8040 [59] solar cells from AZUR Space Solar Power are\napplied as primary energy source (see Table 5.1). For the first FLP mission \u201cFlying\nLaptop\u201d the center solar panel includes an additional test string with experimental\nsolar cells RWE3G-ID2*/150-8040 from AZUR Space Solar Power [60] with an\nefficiency of 27.8 % (BoL, 28 \u00b0C, AM0). These shall be qualified for space use\nduring the first FLP mission.\n\nThe solar panels of the first FLP satellite have been produced by Airbus DS\nGmbH in Ottobrunn, Germany. The maximum output power is approximately\n230 W. The solar array configuration of the first FLP satellite\u2014limited by geo-\nmetric size to fit into the envelope of a secondary launcher payload\u2014is as follows\n(see Figs. 5.2 and 5.3):\n\n\u2022 Two deployable panels (panel 0 and panel 1) with the following characteristics:\n\n\u2013 730 \u00d7 520 mm\n\u2013 7 strings\u201415 solar cells each\n\u2013 105 solar cells overall\n\n\u2022 One body mounted center panel (panel 2) with:\n\n\u2013 780 \u00d7 680 mm\n\u2013 4 strings\u201416 solar cells each\n\u2013 plus one test string made of 16 RWE3G-ID2*/150-8040 cells\n\u2013 80 solar cells overall\n\nOn the body mounted panel, which will be warmer due to increased heat con-\nduction from the satellite\u2019s main body, there are four strings of 16 solar cells each in\norder to achieve a similar operating voltage to the cooler wing panels.\n\nThis design with a string length of 15 respectively 16 solar cells leads to a\nmaximum power-bus voltage between 20.0 and 25.5 V for the first FLP based\nmission \u201cFlying Laptop\u201d. The general FLP platform design however allows for a\nstandard 28 V power-bus.\n\nTable 5.1 Overview of the FLP solar cells and battery key characteristics\n\nSolar cells\n\nIdentification GAGET1-ID/160-8040\n\nGaInP2/GaAs/Ge on Ge substrateBase Material\n\nEfficiency at BOL, 28 \u00b0C, AM0 25.3 %\n\nMaximum power output in FLP configuration approximately 230 Watts peak\n\n5 Power Supply Subsystem 123\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\nThe panels feature shunt diodes for every cell so that damaged or shaded cells do\nnot cause an entire solar cell string to fail.\n\n5.3 Solar Array Deployment Mechanism\n\nThe solar array deployment is activated via a melting braid mechanism cutting a\nnylon braid. This material was selected due to its high tensile strength and the\nrelative low melting temperature. The mechanism provides a re-usable, very\ncompact and adapted mechanism for the FLP platform with a very low shock load.\n\nFig. 5.2 \u201cFlying Laptop\u201d solar array. \u00a9 IRS, University of Stuttgart\n\nFig. 5.3 Solar panels configuration. \u00a9 IRS, University of Stuttgart\n\n124 K.-S. Klemich and B. B\u00e4tz\n\n\n\nThe retaining mechanism is shown in Fig. 5.4. It is divided into a solar panel\nbracket mounted to the solar panel and a main body bracket attached to the satellite\nmain body. Both brackets are connected with a retaining bolt, having a wedge on\nthe end. The retaining bolt is preloaded by a spring, located on the solar panel end,\ntrying to pull the wedge out of the main body bracket. The pull-out is prevented by\na braid around the divided ferrule that avoids a coming asunder of the two parts by\nthe wedge effect. The braid is pre-stressed by a clamping system consisting of a\nclamping claw and a bolt with right-hand and left-hand thread. The tightened\nclamping bolt constitutes a pre-tensioning force to the wire.\n\nThe function of the release system can be seen in Fig. 5.4. In Orbit the two pairs\nof two melting resistors will be activated and heating up each braid on two opposite\npositions (in the area of the clamping bolt). As melting element ceramic resistors are\nused. In every resistor pair the melting braid is lead between the two heaters (one on\nthe right hand and one on the left hand). So the braid is heated up on two positions\nfrom two sides. By warming up the braid the strength decreases until the\npre-tensioning force of the clamping system and the retaining bolt will tear the braid\napart. If the melting braid is loose, the divided ferrule comes asunder by the force\ngenerated by the wedge system. With enough distance of the divided ferrule the\nwedge is free and can be released through a hole in the main body bracket. Now the\nsolar panel is free and is deployed by the pretension in the spring of the hinge\nmechanism\u2014see Fig. 5.6.\n\nTo prevent a single point failure in the electrical supply of the melting heater two\nindependent supply lines exist. The electrical configuration is shown in Fig. 5.5.\nEvery retaining mechanism is powered by line 1 and line 2. After activating the\npower switches in the PCDU the heaters are directly connected with the battery.\nThe generated power of the heaters depends on the voltage of the battery. With a\n\nFig. 5.4 Solar array release steps. \u00a9 IRS, University of Stuttgart\n\nFig. 5.5 Electrical supply of the clamping band melting heaters. \u00a9 IRS, University of Stuttgart\n\n5 Power Supply Subsystem 125\n\n\n\nbattery voltage of 24 V every heater consumes a power of 5.8 W. With all 16\nheaters, the power consumption adds up to 92.2 W.\n\nIt is foreseen that the heaters are activated by the PCDU after it has has booted in\nresult of the launcher separation. The process is controlled by a timer as the launch\nsupplier will prescribe a delay interval between the launcher separation and the\nsatellite boot. Therefore after launcher separation detection a preset counter in the\nPCDU is continuously being decreased. It can be adapted to the launch supplier\u2019s\nrequests on ground. For the detailed sequence after launcher separation see Sect. 11.\n6.1.\n\nIn order to prevent an activation of the mechanism by accident, a protection\nconnector is foreseen. Only with this additional connector (green-tagged item)\napplied to each device the two electric circuits are closed and the mechanism can be\nactivated (see also Sect. 17.13).\n\nFurthermore, a deployment detector is installed on each retaining mechanism.\nA magnet activates a reed sensor in launch configuration. With the solar deploy-\nment the reed sensor contact opened and indicates the correct function of the release\nto the PCDU.\n\nThe solar array hinge mechanism (see Fig. 5.6) turns the side panels around by\n90\u00b0 and holds them in their position. In order to meet these requirements at each\nside of the solar side panels two hinges are foreseen. The hinge systems implement\nthe connection of the side solar panels with the satellite main body. In order to\ncreate a compact configuration with a suitable load path a fork fixture is imple-\nmented. The solar panel flange is connected via a hinge bolt to the fork shaped\nsatellite flange. The mechanism is mounted to the main satellite structure via a\nglass-fiber reinforced bracket which insulates the solar panel in an electrical and\nthermal way from the satellite body. The middle solar panel also is connected via\nthese four brackets.\n\nThe lower hinge is designed as fix bearing and the upper hinge as loose bearing.\nThe fix bearing is generated by fixing the movement of the hinge in axis direction\n\nFig. 5.6 Solar array deployment mechanism. \u00a9 IRS, University of Stuttgart\n\n126 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nwhile the loose bearing offers a degree of freedom in the direction of this axis. The\nrotation of the hinge is created via a bush bearing allowing a rotation between the\nhinge bolt and the solar panel flange. Furthermore, a ball bearing is integrated into\neach hinge. With these bearings the hinge system can balance misalignments in the\nsolar panel mounting.\n\nThe rotation force is created by torsion springs. For damping and reaching the\nend position an additional counter torsion spring is installed. So the solar array can\n\u201cswing\u201d to the release position, can over-swing a bit due to its dynamic movement\nand is rotated back to the foreseen 90\u00b0 deployed position.\n\n5.4 Battery\n\nThe FLP Generation 1 battery consists of ANR26650M1-B lithium iron phosphate\n(LiFePO4) cells manufactured by A123 Systems [58]. Each cell has a nominal\ncapacity of 2.5 Ah at a nominal voltage of 3.3 V. The battery consists of dedicated\ncell strings. Each battery string is directly connected to one of the solar panels.\n\n\u2022 The strings for the side panels (string 0 and 1) consist of 35 battery cells each,\nwith blocks of five cells in parallel and seven of these blocks in series, yielding a\ntotal capacity of 12.5 Ah at a voltage between 18.9 and 25.2 V.\n\n\u2022 For the center panel string (string 2), there are only four battery cells connected\nin parallel, reducing the nominal capacity to 10 Ah.\n\nAs result the battery has a nominal BOL capacity of 35 Ah or 805 Wh at 23 V\n(Table 5.2).\n\nThe battery EM is depicted in Fig. 5.7. Figure 5.8 shows a functional diagram of\none string of the battery with the interface to the PCDU, the battery cells, the\nthermal control devices and the Balancing and Charge Control (BCC) circuitry.\n\nThe battery internal thermistors and the battery compartment heaters are covered\nin the thermal subsystem description in Chap. 8.\n\nThe basic battery values measured by the PCDU are voltages, currents and\ntemperatures for the three battery strings.\n\nAs the battery cells lose capacity at low temperatures, the battery strings can be\nheated. The heaters are supplied with power by the PCDU through bi-stable relays,\nwhich are usually switched in normal operations. The actual switching of the\nheaters is done by thermostat switches on the battery bottom plate. If the temper-\nature of the thermostat switches falls below ca. 0 \u00b0C, the heaters are activated, if it\nrises above ca. 5 \u00b0C the power supply is interrupted again. There are two redundant\nheater circuits, each of which consists of three single heaters, one at each string.\n\nFurthermore, each of the battery strings features an electronic board, which\nperforms a basic cell balancing and can send a signal to the PCDU so stop charging\nof the respective string if one of the cell blocks has reached its maximum voltage.\nThe electronic boards consume approximately 9 mA for battery string 0 and 1 and\n8 mA for string 2, depending on the battery voltage. The balancing is achieved by\n\n5 Power Supply Subsystem 127\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\n\n\nbleed resistors which discharge all cell blocks in a battery string at all times. As the\ndischarge current depends linearly on the cell block voltage, cell blocks with higher\nvoltages are discharged at higher currents. Thus a balancing effect occurs at the cost\nof a constant bleed current, which is approximately half of the total current con-\nsumed by the battery electronic boards [157].\n\nThe voltage monitoring of the cell blocks causes the PCDU to stop charging of a\nstring if a maximum cell block voltage of approximately 3.65 V is reached. The\ncharging is interrupted for a configurable time to allow the battery voltage to drop\nand is then resumed until the charge stop signal is issued again. The response of the\nPCDU to the charge stop signal can be disabled by setting a flag in the PCDU in\ncase of a failure of the balancing boards.\n\nThe SoC of the battery is estimated both in the PCDU and in the power con-\ntroller (see also details later in Sect. 5.4.2). The algorithm in the PCDU is a simpler\nversion, neglecting any temperature effects on the battery capacity. It is used as a\nbackup and is necessary when the satellite was shut down due to power outage.\nDuring power recovery the PCDU waits until the battery SoC is above a threshold\nof 45 % before booting the OBC. During this time, it must calculate the SoC\nindependently of the OBSW.\n\nIn case of the first FLP mission due to the limited power-bus voltage not pro-\nviding the entire 28 V standard, the PCDU charges the battery with a constant\nvoltage of 25.5 V. Thus, this also defines the maximum battery string voltage. Its\nminimum voltage is 19.0 V, which equals roughly 0 % SoC, at which the hardware\n\nFig. 5.7 FLP battery engineering model. \u00a9 IRS, University of Stuttgart\n\n128 K.-S. Klemich and B. B\u00e4tz\n\n\n\nunder voltage protection of the PCDU is triggered. Note that the PCDU keeps the\nthree battery strings at very similar voltages, i.e. roughly similar SoC, at all times.\n\n5.4.1 General Monitoring\n\nSimilar to the solar panels, the currents and voltages of the three battery strings as\nwell as their temperatures are measured by the PCDU. Note that a positive battery\ncurrent indicates charging of the string and a negative current indicates discharging.\n\nFig. 5.8 The FLP battery and Battery charge control board layout. \u00a9 IRS, University of Stuttgart\n\nTable 5.2 Overview of the FLP battery key characteristics\n\nBattery\n\netahpsohpnorimuihtiLepyT\n\nIdentification ANR26650M1-B\n\nTotal capacity for the configuration, BOL 35 Ah\n\n5 Power Supply Subsystem 129\n\n\n\nThe charge/discharge power for the battery strings is calculated by the power\ncontroller.\n\nThere are two Pt1000 thermistors per string, one at the top and one at the bottom\nof each string (see also [157]), i.e. six temperature values in total. Here \u201cbottom\u201d is\nreferring to the side at which the battery is mounted on the service module plate.\nAgain the PCDU provides the resistances of the thermistors and the\nTCS_Controller calculates the actual temperatures\u2014see Sect. 8.3.\n\nAll of these values are part of the datapool and can be downlinked using Service\n(3.25). An overview of the battery TM parameters, their TM packets and the\ndisplays they appear on is given in Table 5.3.\n\nNote that as the battery heaters are not supplied with power via fuses but via\nbi-stable relays, the heater current cannot be measured. The activation of the heaters\nduring nominal operations can only be detected indirectly, e.g. by analyzing the bus\nand/or battery current and the battery temperature.\n\nName Description Unit Long Description Display SID\n\nPBTSTC00 BAT_STR_CURRENT A Battery String\nCurrent 0\n\nPBA00000,\nPBG00001\n\n4000\n\nPBTSTC01 BAT_STR_CURRENT1 A Battery String\nCurrent 1\n\nPBA00000,\nPBG00001\n\n4000\n\nPBTSTC02 BAT_STR_CURRENT2 A Battery String\nCurrent 2\n\nPBA00000,\nPBG00001\n\n4000\n\nPBTSTV00 BAT_STR_VOLTAGE V Battery String\nVoltage 0\n\nPBA00000,\nPBG00001\n\n4000\n\nPBTSTV01 BAT_STR_VOLTAGE1 V Battery String\nVoltage 1\n\nPBA00000,\nPBG00001\n\n4000\n\nPBTSTV02 BAT_STR_VOLTAGE2 V Battery String\nVoltage 2\n\nPBA00000,\nPBG00001\n\n4000\n\nPBTPWR00 BAT_STR_POWER_0 W Battery String 0\nPower\n\nPBA00000,\nPYA00001\n\n4000\n\nPBTPWR01 BAT_STR_POWER_1 W Battery String 1\nPower\n\nPBA00000,\nPYA00001\n\n4000\n\nPBTPWR02 BAT_STR_POWER_2 W Battery String 2\nPower\n\nPBA00000,\nPYA00001\n\n4000\n\nTSTTMP00 TEMP_EXTERNAL degC TCS\nCalibrated PCDU\nexternal Temp 00\nBattery String 0\nbottom\n\nPPA00003 4206\n\nTSTTMP01 TEMP_BATT_S1_BOT degC TCS\nCalibrated PCDU\nexternal Temp 01\nBattery String 1\nbottom\n\nPPA00003 4206\n\n(continued)\n\nTable 5.3 Battery telemetry parameters\n\n130 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\n\n\n5.4.2 Battery SoC Estimation\n\nThe battery State-of-Charge(SoC) is estimated both in the PCDU software as well\nas in the power controller of the OBSW. In general, it is assumed that the value\ncalculated by the power controller is more reliable, because it takes into account\ntemperature effects. Therefore, in its normal mode, the PSS_Controller in the\nOBSW updates the current SoC information in PCDU once per hour and throws an\nevent (RID 4011) when the difference between the two values (OBSW and PCDU)\nexceeds 0.5 Ah (see Sect. 5.6.2.6).\n\nName Description Unit Long Description Display SID\n\nTSTTMP02 TEMP_BATT_S2_TOP degC TCS\nCalibrated PCDU\nexternal Temp 02\nBattery String 2 top\n\nPPA00003 4206\n\nTSTTMP04 TEMP_BATT_S0_TOP degC TCS\nCalibrated PCDU\nexternal Temp 04\nBattery String 0 top\n\nPPA00003 4206\n\nTSTTMP05 TEMP_BATT_S1_TOP degC TCS\nCalibrated PCDU\nexternal Temp 05\nBattery String 1 top\n\nPPA00003 4206\n\nTSTTMP06 TEMP_BATT_S2_BOT degC TCS\nCalibrated PCDU\nexternal Temp 06\nBattery String 2\nbottom\n\nPPA00003 4206\n\nPPTRTS00 PCDU_TEMPSENSRES Ohm PCDU Temp Sensor\nResistance 00 Battery\nString 0 bottom\n\nTSA00000 5200\n\nPPTRTS01 TSRS_BATT_S1_BOT Ohm PCDU Temp Sensor\nResistance 01 Battery\nString 1 bottom\n\nTSA00000 5200\n\nPPTRTS02 TSRS_BATT_S2_TOP Ohm PCDU Temp Sensor\nResistance 02 Battery\nString 2 top\n\nTSA00000 5200\n\nPPTRTS04 TSRS_BATT_S0_TOP Ohm PCDU Temp Sensor\nResistance 04 Battery\nString 0 top\n\nTSA00000 5200\n\nPPTRTS05 TSRS_BATT_S1_TOP Ohm PCDU Temp Sensor\nResistance 05 Battery\nString 1 top\n\nTSA00000 5200\n\nPPTRTS06 TSRS_BATT_S2_BOT Ohm PCDU Temp Sensor\nResistance 06 Battery\nString 2 bottom\n\nTSA00000 5200\n\nTable 5.3 (continued)\n\n5 Power Supply Subsystem 131\n\n\n\nA simple ampere hour counting algorithm is used for the SoC estimation, which\nis executed once a second both in the PCDU and the OBSW. The currents flowing\nin and out of the three battery strings measured by the PCDU are added to the\ndischarge currents of the battery electronics. The resulting total string currents are\nmultiplied by a predefined thermal loss factor, depending on the direction of the\nstring current. These current values are then multiplied by one second and the\nresulting values in ampere hours are added to the previous capacity values. These\nnew capacity values are then divided by the strings\u2019 maximum capacity values and\nlead to a SoC value in percent for each string. The total capacity of the entire battery\nis calculated by adding up the capacities of the three strings and the total SoC is\ncalculated by dividing the total capacity by the sum of the string maximum\ncapacities.\n\nThis estimation algorithm necessarily accumulates an error over time. The error\nis caused by several factors, including the limited time resolution, i.e.\n\n\u2022 the numerical integration of the currents at discrete points in time,\n\u2022 current measurement errors of the PCDU,\n\u2022 and most importantly the inaccuracy of the constant thermal loss factors, which\n\nin reality are a function of the battery SoC, the actual amperage, battery age and\nthe battery temperature.\n\nTherefore, a calibration functionality exists, which sets the SoC of a string to\n100 % if three criteria are met:\n\n\u2022 The string current must be between zero and 0.3 A (i.e. the battery is not\ndischarged and the charge current is small, indicating that the string is possibly\nnearly fully charged),\n\n\u2022 the string voltage must exceed 23.5 V (also indicating that the string is nearly\nfully charged) and\n\n\u2022 the SoC must exceed 96 %.\n\nNote that the PCDU uses a constant voltage charge strategy, necessarily\nresulting in a small residual charge current when 100 % SoC is approached.\nHowever, small charge currents can also occur when the solar panels are slowly\nbeing oriented away from the sun direction, which is why the current criterion is not\nsufficient.\n\nNote also that the string capacities can be set by command to both the PCDU and\nthe power controller. This allows to bypass the SoC criterion by the ground in case\nthe battery is determined to be fully charged, but its estimated SoC is too low for the\ncalibration to occur. The PSS_Controller throws events for each string when the\ncalibration occurs (Event TM RID 4000) and when the capacity is at 100 %, but no\ncalibration occurs (due to at least one of the other calibration criteria not being met,\nRID 4032).\n\nTo avoid obvious wrong results of the SoC estimation, some safety features are\nimplemented. The string currents and voltages are limit checked before the actual\nSoC estimation is performed. If a string current is out of the range ?12 to 12 A or a\nstring voltage is out of the range 19\u201326 V (limits here again for the FLP mission\n\n132 K.-S. Klemich and B. B\u00e4tz\n\n\n\n\u201cFlying Laptop\u201d), the SoC estimation is not performed due to obviously wrong\nmeasurements so that the SoC value stays the same. The TM parameter calculated\nby the PSS_Controller in such case is also marked as invalid. Events are also\nthrown by the PSS_Controller when these limits are violated (RIDs 4020, 4023,\n4026, 4029).\n\nThe functionality described so far is the basic functionality of the SoC estimation\nas implemented in the PCDU. In addition to this basic functionality the\nPSS_Controller takes into account the reduced capacity of the battery at tempera-\ntures below 20 \u00b0C.\n\nWhen the temperature of a string (combined from both temperature sensor values)\ndrops below 20 \u00b0C a linear reduction of the maximum capacity of the string of\n0.05 Ah/K is assumed. Furthermore, the thermal losses become larger at lower\ntemperatures which is accounted for in the SoC estimation by increasing the thermal\nloss factors linearly by 0.00025 1/K if the string temperature is below 20 \u00b0C. In\naddition to the limit checks described above, there is a lower temperature limit on the\nstring temperature of ?45 \u00b0C If the string temperature is below this limit, the SoC\nestimation will not be performed.\n\nAll parameters of the SoC estimation mentioned here can be set in the PCDU by\ndirect commands and in the PSS_Controller by function commands (see\nSects. 5.6.2.3 and 5.6.2.6).\n\nThere is also a function of the PSS_Controller to write the parameters configured\nin the controller to the PCDU to ensure consistency.\n\nNote: This function does not set the string maximum capacity values.\n\n5.4.3 Operating the Battery\n\nDuring in-orbit operations, it shall be made sure that the battery string SoC esti-\nmation is calibrated at least every 2 weeks to avoid large errors in the SoC esti-\nmation. If the calibration is impossible due an accumulated error in the SoC\nestimation, this can be resolved by setting the current capacity values of the affected\nstrings in the PCDU and the PSS_Controller manually. If the calibration does not\noccur due to one of the other conditions not being met, it is likely that a sensor is\ndefective and the limits may be reset. If a battery string current sensor is defective,\nthe SoC estimation of the affected string cannot be performed anymore.\n\nDue to degradation of the battery cell capacities over time, the maximum string\ncapacities must be reset on a regular basis. As described in [76], a reduction of\n0.1 % of the strings\u2019 BoL capacity shall be commanded every 2 weeks.\n\nThe battery temperature must be monitored permanently. The heater circuitry is\ndesigned to be redundant to make sure that the battery temperature does not drop\nsignificantly below 0 \u00b0C. However, the battery system cannot be actively cooled.\nTherefore, high battery temperatures close to the cells operational temperature limit\nof 55 \u00b0C constitute a high risk for the mission. If only one sensor or one string\nshows a high temperature, it may be due to failure of the temperature sensor or due\n\n5 Power Supply Subsystem 133\n\n\n\nto a failure in the battery string, e.g. a broken cell. The former problem can be\nresolved by setting the temperature sensor to faulty if that has not been done by the\nFDIR (see Sect. 10.3.3.3), the latter problem can be resolved by setting the battery\nstring to faulty (see Sect. 5.6.2.6), which results in the string not being charged\nanymore. Note that the string can still be discharged in this case. If the temperature\nof the entire battery is too high, the charge currents of the affected strings are\nreduced by stopping to charge the affected strings. For details on this problematic\nscenario see end of Sect. 10.3.3.3.\n\nSetting a battery string to FAULTY may also be used to cope with other failure\nscenarios, e.g. out-of-limits current or voltage measurements both as a short term\ncontingency measure and as a long term configuration in case TM analysis has\nshown that a string is actually broken. In the latter case, the maximum capacity of\nthe affected string should be set to 0 so that it is not taken into account anymore by\nthe SoC estimation algorithms.\n\nLow SoC values of the battery trigger Events at prescribed power levels as\ndescribed later in Sect. 5.6.2.5 and in more detail in Sect. 10.3.1.\n\n\u2022 At 50 % SoC, the warning event (RID 4012) is thrown, which causes the FDIR\nto switch off the payload if it was switched on. At 30 % SoC, the FDIR\ncommands the satellite to safe mode based on the \u201cSOC_CRITICAL\u201d event\n(RID 4013)\u2014which corresponds to a SW-DNEL event.\n\n\u2022 At 20 % SoC the \u201cSOC_SHUT_DOWN\u201d event (RID 4014) is thrown and the\nsatellite is entirely deactivated including ONC and TTC and PCDU and will not\nreboot before SoC has regained a certain value during free tumbling. For more\ninformation on the staggered reaction to power loss refer to Sect. 10.3.1 which\nis derived from [132].\n\nBoth events are thrown by OBSW. So the classic design of one SW-DNEL is\nrefined here to two steps.\n\n5.5 Power Control and Distribution Unit\n\nThe FLP follows the standard implementation approach for the primary power\nsource and energy storage device:\n\nPrimary power source Photovoltaic solar cells\nSecondary energy storage Battery cells\n\nThe Power Control and Distribution Unit (PCDU), performs the power regula-\ntion, control and distribution from the power sources to the consumers in a satellite\nsystem. Furthermore, the PCDU is responsible for monitoring and protecting the\nsatellite power-bus. The FLP platform Power Control and Distribution Unit is\ndeveloped in cooperation with an experienced industrial partner, Vectronic\nAerospace GmbH in Berlin, Germany.\n\n134 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nThe FLP platform features a so-called Combined Data and Power Management\nInfrastructure (CDPI) where the PCDU itself is equipped with additional func-\ntionality as already outlined in Sect. 1.8 and detailed further in Sect. 4.2. This\nchapter describes both the specific PCDU functionality which enable this CDPI\nconcept from the PCDU perspective as well as the standard PCDU functions\nthemselves in more detail.\n\n5.5.1 Power Control and Distribution Functions\n\nThe main task of the PCDU is the distribution and regulation of the electric power\non board the satellite. The power handling design is specified in order to safeguard\nthe power supply of the satellite bus as far as possible. Furthermore, specific\nprotection features are implemented in order to prevent damaging of the on-board\ncomponents or the battery which are essential for accomplishing the mission\nobjectives. Figure 5.9 shows the circuitry of the PCDU and its connections to the\nsatellite bus.\n\nThe PCDU does not perform a classic maximum power point tracking of the\nsolar panels and there are no shunts dissipating unused energy. Instead the PCDU\nadjusts the operating point of the solar panels such that the voltage is optimized to\nsupply the battery and the loads with power. Thus besides the panel temperature\nand illumination, the actual operating point of the panels depends on the battery\nvoltage and the system\u2019s current power consumption. For example when the\nsatellite exits the eclipse with the panels oriented to the sun, the voltage needed to\ncharge the battery and supply power to the system is typically lower than the\nmaximum power point voltage of the solar panels, so the panels are not used to their\nfull potential. However, this loss in power is accepted as the panel voltage is\ngenerally in the same range as the necessary charge voltage so the losses are limited\nand the system design is very simple and robust.\n\nEach solar panel is connected to only one battery string by a Battery Charge\nRegulator (BCR), in order to prevent a single point failure. The FLP target satellite\nconfiguration represents a non-DET system [141] with an unregulated power-bus.\nThe BCR is located in the direct energy path to protect the satellite bus from\nexcessive voltage or current transients.\n\nAs explained in Sect. 5.2 the solar arrays of the first FLP based satellite \u201cFlying\nLaptop\u201d are limited with respect to the maximum voltage and do not provide the\nfull standard of 28 V. Thus for this spacecraft each BCR is adjusted to an upper\nvoltage limit of 25.5 V, which corresponds to the end charge voltage of each battery\nstring.\n\nThe three independent power strings are combined before the Main Switch of the\nPCDU, but are secured with diodes to prevent the current flow of one string into\nanother. In case a battery string or solar panel is broken or short-circuited, the\nenergy of the other two strings can be used to operate the spacecraft.\n\n5 Power Supply Subsystem 135\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\nFig. 5.9 Circuitry and power connections of the PCDU. \u00a9 IRS, University of Stuttgart\n\n136 K.-S. Klemich and B. B\u00e4tz\n\n\n\nString 0 and 1 represent the energy paths of the deployable solar panels, whereas\nstring 2 represents the path of the center panel and the solar test string. The solar\ntest string is used for the generation of electrical energy by default together with\nstring 2.\n\nThe distribution of power to the consumer loads is controlled by the application\nof a fuse and switch system. The PCDU deactivates the power supply by the\nrespective Latching Current Limiters (LCLs), as soon as an over-current is mea-\nsured. To minimize volume, mass and cost of the PCDU some power outputs are\nconnected to a shared fuse. However, critical on-board components such as the\nOBC boards and the TC receivers are implemented as single loads on dedicated\nseparate fuses.\n\nFor reliability reasons and due to the combined allocation of multiple loads to\none fuse, additional switches are used to regulate power supply of single loads.\nHigh-power consuming components are equipped with two switches in series in\norder to protect the satellite bus. If one switch should stick in open closed position,\nthe second serially connected switch can be opened to deactivate the respective\ncomponent, if necessary. The LCL fuses can be reactivated after the event of an\nover-current and the connected consumers are not lost for the mission. A complete\nlist of the component affiliations to fuses and switches can be found in Table 17.10.\n\nThe battery heaters with their bi-stable relays already were mentioned in\nSect. 5.4.1. In each of the heater circuits\u2014one nominal and one redundant\u2014there\nare two switches: bi-stable relays in the PCDU and thermostat switches in the\nbattery system. The bi-stable relays can be activated and deactivated by command\nto the PCDU, the thermostat switches in the battery close the circuit when the\nbattery temperature drops below approximately 0 \u00b0C. Note that this limit temper-\nature was selected because below 0 \u00b0C the battery capacity decreases significantly\nand its voltage characteristics change. However, it does not yet constitute a critical\ntemperature for the battery cells. Their lower operating temperature limit is ?30 \u00b0C\nas provided by the manufacturer [58].\n\nDuring nominal operations, the bi-stable relays are activated at all times so that\nthe battery is heated whenever its temperature drops below 0 \u00b0C. Due to the\nrelatively low power consumption of the heaters (up to 8 W), this state is not\nchanged as long as the OBSW is active, i.e. there are no FDIR actions which\ndeactivate the bi-stable relays in the PCDU directly. However, the bi-stable relays\nare deactivated as soon as the PCDU is commanded to shut down mode in case of a\nsevere battery under-voltage or low SoC, which constitutes a severe FDIR case (see\nSect. 10.3.1).\n\nFigure 5.10 shows the connections between the PCDU and a single battery\nstring. Charge and discharge of the battery is managed by the power interface. By\ndefault, the switch is closed in order to allow charging of the battery string. If the\ncharge process shall be interrupted the switch can be opened. The energy path with\nthe diode still allows energy extraction from the battery.\n\nSince the PCDU only monitors the voltage level of a complete battery string,\nsingle cells would not be protected against overcharging by this simple approach. If\nthe voltages of single, serially connected cells diverge too much, single cells could\n\n5 Power Supply Subsystem 137\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nbe overcharged before the combined charge limit of 25.2 V is reached. Therefore to\nprevent overcharging of an individual cell, battery charge control boards are\nimplemented inside the battery which monitors the respective cell voltage.\nThe PCDU provides corresponding interfaces for dedicated the signals from the\nmonitoring circuitry inside the battery. As soon as the PCDU receives the interrupt\nsignal, battery charging is stopped by opening the respective switch in the energy\npath for a specified time. In case of a fault event there exists the possibility to\ncommand the PCDU to ignore the interrupt signal.\n\nEach battery string is equipped with two temperature sensors for thermal\nmonitoring. In case the temperature limits for a stable energy output are violated\nthis is detected by the TCS_Controller. In such case FDIR disables the string\ncharging to prevent long-term damaging of the cells\u2014see Sect. 10.3.3.3.\n\nThe battery\u2019s State-of-Charge (SoC), is usually calculated by the OBSW and\nadditionally in the PCDU for those cases where the OBC is not operational\u2014see\nSects. 5.4.2 and 10.3.1. The available under-voltage protection feature preserves the\nbatteries, if the voltage level falls below 19 V (HW protection in PCDU) and 20 V\n(SW protection in OBSW).\n\nThe measurement point is located at the main switch of the PCDU. A staggered\nscheme of undervoltage handling is implemented in the platform FDIR. For more\ndetails see Sect. 10.3.1. The final stage is the one where the PCDU and hence the\ncomplete satellite is deactivated. In this extreme under-voltage case the satellite\nsystem is set into the PCDU Shutdown Mode, where the available power charges\n\nFig. 5.10 Connection of the PCDU and a battery string. \u00a9 IRS, University of Stuttgart\n\n138 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nonly the batteries and survival is assured with a sufficient margin before the min-\nimum voltage level is reached. In order to avoid a meta-stable state, in which the\nsatellite turns on and off, the PCDU reactivation threshold is specified to a higher\nvoltage level of 21.5 V.\n\nA further implication of the combined loads at one fuse is a current monitoring\nfeature by S/W through a Current State Table. The Current State Table contains\nreference values of the permitted current levels for all on-board components.\nAdditionally, the PCDU records and monitors which components are\nactive/powered at each fuse with the help of the configuration list. As soon as an\nLCL determines a current flow exceeding the referenced value in the Current State\nTable, the PCDU deactivates the respective LCL to avoid corruption of the con-\nnected components. This monitoring functionality is performed with a repetition\nrate of higher than 20 Hz to increase the protection potential.\n\n5.5.2 PCDU Design Overview\n\nThe PCDU (see Fig. 5.11 and Table 5.4) features two SH7045 32-bit high-speed,\nsingle-chip microcontrollers [56] from RENESAS Electronics for the operational\ntasks. Those controllers have already been successfully applied for multiple space\nmissions by Vectronic Aerospace.\n\nThe steady state power consumption of the unit lies at approximately 8 W. By\ndesign, heat emitting parts like fuses, switches or the CPUs are placed by Vectronic\non PCBs near the baseplate, which is connected to the structure for thermal con-\nductance reasons. The remaining surface sections are anodized in a matt black color\n\nFig. 5.11 Engineering model of the PCDU (from [47]). \u00a9 Vectronic Aerospace GmbH\n\n5 Power Supply Subsystem 139\n\n\n\nto increase the thermal balancing by radiation. A PCB internal heating for the CPU\nPCBs facilitates a fast warm-up to ?20 \u00b0C in order to prevent damaging of electronic\nparts due to thermal stress due to high temperature gradients. Moreover, the PCDU is\nqualified to a lower limit of ?40 \u00b0C for operational use to increase the availability of\nthe PCDU and thus satellite system reliability (see also Sect. 8.2). The thermal\nconditions are monitored by 5 internal temperature sensors inside the PCDU.\n\nAccording to FLP platform design regulations the PCDU is designed single\nfailure tolerant. This means that a specific functionality is covered by a redundant\nunit or functional path in case the nominal unit fails.\n\nThe PCDU is equipped with a number of interfaces for connecting digital and\nanalog equipment plus the serial interconnection to the OBC. Furthermore, the\nPCDU provides electrical interfaces for power generation, storage and distribution.\nBesides that interfaces exist for satellite system monitoring and for all tasks of OBC\nmonitoring and reconfiguration in the frame of the overall CDPI architecture. The\nlisting provided below comprises all interfaces that are implemented for FLP use.\n\n\u2022 Interface to solar arrays\n\u2022 Interface to batteries\n\u2022 Power supply for all components\n\u2022 Battery overcharge protection\n\u2022 Interface to the launcher\n\u2022 RS422 communication interfaces to the OBC Processor-Board through\n\nI/O-Board\n\u2022 RS422 communication interface for High Priority Commands\n\u2022 Interface for temperature sensors\n\u2022 Interface for sun sensors\n\u2022 Interface for solar panel deployment detection\n\nThe PCDU is commanded by so-called PCDU Common Commands for control\nof the fuses, switches and PCDU modes and to request sensor data as well as PCDU\nstatus. The detailed command format between OBC and PCDU is described in [47],\nbut it is transparent for the ground operator. The PCDU is commanded via TC by\nstandard commands for fuse switching, power switch activation etc. as defined in\nthe Mission Information Base (MIB).\n\nTable 5.4 PCDU characteristics\n\nParameter Min Typical Max Unit\n\nSupply current at 25 V Auxiliary Supply (standby) 90 100 120 mA\n\nPower consumption at 25 V Auxiliary Supply (standby) 2.5 W\n\nBus voltage 18.5 \u2013 25.5 V\n\nReset recovery time \u2013 10 20 sec\n\n140 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\n\n\n5.5.3 PCDU Boot-up Sequence and PCDU Modes\n\nThe FLP platform is designed for compatibility with launch supplier requirements\nfor secondary payload satellites. For these usually the requirement exists that no\nelectronic units in the satellite are permitted to be active before launcher separation\nto avoid electromagnetic interference with the launcher and/or its main payload.\nThus the FLP platform based satellites are designed to be launched with all avionics\noff\u2014including OBC and PCDU.\n\nThe PCDU is in Launch/Shutdown mode before separation of the satellite from\nthe launcher (see Fig. 5.12 and [57]). The only active circuitry is the analog\ndetection circuit for launcher separation inside the PCDU plus the battery charge\ncontrol boards inside the battery.\n\nAfter separation of the satellite from the launcher\u2014or after recovery from\nspacecraft overall power failure\u2014the PCDU is the first unit on board to boot. A safe\nand reliable step-by-step boot-up sequence of the PCDU and thus of the entire\nsatellite system is implemented to facilitate the completion of the first stable satellite\nmode, the System Safe Mode.\n\nThe boot-up procedure includes specific prerequisites before the OBC boards are\npowered by the PCDU and take over control of the satellite. Thereby, following\nactions are performed to prevent the damaging of critical satellite units:\n\n1. PCDU internal heaters warm up the unit to its operational temperature limit\n2. The power level of the battery is checked to complete the entire PCDU boot-up\n\nprocedure up to initiate the equipment power-up steps for the satellite Safe\nMode\u2014see Fig. 5.12.\n\n3. Check of the temperature level of the OBC unit and the TT&C transceivers. If\ntemperature is below the operational limit, the PCDU activates the power\nswitches for the redundant internal heater design of both units. These heaters are\nregulated via PCDU internal thermistors to facilitate the heating up to the\nspecified operating temperature.\nAlternatively, a timer condition is implemented which is set according to the\nresults of thermal simulations.\nAs soon as the timer condition is met, the PCDU continues the boot-up process.\n\n4. The last step concludes the boot-up procedure to the PCDU MiniOps Mode.\n\nFrom this point onwards, the OBC can command every other defined operations\nmode of the satellite. The detailed co-operation between PCDU and then booted\nOBC and OBSW during the Launch and Early Orbit Phase (LEOP) is described in\nmore detail later in Sect. 4.4. Since the initial spacecraft power-up sequence does\nnot involve any spacecraft commanding from ground it will not be detailed here any\nfurther.\n\nIt is possible for the system to re-enter the Shutdown mode when the battery SoC\ndrops severely (see Sect. 10.3.1). There exist two PCDU Recovery Modes that\n\n5 Power Supply Subsystem 141\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nprepare the satellite for the system boot. Main activities are heating of PCDU and\nOBC/TTC to their operational temperature range. These steps will be run through\nafter launch or emergency shutdown.\n\nFig. 5.12 PCDU modes and transitions. \u00a9 Vectronic Aerospace GmbH\n\n142 K.-S. Klemich and B. B\u00e4tz\n\n\n\nThe PCDUMiniOpsMode is a veryminimalisticmode and does not even allow the\nPSS_Controller of the OBSW to command any fuse switching. Therefore when the\nPCDU has booted OBC and TTC subsystem at system startup, and the OBSW is\ncommanding the spacecraft into SafeMode, it also commands the PCDU up to its Idle\nMode. In PCDU Idle Mode, all other spacecraft components can be powered via\ncommon command. The entire PCDUmode transition process is depicted in Fig. 5.12.\n\n5.5.4 Specific PCDU Functions in the CDPI Architecture\n\n5.5.4.1 Analog Data Handling Concept\n\nOne of the special characteristics which exceeds the scope of duties of a standard\nPCDU is the different approach for the on-board data reception. Usually, the col-\nlection of all data is conducted by a separate unit in an industrial satellite, some-\ntimes referred to as Remote Interface Unit [140].\n\nFor the FLP, digital and analog data interfaces are separated in the command\nchain. Most of the digital IFs to the satellite units are realized by the OBC\nI/O-Boards. Making use of synergies, the PCDU contains all analog on-board\ninterfaces. Since the PCDU contains analog/digital converters (ADCs), for the\nmeasurement of voltages and currents anyway, this step was a reasonable decision.\n\nAccording to this interface control concept, the PCDU collects all analog sensor data\non board the satellite. Some digital sensor data which is required for the PCDU tasks is\ncollected as well. The following sensor data is collected by the PCDU (Table 5.5):\n\nThis sensor data is not processed inside the PCDU. Whereas the analog sensor\ndata is converted to digital data by the ADCs, all sensor data is forwarded to the\n\nTable 5.5 Overview of sensor data collected by PCDU\n\nQuantity of functionalData Information\nconnections\n\nData Type\n\nanalog32Temperature sensors (resistance)\n\nanalog61Sun sensors (current)\n\nSolar panel and battery condition (voltage/current) 3 (for solar panels)/3 (for\nbatteries)\n\nanalog\n\nCharacterization of an experimental test string\n(voltage/current)\n\nanalog1\n\nReed sensors for deployment status of two solar\nwing panels\n\ndigital4\n\nSeparation detection from upper stage of the\nlauncher\n\ndigital1\n\nInput for monitoring signals for battery\novercharge protection\n\ndigital3\n\n5 Power Supply Subsystem 143\n\n\n\nOBC. The handling is conducted in the OBC, utilizing its processing power, where\nthe relevant data is also distributed to the respective subsystem control module. For\nexample the temperature sensor data are handled by the TCS_Controller in the\nOBSW, the Sun Sensor data by the ACS_Controller.\n\n5.5.4.2 PCDU Functions for OBC and S/C FDIR\n\nAs already mentioned in Sect. 1.8 the PCDU internal Combined-Controller pro-\nvides reconfiguration functions for both PCDU internal board reconfigurations and\nfor OBC board reconfigurations. Details on these functions are provided in the\nFDIR Sect. 10.2.2 of this book.\n\nFurthermore the PCDU can be commanded directly via High Priority Commands\n(HPCs) which bypass the OBSW in case of emergency situations where OBC and\nOBSWare failed. TheHPCbasedS/C recovery functions are described in Sect. 10.2.4.\n\n5.5.5 Diverse PCDU Functions\n\nThe PCDU furthermore features a number of functionalities which partly are\nstandard for PCDUs, partly are resulting from the PCDU\u2019s role in the overall CDPI\narchitecture and some also are implemented as specifics of the FLP target satellite.\nThese functions are explained very briefly here only. For further information please\nrefer to [57, 123].\n\n5.5.5.1 Deployment Control for De-Orbiting Mechanism\n\nFor faster deorbiting an FLP based satellite can be equipped with a\nDe-Orbiting-Mechanism (DOM) which is a deployable Kapton sail to increase the\naerodrag. For control of the DOM release the PCDU firmware contains an internal\nDOMdeployment counter which is starting to count down one tick per second as soon\nas the PCDU is booted to Mini-Ops mode or higher. For cyclic timer reset during\nnominalmission and for themission end of life scenario description refer to Sect. 11.9.\n\n5.5.5.2 Launcher Separation Detection\n\nDue to the PCDU taking over in the CDPI architecture some functions of a classical\nOBC Remote Interface Unit (RIU) it features an arming switch for detection of\nspacecraft separation from the launcher by opening the according circuits. This\nprerequisite together with a sufficient level of solar array input power is required to\nstartup the PCDU operations. More details on the process during LEOP sequence\nare provided in Sect. 11.6.\n\n144 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\n5.5.5.3 Control and Monitoring of Solar Panel Deployment\n\nThe control and the monitoring of the solar panels deployment procedure by the\nPCDU is based on both implemented Deployment Timers (timer 0 and timer 1) and\non the activation flag. The control is performed if the activation flag is enabled\n(default).\n\nAfter the timer 0 becomes active (time after launcher separation) the PCDU\nactivates the fuses and the switches of the heaters for the deployment mechanism\nand checks its status. The default value for the time delay between launcher sep-\naration and start of deployment is 300 s. The value is programmable on ground\nbefore launch to comply to the requirements of the launch supplier.\n\nAs soon as the deployment mechanism signals a successful deployment of the\nsolar panels, the PCDU switches off the heaters and disables the activation flag. If\nthe deployment mechanism does not signal a successful deployment of the solar\npanels and the timeout value of 180 s is exceeded, the PCDU will switch off the\nheaters without disabling the deployment process. A total of 5 attempts will be\nmade (with a wait interval in between) to release the solar panels by switching the\ndeployment device heaters. After 5 unsuccessful attempts the autosequence is\nfinally deactivated in order to save power, and FDIR from ground has to take over.\nMore details on the process during LEOP sequence are provided in Sect. 11.6.\n\n5.5.5.4 History Log Function\n\nThe PCDU software includes a history log functionality for commands, Events and\nconfiguration of working components. The history log functionality is introduced in\norder to establish a means to trace activities inside the unit in case of operational\nissues. Each of the recorded parameters are identified by a dedicated ID and a time\nstamp.\n\n5.5.5.5 Time Synchronization Between Internal Controllers\n\nThe PCDU features a time synchronization mechanism between the current oper-\nating PCDU controller and the hot redundant one. The synchronization is per-\nformed every 5 min.\n\n5.5.5.6 Overvoltage Protection\n\nIn addition to the under voltage protection feature for the batteries, the PCDU\nfeatures an overvoltage protection for itself. The PCDU is switched off automati-\ncally via its main switch as soon as the bus voltage exceeds 28.5 V. This case may\napply during tests on ground, when the PCDU is powered through the auxiliary\npower input but is unlikely during flight.\n\n5 Power Supply Subsystem 145\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\n5.5.5.7 Measurement of Test-String Characteristics\n\nThe PCDU of the first FLP mission \u201cFlying Laptop\u201d features a measurement cir-\ncuitry based on an analog/digital converter (ADC) for recording the characteristic\nline of the test string of the satellite\u2019s center solar array. The measurement is\ninitiated by command. The PCDU sets the current flow through a shunt resistor and\nrecords the values of the current and of the associated voltage.\n\n5.6 Power Subsystem Control\n\nThe power balancing and battery charge/discharge control in the FLP power sub-\nsystem (PSS) is almost completely automated by the PCDU. For communication\nwith the PCDU and for managing the PCDU the power subsystem inside the\nOBSW is equipped with a PCDU handler object.\n\nNotwithstanding the autonomy in electric power control through the PCDU, it is\nrequired to perform certain enhanced surveillance and control activities from within\nthe OBSW to maintain a consistent system overview. The OBSW therefore features\na PSS_Controller application (see Fig. 5.13), which is composed of a number of\nsystem objects as shown in Fig. 5.14.\n\nThe controller manages a \u201cBattery String\u201d object for each physical string, which\nis responsible for battery power and state of charge calculation. Each string has a\n\u201cString Power Sensor\u201d object, which checks sanity of the voltage and current\nsensors of the respective battery string in the PCDU.\n\nThe controller also has a \u201cSolar Panel\u201d object for each solar panel (and the test\nstring), which monitors the panel\u2019s voltage and current sensors and calculates the\npower being generated by each panel.\n\nThere exists also a \u201cFuse\u201d object for each fuse, which first checks the health of\nthe fuse\u2019s current sensor, calculates a power value and monitors this power value\nwith respect to the powered devices. The device\u2019s power information is found in the\nso called \u201cDevice Power Component\u201d, which represents the information related to\npower management of a fuse connected device. Depending on the number of\ndevices attached to one fuse, each Fuse object has one to four Device Power\nComponents.\n\nFig. 5.13 Power-subsystem control elements in OBSW. \u00a9 IRS, University of Stuttgart\n\n146 K.-S. Klemich and B. B\u00e4tz\n\n\n\nFinally, the controller has a \u201cBus Power Sensor\u201d object, which monitors the bus\ncurrent and voltage sensor sanity and calculates the bus power.\n\nThe PSS_Controller object itself is responsible for value aggregation, such as for\nthe calculation of the combined state of charge, or the power running through all\nfuses, as well as higher-level monitoring and control activities, which are described\nbelow in more detail.\n\nFigure 5.15 shows all calculations and their localization in the PSS_Controller.\nIn addition, it shows the d datapool in- and output as well as the dependencies of\nthe calculations. Dotted arrows indicate that the originating calculation needs to be\nperformed for the target one to be calculated, even though the result is not used.\nA green arrow indicates, that there is an alternative strategy in case the value is not\nvalid.\n\nFig. 5.14 PSS class diagram. \u00a9 IRS, University of Stuttgart\n\nFig. 5.15 PSS calculations and data pool dependencies. \u00a9 IRS, University of Stuttgart\n\n5 Power Supply Subsystem 147\n\n\n\n5.6.1 PCDU Device Handler\n\nThe PCDU device handler is used to command the PCDU through the OBSW. It\noffers the following modes (Table 5.6):\n\n\u2022 During normal flight operation of the satellite the PCDU will be in mode\nNormal, submode Idle.\n\n\u2022 In MiniOps Mode the PCDU does not allow switching fuse statuses, therefore it\nis not used for flight operations.\n\n\u2022 Commanding the PCDU down to On mode will cut the communication between\nOBC and PCDU as the PCDU will not listen anymore to OBC TM requests.\nThis will initiate a severe OBC reconfiguration sequence as described in\nSect. 10.2.3.\n\n\u2022 Commanding the PCDU to Off mode will shutdown the PCDU and cut the\npower for all satellite equipment. Presuming the power-bus shows a sufficient\nvoltage level the PCDU will reboot automatically. Nevertheless this measure is\nstrictly reserved for severe FDIR cases\u2014see Sect. 10.3.\n\n5.6.2 PSS Controller\n\nThe main tasks of the PSS_Controller are to monitor the PCDU\u2019s behavior, to\ncheck the system\u2019s power consumption, and to calculate the battery state of charge.\n\n\u2022 The monitoring actions are:\n\n\u2013 Monitor the solar panels and calculate the generated power (see\nSect. 5.6.2.7).\n\n\u2013 Check solar panel deployment after separation (see Sect. 5.6.2.7).\n\nTable 5.6 PCDU device handler modes\n\nHandler Mode M# Submode SM# Description\n\nPCDU Off 0 Default 0 No PCDU Commanding. DO NOT\nUSE!\n\nOn 1 Default 0 No automatic PCDU Commanding,\ndirect commanding possible. DO NOT\nUSE!\n\nNormal 2 MiniOps 0 PCDU MiniOps Mode\n\nIdle 1 PCDU Idle Mode\n\nRaw 3 Default 0 Raw Mode unchanged from before\n\n148 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n\u2013 Monitor the battery strings and calculate a battery power, their independent\nand a combined capacity and state of charge (see Sect. 5.6.2.6).\n\n\u2013 Check the power flowing through each fuse and compare with expected\npower of devices (see Sect. 5.6.2.8).\n\n\u2013 Check the sanity of the bus voltage and current sensors (see Sect. 5.6.2.9).\n\n\u2022 In addition, some control activities are performed.\n\n\u2013 Update the battery capacity values estimated in the PCDU regularly.\n\u2013 Control activation and deactivation of BCRs (see).\n\n\u2022 As an extra activity, the controller should bring the system into a well-defined\nstate after OBC boot.\n\nTo manage all these activities, the controller features a number of modes,\nfunctions, private pool elements and monitors, which are explained below.\n\nThe controller is executed at a constant frequency. In each step all control\nactivities above are executed and all output variables calculated, both for the\ncontroller itself and all sub-objects. The power subsystem cycle rate is provided in\nSect. 3.4.2.\n\n5.6.2.1 PSS Controller Modes\n\nThe power subsystem applies the general system-wide mode concept (i.e. it can be\ncommanded with default mode commands). The PSS_Controller directly mirrors\nthe PSS modes and performs the required operational tasks as listed in Table 5.7.\n\nTable 5.7 PSS_Controller mode table\n\nCtrler Mode M# Submode SM# Description\n\nPSS Off 0 Default 0 Off\n\nOn 1 Default 0 On, but no capacity updates to the PCDU\n\nNormal 2 Default 0 On, with capacity updates to the PCDU and\nhealth state checks of the BCRs (if all are Off, it\nturns all On again)\n\nOnly SoC\nUpdates\n\n1 On, with capacity updates to the PCDU, no\nhealth state checks of the BCRs (if all are Off, it\nturns all On again)\n\nOnly BCR\nstate\ncheck\n\n2 On, with health state checks of the BCRs (if all\nare Off, it turns all On again), no capacity\nupdates to the PCDU\n\nBoot 20 Default 0 Performs boot procedure: relays On, fuses On,\nswitches Off, get initial capacity values from\nPCDU, thereafter Off\n\n5 Power Supply Subsystem 149\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n\u2022 There exists an Off mode, where the controller does not perform any monitoring\nand control activity,\n\n\u2022 an On mode, where all monitoring calculations are performed, but no control\nactivities,\n\n\u2022 and a Normal mode, where controlling is scheduled as stated above. To turn off\nspecific control activities, the Normal mode is defined with three submodes.\nTable 5.7 lists all available modes.\n\nAs mentioned in the PCDU subsection, the controller will automatically switch\nthe PCDU to its Idle Mode system boot and will turn on all healthy fuses.\n\nIf the controller is commanded to Off mode, it sets all datapool variables to\ninvalid and all monitors to unchecked.\n\nIf the controller was in Off state, it polls the capacity values from the PCDU as\ninitialization values for the state of charge algorithm during a transition to On or to\nNormal.\n\n5.6.2.2 Boot Mode Procedure\n\nDuring boot, the PSS_Controller shall bring all fuses into a well-defined state for\nthe OBSW to take over system control from the PCDU. Figure 5.16 shows a flow\nchart of the boot procedure.\n\nFor these activities, it is necessary to command the PCDU, which might fail. In\nthis case, the procedure is stopped and either a PSS_TIMEOUT event or a\nPSS_COMMANDING_PCDU_FAILED event (see Sect. 10.3) is triggered. The\nformer indicates that the PCDU did not respond at all, the latter that either sending\nthe command to the PCDU failed, or the PCDU did not (correctly) execute the\ncommand. The controller will switch to the desired mode anyway, but the proce-\ndure might not be executed entirely (meaning there might still be some fuses\nremaining in Off status).\n\nFig. 5.16 Flow chart of boot\nprocedure. \u00a9 IRS, University\nof Stuttgart\n\n150 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n5.6.2.3 Controller Functions\n\nThe PSS_Controller provides functions (Service 8) to simplify handling different\nbattery SoC calculation parameters.\n\n\u2022 One command is to simplify setting all maximum battery string capacities at\nonce, which needs to be executed regularly because of cell degradation.\n\n\u2022 Furthermore there is one command to update the estimation values in the PCDU\nand\n\n\u2022 one to set all calculation parameters for one string (see Table 5.10).\n\nFor details on the algorithms see Sect. 5.6.2.6.\n\n5.6.2.4 Controller Memory\n\nThere are some private pool parameters to adjust the following values:\n\n\u2022 The PCDU update interval: The interval in which the capacity values in the\nPCDU are updated by the controller.\n\n\u2022 The maximum delta capacity: The capacity difference between the combined\ncapacity calculated by the PCDU and that of the PSS above which a\nCAP_DELTA_VIOLATION event is thrown.\n\n\u2022 The panel deployment flag: This flag can be used to manually overwrite the\ndeployment check (see Sect. 5.6.2.7).\n\n5.6.2.5 Controller Monitors\n\nThe built-in monitors of the controller check the calculated battery State-of-Charge.\nThe check is performed with a group of three standard limit checks, where the high\nlimit is set to an unrealistic value. The default values are collected in Table 5.10.\nThe three checks throw SOC_WARNING, SOC_CRITICAL and\nSOC_SHUTDOWN event (see Sect. 10.3) in case the state of charge drops below\ngiven limits. SOC_HIGH indicates a calculated state of charge higher than 100 %\nand should never occur in a bug-free software with correctly set limits.\n\n5.6.2.6 Battery String\n\nEach battery string is represented by a \u201cBattery String\u201d object, the activities of\nwhich are shown in Fig. 5.17. The blue squares depict calculations that are per-\nformed, the arrows show the necessary datapool input and the produced output.\nOrange ellipses represent standard limit monitors.\n\nThe string object checks all input values and calculates the power consumed or\ndistributed by the battery. From that given input and the capacity value from the\nprevious computing step, it also calculates a new capacity and SoC as described\n\n5 Power Supply Subsystem 151\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nfurther below. The adjustable parameters for this calculation are accessible in the\nstring object\u2019s private pool memory.\n\nChecking the input values includes monitoring of the string\u2019s current and voltage\nsensor, which is done by a dedicated object.\n\nIf the current or voltage input values are out of range or the sensors are marked as\nfaulty, no calculation is performed. If the temperature is invalid, the power value is\nstill calculated and the controller switches to a simplified state of charge estimation.\n\nState of Charge Estimation Algorithm\nTo avoid drifting of the calculated capacity value, the algorithm has a calibration\nfunction, which initially sets the string capacity to its maximum value. To trigger\ncalibration, a voltage, State-of-Charge and current and threshold is used. Assuming\nthe battery is almost full, the voltage as well as the SoC should be above a certain\nlevel and the current should be positive but small\u2014see Sects. 5.4.2 and 5.4.3.\n\nIf all these conditions are fulfilled, the capacity is set to the calibrated maximum\ncapacity and a SOC_CALIBRATION Event is thrown.\n\nString Memory\nThe string\u2019s parameters tune the State-of-Charge calculation algorithm which was\ndescribed previously. Settable values are\n\n\u2022 the maximum capacity of a string\n\u2022 the power consumption of the BCC boards\n\u2022 the thresholds when calibration takes place\n\u2022 the temperature value above which the state of charge estimation is\n\ntemperature-corrected\n\u2022 factors to estimate the temperature losses.\n\nDefault values are found in Sect. 5.4.3.\n\nFig. 5.17 Battery string object. \u00a9 IRS, University of Stuttgart\n\n152 K.-S. Klemich and B. B\u00e4tz\n\n\n\nCombined Capacity and State-of-Charge\nAfter calculation of the individual state of charge and capacity values of each string,\nthe PSS_Controller collects all valid values and merges them to a combined value.\nThe combined State-of-Charge is the mean value of all valid state of charge values,\nthe capacity the sum. If no values are valid, the combined values are set to invalid.\n\nThe calculated capacity is compared with the capacity provided by the PCDU. If\nthe values differ more than the defined threshold (see Sect. 5.6.2.4), the\nCAP_DELTA_VIOLATION Event (see Sect. 10.3) is thrown.\n\nAs there is a certain drift assumed between PCDU and PSS calculation, the\ncapacities in the PCDU are updated at regular, settable intervals by the\nPSS_Controller (see Sect. 5.6.2.4). In normal conditions, the calculated capacities\nshould drift less than 1 % per orbit.\n\nString Health\nThe battery string itself has a health state which may be \u201cHEALTHY\u201d or\n\u201cFAULTY\u201d. It indicates if the battery itself is defective. The health state of a battery\nstring is monitored by the PSS_Controller. The controller turns off the BCR for that\nbattery string to avoid damaging or heating up the system. If the health state\nbecomes \u201cHEALTHY\u201d again, the BCR is re-activated.\n\nAs turning off all battery strings is very dangerous for the satellite, the controller\nwill overwrite all health states in case where all strings are marked as \u201cFAULTY\u201d\nand will try to turn them on again.\n\nThe PSS_Controller does not stop capacity and state of charge estimation for a\nstring tagged faulty. The algorithm assumes the current and voltage values still\nbeing valid and therefore further calculations are possible.\n\nString Power Sensor\nEach string has a dedicated sensor object to monitor the health of the battery\nstring\u2019s current and voltage sensor and to calculate the power value.\n\nThe sensor object checks the current and voltage values for reliability, i.e. it\nchecks if they have a physically reasonable value. If the values are valid and\nreasonable, a power value is derived.\n\nThe sensor can be tagged \u201cFAULTY\u201d, which stops the monitor checks and\npower calculation. The power output value becomes invalid, the monitors are set to\n\u201cunchecked\u201d. In addition, the string\u2019s current and SoC calculation stops and these\nvalues are invalidated, as the required current value is assumed to be faulty.\n\nThe sensor maintains two limit monitors, one for current and one for voltage. In\ncase of a limit violation, the monitors throw appropriate Events (e.g.\nBATTERY_CURRENT_LOW\u2014see Sect. 10.3).\n\n5 Power Supply Subsystem 153\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n5.6.2.7 Solar Panel\n\nThe \u201cSolar Panel\u201d object monitors one solar panel or the test string and calculates\nthe power value of the panel. Its calculation (blue squares) and monitoring (orange\nellipses) activities are shown in Fig. 5.18.\n\nThe object checks the current and voltage values for reliability, i.e. it checks if\nthey have a physically reasonable value. If the values are valid and reasonable, a\npower value is calculated. If a limit is violated, the panel object throws an appro-\npriate event e.g. PANEL_VOLTAGE_HIGH (see Sect. 10.3).\n\nA panel can be tagged \u201cFAULTY\u201d, which stops the monitor checks and power\ncalculation. The power output value becomes invalid, the monitors are set to\n\u201cunchecked\u201d. It is not possible to set the power sensor health separately from the\npanel itself, as the effect is the same (nothing is switched, power calculation is not\nperformed).\n\nThe PSS_Controller features an autonomous check for solar panel deployment\nduring boot. This is done by reading the reed sensor values periodically (every\n30 s). If at least one sensor does not show deployment, a\nPANEL_NOT_DEPLOYED Event is thrown (see Sect. 10.3). As soon as\ndeployment is detected, the controller throws a PANEL_DEPLOYED Event\nimmediately, stops sending Events and sets the \u201cpanels deployed\u201d flag to \u20181\u2019.\n\nIf for some reason the panel was not deployed and the Event needs to be turned\noff, it is possible to overwrite the \u201cPANELS DEPLOYED\u201d flag in the controller\nwith a memory load command (see Sects. 5.6.2.4 and 10.3).\n\nFig. 5.18 Solar panel object. \u00a9 IRS, University of Stuttgart\n\n154 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n5.6.2.8 Fuse\n\nThe \u201cFuse\u201d object provides an additional check for the power consumption of\ncomponents and checks state and health of a fuse (see Fig. 5.19). For power\nchecking, it calculates the current power limits (low/high) from the min/max values\ngiven by each component attached to the fuse and reports violations of these limits.\n\nIn addition, the object checks whether the fuse went off during operation by\nmonitoring the fuse state reported by the PCDU. On detection, a\nFUSE_WENT_OFF Event is thrown (see Sect. 10.3).\n\nIt also features a limit monitor to check the reliability of the current sensor\nvalues. The limits have a low limit of 0 A, the upper limit is chosen such that it is\nabove the expected total maximum current of all components of that fuse.\nA violation indicates either a broken sensor or a very high over current. In this case,\na FUSE_CURRENT_HIGH event (see Sect. 10.3) is thrown and no further cal-\nculations and checks are performed.\n\nThe devices are represented by \u201cDevice Power Components\u201d which maintain the\nlimit values for each device. These limit values are settable by a dedicated PUS\nService 12 command. Each fuse has a health state, which indicates whether the fuse\nor its sensor is broken. In such a case, no further checks are performed and the fuse\n\nFig. 5.19 Fuse object. \u00a9 IRS, University of Stuttgart\n\n5 Power Supply Subsystem 155\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nis not switched on automatically during boot transition. Power calculation is also\nnot performed anymore. This is also the case if the fuse is turned on manually.\n\nPower Components and Power Monitoring\nEach component with at least one switch is monitored by the PSS_Controller. As\nthere are up to four components attached to one fuse but only one current sensor per\nfuse, power monitoring must take into account switch states of the components.\n\nEvery component has two limit values which define the upper and lower power\nlimit for component when being active. Components belong to a fuse object, which\nuses the switch state and the power range to calculate the permitted power range\n(i.e. upper and lower limit) for the entire fuse. Components might belong to mul-\ntiple fuses (this is currently only the case for the Star Trackers).\n\nIn case where the power is out of this range, all components of that fuse with\nswitches On throw a POWER_ABOVE_HIGH_LIMIT respectively a POWER_\nBELOW_LOW_LIMIT event (see Sect. 10.3). This is because it is not possible to\ndistinguish which component violated the limit.\n\nTotal Fuse Power\nTo simplify checking of the power budget, the PSS_Controller calculates a com-\nbined fuse power value, which is the sum of the power values of all fuses. In case\nwhere a fuse is off, faulty or the current is above its limit, the power amount\ncontributing to the total power is 0.\n\n5.6.2.9 Bus Power Sensor\n\nThe bus voltage and the bus current sensor are critical for evaluation of device\npower consumption. Its health is monitored by a dedicated \u201cBus Power Sensor\u201d\nobject. The sensor has a health state which can be set to \u201cHEALTHY\u201d or\n\u201cFAULTY\u201d.\n\nThe object checks the current and voltage values for reliability, i.e. it checks if\nthey have a physically reasonable value. If the values are valid and reasonable, a\npower value is calculated.\n\nApart from turning off the bus power calculation (power value becomes invalid,\nmonitors unchecked), marking the sensor as \u201cFAULTY\u201d leads to a complete\ndeactivation of fuse monitoring, as there is no reference voltage for power calcu-\nlation anymore.\n\n5.6.3 Power Subsystem Mode Transitions and Telemetry\n\nThe Power-Subsystem mode commanding\u2014according to the Handler and\nController modes defined in Tables 5.6 and 5.7\u2014is performed via PUS service 200\nand the following sequences\u2014see Table 5.8:\n\n156 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nTable 5.8 Power subsystem modes and transition sequences\n\nPSS Modes 0x01000300\nCommanding to\nOff-Target Mode\n\nSequence Name Seq ID HardCoded? Fallback\nOff 0x49000000 1\n\nName Table ID WaitTime Check?\nOff_Target 0x49000000 0 0\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000\n\nPCDU 0x44003200\nAchieved by transitions\n\nName Table ID WaitTime Check?\nOff_Trans 0x49000100 0 0\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000 Off 0 Off 0\n\nPCDU 0x44003200\nCommanding to\nDefault Target Mode\n\nSequence Name Seq ID HardCoded? Fallback\nDefault 0x49010000 1 0x49000000\n\nName Table ID WaitTime Check?\nDefault_Target 0x49010000 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000 Normal 2 Default 0\n\nPCDU 0x44003200 Normal 2 Idle 1\nAchieved by transitions\n\nName Table ID WaitTime Check?\nDefault_Trans 0x49010100 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000 Normal 2 Default 0\n\n(continued)\n\n5 Power Supply Subsystem 157\n\n\n\nTable 5.8 (continued)\n\nPCDU 0x44003200\nCommanding to Boot\nTarget Mode\n\nSequence Name Seq ID HardCoded? Fallback\nBoot 0x49020000 1 0x49000000\n\nName Table ID WaitTime Check?\nBoot_Target 0x49020000 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000\n\nPCDU 0x44003200 Normal 2 Idle 1\nAchieved by transitions\n\nName Table ID WaitTime Check?\nBoot_Trans1 0x49020100 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000\n\nPCDU 0x44003200 Normal 2 Idle 1\nName Table ID WaitTime Check?\nBoot_Trans2 0x49020200 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000 Boot 16 Default 0\n\nPCDU\nName Table ID WaitTime Check?\nBoot_Trans3 0x49020300 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode\nID\n\nPower\nController\n\n0x43500000 Off 0 Default 0\n\nPCDU\n\n158 K.-S. Klemich and B. B\u00e4tz\n\n\n\n5.6.4 Power Subsystem Object-IDs, Controller Variables\nand Limits\n\nFor commanding the power subsystem objects from ground via PUS Service 201\nand Service 6 (setting of SoC parameters), the following Object_IDs are to be used\n(see Table 5.9):\n\nTable 5.9 OBSW objects controlling powered devices\n\nObject name Object-ID\nhex\n\nObject-ID\ndec\n\nDescription\n\nPSS_CONTROLLER 43500000 1129316352 Main controller object\n\nFUSE_00 43500100 1129316608 Fuse object\n\nFUSE_01 43500101 1129316609 Fuse object\n\nFUSE_02 43500102 1129316610 Fuse object\n\nFUSE_03 43500103 1129316611 Fuse object\n\nFUSE_04 43500104 1129316612 Fuse object\n\nFUSE_05 43500105 1129316613 Fuse object\n\nFUSE_06 43500106 1129316614 Fuse object\n\nFUSE_07 43500107 1129316615 Fuse object\n\nFUSE_08 43500108 1129316616 Fuse object\n\nFUSE_09 43500109 1129316617 Fuse object\n\nFUSE_10 4350010A 1129316618 Fuse object\n\nFUSE_11 4350010B 1129316619 Fuse object\n\nFUSE_12 4350010C 1129316620 Fuse object\n\nFUSE_13 4350010D 1129316621 Fuse object\n\nFUSE_14 4350010E 1129316622 Fuse object\n\nFUSE_15 4350010F 1129316623 Fuse object\n\nFUSE_16 43500110 1129316624 Fuse object\n\nFUSE_17 43500111 1129316625 Fuse object\n\nFUSE_18 43500112 1129316626 Fuse object\n\nFUSE_19 43500113 1129316627 Fuse object\n\nFUSE_20 43500114 1129316628 Fuse object\n\nFUSE_21 43500115 1129316629 Fuse object\n\nFUSE_22 43500116 1129316630 Fuse object\n\nFUSE_23 43500117 1129316631 Fuse object\n\nFUSE_24 43500118 1129316632 Fuse object\n\nFUSE_25 43500119 1129316633 Fuse object\n\nFUSE_26 4350011A 1129316634 Fuse object\n\nPANEL_RIGHT 43500200 1129316864 A solar panel representation\n\nPANEL_LEFT 43500201 1129316865 A solar panel representation\n\nPANEL_CENTER 43500202 1129316866 A solar panel representation\n(continued)\n\n5 Power Supply Subsystem 159\n\n\n\n5.6.5 Power Subsystem Variables, Limits, and Parameters\n\nThe power subsystem internal variables as listed in Table 5.10 are settings and limit\nparameters and the table lists the default values. The settings can be changed by\nPUS Service 6 commands (one at a time).\n\nAs this mechanism does not provide an entire settings overview, some\nmulti-parameter adjustment functions are implemented into the PSS_Controller\nwhich are listed in Table 5.11 and which can be set by PUS Service 8. PCDU\nsettings only can be queried from ground by PUS Service 6.\n\nTable 5.12 lists the PSS relevant parameter monitor variables and the Events\ntriggered in case of a limit violation.\n\nThe parameters which are managed by the PSS_Controller and which can be\naccessed via PUS Service 6 are provided in Table 5.13.\n\nTable 5.9 (continued)\n\nObject name Object-ID\nhex\n\nObject-ID\ndec\n\nDescription\n\nPANEL_TEST 43500203 1129316867 A solar panel representation\n\nBUS_POWER_SENSOR 43500300 1129317120 Represents current and voltage\nsensor for bus power\n\nBATTERY_STRING_0 43500400 1129317376 Representation of a battery\nstring\n\nBATTERY_SENSOR_0 43500401 1129317377 The power sensor of one battery\nstring\n\nBATTERY_STRING_1 43500500 1129317632 Representation of a battery\nstring\n\nBATTERY_SENSOR_1 43500501 1129317633 The power sensor of one battery\nstring\n\nBATTERY_STRING_2 43500600 1129317888 Representation of a battery\nstring\n\nBATTERY_SENSOR_2 43500601 1129317889 The power sensor of one battery\nstring\n\n160 K.-S. Klemich and B. B\u00e4tz\n\n\n\nT\nab\n\nle\n5.\n10\n\nPo\nw\ner\n\nsu\nbs\nys\nte\nm\n\nin\nte\nrn\nal\n\nco\nm\npu\n\nta\ntio\n\nn\nva\nri\nab\nle\ns\nan\nd\nse\nt/g\n\net\nco\nm\nm\nan\nds\n\nN\nam\n\ne\nin\n\nM\nIB\n\nG\net\n\n T\nC\n\nSe\nt \n\nT\nC\n\n I\nD\n\nU\nni\n\nt\nT\n\nyp\ne\n\nD\nes\n\ncr\nip\n\nti\non\n\nN\nam\n\ne\nA\n\ndd\nre\n\nss\nM\n\nem\nor\n\ny \nId\n\nID\nT\n\nM\nSP\n\nID\n\nPY\nT\n\nD\nC\n\nP0\n0\n\n0x\n43\n\n50\n00\n\n00\n0\n\nM\nA\n\nX\n_D\n\nE\nL\n\nT\nA\n\n_C\nA\n\nPA\nC\n\nIT\nY\n\nT\nhe\n\nm\nax\n\nim\num\n\nal\nlo\n\nw\ned\n\nde\nlta\n\nbe\ntw\n\nee\nn\n\nth\ne\n\ncu\nrr\n\nen\nt\n\nba\ntte\n\nry\nca\n\npa\nci\n\nty\nca\n\nlc\nul\n\nat\ned\n\nin\nth\n\ne\nPC\n\nD\nU\n\nan\nd\n\nth\nat\n\nin\nth\n\ne\nPS\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n\nfi\noa\n\nt\nA\n\nh\nPY\n\nC\n60\n\n00\n1\n\nPY\nC\n\n61\n00\n\n1\n49\n\n00\n\nPY\nT\n\nPU\nI0\n\n0\n0x\n\n43\n50\n\n00\n00\n\n1\nPC\n\nD\nU\n\n_U\nPD\n\nA\nT\n\nE\n_I\n\nN\nT\n\nE\nR\n\nV\nA\n\nL\nT\n\nhe\nra\n\nte\nin\n\nw\nhi\n\nch\nth\n\ne\nca\n\npa\nci\n\nty\nva\n\nlu\nes\n\nin\nth\n\ne\nPC\n\nD\nU\n\nar\ne\n\nup\nda\n\nte\nd\n\nby\nth\n\ne\nO\n\nB\nSW\n\nui\nnt\n\n32\n_t\n\nm\ns\n\nPY\nC\n\n60\n00\n\n2\nPY\n\nC\n61\n\n00\n2\n\n49\n01\n\nPY\nT\n\nD\nE\n\nP0\n0\n\n0x\n43\n\n50\n00\n\n00\n2\n\nPA\nN\n\nE\nL\n\nS_\nD\n\nE\nPL\n\nO\nY\n\nE\nD\n\nT\nhe\n\nde\npl\n\noy\nm\n\nen\nt\n\nst\nat\n\ne\nas\n\nas\nsu\n\nm\ned\n\nby\nth\n\ne\nPS\n\nS\nC\n\non\ntr\n\nol\nle\n\nr.\n1:\n\nD\nep\n\nlo\nye\n\nd;\n0:\n\nN\not\n\nD\nep\n\nlo\nye\n\nd\n\nui\nnt\n\n8_\nt\n\n\u2013\nPY\n\nC\n60\n\n00\n3\n\nPY\nC\n\n61\n00\n\n3\n49\n\n02\n\nPB\nT\n\nC\nT\n\nH\n00\n\n0x\n43\n\n50\n04\n\n00\n0\n\nC\nal\n\nib\nra\n\ntio\nn\n\nC\nur\n\nre\nnt\n\nT\nhe\n\ncu\nrr\n\nen\nt\n\nbe\nlo\n\nw\nw\n\nhi\nch\n\na\nca\n\nlib\nra\n\ntio\nn\n\nis\npe\n\nrf\nor\n\nm\ned\n\nfi\noa\n\nt\nA\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n03\n\nPB\nT\n\nV\nT\n\nH\n00\n\n0x\n43\n\n50\n04\n\n00\n1\n\nC\nal\n\nib\nra\n\ntio\nn\n\nV\nol\n\nta\nge\n\nT\nhe\n\nvo\nlta\n\nge\nab\n\nov\ne\n\nw\nhi\n\nch\na\n\nca\nlib\n\nra\ntio\n\nn\nis\n\npe\nrf\n\nor\nm\n\ned\n\nfi\noa\n\nt\nV\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n04\n\nPB\nT\n\nST\nH\n\n00\n0x\n\n43\n50\n\n04\n00\n\n2\nC\n\nal\nib\n\nra\ntio\n\nn\nSt\n\nat\ne\n\nof\nC\n\nha\nrg\n\ne\nT\n\nhe\nst\n\nat\ne\n\nof\nch\n\nar\nge\n\nab\nov\n\ne\nw\n\nhi\nch\n\na\nca\n\nlib\nra\n\ntio\nn\n\nis\npe\n\nrf\nor\n\nm\ned\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n05\n\nPB\nT\n\nT\nL\n\nI0\n0\n\n0x\n43\n\n50\n04\n\n00\n3\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nhr\n\nes\nho\n\nld\nT\n\nhe\nte\n\nm\npe\n\nra\ntu\n\nre\nab\n\nov\ne\n\nw\nhi\n\nch\nth\n\ne\nca\n\npa\nci\n\nty\nis\n\nca\nlc\n\nul\nat\n\ned\nw\n\nith\nte\n\nm\npe\n\nra\ntu\n\nre\nef\n\nfe\nct\n\ns\n\nfi\noa\n\nt\n\u00b0C\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n06\n\n(c\non\n\ntin\nue\n\nd)\n\n5 Power Supply Subsystem 161\n\n\n\nN\nam\n\ne\nin\n\nM\nIB\n\nG\net\n\n T\nC\n\nSe\nt \n\nT\nC\n\n I\nD\n\nU\nni\n\nt\nT\n\nyp\ne\n\nD\nes\n\ncr\nip\n\nti\non\n\nN\nam\n\ne\nA\n\ndd\nre\n\nss\nM\n\nem\nor\n\ny \nId\n\nID\nT\n\nM\nSP\n\nID\n\nPB\nT\n\nT\nC\n\nL\n00\n\n0x\n43\n\n50\n04\n\n00\n4\n\nT\nhe\n\nrm\nal\n\nca\npa\n\nci\nty\n\nlo\nss\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\nA\n\nh/\nK\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n07\n\nPB\nT\n\nT\nL\n\nC\n00\n\n0x\n43\n\n50\n04\n\n00\n5\n\nC\nha\n\nrg\ne\n\nL\nos\n\ns\nPa\n\nra\nm\n\net\ner\n\nfo\nr\n\nte\nm\n\npe\nra\n\ntu\nre\n\nco\nrr\n\nec\nte\n\nd\nes\n\ntim\nat\n\nio\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n08\n\nPB\nT\n\nC\nC\n\nF0\n0\n\n0x\n43\n\n50\n04\n\n00\n6\n\nC\nha\n\nrg\ne\n\nC\nha\n\nng\ne\n\nFa\nct\n\nor\nPa\n\nra\nm\n\net\ner\n\nfo\nr\n\nte\nm\n\npe\nra\n\ntu\nre\n\nco\nrr\n\nec\nte\n\nd\nes\n\ntim\nat\n\nio\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n09\n\nPB\nT\n\nT\nL\n\nD\n00\n\n0x\n43\n\n50\n04\n\n00\n7\n\nD\nis\n\nch\nar\n\nge\nL\n\nos\ns\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n10\n\nPB\nT\n\nD\nC\n\nF0\n0\n\n0x\n43\n\n50\n04\n\n00\n8\n\nD\nis\n\nch\nar\n\nge\nC\n\nha\nng\n\ne\nFa\n\nct\nor\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n11\n\nPB\nT\n\nM\nC\n\nP0\n0\n\n0x\n43\n\n50\n04\n\n00\n9\n\nM\nax\n\nim\num\n\nC\nap\n\nac\nity\n\nT\nhe\n\nm\nax\n\nim\num\n\nca\npa\n\nci\nty\n\nof\non\n\ne\nst\n\nri\nng\n\nfi\noa\n\nt\nA\n\nh\nPY\n\nC\n60\n\n00\n0\n\nPY\nC\n\n61\n00\n\n0\n49\n\n12\n\nPB\nT\n\nB\nC\n\nC\n00\n\n0x\n43\n\n50\n04\n\n00\n10\n\nB\nC\n\nC\nC\n\nur\nre\n\nnt\nC\n\nur\nre\n\nnt\nfi\n\now\nin\n\ng\nth\n\nro\nug\n\nh\nth\n\ne\nba\n\nla\nnc\n\ner\ns\n\nfi\noa\n\nt\nA\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n13\n\nPB\nT\n\nC\nT\n\nH\n01\n\n0x\n43\n\n50\n05\n\n00\n0\n\nC\nal\n\nib\nra\n\ntio\nn\n\nC\nur\n\nre\nnt\n\nT\nhe\n\ncu\nrr\n\nen\nt\n\nbe\nlo\n\nw\nw\n\nhi\nch\n\na\nca\n\nlib\nra\n\ntio\nn\n\nis\npe\n\nrf\nor\n\nm\ned\n\nfi\noa\n\nt\nA\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n14\n\nPB\nT\n\nV\nT\n\nH\n01\n\n0x\n43\n\n50\n05\n\n00\n1\n\nC\nal\n\nib\nra\n\ntio\nn\n\nV\nol\n\nta\nge\n\nT\nhe\n\nvo\nlta\n\nge\nab\n\nov\ne\n\nw\nhi\n\nch\na\n\nca\nlib\n\nra\ntio\n\nn\nis\n\npe\nrf\n\nor\nm\n\ned\n\nfi\noa\n\nt\nV\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n15\n\nPB\nT\n\nST\nH\n\n01\n0x\n\n43\n50\n\n05\n00\n\n2\nC\n\nal\nib\n\nra\ntio\n\nn\nSt\n\nat\ne\n\nof\nC\n\nha\nrg\n\ne\nfi\n\noa\nt\n\n\u2013\nPY\n\nC\n60\n\n00\n0\n\nPY\nC\n\n61\n00\n\n0\n49\n\n16\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n5.\n10\n\n(c\non\n\ntin\nue\nd)\n\n162 K.-S. Klemich and B. B\u00e4tz\n\n\n\nT\nab\n\nle\n5.\n10\n\n(c\non\n\ntin\nue\nd)\n\nN\nam\n\ne\nin\n\nM\nIB\n\nG\net\n\n T\nC\n\nSe\nt \n\nT\nC\n\n I\nD\n\nU\nni\n\nt\nT\n\nyp\ne\n\nD\nes\n\ncr\nip\n\nti\non\n\nN\nam\n\ne\nA\n\ndd\nre\n\nss\nM\n\nem\nor\n\ny \nId\n\nID\nT\n\nM\nSP\n\nID\n\nT\nhe\n\nst\nat\n\ne\nof\n\nch\nar\n\nge\nab\n\nov\ne\n\nw\nhi\n\nch\na\n\nca\nlib\n\nra\ntio\n\nn\nis\n\npe\nrf\n\nor\nm\n\ned\n\nPB\nT\n\nT\nL\n\nI0\n1\n\n0x\n43\n\n50\n05\n\n00\n3\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nhr\n\nes\nho\n\nld\nT\n\nhe\nte\n\nm\npe\n\nra\ntu\n\nre\nab\n\nov\ne\n\nw\nhi\n\nch\nth\n\ne\nca\n\npa\nci\n\nty\nis\n\nca\nlc\n\nul\nat\n\ned\nw\n\nith\nte\n\nm\npe\n\nra\ntu\n\nre\nef\n\nfe\nct\n\ns\n\nfi\noa\n\nt\n\u00b0C\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n17\n\nPB\nT\n\nT\nC\n\nL\n01\n\n0x\n43\n\n50\n05\n\n00\n4\n\nT\nhe\n\nrm\nal\n\nca\npa\n\nci\nty\n\nlo\nss\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\nA\n\nh/\nK\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n18\n\nPB\nT\n\nT\nL\n\nC\n01\n\n0x\n43\n\n50\n05\n\n00\n5\n\nC\nha\n\nrg\ne\n\nL\nos\n\ns\nPa\n\nra\nm\n\net\ner\n\nfo\nr\n\nte\nm\n\npe\nra\n\ntu\nre\n\nco\nrr\n\nec\nte\n\nd\nes\n\ntim\nat\n\nio\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n19\n\nPB\nT\n\nC\nC\n\nF0\n1\n\n0x\n43\n\n50\n05\n\n00\n6\n\nC\nha\n\nrg\ne\n\nC\nha\n\nng\ne\n\nFa\nct\n\nor\nPa\n\nra\nm\n\net\ner\n\nfo\nr\n\nte\nm\n\npe\nra\n\ntu\nre\n\nco\nrr\n\nec\nte\n\nd\nes\n\ntim\nat\n\nio\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n20\n\nPB\nT\n\nT\nL\n\nD\n01\n\n0x\n43\n\n50\n05\n\n00\n7\n\nD\nis\n\nch\nar\n\nge\nL\n\nos\ns\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n21\n\nPB\nT\n\nD\nC\n\nF0\n1\n\n0x\n43\n\n50\n05\n\n00\n8\n\nD\nis\n\nch\nar\n\nge\nC\n\nha\nng\n\ne\nFa\n\nct\nor\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n22\n\nPB\nT\n\nM\nC\n\nP0\n1\n\n0x\n43\n\n50\n05\n\n00\n9\n\nM\nax\n\nim\num\n\nC\nap\n\nac\nity\n\nT\nhe\n\nm\nax\n\nim\num\n\nca\npa\n\nci\nty\n\nof\non\n\ne\nst\n\nri\nng\n\nfi\noa\n\nt\nA\n\nh\nPY\n\nC\n60\n\n00\n0\n\nPY\nC\n\n61\n00\n\n0\n49\n\n23\n\nPB\nT\n\nB\nC\n\nC\n01\n\n0x\n43\n\n50\n05\n\n00\n10\n\nB\nC\n\nC\nC\n\nur\nre\n\nnt\nC\n\nur\nre\n\nnt\nfi\n\now\nin\n\ng\nth\n\nro\nug\n\nh\nth\n\ne\nba\n\nla\nnc\n\ner\ns\n\nfi\noa\n\nt\nA\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n24\n\n(c\non\n\ntin\nue\n\nd)\n\n5 Power Supply Subsystem 163\n\n\n\nN\nam\n\ne\nin\n\nM\nIB\n\nG\net\n\n T\nC\n\nSe\nt \n\nT\nC\n\n I\nD\n\nU\nni\n\nt\nT\n\nyp\ne\n\nD\nes\n\ncr\nip\n\nti\non\n\nN\nam\n\ne\nA\n\ndd\nre\n\nss\nM\n\nem\nor\n\ny \nId\n\nID\nT\n\nM\nSP\n\nID\n\nPB\nT\n\nC\nT\n\nH\n02\n\n0x\n43\n\n50\n06\n\n00\n0\n\nC\nal\n\nib\nra\n\ntio\nn\n\nC\nur\n\nre\nnt\n\nT\nhe\n\ncu\nrr\n\nen\nt\n\nbe\nlo\n\nw\nw\n\nhi\nch\n\na\nca\n\nlib\nra\n\ntio\nn\n\nis\npe\n\nrf\nor\n\nm\ned\n\nfi\noa\n\nt\nA\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n25\n\nPB\nT\n\nV\nT\n\nH\n02\n\n0x\n43\n\n50\n06\n\n00\n1\n\nC\nal\n\nib\nra\n\ntio\nn\n\nV\nol\n\nta\nge\n\nT\nhe\n\nvo\nlta\n\nge\nab\n\nov\ne\n\nw\nhi\n\nch\na\n\nca\nlib\n\nra\ntio\n\nn\nis\n\npe\nrf\n\nor\nm\n\ned\n\nfi\noa\n\nt\nV\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n26\n\nPB\nT\n\nST\nH\n\n02\n0x\n\n43\n50\n\n06\n00\n\n2\nC\n\nal\nib\n\nra\ntio\n\nn\nSt\n\nat\ne\n\nof\nC\n\nha\nrg\n\ne\nT\n\nhe\nst\n\nat\ne\n\nof\nch\n\nar\nge\n\nab\nov\n\ne\nw\n\nhi\nch\n\na\nca\n\nlib\nra\n\ntio\nn\n\nis\npe\n\nrf\nor\n\nm\ned\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n27\n\nPB\nT\n\nT\nL\n\nI0\n2\n\n0x\n43\n\n50\n06\n\n00\n3\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nhr\n\nes\nho\n\nld\nT\n\nhe\nte\n\nm\npe\n\nra\ntu\n\nre\nab\n\nov\ne\n\nw\nhi\n\nch\nth\n\ne\nca\n\npa\nci\n\nty\nis\n\nca\nlc\n\nul\nat\n\ned\nw\n\nith\nte\n\nm\npe\n\nra\ntu\n\nre\nef\n\nfe\nct\n\ns\n\nfi\noa\n\nt\n\u00b0C\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n28\n\nPB\nT\n\nT\nC\n\nL\n02\n\n0x\n43\n\n50\n06\n\n00\n4\n\nT\nhe\n\nrm\nal\n\nca\npa\n\nci\nty\n\nlo\nss\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\nA\n\nh/\nK\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n29\n\nPB\nT\n\nT\nL\n\nC\n02\n\n0x\n43\n\n50\n06\n\n00\n5\n\nC\nha\n\nrg\ne\n\nL\nos\n\ns\nPa\n\nra\nm\n\net\ner\n\nfo\nr\n\nte\nm\n\npe\nra\n\ntu\nre\n\nco\nrr\n\nec\nte\n\nd\nes\n\ntim\nat\n\nio\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n30\n\nPB\nT\n\nC\nC\n\nF0\n2\n\n0x\n43\n\n50\n06\n\n00\n6\n\nC\nha\n\nrg\ne\n\nC\nha\n\nng\ne\n\nFa\nct\n\nor\nPa\n\nra\nm\n\net\ner\n\nfo\nr\n\nte\nm\n\npe\nra\n\ntu\nre\n\nco\nrr\n\nec\nte\n\nd\nes\n\ntim\nat\n\nio\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n31\n\nPB\nT\n\nT\nL\n\nD\n02\n\n0x\n43\n\n50\n06\n\n00\n7\n\nD\nis\n\nch\nar\n\nge\nL\n\nos\ns\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n32\n\nPB\nT\n\nD\nC\n\nF0\n2\n\n0x\n43\n\n50\n06\n\n00\n8\n\nD\nis\n\nch\nar\n\nge\nC\n\nha\nng\n\ne\nFa\n\nct\nor\n\nfi\noa\n\nt\n\u2013\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n33\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n5.\n10\n\n(c\non\n\ntin\nue\nd)\n\n164 K.-S. Klemich and B. B\u00e4tz\n\n\n\nN\nam\n\ne\nin\n\nM\nIB\n\nG\net\n\n T\nC\n\nSe\nt \n\nT\nC\n\n I\nD\n\nU\nni\n\nt\nT\n\nyp\ne\n\nD\nes\n\ncr\nip\n\nti\non\n\nN\nam\n\ne\nA\n\ndd\nre\n\nss\nM\n\nem\nor\n\ny \nId\n\nID\nT\n\nM\nSP\n\nID\n\nPa\nra\n\nm\net\n\ner\nfo\n\nr\nte\n\nm\npe\n\nra\ntu\n\nre\nco\n\nrr\nec\n\nte\nd\n\nes\ntim\n\nat\nio\n\nn\n\nPB\nT\n\nM\nC\n\nP0\n2\n\n0x\n43\n\n50\n06\n\n00\n9\n\nM\nax\n\nim\num\n\nC\nap\n\nac\nity\n\nT\nhe\n\nm\nax\n\nim\num\n\nca\npa\n\nci\nty\n\nof\non\n\ne\nst\n\nri\nng\n\nfi\noa\n\nt\nA\n\nh\nPY\n\nC\n60\n\n00\n0\n\nPY\nC\n\n61\n00\n\n0\n49\n\n34\n\nPB\nT\n\nB\nC\n\nC\n02\n\n0x\n43\n\n50\n06\n\n00\n10\n\nB\nC\n\nC\nC\n\nur\nre\n\nnt\nC\n\nur\nre\n\nnt\nfi\n\now\nin\n\ng\nth\n\nro\nug\n\nh\nth\n\ne\nba\n\nla\nnc\n\ner\ns\n\nfi\noa\n\nt\nA\n\nPY\nC\n\n60\n00\n\n0\nPY\n\nC\n61\n\n00\n0\n\n49\n35\n\nT\nab\n\nle\n5.\n10\n\n(c\non\n\ntin\nue\nd)\n\n5 Power Supply Subsystem 165\n\n\n\nT\nab\n\nle\n5.\n11\n\nPo\nw\ner\n\nsu\nbs\nys\nte\nm\n\nfu\nnc\ntio\n\nns\n(i\nnc\nlu\ndi\nng\n\npa\nra\nm\net\ner\ns)\n\nco\nm\nm\nan\nda\nbl\ne\nfr\nom\n\ngr\nou\n\nnd\n\nN\nam\n\ne\nin\n\nM\nIB\n\nC\nom\n\nm\nan\n\nd\nN\n\nam\ne\n\nV\ner\n\nif\nic\n\nat\nio\n\nn\nO\n\nbj\nec\n\nt\nID\n\nH\nE\n\nX\nO\n\nbj\nec\n\nt\nID\n\nD\nE\n\nC\nF\n\nu\nnc\n\nti\non\n\nID\nP\n\n1\nN\n\nam\ne\n\nP\n1\n\nT\nyp\n\ne\nP\n\n1\nV\n\nal\nue\n\ns\nP\n\n2\nN\n\nam\ne\n\nP\n2\n\nT\nyp\n\ne\nP\n\n2\nV\n\nal\nue\n\ns\nP\n\n3\nN\n\nam\ne\n\nP\n3\n\nT\nyp\n\ne\nP\n\n3\nV\n\nal\nue\n\ns\n\nP\nY\n\nC\n00\n\n10\n0\n\nS\nE\n\nT\n_M\n\nA\nX\n\nIM\nU\n\nM\n_C\n\nA\nPA\n\nC\nIT\n\nY\n_\n\nO\nF_\n\nS\nT\n\nR\nIN\n\nG\nS\n\nA\nS\n\nC\n4.\n\n4E\n+\n\n07\n1.\n\n12\n9E\n\n+\n09\n\n1\nca\n\npa\nci\n\nty\n_s\n\ntr\nin\n\ng_\n0\n\nfi\noa\n\nt\n0-\n\n12\n[A\n\nh]\nca\n\npa\nci\n\nty\n_s\n\ntr\nin\n\ng_\n1\n\nfi\noa\n\nt\n0\n\n\u20131\n2\n\n[A\nh]\n\nca\npa\n\nci\nty\n\n_s\ntr\n\nin\ng_\n\n2\nfi\n\noa\nt\n\n0\n\u20131\n\n2\n[A\n\nh]\n\nP\nY\n\nC\n00\n\n20\n[0\n\n-2\n]\n\nS\nE\n\nT\n_S\n\nO\nC\n\n_E\nS\n\nT\nIM\n\nA\nT\n\nIO\nN\n\n_\nPA\n\nR\nA\n\nM\nE\n\nT\nE\n\nR\nS\n\nA\nS\n\nC\n4.\n\n4E\n+\n\n07\n1.\n\n12\n9E\n\n+\n09\n\n2\nst\n\nri\nng\n\nId\nui\n\nnt\n8\n\n0\u2013\n2\n\n0\u2013\n2\n\n[T\nB\n\nD\n]\n\nP\nY\n\nC\n00\n\n30\n0\n\nU\nP\n\nD\nA\n\nT\nE\n\n_S\nO\n\nC\n_E\n\nS\nT\n\nIM\nA\n\nT\nIO\n\nN\n_\n\nPA\nR\n\nA\nM\n\nE\nT\n\nE\nR\n\nS\n_I\n\nN\n_P\n\nC\nD\n\nU\nA\n\nSP\nC\n\n4.\n4E\n\n+\n07\n\n1.\n12\n\n9E\n+\n\n09\n3\n\nst\nri\n\nng\nId\n\nui\nnt\n\n8\n\n166 K.-S. Klemich and B. B\u00e4tz\n\n\n\nT\nab\n\nle\n5.\n12\n\nPo\nw\ner\n\nsu\nbs\nys\nte\nm\n\nm\non\n\nito\nrs\n\nO\nw\n\nne\nr\n\nN\nam\n\ne\nO\n\nbj\nec\n\nt\nId\n\nP\nar\n\nam\net\n\ner\nN\n\nam\ne\n\nP\nar\n\nam\net\n\ner\n#\n\nD\nes\n\ncr\nip\n\nti\non\n\nL\nim\n\nit\nID\n\nT\nyp\n\ne\nE\n\nve\nnt\n\nbe\nlo\n\nw\nlo\n\nw\nE\n\nve\nnt\n\nab\nov\n\ne\nhi\n\ngh\nSe\n\nt\nT\n\nC\n\nPS\nS_\n\nC\nO\n\nN\nT\n\nR\nO\n\nL\nL\n\nE\nR\n\n43\n50\n\n00\n00\n\nPB\nT\n\nSC\nC\n\n03\n40\n\n00\n33\n\n00\nPS\n\nS\nSt\n\nat\ne\n\nof\nC\n\nha\nrg\n\ne\nW\n\nar\nni\n\nng\n\n1\nfi\n\noa\nt\n\nSO\nC\n\n_W\nA\n\nR\nN\n\nIN\nG\n\nSO\nC\n\n_H\nIG\n\nH\nPY\n\nC\n12\n\n00\n0\n\nPS\nS_\n\nC\nO\n\nN\nT\n\nR\nO\n\nL\nL\n\nE\nR\n\n43\n50\n\n00\n00\n\nPB\nT\n\nSC\nC\n\n03\n40\n\n00\n33\n\n00\nPS\n\nS\nSt\n\nat\ne\n\nof\nC\n\nha\nrg\n\ne\nC\n\nri\ntic\n\nal\n\n2\nfi\n\noa\nt\n\nSO\nC\n\n_C\nR\n\nIT\nIC\n\nA\nL\n\nSO\nC\n\n_H\nIG\n\nH\nPY\n\nC\n12\n\n00\n0\n\nPS\nS_\n\nC\nO\n\nN\nT\n\nR\nO\n\nL\nL\n\nE\nR\n\n43\n50\n\n00\n00\n\nPB\nT\n\nSC\nC\n\n03\n40\n\n00\n33\n\n00\nPS\n\nS\nSt\n\nat\ne\n\nof\nC\n\nha\nrg\n\ne\nSh\n\nut\ndo\n\nw\nn\n\n3\nfi\n\noa\nt\n\nSO\nC\n\n_S\nH\n\nU\nT\n\nD\nO\n\nW\nN\n\nSO\nC\n\n_H\nIG\n\nH\nPY\n\nC\n12\n\n00\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\nE\nN\n\nSO\nR\n\n_0\n43\n\n50\n04\n\n01\nPB\n\nT\nST\n\nC\n00\n\n40\n00\n\n02\n00\n\nSt\nri\n\nng\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_L\nO\n\nW\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\nE\nN\n\nSO\nR\n\n_0\n43\n\n50\n04\n\n01\nPB\n\nT\nST\n\nV\n00\n\n40\n00\n\n03\n00\n\nSt\nri\n\nng\nvo\n\nlta\nge\n\nch\nec\n\nk\n\n1\nfi\n\noa\nt\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_V\n\nO\nL\n\nT\nA\n\nG\nE\n\n_L\nO\n\nW\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\nE\nN\n\nSO\nR\n\n_1\n43\n\n50\n05\n\n01\nPB\n\nT\nST\n\nC\n01\n\n40\n00\n\n02\n01\n\nSt\nri\n\nng\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_L\nO\n\nW\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\nE\nN\n\nSO\nR\n\n_1\n43\n\n50\n05\n\n01\nPB\n\nT\nST\n\nV\n01\n\n40\n00\n\n03\n01\n\nSt\nri\n\nng\nvo\n\nlta\nge\n\nch\nec\n\nk\n\n1\nfi\n\noa\nt\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_V\n\nO\nL\n\nT\nA\n\nG\nE\n\n_L\nO\n\nW\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\nE\nN\n\nSO\nR\n\n_2\n43\n\n50\n06\n\n01\nPB\n\nT\nST\n\nC\n02\n\n40\n00\n\n02\n02\n\nSt\nri\n\nng\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_L\nO\n\nW\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\nE\nN\n\nSO\nR\n\n_2\n43\n\n50\n06\n\n01\nPB\n\nT\nST\n\nV\n02\n\n40\n00\n\n03\n02\n\nSt\nri\n\nng\nvo\n\nlta\nge\n\nch\nec\n\nk\n\n1\nfi\n\noa\nt\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_V\n\nO\nL\n\nT\nA\n\nG\nE\n\n_L\nO\n\nW\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n0\n\n43\n50\n\n01\n00\n\nPP\nT\n\nFS\nC\n\n00\n41\n\n11\n04\n\n00\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n1\n\n43\n50\n\n01\n01\n\nPP\nT\n\nFS\nC\n\n01\n41\n\n11\n04\n\n01\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n5 Power Supply Subsystem 167\n\n\n\nO\nw\n\nne\nr\n\nN\nam\n\ne\nO\n\nbj\nec\n\nt\nId\n\nP\nar\n\nam\net\n\ner\nN\n\nam\ne\n\nP\nar\n\nam\net\n\ner\n#\n\nD\nes\n\ncr\nip\n\nti\non\n\nL\nim\n\nit\nID\n\nT\nyp\n\ne\nE\n\nve\nnt\n\nbe\nlo\n\nw\nlo\n\nw\nE\n\nve\nnt\n\nab\nov\n\ne\nhi\n\ngh\nSe\n\nt\nT\n\nC\n\nFU\nSE\n\n_0\n2\n\n43\n50\n\n01\n02\n\nPP\nT\n\nFS\nC\n\n02\n41\n\n11\n04\n\n02\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n3\n\n43\n50\n\n01\n03\n\nPP\nT\n\nFS\nC\n\n03\n41\n\n11\n04\n\n03\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n4\n\n43\n50\n\n01\n04\n\nPP\nT\n\nFS\nC\n\n04\n41\n\n11\n04\n\n04\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n5\n\n43\n50\n\n01\n05\n\nPP\nT\n\nFS\nC\n\n05\n41\n\n11\n04\n\n05\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n6\n\n43\n50\n\n01\n06\n\nPP\nT\n\nFS\nC\n\n06\n41\n\n11\n04\n\n06\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n7\n\n43\n50\n\n01\n07\n\nPP\nT\n\nFS\nC\n\n07\n41\n\n11\n04\n\n07\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n8\n\n43\n50\n\n01\n08\n\nPP\nT\n\nFS\nC\n\n08\n41\n\n11\n04\n\n08\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_0\n9\n\n43\n50\n\n01\n09\n\nPP\nT\n\nFS\nC\n\n09\n41\n\n11\n04\n\n09\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n0\n\n43\n50\n\n01\n0A\n\nPP\nT\n\nFS\nC\n\n10\n41\n\n11\n04\n\n0A\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n1\n\n43\n50\n\n01\n0B\n\nPP\nT\n\nFS\nC\n\n11\n41\n\n11\n04\n\n0B\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n2\n\n43\n50\n\n01\n0C\n\nPP\nT\n\nFS\nC\n\n12\n41\n\n11\n04\n\n0C\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n3\n\n43\n50\n\n01\n0D\n\nPP\nT\n\nFS\nC\n\n13\n41\n\n11\n04\n\n0D\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n4\n\n43\n50\n\n01\n0E\n\nPP\nT\n\nFS\nC\n\n14\n41\n\n11\n04\n\n0E\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n5\n\n43\n50\n\n01\n0F\n\nPP\nT\n\nFS\nC\n\n15\n41\n\n11\n04\n\n0F\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n6\n\n43\n50\n\n01\n10\n\nPP\nT\n\nFS\nC\n\n16\n41\n\n11\n04\n\n10\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n5.\n12\n\n(c\non\n\ntin\nue\nd)\n\n168 K.-S. Klemich and B. B\u00e4tz\n\n\n\nO\nw\n\nne\nr\n\nN\nam\n\ne\nO\n\nbj\nec\n\nt\nId\n\nP\nar\n\nam\net\n\ner\nN\n\nam\ne\n\nP\nar\n\nam\net\n\ner\n#\n\nD\nes\n\ncr\nip\n\nti\non\n\nL\nim\n\nit\nID\n\nT\nyp\n\ne\nE\n\nve\nnt\n\nbe\nlo\n\nw\nlo\n\nw\nE\n\nve\nnt\n\nab\nov\n\ne\nhi\n\ngh\nSe\n\nt\nT\n\nC\n\nFU\nSE\n\n_1\n7\n\n43\n50\n\n01\n11\n\nPP\nT\n\nFS\nC\n\n17\n41\n\n11\n04\n\n11\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n8\n\n43\n50\n\n01\n12\n\nPP\nT\n\nFS\nC\n\n18\n41\n\n11\n04\n\n12\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_1\n9\n\n43\n50\n\n01\n13\n\nPP\nT\n\nFS\nC\n\n19\n41\n\n11\n04\n\n13\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_2\n0\n\n43\n50\n\n01\n14\n\nPP\nT\n\nFS\nC\n\n20\n41\n\n11\n04\n\n14\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_2\n1\n\n43\n50\n\n01\n15\n\nPP\nT\n\nFS\nC\n\n21\n41\n\n11\n04\n\n15\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_2\n2\n\n43\n50\n\n01\n16\n\nPP\nT\n\nFS\nC\n\n22\n41\n\n11\n04\n\n16\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_2\n3\n\n43\n50\n\n01\n17\n\nPP\nT\n\nFS\nC\n\n23\n41\n\n11\n04\n\n17\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_2\n4\n\n43\n50\n\n01\n18\n\nPP\nT\n\nFS\nC\n\n24\n41\n\n11\n04\n\n18\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_2\n5\n\n43\n50\n\n01\n19\n\nPP\nT\n\nFS\nC\n\n25\n41\n\n11\n04\n\n19\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nFU\nSE\n\n_2\n6\n\n43\n50\n\n01\n1A\n\nPP\nT\n\nFS\nC\n\n26\n41\n\n11\n04\n\n1A\nFu\n\nse\ncu\n\nrr\nen\n\nt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nB\nU\n\nS_\nPO\n\nW\nE\n\nR\n_S\n\nE\nN\n\nSO\nR\n\n43\n50\n\n03\n00\n\nPP\nT\n\nB\nU\n\nC\n00\n\n41\n11\n\n22\n00\n\nB\nus\n\ncu\nrr\n\nen\nt\n\nch\nec\n\nk\n1\n\nfi\noa\n\nt\nB\n\nU\nS_\n\nC\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nB\nU\n\nS_\nC\n\nU\nR\n\nR\nE\n\nN\nT\n\n_H\nIG\n\nH\nPY\n\nC\n12\n\n00\n0\n\nB\nU\n\nS_\nPO\n\nW\nE\n\nR\n_S\n\nE\nN\n\nSO\nR\n\n43\n50\n\n03\n00\n\nPP\nT\n\nB\nU\n\nV\n00\n\n41\n11\n\n11\n00\n\nB\nus\n\nvo\nlta\n\nge\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nB\nU\n\nS_\nV\n\nO\nL\n\nT\nA\n\nG\nE\n\n_L\nO\n\nW\nB\n\nU\nS_\n\nV\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nPA\nN\n\nE\nL\n\n_R\nIG\n\nH\nT\n\n43\n50\n\n02\n00\n\nPS\nT\n\nC\nU\n\nR\n00\n\n48\n00\n\n02\n00\n\nPa\nne\n\nlc\nur\n\nre\nnt\n\nch\nec\n\nk\n1\n\nfi\noa\n\nt\nPA\n\nN\nE\n\nL\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_L\nO\n\nW\nPA\n\nN\nE\n\nL\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_H\nIG\n\nH\nPY\n\nC\n12\n\n00\n0\n\nPA\nN\n\nE\nL\n\n_R\nIG\n\nH\nT\n\n43\n50\n\n02\n00\n\nPS\nT\n\nV\nL\n\nT\n00\n\n48\n00\n\n03\n00\n\nPa\nne\n\nl\nvo\n\nlta\nge\n\nch\nec\n\nk\n\n1\nfi\n\noa\nt\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_L\n\nO\nW\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nPA\nN\n\nE\nL\n\n_L\nE\n\nFT\n43\n\n50\n02\n\n01\nPS\n\nT\nC\n\nU\nR\n\n01\n48\n\n00\n02\n\n01\nPa\n\nne\nlc\n\nur\nre\n\nnt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nPA\nN\n\nE\nL\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nPA\nN\n\nE\nL\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n5.\n12\n\n(c\non\n\ntin\nue\nd)\n\n5 Power Supply Subsystem 169\n\n\n\nO\nw\n\nne\nr\n\nN\nam\n\ne\nO\n\nbj\nec\n\nt\nId\n\nP\nar\n\nam\net\n\ner\nN\n\nam\ne\n\nP\nar\n\nam\net\n\ner\n#\n\nD\nes\n\ncr\nip\n\nti\non\n\nL\nim\n\nit\nID\n\nT\nyp\n\ne\nE\n\nve\nnt\n\nbe\nlo\n\nw\nlo\n\nw\nE\n\nve\nnt\n\nab\nov\n\ne\nhi\n\ngh\nSe\n\nt\nT\n\nC\n\nPA\nN\n\nE\nL\n\n_L\nE\n\nFT\n43\n\n50\n02\n\n01\nPS\n\nT\nV\n\nL\nT\n\n01\n48\n\n00\n03\n\n01\nPa\n\nne\nl\n\nvo\nlta\n\nge\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_L\n\nO\nW\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nPA\nN\n\nE\nL\n\n_C\nE\n\nN\nT\n\nE\nR\n\n43\n50\n\n02\n02\n\nPS\nT\n\nC\nU\n\nR\n02\n\n48\n00\n\n02\n02\n\nPa\nne\n\nlc\nur\n\nre\nnt\n\nch\nec\n\nk\n1\n\nfi\noa\n\nt\nPA\n\nN\nE\n\nL\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_L\nO\n\nW\nPA\n\nN\nE\n\nL\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_H\nIG\n\nH\nPY\n\nC\n12\n\n00\n0\n\nPA\nN\n\nE\nL\n\n_C\nE\n\nN\nT\n\nE\nR\n\n43\n50\n\n02\n02\n\nPS\nT\n\nV\nL\n\nT\n02\n\n48\n00\n\n03\n02\n\nPa\nne\n\nl\nvo\n\nlta\nge\n\nch\nec\n\nk\n\n1\nfi\n\noa\nt\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_L\n\nO\nW\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nPA\nN\n\nE\nL\n\n_T\nE\n\nST\n43\n\n50\n02\n\n03\nPS\n\nT\nC\n\nU\nR\n\n03\n48\n\n00\n02\n\n03\nPa\n\nne\nlc\n\nur\nre\n\nnt\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nPA\nN\n\nE\nL\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\nPA\nN\n\nE\nL\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nPA\nN\n\nE\nL\n\n_T\nE\n\nST\n43\n\n50\n02\n\n03\nPS\n\nT\nV\n\nL\nT\n\n03\n48\n\n00\n03\n\n03\nPa\n\nne\nl\n\nvo\nlta\n\nge\nch\n\nec\nk\n\n1\nfi\n\noa\nt\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_L\n\nO\nW\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\nPY\nC\n\n12\n00\n\n0\n\nT\nab\n\nle\n5.\n12\n\n(c\non\n\ntin\nue\nd)\n\n170 K.-S. Klemich and B. B\u00e4tz\n\n\n\nTable 5.13 Power subsystem parameters managed by the PSS_Controller\n\nMIB Name PID Name Unit Type Description\n\nPPTBUP00 0x41111300 BUS_POWER W fioat The bus power\ncalculated with\ncurrent and voltage\n\nPBTSCC03 0x40003300 BATT_SOC_PSS \u2013 fioat Combined state of\ncharge calculated by\nPSS Controller\n\nPBTCPC03 0x40003700 BATT_CAP_PSS Ah fioat Combined capacity\ncalculated by PSS\nController\n\nPBTSCC00 0x40003000 BATT_SOC_PSS_S0 \u2013 fioat State of Charge of\none string\n\nPBTSCC01 0x40003100 BATT_SOC_PSS_S1 \u2013 fioat State of Charge of\none string\n\nPBTSCC02 0x40003200 BATT_SOC_PSS_S2 \u2013 fioat State of Charge of\none string\n\nPBTCPC00 0x40003400 BATT_CAP_PSS_S0 Ah fioat Capacity of one\nstring\n\nPBTCPC01 0x40003500 BATT_CAP_PSS_S1 Ah fioat Capacity of one\nstring\n\nPBTCPC02 0x40003600 BATT_CAP_PSS_S2 Ah fioat Capacity of one\nstring\n\nPBTPWR00 0x40001000 BAT_STR_POWER_0 W fioat Power in/out of one\nstring\n\nPBTPWR01 0x40001100 BAT_STR_POWER_1 W fioat Power in/out of one\nstring\n\nPBTPWR02 0x40001200 BAT_STR_POWER_2 W fioat Power in/out of one\nstring\n\nPSTPWR00 0x48000400 PANEL_POWER_RIGH W fioat Solar panel power\n\nPSTPWR01 0x48000500 PANEL_POWER_LEFT W fioat Solar panel power\n\nPSTPWR02 0x48000600 PANEL_POWER_CENT W fioat Solar panel power\n\nPSTPWR03 0x48000700 PANEL_POWER_TEST W fioat Solar panel power\n\nPPTPWR00 0x41120000 FUSE_POWER_0 W fioat Fuse power\n\nPPTPWR01 0x41120100 FUSE_POWER_1 W fioat Fuse power\n\nPPTPWR02 0x41120200 FUSE_POWER_2 W fioat Fuse power\n\nPPTPWR03 0x41120300 FUSE_POWER_3 W fioat Fuse power\n\nPPTPWR04 0x41120400 FUSE_POWER_4 W fioat Fuse power\n\nPPTPWR05 0x41120500 FUSE_POWER_5 W fioat Fuse power\n\nPPTPWR06 0x41120600 FUSE_POWER_6 W fioat Fuse power\n\nPPTPWR07 0x41120700 FUSE_POWER_7 W fioat Fuse power\n\nPPTPWR08 0x41120800 FUSE_POWER_8 W fioat Fuse power\n\nPPTPWR09 0x41120900 FUSE_POWER_9 W fioat Fuse power\n\nPPTPWR10 0x41120A00 FUSE_POWER_10 W fioat Fuse power\n\nPPTPWR11 0x41120B00 FUSE_POWER_11 W fioat Fuse power\n\n(continued)\n\n5 Power Supply Subsystem 171\n\n\n\nThe power subsystem relevant TC packet definitions are included in the\nspacecraft TC table in annex Sect. 17.3.1.\n\nThe power subsystem relevant TM packet definitions are included in the\nspacecraft TM table in annex Sect. 17.3.2.\n\nThe power subsystem relevant Event TM packets are included in the spacecraft\nEvent TM table in annex Sect. 17.3.3.\n\nDetails on the TM parameter positions in the diverse packets have to be taken\nfrom the MIB.\n\nTable 5.13 (continued)\n\nMIB Name PID Name Unit Type Description\n\nPPTPWR12 0x41120C00 FUSE_POWER_12 W fioat Fuse power\n\nPPTPWR13 0x41120D00 FUSE_POWER_13 W fioat Fuse power\n\nPPTPWR14 0x41120E00 FUSE_POWER_14 W fioat Fuse power\n\nPPTPWR15 0x41120F00 FUSE_POWER_15 W fioat Fuse power\n\nPPTPWR16 0x41121000 FUSE_POWER_16 W fioat Fuse power\n\nPPTPWR17 0x41121100 FUSE_POWER_17 W fioat Fuse power\n\nPPTPWR18 0x41121200 FUSE_POWER_18 W fioat Fuse power\n\nPPTPWR19 0x41121300 FUSE_POWER_19 W fioat Fuse power\n\nPPTPWR20 0x41121400 FUSE_POWER_20 W fioat Fuse power\n\nPPTPWR21 0x41121500 FUSE_POWER_21 W fioat Fuse power\n\nPPTPWR22 0x41121600 FUSE_POWER_22 W fioat Fuse power\n\nPPTPWR23 0x41121700 FUSE_POWER_23 W fioat Fuse power\n\nPPTPWR24 0x41121800 FUSE_POWER_24 W fioat Fuse power\n\nPPTPWR25 0x41121900 FUSE_POWER_25 W fioat Fuse power\n\nPPTPWR26 0x41121A00 FUSE_POWER_26 W fioat Fuse power\n\nPPTPWR99 0x4112FF00 FUSE_POWER_ALL W fioat Combined Fuse\npower\n\n172 K.-S. Klemich and B. B\u00e4tz\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nChapter 6\nPlatform Communication Subsystem\n\nJens Eickhoff and Kai-S\u00f6ren Klemich\n\nAbstract The chapter covers the Telemetry, Tracking and Command\n(TTC) subsystem of the FLP platform. It provides the S-Band link for the platform\ncontrol. It provides a brief overview on the receivers, transmitters and on the\nCCSDS decoder/encoder boards of the onboard computer which logically belong to\nthe TTC subsystem. Technical parameters on the equipment and an example link\nbudget are included in the book\u2019s annexes. After explanation of the signal acqui-\nsition procedure the last part of the chapter comprises the onboard software ele-\nments and the on-board functionality for control of the platform communication\nsubsystem.\n\nJ. Eickhoff (&)\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\nK.-S. Klemich\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: klemich@irs.uni-stuttgart.de\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_6\n\n173\n\n\n\nKeywords TTC subsystem overview ? Receivers ? Transmitters ?\nCCSDS-Boards ? Antennas ? Downlink/uplink parameters ? Signal acquisition\nprocedure ? TTC subsystem control\n\n6.1 TTC Subsystem Overview\n\nFor commanding the satellite from ground and for downlink of platform house-\nkeeping and Event telemetry a \u201cTelemetry, Tracking and Command\u201d subsystem\u2014\nor TTC subsystem\u2014is implemented on board the platform. It consists of two\nS-band receivers and two S-band transmitters (see Fig. 6.1). Each\ntransmitter/receiver pair has an individual diplexer for parallel signal up- and\ndownlink and both diplexers are coupled to the antennas via a 3 dB hybrid coupler.\n\nThe TC receivers (RX) are operated in hot redundancy throughout all spacecraft\nmodes. Therefore they also are named with RX-0 and RX-1 in Fig. 1.6. The\ntransmitters (TX) are only operated in ground station vicinity and only one trans-\nmitter is operated at a time because otherwise the signals from both transmitters\nwould interfere. Therefore their naming convention follows the one for cold\n\nFig. 6.1 TTC subsystem block diagram. \u00a9 IRS, University of Stuttgart\n\n174 J. Eickhoff and K.-S. Klemich\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\nredundant units\u2014TX-N and TX-R. If telemetry downlink from the satellite seems\nto fail when trying to establish contact (e.g. after a ping command), switchover to\nthe redundant transmitter will be commanded by ground (see Sect. 10.5).\n\nThe antennas are S-band turnstile antennas, which are mounted on opposite sides\nof the satellite (see Fig. 1.5). As they provide an approximately hemispherical\nradiation pattern [72] it is possible to send signals to and receive signals from the\nsatellite at all times independent of its attitude (see Fig. 6.2).\n\nDue to the two TTC antennas on opposite sides of the satellite in the case of the\n\u201cFlying Laptop\u201d the signals transmitted from both TTC antennas interfere in and\naround a plane perpendicular to the antennas\u2019 boresight. If the satellite\u2019s attitude is\nsuch that the ground station is within or at roughly \u00b125\u00b0 of this plane during a pass,\nthe signal from the satellite can be lost, which for example can occur in Idle Mode\nor Safe Mode (see Sect. 6.3.5). To minimize this problem the platform is equipped\nwith the Coarse Nadir Pointing Mode (Sect. 2.1.7) to be able to perform certain\ncritical operations from ground without an intermediate contact loss.\n\nIn the case of the \u201cFlying Laptop\u201d, the payload Data Downlink System\n(DDS) also uses an S-band frequency (with a dedicated horn antenna visible in\nFig. 1.5). In order to be able to separate the TTC signals from the payload data\ndownlink system, both TTC antennas use right-hand circular polarization (RHCP)\nand for the DDS left-hand circular polarization (LHCP) is used.\n\nSince the receivers are running in hot redundant they both deliver spacecraft TC\ndata to the CCSDS-Board side (see Fig. 6.1). The CCSDS-Boards are designed\nsuch that they look for the first receiver providing carrier lock and bit lock signal.\nThe separate lines for these signals are not depicted in Fig. 6.1 to avoid over-\ncomplexifying it. As only one transmitter is operated at a time, the CCSDS-Boards\ncan also be coupled from their output to both transmitters. Thus the TM-submitting\nCCSDS-Board (selected by the OBSW) electrically distributes its spacecraft TM\nsignal to both transmitters and does not have to care about which one being active.\nSo the cross-coupling comprises:\n\n\u2022 Both receivers are coupled to both CCSDS-Boards.\n\u2022 Both transmitters are coupled to both CCSDS-Boards.\n\u2022 The CCSDS-Boards output sides towards the Processor-Boards are also\n\ncross-coupled (please refer to Fig. 1.6), and\n\u2022 the CLCW signal also is cross-exchanged between the CCSDS-Boards for\n\ncorrect down reporting depending on selected active TX and selected uplink\nVirtual Channel (VC).\n\nThe TTC subsystem operates innon-coherent mode. The detailed parameters for\ndownlink and uplink are provided in Tables 6.1 and 6.2.\n\nThe subsystem performance data were evaluated in the RF compatibility test\ntogether with the 15 m antenna of the DLR antenna station in Weilheim, Germany.\nThe details can be found in [79]. Only the operationally relevant data will be listed\nhere:\n\n6 Platform Communication Subsystem 175\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\nFig. 6.2 S-band antenna far field simulation. \u00a9 IRS, University of Stuttgart\n\nTable 6.1 TTC subsystem downlink parameters\n\nDownlink frequency: TX1 = 2.263500 GHz\n\nPolarization: RHCP\n\nModulation: BPSK\n\nSymbol rate: 128.205 kbps NRZ-L Viterbi, Randomized, Reed Solomon\n\nSync word: 0x 1ACFFC1D\n\nTLM frame length: 1115 byte (Frame) + 4 byte (ASM) + 160 byte (Reed Solomon\nBlock) = 1279 byte\n\nForward Error Correction\nEncoding:\n\nNRZ-L with\n\u2022 Reed-Solomon Coding: E = 16 (255,223), Interleave\nDepth = 5\n\n\u2022 Convolutional Coding K = 7 Rate \u00bd, G1/G2 (not punctuated)\n\nFrame Error Control Field\n(FECW)\n\nNot used\n\nTransfer Frame Secondary\nHeader\n\nNot used\n\n176 J. Eickhoff and K.-S. Klemich\n\n\n\n\u2022 The test results proved that a special TC uplink acquisition procedure\u2014under\nconsideration of Doppler frequency offset\u2014is not necessary (max Doppler\noffset: FDL \u00b160 kHz).\n\n\u2022 The bit error rates of the transmitters have been measured in combination with\nthe DLR antenna and the according diagrams are included in the annex Sect. 17.\n5.1 for reference to compare against in cases of potential degradations in flight.\n\n6.2 Signal Acquisition Procedure\n\nThe acquisition procedure to be used with the receivers is fully in accordance with\nECSS-E-50-05A. While following the specified procedure, acquisition is certain for\nboth receivers after one triangular acquisition sweep.\n\nHK downlink is not compulsory and blind acquisition is possible. At first ground\ncontact of the satellite when the LEOP-Completion Flag is still Zero, the satellite\nwill automatically activate not only the TTC receivers, but also the nominal TTC\ntransmitter (see Sect. 11.6.2). Later during the mission, when the LEOP Completion\nFlag was set to 1, the transmitter activation is done by the TTC-Controller.\n\nActivation then is initiated either as result of time tagged transmitter activation\ncommands in the timeline or as result to receiver lock detection. It is foreseen to\npreprogram transmitter activation commands into the mission timelines so that the\nsatellite activates the transmitter some minutes before ground station passover.\n\nNote: During acquisition, no data or subcarrier modulation shall be present on\nthe RF carrier transmitted by the ground station.\n\nTable 6.2 TTC subsystem uplink parameters\n\nUplink\nfrequency:\n\nRX1 = 2.083500 GHz\n\nPolarization: RHCP\n\nModulation: PCM/BPSK/PM\n\nSubcarrier: 16 kHz sine wave\n\nBitrate: 4.000 kbps NRZ-L\n\nModulation\nindex:\n\n1.0 rad peak \u00b15 %\n\nEncoding: BCH Code: (63,56)\n\nSync. Word: EB90\n\nCarrier\nSweep:\n\nSettings for optimum lock: \u00b1100 kHz around the center Frequency sweep\nrate 30 kHz/s up to 50 kHz/s with zig-zag method\n\n6 Platform Communication Subsystem 177\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\nLink establishment procedure:\n\n1. Switch on carrier frequency and set to nominal center\n2. Initiate one triangular sweep around the frequency set in (1) with an amplitude\n\nof \u00b1100 kHz at 50 kHz/s. Analog sweep would be preferred. If frequency\ngeneration is digital, step size/discontinuity shall not exceed 100 Hz.\n\n3. Switch on modulation\n\n6.3 TTC Subsystem Control\n\nWhile in Fig. 6.1 the TTC subsystem is shown to comprise the transceiver,\ndiplexers and coupler, from point of view of the OBSW the TTC subsystem already\nstarts at the according Processor-Board SpaceWire interfaces, as these are used to\nread uplinked TCs and to submit TM for downlink. Thus the CCSDS-Boards are\npart of the TTC subsystem for the OBSW .\n\nThe TTC subsystem control is managed by the SW objects as depicted in\nFig. 6.3. Main subsystem object is the TTC_Subsystem (\u201cTTC\u201d in the figure) which\nmanages the TTC_Controller and the assembly objects for the CCSDS-Boards, the\nreceivers and the transmitters. The assembly objects then manage\n\n\u2022 the individual CCSDS-Board handlers CCSDS_Handler 0 and 1 for the hot\nredundant boards,\n\n\u2022 the TTC_RX_Handlers 0 and 1 for the hot redundant receivers and the\n\u2022 TTC_TX_Handlers N and R for the cold redundant transmitters.\n\nThe individual device handlers manage the health monitoring of the devices. The\nTTC subsystem cycle rate is provided in Sect. 3.4.2.\n\nFig. 6.3 TTC subsystem control elements in OBSW. \u00a9 IRS, University of Stuttgart\n\n178 J. Eickhoff and K.-S. Klemich\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n6.3.1 TTC Subsystem Device Handlers\n\n6.3.1.1 Receiver and Transmitter Handlers\n\nThe TTC_RX_Handlers also acquire the transceiver HK telemetry which is sup-\nplied for both TX and RX via one interface to the OBC/OBSW. The TTC sub-\nsystem HK telemetry is treated further in Sect. 6.3.5. The device handler modes are\nlisted in Table 6.3.\n\n6.3.1.2 CCSDS-Board Handler\n\nApart from purely managing the CCSDS-Board hardware, the CCSDS_Handler\nclass is responsible for the reception of telecommands (TC) from and sending of\ntelemetry (TM) to ground. This is performed in conjunction with the CCSDS-Board\nhardware, which provides the CCSDS channel decoding/coding layer for TC and\nTM as well as the data link layer for TM. It is a hardware component of the OBC,\nbut belongs logically to the TTC subsystem.\n\nThe CCSDS-Handler\u2019s main tasks are:\n\n\u2022 Managing the CCSDS-Board hardware, which includes initialization, mode\nhandling and configuration.\n\n\u2022 For TC, the class manages packet extraction and the execution of all data link\nlayer functionality, including COP-1, as defined in the CCSDS data link layer.\n\n\u2022 Checking the \u201cbit lock\u201d and \u201cRF available\u201d signals and throwing events in case\nof changes.\n\nThe CCSDS-Handlers cyclically read out incoming TC frames from a buffer in\nthe boards. The handlers internally forward the data to the software-based Data\nLink Layer, which checks the frames and extracts the TC packets. The packets are\nforwarded to a dedicated TC distribution (object/component) which inspects and\nforwards them to their according destination PUS service. Packets not yet processed\nfurther by the PUS service are buffered in the service\u2019s command reception queue.\n\nTable 6.3 TTC TX and RX device handler modes\n\nHandler Mode M# Submode SM# Description\n\nTTC Tx\nN/R\n\nOff 0 Default 0 Off\n\nOn 1 Default 0 Transmitter On\n\nTTC Rx\n0\u20131\n\nOff 0 Default 0 Off. DO NOT USE!\n\nOn 1 Default 0 Receiver On\n\nNormal 2 Default 0 Receiver On and TTC-HK telemetry\nbeing requested periodically\n\nRaw 3 Default 0 Default raw mode. Not useful\n\n6 Platform Communication Subsystem 179\n\n\n\nIf the queue is full, new incoming TC packets are discarded and a\nTC_Verification_Acceptance_Failed (1, 2) Report is generated.\n\nAll telemetry packets generated by PUS services are routed via the\nCCSDS-Board Assembly to the currently active CCSDS-Handler, which is\nresponsible for forwarding the packets to the CCSDS-Board. This is necessary to\navoid loosing or duplicating packets in the case where the active CCSDS-Board is\nreconfigured or telemetry forwarding is disabled entirely. The CCSDS-Board\nautonomously assembles transfer frames from the incoming packets. There are four\nVirtual Channels to forward TM packets. Each PUS service is statically configured\nto utilize one of these channels (e.g. live HK TM on VC0, Event TM on VC1,\nplayback TM on VC2).\n\nThe CCSDS-Board handlers provide the following modes (see also Table 6.6):\n\n\u2022 MODE_OFF: The power switches are opened, the board is turned off. Submode\nmust be 0.\n\nTable 6.4 Events triggerd by the CCSDS-Board handlers\n\nEvent Name EventId\ndec\n\nSeverity Sub-service Info\n\nRF_AVAILABLE 7900 INFO 1 A RF signal\nwas detected\n\nRF_LOST 7901 INFO 1 The RF signal\nhas faded\n\nBIT_LOCK 7902 INFO 1 The receiver\nlocks to a\nsignal\n\nBIT_LOCK_LOST 7903 INFO 1 The receiver\nlost the signal\nlock\n\nFRAME_PROCESSING_FAILED 7904 LOW 2 Frame\nprocessing\ndetected\nerrors in the\nframe\n\nDEVICE_SENDING_COMMAND_FAILED 2801 LOW 2 The board\ntried to send a\ncommand via\nRMAP,\nwhich failed\n\nDEVICE_REQUESTING_REPLY_FAILED 2802 LOW 2 The board\ntried to fetch\na reply via\nRMAP,\nwhich failed\n\n180 J. Eickhoff and K.-S. Klemich\n\n\n\n\u2022 MODE_ON: The board is turned on and configured for frame reception\n(SUBMODE_PASSIVE, 0). If the submode is SUBMODE_ACTIVE (1), the\nboard will start forwarding TM frames.\n\nThe handlers also look for the \u201cbit lock\u201d and \u201cRF available\u201d signal lines attached\nto the boards. In case of a change on the line, the handler will trigger an Event,\nindicating the change. In addition the handlers throw Events in case of errors, e.g. in\ncase of errors occurring during board initialization or during board communication.\nThe defined Events are listed in Table 6.4.\n\nIn addition, both CCSDS-Board handlers can trigger the typical mode events\n(i.e. CHANGING_MODE, MODE_INFO, MODE_TRANSITION_FAILED).\n\nAll settings in the CCSDS-Boards are configured by default to match the con-\nfiguration required for FLP operation. However, the handler provides memory\naccess functionality to change the default configuration. There are two options:\n\n\u2022 Directly changing settings in the CCSDS-Board registers:\nThis is done by sending a memory load or memory dump command (Service 6)\nwith the physical register address (see [52]) to one of the CCSDS-Board han-\ndlers. The address will be checked for validity. These changes are\nnon-permanent, i.e. they will be overwritten when powercycling the\nCCSDS-Board.\n\n\u2022 Changing the settings in the CCSDS-Board handler:\nThis is possible for two registers which configure the TM bit rate and the\nencoding. The possible values are listed in Table 6.5. Details are described in\n[52]. For a change in one of those parameters to take effect, the CCSDS-Board\nneeds to be power-cycled.\n\nTable 6.5 Memory addresses in the CCSDS-Board handler\n\nObject-ID Memory\naddress\n\nSize Info\n\n0x44470000\n0x44470100\n\n0 4 Physical Layer Register: Handles TM bit rate\n\n0x44470000\n0x44470100\n\n1 4 Coding sublayer register: Handles variants of TM\nchannel coding\n\nTable 6.6 CCSDS-Board device handler modes\n\nHandler Mode M# Submode SM# Description\n\nCCSDS\n0\u20131\n\nOn 1 Passive 0 No TM and idle frame forwarding\n\nActive 1 TM forwarding enabled and idle frame\ngeneration\n\n6 Platform Communication Subsystem 181\n\n\n\n6.3.2 TTC Subsystem Assemblies\n\n6.3.2.1 TTC Receiver and Transmitter Assemblies\n\nThe logic for equipment switching according to health status or ground command is\nimplemented in the TTC_RX_Assembly and the TTC_TX_Assembly respectively. The\nindividual statuses intowhich thehandlers andassemblies canbe switched\u2014including\nthe according effect on the TC/TM transmission\u2014can be found in the Tables 6.3 and\n6.6. TheTTC_RX_Assemblywill always keep at least one receiver on. Thismeans, that\nif e.g. Rx-0 is marked as defective and ground commands RX-1 off, the TTC_RX_\nAssembly will ignore the command (see also Mode 0, Submode 0 in Table 6.3).\n\n6.3.2.2 CCSDS-Board Assembly\n\nTo manage the CCSDS-Board redundancy, the CCSDS-Board assembly object\n(CCSDS_Assembly) is introduced, which encapsulates the dual hot-redundancy\nfrom the rest of the system.\n\nThe assembly itself has one mode with two submodes, (ON, PASSIVE) and\n(ON, ACTIVE)\u2014see also Table 6.8. Thus, it always tries to keep one board at least\nin a receiving state (if in passive mode), or exactly one sending and receiving if in\nsubmode \u201cActive\u201d. The main operations logic is depicted in Fig. 6.4.\n\nTable 6.7 TTC TX and RX assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nTTC Tx Off 0 Default 0 Both Transmitters off. Does not force\nthem off when under external control\n\nOn 1 Default 0 Always exactly one Transmitter is On\n\n\u2019s modes. All\nhealthy Receivers are switched On.\nWill overwrite health if not at least\none child is ON\n\nTTC Rx On 1 Default 0 Same as children\n\nNormal 2 Default 0 Same as children\u2019s modes. All\nhealthy Receivers are switched to\nNormal. Will overwrite health if not\nat least one child is in Normal mode\n\nTable 6.8 CCSDS-Board assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nCCSDS On 1 Passive 0 Both children in passive mode. Will\noverwrite health if not at least one is\npassive\n\nActive 1 One child in passive, one in active\nmode. Will overwrite health if not at\nleast one is active\n\n182 J. Eickhoff and K.-S. Klemich\n\n\n\nThe assembly is able to overwrite the boards\u2019 health information if there\u2019s no\nother way to reach the required state.\n\nThe CCSDS-Board assembly is also responsible for forwarding TM to the\ncurrently active board and discarding TM in case both boards are passive.\n\n6.3.3 TTC Subsystem Object-IDs\n\nFor commanding the TTC subsystem objects from ground via PUS services 20\u00d7,\nthe following Object_IDs are to be used (see Table 6.9):\n\nFig. 6.4 Availability check in CCSDS_Assembly. \u00a9 IRS, University of Stuttgart\n\nTable 6.9 TTC subsystem Object_IDs\n\nDI_tcejbO/ylbmessA/eciveD\n\nCCSDS_HANDLER_0 0x44470000\n\nCCSDS_0_TM_HEALTHDEVICE 0x44470001\n\nCSDS_HANDLER_1 0x44470100\n\nCCSDS_1_TM_HEALTHDEVICE 0x44470101\n\nTTC_RX_HANDLER_N 0x44000600\n\nTTC_RX_HANDLER_R 0x44000700\n\nTTC_TX_HANDLER_N 0x44000800\n\nTTC_TX_HANDLER_R 0x44000900\n\nTTC_RX_ASSEMBLY 0x41000600\n\nTTC_TX_ASSEMBLY 0x41000700\n\nCCSDS_ASSEMBLY 0x41100000\n\n6 Platform Communication Subsystem 183\n\n\n\n6.3.4 TTC Controller\n\nAs the main duty in controlling the TTC lies in changing the mode of the entire\nsubsystem, the controller functionality of the TTC subsystem was merged into the\nsubsystem object itself, which is extended for this case (see Fig. 6.3). This is a\ndesign exception versus the other subsystems. Therefore, an external controller\nobject is not required.\n\nThe following control functionality is required:\n\n\u2022 Enable a transmitter in case a receiver lock is detected.\n\u2022 Disable a transmitter a certain time after a lost signal.\n\u2022 Turn on a transmitter if in LEOP phase.\n\u2022 Provide a method to enable a transmitter after a certain period of time.\n\nThe control functionality directly changes the TTC subsystem modes as shown\nin Tables 6.3, 6.6, 6.7 and 6.8 to control the subsystem. It watches for events\nemitted by the CCSDS-Boards to check the current link state and maintains some\ninternal timers.\n\nThe control algorithm state machine is shown in Fig. 6.5.\n\nFig. 6.5 TTC state machine. \u00a9 IRS, University of Stuttgart\n\n184 J. Eickhoff and K.-S. Klemich\n\n\n\n\u2022 Normally, the controller will look for RF_AVAILABLE and RF_LOST events\nto decide for activation of the transmitter and for deactivation after end of\nground station contact.\nNote:\nIn case the transmitter is turned off too often erroneously, it is configurable to\nuse the less sensitive BIT_LOCK/BIT_LOCK_LOST events instead.\n\n\u2022 To avoid a blind acquisition during LEOP phase, the controller has a hard-coded\nrange of on-board time (see Sect. 2.6), within which the controller will turn on\nthe transmitter directly. After turning on the transmitter once, it operates nom-\ninally and will be deactivated by ground after first ground contact via\ntime-tagged command. This procedure is repeated after every reboot during the\nconfigured LEOP period. The default period is from 300 s after first boot up to\n1 week after launch.\n\n\u2022 In addition, the controller utilizes a function to turn on the transmitters inde-\npendent of the scheduling service. It is based on a timer and therefore is not\nsensitive to changes and time jumps, as the scheduling service is. The trans-\nmitter is turned on for a configurable duration.\n\nTable 6.10 TTC subsystem submodes\n\nObject Submode SM# Description\n\nTTC Subsystem 0x01000400 CTRL 0 Ctrler changes TTC subsystem modes\n\nNO_CTRL 1 Off, no automatic mode changes\n\nTable 6.11 TTC_Controller variables\n\nMemory ID Name Addr. Size Type Description\n\n0x01000400 COMM_TIMEOUT 0 4 uint32_t After RF_LOST\nEvent, the Tx is\nturned off after this\ninterval [ms]\n\n0x01000400 ENABLE_FOR 1 4 uint32_t When using the timer,\nthe TX stays on for\nthis time [ms]\n\n0x01000400 USE_RFA 2 1 uint8_t 1: Ctrl. uses\nRFA/RFA_LOST\n0: Ctrl. uses\nBIT_LOCK/_LOST\n\n6 Platform Communication Subsystem 185\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nEnabling and disabling the controller functionality within the TTC subsystem is\ndone by means of the submode, as shown in Table 6.10. SUBMODE_CTRL (0) as\nthe default value enables the controller functionality, SUBMODE_NO_CTRL\n(1) disables all controller functionalities (Table 6.11). In this case, no autonomous\nmode changes are performed.\n\n6.3.5 TTC Subsystem Mode Transitions and Telemetry\n\nThe TTC subsystem mode commanding\u2014according to the TTC modes defined in\nTables 6.6 and 6.8\u2014is performed via PUS service 200 and the following sequences\n\u2014see Table 6.12.\n\nApart from mode-switching via Srv. 200 controlled command sequences and\nSrv. 20\u00d7 based object commanding of handlers and assemblies. The TTC sub-\nsystem does not have any dedicated TCs.\n\nThe transceivers provide monitor signals\u2014through the HK-TM-line of its\nreceivers to the OBC I/O-Boards. This HK-TM is managed by the Rx handlers.\nOnly the transceiver internal temperatures are monitored on board. The other\nparameters concern the RF electronics and allow to draw conclusions about the\nhealth/degradation of the unit during lifetime.\n\nFor this purpose, drifts of the monitor signals and the like are much more\ninteresting than their absolute values. They are not intended to be absolute and\nhighly accurate measuring results. The parameters are collected cyclically and are\ntransmitted to ground as HK-TM for evaluation. On ground the main monitored\nparameters are the Temp Monitor values which report the internal unit tempera-\ntures. The transceiver HK-TM parameter list is depicted in Table 6.13.\n\nFor the Parameter Type Codes and Format Codes please refer to Table 16.2.\nSome further explanatory information on the data is given in Table 6.14 below.\n\nThese parameters mainly serve for monitoring in regular intervals (e.g. once per\nmonth) the health, respectively potential degradation effects of the TTC subsystem.\n\nPlease also refer to the annex Sect. 17.5.2 for further reference curves to identify\npotential degradations w.r.t. the measured BoL statuses and for using these\nparameters for failure identification.\n\nThe TM parameters of the CCSDS-Boards are provided in Table 6.15. Besides\nstatuses for RF-lock and Bit-lock and the TC availability and transmitter readiness\nTM set comprises a number of parameters evaluated only in case of communication\nproblems. The parameters serve for health management by the TTC_Controller and\nfor additional evaluation on ground (Table 6.16).\n\n186 J. Eickhoff and K.-S. Klemich\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nT\nT\nC\n\nM\nod\n\nes\n0x\n\n01\n00\n\n04\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nD\nef\nau\nlt\nM\nod\n\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nO\nff\n\n0x\n69\n\n00\n00\n\n00\n1\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nO\nff\n_T\n\nar\nge\nt\n\n0x\n69\n\n00\n00\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\nR\nx\nA\nss\nem\n\nbl\ny\n\nT\nx\nA\nss\nem\n\nbl\ny\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\nA\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nO\nff\n_T\n\nra\nns\n\n0x\n69\n\n00\n01\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n52\n00\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nR\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n06\n\n00\nO\nn\n\n1\nD\nef\nau\nlt\n\n0\n\nT\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n07\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\n0x\n41\n\n10\n00\n\n00\nO\nn\n\n1\nPa\n\nss\niv\ne\n\n0\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nC\nom\n\nm\nM\nod\n\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nC\nom\n\nm\n0x\n\n69\n01\n\n00\n00\n\n1\n0x\n\n69\n02\n\n00\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\nom\n\nm\n_T\n\nar\nge\nt\n\n0x\n69\n\n01\n00\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\n(c\non\n\ntin\nue\nd)\n\nT\nab\n\nle\n6.\n12\n\nT\nT\nC\n\nsu\nbs\nys\nte\nm\n\nm\nod\n\nes\nan\nd\ntr\nan\nsi\ntio\n\nn\nse\nqu\n\nen\nce\ns\n\n6 Platform Communication Subsystem 187\n\n\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n52\n00\n\n00\nN\nor\nm\nal\n\n2\nC\nom\n\nm\n2\n\nR\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n06\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nT\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n07\n\n00\nO\nn\n\n1\nD\nef\nau\nlt\n\n0\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\n0x\n41\n\n10\n00\n\n00\nO\nn\n\n1\nA\nct\niv\ne\n\n1\n\nA\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\nom\n\nm\n_T\n\nra\nns\n_1\n\n0x\n69\n\n01\n01\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n52\n00\n\n00\n\nR\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n06\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nT\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n07\n\n00\nO\nn\n\n1\nD\nef\nau\nlt\n\n0\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\n0x\n41\n\n10\n00\n\n00\nO\nn\n\n1\nA\nct\niv\ne\n\n1\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\nom\n\nm\n_T\n\nra\nns\n_2\n\n0x\n69\n\n01\n02\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n52\n00\n\n00\nN\nor\nm\nal\n\n2\nC\nom\n\nm\n2\n\nR\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n06\n\n00\n\nT\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n07\n\n00\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\n0x\n41\n\n10\n00\n\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nSt\nan\ndb\n\ny\nM\nod\n\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nSt\nan\ndb\n\ny\n0x\n\n69\n02\n\n00\n00\n\n1\n0x\n\n69\n00\n\n00\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nSt\nan\ndb\n\ny_\nT\nar\nge\nt\n\n0x\n69\n\n02\n00\n\n00\n0\n\n1\n(c\non\n\ntin\nue\nd)\n\nT\nab\n\nle\n6.\n12\n\n(c\non\n\ntin\nue\nd)\n\n188 J. Eickhoff and K.-S. Klemich\n\n\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n52\n00\n\n00\n\nR\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n06\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nT\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n07\n\n00\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\n0x\n41\n\n10\n00\n\n00\n\nA\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nSt\nan\ndb\n\ny_\nT\nra\nns\n_1\n\n0x\n69\n\n02\n01\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n52\n00\n\n00\n\nR\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n06\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nT\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n07\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\n0x\n41\n\n10\n00\n\n00\nO\nn\n\n1\nPa\n\nss\niv\ne\n\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nSt\nan\ndb\n\ny_\nT\nra\nns\n_2\n\n0x\n69\n\n02\n02\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nC\nom\n\nm\nun\n\nic\n.\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n52\n00\n\n00\nN\nor\nm\nal\n\n2\nSt\nan\ndb\n\ny\n1\n\nR\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n06\n\n00\n\nT\nx\nA\nss\nem\n\nbl\ny\n\n0x\n41\n\n00\n07\n\n00\n\nC\nC\nSD\n\nS-\nB\noa\n\nrd\nA\nss\n.\n\n0x\n41\n\n10\n00\n\n00\n\nT\nab\n\nle\n6.\n12\n\n(c\non\n\ntin\nue\nd)\n\n6 Platform Communication Subsystem 189\n\n\n\nTable 6.13 Transceiver HK-TM parameters\n\nName Description PTC PFC Unit PID (hex) Calibration\n\nXNTCLF00 TTC N CTL Lock\nFlag\n\n3 4 60000000 DSX00012\n\nXNTCLL00 TTC N Loop Lock\nFlag\n\n3 4 60000100 DSX00012\n\nXNTCRL00 TTC N clock\nRecord Lock Flag\n\n3 4 60000200 DSX00012\n\nXNTCLS00 TTC N carrier\nLoop Stress\nMonitor\n\n4 12 60001000\n\nXNTAGC00 TTC N\nSignal AGC\nMonitor\n\n3 12 60001100\n\nXNTRVC00 TTC N RX VCO\nmonitor\n\n4 12 60001200\n\nXNTPAC00 TTC N PA current\nmonitor\n\n3 12 60001300\n\nXNTTLS00 TTC N Tx Loop\nStress Monitor\n\n4 12 60001400\n\nXNTTTM00 TTC N Tx Temp\nMonitor\n\n5 1 V 60001500 V\n\nXNTRTM00 TTC N Rx Temp\nMonitor\n\n5 1 V 60001600 V\n\nXNTSCL00 TTC N Subcarrier\nLoop Stress\nMonitor\n\n4 12 60001700\n\nXNTCAG00 TTC N\nCoherent AGC\nMonitor\n\n3 12 60001800\n\nXNTLFR00 TTC N Raw Lock\nFlag Byte\n\n3 4 60001A00\n\nXNTAIN00 TTC N Clock\nRecovery State\n\n3 4 60001B00\n\nXNTSNR00 TTC N SNR\nEstimator\n\n4 12 60001C00\n\nXRTCLF00 TTC R CTL Lock\nFlag\n\n3 4 62000000 DSX00012\n\nXRTCLL00 TTC R Loop Lock\nFlag\n\n3 4 62000100 DSX00012\n\nXRTCRL00 TTC R clock\nRecord Lock Flag\n\n3 4 62000200 DSX00012\n\n190 J. Eickhoff and K.-S. Klemich\n\n\n\nName Description PTC PFC Unit PID (hex) Calibration\n\nXRTCLS00 TTC R carrier\nLoop Stress\nMonitor\n\n4 12 62001000\n\nXRTAGC00 TTC R\nSignal AGC\nMonitor\n\n3 12 62001100\n\nXRTRVC00 TTC R RX VCO\nmonitor\n\n4 12 62001200\n\nXRTPAC00 TTC R PA current\nmonitor\n\n3 12 62001300\n\nXRTTLS00 TTC R Tx Loop\nStress Monitor\n\n4 12 62001400\n\nXRTTTM00 TTC R Tx Temp\nMonitor\n\n5 1 V 62001500 V\n\nXRTRTM00 TTC R Rx Temp\nMonitor\n\n5 1 V 62001600 V\n\nXRTSCL00 TTC R Subcarrier\nLoop Stress\nMonitor\n\n4 12 62001700\n\nXRTCAG00 TTC R\nCoherent AGC\nmonitor\n\n3 12 62001800\n\nXRTLFR00 TTC R Raw Lock\nFlag Byte\n\n3 4 62001A00\n\nXRTAIN00 TTC R Clock\nRecovery State\n\n3 4 62001B00\n\nXRTSNR00 TTC R SNR\nEstimator\n\n4 12 62001C00\n\nTable 6.13 (continued)\n\n6 Platform Communication Subsystem 191\n\n\n\nTable 6.14 Explanatory information on transceiver HK telemetry\n\nDescription TTC TM stream Explanation\n\nTTC CTL Lock Flag Byte 0 Bit 0 Carrier lock indication (active low)\n\nTTC Loop Lock\nFlag\n\nBit 1 SubCarrier lock indication (active low)\nNOTE: only valid, when CL is low (active)\n\nTTC Clock\nRecovery Lock Flag\n\nBit 2 Data Clock Recovery lock indication (active\nlow)\n\nTTC Carrier Loop\nStress Monitor\n\nByte 1\u20132 Bit 0\u201311 Deviation from Carrier LRF\n(Loop-Rest-Frequency)\n\nTTC Signal AGC\nMonitor\n\nByte 3\u20134 Bit 0\u201311 Gives good indication of the received signal\nstrength at high (ca. -50 to -100 dBm) signal\nlevels.\n\nTTC RX VCO\nmonitor\n\nByte 5\u20136 Bit 0\u201311 VCO control voltage\n\nTTC TX PA current\nmonitor\n\nByte 7\u20138 Bit 0\u201311 Current flow through the final PA stage\n\nTTC TX Loop\nStress Monitor\n\nByte 9\u201310 Bit 0\u201311 VCO control voltage\n\nTTC TX Temp\nMonitor\n\nByte 11\u201312 Bit 0\u201311 Temperature in the PA compartment\n\nTTC RX Temp\nMonitor\n\nByte 13\u201314 Bit 0\u201311 Temperature in the Receiver baseband\ncompartment\n\nTTC Subcarrier\nLoop Stress Monitor\n\nByte 15\u201316 Bit 0\u201311 Deviation from Subcarrier LRF\n(Loop-Rest-Frequency)\n\nTTC SNR Estimator Byte 17\u201318 Gives an indication of the SNR which is\nestimated on board\n\nTTC Carrier AGC\nMonitor\n\nByte 19\u201320 Bit 0\u201311 AGC voltage of 2nd mixer stage. Gives good\nindication of the received signal strength at\nlow (< -100 dBm) signal levels\n\nTTC Clock\nRecovery State\n\nByte 20 Bit 4\u20137 Debug info for supplier\n\nTTC Raw Lock Flag\nByte\n\nByte 0 entire\nByte\n\nDebug info for supplier\n\n192 J. Eickhoff and K.-S. Klemich\n\n\n\nTable 6.15 CCSDS-Board hardware TM parameters\n\nName Description PTC PFC Unit PID (hex) Calibration\n\nDCTAC000 CCSDS Board 0\nCount of accepted\nCodeblocks (TC)\n\n3 4 20000000\n\nDCTSC000 CCSDS Board 0\nCount of single\nerror corrections\n(TC)\n\n3 4 20000100\n\nDCTCI000 CCSDS Board 0\nSelected Channel\nInput (TC)\n\n3 4 20000200\n\nDCTRF000 CCSDS Board 0\nPhysical RFA (TC)\n\n3 4 20000300\n\nDCTBL000 CCSDS Board 0\nPhysical BLO (TC)\n\n3 4 20000400\n\nDCTBF000 CCSDS Board 0\nRx Buffer Full (TC)\n\n3 4 20000500 DSX00012\n\nDCTFF000 CCSDS Board 0\nRx FIFO Full (TC)\n\n3 4 20000600 DSX00012\n\nDCTOV000 CCSDS Board 0\nOverrun (TC)\n\n3 4 20000700 DSX00012\n\nDCTCR000 CCSDS Board 0\nCLTU Ready (TC)\n\n3 4 20000800 DSX00012\n\nDCTTR000 CCSDS Board 0\nTransmitter Ready\n(TM)\n\n3 4 20000900 DSX00012\n\nDCTAC100 CCSDS Board 1\nCount of accepted\nCodeblocks (TC)\n\n3 4 20010000\n\nDCTSC100 CCSDS Board 1\nCount of single\nerror corrections\n(TC)\n\n3 4 20010100\n\nDCTCI100 CCSDS Board 1\nSelected Channel\nInput (TC)\n\n3 4 20010200\n\nDCTRF100 CCSDS Board 1\nPhysical RFA (TC)\n\n3 4 20010300\n\nDCTBL100 CCSDS Board 1\nPhysical BLO (TC)\n\n3 4 20010400\n\nDCTBF100 CCSDS Board 1\nRx Buffer Full (TC)\n\n3 4 20010500 DSX00012\n\nDCTFF100 CCSDS Board 1\nRx FIFO Full (TC)\n\n3 4 20010600 DSX00012\n\nDCTOV100 CCSDS Board 1\nOverrun (TC)\n\n3 4 20010700 DSX00012\n\n(continued)\n\n6 Platform Communication Subsystem 193\n\n\n\nFor the Parameter Type Codes and Format Codes please refer to Table 16.2.\n\nThe TTC subsystem relevant TC packet definitions are included in the spacecraft\nTC table in annex Sect. 17.3.1.\n\nThe TTC subsystem relevant TM packet definitions are included in the space-\ncraft TM table in annex Sect. 17.3.2.\n\nThe TTC subsystem relevant Event TM packets are included in the spacecraft\nEvent TM table in annex Sect. 17.3.3.\n\nDetails on the TM parameter positions in the diverse packets have to be taken\nfrom the MIB.\n\nTable 6.15 (continued)\n\nName Description PTC PFC Unit PID (hex) Calibration\n\nDCTCR100 CCSDS Board 1\nCLTU Ready (TC)\n\n3 4 20010800 DSX00012\n\nDCTTR100 CCSDS Board 1\nTransmitter Ready\n(TM)\n\n3 4 20010900 DSX00012\n\nTable 6.16 Transceiver TM parameter decalibration\n\nName Description Value from Value to Calibrated Text\n\nDSX00012 True/False Calibration 0 0 False\n\nDSX00012 True/False Calibration 1 1 True\n\n194 J. Eickhoff and K.-S. Klemich\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nChapter 7\nAttitude Control Subsystem\n\nOliver Zeile, Ulrich Mohr, Bastian B\u00e4tz and Nico Bucher\n\nAbstract The chapter provides an overview on the Attitude Control Subsystem\n(ACS). Then it treats all the ACS equipment as far as relevant for spacecraft\noperations, also providing the mounting vectors/matrices. The option of extension\nwith a propulsion subsystem is sketched out at hand of the Airbus Astrobus-XS\n(Myriade) propulsion equipment. The last part comprises the onboard software\nelements and functions for control of the subsystem, treating all the device handlers,\nassemblies and the ACS controller itself. This includes all the ACS modes and\nmode transitions. An example orbit analysis is included in the book\u2019s annexes.\n\nO. Zeile (&) ? U. Mohr ? B. B\u00e4tz ? N. Bucher\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: zeile@irs.uni-stuttgart.de\n\nU. Mohr\ne-mail: mohr@irs.uni-stuttgart.de\n\nB. B\u00e4tz\ne-mail: baetz@irs.uni-stuttgart.de\n\nN. Bucher\ne-mail: bucher@irs.uni-stuttgart.de\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_7\n\n195\n\n\n\nKeywords ACS subsystem modes ? ACS subsystem equipment and alignment ?\nPropulsion subsystem as optional extension ? ACS subsystem control\n\n7.1 Subsystem Overview\n\nThe FLP attitude control subsystem (ACS) is a three axis stabilized control system.\nThe structure and design of the attitude control system is prescribed by the per-\nformance requirements imposed by the mission specific payload experiments or\nobservations and by the general constraints for work during different mission\nphases, such as from launch to nominal operations. The requirements supported by\nthe FLP ACS through equipment and operational subsystem Modes are as follows:\n\n1. Rate damping after the launcher separation or during operation in case of\naccidental increase of body rates.\n\n2. To provide a Safe Mode to ensure the survival of satellite by using only very\nreliable components during the contingency situation.\n\n3. To provide a house keeping mode to orient the solar panels towards the sun\nduring the stand-by periods.\n\n4. To provide a simplified nadir pointing mode w/o use of the RWs for safe\nplatform commissioning of the ACS in orbit.\n\n5. Pointing the satellite towards nadir, a target on the surface of the Earth or\ntowards some inertial target to carry out scientific experiments.\n\n6. Pointing knowledge better than 7 arc seconds (2?) and absolute pointing\naccuracy better than 150 arc seconds (2?) for the target pointing mode.\n\n7. Proper sun avoidance strategy to prevent blinding of Earth oriented payload\ninstruments.\n\n8. To avoid blinding of star trackers by Sun, Earth or Moon.\n9. Usability of the FLP platform for a range of orbits.\n\n10. Fault detection isolation and recovery (FDIR) for the ACS components and\nsubsystem.\n\nThe requirements on ACS clearly demand the three axis stabilized system and\nhigh accuracy requirements compel towards the use of fine pointing devices like\nstar trackers. Five different kinds of sensors are used to observe the motion of the\nsatellite and two different kinds of actuators are used to control its motion. The\nsensor and actuator types of the FLP ACS have already been mentioned in Chap. 1.\nThe detailed list is given here below:\n\n\u2022 4 fiberoptic gyroscopes (FOG) in tetrahedron setup with a common FOG\nassembly electronic unit\n\n\u2022 2 star trackers heads with a common Data Processing Unit (DPU)\n\u2022 2 magnetometers (MGM)\u2014each measuring all 3 axes\u2014with a common MGM\n\nelectronics unit\n\n196 O. Zeile et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\n\u2022 One internally dual redundant GPS receiver (i.e. 3 receivers)\n\u2022 8 single redundant analog Sun sensors (16 sun sensor solar cells)\n\u2022 3 magnetotorquers (MGT) with coaxial coils for redundancy and a common\n\nMGT electronic unit\n\u2022 4 reaction wheels (RW) in tetrahedron setup with a common RW assembly\n\nelectronic unit\n\nWhen the satellite is in a pointing mode, the MGT electronics is powered but the\ncoils themselves are deactivated most of the time. Low torques for precise fine\npointing are applied by means of using the Reaction Wheels (RW). If the reaction\nwheels run into saturation, the MGTs are used to desaturate the RWs.\n\nThe data interfaces of the actuators and sensors (except for Sun sensors) are\nconnected to the I/O-Board of the OBC. The power supply interfaces (including\nSun sensor measurement interfaces) to the PCDU.\n\n7.2 Mission Objectives and ACS Subsystem Modes\n\nThe satellite system operational modes have already been cited in Sect. 1.10.2 and\nthe ACS control modes correspond to the spacecraft modes\u2014see Fig. 2.2.\n\nThe nominal spacecraft system modes like Target Pointing Mode or Nadir\nPointing mode can be split into submodes according to the different operational\ntasks like ground contact, EO area observation with imager (Nadir Pointing) or EO\ntarget observation with camera.\n\nFor this reason also the descriptions in Sect. 2.1.12 and Table 17.11 Power\nconsumption versus spacecraft modes in annex Sect. 17.7.2 show specific sub-\nmodes of the first FLP mission\u2014\u201cFlying Laptop\u201d\u2014as illustration examples.\n\n7.3 Magnetometers\n\nFLP based satellites are equipped with two three axis anisotropic-magnetoresistive\n(AMR) magnetometers manufactured by ZARM-Technik AG, Bremen, Germany\n[67]. The measured vector of Earth magnetic field is used as input information for\nmagnetic torquer control by the ACS for Detumble Mode and Safe Mode.\n\nThe magnetometers as shown in Fig. 7.1 are micro-controller based magne-\ntometers with a digital, serial RS-422 output. They measure the external magnetic\nfield with the sensitivity of 8.5 nT, the measured power consumption of each\nmodule is 0.2 W and its mass including the 2\u20133 mm thick aluminum housing is\n50 g. Figure 7.2 illustrates the orientation of the two magnetometers on the FLP\nplatform.\n\nThe transformation matrices to FLP body coordinates are given in Equations\nbelow (for details refer to [124]):\n\n7 Attitude Control Subsystem 197\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\n~AMGM0 \u00bc\n1 0 0\n0 0 1\n0 ?1 0\n\n2\n4\n\n3\n5 \u00f07:1\u00de\n\n~AMGM1 \u00bc\n0 0 1\n0 0 1\n1 0 0\n\n2\n4\n\n3\n5 \u00f07:2\u00de\n\n7.4 Sun Sensor Unit\n\nThe design of the Sun sensor unit is based on two GaAs solar cell on a small printed\ncircuit board (PCB) to make it hot redundant by design. Eight such Sun sensor units\nare placed on the FLP body and are utilized to construct the overall 4? view.\n\nFigure 7.3 shows the block diagram of the Sun sensor design and Fig. 7.4\nillustrates an example for the arrangement of Sun sensors on an FLP satellite\u2014\ndepicting the first FLP mission \u201cFlying Laptop\u201d.\n\nFig. 7.1 Magnetometer\n\nFig. 7.2 Orientation of MGM.0 and MGM-1 in the platform. \u00a9 IRS, University of Stuttgart\n\n198 O. Zeile et al.\n\n\n\nAn analog/digital converter (ADC) within the PCDU converts the analog signal\nof the cells into a digital signal that is provided within the PCDU HK data packet to\nthe OBC/OBSW.\n\nThis results in the following Sun sensor orientation vectors (for details refer to\n[124]):\n\n~nSuS?A \u00bc\n0\n\n? ffiffi2p\n2ffiffi\n2\n\np\n2\n\n2\n4\n\n3\n5 \u00f07:3\u00de\n\nFig. 7.3 Sun sensor unit diagram. \u00a9 IRS, University of Stuttgart\n\nFig. 7.4 Orientation of sun sensor units on an FLP spacecraft. \u00a9 IRS, University of Stuttgart\n\n7 Attitude Control Subsystem 199\n\n\n\n~nSuS?B \u00bc\n0ffiffi\n2\n\np\n2ffiffi\n2\n\np\n2\n\n2\n4\n\n3\n5 \u00f07:4\u00de\n\n~nSuS?C \u00bc\n?1\n0\n0\n\n2\n4\n\n3\n5 \u00f07:5\u00de\n\n~nSuS?D \u00bc\n0ffiffi\n2\n\np\n2\n\n? ffiffi2p\n2\n\n2\n4\n\n3\n5 \u00f07:6\u00de\n\n~nSuS?E \u00bc\n?1\n0\n0\n\n2\n4\n\n3\n5 \u00f07:7\u00de\n\n~nSuS?F \u00bc\n0\n\n? ffiffi2p\n2\n\n? ffiffi2p\n2\n\n2\n4\n\n3\n5 \u00f07:8\u00de\n\n~nSuS?G \u00bc\n1\n0\n0\n\n2\n4\n\n3\n5 \u00f07:9\u00de\n\n~nSuS?H \u00bc\n1\n0\n0\n\n2\n4\n\n3\n5 \u00f07:10\u00de\n\n7.5 GPS Receiver System\n\nThe GPS receiver system is internally dual redundant and running in hot redun-\ndancy. It consists of 3 independent GPS receiver boards, each connected to a\nseparate antenna via a separate low noise amplifier as depicted in Fig. 7.5.\n\nThe selected configuration is a requirement for an experiment which will be\nconducted on the first FLP mission in cooperation with the German Space Agency\n(DLR/GSOC) for GPS based attitude determination.\n\nThe DLR Phoenix receiver boards [63] are used as miniature low-power\n12-channel GPS L1 receivers based on a SigTech commercial MG5001 OEM\nreceiver board, with DLR/GSOC firmware which was developed for space and high\ndynamic applications. Single DLR Phoenix receivers already have flight heritage.\n\n200 O. Zeile et al.\n\n\n\n7.6 Fiberoptic Gyroscopes\n\nFour fiberoptic gyroscopes (FOG) are used on board the FLP in a tetrahedron\nconfiguration for the measurement of the FLP body angular rates. The tetrahedron\nconfiguration results in a 3-out-of-4 redundancy by design.\n\nThe sensors of the first FLP spacecraft are of type LITEF C-FORS (Commercial\nFiber Optic Rate Sensor)\u2014see Fig. 7.6 and [64]. As specified by the manufacturer\nthe C-FORS has a a maximum rate bias of 27\u00b0/h over ?40 to +77 \u00b0C and a\nmaximum angular random walk of 0.15\u00b0/?h.\n\nFig. 7.5 GPS system. \u00a9 IRS, University of Stuttgart\n\nFig. 7.6 FOG unit C-FORS\n\n7 Attitude Control Subsystem 201\n\n\n\nThe alignment vectors to FLP boby coordinates are giver in equations below (for\ndetails refer to [124]) (Fig. 7.7):\n\n~zFOG0 \u00bc\n0\n1\n0\n\n2\n4\n\n3\n5 \u00f07:11\u00de\n\n~zFOG1 \u00bc\n0:4741\n0:3333\n?0:8165\n\n2\n4\n\n3\n5 \u00f07:12\u00de\n\n~zFOG2 \u00bc\n0:4741\n0:3333\n0:8165\n\n2\n4\n\n3\n5 \u00f07:13\u00de\n\n~zFOG3 \u00bc\n?0:9428\n0:3333\n\n0\n\n2\n4\n\n3\n5 \u00f07:14\u00de\n\nThe alignment matrix results to:\n\n?AFOG \u00bc \u00bd~zFOG0 ~zFOG1 ~zFOG2 ~zFOG3 ? \u00f07:15\u00de\n\nThe C-FORS gyroscopes are the commercial variant and were selected for the\nfirst FLP based mission as a university satellite simply for cost reasons. They have\nlimited aging stability (see also Sect. 10.6.5).\n\nFig. 7.7 Alignment of the\nFoGs\n\n202 O. Zeile et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nFor commercial missions and for FLP Generation 2, Airbus DS foresees to use\nthe LITEF ?FORS-6U as also proposed in [144].\n\n7.7 Star Tracker\n\nThe star tracker system as shown in Fig. 7.8 consists of a micro data processing unit\nand two camera head units (CHU) with a baffle. The selected model is the\nmicro-Advances Stellar Compass (?ASC) developed by the Technical University of\nDenmark (DTU). See also [61, 62].\n\nThe CHU uses a CCD-chip with a size of 7.95 \u00d7 6.45 mm2 with 752 \u00d7 558\npixels to take the image of the stars. With the used optics the field of view\n(FOV) results to 13.4\u00b0 \u00d7 18.4\u00b0 and its diagonal covers 22.76\u00b0 (Fig. 7.9).\n\nFig. 7.8 Star tracker system\n\nFig. 7.9 Alignment of the\nSTR camera head units\nviewed along yFLP axis\n\n7 Attitude Control Subsystem 203\n\n\n\nThe transformation matrices to FLP boby coordinates are given in the equation\nbelow (for details refer to [124]):\n\n?ACHUA \u00bc\n?0:2693 ?0:8829 0:3846\n?0:5064 0:4695 0:7233\n?0:8192 0 ?0:5736\n\n2\n4\n\n3\n5 \u00f07:16\u00de\n\n?ACHUB \u00bc\n0:2693 ?0:8829 0:3846\n?0:5064 0:4695 0:7233\n?0:8192 0 ?0:5736\n\n2\n4\n\n3\n5 \u00f07:17\u00de\n\n7.8 Reaction Wheels\n\nFour reactions wheels (RW) are integrated on board the FLP in a tetrahedron\nconfiguration [65]. The reaction wheel of the FLP Generation 1 is a Rockwell\nCollins type RSI 01-5/28 (see Fig. 7.10 and [68]). It has a mass of 0.7 kg and an\nangular momentum capacity of 0.12 Nms and a reaction torque of 5 mNm over the\nrange of \u00b13000 rpm.\n\nEach RW is connected via an FPGA-based RW electronics in a star like con-\nfiguration via RS-422 bidirectional interface to allow the parallel executions of the\nACS commands [65].\n\nThe alignment vectors of the RWs in the tetrahedron assembly (see Fig. 7.11) are\nby default the same as for the FOGs. This however my vary for each mission. For\nthe mission discussed in [144] a more flat assembly (>60\u00b0) was selected as higher\nagility was required around one particular spacecraft axis.\n\nFor the FLP Generation 2, Airbus DS foresees an RW type with greater torque\nperformance and allowing to eliminate the RW assembly electronics by direct RW\nconnectivity to the OBC and simpler control by OBSW. The selected type is the\nRW-90 from Astro- und Feinwerktechnik GmbH, Berlin [69].\n\nFig. 7.10 Reaction wheel\n\n204 O. Zeile et al.\n\n\n\n7.9 Magnetotorquers\n\nThree magnetic torquers with a linear dipole moment of 6 Am2 are used as an\nactuator in Detumble and Safe Mode and during normal operation they dump the\nmomentum accumulated by the reactions wheels. The magnetic torquers are also\nprovided by the ZARM-Technik (see Fig. 7.12). Each torquer consists of two\nseparate coils wound parallel on the top of each other. Both can be operated\nindependent of each other providing redundancy.\n\nThe magnetotorquers are aligned along the major body axes of the FLP structure\n(Fig. 7.13).\n\nTo apply a torque onto the spacecraft the coils are activated by commanding the\nMGT electronics from the OBC. They only offer the states \u201cactive\u201d and\n\u201cnot-active\u201d, the current is not regulated. Control is achieved by Pulse Width\nModulation (PWM). When the satellite is in a pointing mode, the MGT electronics\nis powered but the coils themselves are deactivated most of the time. Figure 7.14\nshows the electrical interaction between OBC, PCDU and MGT electronics and\ncoils. Low torques for precise fine pointing are applied by means of using the\nReaction Wheels (RW).\n\nFig. 7.11 RW tetrahedron\nassembly. \u00a9 IRS, University\nof Stuttgart\n\nFig. 7.12 Magnetotorquers\n\n7 Attitude Control Subsystem 205\n\n\n\n~xMGT0 \u00bc\n1\n0\n0\n\n2\n4\n\n3\n5 \u00f07:18\u00de\n\n~xMGT1 \u00bc\n0\n1\n0\n\n2\n4\n\n3\n5 \u00f07:19\u00de\n\n~xMGT2 \u00bc\n0\n0\n1\n\n2\n4\n\n3\n5 \u00f07:20\u00de\n\nThe PCDU contains the switch to provide power to the MGT electronics for side\n0 and redundant side 1. IF the ACS algorithm in the OBSW requires torque to be\ngenerated, the MGT electronics is commanded to activate the coils for the com-\nputed amount of time.\n\nThe MGT electronics 0 and 1, and the OBC are connected in the FLP Generation\n1 platform design via two separate I2C interfaces. An improved MGT Electronics\nwith less critical interface is foreseen for FLP Generation 2.\n\n7.10 Extensions for FLP Generation 2\n\nSome enhancements of the ACS for the FLP Generation 2 such as better FOGs and\nmore performant RWs already have been mentioned.\n\nFurthermore the ACS can be enhanced by a digital Earth sensor for improved\nattitude precision in Safe Mode. This also allows simpler missions with reduced\n\nFig. 7.13 Magnetotorquer alignment. \u00a9 IRS, University of Stuttgart\n\n206 O. Zeile et al.\n\n\n\npointing requirements to fly with Earth and Sun sensors only and without star\ntrackers.\n\nAnother enhancement\u2014already mentioned in Sect. 1.11\u2014is a Reaction Control\nSystem (RCS) for orbit correction maneuvers as it is studied by Airbus DS in [144]\n(hydrazine monopropellant) or in [154] (Xenon resistojet). An example propulsion\nmodule which is compatible with the FLP Generation 2 OBC architecture ([146]\nand Sect. 9.3.2) is depicted in Fig. 7.15.\n\nThese however are not yet on board in the first FLP based mission and are not\ndetailed yet in this Flight Operations Manual.\n\nFig. 7.14 MGT electronic architecture and control. \u00a9 IRS, University of Stuttgart\n\nFig. 7.15 Hydrazine\nmonopropellant propulsion\nmodule\u2014from [159].\n\u00a9 Airbus DS\n\n7 Attitude Control Subsystem 207\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\n\n\n7.11 ACS Subsystem Control\n\nThe ACS subsystem is represented in the OBSW as a collection of device handler\nand assembly objects, as well as one controller object. The subsystem itself is\nrepresented by the ACS_Subsystem object.\n\nFig. 7.16 Attitude control subsystem overview. \u00a9 IRS, University of Stuttgart\n\n208 O. Zeile et al.\n\n\n\nAs shown in Fig. 7.16, the ACS subsystem objects can be layered hierarchically.\nIt should be noted that the layering is only with respect to the mode commanding of\nthe subsystem\u2014not w.r.t. object-oriented inheritance. The objects are all system\nobjects on their own and can also be commanded individually by commanding\nmode changes or by sending direct commands for the device handlers. The layers\nare there to allow commanding of a subset or the complete subsystem with only one\ncommand, which will be hierarchically forwarded to the lower layers. It also allows\nreacting to FDIR events, as lower layers can handle redundant devices without need\nto notify the higher layers.\n\nThe lowest layer is formed by the device handlers, which are described in\nSect. 7.11.2. The device handlers are grouped by assembly objects, described in\nSect. 7.11.3. On the same layer as the assemblies is the ACS_Controller which\nencapsulates the control algorithms. The ACS_Controller is described in\nSect. 7.11.4.\n\n7.11.1 ACS Subsystem Modes\n\nThe ACS_Subsystem modes including all subobjects and their modes and submodes\nare included in Table 7.1.\n\n7.11.2 ACS Device Handlers\n\nIn this section, those device handlers which are part of the ACS are described in\ndetail. The device handlers adhere to the concepts outlined in Sect. 3.2.2.\n\n7.11.2.1 FOG Device Handler\n\nThere is only one device handler handling all four FOG units. This results from the\nFOGs being connected to a common bus and only having one interface on the\nI/O-Board. Details on the FOG units can be found in [64]. The FOG is a simple\ninstrument, only returning rotational rate measurement values upon request. There\nare no different modes or additional telemetry and commands available.\n\nModes and Submodes\nWhen commanded to On from Off, the FOG units are activated. No further com-\nmands are sent. On mode is entered immediately after all switches are on. The\ntransition from Off to On takes 4 s at maximum.\n\nThere are no submodes defined. Instead, the submode is used as a deactivation\nmask. The bits 0\u20134 are used to deactivate FOG unit 0\u20134. If the corresponding bit is\n0 the FOG is used, if it is 1, the FOG is switched to Off or not turned on.\n\n7 Attitude Control Subsystem 209\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nTable 7.1 ACS subsystem modes\n\nSubsystem Mode Off 0x19000000\n\nMode Submode\n\nACS Controller Off 0 Off 0\n\nMGT Ass. Off 0 Off 0\n\nMGM Ass. Off 0 Off 0\n\nRW Ass. Off 0 Off 0\n\nSTR Ass. Off 0 Off 0\n\nFOG Ass. Off 0 Off 0\n\nGPS Ass. Off 0 Off 0\n\nSubsystem Mode Safe 0x19020000\n\nMode Submode\n\nACS Controller Normal 2 Safe 2\n\nMGT Ass. Normal 2 Multi 1\n\nMGM Ass. Normal 2 Fast 2\n\nRW Ass. Off 0 Off 0\n\nSTR Ass. Off 0 Off 0\n\nFOG Ass. Off 0 Off 0\n\nGPS Ass. Off 0 Off 0\n\nSubsystem Mode CoarseNadir 0x19030000\n\nMode Submode\n\nACS Controller Normal 2 CoarseNadir 3\n\nMGT Ass. Normal 2 Single 0\n\nMGM Ass. Normal 2 Fast 2\n\nRW Ass. Off 0 Off 0\n\nSTR Ass. Normal 2 Default 7\n\nFOG Ass. Off 0 Off 0\n\nGPS Ass. On 1 Single 0\n\nSubsystem Mode Idle 0x19040000\n\nMode Submode\n\nACS Controller Normal 2 Idle 4\n\nMGT Ass. Normal 2 Single 0\n\nMGM Ass. Normal 2 Fast 2\n\nRW Ass. Normal 2 Torque 1\n\nSTR Ass. Normal 2 Default 7\n\nFOG Ass. Normal 2 Default 0\n\nGPS Ass. On 1 Single 0\n\nSubsystem Mode NadirPt 0x19050000\n\nMode Submode\n\nACS Controller Normal 2 NadirPt 5\n\nMGT Ass. Normal 2 Single 0\n\nMGM Ass. Normal 2 Fast 2\n(continued)\n\n210 O. Zeile et al.\n\n\n\nFor example, if the bit pattern 00001101 is used, FOG 1 is on and the other FOGs\nare Off (compare to Table 7.2). This mask can be used in On, Raw and Normal\nmode. The Off mode only has the default submode 0x00.\n\nWhen On, Raw and Normal mode are commanded with a submode unequal to\nzero, the deactivated FOG units are switched off before entering the commanded\nmode.\n\nTable 7.2 FOG device handler modes\n\nHandler Mode M# Submode SM# Description\n\nFOG Off 0 Default 0 Off\n\nOn 1 Bit Mask 0\u201315 Bit mask in bits 0\u20133 (0 on, 1 off), where FOG 0\nis the least significant bit\n\nNormal 2 Bit Mask 0\u201315 Bit mask in bits 0\u20133 (0 on, 1 off), where FOG 0\nis the least significant bit\n\nRaw 3 Default 0 Raw Mode unchanged from before\n\nTable 7.1 (continued)\n\nSubsystem Mode Off 0x19000000\n\nRW Ass. Normal 2 Torque 1\n\nSTR Ass. Normal 2 Default 7\n\nFOG Ass. Normal 2 Default 0\n\nGPS Ass. On 1 Single 0\n\nSubsystem Mode TargetPt 0x19060000\n\nMode Submode\n\nACS Controller Normal 2 TargetPt 6\n\nMGT Ass. Normal 2 Single 0\n\nMGM Ass. Normal 2 Fast 2\n\nRW Ass. Normal 2 Torque 1\n\nSTR Ass. Normal 2 Default 7\n\nFOG Ass. Normal 2 Default 0\n\nGPS Ass. On 1 Single 0\n\nSubsystem Mode InertialPt 0x19080000\n\nMode Submode\n\nACS Controller Normal 2 InertialPt 7\n\nMGT Ass. Normal 2 Single 0\n\nMGM Ass. Normal 2 Fast 2\n\nRW Ass. Normal 2 Torque 1\n\nSTR Ass. Normal 2 NEO 7\n\nFOG Ass. Normal 2 Default 0\n\nGPS Ass. On 1 Single 0\n\n7 Attitude Control Subsystem 211\n\n\n\nTM/TC Interface\nA single TM parameter containing the FOG rate measurements is used. Also, a\nsingle Service (2,130) direct TC to request the measurement data exists. The\ncommand affects all four FOG units.\n\n7.11.2.2 STR Device Handler\n\nThe Star Tracker is a sophisticated device, as it is commanded and responds in a\nsubset of PUS services. These are:\n\n\u2022 Service 1: Telecommand Verification Service\n\u2022 Service 3: Housekeeping Service ((3,25) only)\n\u2022 Service 5: Event Reporting Service\n\u2022 Service 6: Memory Management Service\n\u2022 Service 8: Function Management Service\n\u2022 Service 9: Time Management Service\n\nParts of the commands and responses are created and interpreted on-board.\nUnknown or unexpected responses are always forwarded to ground unchanged\n\n(with the STR\u2019s APID). Details on commanding the STR can be found in [62].\nAs described in Sect. 7.7, the STR unit consists of micro data processing unit\n\n(DPU) and two camera head units (CHU). The DPU is a single unit but provides\ninternal redundancy. Each CHU delivers an independent attitude solution to the\nOBC. In addition, one CHU is equipped with a \u201cmicro inertial reference unit\u201d\n(MIRU) as an experiment. This unit, together with additional software features in\nthe DPU provide an additional attitude solution, which is augmented with data from\nan internal reference unit.\n\nModes and Submodes\nDespite this complex device protocol, the STR device handler is a default device\nhandler object as described in Sect. 3.2.2. Particularly, it adheres to the default\ndevice mode concept with Off, On and Normal modes. The STR device handler\nmodes are listed in Table 7.3:\n\nThe STR can start up in three different modes:\n\n\u2022 Safe-Boot Up\n\u2022 Standby Mode\n\u2022 Attitude Mode\n\nTo have a clear starting point, the handler always boots up the device in\nSafe-Boot-Up Mode. The procedure is triggered when going from mode Off to\nmode On, but also when going form mode NORMAL back to On (because a reboot\nis the only way to come back to Safe-Boot Up Mode). During the transition to On,\ncertain parameters are set. These are\n\n212 O. Zeile et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n\u2022 The HK interval\n\u2022 The image integration time\n\u2022 Power settings for both CHU\u2019s. These are turned off.\n\nThere are a number of Normal modes. There is a bit mask for submodes which is\nshown in Table 7.4. Almost all of these submodes are valid and may be useful.\nThese submodes can only be used in mode Normal. All other modes only have the\ndefault submode 0x00.\n\nIf the time update bit (bit 2) of the submode is set to On, the time of the STR PPS\npulse is recorded and sent to the star tracker every few seconds. The interval is\nsettable as STR device handler configuration parameter.\n\nIf an Off command is issued, the device is simply turned off.\nBeing a PUS-capable device, the STR varies the general device concept for Raw\n\nmode. When switching to Raw mode, the Handler starts reading a dedicated\nmessage queue that receives commands routed directly to its APID. Any received\ntelemetry is immediately inserted in the normal downlink stream (with STR APID\n\u2014see Table 2.6). However, a length check is performed to ensure packets are\nwell-formed. If a corrupted packet is found, it is downlinked by making use of the\ndefault (2,129) service. The data content does not have any structure then. The STR\nEGSE can be used to display raw STR packets on ground.\n\nThe handler does not check any uplinked commands. Therefore, any command\n(including ill-formed) can be submitted to the star tracker.\n\nTo switch on the STR, there are two redundant switches in the PCDU, each of\nwhich can be used to power the STR. There is a private pool variable defining\n\nTable 7.3 STR device handler modes\n\nHandler Mode M# Submode SM# Description\n\nSTR Off 0 Default 0 Off\n\nOn 1 Default 0 Safe boot-up mode\n\nNormal 2 Bit Mask 0\u2013127 Complicated bit mask with many\nsettings. See Table 7.4 for details.\nThe idea is that the submode 0 can be\nused as default mode\n\nRaw 3 Default 0 No changes from previous state\n\nTable 7.4 STR Submode bit mask\n\nBit 7 6 5 4 3 2 1 0\n\nUsage \u2013 Auto\nImaging\non\n\nDPU Mode MIRU on Time\nupdate\noff\n\nCHU-B\noff\n\nCHU-A\noff\n\nValues Must\nbe 0\n\n1: on\n0: off\n\n00 OR 10: Attitude\n01: Standby mode\n11: Simulation mode\n\n1: on\n0: off\n\n1: off\n0: on\n\n1: off\n0: on\n\n1: off\n0: on\n\n7 Attitude Control Subsystem 213\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nwhich switch is used, which can be set by a memory load command. It is however\nonly possible to set this variable when the STR handler is in Off mode to avoid\nproblems during the handler transition to Off mode.\n\nTM/TC Interface\nDirect commands are sent to the STR by the standard Service (2,130). The handler\nforwards any direct command to the device, with the exception of device mode\ncommands, as they would jeopardize the mode synchronization between handler\nand device.\n\nIn the attitude information and the housekeeping packets, the STR delivers the\nfollowing data:\n\n\u2022 Attitude information (one from each CHU)\n\u2022 Augmented attitude information (from the MIRU experiment)\n\u2022 DPU and CHU temperatures\n\u2022 CHU voltages\n\nThe attitude information is used in the ACS subsystem. Temperature data are\nprocessed in the TCS system.\n\nThe attitude information has the form of quaternions, but also additional\ninformation like the number of detected stars, the average time the image was taken\nand additional information flags. The handler extracts this information and stores\nthem in the datapool.\n\nSTR telemetry, which is unknown to the device handler (such as image data),\nwill be put to the telemetry stream unchanged\u2014i.e. with STR APID and packet\nheader structure.\n\nImage Forwarding\nFor the FLP platform, the I/O-Board is not capable of handling a constant stream of\ndata from the STR device. Such a stream is created if large amounts of data (such as\na full raw image) are requested from the device.\n\nIn such cases, the OBC will not receive any data from the STR. Therefore, such\nconditions must be avoided, i.e. operators should never request a full image as a\nwhole block, only in segments.\n\n7.11.2.3 MGM Device Handler\n\nThere are two MGM device handlers, one for the nominal and one for the redundant\nMGM. For details on the MGM commanding, see [67].\n\nWhen commanded to On, the MGM is put into standby mode. The transition\nfrom Off to On takes 10.6 s at maximum.\n\nWhen commanded to Raw mode, no commands are sent, i.e. the MGM mode\nstays the same. Thus, if the MGM was in standby mode at the time of the mode\nchange, a power up TC needs to be sent first to get the MGM into Normal mode. If\nthe handler is set to normal mode, the MGM is switched into its Normal mode and\nTM is requested regularly.\n\n214 O. Zeile et al.\n\n\n\nThere are three submodes for Normal mode. Slow (0) Medium (1) and Fast (2),\ncorresponding to slow, medium and fast sampling (see [67]). All other modes only\noffer the default submode 0x00.\n\nModes and Submodes\nThe MGM device handler modes are listed in Table 7.5. When commanded to On,\nthe MGM is put into standby mode. The transition from Off to On takes 10.6 s at\nmaximum.\n\nWhen commanded to Raw mode, no commands are sent, i.e. the MGM mode\nstays the same. Thus, if the MGM was in standby mode at the time of the mode\nchange, a power up TC needs to be sent first to get the MGM into Normal mode. If\nthe handler is set to Normal mode, the MGM is switched into its Normal mode and\nTM is requested regularly.\n\nThere are three submodes for Normal mode. Slow (0) Medium (1) and Fast (2),\ncorresponding to slow, medium and fast sampling (see [67]). All other modes only\noffer the default submode 0x00.\n\nTM/TC Interface\nFor the MGM, there are TM parameters containing the measured magnetic field by\nthe two MGMs and their measured temperature. Service (2,130) direct commands\ninclude requests for measurement data in the three sampling rates and power up and\ndown commands. It needs to be noted that due to a bug in the MGM firmware, the\nMGM power up TC acts as a toggle command, i.e. if the MGM is in Normal mode\nand the power up command is received, it is set into standby mode. Using the\npower down TC will always put the MGM into standby mode.\n\n7.11.2.4 GPS Device Handler\n\nThere are three GPS device handlers, one for each GPS unit. Details on the GPS\nreceiver operations can be found in [63]. The GPS receivers are complex instru-\nments offering different modes and allowing a range of settings to be configured by\nthe user. However, most of the time, the standard settings can be left unchanged.\n\nTable 7.5 MGM device handler modes\n\nHandler Mode M# Submode SM# Description\n\nMGM\nN/R\n\nOff 0 Default 0 Off\n\nOn 1 Default 0 MGM in standby mode\n\nNormal 2 Slow Sampling 0 MGM Slow Sampling\n\nMedium\nSampling\n\n1 MGM Medium Sampling\n\nFast Sampling 2 MGM Fast Sampling\n\nRaw 3 Default 0 Raw Mode unchanged from\nbefore\n\n7 Attitude Control Subsystem 215\n\n\n\nThe GPS receivers return navigation solution TM (position, velocity, time) in the\nso-called F40 message and further information on how many GPS satellites are\nvisible and which channels are used in the F62 message. These two are the main\nTM packets which are regularly polled from the receivers by the OBSW.\n\nThe GPS receivers offer a filtered navigation solution through a functionality\nnamed Extended Navigation Solution (XNS), whose quality may be better than that\nof the simple solution. The receivers must be commanded to a certain mode in order\nto use this functionality. If switched on, the XNS is returned in the F80 message.\n\nThere is a Pulse Per Second line from each GPS receivers to the OBC\nProcessor-Board. By this line, the GPS signals the exact GPS clock seconds. This\nline can be used to synchronize the on-board time to GPS with a very high accuracy.\n\nModes and Submodes\nThe GPS device handler modes are listed in Table 7.6. The GPS Handler does not\noffer a Normal mode. Instead, in On mode messages from the GPS receiver are\nreceived and parsed by the OBSW. This is in violation of the general device\nhandling concept, which defines the ON mode as a passive mode without any\ncommunications. However, as the GPS provides data whenever it is powered,\ndistinguishing between On and Normal modes would not increase operability.\n\nThe GPS receivers can be operated in two modes, Aided and Unaided. For\nAided mode, they must be supplied with orbit information. This orbit information\nmust either be uplinked from ground before starting the GPS receivers in Aided\nmode or be already available on-board, e.g. from previous GPS data, when the GPS\nsystem was switched off. Aided and Unaided mode are implemented as submodes\nto the On mode. Whenever an Aided submode is commanded, the handler sets the\norbit information and activates the aided mode. Whenever Unaided submode is\ncommanded, the handler disables the aiding mode of the GPS.\n\nThe GPS can also be started Aided or Unaided. This is selected by either\ncommanding mode on, submode Aided or mode on, submode Unaided when the\nGPS handler is in mode off.\n\nTable 7.6 GPS device handler modes\n\nHandler Mode M# Submode SM# Description\n\nGPS\n0\u20132\n\nOff 0 Default 0 Off\n\nOn 1 Unaided 0 Unaided Boot\n\nAided 1 Aided Boot\n\nUnaided\nXNS\n\n2 Unaided Boot with XNS\n\nAided XNS 3 Aided Boot with XNS\n\nRaw 3 Default 0 Raw Mode unchanged from\nbefore\n\nGPS\nCDM\n\nOn 1 Internal 0 Internal Clock used in every GPS\n\nCDM 1 Common Clock used for all GPS\n\n216 O. Zeile et al.\n\n\n\nWhen starting Unaided, the GPS receiver is switched on and the Handler waits\nuntil the GPS receiver has accomplished a fix. This will be the standard situation in\nLaunch and Early Orbit Phase (LEOP)\u2014see Sect. 11.6.\n\nWhen starting Aided, the Handler sets the time of the GPS receiver, transmits\nalmanac and orbit data, sets the tracking mode and doppler window and enables\nAided operation.\n\nThe GPS Receiver offers an extended Kalman filter which can be activated to\ncompute a filtered navigation solution with increased precision. The filter, which is\ncalled Extended Navigation Solution (XNS), can be enabled by commanding the\nDevice Handler to two additional modes, one with aiding disabled, one with aiding\nenabled.\n\nAlmanac data will be updated by the receiver as soon as it achieves a fix. These\nupdates only affect the almanac data stored by the receiver itself. The almanac data\nthat is sent to the receiver by the device handler during aided start is read from a\nmemory within the device handler. This memory must be updated (via memory\nmanagement service 6) regularly to contain an up to date almanac, an update\ninterval of 1 month is recommended.\n\nWhen commanded to On from Off, the GPS receiver is switched on. Then,\ndepending on the requested submode, the handler either waits for a fix (unaided) or\nsets time, almanac, orbit, elevation mask and doppler window values, activates\naided mode and waits for a fix (aided). As soon as the receiver is configured, the On\nmode is reached. Reaching the On mode does not imply a fix.\n\nWhen commanded to On, Aided mode is activated or deactivated depending on\nthe submode, and, if commanded from Unaided to Aided, the Orbit information is\ntransmitted. Also, the XNS filter is activated or deactivated depending on the\ncommanded submode.\n\nWhen XNS is enabled, the message containing the filtered navigation data (F80)\nis enabled, and the interval of the message containing the normal navigation data\n(F40) is decreased.\n\nRaw mode is entered immediately without sending any commands.\nWhen commanded to mode Off, the handler does not perform any actions and\n\ndirectly shuts down the GPS.\nThere are four submodes for On mode: Unaided (0), Aided (1), Unaided with\n\nXNS (2) and Aided with XNS (3). The other modes only have the default submode 0.\n\nTM/TC Interface\nTM parameters generated by the GPS are the basic and filtered navigation data (in\nthe F40 and F80 messages respectively), including position, velocity, range, range\nrate, time, etc. as well as additional data (in the F62 message) like the number of\ntracked satellites, position dilution of precision (PDOP) values and so on.\n\nThe GPS handler offers access to some configuration variables through its pri-\nvate pool. The variables include an almanac, the intervals with which the telemetry\ndata is generated and the Doppler window used during aided startup.\n\nThe variables of the F40 message (navigation solution) are only written to the\nOBSW datapool if the navigation solution is valid. Otherwise, these variables are\n\n7 Attitude Control Subsystem 217\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\nset to invalid. The number of tracked satellites, the navigation status and the PDOP\nare updated regardless of this rule.\n\nThe interval in which the various periodic GPS messages are reported can be\nchanged via direct command. For this it is important to note that some state tran-\nsitions within the handler depend on the reception of a F40 message before con-\ntinuing. This means that mode transitions can take longer or even fail if the interval\nfor the F40 message is increased too much. A value of 10 s is a safe upper limit with\nlarger values possible but not guaranteed to work.\n\nDirect Service (2,130) commands include commands to set the mode of the GPS\nreceivers (Aiding Mode, Tracking Mode, XNS), set the data generation rates,\nDoppler window and TLE data as well as set and request XNS configuration\nvariables.\n\nGPS CDM Handler\nThe three GPS receivers have two clock sources, one internal (\u201cSingle Clock\u201d) and\none external (\u201cCommon Clock\u201d)\u2014the latter being shared by all three receivers. The\nconcept of the common clock is similar to the Clock Distribution Module (CDM),\nwhich can still be found in some documentation and is the namesake of the handler\ndescribed here. As the clock management is shared by all receivers when the\nCommon Clock is used, an additional device handler is available which configures\nthe clock sources of all receivers.\n\nThe GPS CDM device handler modes are also listed in Table 7.6. Unlike other\ndevice handlers, the GPS CDM handler does not have a normal, Off or Raw mode.\nIt can be commanded to one of two On modes to set the clock sources.\n\nWhen commanded to On, the GPS CDM Handler sets the clock sources for all\nreceivers according to the commanded submode and reads back the clock source\nTM from all receivers. The two submodes for the on mode are internal (0) and\nCDM (1).\n\nThere is one TM parameter containing the type of the clock source. There are no\ndirect commands to the GPS CDM handler.\n\n7.11.2.5 Sun Sensor Handler\n\nThe Sun sensors (SuS) are simple solar cells with their generated voltages and\ncurrents being measured by the PCDU. Therefore, there is no dedicated device\nhandler in the OBSW and the SuS do not have modes. Instead, the PCDU Handler\n(see Sect. 5.6) requests the SuS variables from the PCDU on a regular basis and\nwrites them to the datapool so that they can be used by the ACS_Controller.\n\nEach of the eight physical SuS units consists of two redundant sensors (solar\ncells), both of which have an associated TM parameter containing the measured\ncurrent. The temperature of each physical SuS unit is measured by one thermistor.\nThese temperatures are also represented as TM parameters. There is no dedicated\nTC for the SuS.\n\n218 O. Zeile et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\n7.11.2.6 MGT Device Handler\n\nThere are two MGT handlers, one for the nominal coils x/y/z and one for the\nredundant coils x/y/z. Details on the MGT commanding can be found in [66].\n\nThe MGT is a very simple device with coils being commanded in plus or minus\ndirection or off, without the possibility to adjust the strength of the resulting\nmagnetic field. The only accepted command is to set the coils to one of the three\nstates and read back the value.\n\nModes and Submodes\nThe MGT device handler modes are listed in Table 7.7. When commanded from Off\nto On, the MGT is switched on and On mode is entered. The transition from Off to\nOn takes 2.6 s at maximum. Whenever On mode (including from startup) or Raw\nmode is entered, the coils are deactivated. In Normal mode, the coil state is set as\nindicated in the datapool.\n\nThere are no submodes defined, instead the individual coils can be deactivated in\nthe Normal mode by setting bit 0\u20133 in the submode, corresponding to coil x\u2013z. For\nexample, submode 0x02 (binary 00000010) means that only the x and z coils are\nset, the y coil will be off. In Submode 0x01 (binary 00000001) the x-coil is\ndeactivated, in Submode 0x04 (binary 00000100) the z-coil is deactivated. This can\nbe used if both nominal and redundant MGTs have lost a coil. Both can be com-\nmanded to nominal mode with mutually exclusive deactivated coils.\n\nAll other modes only have the default submode 0x00.\n\nTM/TC Interface\nThe used TM parameters include only the commanded state and the dual-coil flag.\nThere is no parameter indicating the actual state of the coils as indicated by the\ninstrument. This results from the fact that in normal operations the coils will be\nswitched on and off at a high frequency and the positive/off/negative value at a\ngiven time does not carry any essential information. There is only one Service\n(2,130) direct TC to set the coil state as defined in the datapool.\n\nTable 7.7 MGT device handler modes\n\nHandler Mode M# Submode SM# Description\n\nMGT\nN/R\n\nOff 0 Default 0 Off\n\nOn 1 Default 0 Coils are deactivated\n\nNormal 2 Nominal,\nBit Mask\n\n0\u20137 Coil state set as indicated in the\ndatapool. Coils in x-, y- and\nz-direction can be deactivated by the\nbits 0\u20132 (0 on, 1 off), where the least\nsignificant bit is the x direction\n\nRedundant 32 Coil state set as indicated in the\ndatapool if dual coil flag is set to true.\nOtherwise, all coils are switched off\n\nRaw 3 Default 0 Coils are deactivated\n\n7 Attitude Control Subsystem 219\n\n\n\n7.11.2.7 RW Device Handler\n\nThere is one RW handler for each of the four reaction wheels. Details on the RW\ncommanding can be found in [65].\n\nThe reaction wheels are actuators that produce torque by spinning a metal disc.\nThey can either be commanded in speed mode or in torque mode. In the first, the\nrotational speed of the disc is commanded directly while in the latter, the torque that\nshould be produced is commanded.\n\nModes and Submodes\nThe RW device handler modes are listed in Table 7.8. When commanded from Off\nto On, the RW is switched on and On mode is entered. The transition from Off to\nOn takes 5.6 s at maximum.\n\nWhenever On mode is entered (including from startup), the RW is commanded\nto Standby (command \u201cDisable Wheel\u201d). If the RW is commanded from Normal\nmode/submode Torque, to the Raw mode, then the RW is commanded to zero\ntorque before entering the Raw mode.\n\nNormal mode/submode Idle, is used during RW commissioning for first start of\nthe RW assembly with the careful test of RW polarity in orbit. The RW speed will\nbe set to 10 % of the maximum permissible value, i.e. at 300 rpm in this submode.\nFor use of the mode also refer to Sect. 11.7.\n\nThe RW handler main modes are Normal mode/Torque submode (1) and Normal\nmode/Speed submode (2). In Torque submode, a torque read from the datapool is\n\nTable 7.8 RW device handler modes\n\nHandler Mode M# Submode SM# Description\n\nRW 0\u20133 Off 0 Default 0 Off\n\nOn 1 Default 0 Wheel disabled\n\nNormal 2 Idle 0 RW 0 at 300 rpm, RW 1\u20133 at\n?300 rpm.\n\nTorque 1 Torque is set as indicated in the\ndatapool\n\nSpeed 2 Speed is set as indicated in the\ndatapool\n\nManual 3 TM is requested normally, but no\nspeed or torque is set. Instead, direct\ncommanding is possible for test\npurposes\n\nSpin\nDown\n\n4 TM is requested normally, wheels are\nspinning down freely. No commands\nare sent to the wheels\n\nRaw 3 Default 0 Torque is set to 0 before entering raw\nmode when coming from torque mode,\notherwise no changes from previous\nstate\n\n220 O. Zeile et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\nset. In Speed submode, a speed read from a datapool variable is set. In both Torque\nand Speed mode, a get RW TM command is sent additionally in every cycle.\n\nIn Normal mode/submode Manual, TM is requested normally, but no speed or\ntorque is set. Instead, direct commanding is possible for test purposes.\n\nNormal mode/submode SpinDown is to let the RWs run down without breaking\nactively.\n\nAll other modes only have the default submode 0x00.\n\nTM/TC Interface\nTM parameters for the RW include commanded and measured speeds and com-\nmanded torques of the four wheels, the measured motor current as well as the\nmeasured temperature.\n\nThrough Service (2,130) commands, the wheels can be reset, TM can be\nrequested, the wheels can be dis- and enabled and a torque or a speed can be\ncommanded. Note that in normal mode, a speed or torque commanded per direct\nTC will always be overwritten in the next cycle with the value from the datapool.\n\n7.11.3 ACS Assemblies\n\nThe ACS assemblies are used to group redundant devices, hiding the redundancy.\nAssemblies are also an interface between the device handlers and the subsystem\nmode machine. The assemblies implement the concepts as described in Sect. 3.2.3,\nnotably offering the same modes and submodes as the device handlers, if not noted\notherwise. They keep their respective mode and submode as long as enough chil-\ndren are in the correct state and fall back to mode OFF otherwise.\n\n7.11.3.1 FOG_Assembly\n\nThe FOG_Assembly operates in a 3 out of 4 hot redundant configuration. That\nmeans as long as at least three FOG handlers are in the currently active mode, it\nkeeps its mode and falls back to Off otherwise. The modes of the FOG_Assembly\nare listed in Table 7.9.\n\nTable 7.9 FOG_Assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nFOG Off 0 Default 0 Off\n\nOn 1 Default 0 Mode is kept as long as 3 FOGs are\navailable\n\nNormal 2 Default 0 Mode is kept as long as 3 FOGs are\navailable\n\n7 Attitude Control Subsystem 221\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n7.11.3.2 STR Assembly\n\nThe STR_Assembly only has one child but is needed for multiple reasons. First and\nforemost, the STR has an internal redundancy which is handled by the assembly.\nSecondly, the STR Handler offers different submodes which can be used indiffer-\nently of the system mode. To abstract this from the mode machine, the assembly\noffers only the default submode whereas the STR handler will be commanded to a\nsubmode stored in the assembly and configurable through the memory service. The\nmodes of the STR_Assembly are listed in Table 7.10.\n\n7.11.3.3 MGM Assembly\n\nThe MGM_Assembly operates in a 1 out of 2 hot redundant configuration. That\nmeans, that as long as at least one MGM is the currently active mode, the assembly\nwill keep its mode, falling back to Off otherwise. The modes of theMGM_Assembly\nare listed in Table 7.11:\n\nTable 7.10 STR_Assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nSTR Off 0 Default 0 Off\n\nOn 1 Default 0 Safe boot-up mode\n\nNormal 2 Bit Mask 0\u2013127 Same as STR modes. See Table 7.3\n\nNormal 2 Hidden 128 Use submode configured in\nassembly. Default is the STR\nhandler default mode, 0. Settable by\nmemory load\n\nTable 7.11 MGM_Assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nMGM Off 0 Default 0 Off\n\nOn 1 Default 0 Same as children\u2019s modes. Mode is\nkept as long as one MGM is healhty\nand in the correct mode\n\nNormal 2 Slow\nSampling\n\n0 Same as children\u2019s modes. Mode is\nkept as long as one MGM is healhty\nand in the correct mode\n\nMedium\nSampling\n\n1 Same as children\u2019s modes. Mode is\nkept as long as one MGM is healhty\nand in the correct mode\n\nFast\nSampling\n\n2 Same as children\u2019s modes. Mode is\nkept as long as one MGM is healhty\nand in the correct mode\n\n222 O. Zeile et al.\n\n\n\n7.11.3.4 GPS Assembly\n\nThe GPS_Assembly offers submodes which are not related to the GPS handlers\u2019\nsubmodes. The submode into which the handlers are commanded are stored in the\nassembly and can be configured through the memory service.\n\nThe submodes of the assembly are:\n\n\u2022 Single: Exactly one GPS is on.\n\u2022 Multiple: At least one GPS is on, if more are healthy, more are on.\n\u2022 GENIUS: All three GPS are on.\n\nIf the condition for the current submode is not met, the assembly falls back to\nOff.\n\nAdditionally to the GPS handlers, the GPS assembly also manages the\nGPS CDM Handler. The GPS CDM handler is commanded to internal clock in\nsingle and multiple submode and to common clock in GENIUS submode. The\nmodes of the GPS_Assembly are listed in Table 7.12:\n\n7.11.3.5 MGT Assembly\n\nLike the GPS_Assembly, the MGT_Assembly offers submodes unrelated to the\nsubmodes of the MGT handler, which offers only the default submode.\n\nThe submodes of the MGT_Assembly are listed in Table 7.13:\n\n\u2022 Single: One MGT handler is in Normal mode, the other on On, or Off if\nunhealthy\n\n\u2022 Multi: At least one MGT handler is in Normal mode, the second one is Normal\nif healthy, Off if unhealthy\n\n\u2022 Dual: Both MGT handlers are in Normal mode.\n\nTable 7.12 GPS_Assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nGPS Off 0 Default 0 Off\n\nOn 1 Single 0 Only one GPS on. GPS CDM Handler\nin internal submode\n\nMulti 1 At least one GPS on, the others are on\nwhen healthy and off when faulty.\nMode is kept as long as at least one\nGPS is healthy. GPS CDM Handler in\ninternal submode\n\nGENIUS 2 All three GPS are on, only possible if\nall three GPS are healthy. Mode is kept\nas long as all GPS are healthy.\nGPS CDM Handler in CDM Submode\n\n7 Attitude Control Subsystem 223\n\n\n\nIf the condition for the current submode is not met, the assembly falls back to\nOff.\n\n7.11.3.6 RW Assembly\n\nThe RW_Assembly operates in a 3-out-of-4 redundant configuration. That means as\nlong as at least three RW handler are in the currently active mode, it keeps its mode\nand falls back to Off otherwise. The RW_Assembly modes are listed in Table 7.14:\n\nTable 7.13 MGT_Assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nMGT Off 0 Default 0 Off\n\nOn 1 Default 0 Same as children\u2019s modes\n\nNormal 2 Single 0 MGT N Handler in Normal mode, MGT R in\nOn mode. If MGT N is unhealthy, MGT R in\nNormal mode. Mode is kept as long as at least\none coil in each direction is healhty\n\nMulti 1 Both Handlers in Normal Mode as long as all\ncoils and both handlers are healthy. If not all\ncoils healthy or not both handlers healthy\nsame as single mode\n\nDual 2 Both Handlers in Normal mode. Only\npossible if all coils and both handlers are\nhealthy\n\nTable 7.14 RW_Assembly modes\n\nAssembly Mode M# Submode SM# Description\n\nRW 0\u20133 Off 0 Default 0 Off\n\nOn 1 Default 0 Same as children\u2019s modes\n\nNormal 2 Idle 0 Same as children\u2019s modes. Mode is\nkept as long as three RW are healhty\nand in the correct mode\n\nTorque 1 Same as children\u2019s modes. Mode is\nkept as long as three RW are healhty\nand in the correct mode\n\nSpeed 2 Same as children\u2019s modes. Mode is\nkept as long as three RW are healhty\nand in the correct mode\n\nManual 3 Same as children\u2019s modes. Mode is\nkept as long as three RW are healhty\nand in the correct mode\n\nSpin\nDown\n\n4 Same as children\u2019s modes. Mode is\nkept as long as three RW are healhty\nand in the correct mode\n\n224 O. Zeile et al.\n\n\n\n7.11.4 ACS Controller\n\nThe ACS_Controller is divided into different modules (see Fig. 7.17), which are\nkept as separate as possible. The first modules are the sensor monitoring and the\nsensor redundancy management. The next module is the actual controller module\nwhich encapsulates the various algorithms. The last module is the actuator man-\nagement which manages the commanding of the actuators.\n\nThe failure case detection sketched out in the following subsections is closely\nrelated to the ACS FDIR in Sect. 10.6. The mechanisms for failure detection and\nrecovery are detailed there while in the following only a brief overview on the\nprinciple monitoring and control in the ACS_Controller shall be given.\n\nThe ACS control cycle rate is provided in Sect. 3.4.2.\n\n7.11.4.1 Sensor Monitoring\n\nThe sensor monitoring module tries to detect device failures by a two step\napproach. First, each sensor value is checked against physical limits. Then each\nsensor is checked against its redundant sensors. Except for the GPS, after one\ndevice fails, the relative checks can not be done any more as the redundancy is lost.\n\nFig. 7.17 ACS_Controller overview. \u00a9 IRS, University of Stuttgart\n\n7 Attitude Control Subsystem 225\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nFor the GPS this applies after the second failure. As all sensors have only one\nredundancy (except for the GPS), in most cases a failure can only be detected but\nnot located using the relative checks. This does not apply for the GPS, which has a\ntriplex monitoring before the first failure, and for the FOGs which allow the\nattribution of some failures. The sensor monitoring is described in detail in [136]\nand Failure Detection, Isolation and Recovery in Sect. 10.6.\n\nMGM\nThe physical limit for the MGMs is the maximum magnetic filed strength expected\nin the orbit of the satellite.\n\nThe relative check is performed by comparing the magnitude as well as the\ndirection reported by the two MGMs. As only two devices are compared, a failure\nattribution is not possible (see Sect. 10.6.1).\n\nGPS\nGPS measurements are checked against the orbit of the satellite as a physical limit.\nIf the radius or the absolute speed reported exceed the values of the orbit, a failure is\nreported.\n\nRelative checks are performed by comparing the distance between the positions\nreported by the individual receivers (see Sect. 10.6.2).\n\nSTR\nAs the STR output is a quaternion which describes a \u201cdirection of view\u201d relative to\nthe spacecraft reference coordinate system, no physical limit check can be per-\nformed as all rotations described by a rotation quaternion are valid.\n\nThe relative check is performed by comparing the rotation reported by the two\nCHUs. With only two devices and no physical checks possible, a failure can only\nbe detected, but not attributed (see Sect. 10.6.3).\n\nSUS\nThe physical limits for the individual SUS cells are zero ampere and the maximal\ncurrent that the cell can produce in direct sunlight.\n\nRelative checks are done between the two redundant cells of each SUS sensor\n(see Sect. 10.6.4). Again, this does not allow an attribution of a failure.\n\nFOG\nThe physical limit for the FOGs is their measurement range.\n\nThe relative checks are only done when all four FOGs are available. The relative\ncheck is performed by calculating a satellite rotation from three FOGs and com-\nparing the result to the fourth (see Sect. 10.6.5). By permutating the single FOG, a\nfaulty FOG can be detected in most cases. There are still cases in which a faulty\nFOG can not be detected by this method but will only show through a degraded\nperformance of the ACS_Controller.\n\n226 O. Zeile et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n7.11.4.2 Sensor Redundancy Management\n\nIn this Module, the individual sensor values of redundant sensors are combined.\nThe strategy depends on the individual sensor type. All have in common that no\noutput value is calculated, if not enough sensor values are available. In this case, the\ncorresponding datapool entry will be marked invalid.\n\nMGM\nIf both MGMs are available, the direction of the magnetic field is calculated by\ncombining both values using the pseudo inverse of the alignment matrix of both\nMGMs.\n\nIf only one MGM is available, the direction of the magnetic field is calculated by\ntransforming the measurement into body coordinates.\n\nGPS\nGPS measurements are not combined, the first valid GPS information is used as an\noutput.\n\nSTR\nWhen both CHU are operated together, the orientation of the satellite is calculated\nby combining the two measurements, respecting the different accuracy in different\naxes.\n\nIf only one CHU is operated, the orientation is calculated by transforming the\nmeasured quaternion into the body coordinate system.\n\nSUS\nDepending on the deployment state of the solar panels, the correct set of SUS has to\nbe selected. This selection is already done in the monitoring module.\n\nBefore further operations, the SUS values are filtered individually through a low\npass filter.\n\nThe sun vector is then calculated by transforming the filtered SUS values using\ntheir alignment matrix.\n\nOptionally an albedo reduction is performed, configurable through a memory\nload TC. The albedo reduction identifies sensors that would be in the shadow with\nthe current sun vector and recalculates a new sun vector without these sensors.\n\nFOG\nIf all four FOG units are available, the rotation of the satellite is calculated by\ncombining the individual measurements using the pseudo inverse of the alignment\nmatrix.\n\nIf only three FOG units are available, the rotation of the satellite is calculated\nusing the inverse of the alignment matrix of the available FOG units.\n\nSTR and FOG combination\nAs the frequency of the STR updates is slower than the frequency of the control\nalgorithm execution, the STR attitude measurements are interpolated using the FOG\nmeasurements.\n\n7 Attitude Control Subsystem 227\n\n\n\nAs the STR and FOG measurements are related, one being the integral of the\nother, this function can also compensate a short outage of one of the two sensors,\nusing only the other.\n\n7.11.4.3 Control Logic\n\nWithin the controller module, there are individual submodules for the different\ncontrol modes.\n\nSafe Mode\nThe Safe Mode submodule implements the Detumble Mode as well as the Safe Mode\nalgorithm. The transition between the two strategies is performed autonomously.\n\nThe Detumble Mode algorithm is a classical B-dot law by which the change of\nthe magnetic field is measured and the MGTs are commanded to reduce this\nrotation. This is a very robust approach but does not lead to the satellite\u2019s inertial\nrotation completely being damped away but rather stabilizes the satellite with\nrespect to the magnetic field.\n\nThe Safe Mode algorithm has a two phase approach. First, the satellite\u2019s solar\npanels are oriented towards the Sun, then, the satellite is spun up around the Sun\nvector to enter a spin stabilized state. This algorithm uses the SUS in addition to the\nMGMs and MGTs. As the algorithm depends on the Sun vector being available, it\nis passive during eclipse phase.\n\nTo use the additional information of the SUS to determine a more reliable\nestimation of the inertial rotation, the switching from Detumble to Safe Mode\nstrategy and back is only performed during the daylight phase. The inertial rotation\nis estimated by combining the absolute value of the temporal derivative of the Sun\nvector (which is the absolute value of the rotation perpendicular to the Sun vector)\nand absolute value of the rotation around the Sun vector with respect to the mag-\nnetic field.\n\nFor the switching to the detumble mode, the two values are checked individu-\nally. The rotation around the Sun vector must not divert from the nominal rotation\nof +2\u00b0/s by more than 3\u00b0/s, while absolute value of the rotation perpendicular to the\nSun vector must not exceed 3\u00b0/s (see also Fig. 2.3).\n\nCoarse Nadir-Pointing Mode\nThe Coarse-Nadir-Pointing mode is used during the Commissioning Phase when\nthe RWs are not yet available. It is able to keep the z-axis of the satellite\napproximately Earth pointing, using only the MGTs. It uses all ACS sensors to gain\npositional and rotational knowledge. To minimize blinding, the remaining degree of\nfreedom is used to rotate the STR away from the Sun.\n\nThe much weaker actuators lead to a decreased pointing accuracy in contrast to\nthe RW-based pointing submodule. But still the mode significantly increases the\nground station visibility time compared to the Safe Mode with the rotating satellite\nand cyclical temporary mispointing of the S-band TTC antennas.\n\n228 O. Zeile et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nIdle Mode\nThe Idle Mode is similar to the Safe Mode in that it keeps the solar panels oriented\nto the Sun. However, it does this not using spin stabilization, but 3-axis stabilized,\nusing all ACS sensors and actuators except for the GPS.\n\nAs pointing to the Sun offers one degree of freedom, namely the rotation around\nthe Sun vector, the x-axis of the satellite is held parallel to the ecliptic normal\nvector. This also minimizes blinding of the STR (see also Fig. 2.4).\n\nAs long as a certain attitude information is not available, either due to eclipse or\nblinding of the STR, the motion in the corresponding direction is damped to keep\nthe orientation of the satellite as constant as possible.\n\nPointing Mode\nThe pointing mode algorithm is designed to put into and keep the attitude of the\nsatellite in a reference attitude. This algorithm is the most complex of the attitude\ncontrol algorithms, employing variable gains and a slew rate constrains.\n\nIt can be used with a static and a variable attitude reference. With a static\nreference vector, this algorithm implements the inertial-pointing mode. For other\npointing modes, a variable reference attitude as calculated by the navigation sub-\nmodule is used.\n\nNavigation\nThe navigation submodule is used to calculate a reference attitude which is then\nused by the pointing submodule to rotate the satellite.\n\nThe navigation submodule is supplied with a target point in the earth reference\nframe, usually a point on the surface or the center of the earth, forming the target\nand the nadir pointing mode. It calculates the attitude needed so that the instruments\nare pointing to the target point and solves the remaining degree of freedom such that\nthe STR blinding is minimized.\n\nTo be able to calculate the relative direction to the target point, the navigation\nsubmodule employs the position as reported by the GPS.\n\n7.11.4.4 Actuator Management\n\nThe actuator management calculates the individual actuator commands from the\ntorque commands returned by the control algorithms. The torque commands are in\nthe body coordinate system and do not consider actuator redundancies.\n\nThe MGT Add submodule (see Fig. 7.17), adds the torque commanded by the\ncontrol algorithm to the torque commanded by the RW Desaturation submodule\n(see further below).\n\nAs the torque of the MGT depends on the external magnetic field, the com-\nmanded torque of the MGT Add submodule is combined with the measured\nmagnetic field to get the power command for the individual coils. The power\ncommand is transformed into a pulse width modulated signal as the coils can only\nbe commanded on or off. There is a dual coil flag by witch the control algorithm can\nsignal to the actuator management that it should use both MGTs if available.\n\n7 Attitude Control Subsystem 229\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nOne MGM/MGT cycle is 5 s. Of this timeslot the MGM performs measurements\nfor 0.5 s. Hence, the MGT can be activated for max. 4.5 s in every cycle, depending\non the request from ACS control. The MGT electronics unit detects and provides\ninformation to the OBC/OBSW at 2 Hz about each coil\u2019s status and whether the\ncoils are supplied with electric current (1 = current in positive direction, 0 = no\ncurrent, ?1 negative direction).\n\nThe RW management consists of three elements. The commanding submodule\ncalculates the torque command for the individual wheels from the overall requested\ntorque. The nullspace submodule is only active when all four RWs are available. It\ncontrolls the nullspace which is the degree of freedom which exists when four RWs\nare used to control the rotation around three axes. The aim of the nullspace module\nis to avoid unnecessary high speeds of a single RW. The desaturation submodule\nreduces the inertia stored in the RW assembly to reduce the speed of all RWs.\nThe RW Add submodule sums up the commands from the commanding and the\nnullspace submodule.\n\n7.11.4.5 ACS Controller Modes\n\nThe controller uses the general system-wide mode concept (i.e. it can be com-\nmanded with default mode commands). For its modes see also Table 7.15.\n\nTable 7.15 ACS_Controller mode table\n\nObject-ID Mode M# Submode SM# Description\n\n0x43410000 Off 0 Default 0 The controller is turned off entirely,\noutput is set to invalid\n\nOn 1 Default 0 The controller performs all\nmonitoring activities\n\nNormal 2 Safe 2 The controller performs detumble\nand safe mode algorithms\n\nCoarse Nadir 3 The controller performs coarse nadir\npointing algorithm\n\nIdle 4 The controller performs idle mode\nalgorithms\n\nNadir-Pointing 5 The controller performs nadir\npointing algorithm\n\nTarget-Pointing 6 The controller performs target\npointing algorithm\n\nInertial-Pointing 7 The controller performs inertial\npointing algorithm\n\n230 O. Zeile et al.\n\n\n\nIn Off mode, no activity is performed by the controller. In ON mode, the con-\ntroller executes the sensor management modules but does not execute the controller\nmodule and the actuator management module and keeps the MGT and RW com-\nmand output values invalid.\n\nIn Normal mode, the controller executes the sensor management modules, the\ncontroller module and the actuator management module. Which submodules are\nactive is commanded by the submode:\n\nIn Safe submode, the Safe submodule of the controller module and the MGT\nrelated submodules of the actuator management are executed.\n\nIn the Idle submode, the Idle submodule of the controller module and the\ncomplete actuator management module is executed.\n\nIn Coarse-Nadir-Pointing submode, the Coarse Nadir submodule of the con-\ntroller module and the MGT related submodules of the actuator management are\nexecuted.\n\nIn the Nadir- and Target-Pointing submode, the navigation and pointing sub-\nmodules of the controller module and the complete actuator management module\nare executed.\n\nIn the Inertial-Pointing submode, the pointing submodule of the controller\nmodule and the complete actuator management module are executed.\n\nTable 7.15 lists all available modes. When not in Off mode, the sensor moni-\ntoring and redundancy management are performed independently of the current\nsubmode, i.e. controller mode, as long as the input values are available. Yet, that\nadditional information is not used by the control algorithms. If for example the FOG\nassembly is commanded to Normal mode during Safe mode, the rotation infor-\nmation about the satellite deduced by the FOGs is calculated and is available\nthrough the datapool, but the rotation is not used by the Safe submode algorithm.\n\n7.11.5 ACS Subsystem Mode Transitions and Telemetry\n\nThe ACS subsystem mode commanding\u2014according to the ACS_Controller modes\ndefined in Table 7.15\u2014is performed via PUS service 200 and the following\nsequences\u2014see Table 7.16:\n\nThe ACS subsystem relevant TC packet definitions are included in the spacecraft\nTC table in annex Sect. 17.3.1.\n\nThe ACS subsystem relevant TM packet definitions are included in the space-\ncraft TM table in annex Sect. 17.3.2.\n\nThe ACS subsystem relevant Event TM packets are included in the spacecraft\nEvent TM table in annex Sect. 17.3.3.\n\nDetails on the TM parameter positions in the diverse packets have to be taken\nfrom the MIB.\n\n7 Attitude Control Subsystem 231\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nT\nab\n\nle\n7.\n16\n\nA\nC\nS\nsu\nbs\nys\nte\nm\n\nm\nod\n\nes\nan\nd\ntr\nan\nsi\ntio\n\nn\nse\nqu\n\nen\nce\ns\n\n#\nA\nC\nS\nM\nod\n\nes\n0x\n01\n00\n02\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nO\nff\nM\nod\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\nq\nID\n\nH\nar\ndC\n\nod\ned\n?\n\nF\nal\nlb\nac\nk\n\nO\nff\n\n0x\n19\n00\n00\n00\n\n1\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nO\nff\n_T\n\nar\nge\nt\n\n0x\n19\n00\n00\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\n# A\nch\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nO\nff\n_T\n\nra\nns\n\n0x\n19\n00\n01\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nO\nff\n\n0\nO\nff\n\n0\n(c\non\ntin\n\nue\nd)\n\n232 O. Zeile et al.\n\n\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nD\net\num\n\nbl\ne\nM\nod\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\nq\nID\n\nH\nar\ndC\n\nod\ned\n?\n\nF\nal\nlb\nac\nk\n\nD\net\num\n\nbl\ne\n\n0x\n19\n01\n00\n00\n\n1\n0x\n19\n00\n00\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nD\net\num\n\nbl\ne_\nT\nar\nge\nt\n\n0x\n19\n01\n00\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nD\net\num\n\nbl\ne\n\n1\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nD\nua\nl\n\n1\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\n# A\nch\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nD\net\num\n\nbl\ne_\nT\nra\nns\n_1\n\n0x\n19\n01\n01\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nD\nua\nl\n\n1\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nO\nff\n\n0\nO\nff\n\n0\n(c\non\ntin\n\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n7 Attitude Control Subsystem 233\n\n\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nO\nff\n\n0\nO\nff\n\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nD\net\num\n\nbl\ne_\nT\nra\nns\n_2\n\n0x\n19\n01\n02\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nD\net\num\n\nbl\ne\n\n1\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nSa\nfe\n\nM\nod\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\nq\nID\n\nH\nar\ndC\n\nod\ned\n?\n\nF\nal\nlb\nac\nk\n\nSa\nfe\n\n0x\n19\n02\n00\n00\n\n1\n0x\n19\n00\n00\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nSa\nfe\n_T\n\nar\nge\nt\n\n0x\n19\n02\n00\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nSa\nfe\n\n2\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nSi\nng\nle\n\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\n(c\non\ntin\n\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n234 O. Zeile et al.\n\n\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nSa\nfe\n_T\n\nra\nns\n_1\n\n0x\n19\n\n02\n01\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\nor\nm\nal\n\n2\nSi\nng\n\nle\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\nor\nm\nal\n\n2\nFa\n\nst\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nSa\nfe\n_T\n\nra\nns\n_2\n\n0x\n19\n\n02\n02\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\nN\nor\nm\nal\n\n2\nSa\n\nfe\n2\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\n(c\non\n\ntin\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n7 Attitude Control Subsystem 235\n\n\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nC\noa\nrs\neN\n\nad\nir\nM\nod\n\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nC\noa\nrs\neN\n\nad\nir\n\n0x\n19\n\n03\n00\n\n00\n1\n\n0x\n19\n\n02\n00\n\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\noa\nrs\neN\n\nad\nir\n_T\n\nar\nge\nt\n\n0x\n19\n\n03\n00\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\nN\nor\nm\nal\n\n2\nC\noa\nrs\neN\n\nad\nir\n\n3\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\nor\nm\nal\n\n2\nSi\nng\n\nle\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\nor\nm\nal\n\n2\nFa\n\nst\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\nn\n\n1\nSi\nng\n\nle\n0\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\noa\nrs\neN\n\nad\nir\n_T\n\nra\nns\n_1\n\n0x\n19\n\n03\n01\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\nor\nm\nal\n\n2\nSi\nng\n\nle\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\nor\nm\nal\n\n2\nFa\n\nst\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\nO\nff\n\n0\nO\nff\n\n0\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\nO\nff\n\n0\nO\nff\n\n0\n(c\non\n\ntin\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n236 O. Zeile et al.\n\n\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\nn\n\n1\nSi\nng\n\nle\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nC\noa\nrs\neN\n\nad\nir\n_T\n\nra\nns\n_2\n\n0x\n19\n\n03\n02\n\n00\n0\n\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\nN\nor\nm\nal\n\n2\nC\noa\nrs\neN\n\nad\nir\n\n3\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nId\nle\n\nM\nod\n\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\n\nq\nID\n\nH\nar\ndC\n\nod\ned\n\n?\nF\nal\nlb\nac\nk\n\nId\nle\n\n0x\n19\n\n04\n00\n\n00\n1\n\n0x\n19\n\n02\n00\n\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nId\nle\n_T\n\nar\nge\nt\n\n0x\n19\n\n04\n00\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\nN\nor\nm\nal\n\n2\nId\nle\n\n4\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\nor\nm\nal\n\n2\nSi\nng\n\nle\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\nor\nm\nal\n\n2\nFa\n\nst\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\nN\nor\nm\nal\n\n2\nT\nor\nqu\n\ne\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\nn\n\n1\nSi\nng\n\nle\n0\n\n(c\non\n\ntin\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n7 Attitude Control Subsystem 237\n\n\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\nck\n?\n\nId\nle\n_T\n\nra\nns\n_1\n\n0x\n19\n04\n01\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nSi\nng\nle\n\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nN\nor\nm\nal\n\n2\nT\nor\nqu\ne\n\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nO\nn\n\n1\nSi\nng\nle\n\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\nck\n?\n\nId\nle\n_T\n\nra\nns\n_2\n\n0x\n19\n04\n02\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nId\nle\n\n4\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nN\nad\nir\nPt\n\nM\nod\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\nq\nID\n\nH\nar\ndC\n\nod\ned\n?\n\nF\nal\nlb\nac\nk\n\nN\nad\nir\nPt\n\n0x\n19\n05\n00\n00\n\n1\n0x\n19\n04\n00\n00\n\n(c\non\ntin\n\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n238 O. Zeile et al.\n\n\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nN\nad\nir\nPt\n_T\n\nar\nge\nt\n\n0x\n19\n\n05\n00\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\nN\nor\nm\nal\n\n2\nN\nad\nir\nPt\n\n5\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\nor\nm\nal\n\n2\nSi\nng\n\nle\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\nor\nm\nal\n\n2\nFa\n\nst\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\nN\nor\nm\nal\n\n2\nT\nor\nqu\n\ne\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\nn\n\n1\nSi\nng\n\nle\n0\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nN\nad\nir\nPt\n_T\n\nra\nns\n_1\n\n0x\n19\n\n05\n01\n\n00\n0\n\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n\n41\n00\n\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n\n00\n03\n\n00\nN\nor\nm\nal\n\n2\nSi\nng\n\nle\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n\n00\n02\n\n00\nN\nor\nm\nal\n\n2\nFa\n\nst\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n\n00\n01\n\n00\nN\nor\nm\nal\n\n2\nT\nor\nqu\n\ne\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n\n00\n08\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n\n00\n04\n\n00\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n\n00\n05\n\n00\nO\nn\n\n1\nSi\nng\n\nle\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\n\nck\n?\n\nN\nad\nir\nPt\n_T\n\nra\nns\n_2\n\n0x\n19\n\n05\n02\n\n00\n0\n\n0\n(c\non\n\ntin\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n7 Attitude Control Subsystem 239\n\n\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nN\nad\nir\nPt\n\n5\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nT\nar\nge\ntP\nt\nM\nod\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\nq\nID\n\nH\nar\ndC\n\nod\ned\n?\n\nF\nal\nlb\nac\nk\n\nT\nar\nge\ntP\nt\n\n0x\n19\n\n06\n00\n\n00\n1\n\n0x\n19\n\n04\n00\n\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\nck\n?\n\nT\nar\nge\ntP\nt_\nT\nar\nge\nt\n\n0x\n19\n06\n00\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nT\nar\nge\ntP\nt\n\n6\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nSi\nng\n\nle\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nN\nor\nm\nal\n\n2\nT\nor\nqu\n\ne\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nO\nn\n\n1\nSi\nng\nle\n\n0\n\n# A\nch\n\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\n\nim\ne\n\nC\nhe\nck\n?\n\nT\nar\nge\ntP\nt_\nT\nra\nns\n_1\n\n0x\n19\n06\n01\n00\n\n0\n1\n\n(c\non\ntin\n\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n240 O. Zeile et al.\n\n\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nSi\nng\nle\n\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nN\nor\nm\nal\n\n2\nT\nor\nqu\ne\n\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nO\nn\n\n1\nSi\nng\nle\n\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nT\nar\nge\ntP\nt_\nT\nra\nns\n_2\n\n0x\n19\n06\n02\n00\n\n0\n0\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nT\nar\nge\ntP\nt\n\n6\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nC\nom\n\nm\nan\ndi\nng\n\nto\nIn\ner\ntia\nlP\nt\nM\nod\ne\n\nSe\nqu\n\nen\nce\n\nN\nam\n\ne\nSe\nq\nID\n\nH\nar\ndC\n\nod\ned\n?\n\nF\nal\nlb\nac\nk\n\nIn\ner\ntia\nlP\nt\n\n0x\n19\n07\n00\n00\n\n1\n0x\n19\n04\n00\n00\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nIn\ner\ntia\nlP\nt_\nT\nar\nge\nt\n\n0x\n19\n07\n00\n00\n\n0\n1\n\n(c\non\ntin\n\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n7 Attitude Control Subsystem 241\n\n\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nIn\ner\ntia\nlP\nt\n\n7\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nSi\nng\nle\n\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nN\nor\nm\nal\n\n2\nT\nor\nqu\ne\n\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nO\nn\n\n1\nSi\nng\nle\n\n0\n\n# A\nch\nie\nve\nd\nby\n\ntr\nan\n\nsi\nti\non\n\ns\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nIn\ner\ntia\nlP\nt_\nT\nra\nns\n_1\n\n0x\n19\n07\n01\n00\n\n0\n1\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nN\nor\nm\nal\n\n2\nSi\nng\nle\n\n0\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nN\nor\nm\nal\n\n2\nFa\nst\n\n2\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nN\nor\nm\nal\n\n2\nT\nor\nqu\ne\n\n1\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n7\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nN\nor\nm\nal\n\n2\nD\nef\nau\nlt\n\n0\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nO\nn\n\n1\nSi\nng\nle\n\n0\n\nN\nam\n\ne\nT\nab\n\nle\nID\n\nW\nai\ntT\nim\n\ne\nC\nhe\nck\n?\n\nIn\ner\ntia\nlP\nt_\nT\nra\nns\n_2\n\n0x\n19\n07\n02\n00\n\n0\n0\n\n(c\non\ntin\n\nue\nd)\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n242 O. Zeile et al.\n\n\n\nSy\nst\nem\n\nO\nbj\n\nID\nM\nod\n\ne\nM\nod\n\ne\nID\n\nSu\nbm\n\nod\ne\n\nSu\nbm\n\nod\ne\nID\n\nA\nC\nS\nC\non\n\ntr\nol\nle\nr\n\n0x\n43\n41\n00\n00\n\nN\nor\nm\nal\n\n2\nIn\ner\ntia\nlP\nt\n\n7\n\nM\nG\nT\n\nA\nss\n.\n\n0x\n41\n00\n03\n00\n\nM\nG\nM\n\nA\nss\n.\n\n0x\n41\n00\n02\n00\n\nR\nW\n\nA\nss\n.\n\n0x\n41\n00\n01\n00\n\nST\nR\n\nA\nss\n.\n\n0x\n41\n00\n08\n00\n\nF\nO\nG\n\nA\nss\n.\n\n0x\n41\n00\n04\n00\n\nG\nP\nS\nA\nss\n.\n\n0x\n41\n00\n05\n00\n\nT\nab\n\nle\n7.\n16\n\n(c\non\n\ntin\nue\nd)\n\n7 Attitude Control Subsystem 243\n\n\n\nChapter 8\nThermal Control Subsystem\n\nFabian Steinmetz and Sebastian Keil\n\nAbstract The chapter provides an overview on the platform thermal control sub-\nsystem. It explains the placement of thermal equipment over the diverse satellite\ncompartments at hand of an example FLP-based spacecraft. It explains the logic of\ncomponent operational and non operational limits, the allocated sensors, sensor\nredundancies, allocated compartment heaters and heater redundancies. The last part\ncomprises the onboard software elements and functions for control of the thermal\nsubsystem.\n\nKeywords Thermal subsystem overview ? Satellite compartments (Modules) and\ntemperature control ? Sensors ? Heaters and redundancies ? Thermal subsystem\ncontrol\n\nF. Steinmetz (&) ? S. Keil\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: steinmetz@irs.uni-stuttgart.de\n\nS. Keil\ne-mail: keil@irs.uni-stuttgart.de\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_8\n\n245\n\n\n\n8.1 Thermal Subsystem Overview\n\nThe thermal control subsystem (TCS) has to control the thermal balance in order to\nkeep all components of the satellite within the permissible temperature limits. The\nthermal balance is analyzed in all operating modes and in all of the thermal envi-\nronments it may be exposed to.\n\nThe overall thermal control of a spacecraft in orbit is usually achieved by bal-\nancing the heat emitted by the spacecraft as IR radiation with radiators, against the\nheat dissipated by its internal components plus the heat absorbed from the envi-\nronment, such as direct sunlight, reflected sunlight from Earth (albedo) and Earth\ninfrared. The thermal balance of a satellite is illustrated in Fig. 8.1.\n\nThermal control techniques can be divided into two main categories. Passive\nthermal control which uses materials, coatings (black paint for internal heat\nexchange of the components), insulation or surface finishes (such as blankets or\nsecond surface mirrors) to maintain temperature limits. Active thermal control\u2014\nwhich is generally more complex and expensive\u2014maintains the temperature by\nactive means, such as heaters or thermo-electric coolers. This requires extra elec-\ntrical power. In addition, a control algorithm is necessary to control the heater\nand/or the coolers. In both categories an iterative design process has to be per-\nformed, where all environmental effects, requirements of the components, the\nmission and cost is considered [141].\n\nIn general, thermal control subsystems (TCS) are designed to keep the spacecraft\nat the cool end of permissible temperature ranges. Cooler components generally\nhave a longer lifetime\u2014especially for electronic equipment and batteries\u2014and can\nheat up during operation without the need for active cooling. Furthermore, the\ndissipated heat can be used to heat other components, which saves heating power\nand energy [141]. To prevent components from dropping below the permissible\ntemperature limits in non-operational modes, the satellite can be equipped with\nelectric heaters [142].\n\nFor thermal control there are usually two temperature limits defined for each\ncomponent:\n\nFig. 8.1 Thermal balance of a satellite\u2014sunlight (1), albedo (2), Earth infrared (3)\n\n246 F. Steinmetz and S. Keil\n\n\n\n\u2022 Operational limits These are the boundaries within which the component must\nremain while being in operation. The component will switch off, in case the\ntemperature exceeds the permissible operational limits.\n\n\u2022 Non-operational limits These are the boundaries within which the component\nmust remain permanently, even when not being powered/operated.\n\nExceeding the permissible temperature limits can result in permanent equipment\ndamage. Every component is qualified for those two limits. When a component\noperates close or exactly at a temperature limit, operation is not yet affected.\n\nThermal control is also used to ensure that temperature gradient requirements are\nwithin range. An example of a gradient requirement is to ensure that one side of a\nstructure does not get warmer or colder than the opposite side by more than 30 \u00b0C.\nA larger gradient could cause structural deformation such that pointing is adversely\nimpacted, possibly permanently [141].\n\nThe thermal control subsystem is defined as generic term and includes all\nhardware and software components as well as techniques of a satellite to maintain a\ncertain temperature range. The TCS_Controller is part of the Onboard Software\n(OBSW) running on the Onboard Computer (OBC) and provides the interfaces for\nthe TCS algorithm to receive the hardware and software data, such as heater status\nand temperature sensor values.\n\nFig. 8.2 Placement of thermally active equipment\u2014first FLP-based satellite \u201cFlying Laptop\u201d. \u00a9\nIRS, University of Stuttgart. 1 Solar panel, 2 Deployment mechanism of solar panels, 3 Payload 2\n(MICS Camera), 4 Sun sensor, 5 Star tracker, 6 Payload 4 (OSIRIS Laser Terminal), 7 Payload 1\n(PAMCAM Camera), 8 Antenna of the data downlink system, 9 Reaction wheels, 10\nCommunication system, 11 On-board computer, 12 Payload computer PLOC, 13 Payload 3\n(AIS Receiver), 14 Battery, 15 Antenna of communication system, 16 Magnetotorquer\n\n8 Thermal Control Subsystem 247\n\n\n\nThe TCS algorithm monitors the temperature and the thermal status of the\nindividual satellite components, generates the heater commands to achieve the\npermissible temperature limits and returns fault signals, if sensors are invalid or\nrequired values do not match or cannot be achieved. Figure 8.2 depicts thermally\nrelevant elements of the satellite system\u2014here with the example payloads of the\nfirst FLP mission \u201cFlying Laptop\u201d.\n\nSome components are thermally decoupled from the rest of the satellite platform,\nsuch as the battery to obtain a certain temperature level or the star tracker in order to\nprotect them from the heat dissipated by the surrounding components. In addition,\nvital components as the battery, OBC, PCDU and TT&C are equipped with ther-\nmostats. These thermostats switch on additional heaters, in case of a system failure\nand a temperature drops below the allowed non-operational limit. These internal\nunit heaters are not controlled by the TCS algorithm.\n\nAll data used by the TCS algorithm is provided through the TCS_Controller\nfrom the OBSW datapool. The thermal equipment detected to be defective by the\nTCS_Controller has to be marked in separate arrays at the datapool and will be\nhandled by the Failure Detection, Isolation and Recovery (FDIR). The TCS algo-\nrithm only identifies failures. It will not perform any isolation nor recovery actions.\nFor details on thermal FDIR please refer to Chap. 10.\n\nThe generated heater commands from the TCS algorithm are stored in the\nOBSW datapool as on/off statuses and are handled by the OBSW through the\ncorresponding device handler. This architecture allows to develop the control\nalgorithm without caring about the source of the data and the target of the result\ndata. The entire requirements for the TCS algorithm are described in Sect. 8.2 and\nhave been implemented within the spacecraft OBSW.\n\nFigure 8.3 depicts the thermal overview of the satellite platform\u2014here detailed\nusing the example of the FLP Generation 1 spacecraft \u201cFlying Laptop\u201d with its 4\npayloads. Thermally there exist elements which are fully exposed to space and not\nincluded into the \u201cbox\u201d of the satellite. The overview comprises the following\nmodules:\n\n\u2022 The first module is called \u201cSolar Array\u201d, as it contains the solar panels as well as\nseveral other equipments that are exposed to the space environment.\n\n\u2022 The next Module is the \u201cPayload Module\u201d which contains the payloads and\nsome avionics units like magnetometers.\n\n\u2022 Then follows the \u201cAvionics Module\u201d\u2014also referred to as \u201cCore Module\u201d\u2014\nwhich contains most of the ACS sensors and actuators.\n\n\u2022 And on the bottom coupled to the S/C radiator is the \u201cService Module\u201d with\nOBC, PCDU, Battery and S-band transceiver.\n\nFor temperature measurements Pt-1000 thermistors and equipment internal\nsensors of the different components are used by the TCS. The thermistors are placed\nnear those S/C components which are not equipped with internal electronic\n\n248 F. Steinmetz and S. Keil\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nF\nig\n.8\n\n.3\nT\nhe\nrm\n\nal\nsu\nbs\nys\nte\nm\n\nov\ner\nvi\new\n\n\u2014\n4\npa\nyl\noa\nds\n.\n\u00a9\n\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt\n\n8 Thermal Control Subsystem 249\n\n\n\nT\nab\n\nle\n8.\n1\n\nC\nom\n\npo\nne\n\nnt\nte\n\nm\npe\n\nra\ntu\n\nre\ns,\n\nlim\nits\n\nan\nd\n\nse\nns\n\nor\ns.\n\n \u00a9\n I\n\nR\nS,\n\n U\nni\n\nve\nrs\n\nity\n o\n\nf \nSt\n\nut\ntg\n\nar\nt\n\nC\nom\n\npo\nne\n\nnt\nC\nom\n\npo\nne\n\nnt\n\nT\nem\n\npe\nra\ntu\nre\n\nP\nar\nam\n\net\ner\n\nN\nam\n\ne\n\nC\nom\n\npo\nne\n\nnt\n\nT\nem\n\npe\nra\ntu\nre\n\nP\nar\nam\n\net\ner\n\nU\nni\nt\n\nC\nom\n\npo\nne\n\nnt\n\nT\nem\n\npe\nra\ntu\nre\n\nP\nar\nam\n\net\ner\n\nID\n\n[h\nex\n]\n\nN\nO\nP\n-l\now\n\ner\nO\nP\n-l\now\n\ner\nO\nP\n-u\npp\n\ner\n\n1s\nt\nSe\n\nns\nor\n\nO\nP\n-u\npp\n\ner\n\n2n\nd\nSe\n\nns\nor\n\nO\nP\n-u\npp\n\ner\n\nF\nal\nlb\nac\nk\n\nN\nO\nP\n-u\npp\n\ner\n1s\nt\nSe\n\nns\nor\n\n2n\nd\n\nSe\nns\nor\n\n3r\nd\n\nSe\nns\nor\n\n4t\nh\n\nSe\nns\nor\n\n5t\nh\n\nSe\nns\nor\n\nM\nod\n\nul\ne\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\n0\nT\n\nY\nT\n\nC\nT\n\nP0\n0\n\n\u00b0\n0S\n\np o\nT\n\n0S\n04\n\n0 4\n0\n\n0\n0000 008 5\n\nC\n\nB\not\n\nto\nm\n\nB\nat\n\nte\nry\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\n1\nT\n\nY\nT\n\nC\nT\n\nP0\n1\n\n\u00b0\n1S\n\npo\nT\n\n1S\n04\n\n0 4\n0\n\n0\n00 10 008 5\n\nC\n\nB\not\n\nto\nm\n\nB\nat\n\nte\nry\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\n2\nT\n\nY\nT\n\nC\nT\n\nP0\n2\n\n\u00b0\n2S\n\npo\nT\n\n2S\n04\n\n04\n0\n\n0\n0020 008 5\n\nC\n\nB\not\n\nto\nm\n\nB\nat\n\nte\nry\n\nD\nD\n\nS_\nT\n\nR\nA\n\nN\nSM\n\nIT\nT\n\nE\nR\n\n_N\nT\n\nY\nT\n\nC\nT\n\nP0\n3\n\n\u00b0C\n58\n\n00\n04\n\n00\n?\n\nX\nT\n\nS\nD\n\nD\n07\n\n04\n0\n\n02\n\nN\n\nD\nD\n\nS\nT\n\nX\n\nR\n\nC\nor\n\ne\n\nD\nD\n\nS_\nT\n\nR\nA\n\nN\nSM\n\nIT\nT\n\nE\nR\n\n_R\nT\n\nY\nT\n\nC\nT\n\nP0\n4\n\n\u00b0 C\n58\n\n00\n05\n\n00\n?\n\nX\nT\n\nS\nD\n\nD\n07\n\n0 4\n0\n\n02\n\nR\n\nD\nD\n\nS\nT\n\nX\n\nN\n\nC\nor\n\ne\n\n50P\nT\n\nC\nT\n\nY\nT\n\nG\nO F\n\n\u00b0C\n58\n\n00\n06\n\n00\n?\n\n54\n?\n\nero\nC\n\n1\nG\n\nOF\n0\n\nG\nOF\n\n58\n77\n\n04\n\nG\nPS\n\n_0\nT\n\nY\nT\n\nC\nT\n\nP0\n6\n\n\u00b0C\n58\n\n00\n07\n\n00\n?\n\n50\n?\n\nT\nG\n\nM\nSP\n\nG\n08\n\n0 7\n02\n\nE\nle\n\nct\nro\n\nni\nc\n\nC\nor\n\ne\n\nG\nPS\n\n_1\nT\n\nY\nT\n\nC\nT\n\nP0\n7\n\n\u00b0C\n58\n\n00\n08\n\n00\n?\n\n50\n?\n\nT\nG\n\nM\nS P\n\nG\n08\n\n0 7\n02\n\nE\nle\n\nct\nro\n\nni\nc\n\nC\nor\n\ne\n\nG\nPS\n\n_2\nT\n\nY\nT\n\nC\nT\n\nP0\n8\n\n\u00b0C\n58\n\n00\n09\n\n00\n?\n\n50\n?\n\nT\nG\n\nM\nS P\n\nG\n08\n\n0 7\n02\n\nE\nle\n\nct\nro\n\nni\nc\n\nC\nor\n\ne\n\nM\nA\n\nG\nN\n\nE\nT\n\nO\nM\n\nE\nT\n\nE\nR\n\n_0\nT\n\nY\nT\n\nC\nT\n\nP0\n9\n\n\u00b0C\n58\n\n00\n0A\n\n00\n?\n\n40\n?\n\ndaolyaP\n0\n\nM\nG\n\nM\n001\n\n58\n03\n\nM\nA\n\nG\nN\n\nE\nT\n\nO\nM\n\nE\nT\n\nE\nR\n\n_1\nT\n\nY\nT\n\nC\nT\n\nP1\n0\n\n\u00b0C\n58\n\n00\n0B\n\n00\n?\n\n40\n?\n\nda olyaP\n1\n\nM\nG\n\nM\n001\n\n5 8\n03\n\nM\nG\n\nT\n_N\n\nT\nY\n\nT\nC\n\nT\nP1\n\n1\n\u00b0C\n\n58\n00\n\n0C\n00\n\n?\n40\n\n?\nT\n\nG\nM\n\n501\n5 8\n\n03\n\nE\nle\n\nct\nro\n\nni\nc\n\nG\nPS\n\nC\nor\n\ne\n\nM\nG\n\nT\n_R\n\nT\nY\n\nT\nC\n\nT\nP1\n\n2\n\u00b0C\n\n58\n00\n\n0D\n00\n\n?\n40\n\n?\n30\n\n85\n10\n\n5\nM\n\nG\nT\n\nE\nle\n\nct\nro\n\nni\nc\n\nG\nPS\n\nC\nor\n\ne\n\nPL\n2(\n\nM\nIC\n\nS)\nT\n\nY\nT\n\nC\nT\n\nP1\n3\n\n\u00b0C\n58\n\n00\n0E\n\n00\n?\n\n10\n0\n\n40\n50\n\nPL\n2\n\nM\nIC\n\nSG\n\nC\nC\n\nD\n\nPL\n2\n\nM\nIC\n\nSR\n\nC\nC\n\nD\n\nPL\n2\n\nM\nIC\n\nSN\n\nC\nC\n\nD\n\nPa\nyl\n\noa\nd\n\nO\nB\n\nC\n_0\n\nT\nY\n\nT\nC\n\nT\nP1\n\n4\n\u00b0C\n\n58\n00\n\n0F\n00\n\n?\n50\n\n?\n40\n\n80\n12\n\n5\nO\n\nB\nC\n\n0\nO\n\nB\nC\n\n1\nSe\n\nrv\nic\n\ne\n\nO\nB\n\nC\n_1\n\nT\nY\n\nT\nC\n\nT\nP1\n\n5\n C\n\n58\n00\n\n10\n00\n\n?\n50\n\n?\n40\n\n80\n12\n\n5\nO\n\nB\nC\n\n1\nO\n\nB\nC\n\n0\nSe\n\nrv\nic\n\ne\n\nPL\n4(\n\nO\nSI\n\nR\nIS\n\n)\nT\n\nY\nT\n\nC\nT\n\nP1\n6\n\n\u00b0C\n58\n\n00\n11\n\n00\n?\n\n40\n?\n\n20\n60\n\n80\nPa\n\nyl\noa\n\nd\n\n(c\non\n\ntin\nue\n\nd)\n\n250 F. Steinmetz and S. Keil\n\n\n\nT\nab\n\nle\n8.\n1\n\n(c\non\n\ntin\nue\n\nd)\n\nC\nom\n\npo\nne\n\nnt\nC\nom\n\npo\nne\n\nnt\n\nT\nem\n\npe\nra\ntu\nre\n\nP\nar\nam\n\net\ner\n\nN\nam\n\ne\n\nC\nom\n\npo\nne\n\nnt\n\nT\nem\n\npe\nra\ntu\nre\n\nP\nar\nam\n\net\ner\n\nU\nni\nt\n\nC\nom\n\npo\nne\n\nnt\n\nT\nem\n\npe\nra\ntu\nre\n\nP\nar\nam\n\net\ner\n\nID\n\n[h\nex\n]\n\nN\nO\nP\n-l\now\n\ner\nO\nP\n-l\now\n\ner\nO\nP\n-u\npp\n\ner\n\n1s\nt\nSe\n\nns\nor\n\nO\nP\n-u\npp\n\ner\n\n2n\nd\nSe\n\nns\nor\n\nO\nP\n-u\npp\n\ner\n\nF\nal\nlb\nac\nk\n\nN\nO\nP\n-u\npp\n\ner\n1s\nt\nSe\n\nns\nor\n\n2n\nd\n\nSe\nns\nor\n\n3r\nd\n\nSe\nns\nor\n\n4t\nh\n\nSe\nns\nor\n\n5t\nh\n\nSe\nns\nor\n\nM\nod\n\nul\ne\n\nPL\n4\n\nO\nSI\n\nR\nIS\n\nL\nas\n\ner\n\nPL\n4\n\nO\nSI\n\nR\nIS\n\nIn\nte\n\nrn\nal\n\nPL\n4\n\nO\nSI\n\nR\nIS\n\nPL\n1(\n\nPA\nM\n\nC\nA\n\nM\n)\n\nT\nY\n\nT\nC\n\nT\nP1\n\n7\n\u00b0C\n\n58\n00\n\n12\n00\n\n?\n30\n\n?\n1\n\nLP\n57\n\n0 5\n02\n\nPA\nM\n\nC\nA\n\nM\n\nPa\nyl\n\noa\nd\n\nPC\nD\n\nU\nT\n\nY\nT\n\nC\nT\n\nP1\n8\n\n\u00b0 C\n58\n\n00\n14\n\n00\n?\n\n40\n?\n\nU\nD\n\nC P\n08\n\n0 7\n04\n\nIn\nte\n\nrn\nal\n\nP1\n.0\n\nPC\nD\n\nU\n\nIn\nte\n\nrn\nal\n\nP1\n.1\n\nPC\nD\n\nU\n\nIn\nte\n\nrn\nal\n\nP2\n\nPC\nD\n\nU\n\nIn\nte\n\nrn\nal\n\nP3\n\nPC\nD\n\nU\n\nIn\nte\n\nrn\nal\n\nP5\n\nSe\nrv\n\nic\ne\n\nPL\nO\n\nC\n_N\n\nT\nY\n\nT\nC\n\nT\nP1\n\n9\n\u00b0C\n\n58\n00\n\n15\n00\n\n-3\n0\n\n0\n70\n\n60\n40\n\n80\nPL\n\nO\nC\n\nN\n\nFP\nG\n\nA\n\nPL\nO\n\nC\nN\n\nPC\nB\n\ner o\nC\n\n1\nC\n\nB\nO\n\nPL\nO\n\nC\n_R\n\nT\nY\n\nT\nC\n\nT\nP2\n\n0\n\u00b0C\n\n58\n00\n\n16\n00\n\n?\n30\n\n0\n70\n\n60\n40\n\n80\nPL\n\nO\nC\n\nR\n\nFP\nG\n\nA\n\nPL\nO\n\nC\nR\n\nPC\nB\n\nero\nC\n\n1\nC\n\nB\nO\n\nR\nW\n\n_0\nT\n\nY\nT\n\nC\nT\n\nP2\n1\n\n\u00b0 C\n58\n\n00\n17\n\n00\n?\n\n35\n?\n\ner o\nC\n\n2\nW\n\nR\n1\n\nW\nR\n\n0\nW\n\nR\n07\n\n06\n02\n\nR\nW\n\n_1\nT\n\nY\nT\n\nC\nT\n\nP2\n2\n\n\u00b0C\n58\n\n00\n18\n\n00\n?\n\n35\n?\n\nero\nC\n\n3\nW\n\nR\n2\n\nW\nR\n\n1\nW\n\nR\n07\n\n06\n02\n\nR\nW\n\n_2\nT\n\nY\nT\n\nC\nT\n\nP2\n3\n\n\u00b0 C\n58\n\n00\n19\n\n00\n?\n\n35\n?\n\ner o\nC\n\n0\nW\n\nR\n3\n\nW\nR\n\n2\nW\n\nR\n0 7\n\n06\n0 2\n\nR\nW\n\n_3\nT\n\nY\nT\n\nC\nT\n\nP2\n4\n\n\u00b0C\n58\n\n00\n1A\n\n00\n?\n\n35\n?\n\nero\nC\n\n1\nW\n\nR\n0\n\nW\nR\n\n3\nW\n\nR\n07\n\n06\n0 2\n\nST\nA\n\nR\n_T\n\nR\nA\n\nC\nK\n\nE\nR\n\nT\nY\n\nT\nC\n\nT\nP2\n\n5\n\u00b0C\n\n58\n00\n\n1C\n00\n\n?\n50\n\n?\n30\n\n80\n73\n\n60\n10\n\n0\nST\n\nR\nC\n\nPU\nST\n\nR\n\nSM\nPS\n\nC\nor\n\ne\n\nT\nT\n\nC\nN\n\n_R\nX\n\nT\nY\n\nT\nC\n\nT\nP2\n\n6\n\u00b0C\n\n58\n00\n\n1D\n00\n\n?\n40\n\n?\n25\n\n55\n80\n\nT\nT\n\nC\nN\n\nR\nx\n\nT\nT\n\nC\nR\n\nR\nx\n\nT\nT\n\nC\nN\n\nT\nx\n\nSe\nrv\n\nic\ne\n\nT\nT\n\nC\nN\n\n_T\nX\n\nT\nY\n\nT\nC\n\nT\nP2\n\n7\n\u00b0 C\n\n58\n00\n\n1E\n00\n\n?\n40\n\n?\n25\n\n55\n80\n\nT\nT\n\nC\nR\n\nR\nx\n\nT\nT\n\nC\nN\n\nR\nx\n\nT\nT\n\nC\nR\n\nT\nx\n\nSe\nrv\n\nic\ne\n\nT\nT\n\nC\nR\n\n_R\nX\n\nT\nY\n\nT\nC\n\nT\nP2\n\n8\n\u00b0C\n\n58\n00\n\n1F\n00\n\n?\n40\n\n?\n25\n\n55\n80\n\nT\nT\n\nC\nN\n\nT\nx\n\nT\nT\n\nC\nR\n\nT\nx\n\nT\nT\n\nC\nN\n\nR\nx\n\nSe\nrv\n\nic\ne\n\nT\nT\n\nC\nR\n\n_T\nX\n\nT\nY\n\nT\nC\n\nT\nP2\n\n9\n\u00b0C\n\n58\n00\n\n20\n00\n\n?\n40\n\n?\n25\n\n55\n80\n\nT\nT\n\nC\nR\n\nT\nx\n\nT\nT\n\nC\nN\n\nT\nx\n\nT\nT\n\nC\nR\n\nR\nx\n\nSe\nrv\n\nic\ne\n\nPL\n3(\n\nA\nIS\n\n)\nT\n\nY\nT\n\nC\nT\n\nP3\n0\n\n\u00b0C\n58\n\n00\n21\n\n00\n?\n\n30\n?\n\n20\n40\n\n50\nPa\n\nyl\noa\n\nd\n\nM\nG\n\nT\nR\n\nO\nD\n\n0/\n2*\n\nT\nY\n\nT\nC\n\nT\nP3\n\n1\n\u00b0C\n\n58\n00\n\n22\n00\n\n?\n55\n\n?\n50\n\n70\n80\n\nM\nG\n\nT\nR\n\nod\n\n02\n\nM\nG\n\nT\n\nR\nod\n\n1\n\nC\nor\n\ne\n\nM\nG\n\nT\nR\n\nO\nD\n\n1*\nT\n\nY\nT\n\nC\nT\n\nP3\n2\n\n\u00b0C\n58\n\n00\n22\n\n30\n0\n\n?\n55\n\n?\n50\n\n70\n80\n\nM\nG\n\nT\nR\n\nod\n\n02\n\nM\nG\n\nT\n\nR\nod\n\n1\n\nC\nor\n\ne\n\n8 Thermal Control Subsystem 251\n\n\n\ntemperature sensors (for further details refer to Sect. 8.2). The temperature\nparameters, tolerable equipment temperature ranges and allocated sensors (includ-\ning spacecraft module identification) are provided in a first overview in Table 8.1.\nSome of the sensors are for information purpose only.\n\nTo ensure a temperature monitoring for every component (equipment instance)\nof the satellite, almost each component temperature has two assigned redundant\nsensors. In case of an invalid sensor the value of the redundant sensor is used. The\nsensor redundancy assignment was performed after the implementation of the\nsensors into the satellite and is listed in Table 17.13. Please note that sensors being\nmarked exclusively with \u201c?1\u201d in this table are those which are not used for control\nof TCS heaters and which therefore are not implemented redundant. They are only\nused by the TCS_Controller to measure certain equipment characteristics, such as\nfor the Solar Panels etc.\n\nTo protect the components from dropping below the permitted temperature\nlimits in unexpected situations, the FLP is equipped with nominal and redundant\nheater groups. For example the FLP spacecraft \u201cFlying Laptop\u201d has three nominal\nand three redundant heaters\u2014for Service Module, Core Module and Payload\nModule.1 Heaters are electrical resistors that release heat caused by an electrical\ncurrent. If the temperature drops below the permitted limit, the TCS algorithm\nactivates the assigned heater.\n\nFor heater control, it is necessary to know the temperature limits of all com-\nponents. As mentioned earlier there are two types of limits to be defined\u2014the\noperational and the non-operational limits. The current thermal status can be\ndefined by means of the current temperature and the limits of each component.\nFigure 8.4 describes the thermal status definition of a component.\n\nFig. 8.4 Thermal status definition of a component. \u00a9 IRS, University of Stuttgart\n\n1The battery compartment is treated as a dedicated own \u201cModule\u201d by the thermal control algo-\nrithm, as the battery is thermally decoupled from the spacecraft. More details are provided in\nSect. 8.3.2.3.\n\n252 F. Steinmetz and S. Keil\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nTable 8.2 Module temperatures and assigned sensors\n\nName Component\nTemperature\nParameter Name\n\nComponent\nTemperature\nParameter Unit\n\nComponent\nTemperature\nParameter ID\n[hex]\n\nAssigned Sensors\n\nCORE_MODULE TYTMTP00 \u00b0C 58000300 Core Module\n\nFOG 0\n\nMGT Electronic\n\nMGT Rod 1\n\nGPS\n\nMGT Rod 0/2\n\nDDS Transmitter\nN\n\nDDS Transmitter\nR\n\nFOG 1\n\nPAYLOAD_MODULE TYTMTP01 \u00b0C 58001300 Payload Module\n\nPayload 1\n(PANCAM)\n\nPayload 4\n(OSIRIS)\n\nSERVICE_MODULE TYTMTP02 \u00b0C 58001B00 Service Module\n\nOBC 1\n\nOBC 0\n\nBattery S0 BottomELUDOM_YRETTAB\n\nBattery S1 Bottom\n\nBattery S2 Top\n\nBattery S0 Top\n\nBattery S1 Top\n\nBattery S2 Bottom\n\nTable 8.3 Heater assignment to the satellite modules\n\nName Abbreviation PCDU\nFuse #\n\nHeater\nObject ID\n[hex]\n\nFuse\nCurrent\nParameter\nName\n\nFuse\nCurrent\nParameter\nUnit\n\nFuse Current\nParameter ID\n[hex]\n\nPayload Module\nHeater N\n\nPM 22 43540075 PPTFSC22 A 41110416\n\nPayload Module\nHeater R\n\nPM 23 43540076 PPTFSC23 A 41110417\n\nCore Module\nHeater N\n\nCM 22 43540071 PPTFSC22 A 41110416\n\nCore Module\nHeater R\n\nCM 23 43540072 PPTFSC23 A 41110417\n\nService Module\nHeater N\n\nSM 22 43540073 PPTFSC22 A 41110416\n\nService Module\nHeater R\n\nSM 23 43540074 PPTFSC23 A 41110417\n\n8 Thermal Control Subsystem 253\n\n\n\nIn addition to the individual equipment temperatures, a temperature value is\naggregated for each satellite module. This is done numerically and the algorithm is\nexplained further down in Sect. 8.3. Table 8.2 provides the list of temperature\nparameters and their aggregation component sources.\n\nAnd finally Table 8.3 lists the allocation of the heaters to the corresponding\nsatellite modules.\n\nFigure 8.5 provides a graphical overview on the temperature limits of each\n\u201cFlying Laptop\u201d component as representative mission example (the detailed values\nare already included in Table 8.1). The red-marked area identifies the range beyond\nthe measurement capability of the applied equipment (PCDU plus PT1000\nthermistors).\n\nThe battery and the star tracker are marked in yellow as they are thermally\ndecoupled from the other components of the satellite. The star trackers are facing\ntowards deep space and are decoupled from the Payload Module inner side. The\nbattery is geometrically included in the Service Module but is thermally decoupled\nfrom the structure.\n\nThe components marked in grey are just for temperature information, they will\nhave no effect on heater control.\n\n8.2 Sensors, Calibration, Limits\n\nThere exist 66 temperature sensors on board the first FLP spacecraft\u2014the \u201cFlying\nLaptop\u201d\u2014of which 32 are individually placed at important locations or on/near\ncomponents in the structure. As an exception, there are two sensors for each battery\nstring since this is a crucial component. This allows for the detection of local\ntemperature gradients in the battery strings. The other 34 are internal temperature\nsensors which are included within equipment units, providing a temperature in their\nrespective housekeeping telemetry data packet. With these 66 sensors it is possible\nto determine a temperature for all components. There are six heaters\u2014two on each\nStructure Module\u2014for nominal thermal control.\n\nFor those thermistors implemented in electronic units (such as PCDU) the\ncalibration curves are provided by the unit manufacturer\u2014respectively the units\ndirectly report their temperatures calibrated in \u00b0C.\n\nFor thermistors applied externally to S/C equipment units or for thermistors\napplied to the satellite structure per compartment the PT1000 thermistor raw values\nin ? are measured by the PCDU and they are digitized by the PCDU\u2019s AD con-\nverters. The translation of the digital raw values to temperature values into \u00b0C is\nperformed according to calibration functions which result from the characterization\n\n254 F. Steinmetz and S. Keil\n\n\n\n-1\n50\n\n-1\n25\n\n-1\n00\n\n-7\n5\n\n-5\n0\n\n-2\n5\n\n0\n25\n\n50\n75\n\n10\n0\n\n12\n5\n\n15\n0\n\nP\nay\n\nlo\nad\n\n 1\n\nP\nay\n\nlo\nad\n\n 2\n\nP\nay\n\nlo\nad\n\n 3\nP\n\nay\nlo\n\nad\n 4\n\nD\nD\n\nS\n T\n\nra\nns\n\nm\nitt\n\ner\n\nD\nD\n\nS\n S\n\nw\nitc\n\nh\nD\n\nD\nS\n\n A\nnt\n\nen\nna\n\nP\nLO\n\nC\n\nM\nag\n\nne\nto\n\nrq\nue\n\nr \nM\n\nG\nT\n\nM\nag\n\nne\nto\n\nrq\nue\n\nr \nM\n\nG\nT\n\n P\now\n\ner\n\nR\nea\n\nct\nio\n\nn \nW\n\nhe\nel\n\ns \nR\n\nW\nR\n\nW\n P\n\now\ner\n\n S\nup\n\npl\ny \n\nE\nle\n\nct\nro\n\nni\nc\n\nM\nag\n\nne\nto\n\nm\net\n\ner\n M\n\nG\nM\n\nM\nag\n\nne\nto\n\nm\net\n\ner\n P\n\now\ner\n\nS\nta\n\nr \nT\n\nra\nck\n\ner\n C\n\nH\nU\n\nS\nta\n\nr \nT\n\nra\nck\n\ner\n D\n\nP\nU\n\nF\nO\n\nG\nS\n\nun\n S\n\nen\nso\n\nrs\n S\n\nuS\n\nG\nP\n\nS\nG\n\nP\nS\n\n L\nN\n\nA\n\nG\nP\n\nS\n A\n\nnt\nen\n\nna\n\nO\nB\n\nC\nP\n\nC\nD\n\nU\n\nB\nat\n\nte\nry\n\nT\nT\n\n&\nC\n\nP\nrim\n\nar\ny \n\nS\ntr\n\nuc\ntu\n\nre\n\nS\nol\n\nar\n P\n\nan\nel\n\ns\n\nD\nO\n\nM\nO\n\npt\nic\n\nal\n B\n\nen\nch\n\nM\nLI\n\nS\nS\n\nM\n\nte\nm\n\np\ner\n\nat\nu\n\nre\n (\n\n\u00b0C\n)\n\nO\nP\n\nN\nO\n\nP\n\nbe\nyo\n\nnd\n P\n\nC\nD\n\nU\n m\n\nea\nsu\n\nre\nm\n\nen\nt r\n\nan\nge\n\n \n\nno\n c\n\non\ntr\n\nol\n \u2013\n\n ju\nst\n\n fo\nr \n\nin\nfo\n\nrm\nat\n\nio\nn \n\nin\nsu\n\nla\nte\n\nd \nfr\n\nom\n th\n\ne \not\n\nhe\nr \n\nco\nm\n\npo\nne\n\nnt\ns \n\nof\n th\n\ne \nsa\n\nte\nlli\n\nte\n \n\nF\nig\n.8\n\n.5\nE\nqu\n\nip\nm\nen\nt\nop\n\ner\nat\nio\nna\nl\nan\nd\nno\n\nn-\nop\n\ner\nat\nio\nna\nl\nte\nm\npe\nra\ntu\nre\n\nlim\nits\n.\n\u00a9\n\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt\n\n8 Thermal Control Subsystem 255\n\n\n\ncampaign performed in [130] where further details and tolerance factors can be\ntaken from. The conversion function is a simple polynomial\n\nf \u00f0R\u00de \u00bc aR3 \u00fe bR2 \u00fe cR\u00fe d \u00f08:1\u00de\n\nwith:\nf temperature value\nR sensor raw value\na, b, c, d calibration function parameters.\n\nThe polynomial parameter values for all sensors are included in Table 17.13.\nThe full calibration function parameter set of Eq. 8.1 for all such component sensors\n(internal and external) is included in Table 17.13.\n\n8.3 TCS Subsystem Control\n\nThe TCS_Controller in the OBSW (see Fig. 8.6) is responsible for the monitoring\nof the temperature sensors and for commanding the heaters. The thermal control\nalgorithm was developed in the frame of a thesis [130]. The algorithm was\nimplemented and verified on the basis of MATLAB Simulink\u00ae from where then\nC-Code was generated and was adapted later to properly integrate into the C++\nOBSW architecture.\n\nThe block-diagram of Fig. 8.7 depicts the top level design of the TCS algorithm.\nThe necessary input is represented by the blue boxes on the left side. The purple\nbox indicates the additional constants to provide settings, limits and function\nparameters. The generated output is in blue boxes on the right and the grey box on\nthe right represents the failure information. The green box in the middle includes\nthe individual functions of the TCS algorithm in the TCS_Controller. The block\ndiagram shows that the TCS algorithm only works with OBSW datapool data while\nthe TCS_Controller in light green provides the interface. This design of the TCS\nalgorithm fulfills the requirements for integration into the object-oriented OBSW\n\nFig. 8.6 TCS controller as part of thermal subsystem. \u00a9 IRS, University of Stuttgart\n\n256 F. Steinmetz and S. Keil\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\narchitecture. A more detailed description on implemented TCS relevant OBSW\nobjects their functions and allocated parameters is provided in Sect. 8.3.2.\nThe interaction of the different software elements are described hereafter:\n\n\u2022 All data used by the TCS algorithm is provided to the TCS_Controller from the\nOBSW datapool for accessibility by other controllers and software components.\n\n\u2022 All heater switch statuses generated by the TCS algorithm is provided to the\nOBSW datapool.\n\n\u2022 All sensor or heater fault status values and subsequent marking of such thermal\nequipment as defective is provided to the OBSW datapool.\n\n\u2022 All identified failures are stored in separate arrays in the datapool to allow the\nFDIR to react. More details on variable handling are provided in Sect. 8.3.2.\n\nThe developed algorithm considers the following elements:\n\nTemperatures\nThe temperature of each component of the satellite has to be monitored. The\ntemperature has to be measured with the given hardware. These values have to be\ntransformed to unified temperature values and checked for physical reasonable, the\nmeasurement range and temperature gradient. In case of a failure a redundancy\nmust be guaranteed.\n\nComponent statuses\nThe temperature limits of each component have to be checked and a temperature\nstatus has to be defined. It also has to be monitored, if the target status is achieved\nafter a certain time.\n\nHeater circuits\nEach heater status and in particular the heater current has to be compared to the\ntarget status. To maintain or archive the target status, heater commands have to be\nprovided by the TCS algorithm. As important components have priority, a priority\norder must be respected.\n\nSub-functions\nDue to the main requirements it is necessary to store current values, such as the\ncurrent temperature value for the temperature gradient check.\n\nBattery system\nThe battery system of the FLP platform imposes further requirements to the\nalgorithm. The current temperature of each battery temperature sensor has to be\nprovided by the TCS_Controller in a separate array in the datapool. The TCS\nalgorithm has to calculate the average temperature of each of the three battery\nstrings and return these values in a separate array. The TCS algorithm has to return\na warning if the temperature difference between the two temperature sensors of one\nbattery string exceeds a certain threshold.\n\n8 Thermal Control Subsystem 257\n\n\n\n8.3.1 Initial Control Concept\n\nThe initial control concept as developed in [130] worked as \u201cloop\u201d controlling the\nspacecraft heaters as response to thermal sensor values considering multiple sensors\nand their limit values for each spacecraft component to be thermally controlled.\nFigure 8.8 shows the complete MATLAB Simulink\u00ae model of the TCS algorithm.\n\nFunctional breakdown\nThe different functions of the initially designed TCS algorithm are listed in the\nfollowing Table. 8.4. All functions of the TCS algorithm are listed as followed and\ndescribed on the next pages.\n\nTable 8.4 Initial TCS control\nsubfunctions\n\n1 converterFunction 6 statusCurrent vs. statusTarget\n\n2 temperatureGradientCheck 7 heaterCmdFunction\n\n3 redundancyFunction 8 batterySystem\n\n4 statusCheck 9 memoryFunction\n\n5 statusTime\n\nFig. 8.7 Design of the TCS algorithm. \u00a9 IRS, University of Stuttgart\n\n258 F. Steinmetz and S. Keil\n\n\n\nF\nig\n.8\n\n.8\nM\nat\nla\nb\nSi\nm\nul\nin\nk\nm\nod\n\nel\nof\n\nth\ne\nT\nC\nS\nal\ngo\n\nri\nth\nm\n.\n\u00a9\n\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt\n\n8 Thermal Control Subsystem 259\n\n\n\n8.3.2 TCS Controller\n\nThe internal of the TCS_Controller as finally implemented is modeled according to\nthe physical subsystem layout (see Fig. 8.9). In its object-oriented architecture it\nholds temperature sensor objects, satellite module objects, component objects and\nheater objects.\n\nIn the first approximation \u201ccomponents\u201d are the same as the \u201cdevices\u201d cited in\nthe previous chapters. However while devices always are electronic or electric\nfunctional units (like a GPS receiver), a \u201ccomponent\u201d also can be an artificial\nstructure or an entirely passive element that needs thermal balancing\u2014see later the\nbattery string.\n\nComponents are allocated to modules. Each component has one or more tem-\nperature sensors assigned. Each module has two redundant heaters, which are used\nto heat all components of a module simultaneously.\n\nEach temperature sensor object monitors one physical temperature sensor.\nA thermal component then uses multiple sensors to calculate a temperature value\nfor one physical component. Depending on the state (on/off) of the component and\nits temperature, components request the activation or deactivation of the module\nheater from the module. The module calculates from all sensor the requests which\nheaters should be activated.\n\nFig. 8.9 TCS_Controller block diagram. \u00a9 IRS, University of Stuttgart\n\n260 F. Steinmetz and S. Keil\n\n\n\nEvent reports are generated for all critical thermal Events. Monitoring reports are\nused to inform about non critical Events.\n\nThe TCS control cycle rate is provided in Sect. 3.4.2. The TCS_Controller also\ncan be run with a selectable time offset relative to the other OBSW tasks.\n\n8.3.2.1 Temperature Sensors\n\nFor each physical temperature sensor there is a temperature sensor object which\nperforms two functions. First, it monitors the sensor output and flags erroneous\nbehavior. Secondly, it converts the sensor value to \u00b0C.\n\nMonitoring\nTemperature sensors are monitored against violation of physical temperature limits\nand so are the gradients of each temperature. The limit monitoring is performed\nbefore the conversion of the sensor value to \u00b0C\u2014i.e. on raw value level\u2014whereas\nthe gradient monitoring is performed after conversion.\n\nIn every monitoring step, the current unconverted value is checked against a\nmaximum and a minimum value. The gradient is checked only if the previous\nexecution step calculated a valid sensor value. If a sensor is unavailable\u2014be it\ninvalid or not updated\u2014the gradient is not monitored. The gradient is only cal-\nculated and monitored again when the value is available for two consecutive\nexecution steps.\n\nConversion\nThe values of most sensors are not directly available in \u00b0C but in different units. The\nconversion from the sensor units to \u00b0C is done using the already cited polynomial\nfunction. A polynomial of 2nd degree is applied for most sensors. In the case of the\ntransceiver internal temperatures a polynomial function of 3rd degree is applied\u2014\nsee Eq. 8.1.\n\nFailure handling\nEach temperature sensor object has a health flag. If a temperature sensor is not\nhealthy or the input is not within validity range, no monitoring is performed and the\noutput is set to invalid. Setting the sensor output to invalid implies setting the value\nto an invalid temperature.\n\nThe FLP contains also some sensors only for information purposes. When these\nsensors become invalid, the temperature value is set to an artificial value of 999 \u00b0C.\n\nIf the sensor value is out of the monitoring limits, the output is set to invalid as\nwell. If the gradient is too high, the output value will still be valid.\n\nReporting\nWhen the sensor value exceeds the physical valid range or the gradient becomes too\nhigh, a failure Event is reported. The limit violation is only reported once\u2014as soon\nas the value exceeds the limit. The gradient violation is reported every time a too\nhigh gradient is calculated, independent of the previous execution step.\n\n8 Thermal Control Subsystem 261\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nAll violations of the upper or lower limits are reported using Monitoring reports.\nIn case where the health state of a sensor is not healthy, no Events nor reports are\n\ngenerated.\n\n8.3.2.2 Thermal Components\n\nFor every spacecraft equipment device (each STR, RW etc.), there exists a corre-\nsponding thermal component object.2 This object tries to calculate a best estimate of\nthe temperature of the component and determines the thermal state the of the\ncomponent. If a component is too cold or too hot, the thermal component object\nrequests the module heater to be switched on or off, respectively.\n\nTemperature estimation\u2014Sensor redundancy\nEvery component has a number of redundant temperature sensors assigned. Here\nlies the main difference of the implemented algorithm to the initial MATLAB\nSimulink\u00ae based design from [130]:\n\nDepending on the type of the component here the following strategies are used to\nresolve the redundancy:\n\n\u2022 The default case is that the sensors are ordered and the temperature value of the\nfirst valid sensor (see Table 8.1) is used as the estimated temperature. In case\nwhere the sensor is marked as defective the corresponding 2nd sensor from is\nused and so forth (see Table 8.1).\n\n\u2022 For the PCDU and the Battery components, the mean value of all available\nsensors is used as the estimated temperature.\n\n\u2022 For all components, if there is no valid sensor available, the module temperature\nas calculated by the associated module (see Table 8.1 and Sect. 8.3.2.3) object is\nused as estimated temperature.\nIn case of the \u201cFlying Laptop\u201d this e.g. applies for the payload 3, the AIS\nreceiver, which has neither an internal sensor nor an external due to its late\naccommodation into the mission as customer furnished item.\n\nThis implementation allows that in case where the first sensor is marked as\nhealthy no further sensor values are to be checked and in addition contradicting\nin-limit/out-of-limit results from the multiple sensors of a component near boundary\ntemperatures can be avoided.\n\nThermal state\nComponents have two temperature ranges, operational and non operational\u2014see\nFigs. 8.4 and 8.5 and Table 8.1. Based on these ranges, the component object\ndetermines the current state of the component as either\n\n2To be entirely precise: The actual rule is that for every device handler which controls a device that\nmust be thermally monitored, there is a thermal component. The only exception is the OBC which\nonly has one thermal component for each redundant OBC side although it has more equipment\ndevice handlers.\n\n262 F. Steinmetz and S. Keil\n\n\n\n\u2022 out of limit low,\n\u2022 non operational low,\n\u2022 operational,\n\u2022 non operational high,\n\u2022 out of limit high.\n\nIf no temperature can be estimated, the current state is set to unknown. The\nabove mentioned thermal state is used in addition to the temperature range to\nidentify whether the temperature component is to be actively controlled. Marking a\ncomponent NOT to be actively controlled is done by adding an ignored state for all\nstates mentioned before. The cause for a component not to be controlled can be\nresulting from several factors:\n\n\u2022 The target state of the component is ignored (see paragraphs below).\n\u2022 The heater request is being overwritten in the request voting (see Sect. 8.3.2.3).\n\u2022 The Module strategy (see Sect. 8.3.2.3) does not include the components.\n\nTarget state\nEach component has a target state that can be\n\n\u2022 operational,\n\u2022 non-operational,\n\u2022 heating,\n\u2022 ignored.\n\nThe target state controls how the component object will request heater activation\nor deactivation from the module and also the monitoring of the thermal state.\n\n\u2022 If the target state is operational, the component object will try to keep the\ncomponent temperature in the operational temperature range and generate a\nfailure message as soon as the current state is not operational.\n\n\u2022 If the target state is non-operational, the component object will try to keep the\ncomponent in the non-operational temperature range and generate a failure\nmessage as soon as the current state is out of limit.\n\n\u2022 If the target state is heating, the component object will try to keep the com-\nponent in the operational temperature range but unlike the operational target\nstate, failure messages will only be generated if the component temperature\nexceeds the non-operational range.\n\n\u2022 If the target state is ignored, the component object will not request heater\nactivation or deactivation. This is also reflected in the current state which will be\nmarked as ignored.\n\nThe non-operational target state is the default state for components that are\nswitched off. The operational target state is set by the device handler when a\ncomponent is switched on. This state cannot be commanded and the target state can\n\n8 Thermal Control Subsystem 263\n\n\n\nalso not be changed by command if it is operational. This is done to ensure that no\ncomponent is operated outside of its specified temperature range. In contingency\ncases the operational target state can be overwritten to non-operational but this\nshould be done with great care as it poses the risk of damaging a component.\n\nNote: The ignored target state should only be used in contingency cases.\n\nHeater request\nThere are five heater requests that the component object can request from the\nmodule.\n\n\u2022 emergency_On: This indicates that the component is close to its lower\nnon-operational temperature limit and the heater should be activated.\n\n\u2022 on: This indicates that the component is close to its lower operational temper-\nature limit and the heater should be activated.\n\n\u2022 don\u2019t_care: This indicates that the component is within its desired temperature\nrange and no heating is required.\n\n\u2022 off: This indicates that the component is close to its upper operational temper-\nature limit and the corresponding heater should be switched off.\n\n\u2022 emergencyOff: This indicates that the component is close to its upper\nnon-operational temperature limit and the heater should be switched off.\n\nThe request behavior is controlled using three variables, heaterOn, hysteresis\nand heaterOff. heaterOn is the temperature difference between the lower limit and\nthe temperature at which the heater will be requested to be activated. hysteresis is\nthe temperature difference the component must be heated before the heater can be\nswitched off. heaterOff is the temperature difference between the upper limit and the\ntemperature at which the heater is requested to be deactivated.\n\nIf the target state is non-operational, only the non-operational limits of the\ncomponent are considered. Figure 8.10 shows the resulting request graph.\n\nFig. 8.10 Heater request in target state non-operational. \u00a9 IRS, University of Stuttgart\n\n264 F. Steinmetz and S. Keil\n\n\n\nIf the target state is heating or operational, both the non-operational and oper-\national limits are considered, leading to the more complex request graph in\nFig. 8.11.\n\nFailure handling\nIn case of no valid sensors and no valid module temperature or if no module is\nassigned, the estimated temperature is marked as invalid and don\u2019t_care is returned\nas heater request.\n\nReporting\nIf a component exceeds its requested temperature range\u2014to either the upper or\nlower side\u2014a failure event is reported. If a component leaves or enters its requested\nrange, a monitoring report is sent. The requested temperature range is the opera-\ntional range for target state operational and the non-operational range for the other\ntarget states. If the target state is set to ignored, no Events or reports are generated.\n\nSpecial cases\nOne special component is the battery string component. It has two sensors assigned,\nthe top and the bottom sensor. The temperature is estimated as the mean value of all\navailable sensors. In addition to the monitoring of the estimated temperature, the\nbattery string component also monitors the spatial gradient in the battery string. If\nboth sensors are available, the spatial gradient is calculated and is compared to a\nlimit value. If the gradient is larger than the permitted limit, a failure Event is\nreported.\n\nThere are some other components which select the upper operational limit\ndepending on the currently used sensor. This is done to compensate adverse\nplacement of some sensors, for example sensors close to a strong heat source such\nas the CPU of a device.\n\nFig. 8.11 Heater request in target state heating or operational. \u00a9 IRS, University of Stuttgart\n\n8 Thermal Control Subsystem 265\n\n\n\n8.3.2.3 Thermal Modules\n\nFor every Spacecraft Module, there is a thermal Module object. This object groups\nthe component objects of the spacecraft equipment located in the Spacecraft\nModule. The Module object calculates a module temperature, receives the heater\nrequests from its components, votes between these requests and controls the two\nmodule heaters.\n\nAdditionally, the Module management in the TCS_Controller can control the\nheater itself to heat up the entire Module to such a temperature that all components\nare finally within their operational temperature range.\n\nModule temperature and limit temperature\nThe Module temperature is calculated as the average of all available temperature\nsensors assigned to this S/C Module. If no temperature sensors are available, the\nModule temperature will be set invalid and the Module state will be set to unknown.\n\nThe Module also calculates a limit temperature, which is the highest of the lower\noperational limits of all components assigned to the Module.\n\nCurrent state\nThe current state of a thermal Module can be\n\n\u2022 operational,\n\u2022 non-operational,\n\u2022 timeout\n\u2022 or unknown.\n\nIf the Module temperature is above the lower limit temperature, the current state\nis operational. If the temperature is lower than the limit temperature, the current\nstate is non-operational. If no temperature sensors are available, the current state is\nunknown. The timeout state is defined in [130] but is not yet used in the imple-\nmented algorithm. Heater timeout is handled by the TCS FDIR\u2014see Sect. 10.7\n\nTarget state\nEach Module has a target state assigned which controls the heating strategy of the\nModule itself. If the target state is set to heating, the Module will try to keep the\nModule temperature in such a range that the Module\u2019s current state is operational.\nIf the target state is passive, the Module will not control the Module temperature.\n\nThe way the module requests heater activation is controlled by two variables,\nheaterOn and hysteresis. heaterOn is the temperature difference between the limit\ntemperature and the temperature at which the heater is requested to be activated.\nThe heater limits are defined with a small offset to the status limits, to ensure the\ntemperature of a component does not drop below the status limit. This soft limit\nensures that a heater turns off after a certain temperature difference to the heater\n\n266 F. Steinmetz and S. Keil\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\nlimit. hysteresis is the temperature that the module must be heated before the heater\nis requested be deactivated. The resulting request map is shown in Fig. 8.12.\n\nRequest voting\nBased on all the heater requests from all the components assigned to it, a module\nperforms a two step voting. First, components are grouped by their priority (see\nTable 17.13 in the annex). Thereafter within the group the requests are voted with\nthe following priorities\u2014highest first:\n\n\u2022 emergency_Off\n\u2022 emergency_On\n\u2022 off\n\u2022 on\n\u2022 don\u2019t_care\n\nAfter that, the requests between the groups are voted with the following prior-\nities\u2014highest first:\n\n\u2022 safe\n\u2022 idle\n\u2022 payload\n\nThe resulting request is the component request. This can be either on or off,\nwhere dont\u2019_care is treated as off. The component request is logically OR-ed with\nthe module\u2019s heater request to get the heater command.\n\nHeater control\nEach module has two heater objects assigned. The heater objects have health flags\nand thus can be marked as faulty. The module will only activate healthy heaters.\nUnhealthy heaters will be deactivated, while heaters marked as externally controlled\nwill be ignored.\n\nComponent information\nAfter the heater command has been calculated, each component is informed whe-\nther its request was fulfilled or not. Components of which the heating request is not\nbeing fulfilled are marked as ignored.\n\nFig. 8.12 Heater request in\ntarget state heating. \u00a9 IRS,\nUniversity of Stuttgart\n\n8 Thermal Control Subsystem 267\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nStrategy\nA thermal S/C Module offers four control strategies:\n\n\u2022 passive,\n\u2022 survival,\n\u2022 single\n\u2022 and dual.\n\nUsing passive strategy, the heaters are not commanded, while all other functions\nare executed nominally. When entering passive strategy, the heaters are deactivated\nonce and then are ignored.\n\nThe single strategy is the default strategy. It will perform all functions nominally\nand use the nominal heater to heat the components. If the nominal heater is faulty,\nthe redundant heater will be used. If the redundant heater is faulty as well, no heater\nwill be commanded and all components will be marked as ignored.\n\nUsing survival strategy (see Sect. 10.7.3. on TCS Survival Mode), only the\ncomponents with a priority safe are considered in the request voting. All other\ncomponents will be marked as ignored. Only one heater is used, as detailed for the\nSingle strategy.\n\nThe dual strategy differs from single strategy only in using all available healthy\nheaters in parallel.\n\nSpecial Cases\nThe battery Module differs from the other Modules in that it has no heater assigned.\nThus it marks all it components as ignored\u2014independent from the current strategy.\n\n8.3.2.4 TCS Controller Modes\n\nThe TCS_Controller offers the modes/submodes as listed in Table 8.5.\n\nTable 8.5 TCS_Controller modes\n\nCtrler Mode M# Submode SM# Description\n\nTCS Off 0 Default 0 Off\n\nOn 1 Default 0 Passive, i.e. only temperature sensors values are\nprocessed, no heaters are commanded\n\nNormal 2 Auto 0 Controller decides whether to use survival, single\nor dual control according to Battery SoC\n\nSurvival 1 Only Safe Mode devices are heated if necessary\nuntil a timeout is reached\n\nSingle 2 All components are heated if necessary using one\nheater circuit per module only\n\nDual 3 All components are heated if necessary using\nboth heater circuits in each module\n\n268 F. Steinmetz and S. Keil\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n8.3.3 TCS Subsystem Mode Transitions and Telemetry\n\nThe TCS-Subsystem mode commanding\u2014according to the TCS_Controller modes\ndefined in Table 8.5\u2014is performed via PUS service 200 and the following\nsequences\u2014see Table 8.6.\n\nThe TCS subsystem relevant TC packet definitions are included in the spacecraft\nTC table in annex Sect. 17.3.1.\n\nTable 8.6 TCS subsystem modes and transition sequences\n\n# TCS Modes 0x01000500\n\n#\n\n#\n\nCommanding to Off\n\nSequence Name Seq ID HardCoded? Fallback\n\nOff 0x59000000 1\n\nName Table ID WaitTime Check?\n\nOff_Target 0x59000000 0 0\n\nSystem Obj ID Mode Mode ID Submode Submode ID\n\nTCS Controller 0x43540000\n\n#\n\nAchieved by transition\n\nName Table ID WaitTime Check?\n\nOff_Trans 0x59000100 0 0\n\nSystem Obj ID Mode Mode ID Submode Submode ID\n\nTCS Controller 0x43540000 Off 0 Off 0\n\n#\n\n#\n\nCommanding to Default Mode\n\nSequence Name Seq ID HardCoded? Fallback\n\nDefault 0x59010000 1 0x59000000\n\nName Table ID WaitTime Check?\n\nDefault_Target 0x59010000 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode ID\n\nTCS Controller 0x43540000 Normal 2 Auto 0\n\n#\n\nAchieved by transition\n\nName Table ID WaitTime Check?\n\n_Trans 0x59010100 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode ID\n\nTCS Controller 0x43540000 Normal 2 Auto 0\n\n(continued)\n\n8 Thermal Control Subsystem 269\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nThe TCS subsystem relevant TM packet definitions are included in the space-\ncraft TM table in annex Sect. 17.3.2.\n\nThe TCS subsystem relevant Event TM packets are included in the spacecraft\nEvent TM table in annex Sect. 17.3.3.\n\nDetails on the TM parameter positions in the diverse packets have to be taken\nfrom the MIB.\n\nTable 8.6 (continued)\n\n#\n\n#\n\nCommanding to Survival\n\nSequence Name Seq ID HardCoded? Fallback\n\nSurvival 0x59020000 1 0x59000000\n\nName Table ID WaitTime Check?\n\nSurvival_Target 0x59020000 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode ID\n\nTCS Controller 0x43540000 Normal 2 Survival 1\n\n#\n\nAchieved by transition\n\nName Table ID WaitTime Check?\n\n_Trans 0x59020100 0 1\n\nSystem Obj ID Mode Mode ID Submode Submode ID\n\nTCS Controller 0x43540000 Normal 2 Survival 1\n\n#\n\n#\n\n270 F. Steinmetz and S. Keil\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nChapter 9\nPayload Control Subsystem\n\nPhilipp Hagel, Paul Walker and Jens Eickhoff\n\nAbstract The payloads themselves are not part of the satellite platform.\nNevertheless the options to couple payloads and payload module equipment like a\nmass memory unit and payload data transmission equipment to the platform\ncomputer are relevant for the Flight Operations Manual. Various architectures are\nexplained here. The technical solution for the first FLP-based satellite of the\nInstitute of Space Systems in Stuttgart is covered in a bit more detail. The second\npart treats more advanced SpaceWire network centric architectures as proposed by\n4Links and Airbus DS.\n\nP. Hagel (&)\nInstitute of Space Systems, Deutsches Zentrum f\u00fcr Luft- und Raumfahrt,\nBremen, Germany\ne-mail: philipp.hagel@dlr.de\n\nP. Walker\n4Links Ltd, Milton Keynes, UK\ne-mail: paul@4links.co.uk\n\nJ. Eickhoff\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_9\n\n271\n\n\n\nKeywords Payload to onboard computer connection schemes ? Payload control of\nthe first FLP-based satellite ? Modular payload data processing ? Network centric\narchitectures ? SpaceWire networks\n\n9.1 Aspects of Payload Control and Data Handling\n\nConcerning the topic of payload management on board a satellite three main\nfunctions have to be considered:\n\n\u2022 Control of the payload in the sense of payload mode switching and processing\nof the feedback\u2014i.e. payload command and control\n\n\u2022 Processing the payload generated mission product-data which might need an\non-board compression, preprocessing, quality analysis or packaging for\ndownlink\n\n\u2022 The functionality of payload mission product storage and retrieval at time of\ndownlink.\n\nFor the latter it is obvious that this function typically is assigned to a dedicated\nunit, a Mass Memory Unit (MMU). If such a unit also provides an implementation\nof a file system and in/out streaming functions to/from files, such units are called\nMass Memory and Formatting Unit (MMFU).\n\nThe other functions\u2014payload control and mission product processing\u2014can be\nallocated in multiple ways in the on-board architecture. The following points have\nto be considered for the implementation of the payload control subsystem.\n\n\u2022 Payload command and control highly depend on the inherent intelligence of the\npayload sensor/detector electronics.\n\n\u2022 Concerning data management\u2014routing, formatting, storage\u2014the selected\nsolution must consider the data rates produced by each individual payload. This\nmight range from low data rates of a cosmic dust sensor up to the extreme data\nrates produced by RADAR payloads.\n\n\u2022 Concerning the mission product data furthermore the required CPU performance\nfor data processing/compression has to be considered.\n\n\u2022 And finally the selected architecture is driven by the number and types of\npayloads mounted on the platform for a dedicated mission.\n\nThe possible solutions generally are, to let a dedicated function be performed by\nthe main platform OBC, or alternatively, by a dedicated payload management\n\u201cunit\u201d in its most general sense.\n\nIn the following sections some elementary solutions are described. In Sect. 9.2\nthe implementation of the payload control subsystem for the first FLP based\nsatellite\u2014the \u201cFlying Laptop\u201d\u2014is described. Section 9.3 describes the imple-\nmentation of the architecture followed by Airbus DS for the FLP Generation 2.\n\n272 P. Hagel et al.\n\n\n\n9.1.1 Payload Control via the Platform OBC\n\nThe simplest solution for payload management is the case where the payloads are\ndirectly connected to the OBC (see Fig. 9.1). This approach implies that:\n\n\u2022 The satellite will have a lower complexity due to not using any systems in\nbetween OBC and the payloads. This will also reduce the mass and the power\nconsumption of the satellite.\n\n\u2022 The OBC however needs a built-in Mass Memory Unit (MMU) or needs con-\nnection to an MMU to store the generated mission product data.\n\n\u2022 The OBC must have sufficient CPU performance to manage payload control and\nmission product data in parallel to platform control.\n\n\u2022 The interfaces of the payloads have to follow certain data bus or interface\nstandards (RS422, SpW or other) to avoid adaptation of the OBC design for\neach new mission. In particular the interfaces between payload and OBC as well\nas between OBC and MMU have to provide sufficient data throughput\nperformance.\n\nIn conclusion this system design is recommended for missions and spacecraft\nwhere the payloads provide a minimum of intelligence to be equipped with a\nstandardized digital interface and where the OBC is powerful enough and has the\nability to handle payload data.\n\n9.1.2 Payload Control via Dedicated PMC\n\nThe alternative solution is to manage the payloads via a dedicated Payload Module\nController (PMC)\u2014see Fig. 9.2. This approach was followed for many years for\nlarge operational satellites with many instruments like the US NOAA satellites or\non the European side the ERS-1/2, Envisat and the MetOp\u2014A/B/C. In these\nsatellites the platform OBCs\u2014with the processor generations available at their time\nof design\u2014were completely unsuitable to control the up to 12 (Envisat) payloads in\nparallel to platform management. And this was fact although all payloads them-\nselves already featured a dedicated Instrument Control Unit (ICU).\n\nFig. 9.1 Payloads connected directly to OBC. \u00a9 IRS, University of Stuttgart\n\n9 Payload Control Subsystem 273\n\n\n\nThis concept is also suitable for small satellites and the system characteristics\nthen will be the following:\n\n\u2022 The interfaces of the payloads do not necessarily need a certain standardization.\nPayloads and PMC are\n\n\u2013 either designed together for one mission as complements to each other. This\ne.g. is the selected solution for the first FLP based satellite from IRS, the\n\u201cFlying Laptop\u201d.\n\n\u2013 Alternatively the PMC is somewhat standardized but has a large scope of\ninterfaces so that several payloads can be connected to it\u2014and interfaces\nwhich are not needed for a particular mission simply remain unused.\n\n\u2022 A satellite with a dedicated PMC will have a higher complexity due to the\naddition of another module. This also increases the mass and the power con-\nsumption of the satellite.\n\n\u2022 The overall payload data handling subsystem complexity increases due to the\nadditional PMC which is to be controlled by the platform OBC w.r.t. system\ninitialization, boot process, reconfiguration and FDIR in general.\n\n\u2022 In case of availability of a dedicated PMC the testing of the interfaces of the\npayloads to the satellite\u2019s bus system can be conducted independently from the\nOBC. Such tests allow to detect problems prior to satellite level FlatSat tests.\n\n\u2022 Software for controlling payloads or handling payload data can be\npatched/updated in flight without interference with the satellite platform because\nno change to the OBC software needs to be applied.\n\n\u2022 The MMU in most cases is connected to or is embedded into the PMC to store\npayload mission product data. This means the OBC will not have to handle\npayload data, which keeps this function and associated high speed data inter-\nfaces out of the OBC software.\n\nIn conclusion this design approach is recommended in case of a mission with\nmultiple payloads which in addition\u2014at least in part\u2014are non intelligent ones and\nwhich do not provide standardized control and data handling interfaces.\n\nIn such a system design with dedicated PMC, the task allocation for payload\ncontrol still provides some flexibility.\n\nOne solution is that the PMC takes over full control of all payloads and mission\nproduct data handling. The platform OBC controls a stable platform attitude like\npermanent Nadir pointing and the payload mission timeline is executed by the PMC\n\nFig. 9.2 Payloads managed via PMC. \u00a9 IRS, University of Stuttgart\n\n274 P. Hagel et al.\n\n\n\nperforming activation, mode control and deactivation of all payloads. The platform\nOBC only intervenes in case where system resources like power or attitude are lost.\nThis approach is followed by the mentioned big satellites like Envisat, MetOp etc.\n\nThe contrary implementation is that the platform OBC performs full execution of\nthe mission timeline and commands the PMC to perform certain payload switching\nwhich the PMC then translates to the low level payload electronics commands.\nThe PMC in this approach is still the unit which fully manages the mission product\ndata. This approach is the selected solution for the first FLP based satellite from\nIRS\u2014the \u201cFlying Laptop\u201d.\n\n9.2 Payload Control on the First FLP Based Satellite\n\n9.2.1 PMC Hardware\n\nTo distinguish between a general PMC and the very particular implementation of\nthe first FLP mission, the PMC on board the IRS small satellite \u201cFlying Laptop\u201d is\ncalled \u201cPayload On-Board Computer\u201d (PLOC). The PLOC hardware architecture is\nbased on the concept as depicted in Fig. 9.3.\n\nIt is implemented with complete single redundancy and is operated in cold\nredundant mode. Both, the MMUs and the processing nodes are redundant, where\neach processing node however has its own MMU. The processing nodes\u2014called\n\u201cCentral Processing Node\u201d (CPN) are based on FPGAs as besides payload mode\n\nFig. 9.3 PLOC electrical block diagram. \u00a9 IRS, University of Stuttgart\n\n9 Payload Control Subsystem 275\n\n\n\nFig. 9.4 PLOC catia model.\n\u00a9 IRS, University of Stuttgart\n\nFig. 9.5 PLOC FM. \u00a9 IRS,\nUniversity of Stuttgart\n\n276 P. Hagel et al.\n\n\n\ncontrol they have to preprocess/compress mission product data (e.g. camera raw\ndata to JPEG image format).\n\nThe payloads on board the IRS \u201cFlying Laptop\u201d are three sensors and one\n\u201ctransmitter\u201d in the widest sense\u2014a space-to-ground laser terminal. All four pay-\nloads are connected to both sides of the PLOC for payload command/control. The\nmission product data lines of the 3 sensors\u20142 cameras and an AIS ship routing\nreceiver\u2014also are connected to both PLOC nominal and PLOC redundant.\n\nFigure 9.4 shows the stack of PLOC boards in their cassettes. The topmost\ncassette holds the Power-Board which supplies all CPN and MMU elements with\nthe required low-level voltages converted down from satellite power-bus voltage.\nThe nominal CPN is mounted in the next lower cassette. As stated the CPN is based\non an FPGA. The board has the following features:\n\n\u2022 Main FPGA for routing commands and processing payload data\n\u2022 Housekeeping FPGA for checking and commanding temperature alert, watch-\n\ndog, boot-up of main FPGA, SW update management\n\u2022 Flash memory chips to store up to three different images of the main FPGA SW\n\u2022 Flash memory, SRAM memory and DDR RAM for storing payload data before\n\nsubmitting it to the MMU\n\u2022 Multiple transceiver, receiver and transmitter chips for interfacing with the\n\ndifferent payload interfaces\n\u2022 Internal 10 and 80 MHz clocks\n\nFollowing the CPN further down comes the nominal MMU cassette. TheMMU in\nthe PLOC consists of an FPGA and severalflashmemory chips. It can store up to 4GB\nof data. Except for very few selected chips, the entire PMCandMMUare based on non\nradiation hard components for cost reasons. Thus a close monitoring of its health and\nproper functioning from ground is important once the satellite is in orbit.\n\nThe diverse interface printed circuit boards between CPN, MMU and external\nconnection shall not be discussed in the frame of this platform FOM. The PLOC\nFM is depicted in Fig. 9.5 and further details can be taken from [135].\n\n9.2.2 PMC Mainboard Elements and Function\n\nAs already mentioned the PLOC has two FPGAs on each CPN for computational\ntasks. Here the smaller one, the Configuration Controller (CC), consisting of a\nSpartan FPGA from Xilinx, is introduced.\n\nThe software for the Configuration Controller is stored on a radiation hard\nEEPROM onboard the CPN. This configuration of the FPGA was developed by\n\u201cFraunhofer Institut f\u00fcr offene Kommunikationssysteme\u201d\u2014FOKUS.1 Since the\nConfiguration Controller is only accessible by a connector directly on the board it is\nnot possible to update its software in orbit.\n\n1Formerly \u201cFraunhofer Institut f\u00fcr Rechnerarchitektur und Softwaretechnik\u201d\u2014FIRST.\n\n9 Payload Control Subsystem 277\n\n\n\nThe Configuration Controller itself is connected to the platform OBC via several\ndedicated status lines as well as via two differential lines for external communi-\ncation using UART protocol. While the status lines are regularly checked by the\nplatform OBC directly, the Configuration Controller is polled periodically by the\nplatform OBC via the differential UART line, to send the CPN board and main\nFPGA temperature, the consumed current, the voltage and the general status.\n\nThe UART line is not only used for housekeeping purpose but can also serve for\nupdating the CPN software of the main FPGA and for handling the different\nconfigurations of the main FPGA in flight during the \u201cFlying Laptop\u201d mission.\nThe CPN houses three flash chips to save the configuration of the main FPGA.\nThese memory banks are controlled by the Configuration Controller. The flash\nchips can be erased and new configurations for the main FPGA can be uploaded\nonto them. The new configuration can be loaded in segments which is essential\nconsidering that each configuration has a size of about 2.6 MB.\n\nAt start-up the Configuration Controller will automatically load one configura-\ntion onto the main FPGA which enables PLOC to be operational within one second.\nThe PLOC can handle its normal payload control tasks in parallel to simultaneous\nloading of a new configuration in a non operational Flash memory.\n\n9.2.3 PMC Software\n\nThe PLOC is one of the more intelligent PMCs. It is not only able to handle the\ncommunication between OBC and payloads but in addition performs payload data\nstorage into MMU and can also perform mission product data preprocessing. The\nprocessing of data includes:\n\n\u2022 Framing payload data into CCSDS Frames with Forward Error Correction in\npreparation for transmitting payload data to ground via a dedicated Data\nDownlink System (DDS) on board the \u201cFlying Laptop\u201d.\n\n\u2022 Framing payload data with Forward Error Correction for transmitting them to\nground via the Laser Link Terminal OSIRIS (payload 4).\n\n\u2022 Autonomous triggering of the camera systems for calibration purpose including\nevaluating of received images.\n\n\u2022 Quality analysis of images concerning usability.\n\n9.2.3.1 PMC Command/Control\n\nThe PLOC mainboard is the CPN and the CPN\u2019s main processing FPGA is a\nXILINX Virtex II Pro (VTX). It manages all communication between OBC and\nPayloads as well as processing of all payload data and their routing to MMU\n\n278 P. Hagel et al.\n\n\n\nrespectively to the Data Downlink System. For communication between OBC and\nVTX the following message frame is used (on-board TM, see Table 9.1).\n\nOn VTX this message will first be routed to their appropriate payload handler,\nvia the Device ID and the Module ID, where an action, according to the\nMessage ID, will be triggered\u2014see also Fig. 9.6.\n\nFor each payload there exists one device handler. In some instances there are\nmultiple modules of one device like the multiple color channels of the\nmulti-spectral camera payload MICS or the different lanes of the MMU. These can\nbe addressed via the Module ID. For all internal \u201cdevices\u201d like SW Info, Data\nRouting, Debugging etc. there exists a dedicated device ID. The module ID serves\nfor identifying to which of these entities the command has to be routed. This is in\ncompliance with the platform OBC software architecture where each device has\nmultiple states, which would not apply to internal entities on the VTX FPGA.\n\nFigure 9.6 shows the commanding architecture of the PLOC software. As can be\nseen in this diagram, there exists a command route to and from the OBC handler to\nevery other main entity in the software.\n\nTable 9.1 OBC PLOC communication message\n\nSTX Device ID Module ID Message ID Data CRC ETX\n\n1 Byte 1 Byte 1 Byte 1 Byte N Byte 1 Byte 1 Byte\n\nMMU\nMMU\n\nMMU\n\nPAMCAM \n\nOSIRIS Laser \nTerminal \n\nData Downlink \nSystem N \n\nData Downlink \nSystem R \n\nMMU\nBank 1 \n\nAIS Receiver \n\nMICS \nCamera \n\nMMU\n\nPAMCAM \nHandler \n\nOSIRIS Handler \n\nDDS Handler \n\nDDS Handler \n\nAIS Handler \n\nOBC Handler \n\nDebug \nFunctions \n\nData Routing \n\nSW Info \n\nOBC \n\nMMU Management \n\nMICS Management \n\nMICS \nHandler \n\nMMU\nMMU\n\nMMU\nHandler \n\nFig. 9.6 Command/control architecture of PLOC software. \u00a9 IRS, University of Stuttgart\n\n9 Payload Control Subsystem 279\n\n\n\nThe architecture\u2014as being implemented on an FPGA as network of gates\u2014is\ncapable to compute different processes in parallel. This means that the OBC handler\nis able to accept new commands while others are still being processed. The OBC\nhandler can also handle multiple responses from different devices at the same time.\n\n9.2.3.2 PMC Internal Mission Product Data Handling\n\nA matrix structure of all data sinks, data sources and data buffers is used to transfer\npayload data from one entity of the top level to another. During operations the\nmatrix can be re-arranged so that each data sink has a single data source. A data\nsource however can have several data sinks. By this means data can also be stored\nin multiple sinks with redundancy. Figure 9.7 depicts an example configuration\nwhere all data coming from the sensor payloads\u2014the multi-spectral camera MICS\n(red channel as example here), PAMCAM or AIS receiver\u2014are processed on the\nFPGA in parallel.\n\nAll data is handled by pipelining them from one entity to another. If a data\nsink\u2014like an MMU bank, the DDS transmission system\u2014is busy it signals the\nsource to stop sending data to prevent data loss. As this will not work for payload\nhardware like a camera or the AIS receiver, intermediate SRAM buffers are\nimplemented to guarantee a continuous data input sink for the hardware generated\nsignals. These synchronous SRAM elements act like FIFO buffers.\n\nAs with the commanding architecture, all data sinks and sources have a stan-\ndardized interface this means that a new entity for data handling can easily be\nimplemented. E.g. an entity for formatting data into CCSDS frames using forward\nerror correction can be implemented to the top level and added to the data matrix.\nThen the encoding mechanism for example can be placed between SSRAM 3 and\nDDS N depicted in Fig. 9.7.\n\nFig. 9.7 Configuration example for parallel data handling on PLOC. \u00a9 IRS, University of\nStuttgart\n\n280 P. Hagel et al.\n\n\n\n9.2.3.3 PMC Error Correction Functions\n\nAs there are no payloads on board the IRS \u201cFlying Laptop\u201d which are critical with\nreference to failure management in the sense that misoperation could damage the\npayload, the payload FDIR is reduced to pure power and thermal monitoring of the\npayloads through the platform OBC. Please also refer to Sect. 10.8.\n\nThe following failure detections are implemented:\n\n\u2022 CRC check during communication between OBC and PLOC as well as between\nCPN and MMU\n\n\u2022 Automatic triggering of panoramic camera PAMCAM (payload 1) initialization\nto check successful startup\n\n\u2022 I2C data-bus acknowledgment check between CPN and MICS camera\n\u2022 Timeout between CPN and all other devices which will send a response\n\u2022 Message ID check on each module handler\n\u2022 Triple module redundancy implementation of OBC handler with a voter to\n\nensure communication is working under any circumstance\n\nIf a failure is detected, a corresponding error message is submitted to the OBC.\nIn addition to those automatic detections the following checks can be initiated\nmanually:\n\n\u2022 Query of the VTX software Version (works as a simple ping).\n\u2022 Query info about a certain handler (e.g. amount of data in RAM, amount of\n\nmessages received by AIS receiver handler, etc.).\n\n9.2.3.4 PMC MMU Functions\n\nThe MMU can be accessed via four parallel interfaces. Each line has access to two\nFlash memory chips with a capacity of 500 MB each. The memory is structured into\n250 equally sized sectors. On command from CPN the MMU can save, read or\ndelete data sets stored in one of these sectors. The MMU has three modes in which\nit can save data.\n\n\u2022 Mode one will save all incoming data until there is a break in the incoming data\nstream.\n\n\u2022 Mode two will save all incoming data until an abort command is issued or the\nchip is full.\n\n\u2022 Mode three will save a user defined amount of data.\n\nAs result of complexity reduction of the MMU code the MMU needs to be told\nthe address of the memory sector into which it has to store the data.\n\n9 Payload Control Subsystem 281\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_10\n\n\n9.2.3.5 PMC Automated Control Functions\n\nOne autonomy function of the PMC is, that images taken from any camera have to\nbe checked concerning their brightness. Too bright or too dark images shall be\ndiscarded on board and a second one shall be taken with a different exposure time.\nIf the alternative image is considered acceptable by the onboard algorithm the\nimage data is stored.\n\nThe \u201cFlying Laptop\u201d satellite has the ability to collect AIS signals from ships\nwith its AIS receiver (payload 3). Simultaneously it is possible to scan the Nadir\nfield of view for ships by using the MICS camera system\u2014provided the view is not\nobstructed by clouds. For such a camera based observation the PLOC has to trigger\nthe MICS in regular intervals without guidance from OBC.\n\nSince neither the MMU nor the payload data link budget allow storage of a full\ntime continuous image recording, the images must be checked on board the satellite\nwhether ships can be identified on the received image. E.g. cloud obstructed images\nwill be identifiable due to their low contrasts and can be sorted out. All other images\nare stored into MMU.\n\nThe PLOC automatic operational mode can be activated by command from\nground via the platform OBC.\n\n9.3 Payload Control in Network-Centric Architectures\n\nThis chapter explains some limitations of the OBC FLP Generation 1 architecture\nw.r.t. coupling of avionics and payloads and describes the OBC architecture\nupgrade, which Airbus DS is pursuing with its partners IRS, Uni Stuttgart,\nGermany, 4Links Ltd., UK and Satellite Services B.V., NL for the FLP Generation\n2. The architecture baseline is a SpaceWire network.\n\nThis development is also targeting towards the integration of professional\nSpaceWire based Mass Memory and Formatting Units (MMFU) in contrast to the\nsimpler MMU embedded in the PLOC on board the FLP Generation 1.\n\nAlso the integration of dedicated high performance computing nodes for payload\ndata preprocessing on board the spacecraft is considered in this network centric\narchitecture.\n\nTo explain the final approach, this short chapter takes the reader through a\nsequence of examples of SpaceWire networks, starting with the network used on\nthe FLP, and adding SpaceWire routing switches to provide improved connectivity\nand performance while retaining the fault tolerance of the FLP architecture.\n\n282 P. Hagel et al.\n\n\n\n9.3.1 FLP Generation 2 SpaceWire Network\n\nFigure 9.8 shows the SpaceWire network as in the FLP Generation 1 design and in\nthe \u201cFlying Laptop\u201d. There are nominal and redundant pairs of OBC\nProcessor-Boards\u2014also called Single Board Computers (SBCs), the platform\nground/space link boards (CCSDS Boards), and the I/O-Boards\u2014also called\nRemote Interface Units (RIU). These are cross-strapped with SpaceWire links\ninside the OBC so that, even if one of each of the SBCs, CCSDS-Boards, or RIUs is\nbroken, the remaining one of each pair is connected and the system can continue to\noperate.\n\nThe payload computer and its instruments as well as the spacecraft avionics units\nin Fig. 9.8, however, are connected to the RIUs via a variety of different interfaces,\nmost of which are very slow. Even if some of the data could be much faster, all such\ndata would need to be processed by software on the SBC, which itself would limit\nthroughput. This is a suitable design for a small satellite with low performance\ninstrumentation, but the limitations are obvious.\n\nFigure 9.9 shows the same SBCs, RIUs and Downlinks as Fig. 9.8, but adds a\nsingle SpaceWire routing switch. Paths via the routing switch connect all the units\ntogether so that again, even if one of each of the SBCs, Downlinks, or RIUs is\n\nFig. 9.8 Simplified block\ndiagram of the FLP\ngeneration 1 architecture.\n\u00a9 4Links Ltd\n\n9 Payload Control Subsystem 283\n\n\n\nbroken, the remaining one of each pair is connected and the system can continue to\noperate. This might be seen as a single point of failure but, if the routing switch is\nbroken, there are still direct connections between the SBCs and the RIUs and\ndownlinks.\n\nIf the routing switch and the nominal RIU and Downlink were broken, the\nredundant RIU and Downlink would be able to operate (and similarly if nominal\nand redundant were reversed).\n\nWhile this might be seen as a slight reduction in fault-tolerance compared with\nthe cross-coupling of the network in Fig. 9.8, a benefit from the routing switch is\nthat higher-speed data could now be passed through the routing switch without\ngoing via the SBC. This might need a small increase in the functionality of the RIU\nand/or the Downlink, but it is possible that the RIU could be instructed to send\nSpaceWire packets to the Downlink rather than back to the SBC. The routing\nswitch also provides a potential connection between the two SBCs.\n\nFigure 9.10 shows the single routing switch replaced by a pair of five-port\nrouting switches. Loss of the redundant routing switch or SBC still enables the\nnominal SBC to access either RIU and either Downlink, and loss of the nominal\nSBC and redundant routing switch leaves the redundant SBC able to access the\nredundant RIU and Downlink either with the direct links or via the nominal routing\n\nFig. 9.9 Payloads and\navionics on a single routing\nswitch. \u00a9 4Links Ltd\n\n284 P. Hagel et al.\n\n\n\nswitch. The nominal RIU has a path via the redundant routing switch to the nominal\nDownlink, (and, again, similarly if nominal and redundant were reversed).\n\nFurthermore this implementation opens up the opportunity to connect SpaceWire\nequipped payload instruments or intelligent SpaceWire equipped avionics units like\nGPS or STRs.\n\nUsing routing switches with more links, and/or dispensing with the direct con-\nnections from the SBCs, might offer improvement.\n\nFigure 9.11 shows what is perhaps the simplest and most regular network, with\ntwo routing switches, each connected to all the units that are interfaced by\nSpaceWire, in the same way as the single routing switch of Fig. 9.9.\n\nAs in the network of Fig. 9.8, either RIU can be broken, either SBC can be\nbroken, either Downlink can be broken and (in this case) either routing switch can\nbe broken, yet the remaining units are fully connected and the network will con-\ntinue to work. There are also redundant paths between the RIUs and the Downlinks\n(which may be useful for high-data rate instruments), and between the two SBCs\nfor more computing capability (when there is a need and there is adequate power).\n\nFigure 9.12 now for the first time depicts a design where instruments and\navionics are separated and where instruments are interfaced exclusively with\nSpaceWire\u2014together with a Mass Memory and Formatting Unit (MMFU),\n\nFig. 9.10 Payloads and\navionics coupled via\nredundant routing switches.\n\u00a9 4Links Ltd\n\n9 Payload Control Subsystem 285\n\n\n\na Payload Data Processing Unit, and a routing switch to connect these additional\ncomponents to each other and to the platform routing switches\u2014via which they\ncould be controlled by the SBCs. The payload sub-net additionally can include a\nfast science data downlink equipment transmitting in X-Band or Ka-Band. The\nclear separation of the SpaceWire networks also permits to run both sub-nets\u2014\navionics and payloads net\u2014with different SpaceWire clock speeds. The platform\navionics usually will be fully satisfiable with a SpaceWire data rate in the range of\n10\u201315 MBit/s while the payload sub-net presumably will require much higher\nthroughput performance in the range of 100 MBit/s.\n\nIn Fig. 9.12, each Payload instrument still only has a single SpaceWire link.\nWhile the Payloads perhaps have less need for redundancy than the Platform, it may\noften be preferable for the Payloads each to have two SpaceWire ports, and to add\nanother routing switch, as shown in Fig. 9.13.\n\nThere are many variations on the network of Fig. 9.13. There may be some\npayload instruments with a single SpaceWire port as in Fig. 9.12. The Mass\nMemory and Formatting Unit and the Payload Data Processing Unit\u2019s functions\nmight be combined into a single unit, and/or there might be redundant copies of\nthem to provide fault-tolerance and/or higher throughput of payload data.\n\nThere may be many more payload instruments, which could be handled either by\nrouting switches with more ports, or by using several four-port or eight-port routing\n\nFig. 9.11 Routing switches\nwith more links improving\nredundancy. \u00a9 4Links Ltd\n\n286 P. Hagel et al.\n\n\n\nswitches to make a larger routing switch. For some satellites, two routing switches\nwith many SpaceWire ports, could each connect, as in Fig. 9.11, to all the\nSpaceWire units and/or instruments\u2014whether platform or payload.\n\nThere is often a trade-off between using larger routing switches to minimize the\nnumber of SpaceWire links, or using more, smaller, routing switches which would\nneed more SpaceWire links but could provide improved fault-tolerance and/or\nlower total cable/harness mass.\n\n9.3.2 FLP Generation 2 Target Architecture\n\nFrom Fig. 9.13 it is clearly visible that each Processor-Board\u2014or \u201cSBC\u201d\u2014in such\nan OBC has to feature a sufficient number of SpW interfaces\u2014or preferably should\nfeature a routing switch directly on the board.\n\nFig. 9.12 Payloads coupled via separate routing switch. \u00a9 4Links Ltd\n\n9 Payload Control Subsystem 287\n\n\n\nA particularly elegant design is followed by Airbus DS and its partners for an\naccording upgrade of the FLP Generation 1 OBC. As it was already published in\n[146] the design foresees to use a Processor-Board featuring a dual-core LEON3FT\nprocessor (a Cobham Gaisler GR712 [74]) plus an 8 port SpaceWire routing\nswitch directly mounted on the board (see Fig. 9.14). The Processor-Board\n(iOBC-A1-LB01-2.0\u2014see [75]) comes from the consortium partner Satellite\nServices B.V., Katwijk, Netherlands.\n\nThe board offers the possibility to connect via the on-board SpaceWire routing\nswitch the classic CDPI units like CCSDS-Boards and I/O-Boards (digital RIUs)\nplus SpaceWire equipped avionics units like future GPS receivers, STRs, IMUs or\nsimilar.\n\nAs the GR712 processor features additional SpaceWire interfaces, the payload\nchain can be connected via a dedicated separate SpaceWire network\u2014which then\nalso can be run at a different clock speed than the avionics sub-net.\n\nIn this architecture the payload sub-net routing switches come from 4Links Ltd.,\nMilton Keynes, UK who already produced the I/O-Boards (hardware and firmware)\nand the CCSDS-Board hardware for the OBC of the FLP Generation 1.\n\nThis FLP Generation 2 OBC design\u2014although only featuring one processor\nper board\u2014still realizes the concept of a PMC-managed payload system\n\nFig. 9.13 Payloads in separate SpW sub-net. \u00a9 4Links Ltd\n\n288 P. Hagel et al.\n\n\n\n(please refer to Fig. 9.2), as the GR712 is a dual-core processor. In the design\npresented in [146] the avionics control software will be run on one core of the\nGR712 and will be a close derivative of the FLP Generation 1 OBSW. The payload\ncontrol part will run on the 2nd processor core. Cross-communication from the\nCore Data Handling to the payload control can be achieved rather easy via the\nGR712\u2019s internal inter-processor bridge.\n\nFor the payload data processing chain Airbus DS is aligning this development\nwith an initiative running in cooperation with DLR, where various high speed\npayload data processing computer architectures are evaluated\u2014like LEON4,\nPowerPC and ATOM. For more details on this study called \u201cOn-Board Computer\nSystem-Architektur\u201d (OBC-SA) please refer to [148, 149].\n\nFig. 9.14 FLP generation 2 system outline. \u00a9 Airbus DS\u2014from [146]\n\n9 Payload Control Subsystem 289\n\n\n\nChapter 10\nFailure Detection, Isolation and Recovery\nConcept\n\nRouven Witt and Jens Eickhoff\n\nAbstract This chapter is one of the most complex ones and covers the platform\nFailure Detection, Isolation and Recovery (FDIR). It starts with explaining the\nFDIR concept and the system redundancies. Next FDIR Events, their flow in the\nonboard software and their management are explained. The spacecraft reconfigu-\nration functionalities are treated in detail, in particular the reconfiguration of the\nonboard computer elements and the power subsystem as well as the mode fallback\nhierarchy for the diverse failure types. The FDIR specifics for each subsystem are\nexplained and also the handling of device hardware failures. Software constants and\nFDIR limits are provided in the book\u2019s annexes.\n\nKeywords Failure detection, isolation and recovery (FDIR) ? FDIR concept ?\nRedundancies ? FDIR events ? Spacecraft reconfiguration ? FDIR techniques for all\nsubsystems ? Device FDIR ? Failure propagation ? Satellite safe mode\n\nR. Witt (&)\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\n\nJ. Eickhoff\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_10\n\n291\n\n\n\n10.1 General Principles\n\n10.1.1 Applying ECSS Terminology\n\nThe goal of on-board Failure Detection, Isolation and Recovery (FDIR) is to\n\n\u2022 detect failures or malfunctions in devices, assemblies, subsystem or system\ncontrol\n\n\u2022 to isolate the failure root cause to avoid propagation and endangering the\nmission through follow-up effects and\n\n\u2022 to initiate according recovery actions automatically or\n\u2022 to inform the ground operator that an unrecoverable state has been reached.\n\nRequirements can be expressed formally applying the ECSS-E-ST-70-11C [14]\nstandard for Space Segment Operability. In this standard, different forms of autonomy\nare assigned to a level number between 1\u20134, where level 4 corresponds to systems\nbeing almost fully capable to perform autonomous operations, for example through\nautomatic re-planning. Different fields that are considered for the autonomy definitions\nare represented by a letter code in the ECSS standard. Combining the letters and\nnumbers, the pursued or achieved autonomy of a spacecraft can be defined. In the\nfollowing, the FLP platform goals are brought in reference with [14]\u2014expressing the\nmission autonomy level for mission execution, data handling and fault management:\n\nMission Execution\n\n\u2022 Level E2 Execution of pre-planned, ground-defined, mission operations\non-board. Capability to store time-based commands in an on-board scheduler.\n\n\u2022 Level E3 Execution of adaptive mission operations on-board. Event-based\nautonomous operations.\n\nFLP OBSW and FDIR will not be able to plan or re-plan an operational scenario\non their own. Such a level of autonomy is beyond the goals of typical FLP based\nmissions. Most mission scenarios will be realized via predefined mission timelines.\nHowever, the mission scheduling functions have to be able to react to certain events\nthat are preconditions that have to be fulfilled before a sequence can continue.\n\nData Management\n\n\u2022 Level D2 Storage of on-board of all mission data, i.e. the space segment is\nindependent from the availability of the ground segment.\n\n\u2013 Storage and retrieval of events and reports (as from D1).\n\u2013 Storage management (as from D1).\n\u2013 Storage and retrieval of all mission data.\n\nThere is a dedicated memory area in the FLP OBC I/O-Boards that is used to\nstore all relevant HK and event data. The storage of HK telemetry will be\n\n292 R. Witt and J. Eickhoff\n\n\n\nconfigurable from ground through PUS services to allow adaption to particular\nphases of the mission. During LEOP it will be necessary to store device HK with a\nhigher frequency to allow a detailed observation of on-board processes. Only Safe\nMode components are active in LEOP.\n\nDuring the Commissioning Phase, HK and Event TM of to be commissioned\ndevices will be stored in detail to allow their thorough observation on the first\nstart-up. After successfully completing these critical initial phases, many different\nTM parameters will be stored due to many active devices during normal operations,\nbut their storage frequency will be significantly reduced.\n\nFault Management\n\n\u2022 Level F2 Re-establish nominal mission operations following an on-board\nfailure.\n\n\u2013 Identify anomalies and report to ground segment (as from F1).\n\u2013 Reconfigure on-board systems to isolate failed equipment or functions (as\n\nfrom F1)\n\u2013 Place space segment in a safe state (as from F1).\n\u2013 Reconfigure to a nominal operational configuration.\n\u2013 Resume execution of nominal operations.\n\u2013 Resume generation of mission products.\n\nThe main mission statement to be considered for the design of the system FDIR\nfor the FLP is \u201cSingle Failure Tolerance\u201d, throughout all operation. This means any\none single failure occurring on-board must not lead to the loss of the ability to\nperform operation or even loss of the entire mission. \u201cReconfigure to a nominal\noperational configuration\u201d has to be accomplished, which is the main task of the\nFDIR system. The Safe Mode is the standard fall-back mode for severe events.\nHowever, if possible, the operation in Idle Mode or any higher operational mode are\nto be continued after one failure (see also fallback transitions in Chap. 2 and Fig. 2.1).\n\n10.1.2 FDIR Requirements\n\nThe idea of the FLP FDIR concept and implementation follows the paradigms that\nthe OBSW is built on. As described in Sect. 3.1 one of the main ideas of the OBSW\nimplementation as object-oriented is the encapsulation of knowledge. Specific\ninformation is encapsulated in dedicated objects. For example a deviceHandler\nstores information about how the communication to its respective device has to look\nlike. This information is not stored anywhere else in the system. All communication\nwill be routed through that deviceHandler, except for emergency reasons when\ndirect ground interaction is required.\n\nWhile only the device handler (DH) knows how the communication with its\ndevice has to look like, only the deviceHandler object has the ability to decide\n\n10 Failure Detection, Isolation and Recovery Concept 293\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nwhether communication with the device was successful or not. If a deviceHandler\ndetects that there was a failure in the device communication, the data from the\ndevice will be marked invalid in the datapool.\n\nIf measurement values of a device are marked invalid, the corresponding sub-\nsystem controller will not use these as input data. Instead it will use other available\ndata or will signal that it cannot perform the intended operation or algorithm.\n\nFor most of the controllers, a sensor fusion or sensor sanity check will be\nperformed in the controller as shown in Fig. 3.9. If a deviceHandler could not detect\na failure in its device communication, the protocol was correct. However, the\nmeasurement values might still be corrupted. Hence, the sensor sanity check and\nsensor fusion part of a controller will detect if values are drifting strongly or exceed\na limit and will mark the according values as invalid. The controller algorithm again\nwill perform the computation with other available measurement values or will\nsignal that it cannot perform the intended operation. It will most likely also signal\nthat it cannot keep its mode and will be set to the next fallback mode.\n\nThis approach has the advantage of not triggering Events of a single failing\ndevice on several different levels. FDIR does not need to correlate different Events\nthat point to the same fault because the affected deviceHandler and controller\n(CTR) should not mark the same device as broken at the same time. This also\nreduces the danger of spamming the Event TM packet store.\n\nIf a device is reported as faulty, FDIR will attempt to power down the device but\notherwise keep operations going. Depending on the device this might be possible if\nit is the first failure of that kind. After some time the device will automatically be\npowered up again by its deviceHandler and will be re-included into nominal\noperation. Depending on its behavior, the device will continue operation, or if\nmalicious again, the device will be powered down permanently by FDIR until\nfurther examination has been performed by ground. The first failing device should\nnot need to force a transition of the entire spacecraft into Safe Mode.\n\nThe goals of the FDIR are\n\n\u2022 to detect invalid sensor information,\n\u2022 the identification of faulty devices,\n\u2022 the emergency device switch off,\n\u2022 the S/C reconfiguration to continue an ongoing operational scenario,\n\u2022 and to inform the ground about taken actions and identified occurrences.\n\nFDIR cases that require a Safe Mode switch are reached when\n\n\u2022 the software stops running and resets itself or stops running at all,\n\u2022 the communication between OBC and PCDU is interrupted such that the PCDU\n\ntriggers reconfiguration of the OBC,\n\u2022 several redundant devices are faulty,\n\u2022 the temperature of Idle Mode devices leave their specified range and need to be\n\npowered down,\n\u2022 the SoC of the battery drops significantly or if\n\n294 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n\u2022 a fuse switch is triggered automatically in the PCDU due to a malfunction or\nshort in the electrical system.\n\nIn case where there is no way to continue nominal operation, the system will\nswitch to Safe Mode with coarse sun pointing and minimized power consumption.\nThis mode will be held until the spacecraft conditions have improved. As soon as\nthe recovery can be confirmed by ground, instructions from ground will be required\nto switch back to nominal operations from that point. The system will not conduct a\nswitch to a higher mode by itself. In Safe Mode, only the following components are\nactive:\n\n\u2022 OBC (Processor-, IO-, and both CCSDS-Boards)\n\u2022 PCDU,\n\u2022 TTC (Transmitter, and both Receivers),\n\u2022 MGM (nominal and redundant),\n\u2022 MGT (both coils during detumbling) and\n\u2022 Sun sensors (connected via PCDU).\n\nIn case of a catastrophic power emergency, meaning the battery SoC has\ndropped below a critical level, the entire satellite will be set to \u201cSleep Mode\u201d with\nall devices powered down and only the PCDU observing the battery\nState-of-Charge, equal to the PCDU/System Launch Mode. Recovery will be\nperformed automatically by the internal PCDU controller after reaching a voltage\nlevel of 21.5 V through random tumbling and randomly pointing to the sun to\ncontinue operations until the MiniOps Mode is reached.\n\nThe core systems OBC and TTC will not be powered again before the system\nhas reached this minimum power recovery status.\n\nAfter OBC boot and OBSW boot the OBSW will automatically initiate the ACS\nDetumble and furthermore TCS Survival Mode will be entered attempting to reach\nthe Safe Mode.\n\n10.1.3 Fault Tolerance Through Redundancy\n\nTo achieve failure tolerance, all components that could fail during launch or\noperation of a S/C need to be available in redundancy. As the nature of things is that\nthey all could potentially fail, all components (or at least all essential components)\nneed to be available in redundancy. The realization of redundancy on board an FLP\nbased spacecraft is described in Sect. 10.1.4.\n\nHowever, it is not reasonable to have all systems powered and running at the\nsame time. First of all, this significantly increases power consumption, which is to\nbe avoided as far as possible, not only for a small satellite. Secondly, having two\nidentical units operating at the same time (hot redundancy) might cause interfer-\nences on data connections.\n\n10 Failure Detection, Isolation and Recovery Concept 295\n\n\n\nThis means that depending on their importance and task, some units are to be\noperated in cold and some units in hot redundancy. For both cases there needs to\nexist an instance that observes the subsystem. This is illustrated in Fig. 10.1. In case\nof cold redundancy, an independent master unit needs to observe the currently\nrunning unit and to determine its correct function. If the correct function is no\nlonger guaranteed, the master unit needs to power down the nominal unit and to\npower up the redundant unit. For hot redundancy, there needs to be an observing\nmaster unit as well, especially if a fusion of data is done. One unit that delivers\nmalicious data could corrupt the complete subsystem\u2019s result. So a master unit\nneeds to make sure that all components of a subsystem are working properly. If the\ncorrect function of one device is no longer guaranteed, the master unit needs to\nswitch off that unit.\n\nConsequently, this mentioned master unit\u2014the instance that decides to switch\nunits or to power them down\u2014is the FDIR object in the OBSW. However, the art\nof FDIR is to determine, what input of or about a device can be accessed, and how\nthis input can be evaluated to decide whether a device is working properly, or needs\nto be switched off.\n\nBesides spacecraft FDIR in the form of hardware reconfiguration/hardware\nFDIR or software-initiated recovery actions/software FDIR, there will be FDIR\ncases that require ground interaction. This FDIR instance will be referred to as\nground FDIR.\n\nMaster\n\nComp. N\n\ndata\n\ninvalid data\n\nMaster\n\nC1 C2 C3C0\n\ndata\n\nData Fusion\n\npower\n\npower\n\nMaster\n\nComp. R\n\ndata\n\npower\nMaster\n\nC1 C3C0\n\ndata\n\nData Fusion\n\npower\n\nFig. 10.1 Redundancy switch\u2014cold redundancy and hot 3-of-4 redundancy. \u00a9 IRS, University of\nStuttgart\n\n296 R. Witt and J. Eickhoff\n\n\n\n10.1.4 Redundancy on FLP\n\nAll platform main bus components are available in redundancy. The ACS Safe\nMode components MGM and MGT exist in dual cold redundancy, meaning two\nequally designed units are available for operation. If a malfunction is detected, the\nredundant unit will be activated and the former active unit will be passivated or\npowered down. For Idle and Pointing Mode components RW, FOG, GPS and STR\ndifferent redundancy designs have been selected. RW- and FOG-system are based\non four units working at the same time in triangular configuration. A full 4 unit\nconfiguration is available in nominal case and the 3-out-of-4 voting is available in\ncase of either unit failing. The erroneous unit can be identified directly and the loss\nof one unit can be compensated by the remaining three. The GPS receivers are\navailable in triple-redundancy due to the purpose of the \u201cGENIUS\u201d experiment on\nthe first FLP satellite\u2014the \u201cFlying Laptop\u201d. This experiment requires three hot\nredundant receivers. Pure position acquisition is also possible with less receivers\u2014\nsee later Sect. 10.6.2. The STR system is also based on two redundant camera head\nunits, which will be operated at the same time for a higher accuracy of attitude\nknowledge but can be used in single mode as well.\n\nFor payload operations two payload computers (PLOC) and two Data Downlink\nSystems (DDS) are available in cross-coupling since they are essential in all pay-\nload operation scenarios.\n\nDuring nominal operation, two hot redundant S-band frequency receivers are\noperated at all times to allow contact in case one receiver is not working properly.\nThe transmitter will only be activated on-board when contact is expected, but can\nalso be powered or unit-switched by ground via High Priority Commands if in\nrange and if deemed necessary. These units\u2019 monitoring and redundancy man-\nagement will be performed by the Onboard Computer.\n\nAs explained in Sect. 4.2 the Onboard Computer design is based on two cold\nredundant Processor-Boards and I/O-Boards and who hot redundant (communica-\ntion pre-processor CCSDS-Boards). Cross-coupling of the Processor-Boards to the\nCCSDS-Boards and I/O-Boards allow switching of any of these units in case of a\nmalfunction. If through a malfunction in either Processor- or I/O-Board the com-\nmunication to the PCDU is interrupted, the latter will initiate a reconfiguration\nroutine to restore OBC functionality. More details are provided later in Sect. 10.2.2.\n\nThe PCDU in itself has two internal microcontrollers and a watchdog self-check\nsystem to ensure proper operation. PCDU and OBC being the Combined Data and\nPower Management Infrastructure (CDPI) will be detailed in the following\nchapters.\n\n10 Failure Detection, Isolation and Recovery Concept 297\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\n10.1.5 Three Stages of Device Failure Detection\n\nThere are basically three stages of failure detection for devices depicted in Fig. 10.2:\n\n\u2022 The first stage is control and observation of a device\u2019s power consumption. As\ndescribed in detail in Sect. 10.3 the actual measured power consumption of\ndevices is compared to their expected power consumption in the power control\nsystem. If a limit is violated, the device is reported to have an unexpected\nbehavior.\n\n\u2022 The second stage of device monitoring happens in the deviceHandler object. If a\ndevice sends a response that is formally incorrect, the deviceHandler issues a\nfailure report. But\u2014and this is a paradigm for the FLP FDIR\u2014devices are not\nshut down necessarily upon their first formal monitoring violation. The mech-\nanism for device failure handling is provided in Sect. 10.4.\n\n\u2022 The third step of failure detection is encapsulated in the subsystem controller.\nFigure 3.9 illustrates that before device measurements are used to execute the\ncontrol algorithms, a sensor fusion and sanity check is performed to determine\ntheir validity. The approaches for the third FDIR step for each subsystem are\nprovided in the corresponding subsystem chapters later.\n\nWhenever one of these three stages detects an unexpected behavior in one of the\ndevices, an Event message is generated and the device is marked as faulty. This\navoids that failure messages are generated in several stages of the device failure\ndetection tree. Separating the failure detection for devices into these three steps pays\nresults from the encapsulation of functions into the functionally corresponding\nOBSW objects. It decreases the complexity of failure handling and simplifies\nimplementation and testing of the failure management system.\n\n10.1.6 System Failure Detection\n\nIf a device shows an unexpected behavior and needs to be deactivated, the system\nwill attempt to continue operations. As mentioned in Sect. 3.2.3 the knowledge\nabout the device redundancy concept is stored in the subsystem assembly. This\nmeans that\u2014as illustrated in Fig. 3.8\u2014the assembly object checks whether there is\n\n32\n\nFig. 10.2 Three stages of device failure detection. \u00a9 IRS, University of Stuttgart\n\n298 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nstill a sufficient amount of devices to perform operations, otherwise it reports that it\ncannot keep its mode, which will lead to a switch to the next lower S/C mode.\nException of this behavior is the I/O-Board assembly which will always activate at\nleast one instance.\n\nSystem surveillance such as temperature and power consumption is performed in\nthe controller objects. If temperature or SoC limits are violated, the controllers\ngenerate Events and FDIR will take according actions.\n\n10.1.7 Event Utilization\n\nThe Packet Utilization Standard [13] defines four different levels of on-board\nEvents, namely normal progress Events, and low, medium and high severity\nwarnings. Event packets are generated by on-board processes identified by their\nobject-ID. If the Event telemetry is activated in the event reporting service (see\nSect. 2.4), the Events are also linked down as Service 5 telemetry with the sub-\nservice indicating the Event severity. The Event severity levels are used on the FLP\nplatform as follows:\n\nSeverity Level 0 (Normal Progress, INFO) Events indicate an information event\ninitiated through nominal actions happening on-board for observation in the ground\nstation. Possible Events show:\n\n\u2022 Boot Event from software\n\u2022 Successful powering of the payload computer\n\u2022 Successful mode change of the system or a subsystem/device\n\u2022 Heater activation and deactivation for thermal control\n\u2022 System or subsystem mode switch.\n\nSeverity Level 1 (Low Severity, LOW) Events shall indicate that somewhere in\nthe system, a failure has been detected. The failure will be transmitted to FDIR for\nfurther investigations or to determine actions. This type of Event can be reported\nfrom any level of OBSW objects (device handlers, assemblies, subsystems, etc.).\nPossible scenarios are:\n\n\u2022 Communication failures with equipment,\n\u2022 Malfunction of heaters, sensors, etc.\n\nSeverity Level 2 (Medium Severity; MEDIUM) Events will be generated by\nFDIR usually after processing of (several) Severity Level 1 Events and taking\nrecovery actions. Possible scenarios are:\n\n\u2022 A device is switched off due to failures.\n\u2022 Devices have been switched off due to insufficient available power.\n\n10 Failure Detection, Isolation and Recovery Concept 299\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nSeverity Level 3 (High Severity, HIGH) Events will be generated by FDIR and\nindicate events of the highest possible severity. Events of level 3 indicate possible\ndamage to the mission. Possible scenarios are:\n\n\u2022 Battery State-of-Charge is low (Disconnection of non-essential loads).\n\u2022 Safe Mode needs to be activated.\n\u2022 Detection of a mission critical failure.\n\n10.1.8 Event Flow\n\nThe FLP operation concepts is based on PUS Event Reporting to achieve visibility\nof processes executed on-board. Following this concept, all failure messages are\nassumed to be Events of a certain severity, and therefore, failure handling on board\nthe satellite is based on Events, as well. This allows for a common way of handling\nall Events and makes it easy to create transparency of on-board processes for the\nground operator.\n\nIn many former FDIR concepts, oftentimes a hierarchy has been realized to\nhandle different kinds of failures on different hierarchy levels. Examples are cited in\n[158] and in [140]. A failure in such systems is solved on its level or is forwarded to\nthe next higher instance if not solved. For the FLP implementation a different\napproach has been selected.\n\nThe basic concept of the FLP FDIR software implementation is that the detection\nof failures is distributed throughout all levels of software, all of which have different\nknowledge, and thus, can detect different kinds of failures. These failures lead to the\ngeneration of failure Events at the according point.\n\nFig. 10.3 Reduced diagram\n\u2014Failure Event routing in\nOBSW. \u00a9 IRS, University of\nStuttgart\n\n300 R. Witt and J. Eickhoff\n\n\n\nA centralized global FDIR instance is responsible for collecting all reported\nfailure Events. Derived isolation and recovery actions will be performed by one\ncentralized object after evaluating all incoming failure Events from one cycle. This\nis illustrated in Fig. 10.3 which is a reduction of Fig. 3.1, but with more details on\nthe routing of failure events.\n\nFor example all formal knowledge about a dedicated equipment\u2014such as for\nSTR or MGM being their respective protocols, boot times, CRC mechanisms, etc\u2014\nis stored in the corresponding deviceHandler software object. So being the first\ninvolved instance during device communication, these handlers detect formal errors\nor whether the device itself reports invalidity within their response message. These\ndeviceHandler objects generate a failure detection event with PUS Srv. (5,2)\nSeverity low, stating for example \u201cMISSED_REPLY\u201d. All device handler objects\nhave the ability to report such a failure Event. All failure Events will be queued up\nin a Failure Event FIFO where they are waiting to be processed. When a device\nanswers formally correct no failures will be detected by these basic deviceHandler\nobjects.\n\nWhen a device delivers a correct response packet, but the delivered data is\ncorrupted, this has to be analyzed on a higher level of knowledge. This kind of\nknowledge, such as value limits, redundancy or voting, etc. is stored in the con-\ntroller sensor management as illustrated in Fig. 3.9. If a sensor is found to be\nerroneous, meaning the delivered value is not reasonable or voted to be wrong, a\nfailure detection Event is generated. This follows the same principle as for the\ndeviceHandler objects except that the knowledge is a different one. All respective\nobjects with higher device knowledge have the ability to generate failure Events.\nThese failure Events also have PUS Srv. (5,2) Severity low and will be queued up in\nthe same Failure Event FIFO.\n\nThe flow of events can be taken from Fig. 10.3. All generated failure Events will\nbe queued up in one dedicated Failure Event FIFO. This queue will be consecu-\ntively processed by the central system FDIR object. This FDIR object examines the\nEvents one after another and determines the corresponding isolation and recovery\nactions that have to be taken for further system operation continuation or alterna-\ntively for a controlled switch to the spacecraft Safe Mode. For most of the possible\nfailure Events, three approaches of handling are considered:\n\n(a) power down a device after a defined number of confirmations\n(b) instantly power down devices\n(c) instantly switch to satellite Safe Mode\n\nCase (a)\nThis approach is mainly applied with device communication. If protocol errors are\nreported, it is considered tolerable to occur from time to time during nominal\noperation due to environmental influence/disturbance. In such case, no immediate\nrecovery actions are taken. Devices will be only be switched off, if a defined\nnumber of such errors is reported within a certain time period. Then, at least one\nrestart is considered reasonable before marking a device as permanently\nnon-healthy.\n\n10 Failure Detection, Isolation and Recovery Concept 301\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nFor device communication a distinction has to be realized since device errors\nmight signal a misbehavior of the device itself. But it is also possible that a device\nerrors is caused by a misbehaving OBC I/O-Board. Therefore, Events from devices\nwill be stored before an actual evaluation takes place. The mechanism for device\nfailures is explained in Sect. 10.4.\n\nCase (b)\nThere exist situations and resulting Events that make the immediate switch-off of an\nequipment mandatory. An example would be the equipment temperature exceeding\nthe permitted operational range and the Event COMP_T_OUT_OF_OP_RANGE.\nIf such an Event is identified consequently the device will be powered down.\n\nCase (c)\nThere will be Events that require an immediate switch to the satellite Safe Mode.\nAn example is reaching of a critical State-of-Charge for the battery.\n\nEvents that can not be covered by options (a) through (c) might require particular\nreactions that can not be generally described and are introduced for their individual\nsubsystems in following chapters.\n\n10.1.9 Failure Event Management\n\nAll Events from one cycle will be processed one after the other. In contrast to\nformer designs, only one instance is responsible and has the authority for the\nexecution of recovery actions. This avoids several instances attempting to perform\nactions that have influence onto another.\n\nAn exemplary flow of Events of different severity is provided in Fig. 10.4. The\nflow considers the following case of a system transition to Idle Mode. As intro-\nduced in Fig. 10.3, all Events are routed to the EventManager and are forwarded to\nthe configured targets:\n\n\u2022 In the transition to Idle Mode, the System powers up Reaction Wheel 0.\n\u2022 DH::RW0 (? reaction wheel deviceHandler object) reports a successful boot of\n\nthe device with the Event BOOT_SUCCESS[rw0]. This is an information Event\nwith severity level INFO and provides as reporting object the objectID of the\nRW0 instance.\n\n\u2022 DH::RW0 attempts communication with the reaction wheel device.\n\u2022 The communication is interrupted due to some failure and no response from the\n\nreaction wheel device is received.\n\u2022 DH::RW0 issues an Event MISSED_REPLY[rw0] with severity LOW.\n\u2022 This Event will be forwarded to FDIR which decides to reboot the reaction\n\nwheel device. For easier tracking by ground, FDIR issues the Event REBOOT\n[fdir, rw0] which is stored in an Event package store. Additional information in\nthis Event is the reporting object [fdir] and a parameter [rw0]. Since restarting is\n\n302 R. Witt and J. Eickhoff\n\n\n\nFig. 10.4 Event flow sequence\u2014Possible scenario. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 303\n\n\n\nnot a detection of a failure, but an isolation and recovery attempt, the Event\nREBOOT[fdir, rw0] has severity MEDIUM (compare Sect. 10.1.7).\n\nNote: In the actual implementation, the FDIR instance includes a mechanism\nthat ensures tolerance to sporadic interruptions and will not reboot a device at\nevery interruption but only if device communication could not be established for a\nlonger period (introduced in Sect. 10.4).\n\n\u2022 Upon reboot of the reaction wheel device, the DH attempts to re-establish the\ncommunication. In the current example, the communication is still interrupted\nand the DH::RW0 will issue the Event MISSED_REPLY[rw0] again.\n\n\u2022 If the reboot of a device does not prove to be successful, FDIR decides that a\ndevice is damaged and will power it down permanently. It also generates the\nEvent FAULTY[fdir, rw0]. This is an isolating action and has severity\nMEDIUM. The health state of reaction wheel 0 will be set to UNHEALTHY.\nThis state can only be re-established through interaction from ground.\n\n\u2022 Reaction wheels 1, 2 and 3 are assumed to work fine.\n\u2022 The system will still be able to operate in Idle Mode at this point.\n\u2022 At a later point, the power controller CTR::PSS detects a low State-of-Charge in\n\nthe battery and generates the Event CRITICAL_SOC with severity HIGH.\n\u2022 The Event will be forwarded to FDIR.\n\u2022 FDIR decides that the system power consumption needs to be reduced and\n\ncommands the SYSTEM to transition the spacecraft into Safe Mode. For better\nvisibility by ground the FDIR logs this action with the generation of the Event\nSAFE_MODE. This Event has severity level HIGH (called \u201cSoftware-induced\nDisconnection of Non-Essential Loads\u201d\u2014SW-DNEL).\n\n\u2022 System will automatically command the system to Safe Mode. It shuts down all\npayload devices and all Idle Mode devices.\n\n\u2022 All Events are stored in the OBSW EventStore which is a part of the non-volatile\nmemory on the I/O-Board used as TM store. They will be transmitted to ground\nupon next contact before HK TM is sent.\n\n10.2 Core DHS FDIR\n\nAs described in Sect. 10.1.4 all redundancy management for spacecraft equipment\nexcept for the PCDU is performed by the OBSW. However, if the OBC itself stops\nworking properly, a proper recovery solution has to be applied. In most industrial\nspacecraft, a reconfiguration unit is installed in the OBC, that serves as observer for\nthe OBC to function properly. In case malfunctions are detected, the OBC is\nrecovered by switching to redundant OBC elements. Due to reasons of complexity a\ndifferent approach was developed for the FLP Onboard Computer as was shortly\nmentioned in Sects. 1.8 and 4.2 and is described in full detail in [47]. The\nCore DHS hardware here is implemented as so-called Combined Data and Power\n\n304 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\nManagement Infrastructure (CDPI) with shared reconfiguration controller for OBC\nelement reconfiguration and PCDU reconfiguration. In [47] this unit is called\nCombined-Controller (CC)\u2014please also refer to [39, 40]. In case of the FLP\nplatform this Combined-Controller is physically implemented in the PCDU.\n\n10.2.1 Component Functions During Failure Handling\n\nAs already published in [47] four types of errors need to be covered which are\nexplained in the next paragraphs. In any case of reconfiguration of the Data\nHandling subsystem or of the power subsystem, essential control functions of the\nsatellite are at least blocked or non-operational for a limited time which will\ndegrade the spacecraft attitude and power control. So besides pure failure man-\nagement in form of switch-over to a redundant unit, the FDIR system must assure\nshutdown of non essential power loads (payloads, thermal consumers) and must\nassure to bring the satellite back into a Safe Mode configuration.\n\nFailure Type 1: Failures Identifiable by the Running OBSW\nExamples for this type of hardware failures are e.g. a bus controller which is\nsporadically not responding and requiring retries by the OBSW or the failure case\nwhere the OBSW receives Mass Memory EDAC bit error messages. In such case\nthe OBSW can send so-called High Priority Commands (HPC) to the active\nReconfiguration Unit for DH/Ops and Power FDIR which then triggers the\nreconfiguration to the redundant OBC bus controller\u2014or in this case the entire\nI/O-Board. In other error cases the Reconfiguration Unit may be forced to switch\nover to the redundant Processor-Board. In the latter case the OBSW has to be\nrebooted on the target Processor-Board.\n\nTo sum it up the triggering of the reconfiguration process is initiated in these\ncases by the OBSW, the diverse reconfiguration steps with redundant subunit\npower-up, defective-unit power-down and potential intermediate steps for data\nshift-over are carried out by the function implemented in the Reconfiguration Unit.\n\nFailure Type 2: Crash of the OBSW and Auto-Reconfiguration\nFailure type 2 covers all those errors which coincide with a crash of the OBSW. In\nsuch case a Reconfiguration Unit outside the Processor-Board has first to detect the\nOBSW failure and then has to perform the reconfiguration.\n\nIn the simple case of an OBSW crash due to a bug or an IC Single-Event Upset\n(SEU), the OBSW has to be restarted by the Reconfiguration Unit. The failure\ndetection usually is performed by means of the processor cyclically sending\nwatchdog signals to the Reconfiguration Unit and the latter starting FDIR action in\ncase of the watchdog signal exceeding a timeout.\n\nThe reconfiguration activities reach from simple processor soft reset to complete\nProcessor-Board or/and I/O-Board redundancy switchover, depending on the\nsymptoms detected by the Reconfiguration Unit. The number and type of\n\n10 Failure Detection, Isolation and Recovery Concept 305\n\n\n\nwatchdogs and timers obviously has to be designed appropriately for the\nReconfiguration unit being able to determine between different error cases.\n\nSuch an automated reconfiguration with broken OBSW is only possible for a\nlimited type of failure cases. The determination of the complex ones and moreover\nthe root cause analysis requires intervention from ground. Which leads over to the\nnext failure class described below.\n\nAs summary it can be stated that the Processor-Board shall feature watchdog\nlines to the Reconfiguration Unit for detection of OBSW crashes or I/O-Board\nsignal routing failures which then can be used for OBSW restart or hardware\nreconfiguration\u2014the latter only in very limited cases.\n\nFailure Type 3: Crash of OBSW and Reconfiguration from Ground\nSW crashes and auto-reconfiguration or OBSW reboot initiation are not sufficient to\novercome the problem, the reconfiguration has to be initiated and to be performed\nfrom ground. This usually starts with the initiation of power shutdowns for\nunnecessary loads and continues with deactivation of suspected defective units and\nactivation of hopefully still healthy ones.\n\nAll ground commands for these switch-overs have to bypass the OBSW\u2014as it is\nnon-operational. Therefore a special class of HPCs are used (so-called class 1 HPCs\nor HPC1 commands) which can be identified by the OBC\u2019s TC decoder modules\nand which are not routed to the OBSW on the Processor-Board like normal com-\nmands. In a standard OBC architecture these HPCs are directly forwarded to a\nspecific subunit in the Reconfiguration Unit\u2014the so-called Command Pulse\nDecoding Unit (CPDU). For more details please refer to [140]. The CPDU can\ndecode such HPCs and can send pulse commands to the Power Control and\nDistribution Unit (PCDU) to trigger LCL relay on/off switching, according to what\nthe targeted unit\u2019s status shall be. In the CDPI design, this HPC routing is slightly\ndifferent\u2014see Sect. 10.2.2.\n\nThis allows ground to activate deactivate on-board equipment completely\nindependent from any OBSW to overcome severe failure situations.\n\nFailure Type 4: Power-Bus Undervoltage Failures\nThe final main type of failures are those leading to a power shortage on board. In\nsuch case\u2014independent of whatever the root cause was\u2014the S/C equipment is shut\noff in several steps. The first units being disabled are payloads and payload data\nmass memory units. In further sequence then\u2014if the OBSW apparently is unable to\nmanage the problem\u2014the platform units including OBC are shut down. An in case\neven these measures do not overcome the problem the PCDU finally deactivates\nitself. For these cases a PCDU is equipped with an auto-activation function for its\ncontroller as soon as the S/C power-bus again supplies sufficient voltage\u2014e.g. due\nto the satellite returning from orbit eclipse phase to sun phase. With increasing\npower availability the PCDU subsequently activates further S/C platform units, first\nunit being the OBC, respectively in Safe Mode the redundant OBC (depending on\nthe latest settings in the Reconfiguration Unit). The latter then activates platform\nAOCS units to achieve a stable SC safe-mode attitude acquisition and potential\nground contact through activation of the transceivers.\n\n306 R. Witt and J. Eickhoff\n\n\n\nAs summary in these cases reboot and configuration are initiated by the PCDU\ncontroller and again PCDU controller and Reconfiguration Unit together manage\nthe recovery.\n\n10.2.2 PCDU as Reconfiguration Unit\n\nAs explained in Sect. 4.2.2 and as published in [47, 150], the Combined-Controller\nin this Combined Data and Power Management Infrastructure (CDPI), also serves\nas Reconfiguration Unit for the OBC. In this context the PCDU controller is taking\nover the role of the CDPI Combined-Controller. There is always one operational\ninstance of the OBC Processor-Boards and I/O-Boards required in order to facilitate\na working command chain on board the satellite (cold redundancy). Since both\nCCSDS-Boards are permanently powered, listening to both receivers, the\nhot-redundant board is instantly available in case of a malfunction of this board\ntype.\n\nHowever, it is essential to guarantee the detection and reconfiguration of any\nmalfunctioning OBC boards. Industrial satellites usually feature an independent\nOBC internal Reconfiguration Unit that permanently monitors the operation of the\nOBC components. As explained in Sect. 4.2 the key idea of the Combined Data and\nPower Infrastructure is to use the processor of an intelligent PCDU to take over the\ntask of the Combined-Controller type of Reconfiguration Unit and thus to save the\ndevelopment, qualification and manufacturing of one entire OBC ASIC.\n\n1. In failure case 1 the running OBSW triggers the reconfiguration functions\nimplemented in the Combined-Controller (CC), via the CPU-CC links, for\nexample a reconfiguration of an OBC decoder/encoder unit.\n\n2. In failure case 2 the auto-reconfiguration is unchanged. It simply is performed\nthrough the Combined-Controller, for example induced through watchdog sig-\nnal timeouts etc. Such watchdog or alert signal lines from the CPU now have to\nbe routed to the Combined-Controller.\n\n3. In failure case 3 where reconfiguration has to be performed via High Priority\nCommands from ground, the according reconfiguration command routing goes\nfrom the decoders to the CC for reconfigurations command execution in the CC.\n\n4. In failure case 4 (power failures, power-bus undervoltage) the approach of\nsatellite power down and eventual reboot is controlled as in the classic archi-\ntecture. Just the functions implemented formerly inside the PCDU controller\nnow are located in the CC.\n\nThe first essential step in OBC FDIR is failure detection: For the FLP concept,\nthe OBC/OBSW requests important housekeeping data from the PCDU at a regular\ninterval of 10 Hz by a Common Command. This data is recorded by the PCDU\nwithin its control loop which is adjusted to match the 10 Hz polling cycle of the\nOBC. All requested data is submitted to the OBC/OBSW as requested. Among the\nperiodically accumulated data are:\n\n10 Failure Detection, Isolation and Recovery Concept 307\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\n\u2022 Status of batteries: voltage/current/battery depth of discharge or state of charge\ncalculated by PCDU\n\n\u2022 Status of fuses: on/off\n\u2022 Status of switches: on/off\n\u2022 Status of panels: voltage/current\n\u2022 Temperature sensor data\n\u2022 Sun sensor data\n\nIn case where the PCDU is not polled cyclically as specified, a failure of the\nOBC system is assumed by the Combined-Controller. Figure 10.5 shows the four\nOBC boards that are involved in the command chain of Common Commands from\nOBC to the PCDU. These are the nominal and the redundant OBC Processor-Board\nas well as the nominal and redundant I/O-Board. Figure 10.5 also depicts the\nconnections between the OBC\u2019s CCSDS-Boards and the PCDU for High Priority\nCommanding, which is explained in the following section in detail.\n\nThe affiliation \u20180\u2019 and \u20181\u2019 indicate that the respective units are operated in a hot\nredundant mode. In contrast, the boards which are operated in a cold redundant\nmode are affiliated Nominal (N) and Redundant (R).\n\nThe HK TM requests are sent from the OBSW on the Processor-Board via the\ninterface on the I/O-Board, as shown in the electrical diagram in Fig. 1.6 and these\n\nOBC\n\nCommon\nCommands\n\nHigh Priority \nCommands\n\nPCDU\n\nI/O Board N I/O Board R\n\nOBC Core N OBC Core R\n\nCCSDS 0 CCSDS 1\n\nInterface 0 Interface 1\n\nCPU 0 CPU 1\n\nSpaceWire\n\nRS 422\n\nLegend\n\nCommon Com.\n\nHigh Priority Comm.\n\nFig. 10.5 Interface Communication between the OBC and the PCDU. \u00a9 IRS, University of\nStuttgart\n\n308 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\nTM polling signals are used as watchdog in the FLP Generation 1 CDPI for OBC\nhealth detection by the PCDU in its role as reconfiguration unit.\n\nIt is detected when TM requests from the OBC are received by the PCDU and a\ntimer is reset inside the PCDU control firmware. If HK TM is not requested for\nmore than 10 s (this value is a default setting and can be adapted in PCDU\nfirmware), a malfunction in the OBC is assumed by the reconfiguration controller in\nthe PCDU.\n\nHowever, in such case in the CDPI design of FLP Generation 1 it can not be\ndetected directly which of these command chain units\u2014Processor-Board,\nI/O-Board or OBSW\u2014is the source of the malfunction. Therefore, a particular\nreconfiguration sequence is defined and implemented in the PCDU (please also\nrefer to Sect. 10.2.12 concerning the improved design for FLP Generation 2).\n\nTherefore, a specific reconfiguration procedure for the OBC is performed to\nrestore the command chain operability by switching through the available instances.\nAfter each switch step a delay time is foreseen\u2014e.g. to allow the redundant\nProcessor-Board to boot up entirely\u2014and it is verified by the PCDU whether\ntelemetry polling is resumed again by the OBC. This default hold time can be\nadapted by command. If polling is resumed, the reconfiguration is considered\nsuccessful and the further sequence is aborted. If no polling is occurring yet, the\nnext switchover step is performed:\n\n\u2022 Turn the switches off for both I/O-Boards and on for the nominal I/O-Board\n\u2022 Turn the switches off for both OBC Processor-Boards and on for the nominal\n\nOBC Processor-Board\n\u2022 Turn the switch off for the nominal I/O-Board and activate the switch for the\n\nredundant I/O-Board\n\u2022 Turn the switch off for the nominal OBC Processor-Board and activate the\n\nswitch for the redundant OBC Processor-Board\n\u2022 Turn the switch off for the redundant I/O-Board and activate the switch for the\n\nnominal I/O-Board\n\nFor the details and problematic cases of the rconfiguration see Sect. 10.2.3. As\nsoon as a working command chain configuration is found, the PCDU is autono-\nmously set into MiniOps Mode, which corresponds to the Safe Mode at system\nlevel. By implementing the autonomous reconfiguration procedure the down time\nof the satellite system is minimized.\n\nThe implementation of the above described concept for the OBC reconfiguration is\nonly reasonable, since the PCDU itself is equipped with an internal watchdog circuit\nwhich facilitates the autonomous switching between the PCDU internal, redundant\ncontrollers. Thus, the monitoring and switching tasks can be performed without\nsignificant delays and thus safeguard a minimum downtime of the satellite system.\n\nFigure 10.6 shows the watchdog functionality for the autonomous switching of\nthe PCDU internal controllers. Both, the nominal and the redundant controller, are\noperated in a hot-redundant concept with a master and a slave unit at separate\nelectric circuits. The master unit performs all activities, whereas the slave monitors\nthe master.\n\n10 Failure Detection, Isolation and Recovery Concept 309\n\n\n\nThe master CPU is sending a confirmation signal during its processing cycle in\norder to permanently confirm its operability. If this condition is no longer met, the\nswitch logic commands to switch the master functionality to the slave unit.\n\n10.2.3 Reconfiguration Sequence\n\nWhen communication between PCDU and OBC is interfered, there are several\nreasons that might have caused this as shown in Fig. 10.7.\n\n(a) The connection between Processor-Board and I/O-Board is interrupted due to\ncable or connector damage\n\n(b) The I/O-Board has a \u201csoftware\u201d failure or is significantly damaged\n(c) The OBSW has a significant software error and cannot re-establish a stable\n\nstate\n\nCore\n\nIO-Board\n\nPCDU\n\nCore\n\nIO-Board\n\nPCDU\n\nCore\n\nIO-Board\n\nPCDU\n\nCore\n\nIO-Board\n\nPCDU\n\nCore\n\nIO-Board\n\nPCDU\n\nCore\n\nIO-Board\n\nPCDU\n\n(a) (b) (c) (d.i) (d.ii) (d.iii)\n\nFig. 10.7 OBC reconfiguration\u2014Different failure cases with OBC and PCDU. \u00a9 IRS, University\nof Stuttgart\n\nSwitch\n\nController N Controller R\n\nconfirmation signal during each processing cycle\n\nMaster\nswitch\nsignal\n\nMaster\nswitch\nsignal\n\nFig. 10.6 Functional design of the switch logic for the PCDU internal CPUs. \u00a9 IRS, University of\nStuttgart\n\n310 R. Witt and J. Eickhoff\n\n\n\n(d) There is a cable damage between I/O-Board and PCDU:\n\n(i) such that the complete cable is broken (neither back nor forth\ncommunication).\n\n(ii) such that the commands do not reach the PCDU.\n(iii) such that the commands from the OBC are transmitted to PCDU but the\n\nresponse cannot be received by OBC.\n\nCases (a) and (b) show the same symptoms in the OBSW and are covered in\nSect. 10.2.9. The redundant I/O-Board cannot be activated by software command.\nBoth cases will trigger reconfiguration through PCDU until communication\nbetween OBC and PCDU is re-established, either by quick recovery after the reboot\nof the primary I/O-Board in reconfiguration step 1 or through powering of the\nsecondary I/O-Board in reconfiguration step 3\u2014see reconfiguration sequence in\nSect. 10.2.2.\n\nCase (c) will activate the internal reset through the software watchdog if only\npart of the software is stuck and the watchdog is still running and can perform the\nSW boot. Or the Processor-Board or SW is stuck such that it cannot recover by\nitself and triggers the reconfiguration through the PCDU. The software will attempt\nto store occurring software errors in a Fatal Error Report (see Sect. 3.5) as well as\nEvents in the PROM\u2014depending on which parts of the SW still work.\n\nCase (d) is more complicated. All three sub-cases of (d) will look the same from\nOBSW perspective. The PCDU device handler in the OBSW will issue HK TM\nrequests to the PCDU but will not receive a response and will generate a\nMISSED_REPLY Event. This means that the commands have been sent to the\nI/O-Board but an according response could not be retrieved from the I/O-Board.\n\nThere is a significant difference between cases d(i) and d(ii) and case d(iii). In the\nfirst two there is nothing that can be done in OBSW except to prepare for the\nreconfiguration by the PCDU. However, in case d(iii) the PCDU still receives\ncommands from the OBC. That means that a reconfiguration will not be triggered\nby the PCDU although the communication is not working properly. In this case an\nFDIR function in the OBSW needs to intervene.\n\nA common approach for not getting responses from the PCDU, but otherwise\nworking properly\u2014case d(iii)\u2014is attempted and provided in the sequence diagram\nfurther down in Fig. 10.11.\n\nBefore going through the steps of Fig. 10.11 some explanations are provided.\nThe software objects that are included in this procedure are the FDIR, the IO-\nAssembly (displayed in Fig. 10.8) handling the I/O-Boards and switches between\nthem, the PCDU device handler as executing object for commands to the PCDU,\nand the Polling Sequence Table (PST). The PST is important since a running PST\nattempts active device communication which leads to failure Events if a DH cannot\ncommunicate with its device.\n\nWhat happens when the communication to the PCDU is interrupted\u2014case (d)\u2014\nis that the PCDU device handler will attempt to send the periodic HK TM request\ncommand to the PCDU and will not receive a proper response. As a result the\nPCDU device handler issues the Event MISSED_REPLY. In the FDIR, an Event\n\n10 Failure Detection, Isolation and Recovery Concept 311\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\ncounter is implemented to store the number of times the response from the PCDU\nhas been missed. This is depicted in Fig. 10.9.\n\nThis is not the complete algorithm. The implementation includes a mechanism to\nreset the failure detection for FDIR cases in which the communication was only\ninterrupted shortly and recovers by itself after a short period. The detailed mech-\nanism of increasing and decreasing an FDIR failure counter is provided in\nSect. 10.4.2 and Fig. 10.26 and is applied to the PCDU device handler failures\naccordingly.\n\nWhen the counter in Fig. 10.9 exceeds the limit, FDIR will command the IO-\nAssembly to attempt an I/O-Board switch\u2014see Fig. 10.9 and later Fig. 10.11. The\nprocess for the I/O-Board switch itself is depicted in Fig. 10.10.\n\nIO-Assembly\n\nOne IO active\n\n[FDIR::IO-Switch]\n\n[else]\n\nsecondaryOn()\n\ndata \ntransmission\n\n[else]\n\n[SpW link Up]\n\n[successful]\n\nprimaryOff() triggerEvent()\npassivatePrimary()\n\n[else]\n\nforce PCDU\nreconfiguration\n\nactivateSecondary()\n\nnominal operation\n\nwait\n5sec\n\nIO_SWITCH_FAILED\n\nFig. 10.8 IO-Assembly mode diagram. \u00a9 IRS, University of Stuttgart\n\n312 R. Witt and J. Eickhoff\n\n\n\n\u2022 At first the IO-Assembly will power the secondary I/O-Board by commanding\nthe PCDU and wait for the SpW link to come up.\n\n\u2022 Upon confirmation, the primary I/O-Board is passivated which means the\ninterfaces are deactivated. Due to Y-connections in the wires of the system\nharness, the transmission interfaces of both I/O-Boards must not be active at the\nsame time. Otherwise signals from the two interfaces could interfere with each\nother.\n\n\u2022 Consequentially, the interfaces of the secondary I/O-Board can be activated and\nthe stored TM from the primary I/O-Board can be transmitted to the secondary\nI/O-Board.\n\n\u2022 At the end of the process, the primary I/O-Board is powered down by com-\nmanding the PCDU accordingly.\n\n\u2022 The I/O-Board assembly automatically updates the IO status in the datapool so\nthat the communication between OBC and devices works with the healthy\nI/O-Board.\n\nPCDU-DH::sendCommand()\n\nPST::run()\n\npcduCommand\n\nPCDU-DH::getResponse()\npcduResponse\n\nPCDU-DH::triggerEvent() MISSED_REPLY[PCDU]\n\nFDIR::run()\n\n[pcduResponse == empty]\n\n[else]\n\nevaluateEvents()\n\nincreaseCounter\npcduFailures += 1\n\n[pcduMissedReply == true]\n\n[else]\n\nFDIR::performAction()\n\n[pcduFailures > LIMIT]\n\ncommand\nIO-Assembly::switchIoBoard()\n\n[else]\n\nIO-Board/\nPCDU\n\nMISSED_REPLY[PCDU]\n\nstart\n\nFig. 10.9 PCDU failure count for reconfiguration. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 313\n\n\n\n\u2022 In Fig. 10.11 it is shown that as soon as the secondary I/O-Board is powered, the\nPST will be stopped to avoid generating failure events that are expected by the\nsystem during this switch.\n\nReminder\nThe previous three cases from (d) are considered with (i) no communication\nbetween PCDU and OBC, (ii) PCDU does not receive any commands and\n(iii) PCDU response is not received in OBC. The PCDU will only trigger the\nreconfiguration, if commands are no longer received, which is not the case in d(iii).\n\nThe flow depicted in Figs. 10.11 and 10.13 shall be explained here step by step:\n\n\u2022 In the PST (details in Sect. 3.4.3) the PCDU DH is invoked.\n\u2022 PCDU DH cannot retrieve TM from the PCDU and issues the event\n\nMISSED_REPLY.\n\u2022 After 10 retries, FDIR decides to attempt an I/O-Board switch and commands\n\nIO-Assembly. Simultaneously, FDIR generates Event SWITCH_IO. Further\nMISSED_REPLY signals from PCDU DH are stored in Event TM but will be\nignored by the FDIR object.\n\n\u2022 IO-Assembly executes the I/O-Board switch as shown in Fig. 10.10.\n\u2022 Alternative Branch IF:\n\n\u2013 Secondary I/O-Board can be detected and the PST is paused to avoid gen-\neration of DH failures during I/O-Board switch.\n\n\u2013 Secondary I/O-Board is configured as shown in Fig. 10.10.\n\nFig. 10.10 OBC reconfiguration: IO-Assembly switch and configure secondary IO-Board. \u00a9 IRS,\nUniversity of Stuttgart\n\n314 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nFig. 10.11 OBC reconfiguration through PCDU\u2014Software perspective\u2014Sequence diagram (1).\n\u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 315\n\n\n\n\u2013 PST is resumed, PCDU DH is invoked and former primary I/O-Board is\nswitched off.\n\n\u2013 Nominal operation can continue, ground interaction can command S/C\ntransition from Safe Mode to Idle Mode.\n\n\u2022 Alternative Branch ELSE:\n\n\u2013 After expiration of the I/O-Board switch attempt as illustrated in Fig. 10.8,\nthe IO-Assembly issues the event SWITCH_IO_FAILED.\n\n\u2013 FDIR marks the primary I/O-Board as faulty and interrupts the communi-\ncation with the devices including PCDU (compare Fig. 10.9). This inten-\ntionally provokes that the PCDU initiates reconfiguration of the OBC.\n\n\u2013 At the same time the PST is paused to avoid generation of device handler\nfailures during I/O-Board reconfiguration through PCDU.\n\n\u2013 FDIR commands System into Safe Mode and switches off Idle Mode and\npayload devices to prepare for the state after the reconfiguration. (Reminder:\nPCDU will be enter MiniOps Mode when communication is re-established.\nThat means only Safe Mode devices are powered).\n\n\u2022 PCDU performs reconfiguration step 1 and restarts the primary I/O-Board.\n\u2022 Upon detection of the SpW link, IO-Assembly sends the Event IO_ONLINE and\n\nactivates the primary I/O-Board.\n\u2022 FDIR commands System to boot properly and to resume the PST to attempt\n\nproper communication.\n\u2022 Alternative Branch IF:\n\n\u2013 If the communication to the PCDU has recovered, System will operate in\nSafe Mode.\n\n\u2022 Alternative Branch ELSE (repeating sequence from step 1):\n\n\u2013 As before, PCDU DH sends Event MISSED_REPLY.\n\u2013 \u2026\n\u2013 FDIR marks primary I/O-Board faulty to pause PST and prepare for PCDU\n\nreconfiguration step 2\u2014restarting the nominal Processor-Board and software\nreboot.\n\n\u2022 Through reboot of the Processor-Board the software is restarted (Fig. 10.12).\n\u2022 After software boot, the entire process is repeated and the PCDU device handler\n\nsignals MISSED_REPLY from the PCDU.\n\u2022 Eventually FDIR interrupts all device communication to prepare for the third\n\nstep of the PCDU reconfiguration.\n\u2022 Upon powering the redundant I/O-Board, nominal operation is re-established\n\nand System can be commanded to transition back to Idle Mode.\n\nThe intention of this approach and the early I/O-Board switch-attempt is to avoid\nfalling into a loop trap where PCDU performs the first reconfiguration step over and\n\n316 R. Witt and J. Eickhoff\n\n\n\nover. In case d(iii) this could happen as described in the following and as is depicted\nin Fig. 10.13.\n\n(1) PCDU and System start in Idle Mode.\n(2) System cannot detect a response from the PCDU and interrupts the commu-\n\nnication to the PCDU\n(3) PCDU performs reconfiguration step 1 and restarts the primary I/O-Board.\n(4) Upon detection of established SpW link, System initiates Boot and attempts\n\ncommunication with PCDU.\n(5) PCDU receives an HK request, enters MiniOps Mode and interrupts the\n\nreconfiguration sequence.\n\nFig. 10.12 OBC reconfiguration through PCDU\u2014Software perspective\u2014Sequence diagram (2).\n\u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 317\n\n\n\n(6) =(2) System cannot detect a PCDU response and interrupts communication\nagain.\n\nIf in the OBSW FDIR/System interrupts the communication to the PCDU, the\nreconfiguration will be performed. But after restarting the I/O-Board, the OBC will\ncommand the PCDU again to get the system configured, despite not receiving a\nresponse. This would interrupt the current reconfiguration sequence until FDIR\ninterrupts the communication again which leads to an endless loop trap. The forced\nI/O-Board switch, after recognizing the interrupted communication, is introduced to\nprevent this scenario from occurring.\n\n10.2.4 HPC-Based Spacecraft Reconfiguration\n\nThe PCDU by means of its Combined-Controller (CC) incorporates the function-\nality, which is essential for FDIR operations at S/C system level. In order to\nestablish a reliable concept for spacecraft operations and system commandability\nHigh Priority Commands (HPCs) are to be applied in case the spacecraft OBSW has\ncrashed and an automatic reconfiguration failed. The concept of HPCs is explained\n\nFig. 10.13 PCDU reconfiguration\u2014loop trap. \u00a9 IRS, University of Stuttgart\n\n318 R. Witt and J. Eickhoff\n\n\n\nin [11]. Such commands are applied in case the nominal command chain units, such\nas OBC Processor-Boards and I/O-Boards, or the OBC\u2019s OBSW is not operational.\nIn standard architectures the HPCs are submitted from ground to a dedicated\nCommand Pulse Decoding Unit (CPDU) of the OBC which then commands the\nPCDU relays switching via dedicated pulse command lines. In case of the inte-\ngrated CDPI architecture HPCs also bypass the OBSW command chain but do not\nneed a CPDU as they are transmitted directly from the CCSDS-Boards to the PCDU\n(see Sect. 4.2.2 and [47]).\n\nThe following explanations of the CCSDS protocol are limited to the parts that\nare necessary to understand the HPC transmission and forwarding. Please consult\nthe CCSDS standards [25] for further information. Figure 2.6 in Sect. 2.2 shows an\nexample of the composition of an uplinked TC packet that is transmitted from\nground to the satellite. After the decoding of the so-called Command Link\nTransmission Unit (CLTU), the TC Transfer Frame contains the commands from\nground. Only the Frame Header and the TC Segment must be considered to\nunderstand the HPC forwarding. The Virtual Channel (VC), in the Frame Header\nindicates which command chain unit receives the data. The following 4 VCs are\navailable for FLP target spacecraft:\n\n\u2022 VC1: nominal command to OBC Processor-Board N\n\u2022 VC2: HPC1 to CCSDS-Board N\n\u2022 VC3: nominal command to OBC Processor-Board R\n\u2022 VC4: HPC1 to CCSDS-Board R\n\nWhereas nominal commands are assigned to the VCs \u20181\u2019 and \u20183\u2019, HPCs are\nallocated to the VCs \u20182\u2019 and \u20184\u2019. An HPC that is commanded by ground is referred\nto as High Priority Command Level1 (HPC1). HPCs Level 2 are processed by the\nOBC S/W. The TC Segment contains the Multiplexer Access Point Identifier\n(MAP-ID). A MAP-ID that equals \u20180\u2019 states that the TC Segment contains HPC1s\nand that containing commands are directly forwarded from the CCSDS-Board to\nthe PCDU. All MAP-IDs unequal to \u20180\u2019 imply PUS packets and are transmitted to\nthe OBC Processor-Board for further processing by the OBC S/W.\n\nAs described in Sect. 4.2.2 industrial satellites may feature a so-called Command\nPulse Decoding Unit (CPDU) on board to receive HPCs. This unit routes the\ncommands to the respective units. An HPC consists of 2 bytes. The first 8 bits\ncontain information on the channel selection, the second 8 bits on pulse length\ndefinition. So it is possible to command 256 units (channel selection) through 256\ncommands (pulse length definition) by utilizing HPCs.\n\nFor FLP, the CPDU is integrated in the PCDU as the only unit commanded by\nHPCs. Thus, 65536 different commands may be implemented to reconfigure the\nsatellite system by switching LCLs and component switches. The PCDU features a\nnominal and a redundant RS422 communication interface for the reception of HPCs\n(see Fig. 10.5) with a baud rate of 115200. All HPC packets are implemented with a\n2 byte header that serves as an identifier for the following HPC frame. The com-\nposition of the HPC header is as follows: (Table 10.1)\n\n10 Failure Detection, Isolation and Recovery Concept 319\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\nAn HPC frame can contain up to 4 high priority commands. Every command\nstarts with a TC Source Packet Header, (TSPH) which is completely dismissed.\nEach of the HPCs consists of the 6 bytes TSPH, 2 bytes command plus 2 bytes\nchecksum. HPCs can be used to activate or deactivate a single or a specific set of\non-board components which cover a specific safety aspect. By virtue of their\nimportance, HPCs are processed immediately after reception at the PCDU and in\nfavor to Common Commands. The most important HPCs are:\n\n\u2022 Activate or deactivate the on-board heaters\n\u2022 Deactivate all non-essential loads for the Safe Mode to save energy\n\u2022 Reconfigure the command chain\n\nThe structure of a single HPC is as follows (Table 10.2):\n\nTable 10.3 shows an example of an HPC command sequence which may contain\nup to 4 single HPCs. Table 10.4 provides an overview of all implemented HPCs for\nthe FLP Generation 1.\n\nTable 10.1 Header composition of an HPC Frame\n\nByte Number 21\n\nBit Composition 11111111 01010101\n\nTable 10.2 Basic HPC structure\n\nwith\n\nByte Explanation\n\nHeader 0xFF55\n\nTSPH TC Source Packet Header (0x00)\n\nCMD ID-H Activate: 0x0F; deactivate: 0xF0\n\nCMD ID-L HPC No.\n\nCRCH 16Bit CRC (Byte 0\u20137), higher Byte\n\nCRCL 16Bit CRC (Byte 0\u20137), lower Byte\n\nHPC structure\n\nByte No. 0..5 6 7 8 9\n\nMeaning TSPH CMD ID-H CMD ID-L CRCH CRCL\n\nTable 10.3 HPC frame composition\n\nHPC sequence structure (up to 4 commands)\n\nByte No. 0..1 2..11 12..21 22..31 32..41\n\nMeaning Header HPC1 HPC2 HPC3 HPC4\n\n320 R. Witt and J. Eickhoff\n\n\n\n10.2.5 Software Watchdog\n\nAs mentioned in Sect. 10.2.2, there is a reconfiguration function implemented in the\nPCDU that will take action if the HK data from the PCDU is not cyclically\nrequested by the OBC for 10 s. This might be the case if the OBSW crashed for\nsome reason. The Processor-Board will be power-cycled in such case. However,\nthis is a very harsh way of treating the OBC. In particular since the PCDU\nreconfiguration begins with an I/O-Board reboot, which takes some additional time.\n\nA preferred and faster way for this is to automatically recognize a software crash\nand to initiate a controlled reboot. In that case some data might still be written to the\nI/O-Board to allow analysis of the software crash by ground FDIR. For that reason,\na software watchdog (WD) function is implemented inside the software. This\nfunction needs to be triggered in every PST cycle to reset a counter.\n\nIf the counter is not reset for several seconds and the counter reaches a limit, a\nreboot is initiated by the watchdog software object. If one of the main SW tasks\nreturns a wrong returnCode during task processing (see also Fig. 3.10) to a con-\ntrolling function for whatever reason, the System will not reset the WD counter. At\nthe same time, an Event SW_RETURNCODE is generated with the returnCode\nvalue as parameter for allowing to recapture the process. SW_RETURNCODE\nEvents are generated and stored whenever an unexpected value is returned from a\nsoftware function. When the WD counter exceeds a configurable limit, it will\n\nTable 10.4 HPC commands\n\nHPC Number Action\n\n1\u201377 Activate switch 0\u201376 (Turn single components on)\n\n78\u2013144 Deactivate switch 0\u201376 (Turn single components off)\n\n145 Activate all heater switches\n\n146 Activate nominal core component switches (OBC N, I/O board N)\n\n147 Activate redundant core component switches (OBC R, I/O board R)\n\n148 Activate first core component cross-coupling switches (OBC N, I/O board R)\n\n149 Activate second core component cross-coupling switches\n(OBC R, I/O board N)\n\n150 Deactivate nominal core component switches (OBC N, I/O board N)\n\n151 Deactivate redundant core component switches (OBC R, I/O board R)\n\n152 Deactivate first core component cross-coupling switches\n(OBC N, I/O board R)\n\n153 Deactivate second core component cross-coupling switches\n(OBC R, I/O board N)\n\n154 Deactivate all payload switches\n\n155 Deactivate all switches except for \u2018Safe Mode\u2019 components and \u2018Survival\nheaters\u2019\n\n156 Deactivate all heater switches\n\n10 Failure Detection, Isolation and Recovery Concept 321\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\ninitiate a software reboot and a corresponding Event SW_WD_RESET. After the\nacknowledged storage of that event in the I/O-Board TM store, the reboot will be\nperformed.\n\nIf the reboot of the software does not recover the complete software and OBC\nfunctionality, the Reconfiguration Unit in the PCDU will trigger a reconfiguration\nof the OBC. The same is true in case where the software watchdog function shows a\nmalfunction or the controlled software reboot is prevented for some reason. This\nprocess is shown in Fig. 10.14.\n\nFig. 10.14 Software reboot through SW watchdog reset. \u00a9 IRS, University of Stuttgart\n\n322 R. Witt and J. Eickhoff\n\n\n\n10.2.6 Software (Re-) Boot\n\nIf a software reboot occurs due to a software watchdog reset (Sect. 10.2.5) or a\nreconfiguration (Sect. 10.2.2), previously stored temporary data is lost. In that case,\nthe software needs to be made aware of the state of the spacecraft. There are several\nmeasures to make sure the software is able to identify that and to continue\noperations.\n\nThe Processor-Boards are exactly the same hardware, with the same software\nimage stored in the PROM memory area. There is only one difference to distinguish\nbetween the two. A part on the PROM memory (64 Bytes) of the Processor-Boards\ncontains a customized boot loader (see also Sect. 4.3.1). The boot loader stores an\nidentifier to tell which Processor-Board the software is running on. So while\nbooting the software, it can read from that boot loader whether it is running on the\nnominal or the redundant Processor-Board. It can be assumed that if the software\nhas been rebooted, a failure happened in the software itself, or with the\nProcessor-Board. So all other OBC boards, and one I/O-Board in particular, are\nsupposed to be running properly. The very first boot shall be covered with this\napproach as well. Following this, it is not required for the OBSW to recognize\nwhether it is the initial boot after launch or a bot after watchdog reset or PCDU\nreconfiguration. However, the Processor-Board PROM includes a boot counter (see\nSect. 4.3.1).\n\nSecondly, there is a defined Spacecraft State Vector (SV) (see Sect. 10.2.11)\nstored in the I/O-Board that contains the latest configuration of the system. From\nthat state vector the software can determine which devices are active and running\nand can restore nominal operation as before the reboot.\n\nThirdly, there is all the data concerning the satellite state, from which operation\ncan be proceeded. There are values for latest position, attitude and especially the\nlatest SoC for the battery, which are important regarding the prevention of major\nfailures or damage.\n\nAfter a software boot or reboot, the system always attempts a transition into a\nstable Safe Mode. Failures that lead to a software reboot or reconfiguration are\ndeemed severity level HIGH.\n\nThe software boot process is displayed in Fig. 10.15. The sequence is as given in\nthe following description:\n\n\u2022 Before any actual boot of the main function happens, a CRC check is performed.\nThis will be especially important when a second image and software patching in\nthe PROM comes into play.\n\n\u2022 The software starts with creating all required objects and interfaces and\nassigning them to their respective tasks.\n\n\u2022 For visibility on ground and to allow recognition of an autonomous\nProcessor-Board switch, the Processor-Board ID can be read from the PROM\nand stored in the datapool object.\n\n\u2022 The tasks are started to allow for a certain functionality. However, device\ncommunication is not activated yet. The system needs to be configured before.\n\n10 Failure Detection, Isolation and Recovery Concept 323\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\nFig. 10.15 FLP OBSW boot sequence. \u00a9 IRS, University of Stuttgart\n\n324 R. Witt and J. Eickhoff\n\n\n\n\u2022 The IO-Assembly recognizes whether one I/O-Board-bound SpW interface has\none link (is the case at first boot, recovery or after a software crash during\nnominal operation) or even two (is the case if the software crashed during data\ntransmission between the I/O-Boards).\n\n\u2022 If both I/O-Board links are detected, the assembly checks for which I/O-Board is\nactive. If the nominal one is active, the redundant one is passivated actively.\nSince the software crashed during data transmission it is not guaranteed, that the\ntransmission was successful. Thus, it is reasonable to continue operations with\nthe previously used\u2014which is the primary\u2014I/O-Board. The command to switch\noff the secondary I/O-Board is generated and will be transmitted to the PCDU as\nsoon as device communication has started.\n\n\u2022 The CCSDS-Assembly checks for available CCSDS-Boards and writes neces-\nsary registers to operate the board conform with the intended communication\nbased on CCSDS and SCOS-2000.\n\n\u2022 At this point, the FDIR processing is started. If failures had been detected\nbefore, the software would have restarted, or eventually switched to the back-up\nsoftware image.\n\n\u2022 After one I/O-Board is selected, the transmission buffer is read actively. This\nleads to the I/O-Board firmware to discard data that are stored from previous\ncommunication cycles. No remaining (old) data will interfere when restarting\nthe communication with the devices.\n\n\u2022 System starts the PST but the DH are not configured yet, so no communication\nwill happen except for the PCDU HK TM requests.\n\n\u2022 At this point, System creates the SOFTWARE_BOOT Event including the\ninformation of active Processor- and I/O-Board.\n\n\u2022 Before configuring subsystems, assemblies and device handlers, the previously\nstored Spacecraft State Vector is retrieved from the active I/O-Board. After\nsuccessful CRC check, datapool values are written, validFlags are set,\nhealthStatus values of the devices are read and stored. If the CRC check fails,\nthe initial values from SW are still sufficient to achieve a stable system state.\nThis might take longer, however, since devices might be activated that have\nbeen switched off before.\n\n\u2022 When the state vector (SV) is retrieved, System is commanded into Boot Mode\n(see Fig. 2.1) including booting the controller for TCS and PSS.\n\n\u2022 The PSS_Subsystem initially activates all fuses to achieve a known state in the\nPCDU.\n\n\u2022 PSS_Subsystem checks the status of the solar panel deployment. At the very first\nboot, the deployment mechanism is activated since at launch the SA-Deployed\nflag = 0 and the PCDU will report undeployed SA (reed sensor values). If the\npanels are already deployed (SA-Deployed flag = 1) or PCDU TM indicating\nsuccessful deployment the flag is set to 1.\n\n\u2022 System configures the spacecraft to transit to Safe Mode. This includes mode\ntransitioning of all assemblies into On Mode. The assemblies read the respective\nhealthStatus for their devices and command the respective deviceHandler in On\nand Nominal Mode (see also Sect. 3.2.3).\n\n10 Failure Detection, Isolation and Recovery Concept 325\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n\u2022 TCS_ and PSS_Controller also read the healthStatus of electrical and temper-\nature sensors and heaters to update their internal health information.\n\n\u2022 In Safe Mode, only devices MGM, MGT, TTC, OBC, PCDU are powered. But\ndepending on the state before the boot, further devices might have been powered\nuntil to Safe Mode transition. Since for example GPS sends data periodically,\nanother flush of non-Safe Mode devices is performed to erase data in their\ntransmission buffer after powering them down.\n\n\u2022 Nominal Safe Mode operation is performed until the battery strings are charged\nand ground interaction leads to a transition into a higher mode.\n\n10.2.7 Data Transmission Between I/O-Boards\n\nFor back-up reasons of the data stored in the primary I/O-Board, the data has to be\ncopied from the primary I/O-Board to the secondary I/O-Board. Stored data is\nhousekeeping telemetry that is collected throughout the operation, Events that\noccurred either through nominal actions or malfunctions, and the Spacecraft State\nVector as defined in Sect. 10.2.11 with S/C health state and the datapool variables.\n\nTo transmit data from the primary to the secondary I/O-Board, the secondary\nboard has to be powered. The IO-Assembly includes a function that handles acti-\nvation and deactivation, and data transmission from one board to the other auto-\nmatically every 15 min regarding on-board time.\n\nIf an Idle Mode or payload device is deactivated by FDIR due to a malfunction\nin between two such automated I/O-Board synchronization processes, the data in\nthe secondary I/O-Board is not updated directly.\n\nIn case the primary I/O-Board now shows a malfunction before the secondary\nI/O-Board is updated, the OBSW will continue operation with the secondary\nI/O-Board. This can only occur if a reconfiguration has been conducted by the\nPCDU. Otherwise the OBSW would have selected the primary I/O-Board (see\nSect. 10.2.6). Terminated reconfiguration means that the S/C is in Safe Mode and\nthe PCDU only deactivated Idle Mode and payload devices. Previously active Safe\nMode devices are still active. It is possible for the operator to update the health flag\nof the previously faulty and deactivated device on the secondary I/O-Board. If the\noperator commands the S/C into Idle Mode without updating the health state, the\nfaulty device is falsely activated. However, this is not deemed dangerous because\nthe system should be able to identify the device as faulty again. The device will be\ndeactivated by FDIR and operations can continue.\n\nThis I/O-Board synchronization process will not yet be implemented in the\nOBSW for the first FLP mission \u201cFlying Laptop\u201d. Here it has to be commanded\nmanually by ground.\n\n326 R. Witt and J. Eickhoff\n\n\n\n10.2.8 PCDU Automated Fault Management\n\nIf the reconfiguration of the OBC is in progress, as defined in Sect. 10.2.3, and a\nworking configuration is not found immediately, the OBSW might be down for\nseveral minutes. During this time, the satellite cannot be properly controlled, and\npower generation through solar panels cannot be guaranteed. In case where the\nsoftware/OBC crash happened during a full operational scenario with high power\nconsumption, this might lead to running into an under-voltage failure case.\n\nFor such scenarios, the PCDU checks the State-of-Charge of the battery peri-\nodically and in case of the satellite bus voltage decreasing below 20 V, it enters the\nShutdown Mode. In this mode all components are switched off, except for the\nPCDU itself\u2014to regulate the battery balancing.\n\nA second observation function concerning power consumption is implemented in\nthe PCDU. One or more devices, depending on their importance, are grouped together\nand can be deactivated with a single fuse. For all devices a typical value of electric\ncurrent for their operation is stored and if a fuse detects an over-current for a group of\ndevices, the fuse is automatically opened and the devices are powered down.\n\n10.2.9 IO- and CCSDS-Board SpaceWire FDIR\n\nFor the I/O-Boards and CCSDS-Boards, two different failure categories need to be\nconsidered.\n\nThe one introduced in Sect. 10.4.2 considers failures of the I/O-Board firmware,\nfailures on RMAP level and failures of I/O-Board transmission hardware. Failures\nfor the CCSDS-Board packet transmission via RMAP are covered as well.\nParticular CCSDS connection failures to the TTC equipment are covered in\nSect. 10.5.\n\nSpaceWire communication is implemented in the hardware of the OBC\nProcessor-Board. Observation of the SpW implementation is performed by\nchecking status registers in the SpW hardware. The SpW driver is implemented\nfollowing [3] where an \u201cError Recovery Scheme\u201d is defined. Failures are reported\nas OBSW failure events, but failure handling is already covered in the driver\nimplementation. The Events are forwarded to ground for further analysis. A list of\nthe Events is provided in Sect. 10.4.4. If the SpW link to the operational I/O-Board\nor CCSDS-Board is lost, the mechanism which was explained above will be trig-\ngered, further failure handling for SpW is not required.\n\n10.2.10 Memory EDAC/TM Store Integrity\n\nFor the Processor Board, an Error Detection and Correction (EDAC) controller is\nimplemented, that allows correction of a single memory error per chip and detection\n\n10 Failure Detection, Isolation and Recovery Concept 327\n\n\n\nof two errors. The EDAC functionality is available for the PROM and the SRAM\nmemory areas. Further information about the EDAC mechanism can be found in [53].\n\nThe I/O-Board does not verify RMAP accesses to its memory areas. The RMAP\npackets stored to the transmission buffers will be verified according to [5]. There is\nno dedicated EDAC function implemented for the provided I/O-Board mass\nmemory area. For the TM store and Spacecraft State Vector memory on the\nI/O-Board, a verification mechanism with checksums is used to prevent the soft-\nware from handling corrupted data.\n\n10.2.11 Spacecraft State and Configuration Vector\n\nA failure case might occur that leads to rebooting the OBSW on the active\nProcessor-Board. Such might be reconfiguration through PCDU or a self-initiated\nreboot by the software watchdog. In that case all temporary stored data such as\nposition, attitude, battery SoC, etc. are lost. To prevent the system from recom-\nputing its entire status from scratch, a certain memory region on the I/O-Board (all\nNV-RAM) is used as storage for the S/C state vector. After a reboot of the software,\nthis latest state can be retrieved from the I/O-Board and nominal operation can be\nreached much quicker.\n\nWith a period of 300 s, the Spacecraft State Vector is stored in the primary\nI/O-Board to keep the data in line with the actual status of the S/C. With a lower\nfrequency of 900 s, this S/C state vector is also transmitted to the secondary\nI/O-Board for the case of a faulty primary I/O-Board. The safeguard S/C state\nvector contains the following data:\n\n\u2022 LEOP-Completion Flag: Flag indicating to the OBSW that the LEOP phase has\nbeen completed.\nDefault Value = 0\nValue change by GndOps\nNormal Flight value = 1\nOBSW will keep TTC TX on as long as Flag = 0\nAvailable as System TM\n\n\u2022 Separation-Completion Flag:\nFlag indicating for the OBSW that launcher separation is completed. Available\nas System TM\n\n\u2022 SA-Deployed Status Flag:\nFlag indicating for the OBSW that solar array is properly deployed. Available as\nSystem TMDevice health statuses\n\n\u2022 Configuration tables that are stored in the (sub-)system objects (e.g. Safe Mode\ncomponents for the system, sensor redundancies for temperature sensors)\n\n\u2022 Values of adaptable configuration variables (monitoring limits etc.)\n\u2022 Configuration of CCSDS-Board\n\u2022 Battery SoC\n\u2022 Next ground contact times\n\n328 R. Witt and J. Eickhoff\n\n\n\n\u2022 Remaining I/O-Board storage volume\n\u2022 HK definitions and activated HK TM packets\n\nAll entries of the Spacecraft State Vector are attended with a timestamp and a\nvalidFlag. The complete state vector also has a timestamp which declares the time\nat which the state vector was written. This is required to inform a newly booted\nOBSW which data is the more accurate and which data can be used or needs to be\nignored if both I/O-Boards are powered (see Sect. 10.2.7). Additionally, there is a\nchecksum that can be compared when retrieving the SV to ensure that the SV has\nbeen transmitted completely.\n\nIn case of an OBSW crash, an OBSW Fatal Error Report will be attempted to be\ngenerated and stored in the PROM (see Sect. 3.5). This death report mainly consists\nof unexpected returnCodes of internal functions. These returnCodes will be stored\nin separate TM packets and serve as a kind of debug output of the software. On next\nground contact the report will be downloaded. This report allows for further root\ncause analysis of the OBSW crash on ground and how a change of values or a\nOBSW patch might avoid the same crash happening again in the future.\n\n10.2.12 SW Watchdog for FLP Generation 2\n\nTo simplify the reconfiguration scheme for the OBC boards (see Sect. 10.2.3) and\nto make it clearly identifiable for the PCDU Combined-Controller whether an\nI/O-Board or the Processor-Board is the root cause for lacking communication to\nthe PCDU, the FLP Generation 2 computer architecture is equipped with separate\nwatchdog lines from Processor-Boards to PCDU.\n\nThese watchdog signal lines are marked in light blue in Fig. 9.14. The watchdog\ncounter signals are sent cyclically over RS422 serial lines from Processor-Board to\nPCDU. The PCDU TM polling by OBSW still goes via I/O-Board.\n\nThus the PCDU can uniquely identify which communication partner is\nnon-operational and can simply reconfigure the affected unit without the compli-\ncated workflows of Figs. 10.11 and 10.12.\n\n10.2.13 Events in the Core DHS FDIR\n\nEvent 10.1: SOFTWARE_BOOT\n\nEvent Name Event Severity Event Parameter\n\nSOFTWARE_BOOT INFO Core ID, I/O-Board ID\n\nEvent description This event will be generated at software boot\n\nReaction \u2013\n\n10 Failure Detection, Isolation and Recovery Concept 329\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\n\n\nEvent 10.2: IO_ONLINE\n\nEvent Name Event Severity Event Parameter\n\nIO_ONLINE INFO I/O-Board object-ID\n\nEvent description This event will be generated if the SpW link to an I/O-Board is\ndetected\n\nReaction \u2013\n\nEvent 10.3: MISSED_REPLY\n\nEvent Name Event Severity Event Parameter\n\nMISSED_REPLY LOW Device object-ID\n\nEvent description This event will be generated if adeviceHandler Object does not\nreceive a response from its device\n\nReaction FDIR counts the events and after a certain amount of events has\noccurred within a certain time period, the device will be rebootet.\nIf the event keeps occurring, FDIR will shut the device down and\nmark it PERMANENTLY_FAULTY. Only ground can reactivate\nthe device\n\nEvent 10.4: SWITCH_IO_FAILED\n\nEvent Name Event Severity Event Parameter\n\nSWITCH_IO_FAILED LOW I/O-Board object-ID\n\nEvent description FDIR has decided to switch the I/O-Board. This event will be\ngenerated if the switch to the secondary I/O-Board has failed\n\nReaction FDIR marks the primary I/O-Board as faulty. This interrupts the\ncommunication with the PCDU and triggers the reconfiguration\nsequence in the PCDU\n\nEvent 10.5: SW_RETURNCODE\n\nEvent Name Event Severity Event Parameter\n\nSW_RETURNCODE LOW returnCode\n\nEvent description This event will be generated if an unexpected returnCode from a\nfunction or task is returned to the system. Event will be stored in\nEvent TM for software debugging\n\nReaction Software watchdog will restart software\n\nEvent 10.6: SWITCH_IO\n\nEvent Name Event Severity Event Parameter\n\nSWITCH_IO MEDIUM I/O-Board object-ID\n\nEvent description This event will be generated if FDIR decides to switch to the\nsecondary I/O-Board\n\nReaction \u2013\n\n330 R. Witt and J. Eickhoff\n\n\n\nEvent 10.7: SAFE_MODE\n\nEvent Name Event Severity Event Parameter\n\nSAFE_MODE HIGH\n\nEvent description This event will be generated if FDIR decides to transition the\nsystem into Safe Mode\n\nReaction \u2013\n\nEvent 10.8: WD_SW_RESET\n\nEvent Name Event Severity Event Parameter\n\nWD_SW_RESET HIGH\n\nEvent description This event will be generated if a the software watchdog reboots\nthe SW\n\nReaction \u2013\n\nEvent 10.9: IO_SWITCH\n\nEvent Name Event Severity Event Parameter\n\nIO_SWITCH MEDIUM Device object-ID\n\nEvent description This event will be generated if FDIR decides to switch to the\nsecondary I/O-Board due to PCDU or I/O-Board failures\n\nReaction \u2013\n\nEvent 10.10: SPW_SPWSTR_EE\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_EE LOW\n\nEvent description Early End of Packet\n\nReaction\n\nEvent 10.11: SPW_SPWSTR_IA\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_IA LOW\n\nEvent description Invalid Address\n\nReaction\n\nEvent 10.12: SPW_SPWSTR_WE\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_WE LOW\n\nEvent description Write Synchronization Error\n\nReaction\n\n10 Failure Detection, Isolation and Recovery Concept 331\n\n\n\nEvent 10.13: SPW_SPWSTR_PE\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_PE LOW\n\nEvent description Parity Error\n\nReaction\n\nEvent 10.14: SPW_SPWSTR_DE\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_DE LOW\n\nEvent description Disconnect Error\n\nReaction\n\nEvent 10.15: SPW_SPWSTR_ER\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_ER LOW\n\nEvent description Escape Error\n\nReaction\n\nEvent 10.16: SPW_SPWSTR_CE\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_CE LOW\n\nEvent description Credit Error\n\nReaction\n\nEvent 10.17: SPW_SPWSTR_TO\n\nEvent Name Event Severity Event Parameter\n\nSPW_SPWSTR_TO LOW\n\nEvent description Tick Out\n\nReaction\n\n10.3 Power FDIR\n\nFor reasons of readability in this chapter the sensors for electric current and electric\nvoltages are referred to as V(olt)-sensor and A(mpere)-sensor. In diagrams, I0, I1,\nI2, IX are used for electric currents and U0, U1, U2, UX for voltages with X\nrepresenting a random number 0 or 1 or 2 in case a diagram shows a general\n\n332 R. Witt and J. Eickhoff\n\n\n\napproach valid for multiple electrical current (voltage) sensors. They are\nexchangeable with \u201cA-sensor (V-sensor)\u201d.\n\nThe PCDU implements automatic emergency safety check functions to prevent\nthe system from major failures. These safety checks include\n\n\u2022 SoC observation,\n\u2022 under-voltage protection,\n\u2022 fuse current surveillance and fuse deactivation.\n\nThese checks are essential to trigger reactions in case where the OBSW is not\ncontrolling the satellite properly, which could happen during OBC reconfiguration\n(see also Sect. 10.2.8).\n\nThese safety checks are also active during normal operations. However the\nPCDU does not distinctly report to the OBSW when limits were exceeded and\nreactive measures were taken. The PCDU generates internal Events for these cases\nand stores them in its memory. However that information is not included in the\nHK TM that is periodically polled by the OBSW. This means that the OBSW and a\nground operator are not immediately informed about PCDU reactions and thus it\ncould happen that they do not know about the exact current state of the system. For\nFLP Generation 2 a PCDU firmware update is foreseen to provide full parameter\nvisibility to the OBSW.\n\nDetailed knowledge about the Power Supply System (PSS) including failure\ndetection is represented in the OBSW by the PSS-Controller as was already\nmentioned in Sects. 3.2.4 and 5.6.\n\n10.3.1 Battery State-of-Charge Surveillance\n\nThe PSS_Controller executes an algorithm for the battery SoC determination in\nevery cycle, based on the voltage and electric current values provided by the\nsensors in the PCDU. The State-of-Charge threshold which is defined in the PCDU\nto trigger reactions is also represented in OBSW, but at system boot or reboot the\nOBSW it is not immediately operational. The PCDU uses voltage thresholds at the\nPCDU main switch as indicator for emergency shutdown.\n\nOBSW lower limits values are defined to be higher than the trigger limits of the\nPCDU which during nominal operation leads to the OBSW triggering actions\u2014\n\nFig. 10.16 Battery State-of-Charge Limits and Operational Ranges. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 333\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\nsuch as Software Disconnection of Non-essential Loads (SW-DNEL)\u2014before the\nPCDU algorithms do. This allows for the generation of according failure Events\nand for their storage in the Event TM store for ground visibility instead of a hard\nreset performed by the PCDU without further notice.\n\nThresholds for the State-of-Charge surveillance that trigger reactive actions, are\npresented in Fig. 10.16. The limits are determined to prevent the battery from taking\ndamage through essential discharging.\n\nSoC Warning at 55 % battery SoC\nThis limit is defined for any high-power payload scenario. It will most likely be\ngenerated when several payload components are operated simultaneously,\nincreasing the overall power consumption of the satellite. Exceeding the threshold a\nwarning Event\u2014SOC_WARNING Event (RID 4012)\u2014is issued that the battery\nneeds recharging before further payload operation can be performed.\n\nFDIR will initiate the deactivation of all payload devices to decrease the power\nconsumption. The spacecraft will enter Idle Mode, and will try to take a steady\nconfiguration. The satellite is oriented towards the solar panels towards the Sun to\nrecharge the battery.\n\nThe threshold is chosen such that the system can easily survive another half orbit\nwithout charging in case where the S/C enters the eclipse right away. This is\nsufficient due to a reliable determination of the Sun direction even in the eclipse.\nThe battery charging continues after the eclipse end.\n\nSoC Safe Mode at 45 % battery SoC\nIf for some reason the satellite will not be able to point towards the Sun and\ntherefore cannot recharge the battery the SoC will drop further. At reaching the next\nthreshold SoC Safe Mode, FDIR will trigger the SOC_CRITICAL Event (RID\n4013) which leads to deactivation of all Idle Mode components to further decrease\nthe system\u2019s power consumption.\n\nThis situation should only be reached if more than one malfunction has occurred\nin the system. The satellite will then operate in Safe Mode and will attempt to\nrecharge the battery while coarsely pointing towards the Sun using only ACS\ndevices MGM and MGT.\n\nThe SoC level for SoC Safe Mode is selected such that a complete orbit could be\nsurvived in Safe Mode without recharging the battery. The assumption is, that it\ntakes a maximum duration of one orbit to properly detumble the satellite and to\nre-establish a system state which enables steady charging of the battery.\n\nTCS Survival Mode at 35 % battery SoC\nIf the SoC falls below a further threshold the battery approaches a critical SoC limit\nthat could lead to physical damage. In such case the Thermal Control System is\nswitched into the Survival Mode to further decrease the system power consumption\nand reduces thermal conditioning to only the Safe Mode components. Payload\ndevices are no longer heated and their damage is accepted in this mode to increase\nchances for a survival of the mission. The TCS Survival Mode is explained in\nSect. 10.7.3.\n\n334 R. Witt and J. Eickhoff\n\n\n\nTCS Survival Mode Off at 39 % battery SoC\nTo avoid frequent triggering of the TCS Survival Mode an SoC limit above 35 % is\nselected for re-entering the TCS Nominal Mode. If the battery is charged in the TCS\nSurvival Mode up to 39 % the TCS is switched back into nominal operation. Since\nthe S/C might be tumbling in that mode it is hard to determine a period of time that\nit will take to reach 39 % SoC. However, this limit is deemed sufficient to prevent\nimmediate activation of the TCS Survival Mode again and to a dangerous loop.\n\nSoC PCDU Shutdown at 25 % battery SoC\nPCDU shutdown This is the lowest State-of-Charge level that will be detected by\nOBSW control and equals a battery voltage of approx. 20 V. If this level is reached,\nsevere malfunctions have occurred on board the satellite and complete loss of the\nmission cannot be excluded.\n\nWhen violating this threshold FDIR will isse the SOC_SHUTDOWN Event\n(RID 4014) and will write according safeguard memory entries to log the failure.\nThis will include the battery SoC values (see Sect. 10.2.11). Finally the OBSW will\ncommand the PCDU into Shutdown Mode.\n\nIn this mode, the PCDU will deactivate all loads including the OBC and TTC\nsystems to achieve an absolute minimum power consumption. If the OBSW is no\nlonger able to perform this task, at a minimally lower level of 19 V bus voltage, the\nPCDU will perform the same deactivation of itself.\n\nThe satellite will not be actively orientated as long as the PCDU is in Shutdown\nMode but it is assumed that the battery will be charged slowly during the uncon-\ntrolled tumbling since it will occasionally point towards the Sun. The PCDU will\nremain in standby with a very low power consumption but will still perform battery\ncharge control.\n\nBattery heater disabling Note that when the PCDU is commanded to\nShutdown Mode, it also deactivates automatically the battery heaters\u2019 bi-stable\nrelays (see Sect. 5.5.1) so that the battery is not heated anymore. As mentioned\nbefore, as long as the OBSW is active, the battery temperature will always be kept\nabove 0 \u00b0C by the battery heaters, but the battery cells can be operated as long as\ntheir temperature remains above ?30 \u00b0C. In the scenario considered here, the risk of\nseverely damaging the battery by operating it outside of its operational temperature\nrange needs to be traded against the risk of damaging it by discharging it below its\nlowest operational voltage (19 V) due to the battery heaters being activated.\n\nBattery damage by undertemperature As the battery is thermally very well\nisolated against the satellite system, its heat capacity is fairly large and some heat is\ndissipated by the battery electronics at all times, cooling of the battery from 0 \u00b0C to\n?30 \u00b0C will take in the range of 24 h when no power is generated by the panels,\ndepending on the satellite attitude and other factors. When a reasonable minimum\nof power is generated by the panels, more heat will be dissipated by the battery\nsystem, further reducing the risk of it reaching a critically low temperature.\n\n10 Failure Detection, Isolation and Recovery Concept 335\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\nBattery damage by undervoltage On the other hand when FDIR has com-\nmanded the PCDU to Shutdown Mode due to a low SoC and no power is generated\nby the panels in the following hours, the battery voltage may reach its lowest\noperational value of 19 V faster than the battery temperature reaches ?30 \u00b0C. If the\nbattery heaters were activated in such case, they would increase the permanent\ndamage to the battery caused by discharging it below 19 V. Therefore, the bi-stable\nrelays are deactivated when the PCDU is commanded to Shutdown Mode, since\ndeep discharging would occur before the battery cools down below its operational\nlimit. The likeliness of damage caused by deep discharging is considered more\nsevere.\n\nNote that power generated by the solar panels within a few hours after shutdown\nshould prevent any permanent damage to the battery. Depending on the duration\nand severity of any non-operational conditions of the battery (be it a low temper-\nature or a low voltage), permanent battery capacity loss will be the result of such\nconditions.\n\nPCDU recovery Upon reaching a voltage level above 21.5 V the PCDU will\nenter Recovery Mode 0 during which the PCDU heaters will be activated to achieve\na PCDU temperature of at least ?40 \u00b0C. Furthermore in this PCDU mode the SoC\nestimation for the battery is resumed. With proper values from the SoC estimation\nthe PCDU will boot and enter Recovery Mode 1.The transitions for the PCDU from\nShutdown/Boot/Launch Mode to MiniOps and Safe Mode can be taken from\nSect. 5.5.3\u2014Fig. 5.12. The SoC level for the PCDU to re-initiate the boot up\nsequence is selected such that a direct fallback into shutdown mode is avoided.\n\nThe PCDU will deactivate its heaters as soon as its temperature rises above the\nminimum operational limit of ?40 \u00b0C. It is assumed that the dissipated heat of the\noperating PCDU is sufficient to keep the PCDU in its operational temperature range.\n\nDepending on the duration during which the satellite was uncontrolled, the\ntemperature in the system might have dropped. Therefore from Recovery Mode 1\nonwards also the OBC and TTC will be heated until reaching their minimum\noperational temperature. For the OBC this is controlled by bi-metal switches in the\nhousing. Having reached the required temperature, the PCDU will identify the\ncurrent dropping to 0.0 A for the OBC and TTC heater circuits. In the following\nPCDU MiniOps Mode the OBC and TTC will be activated as well as the ACS Safe\nMode component power lines. The OBC and OBSW will boot and take over control\nof the satellite again and will attempt a detumbling of the satellite to enter Safe\nMode and eventually to re-establishing a steady state.\n\n10.3.2 Voltage Levels and Fuse Currents\n\nIt is not only the battery SoC that needs careful monitoring to avoid to damage\ndevices or the spacecraft system. The diverse on-board equipment devices must be\nprotected against overvoltage and overcurrent. For this the FLP PCDU contains\nlatching current limiters (LCLs) which are called \u201cFuse\u201d by the manufacturer.\n\n336 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\nDue to volume constraints inside the PCDU box of FLP Generation 1 not all\ndevices on board the spacecraft will be secured via an individual fuse. Some of the\nfuses are used for two or three independent\u2014meaning not redundant\u2014devices.\nEven if multiple devices are secured by one fuse, each device has its individual\npower switch inside the PCDU.\n\nFor multiple devices connected to one fuse the maximum permissible power\nvalue is derived from the combined power consumption of all (refer to Table 17.10\nin the annex for fuse/device assignment and power consumption limits). The PCDU\nin its HK data can only provide the currents per fuse, not per connected device.\nTherefore, an additional analytical mechanism is required for device protection.\n\nThe PSS_Controller stores a table with the maximum characterized power\nconsumption for each device. Depending on which devices on a particular fuse are\npowered the upper limit is computed as depicted in Fig. 10.17. The provided fuse\ncurrent is compared against the limit and upon exceeding the limit an Event is\ngenerated. FDIR will then deactivate all devices connected to that fuse since with\nonly a LIMIT_VIOLATION event as input FDIR cannot isolate the malfunctioning\none.\n\nIf only one device is connected to a particular fuse or if only one device on a fuse\nfor multiple unis is powered, the approach to deactivate all of them is still appro-\npriate. No different method is required in the logic.\n\nThe operator on ground then will need to perform further investigation to\ndetermine which of the devices showed the increased power consumption. If a\ndevice shows no power consumption at all despite a closed PCDU switch and not\nopen fuse the PSS_Controller will trigger the Event WARNING_NO_CURRENT\nwhich leads to FDIR switching off this device. The PSS_Controller needs the\nfollowing information:\n\nFig. 10.17 Fuse Current Limit. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 337\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\n\u2022 All switch statuses\n\u2022 All fuse statuses\n\u2022 Fuse ? device assignment\n\u2022 Switch ? device assignment\n\u2022 Nominal/maximum device power consumption table\n\nThe power monitoring is performed by the PSS_Controller in the OBSW. It has\nthe task to observe the electric fuse currents and to initiate isolation and recovery\nactions before the PCDU built-in functions (fuses) need to.\n\n10.3.3 Failure Handling for PSS Devices\n\nIn the PCDU one battery string is charged through the power output of one dedi-\ncated solar panel. There is no cross-coupling between battery strings and solar\npanels\u2014see Fig. 5.9 for details. Charging can be activated by closing the\nCharge-Switch. A battery string having reached its maximum charge status\u2014i.e.\nexceeding the maximum permissible voltage\u2014is reported to the PCDU by the\nbattery electronics. The PCDU therupon opens the Charge-Switch of the affected\nstring.\n\nFor the solar panels and cells, electric voltage and current values are observed at\nall times by the PSS_Controller. However since there is no way to recover from\nsolar cell defect these control mechanisms only raise informational Events TM for\nthe ground operator to potentially make adaptions to the power control algorithms.\n\nThe deployment of the two side panels of the solar array is detected by the\nPCDU and is stored in an SA-Deployed flag in the OBSW. At OBSW boot/re-boot\nthe PSS_Controller reads the values of the solar panel deployment Reed sensors to\nget information about the state of the solar panel deployment mechanism during the\nOBSW boot process. Solar panel deployment will be attempted after a specified\ntime of 180 s after the separation is detected. If the solar panel deployment has not\nbeen successfully conducted after five attempts, ground interaction is required.\n\nOne difficulty in modeling failures in the PCDU is that it is hard to distinguish\nbetween failures in the sensor, and failures in the device which this sensor is\nhelping to observe. This problem occurs at two different points in the PCDU\nsystem. Figure 5.9 shows that each of the lines to the battery strings (top) and the\nsolar panels (left side) are equipped with only one V-sensor and one A-sensor. If\none of the sensors returns an unexpected value it is not clear immediately whether\nthe sensor is wrong or the device is damaged. The following sections provide the\nconsiderations to evaluate sensor measurements that show unexpected behavior.\n\n338 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\n10.3.3.1 Overall System Power Budget\n\nThe PCDU HK TM packet includes the electric currents and voltages of all solar\npanels (SP) and battery strings (Bat) as well as an electric current and voltage for\nthe main power-bus. The values are tracked at the measurement point marked with\n\u201cUMPB\u201d (main power-bus) in Fig. 5.9 on the right side at the bottom. The total\npower budget can be calculated in two ways:\n\nPin \u00bc 3 ? \u00f0U ? I\u00de\u00f0SP\u00de\u00fe 3 ? \u00f0U ? I\u00de\u00f0Bat\u00de \u00f010:1\u00de\n\nPout \u00bc I ? U\u00f0MPB\u00de \u00f010:2\u00de\n\nThe voltage drop over the PCDU main switch is in the range of some 100 mV\nand thus is negligible for the energy budget calculation on board. As the BCRs\ndissipate some power the input power will be marginally higher than what the\nPSS_Controller will compute using bus voltage and current.\n\nIf the comparison proves wrong, a failure in a sensor can be the source. A failure\nof the main power-bus sensors cannot be isolated because no reasonable limits can\nbe determined for these without complex considerations. The electric voltage\ndepends on the input via battery or solar panels and the electric current on the main\npower-bus strongly depends on the current spacecraft configuration and maneuver.\n\n10.3.3.2 Solar Panel Failure Handling\n\nSolar panels in this context also include their respective A- and V-sensors in the\nPCDU since they are required to determine the health state of the panels.\nFigure 10.18 illustrates the case of sensors showing unreasonable values.\n\nDue to the nature of the ADC converter in the PCDU the values for electric\ncurrent and voltage will always include noise. Therefore the value is assumed not to\nbe equal to \u20180\u2019 even if there is no current or voltage present. Mentioning a value of\n\u20180\u2019 in the following tables actually means a value between 0?dx\u20260+dx with dx\nbeing specified as dx = 0.2 V.\n\nTables 10.5 and 10.6 show the conflict of detecting a failure if a sensor does not\nprovide a measurement due to a broken wire, which actually is the same as showing\n\u20180\u2019. The illustration in Fig. 10.18 shows the mechanism for treating the cases of\nTables 10.5 and 10.6.\n\nThe sunFlag is set in the ACS_Controller according to the algorithm described\nin [125]. If sunFlag is \u20180\u2019, the S/C is orbiting through the eclipse.\n\nThe Sun vector cannot not be determined reliably in the pointing modes.\nHowever it is not required for such a mode since attitude determination is con-\nducted with FOG and STR systems. Therefore failure detection of solar panels is\nnot performed during pointing modes since they are not permanently directed\ntowards the Sun. The same is true for the S/C being in the eclipse. The failure\n\n10 Failure Detection, Isolation and Recovery Concept 339\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\ndetection is only performed during Idle and Safe Mode. The flow in Fig. 10.18 is\ndescribed hereafter:\n\n\u2022 If the satellite is in the eclipse or in a pointing mode (Inertial, Target, Nadir,\nCoarse Nadir) no failure detection for solar panels is performed but the total\nenergy budget is calculated as described in Sect. 10.3.3.1.\n\n\u2022 If the satellite is in Safe Mode or Idle Mode the goal is to direct the solar panels\ntowards the Sun. Therefore\u2014and unless a detumble maneuver has to be per-\nformed\u2014the values of the electric current and voltage should be greater than\n\u20180\u2019.\n\n\u2022 If a sensor is registered to show \u20180\u2019 while the other two sensors show a value\ngreater than \u20180\u2019, this sensor is reported as faulty.\n\nFig. 10.18 Solar Panel and Sensor Failure Detection. \u00a9 IRS, University of Stuttgart\n\n340 R. Witt and J. Eickhoff\n\n\n\n\u2022 If a different case occurs, a triplex voting is performed as shown in Fig. 10.18.\nThe value in the middle of the two extremes is taken as basis for the voting\nmechanism. If the electric current of one sensor differs from the voting reference\nby more than 0.5 A the identified deviation is reported with an Event. If the\nvoltage of one sensor differs from the basis voltage for more than 0.4 V the\nidentified deviation is reported with an Event.\n\n\u2022 If the overall budget is incorrect it is reported.\n\nThe evaluation of Fig. 10.18 in FDIR is detailed in Fig. 10.19. The counters are\nintroduced because Events might be triggered\u2014e.g. through particle impact on the\nsolar panels\u2014that induce a short-term higher/lower voltage output. As a tolerating\nmeasure the devices are not marked as faulty instantaneously but after multiple\noccurrences of such Events.\n\n\u2022 If both current and voltage for the same solar panel are reported to be \u20180\u2019 the\nfailure counter for the solar panel is increased until reaching 2.\n\n\u2022 If only one sensor is reported either to be \u20180\u2019 or to be voted out its failure counter\nis increased until reaching 4.\n\n\u2022 If either counter reaches its limit the corresponding device is marked as faulty by\nFDIR.\n\nTable 10.5 Failure modes of solar panel A-/V-sensor (1)\n\nOccurrence A-sensor shows \u20180\u2019\n\nAssumption Sensor is correct Sensor is broken\n\nCases Solar panels not\ndirected towards Sun\n\ncheck\nattitude/pointing\n\nBattery strings are still charged correctly\noverall energy budget\n\n\u201ccomputed input from solar panels measured\nouput on S/C bus\u201d does not come out even\n\nSatellite in eclipse\ncheck sunFlag\n\n(line to) solar panels\nbroken/malfunctioning\n\nTable 10.6 Failure modes of solar panel A-/V-Sensor (2)\n\nOccurrence V-sensor shows \u20180\u2019\n\nAssumption Sensor is correct Sensor is broken\n\nCases Solar panels not directed\ntowards Sun\n\ncheck\nattitude/pointing\n\nBattery strings are still charged correctly\noverall energy budget\n\n\u201ccomputed input solar panels measured ouput\nS/C bus\u201d does not come out even\n\nSatellite in eclipse\ncheck sunFlag\n\n(line to) solar panels\nbroken/malfunctioning\n\n10 Failure Detection, Isolation and Recovery Concept 341\n\n\n\n\u2022 In case the energy budget is detected to be uneven, ground interaction will be\nrequired. No reaction will be performed by OBSW FDIR.\n\n\u2022 If no failures are detected the counters are decreased. This is a simplified version\nof the device failure mechanism from Sect. 10.4 to reduce complexity.\n\n10.3.3.3 Battery Failure Handling\n\nIn this section the potential failures of battery strings are considered. Battery strings,\nin this context also include the respective A- and V-sensors since they are required\nto determine the string statuses. The consideration is comparable to the one in the\nprevious section for the solar panels and their sensors.\n\nTable 10.7 shows the PSS Event LIMIT_VIOLATION[IX, HIGH]. It will be\ngenerated if one of the A-sensors shows an electric current exceeding 12 A. In a\nnominal case this value should never be reached. Two scenarios are possible root\ncauses for this symptom. In both cases further investigation is required by ground to\nrecover the system.\n\nFig. 10.19 Solar Panel Failure Evaluation in the System FDIR. \u00a9 IRS, University of Stuttgart\n\n342 R. Witt and J. Eickhoff\n\n\n\n(a) The sensor works correctly and the battery is charged with a current greater\nthan it is supposed to be. In such case the battery could overheat and be\ndamaged. FDIR will disable the charge process by deactivating the corre-\nsponding BCR.\n\n(b) The sensor itself is defective and provides a corrupted value. Here the risk of\nbattery damage through heating up is too high and FDIR will also disable the\ncharge process.\n\nTable 10.8 shows the PSS Event LIMIT_VIOLATION[IX, LOW]. This Event\nwill be generated when the A-sensor of a battery string shows a value below ?12 A.\nThis implies that the discharge current for a battery string is too high. Two different\nroot causes might lead to this Event.\n\n(a) The sensor is working correctly and the discharge current is too high. This\ncould result from a short circuit somewhere in the system and the battery (all\nstrings) being discharged quickly. No direct reaction is required because this\nshould lead to a subsequent step of failure detection.\n\n(b) Either the PSS_Controller detects one or more devices drawing excessive\npower and issues an Event FUSE_OVERCURRENT[fuseID] which results in\nthe corresponding switches being deactivated by FDIR.\n\nTable 10.7 Failure modes of battery string A-/V-sensor (1)\n\nOccurrence A-sensor shows >12A\n\nEvent LIMIT_VIOLATION[IX, HIGH]\n\nAssumption Sensor is correct Sensor is broken\n\nCases Sensor shows too high charge\ncurrent.\nRisk of battery heating up and\ndamaging\n\nSensor shows wrong measurement\n\nReaction Battery charging will be disabled\nby deactivation of BCR\n\nRisk is too high, battery charging is\ndisabled. ground interaction required\n\nTable 10.8 Failure modes of battery string A-/V-sensor (2)\n\nOccurrence A-sensor shows < ?12A\n\nEvent LIMIT_VIOLATION[IX, LOW]\n\nnekorbsirosneStcerrocsirosneSnoitpmussA\n\nCases Sensor shows too high a discharge\ncurrent. Might be a short circuit in the\nsystem. This should be isolated by PSS\nfuse current surveillance or PCDU fuse\ndeactivation\n\nSensor shows wrong\nmeasurement. Other sensors\nshould show correct values\n\nEvents FUSE_DEACTIVATED or\nFUSE_OVERCURRENT\n\nDIFF_BAT_SENSOR[IX]\n\ngnikramotdaellliwstnevehtoByrassecenenoNnoitcaeR\nthe sensor as faulty\n\n10 Failure Detection, Isolation and Recovery Concept 343\n\n\n\n(c) Or the OBSW is too slow with the deactivation and the PCDU fuse surveil-\nlance already undertook the deactivation of the corresponding fuse by itself. In\nthat case, the PSS_Controller will generate a FUSE_DEACTIVATED Event.\n\n(d) The sensor is broken and shows an incorrect value. In such case the other two\nbattery A-sensors should show a correct value and a significant difference\nbetween the A-sensor values should be detected. This will lead to the Event\nDIFF_BAT_SENSOR[IX]. If both Events are recognized by FDIR the iden-\ntified sensor will be marked as faulty.\n\nThe cases of Tables 10.8 and 10.9 are illustrated in Fig. 10.20 with the\nPSS_Controller and in parallel with the corresponding FDIR reactions.\n\n\u2022 Starting at the top left the PSS_Controller checks for a charge current that is too\nhigh. This could happen if the regulation with the BCRs is defective. However it\nis not likely to occur. If an electric current exceeding 12 A is detected a\nLIMIT_VIOLATION event is generated. Its parameters comprise the sensor that\ncaused the limit violation and a parameter to indicate that the measurement\nviolated the upper limit. Upon this limit violation\u2014since unlikely to appear but\ndangerous for the battery string\u2014FDIR disables the charge process by deacti-\nvating the BCR for that battery string.\n\n\u2022 If a limit violation of the lower limit \u201312 A is detected too much power is drawn\nfrom one or all battery strings. This could happen in case of a short circuit\nsomewhere in the system. This is covered by the fuse surveillance of OBSW or\nPCDU and does not need a particular reaction of FDIR.\n\n\u2022 If the measurements are within \u201312 \u2026 +12 A, a triplex voting is performed to\nidentify measurements that are outside of the allowed range. It is expected that\nthe A-sensors show similar values at all times within a range of \u00b12 A. In the\ntriplex voting the value in between the two others is chosen as basis. If one of\nthe other two sensor measurements are \u00b12 A below or above the basis value, this\none is reported. This should not happen and indicates a failure with the\nA-sensor. It is marked as faulty by FDIR.\n\n\u2022 In case where a FUSE_OVERCURRENT Event is reported, FDIR will disable\nthe fuse.\n\nTable 10.9 Failure modes of battery string A-/V-sensor (3)\n\nOccurrence V-sensor shows significant undervoltage\n\nEvent BATTERY_STRING_UNDERVOLTAGE\n\nAssumption Sensor is correct Sensor is broken\n\nCases Battery String is not\ncharged anymore\n\nThe overall energy budget should show a significant\ndifference between input and output\n\nEvents No additional event ENERGY_BUDGET_UNEVEN\n\nReaction Needs to be observed\nby ground FDIR.\n\nBoth events will lead to marking sensor as faulty\n\n344 R. Witt and J. Eickhoff\n\n\n\nTable 10.9 shows the PSS Event BATTERY_STRING_UNDERVOLTAGE.\nFor each battery string separate Events are generated considering their importance\nand sensitivity to damage. It will be generated if the sensor of a battery string shows\na voltage below 20.5 V. Again two scenarios are to be considered:\n\n(a) The sensor works correctly and one of the strings seems not to be charged\nanymore. This will require ground investigations to decide further actions. No\naction will be performed by FDIR.\n\n(b) The sensor shows a wrong value. In that case the battery is fine but the balance\nof the overall power consumption should indicate a power difference between\npower input and output (see also Sect. 10.3.3.1). This generates a second\nEvent ENERGY_BUDGET_UNEVEN. If both Events are generated within\none PST cycle it is assumed that the sensor is broken and the battery works\nfine. The sensor will be marked as faulty by FDIR as shown in Fig. 10.21.\n\nIn Table 10.10 the Event BATTERY_STRING_OVERVOLTAGE is described.\nIt will be generated if the V-sensor of a battery string shows that the voltage level of\na string is measured to exceed 26 V. Nominally this Event should never occur\nbecause the BCRs limit the voltage. However it could also mean that the sensor\nshows a corrupted value. The two following scenarios are possible (see also\nFig. 10.22):\n\nFig. 10.20 Battery and Sensor Failure Detection. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 345\n\n\n\nFig. 10.22 Battery string overvoltage Event and isolation. \u00a9 IRS, University of Stuttgart\n\nFig. 10.21 Battery string undervoltage Event and isolation. \u00a9 IRS, University of Stuttgart\n\nTable 10.10 Failure modes of battery string A-/V-sensor (4)\n\nOccurrence V-sensor shows significant overvoltage >26 V\n\nEvent BATTERY_STRING_OVERVOLTAGE\n\nAssumption Sensor is correct Sensor is broken\n\nCases Battery string shows\novervoltage\n\nSensor shows wrong measurement. Other sensors\nshould show correct values\n\nEvents none DIFF_BAT_SENSOR\n\nReaction BCR will be\ndeactivated\n\nBoth events will lead to marking sensor as faulty\n\n346 R. Witt and J. Eickhoff\n\n\n\n(a) The sensor shows a correct value and the voltage level of one string is too\nhigh. If no other Event is generated this will require ground investigations for\nfurther actions. The charge process will be disabled and the BCR will be\ndeactivated.\n\n(b) The more likely case is that the sensor is broken and shows a wrong value. In\nthat case the sensors of the two other strings will show a correct value and the\nEvent DIFF_BAT_SENSOR[V-sensorID] is generated. Upon detecting both\nEvents FDIR will mark the corresponding V-sensor as faulty.\n\nIf there is a significant difference between all sensors for both the A-sensors and\nthe V-sensor of a battery string it is very likely that the battery string itself is faulty\nor the line to the battery string is damaged. In that case a DIFF_BAT_SENSOR\nEvent is reported for both A- and V-sensor of a string. FDIR disables charging the\nstring and provides a DEVICE_FAULTY Event to support further ground analysis\nas shown in Fig. 10.23.\n\nFinally there exists the potential failure case of the battery temperature exceeding\nits permitted upper limit, which is defined to be 45 \u00b0C, i.e. 10 K below the operating\nlimit given by the manufacturer of the cells [58]. Therefore each battery string is\nequipped with two temperature sensors for thermal monitoring. In case where the\ntemperature limits for safe battery operations are violated this is detected\u2014first by\nthe TCS_Controller which then throws a COMPONENT_TEMP_OOL_HIGH\nevent (RID 5804) containing the object-ID of the affected string (see Sect. 10.7).\n\nIn such case FDIR disables the string charging by disabling the charge activation\nflag of the affected string in the PCDU to prevent irreversible damage of the cells.\nThis constitutes a severe FDIR case and ground intervention is needed. If no ground\nintervention happens quickly after the error occurred, the battery will be discharged\nsubsequently and the SoC will fall continuously, which in turn causes loads to be\ndeactivated at different levels (see Sect. 10.3.1). This however has the positive\n\nFig. 10.23 Battery string faulty. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 347\n\n\n\neffect to reduce the heat dissipated within the satellite system. The charge activation\nflag must be reset by ground or is reset automatically by the PCDU when it reboots,\nwhich will be the case once the SoC drops below its lowest limit of 25 %.\n\n10.3.4 System Reactions\n\nSection 10.3.1 introduced thresholds for the energy that is stored in the battery. The\nsurvival of the battery is essential for an operational mission. Depending on the SoC\nlevel according reactions have been defined to decrease the overall power con-\nsumption and to allow for re-charging of the battery strings.\n\nIn Sect. 10.3.2 the monitoring of single devices and fuse currents was intro-\nduced. Depending on the occurring Event, reactions will be executed as defined or\nare initiated automatically. If the electric current of one device or of a device-group\non a fuse is too high the fuse is disabled. This leads to the device not being available\nfor further operations. If the corresponding assembly of the device will report that it\ncannot keep the current mode because of missing redundancies this leads to a\nspacecraft mode not being executable anymore. The System will automatically\ntransition into a defined fallback mode according to the PSS_Controller mode table.\n\nIf as explained in Sect. 10.3.3 a solar panel or battery string is identified as being\nfaulty, the system will be set into Safe Mode immediately. A reduction of the\noverall power consumption is attempted to allow for ground to analyze the problem\nand to elaborate adequate actions. A switch into the Safe Mode is also performed\nwhen the charge process behaves unexpected and is disabled. If the voltage of a\nbattery string is determined to be too low the balancing in the PCDU automatically\ndraws power from the healthy strings. Events that initiate an immediate Safe Mode\nswitch are shown in Fig. 10.24. However, the PSS_Controller needs to make sure\nthat at no point all BCRs are marked faulty together since this could cause a mission\nloss. There exists a safeguard mechanism that prevents FDIR from disabling all\nBCRs at the same time.\n\nSAFE_MODESP_FAULTY[SPX]\n\nBAT_FAULTY[stringX]\n\nDEVICE_FAULTY[BCRX]\n\nDEVICE_FAULTY[sensorX]\n\nFDIR::SafeModeSwitch()\n\nSystem::SafeMode()\n\ncommand\n\nFig. 10.24 PSS Safe Mode switch Events. \u00a9 IRS, University of Stuttgart\n\n348 R. Witt and J. Eickhoff\n\n\n\n10.3.5 PSS FDIR Events\n\nEvent 10.18: SOC_WARNING\n\nEvent Name Event Severity Event Parameter\n\nSOC_WARNING LOW \u2013\n\nEvent description This event will be generated if the State-of-Charge of the battery\ndrops below 55 %\n\nReaction FDIR initiates transition into Idle Mode to switch off payload\ncomponents\n\nEvent 10.19: SOC_SAFE_MODE\n\nEvent Name Event Severity Event Parameter\n\nSOC_SAFE_MODE HIGH \u2013\n\nEvent description This event will be generated if the State-of-Charge of the battery\ndrops below 45 %\n\nReaction FDIR initiates transition into Safe Mode to reduce the overall\npower consumption\n\nEvent 10.20: TCS_SURVIVAL_MODE\n\nEvent Name Event Severity Event Parameter\n\nTCS_SURVIVAL_MODE HIGH \u2013\n\nEvent description This event will be generated if the State-of-Charge of the battery drops\nbelow 35 %\n\nReaction FDIR initiates transition of TCS into Survival Mode to further reduce\nthe overall power consumption. In this mode, payload is not heated\nanymore, payload damage is accepted to increase chances for mission\nsurvival\n\nEvent 10.21: TCS_SURVIVAL_MODE_OFF\n\nEvent Name Event Severity Event Parameter\n\nTCS_SURVIVAL_MODE_\nOFF\n\nLOW \u2013\n\nEvent description This event will be generated if the State-of-Charge of the battery\nexceeds 39 % after the TCS Survival Mode had been activated\n\nReaction FDIR commands TCS into nominal mode again to prevent the system\nfrom cooling off too far\n\n10 Failure Detection, Isolation and Recovery Concept 349\n\n\n\nEvent 10.22: SOC_SHUTDOWN\n\nEvent Name Event Severity Event Parameter\n\nSOC_PCDU_SHUTDOWN HIGH \u2013\n\nEvent Name Event Severity Event Parameter\n\nEvent description This event will be generated if the State-of-Charge of the battery drops\nbelow 25 %\n\nReaction FDIR commands the PCDU into Launch Mode to decrease the system\npower consumption to the lowest possible value. The PCDU switches\noff the complete system until a higher SoC is reached\n\nEvent 10.23: WARNING_NO_CURRENT\n\nEvent Name Event Severity Event Parameter\n\nWARNING_NO_CURRENT LOW Device object-ID\n\nEvent description This event will be generated if a device is switched on but shows\nnopower consumption\n\nReaction FDIR switches off the component\n\nEvent 10.24: LIMIT_VIOLATION\n\nEvent Name Event Severity Event Parameter\n\nLIMIT_VIOLATION LOW Object-ID, HIGH/LOW\n\nEvent description This event will be generated if an upper or lower limit is exceeded in a\nsensor measurement. The objectID indicates the according sensor\n\nReaction FDIR counts the events to reach a decision or marks the sensor as faulty\nimmediately\n\nEvent 10.25: DEVICE_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_FAULTY MEDIUM object-ID\n\nEvent description This event will be generated if FDIR decides to switch off a device\nand mark it as faulty\n\nReaction \u2013\n\nEvent 10.26: DEVICE_OFF\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_OFF MEDIUM object-ID\n\nEvent description This event will be generated if FDIR disables a device or BCR\n\nReaction \u2013\n\n350 R. Witt and J. Eickhoff\n\n\n\nEvent 10.27: SENSOR_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nSOC_SAFE_MODE LOW Sensor object-ID\n\nEvent Name Event Severity Event Parameter\n\nEvent description This event will be generated if a sensor shows unexpected behavior\n\nReaction FDIR counts the events to reach a decision or marks the sensor as\nfaulty immediately\n\nEvent 10.28: DIFF_SP_SENSOR\n\nEvent Name Event Severity Event Parameter\n\nDIFF_SP_SENSOR LOW SP Sensor object-ID\n\nEvent description This event will be generated if a A-(V-)sensor around the solar panels\nshows a different behavior than the other two solar panel A-(V-)\nsensors\n\nReaction FDIR counts the events to reach a decision or marks the sensor as\nfaulty immediately\n\nEvent 10.29: DIFF_BAT_SENSOR\n\nEvent description This event will be generated if a A-(V-)sensor around the battery\n\nEvent Name Event Severity Event Parameter\n\nDIFF_BAT_SENSOR LOW Bat Sensor object-ID\n\nstrings shows a different behavior than the other two battery string A-\n(V-)sensors\n\nReaction FDIR counts the events to reach a decision or marks the sensor as\nfaulty immediately\n\nEvent 10.30: ENERGY_BUDGET_UNEVEN\n\nEvent Name Event Severity Event Parameter\n\nENERGY_BUDGET_\nUNEVEN\n\nLOW Sensor object-ID\n\nEvent description This event will be generated if the calculation introduced in\n10.3.3.1 - Overall System Power Budget is not even\n\nReaction FDIR uses this event to reach a decision for faulty sensors. If no\nfurther event is noted in the PST cycle, no reaction is initiated but the\nground operator is informed\n\nEvent 10.31: SP_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nSP_FAULTY MEDIUM SP object-ID\n\nEvent description This event will be generated if a solar panel is assumed to be\nfaulty\n\nReaction FDIR switches the system into Safe Mode immediately\n\n10 Failure Detection, Isolation and Recovery Concept 351\n\n\n\nEvent 10.32: BAT_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nBAT_FAULTY HIGH BAT object-ID\n\nEvent description This event will be generated if a battery string is assumed to be\nfaulty\n\nReaction FDIR switches the system into Safe Mode immediately\n\nEvent 10.33: BATTERY_STRING_UNDERVOLTAGE\n\nEvent Name Event\nSeverity\n\nEvent Parameter\n\nBATTERY_STRING_UNDERVOLTAGE HIGH Battery string\nobject-ID\n\nEvent\ndescription\n\nThis event will be generated if an unexpected low voltage level is detected for a\nbattery string\n\nReaction If the overall energy budget is uneven, this event is assumed to show a sensor\nfailure. The sensor is marked as faulty.\nOtherwise the string is not charged anymore. No reactions from FDIR are\nundertaken\n\nEvent 10.34: BATTERY_STRING_OVERVOLTAGE\n\nEvent Name Event Severity Event Parameter\n\nBATTERY_STRING_\nOVERVOLTAGE\n\nMEDIUM Battery string object-ID\n\nEvent description This event will be generated if an unexpected high voltage level is\ndetected for a battery string. This event is not expected during nominal\noperations since the solar panels do not provide a voltage level higher\nthan 26 V. Therefore, the sensor should be faulty\n\nReaction If a difference in the voltage sensor measurements is detected as well,\nthe sensor is marked as faulty.\nIf no other event is detected, no reaction is required\n\nEvent 10.35: SAFE_MODE\n\nEvent Name Event Severity Event Parameter\n\nSAFE_MODE HIGH SP object-ID\n\nEvent description This event will be generated if FDIR decides to command a\ntransition into Safe Mode\n\nReaction \u2013\n\n352 R. Witt and J. Eickhoff\n\n\n\n10.4 Equipment FDIR\n\n10.4.1 Device Failure Versus I/O-Board Failure Symptoms\n\nAs described in Sect 3.2.2, formal information about the communication with\ndevices on board an FLP-based satellite is stored in the software within\ndeviceHandler Objects. This information includes\n\n\u2022 the communication protocol used by the device,\n\u2022 the verification mechanism for the device response packets e.g. an algorithm to\n\ncalculate a checksum,\n\u2022 the position of the HK data in the packet, their format and calibration functions\n\nand\n\u2022 the knowledge to interpret validity information which is delivered by the device\n\nitself in its response packet.\n\nChecksum and protocol information is only available for devices that provide their\ndata in digital form. As mentioned before, the PCDU is utilized as converter for all\nanalog input from electric and temperature sensors. Sanity checks for these sensor\nmeasurements are performed in the subsystem controller objects in the OBSW.\nThere exist no separate deviceHandlers for those sensors.\n\nIn this and the following chapter the term \u201cdevice\u201d always refers to components\nthat provide digital information and whose response packets are interpreted by a\ndeviceHandler. As a first point of contact for incoming data from devices, a\ndeviceHandler object performs the formal checks of the response packet. On this\nlevel of knowledge, there are basically three types of error checks performed which\nmay lead to possible failure Events:\n\n(1) The message from the device hardware does not conform to the protocol that\nis expected\n\n(2) The received message is empty\n(3) Or a parameter in a device command response (set by the device\u2019s\n\nmicrocontroller/CPU) signals that the measurement of the device is not valid\n(e.g. for the STR).\n\nIf one of these cases occurs, the device handler object generates a Failure Event\nMessage (see also Sect. 3.3.3) with the according eventID, the listed object-ID as\nthe reporting object and the severity level LOW. The event will be forwarded to the\nglobal FDIR object as previously shown in Fig. 10.3. It indicates that something\nunexpected has occurred with the reporting device and reactive measures should be\ntaken.\n\nHowever, the challenge of failure handling on device level is that all devices that\noffer communication with the OBC/OBSW are not directly connected to the\nProcessor-Board but instead through the I/O-Board, as can be seen in Fig. 1.6. This\nmeans that a failure event reported by a deviceHandler object could be induced by\nthe device itself and some also by a malfunction in the I/O-Board as well. An\n\n10 Failure Detection, Isolation and Recovery Concept 353\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\nindication for a typical I/O-Board malfunction would be several deviceHandler\nobjects reporting a missing response packet at the same time. The failure source\ncannot be determined uniquely considering a single event message at a time.\nEvaluation of failure messages on this level is performed after all event messages in\none PST cycle have been forwarded and processed. The mechanism for device\nfailure Event handling is explained in the following paragraphs.\n\nThe Fig. 10.25 depicts the Event message routing on deviceHandler object level:\n\n\u2022 The first information required from the Event is the domain the Event was\ngenerated in. The 3rd Byte of the reporter object-ID is checked for the value\n\u20180 \u00d7 44\u2019\u2014compare to Table 3.1. This value indicates that a deviceHandler is the\nsource of the Event. Only if this value is found, the following mechanism will\ntake action. For the object-IDs see Sect. 3.2.8.\n\n\u2022 A second check provides the information whether the Event was generated by a\ncommon device handler, or by a SpW device-managing handler. If the 2nd Byte\nof the reporter object-ID is \u20180 \u00d7 44\u2019 as well, the source is a common device\nhandler.\n\n\u2022 In that case the Failure Event Message will be stored into a two-dimensional\n{key/value}-list (in C++ called <map>) with the corresponding key being the\ndevice\u2019s object-ID. This will be performed for all Failure Event Messages of\ndevices reported in one cycle.\n\n\u2022 In the meantime a counter deviceErrors in the OBSW will be increased incre-\nmentally for every Failure Event Message stored in the list. After storing all\n\nFig. 10.25 Event message routing on deviceHandler object level. \u00a9 IRS, University of Stuttgart\n\n354 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nfailure events, a function is executed that reports back rmapMissedReplies, the\nnumber of RMAP replies that have not been received during the past cycle.\n\nDepending on the two values of rmapMissedReplies and deviceErrors, the\nevaluation of the device failure events can be performed. Figure 10.26 shows the\nthree possible cases that need to be evaluated. Several SW-variables are included in\nthe explanation of the mechanism.\n\n\u2022 deviceErrors: counts the total number of device errors within one PST cycle.\n\u2022 rmapMissedReplies: denotes the number of RMAP-packets that have been\n\nexpected by the SW RMAP implementation to be provided by the I/O-Board,\nbut have not been received. Expected RMAP packets\u2014received RMAP packets.\n\n\u2022 list {objectID/eventMessage}: A list of all deviceHandler objects, identified by\ntheir objectID, and a corresponding eventMessage. If an event is received for a\ncertain objectID, this event is stored in the list. Otherwise, the message field is\ncleared for this objectID.\n\n\u2022 list {objectID/failureCount}: A list of all deviceHandler objects, identified by\ntheir objectID, and a corresponding failureCount. The failureCount is incre-\nmented when FDIR identified a failure of that device in a PST cycle.\n\n\u2022 FAILURE_INCREMENT: Constant variable.\n\u2022 COUNTER_DECREMENT: Constant variable.\n\u2022 FAILURE_INCREMENT and COUNTER_DECREMENT are variables to\n\nadjust the failure evaluation mechanism.\n\nIn Fig. 10.27 and based on that later in Fig. 10.30 the failure evaluation\nmechanism is visualized. The overall paradigm applied here comes from aircraft\navionics architectures (see [145]). Failures in the device lead to a steep increase of\n\nFig. 10.26 Evaluation of deviceError and rmapMissedReplies counters. \u00a9 IRS, University of\nStuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 355\n\n\n\nthe device failure counter by the value given through FAILURE_INCREMENT.\nPhases in which the devices work properly slowly decrease the counter by the value\ngiven through COUNTER_DECREMENT. If the failures are too numerous, the\nlimit is exceeded and the device is rebooted or deactivated.\nIn the evaluation scheme three cases have to be determined:\n\n1. The value of the variable rmapMissedReplies equals \u20180\u2019:\nThis means that no malfunction has been reported for the I/O-Board. All events\nthat have been reported for devices are really caused by these devices. In this\ncase, a deviceFailureCount() function will be executed that steps through the\npreviously filled {key/value}-list. If an event has been reported for an object-ID,\na failure count is increased by FAILURE_INCREMENT in another\n{key/value}-list that stores a failure counter for each possible objectID.\nIf there is no event for an object-ID, the failure count will be decreased by\nCOUNTER_DECREMENT.\nThe values of FAILURE_INCREMENT and COUNTER_DECREMENT serve\nthe evaluation mechanism for unhealthy devices and are chosen such that a fine\nadjustment of the mechanism is possible without much effort.\n\n2. The value rmapMissedReplies is equal to or greater than deviceErrors:\nThis means that all reported device failures are caused by a malfunctioning\nI/O-Board, and the devices themselves are not faulty. Only the failure counter\nfor the I/O-Board will be increased.\n\n3. The value rmapMissedReplies is smaller than deviceErrors:\nThis indicates a mixture of the two cases above, the I/O-Board is faulty, but also\none or more device(s) is/are faulty as well. It can not be reasonably determined,\nwhich of the devices\u2019 failures are caused by the faulty I/O-Board so as general\napproach the failure counter is increased for all reported devices.\n\n10.4.2 Device Failure Isolation and Recovery\n\nIt is expected that devices will show random errors during operation because of\nenvironmental effects or degradation and wear-out effects. The FLP Generation 1\npayload computer in particular is not hardened against radiation and is expected to\n\nFig. 10.27 Device failure evaluation mechanism [from 145]. \u00a9 IRS, University of Stuttgart\n\n356 R. Witt and J. Eickhoff\n\n\n\nshow distortion. Therefore the general situation is somewhat different compared to\na commercial spacecraft which would not include such experimental components.\n\nThus, it is not considered reasonable to switch off a standard device which was\nmarked faulty after only one malfunction symptom. Some devices\u2014when mal-\nfunctioning due to a Single Event Upset (SEU)\u2014can only be recovered through\npower-cycling, which is normally not the preferred method of treating the device.\nThe failure evaluation paradigm based on the failure count already was sketched out\nin Fig. 10.27. It shall be further detailed now:\n\nWhen the counter for the device exceeds a certain limit, recovery/reconfiguration\nis initiated by FDIR. After the above described functions of memorizing the Events\nand increasing the failure counters, an evaluation function as depicted in Fig. 10.28\nis executed to determine the necessary actions of FDIR.\n\nThis function steps through the {objectID/failureCount}-list and evaluates the\nvalue of the failureCount variable for each object-ID.\n\n\u2022 If failureCount exceeds FAILURE_LIMIT, FDIR determines the device that is\nfaulty and distinguishes between the following cases:\n\n\u2013 If the faulty device is either the primary I/O-Board or the PCDU, the event\nDEVICE_FAULTY is triggered with [pcdu] or [ioBoard] as parameter. Both\n\nFig. 10.28 Device failure evaluation. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 357\n\n\n\ncases trigger the same reaction that is the attempt to switch the I/O-Board as\ndescribed in Sect. 10.2.3.\n\n\u2013 If the faulty device is a standard device like an ACS sensor, a mechanism for\nshutting down devices by FDIR is chosen that is based on Fig. 10.27.\n\nThe approach followed is that two counters are defined to initiate different\nactions:\n\n\u2022 Whenever a device reports a failure event, failureCount is increased by\nFAILURE_INCREMENT as previously introduced. This is also shown in\nFig. 10.29.\n\n\u2022 If failureCount exceeds FAILURE_LIMIT, the device is assumed to be faulty\nand cannot recover by itself. However, it worked for some time, so it is not\nnecessarily deemed yet to be fully defective.\n\n\u2022 Exceeding the first limit will initiate the system to deactivate the device\u2019s power\nswitch in the PCDU and reactivate it in the next cycle, meaning to power-cycle\nthe device and take it back into operation.\n\n\u2022 Upon power-cycling the device, the device bootCount as second counter in turn\nis increased by BOOT_INCREMENT.\n\n\u2022 failureCount is reset to \u20180\u2019 and the device is rebooted.\n\u2022 Depending on the behavior of the device after the boot, failureCount is\n\nincreased when the next failure is reported.\n\u2022 bootCount in the meantime decreases by BOOT_DECREMENT in every FDIR\n\nstep.\n\u2022 The scenario shown in green color in Fig. 10.29 represents the following flow:\n\nFig. 10.29 Device Failure Handling\u2014Extended Failure Confirmation Mechanism. \u00a9 IRS,\nUniversity of Stuttgart\n\n358 R. Witt and J. Eickhoff\n\n\n\n\u2013 The device shows few failures after the reboot;\n\u2013 bootCount decreases significantly in that period;\n\u2013 After four failures, failureCount exceeds FAILURE_LIMIT;\n\u2013 bootCount is increased by BOOT_INCREMENT, but does not yet exceed\n\nBOOT_LIMIT;\n\u2013 The device is power-cycled and rebooted, but not marked faulty.\n\n\u2022 The scenario shown in black color in Fig. 10.29 represents the following flow:\n\n\u2013 after three more failures in the device in a short period, FAILURE_LIMIT is\nexceeded again;\n\n\u2013 bootCount has not decreased significantly, at the same time it is increased by\nBOOT_INCREMENT and then exceeds BOOT_LIMIT;\n\n\u2013 the device is marked faulty and is shut down permanently. It will be marked\nas FAULTY (see Sect. 3.2.2) and will not be reactivated by OBSW.\n\nThe benefit of this mechanism is a quite freely possible adjustable number of\nfailures that are tolerated for each devices in a certain period of time. These settings\neven can be adjusted individually per instance of a device type\u2014considering the\ndegradation of the equipment over mission lifetime.\n\n10.4.3 Failure and Boot Counter Evaluation\n\nBasis for the following values is the decision to tolerate at maximum one reboot of a\ndevice per 15 min = 900 s without marking it faulty. A device is rebooted\n(FAILURE_LIMIT is exceeded) after\n\n\u2022 a maximum of 10 failures in 9 min if the device recovers in between the failures\n\u2022 or 5 successive failures.\n\nFor devices for which the data is polled at 5 Hz (refer also to Sect. 3.4.3) this\nmeans within 15 min there are (900 s * 5 Hz) = 4500 times of data polls.\n\nConcerning the effect of a reboot and marking the device FAULTY it has to be\nconsidered that the FDIR is scheduled with 10 Hz so within 900 s it is processed\n9000 times. If bootCount is incremented to 9000 after the first boot, it will be reset\nto zero after 15 min.\n\nThe increase of failureCount is explained by Fig. 10.30 and with the following\nsettings:\n\n10 Failure Detection, Isolation and Recovery Concept 359\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n10 ? FAILURE INCREMENT ? 9 ? 60 ? FAILURE DECREMENT ?FAILURE LIMIT\n5 ? FAILURE INCREMENT ?FAILURE LIMIT\n\n! FAILURE LIMIT \u00bc 4600\n! FAILURE INCREMENT \u00bc 1000\n\n! 10 ? 1000? 9 ? 60 ? FAILURE DECREMENT ? 4600\n! FAILURE DECREMENT ? 10000?46009?60?10 \u00bc 1\n\nBOOT LIMIT \u00bc 9009\nBOOT INCREMENT \u00bc 9000\nBOOT DECREMENT \u00bc 1\n\n\u00f010:3\u00de\n\nWith these settings, it is allowed for a device to provoke a failure every 500th\nresponse packet. For 5 Hz polling rate, this is 1 wrong packet per 100 s.\n\nThe values of these limits, increments and decrements can be configured at\nsoftware compile time to adapt the device failure event handling mechanism to\neffects yielded by the system tests.\n\nFig. 10.30 Device Failure Evaluation Mechanism\u2014Determination of the Constants. \u00a9 IRS,\nUniversity of Stuttgart\n\n360 R. Witt and J. Eickhoff\n\n\n\n10.4.4 Device Handler FDIR Events\n\nEvent 10.36: DEVICE_REBOOT\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_REBOOT MEDIUM Device object-ID\n\nEvent description This event will be generated if FDIR decides to reboot a faulty\ndevice\n\nReaction \u2013\n\nEvent 10.37: DEVICE_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_FAULTY MEDIUM Device object-ID\n\nEvent description This event will be generated if FDIR decides to switch off a faulty\ndevice\n\nReaction \u2013\n\n10.5 TTC FDIR\n\nPossibilities for Failure Detection, Isolation and Recovery of the TTC system are\nvery limited. Under nominal conditions both receivers need to be active in hot\nredundancy, otherwise a single-failure could lead to a loss of the mission. The same\nis true for the CCSDS-Boards of the OBC. As can be seen in Figs. 1.6 and 6.1, the\nCCSDS-Boards and the TTC receivers and transmitters (or transceivers) have a\ncross-coupled connection.\n\n10.5.1 Receiver Failure Handling\n\nThere exists only one way for on-board FDIR to detect a malfunction of a receiver.\nIf power consumption of one receiver rises over its maximum limit (see Table 17.10\nin the annex) the fuse for this receiver will be triggered and the receiver will be\nswitched off. Each receiver has its individual fuse as can be seen in Table 17.10.\n\nFollowing the hot redundancy approach, receivers do not differ in their function.\nBoth forward received TC packets to both CCSDS-Boards. The only difference\nmight be a minimum output signal time offset due to electronic parts manufacturing\n\n10 Failure Detection, Isolation and Recovery Concept 361\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nvariation or due to degradation. This means that as long as one receiver is working\nproperly, TCs will be forwarded to both CCSDS-Boards and will reach the OBSW,\nbut the OBSW is not able to detect, which receiver submitted it to the OBC. TCs\ncorrupted by a defective receiver obviously will be ignored by the OBSW. Except\nthis, it is not possible to detect a malfunction in a receiver as long as the power\nconsumption stays in its expected range and an unhealthy receiver fails passive.\n\nA different way to detect failures in the receivers is available for the ground\nstation and is explained for the complete TTC subsystem in Sect. 10.5.3.\n\nA worst case scenario for a receiver malfunction is the one, where a defective\nreceiver does not fail passive but still forwards data to the CCSDS-Boards. Should\nthis receiver forward data faster than the healthy one, and with a correct start\nsequence at the beginning of the CLTU, with data being corrupted somewhere in\nthe CLTU to the malfunction, these corrupted data will be forwarded to the\nCCSDS-Boards.\n\nThe CCSDS-Boards, upon detection of a start sequence (see Fig. 10.31) will\nignore data sent by the second (healthy) receiver input channel. If the decoding\nCCSDS-Board detects an uncorrectable error in an extracted frame from the\ndefective receiver during the unpacking process, it ignores the rest and discards the\n\nFig. 10.31 CCSDS-Board input channel selection and OBSW Frame Acceptance Error. \u00a9 IRS,\nUniversity of Stuttgart\n\n362 R. Witt and J. Eickhoff\n\n\n\nentire packet. After that, the CCSDS-Board starts scanning for a start sequence\nagain. In that context a worst case scenario could mean, that an active failing\nreceiver could prevent TCs from reaching the OBSW. A possibility to cover this\nproblem is given in the Frame Acceptance Report (FAR), that is created by the\nCCSDS-Board automatically [55].\n\nThis report can be read by OBSW via SpaceWire RMAP access and yields a\nSelected Channel Input (SCI) field, which provides the channel on which the\nCCSDS-Board received and accepted data. This Event is forwarded to ground in a\nlive Event TM packet and ground can identify the blocking receiver and can\ndeactivate it via HPC1 command to the PCDU.\n\nOrbit simulations can be performed quite accurate on ground. Therefore, it is\nalways possible to predict a ground contact phase very precisely, and these ground\ncontact time slots should preferably be uploaded to the OBSW cyclically for the\nnext several ground contact slots\u2014e.g. always for the next 24 h ahead (also refer to\nthe mission planning topic later in Chap. 14). Knowing when ground interaction\nshould happen, the system can determine that apparently TCs have not reached the\nsatellite and can issue an according Event TM to ground. However, this should not\nhappen as long as so far both receivers have been working properly. If one receiver\nfails before or during a contact phase ground should again use the Frame\nAcceptance Report (FAR) to determine which receiver apparently is not performing\nproperly\u2014see Fig. 10.32.\n\nFig. 10.32 Unhealthy receiver switch-off by FDIR or Ground. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 363\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\n\n\nIn case where even the second receiver fails, FDIR will realize a TC timeout\nafter a certain period of (current limit 120 s) where contact was expected to have\nbeen established. This will lead to the currently active receiver being marked\nunhealthy, which will be switched off. Since the system will always try to achieve a\nstate where it might be reached from ground, FDIR will automatically switch on the\ncurrently deactivated receiver\u2014one receiver always must be active.\n\nBy doing this, there is a final chance that the receiver previously marked\nunhealthy has recovered its health state. If that is not the case, FDIR will toggle\nbetween the receivers during all future contact phases as long as power is available.\nIf contact cannot be established anymore, the mission is lost but this case goes far\nbeyond the required single failure robustness paradigm.\n\n10.5.2 Transmitter Failure Handling\n\nThe two transmitters should not be powered at the same time since their signals are\nrouted to two shared antennas and both transmitters sending will lead to a corrupted\nsignal that cannot be interpreted on ground. Additionally for legal reasons a\ntransmitter may only be powered when in range of a ground station. Therefore, the\nsystem may only power up a transmitter when the satellite approaches the ground\nstation.\n\nDuring nominal operation, this is performed via time-tagged TCs in the OBSW,\nthat power the transmitter. As as second measure, the transmitters are powered by\nthe TTC COMM_CONTROLLER object (Fig. 6.3) upon detection of a carrier lock\ndue to RF-signal from ground station. The carrier lock is set when the receiver\nrecognizes a signal on the TC carrier frequency. However, it cannot be determined\non board the satellite whether the transmitter properly sends TM or not. This is for\nthe ground to decide when they expect to receive TM.\n\nIn case of TM reception problems on ground the initial recovery attempt for the\ntransmitter would be the deactivation of the nominal transmitter by direct com-\nmand. The TTC_Subsystem thereupon will automatically activate the redundant\ntransmitter (see also Sect. 6.3) and TM will be sent again.\n\nSimilar as for the receivers, one way of detecting a failure in the transmitter is to\nobserve the power consumption and to deactivate a transmitter when it exceeds the\nlimit provided in Table 17.10 in the annex.\n\n10.5.3 Transceiver Health Monitoring\n\nThe TTC subsystem cyclically reports certain TTC equipment housekeeping\nparameters as telemetry to ground. The very specific parameters however are\nsubject to analysis by ground personnel. Please also refer to the explanations to\n\n364 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nTables 6.13 and 6.14 as well as to the reference health data (BOL values) provided\nby the supplier in annex Sect. 17.5.2\n\n10.5.4 CCSDS-Board FDIR\n\nA possibility to determine a malfunction in a CCSDS-Board is provided through\ninteraction with the ground station. TCs are sent with a dedicated Virtual Channel\nidentification (VCID) in the packet. The receivers both forward all TCs, but the\nCCSDS-Boards filter for their VCID. A CCSDS-Board only forwards TCs with the\ncorrect corresponding VCID. A ground operator by this means can identify if TCs\nare not acknowledged by the spacecraft.\n\nThe CCSDS-Boards share a cross-coupled link between each other (see Fig. 1.6\n). On this link, Command Link Control Words (CLCW) are exchanged between the\nCCSDS-Boards. CLCWs provide information about TC decoding in the\nCCSDS-Boards. The CLCWs are inserted into all TM Transfer Frames of each\nboard and are sent to the ground for further evaluation. For each uplinked TC Frame\nthese exist according CLCWs. Table 10.11 shows the content of a CLCW. Most\nimportant for failure monitoring by ground is the third byte providing the status of\ncarrier and bit lock.\n\nThe Control Word Type furthermore contains information whether the content is\nsubmitted from the board targeted to by the selected VC in the uplinked spacecraft\nTCs\u2014or whether it is included in the second board\u2019s TM idle frames. In the latter\ncase the nominal first board has a transmission problem for CLCWs (and subse-\nquently for all TM). More details about the failure monitoring with CLCWs can be\ntaken from [55]. The CCSDS-231.0-B-2 standard [27] also covers the use of the TC\nframe counter when the telecommunication is run in Acceptance Check and Data\nMode (AD).\n\nTable 10.11 Content of a Command Link Control Word (CLCW)\n\nByte\nNumber\n\nCLCW Register\nbits\n\nCLCW contents\n\nFirst [31:24] Control\nWord\nType\n\nCLCW\nVersion\nNumber\n\nStatus\nField\n\nCOP\nIn\nEffect\n\nSecond [23:16] Virtual\nChannel\nID\n\nReserved Field\n\nThird [15:8] No RF\nAvailable\n\nNo Bit\nLock\n\nLock\nOut\n\nWait Retransmit Farm B\nCounter\n\nReport\nType\n\nFourth [7:0] Report Value\n\nFifth N/A [RS232 Break Command]\n\n10 Failure Detection, Isolation and Recovery Concept 365\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\n\n\n10.5.5 Communication System Events\n\nThis section collects events that are involved in the communication system FDIR.\n\nEvent 10.38: FRAME_ACCEPTANCE_ERROR\n\nEvent Name Event\nSeverity\n\nEvent Parameter\n\nFRAME_ACCEPTANCE_\nERROR\n\nLOW CCSDS-Board object-ID, Selected\nChannel Input SCI\n\nEvent\ndescription\n\nThis event will be generated if a CCSDS Board identifies a corrupted input TC\nframe and drops the discards the data\n\nReaction Event will be routed to ground immediately since it can only occur upon ground\ncontact. Ground operator needs to decide whether VC switch is required\n\nEvent 10.39: CCSDS_DISCARD_DATA\n\nEvent Name Event\nSeverity\n\nEvent Parameter\n\nCCSDS_DISCARDED_DATA LOW CCSDS-Board object-ID,\nSelected Channel Input SCI\n\nEvent\ndescription\n\nThis event will be generated if a CCSDS-Board reports that it discarded data\n\nReaction Event will be routed to ground immediately since it can only occur upon ground\ncontact. Ground operator needs to decide whether VC switch is required\n\n10.6 ACS FDIR\n\nThis chapter describes implemented failure detection methods for the ACS devices.\nLater in the chapter furthermore the ACS mode transitions are explained, which are\ninitiated by the ACS_Controller as reaction to detected unit malfunctions.\n\nThe ACS hardware of the FLP Generation 11 consists of the sensors MGM,\nFOG, SUS, GPS and STR. Except for the SUS, these sensors deliver measurements\nthat are processed directly by the OBC. Failure detection requires permanent\nobservation of equipment on-board telemetry. As illustrated in Sect. 3.2.4 and\nFig. 3.9 the monitoring of these measurements is encapsulated in the subsystem\ncontroller object\u2014in this case the ACS_Controller\u2014as described in Sect. 7.11. For\n\n1For the FLP Generation 2 the ACS can be upgraded to a full AOCS with a propulsion module (see\nSect. 7.10) which however is not treated here in the FDIR chapter as no such spacecraft/mission is\nimplemented yet at time of publishing.\n\n366 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\nthe sensors, a sensor signal fusion and comparison of their redundant units provides\nthe basis for failure detection. For the actuators\u2014Reaction Wheels (RW) and\nMagnetotorquers (MGT)\u2014the redundancy management in FDIR cases is more\ncomplex and is described later in this chapter.\n\n10.6.1 Magnetometer Failure Detection\n\nTwo magnetometers are available in hot redundancy on board the FLP platform.\nTheir single magnetic field values are monitored and undergo a limit check as a first\nstep in the ACS_Controller. The monitor limits are set in the OBSW to a design\nvalue of 66 \u00b5T for one axis, which is the maximum expected magnetic field\nintensity around Earth (see [141], Chap. 7).\n\nA limit violation only can occurs if induced by a magnet on ground during tests,\nbut not in flight. Therefore such a limit violation in orbit indicates a failure in the\ndevice. This can only be determined during periods in which the magnetotorquers\nare not powered. Otherwise the MGM measurements will be biased by the MGTs\u2019\nmagnetic field. This implies that the monitoring limit check in the OBSW has to be\nactivated and deactivated depending on the MGT activation status.\n\nFig. 10.33 MGM failure detection. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 367\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\nIf both MGM sensors report a limit violation for the same axis, this indicates that\nit is caused by an MGT coil still being active and the alternating operations timing\nbetween MGT and MGM being incorrect.\n\nAccording to information from the MGM manufacturer it is furthermore not\nreasonable that all axes show a very small magnetic field value (<10 \u00b5T) or\nnear-zero at the same time and the absence of value changes in one axis (not\ndisplayed in the following image) also indicates an MGM internal failure.\n\nThe process of failure detection for the MGMs is depicted in Fig. 10.33 and is\nperformed during every measurement cycle of the ACS.\n\nAs a second step, the two MGM sensors can be used to detect a failure in the\nmeasurements by comparison of the single magnetic field value along each axis of\nthe two devices. But this comparison is not sufficient to isolate the failure, since it\ncannot be recognized which of the two devices is mistaken.\n\nIn case where such a measurement signal incompatibility occurs, an according\nEvent is reported to ground and will need further investigations there. To back-up\nthis case, a propagator for Earth\u2019s magnetic field is implemented in the ACS\nalgorithms to provide the magnetic field vector if no MGM is available for some\ntime\u2014see Fig. 10.34.\n\n10.6.2 GPS Sensor Failure Detection\n\nAs explained in Sect. 7.5 the FLP Generation 1 is equipped with three DLR GPS\nreceivers that are running in hot redundancy since they are designed as non radiation\nhard devices. From communication with the manufacturer it is also known that in\nradiation induced error cases (SEUs) the GPS receivers often show higher power\nconsumption and corrupted communication (not only corrupted navigation data).\nThese symptoms are already covered with the mechanisms in Sects. 10.4 and 10.3.\n\nFig. 10.34 MGM cross monitoring and comparison to propagation. \u00a9 IRS, University of Stuttgart\n\n368 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\nFig. 10.35 GPS Sensor Monitoring. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 369\n\n\n\nIn case where no other instance reports a failure and marks the sensor measurements\nas invalid, the data from the GPS receivers are compared against each other.\n\nHaving three receivers available a 2-to-1 sensor voting can isolate a malfunc-\ntioning device. If voting identifies one instance as malfunctioning, FDIR will restart\nthe device and will check whether it thereafter is operating properly again. If not,\nFDIR will power off the device permanently. The number and logic of retry cycles\nis explained further below in this section. Corresponding Event TM allows ground\nto follow the actions taken on board. The voting process is illustrated in Fig. 10.35.\nIt is deployed in detail for GPS 0, but the same logic implies for GPS 1 and GPS 2:\n\n\u2022 GPS 0 delivers its measurement and the deviceHandler receives the data.\n\u2022 The deviceHandler performs the formal check for validity, protocol and/or CRC\n\nas already described in detail before in Sects. 3.1 and 10.4.\n\u2022 If the formal check proves NOT to be successful, the deviceHandler triggers an\n\nFDIR Event\u2014either that it did not receive a response (MISSED_REPLY) or\nthat the response is not correct (DEVICE_UNKNOWN_REPLY).\n\n\u2022 If the response is ok, the GPS sensor data is written into the datapool and is\nmade accessible for further operations.\n\n\u2022 A second instance in device monitoring is the PSS_Controller. It observes the\npower consumption of the devices and signals if a device exceed the permissible\nelectric power consumption. The corresponding Event is FUSE_CURRENT_\nHIGH.\n\n\u2022 Measurements and validFlags are provided to the ACS_Controller which per-\nforms sensor redundancy management as described in Fig. 3.9.\n\n\u2022 Depending on the number of valid GPS measurements, the ACS computes the\nsatellite position distances between the individual GPS measurements.\n\n\u2022 Branch (1)\u2014all GPS sensors are valid up to this point:\nThree distances are calculated for each sensor pair. The cases are explained\nbelow with the nominal case being (a). The following failure cases (b), (c) and\n(d) are illustrated in Fig. 10.36.\n\n(a) (b) (c)\n\nFig. 10.36 GPS monitoring\u2014permitted deviation between the measurements. \u00a9 IRS, University\nof Stuttgart\n\n370 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n(a) All measured positions are within the maximum distance and are valid. In case\nall measurements are deemed correct, the first instance is selected by default.\n\n(b) One of the distances (dr?) is greater than the maximum permissible deviation.\nThis means that the middle one is assumed to be the correct one. The valid one\nis reported to FDIR (GPS_VALID[gps1]) which then knows that the two\nothers are faulty.\n\n(a) Two measurements (dr, dr??) exceed the maximum permissible deviation. It is\nassumed that the instance involved into the calculation of these two is the\nfaulty one (here GPS1). By default the first remaining valid instance is selected\n(here GPS0). If that is identified as faulty for other reasons (e.g. power con-\nsumption) the second instance is selected. The faulty instance is reported with\nGPS_INVALID[gps1].\n\n(c) If all measurements are above the limit, the controller signals all GPS sensors\nto be faulty NO_VALID_GPS.\n\n\u2022 Branch (2)\u2014One GPS sensor invalid, two sensors valid:\n\n\u2013 The distance between the sensor measurements is calculated and checked\nagainst an upper limit. If it is above the limit, none of the measurements is\nselected and both sensors are reported to be faulty with NO_VALID_GPS.\n\n\u2013 Otherwise the first or second instance is selected by default.\n\n\u2022 Branch (3)\u2014One sensor valid:\n\n\u2013 If only one sensor is deemed valid at this point, and has passed the previous\nchecks, it is assumed to be valid. This is an unsafe case but with three\nsensors, this should not occur regularly or for longer periods. Through the\nEvents and GPS TM the ground has full visibility and can examine this\nfurther if necessary.\n\nNO_VALID_GPS: For the case where there is no valid GPS measurement\navailable, the ACS algorithms include an orbit propagator for the computation of\nthe S/C position. The propagator takes over immediately if no valid GPS position\ninformation is available. In the first hour the propagator (using linear extrapolation)\nhas an accuracy of <0.1\u00b0 [125]. If after a while there is still no GPS information the\nACS subsystem and as result the entire satellite system will be switched into Safe\nMode. The mechanism is the same as introduced in Sect. 10.4.3 with the settings:\n\nFAILURE LIMIT \u00bc 4600\nFAILURE INCREMENT \u00bc 1000\nFAILURE DECREMENT \u00bc 1\n\nBOOT LIMIT \u00bc 30000\nBOOT INCREMENT \u00bc 10000\nBOOT DECREMENT \u00bc 1\n\n\u00f010:4\u00de\n\nAfter 5 successive reports of a GPS receiver being invalid, or 10 times within\n9 min, the receiver is rebooted. If the receiver needs to be rebooted 5 times within\n\n10 Failure Detection, Isolation and Recovery Concept 371\n\n\n\n30 min (= 1800 s ? 18000 FDIR cycles ? max. 18000 times\nBOOT_DECREMENT), it is deactivated and marked as permanent faulty. With\nthis mechanism, phases with high chances for radiation effects such as a passing of\nthe South Atlantic Anomaly can be compensated.\n\n5 ? BOOT INCREMENT ? 18; 000 ? BOOT DECREMENT ![BOOT LIMIT\n5 ? 10000? 18000[ 30000\n\n\u00f010:5\u00de\n\nIf all receivers show the same behavior, they are assumed to be damaged and are\nmarked faulty after about 30 min and the ACS_Assembly object will report that it\ncannot keep the mode which results in ACS_Subsystem not being able to keep its\nmode. The spacecraft will automatically initiate a Safe Mode transition in such case.\n\nFor further investigation the GPS provides an info response as depicted in\nFig. 10.37. This message can be requested by OBSW from the GPS receivers or by\nground via PUS Service 2 and comprises details about the health state of the GPS\nreceiver. It also reports errors that are marked with an \u2018E\u2019 in its message Char 18\nand more specifying text in Chars 23 ff until end-Char minus 4. The content of this\ndescriptive text message is not handled within the OBSW FDIR but must be\nprocessed on ground.\n\n10.6.3 Star Tracker System Failure Detection\n\nThe star tracker system is used for fine attitude measurement. Two STR Camera\nHead Units (CHU) are arranged to point in different directions to avoid both CHUs\nbeing blinded by the same light source. The CHUs deliver individual measurements\n\u2014illustrated in Table 10.12\u2014that are combined in the ACS_Controller.\n\nFig. 10.37 GPS command response\u2014from [63]. \u00a9 IRS, University of Stuttgart\n\n372 R. Witt and J. Eickhoff\n\n\n\nInside the star tracker electronics diverse internal health and data plausibility\ntests are performed by the internal microcontroller which delivers a precise infor-\nmation for many failure cases. The protocol of the attitude TM delivers the data\nlisted in Table 10.12. The important content is the \u201cValid\u201d bit in the packet which\nprovides information about the correctness of the delivered attitude as far as\nidentified by the STR electronics. This packet is sent to the OBSW periodically at a\nrate of 5 Hz. If the attitude is considered invalid by the STR electronics, it will\nnevertheless be submitted to the I/O-Board, but the datapool validFlag for the\nattitude will be set to invalid by the OBSW.\n\nIf an abnormal Event in the STR system is detected by the microcontroller, an\nEvent telemetry packet is generated and is sent to the OBSW. However, the report\nwill be used by ground for investigations and not inside OBSW FDIR. A detailed\n\u201cStatus Report TM\u201d can be requested from the STR system for further analysis\u2014\n\nTable 10.12 Star tracker Attitude Telemetry Packet\u2014from [61]\n\nAscAttitudeTM\n\nFunction Type: TM(5,1)\n\nHeader Report ID Attitude Info COI Time Checksum\n\n16 bytes 2 bytes 16 bytes 8 bytes 6 bytes 2 bytes\n\nInfo\n\nFlags Residual Locks Objects Stars/Fail ACG\nFloor\n\nACG\nCeil.\n\n8 bits 1 byte 1 byte 1 byte 1 byte 12 bits 12 bits\n\nFlags\n\nSequence Correction CameraID Highrate BBO Time Ref. Valid\n\n1 bit 1 bit 2 bits 1 bit 1 bit 1 bit 1 bit\n\nTable 10.13 Star tracker Event Report Telemetry\u2014from [61]\n\nAscEventReportTM\n\nFunction Type: TM(5,1), TM(5,2), TM(5,3), TM(5,4)\n\nHeader Event_ID Parameter 1 Parameter 2 Checksum\n\n16 bytes 2 bytes 4 bytes 4 bytes 2 bytes\n\nTable 10.14 Star tracker Housekeeping Telemetry\u2014from [61]\n\nAscHKTM\n\nFunction Type: TM(3,25)\n\nHeader Structure\nID\n\nTemp\nCPU\n\nTemp\nSMPS\n\nHK\nCHU-A\n\nHK\nCHU-B\n\nHK\nCHU-C\n\nHK\nCHU-D\n\nMode Checksum\n\n16\nbytes\n\n1 byte 1 byte 1 byte 2 bytes 2 bytes 2 bytes 2 bytes 1 byte 2 bytes\n\n10 Failure Detection, Isolation and Recovery Concept 373\n\n\n\nsee Table 10.13. This report contains information about failed communication and\ndebug Events in the STR software. The request and the analysis needs to be\nperformed by a ground operator.\n\nEvery second request to the STR (also 5 Hz) is reserved for a \u201cHK TM packet\u201d\nas shown in Table 10.14. This packet contains the measurements of the internal\ntemperature sensors needed by the Thermal Control System. These are the tem-\nperature values of the STR CPU, of the power supply and of the CCD sensors of\neach CHU. It also provides the operational mode, which by default is \u201cApplication\nMode\u201d [61].\n\nAll telemetry packets contain a checksum, that is verified by the STR\ndeviceHandler in every communication cycle. If the CRC check proves to be not\nsuccessful, the STR is marked faulty as introduced in Sect. 10.4.\n\n10.6.4 Sun Sensor Failure Detection\n\nIn the FLP Generation 1 analog sun sensors\u2014simple solar cells\u2014are used for\ndetermination of the sun direction. They provide an electric current depending on\nthe intensity of the sun\u2019s radiation meeting the cells. Pairs of two cells are placed at\n8 different locations on the spacecraft yielding a total of 16 sensors. An\nanalog/digital converter (ADC) within the PCDU converts the analog signal of the\ncells into a digital signal that is provided within the PCDU HK data packet to the\nOBC/OBSW.\n\nFigure 10.38 shows the principle of the sun sensor data transmission and failure\ndetection:\n\n\u2022 Two paired sensors SUSX1 and SUSX2 (8 pairs, X denotes the pair ID\u2014see\nFig. 7.4) provide their measurements to their common deviceHandler after\nconversion in the PCDU.\n\nFig. 10.38 Sun sensor monitoring in ACS. \u00a9 IRS, University of Stuttgart\n\n374 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\n\u2022 A limit check is not deemed reasonable for two solar cells. Their output ranges\nbetween a minimum of 0 and, according to the specification, a maximum of\n75 mA.\n\n\u2022 A comparison between the measurements of both sensor of a pair is performed.\nIt is assumed that deviation through degradation is small as the cells are of the\nsame type. If the comparison shows a difference of more than 10 mA, the\nsensors are checked for their absolute value.\n\n\u2022 If one sensor shows a significantly low output value (around 0) it is assumed to\nbe invalid due to damage. A SUS_ZERO warning Event is generated and the\nsensor is marked as invalid for further processing.\n\n\u2022 If only a difference of more than 10 mA can be detected, the faulty unit cannot\nbe isolated. If the illumination intensity is high on that side of the S/C, the\nsensors are important for the correct determination of the sun direction.\nTherefore in such case it is deemed better to use a mean value of the two sensors\nthan no value at all. SUS_DIFF Event signals the deviation between the two\nsensors for further analysis by ground.\n\nMethods for the filtering of noise on the sensors, compensation of albedo, and\ncompensation of loss of one sensor pair have been developed for the first FLP\nsatellite \u201cFlying Laptop\u201d in [125] but these features are not yet integrated into the\nOBSW release used for launch. It is one of the optional features for later in-flight\nimprovements.\n\n10.6.5 Fiber Optic Gyro Failure Detection\n\nFour Fiberoptic Gyroscopes (FOG) are arranged in a tetrahedron configuration (see\nSect. 7.7) to allow for a 3-out-of-4 redundancy in case where one sensor is\ndefective. The FOGs are monitored by OBSW in the same way as all other devices,\nobserving power consumption and performing communication checks.\nAdditionally, the redundancy allows for a measurement comparison between one\nFOG and the three others.\n\nFor a working FOG set the sensor failure detection can be performed using the\nfollowing approach2 as displayed in Fig. 10.39:\n\n\u2022 The single measurements can be compared to hard limits which have been set\nfrom a maximum rotational rate in the operation, or by the manufacturer.\n\n\u2022 The rotational vector of the spacecraft derived from the measurements of the\nFOG sensors can be obtained from four individual calculations. Three FOG\nsensors are required for the calculation of the vector, so there are four different\ntriplets to calculate it, with four different results.\n\n\u2022 The four different rotational vectors can be compared pairwise.\n\n2For the detailed explanation of the method please refer to [136].\n\n10 Failure Detection, Isolation and Recovery Concept 375\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\n\u2022 The corrupted measurement disturbs three of the four rotational vectors and\ncorrupts their direction and magnitude away from the actual result.\n\n\u2022 So, the vector with the greatest deviation from all three others in magnitude and\ndirection is assumed to be the correct one.\n\n\u2022 The FOG that contributed to the calculation of all other three is the faulty one.\n\nFurthermore the rotational rates can also be determined from the star tracker\nmeasurements. The rates computed from star tracker quaternion changes over time\nprovide a comparable precision as the values from the FOG system.\n\nIn [136] it was identified that the FOGs of the first FLP spacecraft \u201cFlying\nLaptop\u201d show a high degree of degradation, probably due to the long period of\nstorage.3 This leads to an increased noise level for the sensors which in turn makes\ndistinction between incorrect measurements and noise influence difficult.\nFigure 10.40 depicts the noise level of the different FOGs of the \u201cFlying Laptop\u201d.\nFOG2 shows the worst result. Assuming a rotational rate in Idle Mode of maxi-\nmum 1\u00b0/s which corresponds to 0.0174 rad/s, then the noise and actual rotational\nrate are of the same magnitude for FOG2. Even FOG3 (orange) and FOG0 (gray)\nstatistically provide a noise level that is close to 0.01 rad/s.\n\nFor this reason in the particular case of the \u201cFlying Laptop\u201d mission the rota-\ntional rates are deduced from the STR system.\n\nNote: Because of the low importance of the FOGs on the \u201cFlying Laptop\u201d the\nsystem in this mission will not transit to Safe Mode if the FOG system is not\navailable anymore.\n\nIt could be considered to exclude FOG2 right from the start of the \u201cFlying\nLaptop\u201d mission and still have sufficient devices to determine the rotational rate of\n\nFig. 10.39 Mechanism for FOG Monitoring. \u00a9 IRS, University of Stuttgart\n\n3The FOGs were procured in a far too early phase of the satellite project and were stored several\nyears until integration and environmental tests were completed.\n\n376 R. Witt and J. Eickhoff\n\n\n\nthe satellite. However, a missing redundancy leads to FDIR not being able to detect\nwhen one of the remaining three FOGs provides a corrupted measurement. This is\nonly applicable when the rotational rate cannot be determined properly anymore.\n\nFor the FOGs no additional failure detection mechanism is foreseen. Tests\nduring the Commissioning Phase of the \u201cFlying Laptop\u201d mission comparing the\nrotational rates from STR and FOGs might provide better results and opportunities\nfor failure checks.\n\n10.6.6 Magnetotorquer Failure Detection\n\nThere are two cold redundant magnetotorquer systems on board an FLP spacecraft.\nEach torquer is arranged along one of the three major axes x, y and z of the satellite\n(see Fig. 7.13). One MGM/MGT cycle is 5, 0.5 s of which the MGM performs\nmeasurements. Hence, the MGT can be activated for max. 4.5 s in every cycle,\ndepending on the request from ACS control. The MGT Electronics (Fig. 7.14) unit\ndetects and provides information to the OBC/OBSW at 2 Hz about each coil\u2019s\n\nFig. 10.40 FOG noise observation for the FLP-based \u201cFlying Laptop\u201d. \u00a9 IRS, University of\nStuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 377\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\nstatus whether the coils are supplied with electric current (1 = current in positive\ndirection, 0 = no current, ?1 negative direction). For failure detection only the\npower consumption in relation to the torquer switch status can be monitored.\n\nFigure 10.41 shows the monitoring logic for an MGT coil. The coils are accessed\nand used independently, so the mechanism is analogue for all three. Unlike for the\nACS sensor devices, there is no complex failure detection in the ACS_Controller\nfor the MGTs. The illustrated process is implemented in the PSS_Controller and is\nthe following:\n\n\u2022 If the MGT is commanded \u2018active\u2019 from the ACS_Controller the MGT\nElectronics applies electric current through the coil in positive or negative\ndirection. There is no current control. The magnetic torque is controlled with the\nlength of the activation pulse.\n\n\u2022 If the PSS_Controller detects no electric current on the fuse, the Event\nCOIL_BROKEN is signaled and shows that the coil might be broken. FDIR will\nmark the coil as invalid so that the redundant coil will be used from that point\nonwards.\n\n\u2022 If electric current is detected, a comparison to the latest measured value is\nperformed. If the current shows a significant difference, the Event\nCOIL_WARNING is triggered. The Event indicates that something might be\nfaulty with the coil but no actions are undertaken on board in this case. The\nEvent just serves as warning for the ground operator.\n\n\u2022 If a short circuit is produced in a coil, the fuse in the PCDU is automatically\ntriggered as described in Sect. 10.2.8. The PSS_Controller reports the change of\n\nFig. 10.41 MGT monitoring. \u00a9 IRS, University of Stuttgart\n\n378 R. Witt and J. Eickhoff\n\n\n\nthe fuse state with the event FUSE_WENT_OFF. FDIR will mark the according\nMGT unit as unhealthy.\n\n10.6.7 Reaction Wheel Failure Detection\n\nThe FLP design includes four Reaction Wheels (RW). In analogy to the FOGs the\nRWs are arranged in a tetrahedron configuration to allow for a 3-out-of-4 redun-\ndancy. The RWs are expected to be most critical devices w.r.t. failure due to\nwearout of motor or bearings. The friction in the ball-bearings is expected to\nincrease over the RW lifetime. One way of identifying the degradation of the RWs\nis the observation of their power consumption at similar speed values over the\nspacecraft mission lifetime. This will be performed by ground on basis of standard\nhousekeeping TM and is not implemented in OBSW FDIR.\n\nA second mechanism to recognize the degradation of the wheels is to use the\nintegrated accelerometer in the STR electronics to observe the vibrational load\ncreated by a wheel at a certain speed and how the load increases over the spacecraft\nmission lifetime. This is an approach that can also be realized by ground on basis of\nstandard housekeeping TM and is not implemented in OBSW FDIR.\n\nThe RW built-in software provides the following internal safety features [68]:\n\n\u2022 Built-In checksum calculation to avoid faulty operation due to bit-flips. (SEUs).\nThe software is automatically reloaded inside the RW from its PROM to its\ncontroller if a watchdog is not reset for 2 s.\n\n\u2022 A speed limiter checks every speed command. If the commanded speed exceeds\nthe limit, this speed command is overwritten with the maximum value of\n3000 rpm.\n\n\u2022 In case where the RW control software is stuck, and the wheels are approaching\nthe maximum speed value, this creates an electromagnetic field of approxi-\nmately 20 V inside the device which the drive motor cannot overcome. This\nphysically prevents the wheel from damaging itself by oversaturation.\n\nUpon request the RW sends a TM package to the OBSW that contains a\n\u201cCommand Status\u201d bit that can have the following values:\n\n(0) Successful: A command has been executed successfully.\n(1) Invalid Address: Each command contains a target address of either of the four\n\nRWs. If this is not correct, the command is ignored. An invalid address could\nbe caused by an OBSW software bug and is not expected to happen during\noperations due to thorough preflight testing. If it occurs during flight, ground\nneeds to investigate the problem. Since the wheels on FLP Generation 1 are\nnot operated on a data-bus, all wheels have the same implemented address.\n\n(2) Invalid Opcode: The command to a RW contains an \u201cOpcode\u201d for mode\ncommands. If \u201c2\u201d is returned in the RW HK TM a wrong command was sent\nto the RW. This could either be causes by a bug in the OBSW\u2014which is not\n\n10 Failure Detection, Isolation and Recovery Concept 379\n\n\n\nexpected during operation since all commands are tested up-front\u2014or a\nmanual command from the ground operator contains the wrong Opcode.\n\n(3) Bad Checksum: An SEU might cause corrupted data. The command will not\nbe executed. If this happens during nominal operations it will not have any\nserious consequences. The next command is expected to be executed again. If\nthis happens several times per minute ground investigation need to be\nperformed.\n\n(4) Message Format Error: This could be caused by an SE. It signals a software\nbug in the OBSW or in a command submitted by ground (in analogy to 2). The\nnext command is expected to be executed. If this happens several times within\none minute, ground investigation is required.\n\n(5) Incomplete Message Timeout: This indicates that a command to the RW has\nnot been transmitted completely. This could happen because of external dis-\nturbance or due to a fault in the Core DHS subsystem. External disturbances\nare not expected to cause major damage and will be ignored if it does not\nhappen more than once per minute. If the Core DHS subsystem is faulty other\nmechanisms will take according recovery actions as described in Sect. 10.2.\n\n(6) Buffer Overflow: A memory area in the RW cannot provide more space. This\nis not expected during nominal operation since RW HK is polled by the\nOBSW with moderate 5 Hz. If \u201cBuffer Overflow\u201d is reported ground inves-\ntigation is required.\n\n(7) Wheel Saturation: If one RW reaches its maximum permitted speed of\n3000 rpm this status is reported. It is implemented into the ACS_Controller to\ndesaturate the wheels at a total added speed rate of all wheels together being\n6000 rpm [125]. If this mechanism fails RW_SATURATION_REACHED\nwill be signaled by the reaction wheel deviceHandler (see Fig. 10.42). This\nEvent is not expected to happen during operation since it would be caused by a\n\nFig. 10.42 RW saturation monitoring. \u00a9 IRS, University of Stuttgart\n\n380 R. Witt and J. Eickhoff\n\n\n\nmalicious bug in the control system. If it occurs an immediate switch to Safe\nMode will be initiated by FDIR. This leads to powering down the RWs and to\nperform spacecraft actuation with the MGTs. When the RW_assembly is\ncommanded to power down the RWs it sends a command to the wheels to do a\nbreaking maneuver and reduce the speed actively down to zero before trig-\ngering the switch-off in the PCDU.\n\n10.6.8 Attitude Control System Failure Detection\n\nIn the previous paragraphs the FDIR for ACS equipment has been treated. In [125]\nbasic failure detection mechanisms for the attitude control have been specified\u2014in\nrelation to the ACS system. The concepts are explained hereafter and the FLP\nimplementation is presented. The failure detection mechanisms are based on\nmonitoring of different ACS effects:\n\n(1) Depending on the ACS mode, the system monitors the rotational rate of the\nsatellite in every computation step\u2014i.e. with 5 Hz. If the rotational rate of the\nsatellite exceeds the mode-dependent monitoring limit (Pointing Mode = 1.2\u00b0/\ns respectively for Idle Mode = 3\u00b0/s), the event RATE_LIMIT_VIOLATION is\ntriggered and FDIR will initiate a switch into the next lower mode, which is\nIdle Mode or Safe Mode (see Fig. 2.2). If commanded into Safe Mode, ACS\nwill first re-perform detumbling due to the high rotational rate.\n\n(2) The second step is somewhat specific for the FLP mission \u201cFlying Laptop\u201d but\nshall serve as representative case for optical Earth observation spacecraft\nbased on the FLP:\nIn this step sun avoidance for the payload cameras is mandatory if the cameras\nare active. The control process is illustrated in Fig. 10.43. ACS examines the\nangle between the cameras\u2014oriented in Nadir direction\u2014and the sun direc-\ntion. If the angle decreases below 60\u00b0, the Event SUN_PROXIMITY is\ntriggered. This Event is handled as an info Event and does not trigger FDIR\nreactions. However, if the angle decreases below 45\u00b0 ACS will trigger the\nEvent SUN_AVOIDANCE. In that case FDIR switches off the cameras\nimmediately. Since this is de facto a cancellation of the operational observa-\ntion scenario FDIR will directly initiate a switch to Idle Mode where the\npayload cameras will automatically be directed away from the sun.\n\n(3) The third step of the failure detection observes the accuracy of the pointing\nmaneuver. The process is shown in Fig. 10.44. Therefore, the target is set with\nthe target info. target is the attitude, the satellite is supposed to be in. If the\n\n10 Failure Detection, Isolation and Recovery Concept 381\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\ndifference between target and the attitude of the satellite is greater than the\nmaximum allowed deviation of 150 arcsec for more than 30 s, the target needs\nto be acquired again. As initiation, the ACS sets an acquisitionFlag to start the\nacquisition maneuver. If the target is not acquired after another 30 s, the target\nacquisition maneuver is assumed to be not accurately enough, or in other\nwords\u2014not successful, and the Event OFF_TARGET is generated by the\nACS_Controller.\nFailed acquisition is determined as when the attitude during the target\nacquisition maneuver exceeds the maximum allowed deviation of 150 arcsec\n(examined in detail in [125] Chap. 3) from the target for 150 times within the\n\nFig. 10.43 ACS failure detection\u2014Rotational rate and Sun avoidance. \u00a9 IRS, University of\nStuttgart\n\n382 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n30 s after beginning of the maneuver. In such case FDIR initiates the switch to\nIdle Mode. Ground interaction will be required to restore pointing\nfunctionality.\n\nComponent monitoring is executed at begin of each control loop as it is shown in\nFig. 10.43 (in contrast to the older approach described in [125]).\n\nFig. 10.44 ACS failure detection during target acquisition. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 383\n\n\n\n10.6.9 ACS Autonomy\n\nIn [125] the ACS algorithms were developed to avoid switching into System Safe\nMode upon device failure detection as long as possible\u2014e.g. upon GPS failure.\nDepending on which unit fails these algorithms foresee a position propagation\nbased on Kalman filters, magnetic field propagation etc. In the OBSW available for\nlaunch of the first FLP spacecraft these features will not yet be implemented. Their\nimplementation into OBSW will be subject for subsequent implementation for FLP\nGeneration 2.\n\nIn the theoretic ACS algorithms design of [125] the rotational rate data are\nprovided by the FOG system and attitude determination is performed by the STR\nsystem delivering an attitude quaternion. Working STR and FOG systems consti-\ntute the ideal case and therefore guarantee the best quality regarding rate and\nattitude. For the loss of ACS sensors the method in [125] describes several different\nstages of quality for the determination of rotational rate and the attitude quaternion\nusing existing sensors and the propagation of latest valid measurements.\n\nIn [125] it is demonstrated that in many cases and for a limited amount of time a\nspacecraft flight mode can be continued even if the quality of rotational rates\ndetermination or attitude determination is decreased.\n\n\u2022 It was also proven in [125] that the satellite can be operated in degraded Idle\nMode without STR and FOG systems.\n\n\u2022 The same is possible for the Nadir Pointing Mode.\n\u2022 The Inertial Pointing Mode cannot be operated without STR system but STR\n\nloss can be compensated for short durations.\n\u2022 Target Pointing Mode operations do not provide sufficient accuracy for camera\n\nimaging if either rotational rate determination or attitude determination quality is\nreduced.\n\n\u2022 However, the link to the ground station can be maintained if either rotational\nrate determination or attitude determination quality is reduced\u2014with a reduced\nduration of the passover.\n\nAs mentioned before at least the first FLP Generation 1 missions will not yet\nfeature these functions and will fall back to Safe Mode on loss of STR system, GPS\nsystem or MGM system.\n\n10.6.10 ACS Events\n\nThis chapter provides an overview of the events involved in the ACS FDIR Failure\nDetection.\n\n384 R. Witt and J. Eickhoff\n\n\n\nEvent 10.40: LIMIT_VIOLATION\n\nEvent Name Event Severity Event Parameter\n\nLIMIT_VIOLATION LOW Sensor object-ID, axis\n\nEvent description This event will be generated if a measurement for one axis of an MGM\nexceeds the maximum expected limit\n\nReaction ACS sets sensor to invalid. FDIR counts errors and marks faulty when\ncounter reaches threshold\n\nEvent 10.41: DEVICE_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_FAULTY LOW Sensor object-ID\n\nEvent description This event will be generated if a device is assumed to be faulty\n\nReaction FDIR counts failure messages for the device and shuts it down after\ncounter reaches a threshold\n\nEvent 10.42: MGM_MGT_WARNING\n\nEvent Name Event Severity Event Parameter\n\nMGM_MGT_WARNING LOW \u2013\n\nEvent description This event will be generated if both MGMs show a limit violation on\nthe same axis. It is assumed to be caused by an active MGT coil\n\nReaction \u2013\n\nEvent 10.43: MGM_DELTA\n\nEvent Name Event Severity Event Parameter\n\nMGM_DELTA LOW \u2013\n\nEvent description This event will be generated if after comparison of the\nmeasurements of the MGMs, a significant delta is detected\n\nReaction Both MGMs are set invalid. FDIR counts the events. ACS uses\nmagnetic field propagator\n\nEvent 10.44: DEVICE_UNKNOWN_REPLY\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_UNKNOWN_REPLY LOW Device object-ID\n\nEvent description This event will be generated if adeviceHandler cannot interpret a device\nresponse\n\nReaction FDIR counts failure messages for each device and shuts it down after\ncounter reaches threshold\n\n10 Failure Detection, Isolation and Recovery Concept 385\n\n\n\nEvent 10.45: MISSED_REPLY\n\nEvent Name Event Severity Event Parameter\n\nMISSED_REPLY LOW Device object-ID\n\nEvent description This event will be generated if adeviceHandler Object does not\nreceive a response from its device\n\nReaction FDIR counts the events and after a certain amount of events has\noccurred within a certain time period, the device will be rebootet.\nIf the event keeps occurring, FDIR will shut the device down and\nmark it PERMANENTLY_FAULTY. Only ground can reactivate\nthe device\n\nEvent 10.46: FUSE_CURRENT_HIGH\n\nEvent Name Event Severity Event Parameter\n\nFUSE_CURRENT_HIGH LOW Fuse object-ID\n\nEvent description This event will be generated if the electric current on a fuse is\nsignificantly high\n\nReaction FDIR deactivates fuse if PCDU has not done already\n\nEvent 10.47: ONE_GPS_VALID\n\nEvent Name Event Severity Event Parameter\n\nONE_GPS_VALID LOW Sensor object-ID\n\nEvent description This event will be generated if after comparison of the\nmeasurements of the GPS receivers, only one GPS is deemed to be\nvalid. Important Note: This event includes theworking device, and\nnot the faulty device\n\nReaction FDIR counts failure messages for each receiver and shuts them\ndown after counter reaches 10. The counter will be increased for\nthe two faulty sensors\n\nEvent 10.48: GPS_INVALID\n\nEvent Name Event Severity Event Parameter\n\nGPS_INVALID LOW Sensor object-ID\n\nEvent description This event will be generated if after comparison of the\nmeasurements of the GPS receivers, one sensor is assumed to be\nfaulty\n\nReaction FDIR counts failure messages for each receiver and shuts them\ndown after counter reaches 10. The counter will be increased for\nthis sensor\n\n386 R. Witt and J. Eickhoff\n\n\n\nEvent 10.49: NO_VALID_GPS\n\nEvent Name Event Severity Event Parameter\n\nNO_VALID_GPS LOW Sensor object-ID\n\nEvent description This event will be generated if after comparison of the\nmeasurements of the GPS receivers, no sensor is assumed to be\ncorrect\n\nReaction FDIR counts failure messages for each receiver and shuts them\ndown after counter reaches 10. All sensors will increase the\ncounter\n\nEvent 10.50: SUS_ZERO\n\nEvent Name Event Severity Event Parameter\n\nSUS_ZERO LOW SUS object-ID\n\nEvent description This event will be generated if there is a significant difference\nbetween two paired sensors and one is close to 0\n\nReaction FDIR marks the sensor as invalid\n\nEvent 10.51: SUS_DIFF\n\nEvent Name Event Severity Event Parameter\n\nSUS_DIFF LOW SUS object-ID\n\nEvent description This event will be generated if there is a significant difference\nbetween two paired sensors, but isolation of a faulty one is not\npossible\n\nReaction \u2013\n\nEvent 10.52: FOG_SYS_INVALID\n\nEvent Name Event Severity Event Parameter\n\nFOG_SYS_INVALID LOW Sensor object-ID\n\nEvent description This event will be generated if the FOG system shows unexpected\nbehavior but a faulty FOG cannot be isolated\n\nReaction Failure counter for all FOGs is increased until FDIR decides to mark\nFOGs faulty\n\nEvent 10.53: FOG_INVALID\n\nEvent Name Event Severity Event Parameter\n\nFOG_INVALID LOW Sensor object-ID\n\nEvent description This event will be generated if one FOG shows corrupted\nmeasurements\n\nReaction FDIR counts the failures and marks the FOG faulty at some point\n\n10 Failure Detection, Isolation and Recovery Concept 387\n\n\n\nEvent 10.54: COIL_BROKEN\n\nEvent Name Event Severity Event Parameter\n\nCOIL_BROKEN LOW Coil object-ID\n\nEvent description This event will be generated if no electric current can be detected\nfor a coil of the MGT system\n\nReaction FDIR marks the coil as faulty\n\nEvent 10.55: COIL_WARNING\n\nEvent Name Event Severity Event Parameter\n\nCOIL_WARNING LOW Coil object-ID\n\nEvent description This event will be generated if the measured electric current of an\nMGT coil is not the same as the expected one since they should\nnot differ\n\nReaction FDIR counts these events for each coil. If the counter reaches 5,\nthe coil is marked faulty\n\nEvent 10.56: FUSE_WENT_OFF\n\nEvent Name Event Severity Event Parameter\n\nFUSE_WENT_OFF LOW Fuse object-ID\n\nEvent description This event will be generated if a short is created due to a broken\ncoil and a fuse in the PCDU is triggered in the PCDU\n\nReaction FDIR marks the coil as faulty\n\nEvent 10.57: RW_SATURATION_REACHED\n\nEvent Name Event\nSeverity\n\nEvent\nParameter\n\nRW_SATURATION_REACHED LOW RW object-ID\n\nEvent\ndescription\n\nThis event will be generated if a RW reaches its saturation speed and\ndesaturation has failed\n\nReaction FDIR powers off the RW\n\nEvent 10.58: RATE_LIMIT_VIOLATION\n\nEvent Name Event Severity Event Parameter\n\nRATE_LIMIT_VIOLATION LOW ACS Mode\n\nEvent description This event will be generated if the rotational rate in an ACS mode\nexceeds the allowed limit for this mode\n\nReaction FDIR commands the system and ACS into a lower mode.\nPointing ? Idle\nIdle ? Safe /Detumble\n\n388 R. Witt and J. Eickhoff\n\n\n\nEvent 10.59: SUN_PROXIMITY\n\nEvent Name Event Severity Event Parameter\n\nSUN_PROXIMITY LOW \u2013\n\nEvent description This event will be generated if a camera is active the angle between\ntheir direction and the sun direction is smaller than 60\u00b0\n\nReaction Will be used as an INFO event, no reactions are triggered.\n\nEvent 10.60: SUN_AVOIDANCE\n\nEvent Name Event Severity Event Parameter\n\nSUN_AVOIDANCE LOW \u2013\n\nEvent description This event will be generated if a camera is active the angle between\ntheir direction and the sun direction is smaller than 45\u00b0\n\nReaction FDIR deactivates the cameras to avoid for them looking directly\ninto the sun if the path is followed further\n\nEvent 10.61: ACQUISITION_SUCCESS\n\nEvent Name Event Severity Event Parameter\n\nACQUISITION_SUCCESS INFO \u2013\n\nEvent description This event will be generated if the target could not befixated but a new\nacquisition was successful\n\nReaction \u2013\n\nEvent 10.62: OFF_TARGET\n\nEvent Name Event Severity Event Parameter\n\nOFF_TARGET LOW \u2013\n\nEvent description This event will be generated if the target could not befixated\neven after a new acquisition attempt\n\nReaction FDIR will command the satellite into Idle Mode\n\n10.7 TCS FDIR\n\n10.7.1 TCS Failure Detection and Isolation\n\nThe thermal control subsystem (TCS) task is to maintain the correct temperature for\nall components on board the satellite within a specified range according to their\noperational state. In more detail this comprises:\n\n\u2022 Storage of component temperature limits\u2014operational and non-operational.\n\u2022 Storage of control thresholds at which the control algorithm performs reactive\n\nactions. E.g. if a component is closing in on its lower operational temperature\n\n10 Failure Detection, Isolation and Recovery Concept 389\n\n\n\nlimit\u2014but has not yet reached it\u2014a heater is activated to prevent the temperature\nfrom dropping further and prevent from having to shut the component down.\n\n\u2022 Temperature monitoring of all components.\n\u2022 Providing temperature TM data for all components at any time.\n\u2022 Verifying correct function of temperature sensors.\n\u2022 Managing redundancy for temperature sensors.\n\u2022 Detection of heater malfunction.\n\u2022 Managing redundancy for heaters.\n\u2022 Reporting of heating actions as nominal events.\n\u2022 Reporting of a detected malfunction as failure event.\n\nAs explained already in Chap. 8 there exist 66 temperature sensors on board the\nfirst FLP spacecraft\u2014the \u201cFlying Laptop\u201d\u2014of which 32 are individually placed at\nimportant locations or on/near components in the structure. As an exception, there\nare two sensors for each battery string since this is a crucial component. This allows\nfor the detection of local temperature gradients in the battery strings. The other 34\nare internal temperature sensors which are integrated within equipment units\u2014\nproviding a temperature in their respective housekeeping telemetry data packet.\nWith these 66 sensors it is possible to determine a temperature for all components.\n\nThere exist six heaters\u2014two on each structure module\u2014for nominal thermal\ncontrol. Radiator surfaces are used to transmit heat from the satellite to the envi-\nronment. This setup might vary for other FLP missions depending on the payloads\nand layout of payload compartment.\n\nFurthermore there are emergency heaters for the FLP OBC, TTC and the PCDU\nthat are activated by the PCDU automatically in emergency situations. They are\ntriggered when TCS control is not able to maintain the nominal state with the given\nconditions. The FDIR relevant monitoring functions are presented in Fig. 10.45.\n\nThis flow is repeated for every component\u2019s temperature computation:\n\n\u2022 The starting point of the flow is in the top left. If the temperature T of a\ncomponent is within the specified limit nothing has to be done and nominal\noperation continues as before.\n\n\u2022 For temperature sensors one previous measurement value is stored for transient\nobservation. The temperature gradient over time is computed, based on the\nrecent sensor value. If this gradient is exceeding 10 K/s an Event\nT_GRAD_HIGH is issued. This leads to the sensor being marked as faulty.\n\n\u2022 A temperature sensor might show the failure of delivering a plausible but out of\nrange temperature such as below ?50 \u00b0C or above +150 \u00b0C. Mission simulations\nhave shown that these should not occur at any time. These values are also the\nmeasurement limits of the PCDU which should not be reached at any point.\nSuch values indicate that there is a failure in the sensor hardware which leads to\nthe TCS_Controller object issuing a failure Event for this sensor. The device\nwill then be marked as faulty. In the subsequent TCS computation cycles this\nsensor will be ignored and the value of a redundant unit will be used instead.\n\n390 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\n\n\nA temperature sensor cannot be deactivated or powered off. To simplify Event\nand command handling however the same Event/action approach will be taken,\nas if it were a standard avionics unit with a switch for deactivation. Inside the\nOBSW the sensor value is set to invalid and is ignored from this point onwards.\n\n\u2022 The nominal TCS control case is also included in Fig. 10.45:\nIf a component temperature drops below a control threshold the control algo-\nrithm will decide that a heater needs to be powered to prevent the component\nfrom cooling off. The activation of a component such as a heater will cause the\ngeneration of a nominal Event as shown in Fig. 10.45. The heater will heat up\nthe component until an upper control limit is reached and further heating is not\ndeemed necessary anymore (see Figs. 8.10 and 8.11 in Sect. 8.3.2.2). When the\nheater is deactivated, a second INFO Event will be generated to provide\ntransparency of on-board processes for the ground operator.\n\nFig. 10.45 TCS Failure Detection and Isolation. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 391\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\n\n\n\u2022 Heater malfunction\u2014usually this would mean a broken wire or heater foil\u2014is\ndetected by the following mechanism: A timer is activated upon heater acti-\nvation. If the heated component still drops below its specified temperature limit\nwithin the expiration of the timer, this will lead to identification of a malfunction\nin the heater. The monitoring period is defined to be 3600 s. Timer expiration\nwill induce a HEAT_TIME_EXCEEDED Event that includes the object-ID of\nthe affected heater. FDIR will then electrically deactivate the heater by means of\nthe corresponding PCDU switch. An Event DEVICE_OFF will be generated by\nFDIR including the heater object-ID to allow observation of the processes on\nboard by a ground operator.\nObserving this heater timeout might in fact have two reasons:\n\n\u2013 The heater circuit really is defective. It is not expected that a reactivation of\nthe heater is harmful. The PSS_Controller will detect that the heater is\nactivated but shows no power consumption. It will issue a\nWARNING_NO_CURRENT Event which will lead to FDIR marking the\nheater as faulty.\n\n\u2013 The monitoring period for a particular heater is to be fine adjusted during\nthermal-vacuum test of a spacecraft and might need fine adjustment again\nduring in-flight commissioning. Therefore the algorithm needs close moni-\ntoring by the thermal control engineer on ground.\n\n\u2022 If the nominal heater of an equipment or spacecraft Module is marked as faulty\nTCS_Contoller will automatically use the redundant heater in the next cycle.\n\n\u2022 If the temperature of the equipment falls below the operational temperature limit\nan Event COMP_T_OUT_OF_OP with the component\u2019s object-ID will be\ngenerated. FDIR will deactivate the device with this object-ID and generates a\nDEVICE_OFF event including the component\u2019s object-ID.\n\n\u2022 However if a critical situation causes the temperature to decrease even further\nand drops below the survival temperature limit for a component an Event\nCOMP_T_OUT_OF_NOP with the component\u2019s object-ID is generated.\nSince FDIR is not able to perform any corrective actions in such case anymore\nthe severity of this event is HIGH to alert ground.\n\n10.7.2 TCS Failure Recovery\n\nTemperature sensors that have been identified as faulty will be marked accordingly\nby the system FDIR. However since they cannot be powered off they will still\ndeliver measurement values. In the implementation of the Thermal Control System\nas shown in Fig. 10.46, it is foreseen that after the calibration of the sensor values\nfrom raw values to degrees (\u00b0C) the TCS_Controller will check the health status of\na sensor before evaluating a temperature value for a component.\n\nIf the health status of a sensor is non-healthy the value of this sensor will be\nignored. A redundancy order is determined for all sensors, defining which sensor\n\n392 R. Witt and J. Eickhoff\n\n\n\ncan be used as alternative in a failure case. This order depends on the location of the\nsensor. A sensor in close proximity is usually predefined\u2014see Table 8.1. As last\nredundancy option for all sensors the temperature of the structure module is used.\nThe module temperature is calculated according to Table 8.2. This might lead to a\nvery inaccurate value for a component temperature and corrective actions should be\nundertaken by ground. This situation can only occur after more than a single failure.\n\nThe heaters for nominal control are implemented single redundant. If both\nheaters are healthy, they will be used in parallel for faster heating. If one heater is\nmarked as non-healthy it will be ignored. The timeout period varies depending on\nthe number of available heaters.\n\n10.7.3 TCS Survival Mode\n\nIn case where the battery SoC drops significantly FDIR commands a system mode\nswitch to the Safe Mode (see Sect. 10.3). If for any reasons the satellite will start to\ntumble randomly it cannot be guaranteed that the solar panels are oriented towards\nthe Sun. This means that it cannot be guaranteed that there is enough power input\nfrom the solar panels into the system to perform nominal Safe Mode operation such\nas heating all components if necessary.\n\nTherefore a TCS Survival Mode has been defined in which power consumption\nis decreased even further. The controlling mechanism in this mode is shown in\nFig. 10.47. The TCS Survival Mode is commanded by FDIR as soon as the SoC of\nthe battery reaches 35 % of the expected End-of-Life capacity. SoC limit violations\nare reported by the PSS_Controller.\n\nIn normal TCS control mode, the goal is to keep all components on board the\nsatellite at least in their survival temperature range. In the TCS Survival Mode it is\naccepted that for example the temperature for payload equipment drops below their\n\nFig. 10.46 Thermal Control System Sensor Redundancy. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 393\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\n\n\nnon-operational lower limit temperature to avoid activation of heaters due to pri-\nority of minimum power consumption. This means for the purpose of improving the\nchances for system survival in such a scenario it is accepted that payload equipment\nmight be damaged when cooling off.\n\nThe only components that are heated in this TCS Survival Mode are the ones\nrequired to perform the detumbling maneuver\u2014in Sect. 5.5.3 declared as Safe\nMode components.\n\nHowever, even these are only heated for 1800 s after which undertemperature\ndamage is accepted in order to avoid an endless-loop of heating and low-power\nstate of the battery\u2014see Fig. 10.48. When the satellite is re-stabilized and back in\n\nFig. 10.47 TCS Survival Mode Diagram. \u00a9 IRS, University of Stuttgart\n\nFig. 10.48 TCS Survival Mode Concept. \u00a9 IRS, University of Stuttgart\n\n394 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\nSafe Mode and approximately oriented towards the Sun the battery SoC is expected\nto increase again. Upon 39 % SoC, the TCS is switched back into its nominal mode\nto heat all S/C components and prevent further cooling off of components and their\ndamaging.\n\n10.7.4 TCS FDIR Events\n\nEvent 10.63: T_GRAD_HIGH\n\nEvent Name Event Severity Event Parameter\n\nT_GRAD_HIGH LOW Sensor object-ID\n\nEvent description This event will be generated if the gradient between two\ntemperature sensor measurements is too high, indicating a failure\nin the sensor\n\nReaction FDIR marks the sensor as faulty\n\nEvent 10.64: T_SENSOR_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nT_SENSOR_FAULTY LOW Sensor object-ID\n\nEvent description This event will be generated if unreasonable sensor measurements\nare detected\n\nReaction FDIR marks the sensor as faulty\n\nEvent 10.65: HEAT_TIME_EXCEEDED\n\nEvent Name Event Severity Event Parameter\n\nHEAT_TIME_EXCEEDED LOW Heater object-ID\n\nEvent description This event will be generated if a heating process takes too long for the\ncomponent to reach a certain temperature. Indicates that the heater is\nbroken or that the thermal control system design has flaws\n\nReaction FDIR switches the heater off. Ground may adapt the TCS\n\nEvent 10.66: COMP_T_OUT_OF_OP\n\nEvent Name Event Severity Event Parameter\n\nCOMP_T_OUT_OF_OP LOW Device object-ID\n\nEvent description This event will be generated if a component leaves its operational\ntemperature range\n\nReaction FDIR shuts off the device\n\n10 Failure Detection, Isolation and Recovery Concept 395\n\n\n\nEvent 10.67: DEVICE_OFF\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_OFF MEDIUM Device object-ID\n\nEvent description This event will be generated if FDIR decides to switch off a\ndevice\n\nReaction \u2013\n\nEvent 10.68: DEVICE_FAULTY\n\nEvent Name Event Severity Event Parameter\n\nDEVICE_FAULTY MEDIUM Device object-ID\n\nEvent description This event will be generated if FDIR decides to switch off a device\nthat is deemed faulty\n\nReaction \u2013\n\nEvent 10.69: COMP_T_OUT_OF_NOP\n\nEvent Name Event Severity Event Parameter\n\nCOMP_T_OUT_OF_NOP HIGH Device object-ID\n\nEvent description This event will be generated if a component leaves its storage\ntemperature range. This is dangerous and might damage the component\n\nReaction Ground has to interfere\n\nEvent 10.70: SAFE_MODE_HEAT_TIME_EXCEEDED\n\nEvent Name Event\nSeverity\n\nEvent\nParameter\n\nSAFE_MODE_HEAT_TIME_EXCEEDED HIGH Heater\nobject-ID\n\nEvent\ndescription\n\nThis event will be generated if a heating timeout expires in Safe Mode\n\nReaction Ground has to interfere. The component will be activated anyway to attempt\nsaving the mission\n\n10.8 Payload FDIR\n\nThis chapter describes the basic methods for payload FDIR that are implemented in\nthe initial version of the FLP Generation 1 OBSW. FDIR for payload devices is\nattempted to be as simple as possible. More complex examinations of payload\nproblems will be performed by ground. Rationale for this decision is:\n\n396 R. Witt and J. Eickhoff\n\n\n\n\u2022 The FLP Generation 1 payload computer PLOC and its firmware are an aca-\ndemic experimental system. The included functions may need in-flight updates.\n\n\u2022 Testing of payload FDIR functions in the OBSW (analysis of\npayload/PLOC/MMU/DDS failures) will have been performed with limited\neffort up to launch of the first FLP based \u201cFlying Laptop\u201d mission.\n\n\u2022 Sophisticated software features cannot be implemented until launch of the first\nFLP based mission.\n\nIn summary substantial payload FDIR considering all details of payload control\nvia OBC and potential payload data preprocessing on board cannot be realized\nbefore an overall FLP Generation 2 architecture as depicted in Fig. 9.14 is available.\n\n10.8.1 General Failure Handling\n\nThe communication with payload devices is routed in FLP Generation 1 via the\nPLOC as shown by the interfaces and wiring in Fig. 1.6. Figure 10.49 illustrates a\nvery simplified version of Fig. 1.6. The payload computer, all payloads and the\nOBC are powered via dedicated switches in the PCDU. Power monitoring\u2014\nmonitoring of power consumption, switch activation and deactivation\u2014is con-\ntrolled in the OBC for all payloads. The OBC commands the PCDU to trigger\nswitches if payload devices are required to be available. Temperature sensors are\nrouted via analog/digital converters in the PCDU to the OBC where thermal control\nis performed\u2014again for all devices including all payloads\n\nThe OBC ? payload communication can be described very simplified as\nfollows:\n\n\u2022 A command to the PLOC or a payload is either stored in a mission timeline on\nboard or is directly sent from ground to the payload. The communication is\nestablished via deviceHandler objects\u2014as introduced in Sect. 3.2.2\u2014that are\nused as interfaces to the payload devices. They encapsulate the corresponding\npacket for the payload devices.\n\nFig. 10.49 Simplified electrical architecture between PLOC, OBC and PCDU. \u00a9 IRS, University\nof Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 397\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\n\u2022 The PLOC deviceHandler (PLOC-DH) forwards all commands to the PLOC\nhardware (PLOC and particular payload commands). Depending on the content\nthe PLOC forwards the ground command to a payload or it reformats the\ninformation into a notation suitable for the payload device.\n\n\u2022 The payload executes the command and sends back science data or HK TM with\na status report.\n\n\u2022 The packets with TM provided by a payload are encapsulated in a PLOC packet\nwith CRC and are forwarded to the OBC/OBSW. The PLOC only examines\nscience data packets and processes these\u2014no payload housekeeping packets. It\neither stores the science packets in the MMU or forwards them to the Data\nDownlink System directly. As shown in Fig. 10.50 the PLOC deviceHandler\nunpacks all data and the payload specific packets are forwarded via the PLOC\ndeviceHandler to the dedicated payload deviceHandler in the OBSW.\nThe PLOC also reports whether a received packet from OBSW included a bad\nchecksum.\n\n\u2022 Device specific failure detection is mostly restricted to a failure in the com-\nmunication between the devices. If failures are detected by a deviceHandler the\nsame method is applied as for the bus components described in Sect. 10.4 and as\nshown in Fig. 10.51.\nThis means that after a certain amount of failures within a certain time a counter\nvalue threshold is exceeded and the device is powered down and is marked\nfaulty by the system FDIR. The mechanism is explained in Sect. 10.4.3.\n\nFailure handling regarding thermal or power issues are already covered in\nSects. 10.3 and 10.7. No further device specific failure handling is implemented for\nthe current payload module design of the FLP Generation 1.\n\nIf the PLOC is identified as faulty by either of the mentioned subsystem failure\ndetection functions it is deactivated and interaction by ground is required. FDIR\ndoes not perform automatic PLOC switch to the redundant unit. In such case the\nsatellite system is commanded into Idle Mode which automatically leads to a\ndeactivation of all payload devices.\n\nIf the PLOC is healthy but a payload equipment is identified as faulty by either\nof the mentioned subsystem failure detection functions, it is deactivated, but the\ncurrent operational mode is kept as shown in Fig. 10.52.\n\nFig. 10.50 Payload Data Flow. \u00a9 IRS, University of Stuttgart\n\n398 R. Witt and J. Eickhoff\n\n\n\nThis approach allows for the payload to show several communication failures\nbefore being shutdown\u2014in analogy to the satellite bus devices (see Sect. 10.4).\n\nNote: The payloads of the first FLP based satellite\u2014the \u201cFlying Laptop\u201d\u2014are\nnot completely based on radiation-hardened electronics and have no flight heritage\nfrom earlier missions. Also, they have not undergone radiation robustness tests.\nThus it is expected that effects like SELs or sporadic SEUs can occur. Therefore it is\nimportant especially in the payload Commissioning Phase that a payload is not\nshutdown immediately after a single failure symptom. Further mechanisms for\npayload management and failure recovery are described in [135].\n\nFig. 10.51 Payload Device Failure Detection\n\nFig. 10.52 Deactivation of Payloads in a failure case. \u00a9 IRS, University of Stuttgart\n\n10 Failure Detection, Isolation and Recovery Concept 399\n\n\n\n10.8.2 Payload FDIR Events\n\nThere are no dedicated payload Events defined for the FLP Generation 1 design\nbased on the PLOC as payload controller. The OBSW will be upgraded for the FLP\nGeneration 2 common OBC for platform and payload management as outlined in\nSect. 9.3.2.\n\n10.9 Failure Propagation\n\nThe mechanisms introduced in the previous chapters follow the paradigm of\nkeeping the satellite operational or in Idle Mode as long as possible\u2014with rea-\nsonable complexity in failure detection and recovery. For detailed analysis by\nground FDIR generates Events that support diagnosis. But extensive analysis has to\nbe performed by a ground operations team.\n\nThe FDIR task runs with the highest frequency and Event evaluation is per-\nformed in every FDIR cycle to guarantee quick response to failures and hazardous\nsituations. Some Events can have different consequences depending on the situa-\ntion. Therefore this FDIR concept foresees to collect all Events from one cycle\nbefore determining recovery measures. This prevents that the same actions are\nprocessed several times and that all Events are treated separately although they\nmight be interrelated.\n\nA detected failure is handled as local as possible. With the assembly concept a\nswitch to a redundant device can be realized on low level, when FDIR marks a\nnominal device as being faulty. If more than one unit of an assembly is identified as\nfaulty and the assembly cannot keep up the required operational mode, it reports\naccordingly by Event to the subsystem. The subsystem will propagate the report\nupwards until System decides to perform a mode switch into the next fall-back\nmode, which are\n\n\u2022 Idle Mode for pointing Modes, and\n\u2022 Safe Mode for Idle Mode.\n\nIn summary the overall system state is switched down to a safe state to avoid\ncritical failure propagation. Device failures are not deemed critical and need con-\nfirmation before the devices are powered down.\n\n\u2022 Due to the different steps of the SoC surveillance energy supply of the system is\nas good as possible. A quick drop of SoC or voltage level leads to immediate\ndeactivation of payloads and to re-pointing of the satellite towards the sun in\nIdle Mode. The remaining energy is analyzed to be sufficient, even if the satellite\nenters eclipse at the activation of the Idle Mode switch.\n\n\u2022 The satellite will remain in Idle Mode as long as possible. If the SoC drops\nfurther, severe damage must have occurred and the switch to Safe Mode and\nground interaction is mandatory.\n\n400 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\n\n\n\u2022 Device failure induced discharging of the battery is avoided as good as possible\nwith four different steps of components deactivation.\n\n\u2022 Failures in the power subsystem or a significant drop of the State-of-Charge of\nthe battery leads to immediate component switch-off or to transition into Safe\nMode to avoid damaging further components in the system or the battery.\n\n\u2022 In the worst case the satellite deactivates itself until the battery SoC has\nrecovered to a reasonable level. The PCDU detect this and boot the system.\n\n10.10 Satellite Safe Mode Implementation\n\nThe satellite modes and mode transitions are already depicted in Fig. 2.1. The\nDetumble Mode and the Safe Mode here only differ by spacecraft rotational rates\nbut the activated ACS equipment and the control laws are the same for both modes.\nFor the Safe Mode some specific characteristics of the FLP Generation 1 have to be\nlisted however.\n\n\u2022 When a Safe Mode transition is initiated by whatever Event the satellite transits\nto ACS Safe Mode and limits attitude acquisition to the Safe Mode sensors and\nactuators.\n\n\u2022 ACS control will orient the spacecraft to sun-pointing direction and will initiate\nthe spin-up for orientation stabilization in eclipse.\n\n\u2022 The OBSW will shut down all payloads.\n\u2022 And the OBSW will shut down electrically all non Safe Mode sensors and\n\nactuators in case where the Safe Mode was triggered by a power limitation\nevent.\n\n\u2022 The Combined-Controller in the CDPI PCDU will reconfigure a failed OBC unit\nto the redundant side in case where the Safe Mode was triggered by such an\nOBC failure.\n\nIn contrast to a classic Safe Mode implementation the OBSW of the FLP\nGeneration 1 will not automatically trigger a full switchover to a redundant\nequipment set (OBC + PCDU + ACS + data lines/SpaceWire).\n\nThe full spacecraft switchover to redundant can be commanded by ground via\nFlight Procedure for the FLP Generation 1. For the FLP Generation 2 a full B-side\nSafe Mode configuration is foreseen\u2014based on the SpaceWire network imple-\nmentation outlined in Sect. 9.3.2\n\nSafe Mode initiation by command:\n\n\u2022 The Safe Mode can be initiated by OBSW command from ground.\n\u2022 The Safe Mode can be initiated by OBC Processor-Board re-powering or\n\nreconfiguration via HPC-1 command from ground.\n\nRecovery from Safe Mode is achieved via simple commanding of the spacecraft\nto a higher mode\u2014such as Idle Mode\u2014after having analyzed and\neliminated/isolated the root cause of a potential fallback by ground intervention.\n\n10 Failure Detection, Isolation and Recovery Concept 401\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\n\n\n10.11 Ground Based FDIR\n\nOn-board FDIR cannot always provide the best or complete identification and\nrecovery for all failure types. The approach for OBSW FDIR is to realize a save\nsolution that decreases the risk for the spacecraft to a minimum. Furthermore it is\nthe goal to provide sufficient observability to ground for failure identification and\nsufficient commandability for failure isolation and recovery [140].\n\n10.11.1 Observability of the Space Segment\n\nThe goal of FDIR and the software framework in this context of ground interaction\nis to allow for ground to have full observability of system, subsystem and device\ncharacteristics and of processes and Events on board the satellite. All Events\ngenerated during operational scenarios are stored in a separate TM memory area on\nthe I/O-Board (see Sect. 4.3.2) and can be dumped as a first transaction upon\nestablished contact to the ground station. The usage of PUS-Services and TM\nVirtual Channel allocation allows for configurable, priority controlled HK and\nEvent TM downlink.\n\nAll events reported in the OBSW\u2014independent of the source object\u2014are\nvisualized in the mission control system. Failure events are marked in different\ncolors. This is illustrated in Fig. 10.53 which shows an exemplary event history in\nSCOS-2000.\n\nIn the black frame at the top of the image the heading shows \u201cEvID\u201d which is the\neventID in decimal number, \u201cSeverity\u201d and a message text for further explanation.\n\nFig. 10.53 Event History in SCOS-2000. \u00a9 IRS, University of Stuttgart\n\n402 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\nThis example shows the boot up of the OBC marked with a green frame, which is a\nnormal information event with ID 7800 which indicates that the boot was successful\nand the according objects have been instantiated. All tasks have been started and the\nsoftware is up and running.\n\nA second information in the example is a Mode Change Event for the MGM\ndeviceHandler with objectID \u2018MGM_HANDLER_N\u2019 and the eventID \u20187400\u2019. In\nthe red frame two non-nominal Events with severity LOW are shown, which\nindicate a warning that failures have been detected. The severity field of this Event\nis marked yellow to indicate a failure event. They occurred due to the mode change\ncommand in this example and are not expected to be severe. In that case no\nreactions would have been initiated.\n\nAs explained in Sect. 3.3.3 the class of information Events indicates a nominal\nchange or transition that happened on-board. These Events can be used in command\nschedules to trigger follow-up commands. Additionally there are three different\nseverity levels for Events:\n\n\u2022 LOW: indicates that a failure detection method has detected a failure in the\nsystem and triggered a failure Event. This does not necessarily lead to recovery\nactions.\n\n\u2022 MEDIUM: Indicates an event from OBSW FDIR. MEDIUM events are trig-\ngered by FDIR if responsive measures are taken to LOW-severity events.\n\n\u2022 HIGH: indicates that severe Events have happened on-board. These can trigger\neither Safe Mode or Survival Mode Switch due to low available energy or due to\na problem somewhere in the OBDH system. An Event with severity class HIGH\ncould also indicate that it cannot be handled by OBSW FDIR e.g. if a com-\nponent exceeds its upper non-operational temperature limit.\n\nThe PUS Services also allow for very detailed reports of housekeeping data,\ndatapool dumps and reports to analyze on-board processes. With the customized\nservices (201, 1) and (202, 1) all mode tables and health status of devices can be\nrequested and examined on ground. These measures and features of the FLP\nplatform in sum provide a 100 % complete S/C observability.\n\n10.11.2 Commandability of the Space Segment\n\nComplementing the observability of the spacecraft, the platform design needs to\noffer sufficient commandability functions for failure recovery by ground [140].\nThe FLP offers the following features:\n\n\u2022 PUS-Service 1 provides acknowledgment of all commands submitted to the\nspace segment.\n\n\u2022 Customized Subservices (2,128)\u2013(2,133) of the Device Commanding Service\ncan be used to directly access and command devices without needing to address\n\n10 Failure Detection, Isolation and Recovery Concept 403\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nthe complete system. This can be used for detailed analysis of a certain device if\nit has been identified not to perform correctly.\n\n\u2022 The On-Board Monitoring Service (12) can be adjusted such that specific\nvariables are examined in greater detail than during nominal operations.\nMonitors can be assigned via TC to any of the available datapool variables.\n\n\u2022 The Event-Action Service (19) configuration can be extended to define specific\nactions/commands that are to be executed upon detection specific Events. This\nallows for a quick extension of the on-board FDIR functionality without needing\nto update the complete software if event-actions are identified during flight\nwhich are not yet covered by the presented OBSW FDIR. These actions can be\nactivated and deactivated during operations with this service. However the\nactions consequentially will need to be uploaded with a software patch.\n\n\u2022 If required, devices can be switched into a dedicated mode for ground analysis\nor for a continuing operation using the Mode Control Service (200). Since all\nobjects in the FLP OBSW have a dedicated object-ID (compare Sect. 3.2.8) they\ncan be accessed via this service as well.\n\n\u2022 The Payload Control Service (203) is used to configure the payload computer\nand command the payload devices.\n\nIn emergency situations, the already cited High Priority Commands can be\nutilized to activate and deactivate devices. HPCs are routed directly from TTC to\nPCDU without being addressed by OBSW so that their execution is independent of\nOBC Processor-Board or OBSW. They are decoded by the PCDU controller and\ncan be used to change switches. For every switch there is a dedicated HPC as can be\ntaken from Table 10.4.\n\nWith the HPCs all devices can be activated and deactivated except for the PCDU\ncontroller itself which is implemented as a single-failure-tolerant inherently\nself-monitoring system. All OBSW objects can be accessed via PUS-Services. This\noffers 100 % commandability coverage for an FLP based spacecraft.\n\n10.11.3 Ground Analyses\n\nThe commandability and observability of the spacecraft provide the required pos-\nsibilities to examine processes and statuses on board the satellite. In case of a\nmalfunction they are mandatory for failure recovery. Especially during the initial\nflight phases\u2014LEOP and Commissioning Phase\u2014and in particular for the first FLP\nbased satellite\u2014the \u201cFlying Laptop\u201d\u2014it will be a challenge to distinguish between\nsoftware bugs or flaws in the control algorithms and actual S/C hardware errors.\nThis has to be examined in detail whenever unsolved issues appear on-board.4\n\n4It has to be noted that despite all careful design, implementation and testing, the OBSW is an\nacademic product that is implemented with limited resources and experience.\n\n404 R. Witt and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\n\n\nChapter 11\nSatellite Mission Phases and Planning\n\nJens Eickhoff, Michael Lengowski and Kai-S\u00f6ren Klemich\n\nAbstract The chapter covers the flow of the work steps over the diverse mission\nphases, from mounting to a launcher, the launch, spacecraft power up, the first\ncontact initiation until end of life deorbiting.\n\nKeywords Launcher interfaces ? Activities before launcher integration ?\nPre-launch activities ? Launch and early orbit phase (LEOP) ? Spacecraft\npower-up ? Link establishment ? Commissioning phase ? Nominal operations ? End\nof life phase\n\nJ. Eickhoff (&)\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\nM. Lengowski ? K.-S. Klemich\nInstitute of Space System, University of Stuttgart, Stuttgart, Germany\ne-mail: lengowski@irs.uni-stuttgart.de\n\nK.-S. Klemich\ne-mail: klemich@irs.uni-stuttgart.de\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_11\n\n405\n\n\n\n11.1 Overview\n\nThe FLP platform is designed for lightweight satellites of the 150 kg class which\ntypically will be launched as piggy-back payload (also called \u201csecondary payload\u201d\nor \u201cauxiliary payload\u201d) together with a primary launch passenger. In most cases\nsuch secondary passenger payloads of the launcher are not allowed to emit any RF\nsignal/noise during launch, which only can be assured by deactivation of the\nsatellite during launch. Therefore the FLP also was designed for being launched in\nOff Mode.\n\nThe \u201cFlying Laptop\u201d as first FLP-based satellite is designed as secondary pas-\nsenger compatible with two launchers in order to offer flexibility in the launcher\nchoice.\n\n\u2022 The first launch system is a Soyuz 2-1b rocket with a Fregat-M upper stage\nlaunched from Baikonur, Kazakhstan. The launch site is located at approxi-\nmately 45.6\u00b0N and 63.4\u00b0E. Its local time is Universal Time Coordinated\n(UTC) +6 h, i.e. the time difference to Germany will be +5 h in winter and +4 h\nduring daylight savings time.\n\n\u2022 The second launch system is the Polar Satellite Launch Vehicle, (PSLV) of the\nIndian Space Research Organization (ISRO), launched form from Sriharikota,\n(SHAR) located 80 km north of the city of Chennai (13.7\u00b0N and 80.2\u00b0E).\n\nFor the mission of the \u201cFlying Laptop\u201d the initial satellite orbit is planned to be a\n\u201cSun-Synchronous Orbit\u201d (SSO) with an altitude below 650 km. The altitude\nrequirement results from the pursued compliance with the European Code of\nConduct for Space Debris Mitigation [1] which implies to deorbit the satellite after\nend of mission within 25 years. At an altitude of 600 km and at a \u201cLocal Time of\nDescending Node\u201d (LTDN) of approximately 09:00 h the inclination of this orbit is\nca. 97.79\u00b0, its orbital period is ca. 5800 s, 96.7 min or 1.61 h. In the initial orbit, the\nsunlight periods will last for ca. 4020 s, 67 min or 69 % of the orbital period and the\neclipse periods will be roughly 1745 s, 29 min or 30 % of the orbital period. The\nremaining percent of the orbit the satellite will be in penumbra. For more details\nplease also refer to the orbit analysis in annex Sect. 17.10.\n\nThe selected launch vehicles will first release the main payload and the sec-\nondary passengers thereafter one by one. While the secondary passengers of the\nPSLV will be injected into the same orbit, the Soyuz Fregat upper stage can release\nthe auxiliary passengers at different altitudes.\n\nTarget orbit data will be provided before launch and the actual estimated orbit\ndata shortly (some minutes) after separation. The applied data format is a time, a\nposition vector and a velocity vector. The data will be used for planning the IRS\nantenna station passovers (see Chap. 12) and will be shared with DLR GSOC for\nplanning the passovers of the antenna station in Weilheim (see Chap. 13).\n\n406 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\n\n\nThis general process is backed up by some information available on the German\nAgency DLR1 satellite TET-1. TET-1 was launched in a SSO with a LTAN 11:27 h\n[43] at 12:41 h local time in Baikonur or 8:41 h MESZ [45]. It was separated from\nthe launcher at 9:33 h MESZ and the first contact in Germany was at 11:54 h MESZ\n[44] by the DLR \u201cGerman Space Operations Center\u201d (GSOC). Due to the LTAN\nbeing in the morning and not the LTDN as for the \u201cFlying Laptop\u201d, TET-1 was\nlaunched in northern direction, but the remainder of the procedure can be assumed\nto be similar between the two.\n\n11.2 Launcher Mechanical Interface\n\nThe mechanical interfaces of the selected launchers are rather similar to each other.\nThe maximum envelope given by the fairing are\n\n\u2022 1000 mm \u00d7 800 mm \u00d7 800 mm for Soyuz Fregat and\n\u2022 600 mm \u00d7 700 mm \u00d7 850 mm (radial \u00d7 transverse \u00d7 height) for the PSLV.\n\nFigure 11.1 shows the payload configuration of both rockets. It can be seen that\nthe separation adapter axes are different in both cases:\n\nFig. 11.1 Auxiliary satellite configuration of Soyuz Fregat [138] and PSLV [137]\n\n1Deutsches Zentrum f\u00fcr Luft- und Raumfahrt.\n\n11 Satellite Mission Phases and Planning 407\n\n\n\n\u2022 In case of the Russian launcher the auxiliary satellite is mounted on the Soyuz\nCarrying Structure ASAP-S.\n\n\u2022 Auxiliary payloads of PSLV will be placed on the Vehicle Equipment Bay,\n(VEB) tilted at an angle of 4\u00b0\u20135\u00b0 to the longitudinal axis of the vehicle in order\nto provide safe clearance from the vehicle during separation. Both auxiliary\npayloads are placed below the main passenger.\n\nThe Indian Space Research Organization (ISRO) provides qualified separation\nsystems for piggyback satellites in a mass range of 50\u2013150 kg (excluding the\nseparation adapter). For the \u201cFlying Laptop\u201d the separation adapter for satellites\nwith a mass of up to 120 kg can be used. Figure 11.2 shows the technical draft of\nthis adapter and Table 11.1 lists its technical characteristics.\n\nThis launch adapter can be applied as separation system for both launch options,\nPSLV and Soyuz.\n\nThe separation system consists of an upper and a lower ring adapter locked\ntogether by means of a \u201cBall Lock\u201d mechanism. The mechanism is opened by\npyrotechnic bolts rotating a retainer ring between the upper and lower rings. The\nspacecraft is ejected then by helical compression springs positioned in between\nthese rings.\n\nFig. 11.2 Separation system configuration of PSLV [137]\n\n408 J. Eickhoff et al.\n\n\n\nMounting the satellite physically to the launch adapter is performed already at\nspacecraft manufacturers premises\u2014in case of the FLP mission \u201cFlying Laptop\u201d at\nthe University of Stuttgart. This includes mechanical mounting to the adapter\u2014\nFig. 11.2\u2014for the launcher secondary passengers\u2014see Fig. 11.1.\n\n11.3 Launcher Electrical Interface\n\nThe electrical interface between the auxiliary satellites and launcher is applied via\none umbilical link for both launchers but in different configurations:\n\nThe PSLV umbilical connector (DBAS 74 12 0 SN 059 on Spacecraft side)\nconsists of an interface for battery trickle charging (pin 1 and 2), a separation\ndetection for launcher (pin 3 and 4) and for the satellite, as well as a minimum set of\nsatellite checkout pins. Pins 3 and 4 are to be shorted on the satellite side with a\nshort-loop. This connection on the vehicle side will be used to monitor satellite\nseparation through vehicle telemetry in flight. The scheme is depicted in Fig. 11.3.\n\nTable 11.1 Characteristics of the launch adapter for 120 kg satellites\n\nClass of\nSatellite\n\nDesignation Mounting\nPitch\nCircuit\nDiameter\n[mm]\n\nNo. &\nSize of\nbolts\n\nNominal\nSeparation\nVelocity\n[m/s]\n\nMass\n[kg]\n\nMass\nretaining\non the\nSatellite\n[kg]\n\n120 kg IBL-298 298 M6x12 1 4.5 1.1\n\nFig. 11.3 PSLV electrical connector interface [137]\n\n11 Satellite Mission Phases and Planning 409\n\n\n\nFor the 120 kg system the connector location is fixed at 196 mm from the center of\nthe separation system.\n\nThe umbilical connector for Soyuz Fregat offers only the separation detection for\nsatellite and launcher. In case of a launch with Soyuz the satellite battery will be\ncharged by means of the external power interface of the skin connector during\nlaunch preparation. The disadvantage of this configuration is the lack of possibility\nfor trickle charging during pre-launch and early countdown phase. The connector\nconfiguration principle is depicted in Fig. 11.4.\n\nProper grounding between the various parts of the spacecraft as well as between\nvehicle and spacecraft shall be ensured to avoid undesirable build up of static\ncharge. The contact resistance between spacecraft and vehicle must be less than\n10 m?.\n\n11.4 Activities Before Launcher Integration\n\nIn this chapter only a short overview on the activities shall be provided, that have to\ntake place after arrival at the launch site. The list does not claim to be entirely\ncomplete and will vary depending on the individual FLP mission and satellite\ninstrumentation. Also differences have to be considered between FLP Generation 1\nand 2 spacecraft.\n\n\u2022 The first activity at the launch site is to unpack the spacecraft and the GSE\nequipment and to connect the EGSE setup to the spacecraft in the launch site\ncleanroom.\n\nFig. 11.4 Electrical connector interface for Soyuz Fregat (pins and connectors in multiple\ninstances for redundancy). \u00a9 IRS, University of Stuttgart\n\n410 J. Eickhoff et al.\n\n\n\n\u2022 Then the spacecraft will be started up in the None Mode where PCDU and OBC\nare running and spacecraft housekeeping TM can be received and TCs can be\nsubmitted. This includes the qualitative test of the S-band transmission system.\n\n\u2022 The next step will be rerunning the Abbreviated Function Test (AFT) [38]. This\ntest is a recheck of all electrical signal and power lines with respect to pure\nelectrical characteristics. The AFT is split into a platform AFT and a payload\nAFT.\n\n\u2013 For the platform AFT the IRS has developed automated MOIS/SCOS test\nsequences which are reusable independent of a dedicated mission, however\npresuming the payloads being controlled by a PLOC.\n\n\u2013 IRS also has an automated payload AFT sequence available for the dedicated\ncheckout of the \u201cFlying Laptop\u201d payload module.\n\n\u2013 Furthermore the Data Downlink System (DDS) for the scientific instrument\ndata must be retested.\n\n\u2013 For FLP Generation 1 this is the amateur radio S-band DDS system still\nincluded in the payload module. Therefore it is part of the payload module\nretests.\n\n\u2013 For FLP Generation 2 it will be an X-Band transmission system\u2014Airbus is\ncurrently analyzing compatibility of both the SSTL 150 X-Band TTC\n(CAN-Bus) and of the Myriade X-Band TTC (LVDS).\n\n\u2022 Depending on the mission specific payload being mounted on the FLP (cameras,\ntelescope, scanners, multi-spectral imagers or other) it might be necessary to\nperform alignment rechecks of the payload after transport to the launch site. This\nis not required for the payload setup of the first FLP based mission \u201cFlying\nLaptop\u201d but might be for others.\n\n\u2022 Similarly for FLP missions with specific optical instruments it might be nec-\nessary to perform a final sensor calibration re-check or a final pre-launch sensor\nre-calibration at launch site.\n\n\u2022 Then a final run-in of the RWs at nominal speed over 30 min is performed to\nhomogenize lubricant distribution in the bearings and to minimize stiction\neffects at start-up and friction differences between the RWLs at speed-up.\n\n\u2022 Then a final Battery SoC calibration and maximum battery string capacity reset\nis performed.\n\n\u2022 The following OBSW variable settings are to be checked/set via the JTAG\ninterface:\n\n\u2013 The LEOP-Completion Flag has to be set to 0 (zero) in the safeguard\nmemory of both I/O boards.\n\n\u2013 The Separation-Completion Flag has to be set to 0 (zero) in the safeguard\nmemory of both I/O boards.\n\n\u2013 The SA-Deployed Flag has to be set to 0 (zero) in the safeguard memory of\nboth I/O boards.\n\n11 Satellite Mission Phases and Planning 411\n\n\n\n\u2022 For FLP Generation 2 missions with propulsion subsystem (Xenon resistojet or\neven hydrazine mono-propellant) the corresponding preparatory procedures\nbefore fueling will be performed:\n\n\u2013 Pressurization with pure pressurant gas\n\u2013 Valve checks\n\u2013 Thruster heater checks (resistojet heater respectively catalytic-bed heaters for\n\nthe hydrazine thrusters)\n\u2013 Purging.\n\n11.5 Pre-launch Activities and Checks\n\nAs first step of the pre-launch activity the separation adapter together with the\nsecondary launch passengers will be mounted onto the launcher. Proper electric\ngrounding of the spacecraft to the launcher reference on the adapter has to be\nassured also during this step. After mounting the following activities will be\nconducted:\n\n\u2022 For the platform each of the four retaining mechanism of the solar panel\ndeployment system are equipped with an activation connector (see annex section\non green-tagged items 17.13) closing both electric heater circuits on one\nmechanism for heating the melting braid (see Fig. 5.5). Missing connectors\nprevent activation during the integration, test and transport phase.\nAs soon as these connectors now are mated, the PCDU is armed and will initiate\nthe solar panel deployment after its next boot-up. Therefore the spacecraft needs\nto remain switched off from this moment onwards until separation in orbit.\nThis implies that no further OBSW diagnosis activities can be performed any\nmore from this moment onwards as the PCDU is in Off mode and so must be the\nOBC.\n\n\u2022 Therefore also the spacecraft separation circuit switch must be closed now.\n\u2022 The remaining green-tagged items\u2014the safety caps for the spacecraft skin\n\nconnector Skin Connector Panel\u2014will be applied, except for the trickle charge\npower connector for charging the battery. This connector will be disconnected\nas last step of the pre-launch activity. The skin connector panel layout, the\nconnectors and their pin allocation are described in the annex Sect. 17.11.\n\n\u2022 For FLP Generation 2 missions with propulsion subsystem (Xenon resistojet or\neven hydrazine mono-propellant) the final fueling will follow in accordance\nwith the relevant safety measures (especially for hydrazine propulsion system\nfueling).\n\n\u2022 All red-tagged items like payload instrument covers etc. need to be removed as\nnext step.\n\n\u2022 For the FLP Generation 1 the external power connector will be unplugged on\nground as last activity before the fairing of the launcher is closed and the\n\n412 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nconnector cover will be mounted (green-tagged item). From this point onwards\nno further trickle charging nor diagnosis activities can be performed any more.\n\n\u2022 The fairing of the launcher is mounted and closed.\n\n11.6 Launch and Early Orbit Phase\n\nThen the launch itself is performed and the launch sequence will follow approxi-\nmately a scheme as depicted in Fig. 11.5. The estimated launcher separation time\nand the target orbit data for the launcher\u2019s secondary passenger satellites will be\nprovided by the launch supplier some days to hours before lift-off. A second set of\nmore precise orbit data will be provided after separation from the launcher.\n\nThe Soyuz launch agent indicated a time span of 2 h between lift-off and\nseparation. After separation it will take approximately two launcher orbits and as\nresult approximately 3\u20134 h after lift-off until the \u201cFlying Laptop\u201d satellite would be\nvisible for ground stations over Germany, in the morning of local German time.\nScenarios with the PSLV look similar.\n\n11.6.1 Spacecraft Power-up to Safe Mode\n\nThe PCDU is in Launch/Shutdown mode while the spacecraft is mounted on the\nlauncher and it remains in this mode during launch until before separation of the\nsatellite from the launcher (see Fig. 5.12). In this mode, the PCDU is only in\n\nFig. 11.5 Fictive launch profile\u2014adapted from [140] for secondary passenger example\n\n11 Satellite Mission Phases and Planning 413\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\nstandby\u2014no satellite devices are powered. The BCRs are active to balance the\nbattery strings. It is possible for the system to re-enter this mode when the battery\nSoC drops severely.\n\nAs explained in Sect. 5.5.3 the initial steps of the spacecraft boot are performed\nby the PCDU when identifying the separation strap circuit being opened (see also\nthe \u201cmicro switch\u201d circuit in Fig. 5.9). After separation detection the PCDU boots\ninto its MiniOps Mode. It activates the power circuits of the OBC and as a result the\nOBC nominal side with Processor-Board N and I/O-Board N and both hot\nredundant CCSDS-Boards is booted. After the OBSW is up and running it will\ncommand the PCDU into its Idle Mode.\n\nThe OBSW then starts S/C operation by setting the satellite automatically into\nDetumble Mode. This implies also setting the Attitude Control System (ACS) into\nDetumble Mode which then starts to reduce rotational rates of the satellite resulting\nfrom the launcher separation by means of Magnetotorquers, measuring the achieved\nattitude by means of Sun Sensors and Magnetometers.\n\nThe initial rotational rates after separation are induced by the separation mecha-\nnism and their maximum values result from the mechanism design. Currently rates of\n\n\u2022 4.5\u00b0/s around each satellite main axis are assumed,\n\u2022 corresponding to a total of 8\u00b0/s accumulated over all axes.\n\nStart of detumbling is marked by an Event TM packet for information on\nground.\n\nFurthermore, other vital parts of the OBSW such as the controllers for power\nsupply subsystem (PSS), the telemetry and telecommand subsystem (TTC) and the\nthermal control subsystem (TCS) are set to their standard modes.\n\nDuring these initial operational steps of the OBSW it generates according boot\nEvent TM (being written to the TM packet store on the I/O-Board) for later\ndownlink (for more details on the boot process see Sect. 4.3). The OBSW fur-\nthermore collects all relevant TM of initial rotational rates, the deployment status\ndata from the PCDU and the number of deployment attempts and allocates the data\nin according system TM packets for downlink.\n\nDuring this phase the OBSW will also request the status of the SA-Deployed\nFlag from the PCDU and will update the values accordingly in the OBSW safe-\nguard memory.\n\nDepending on the orbit injection, the position of the first visible ground station\nand the initial tumbling rates of the spacecraft after launcher separation, it might\noccur that the Safe Mode is reached before first ground contact or vice versa.\n\nSimulations in [128] showed that detumbling to less than 0.4\u00b0/s (condition for\nthe next S/C mode transition) takes approximately 75 min. After detumbling, the\nsystem transits to its Safe Mode, in which the solar-array is oriented coarse pointing\ntowards the sun (?Z-axis) and the satellite is spun up around its principal axis to a\n\n\u2022 rotational rate of 2\u00b0/s\n\u2022 or one evolution every 3 min.\n\u2022 Coarse sun pointing assumes a maximum pointing error of 20\u00b0.\n\n414 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\n\n\nThe begin of Safe Mode entry is logged by the OBSW by a mode transition\nsystem Event TM packet. The final acquisition of the Safe Mode with the achieved\nrotation around the Z-axis and sun pointing, is tracked with a Safe Mode-reached\nsystem Event TM packet.\n\n11.6.2 Spacecraft Link Establishment\n\nFor the LEOP Operations of the first FLP satellite\u2014the \u201cFlying Laptop\u201d\u2014IRS,\nUni-Stuttgart is granted to use the ground Station of the German Space Agency\n\u201cDeutsches Zentrum f\u00fcr Luft- und Raumfahrt\u201d (DLR) at Weilheim near Munich.\nFor more details on the infrastructure and procedure please refer to Chap. 13. The\nantenna station in Weilheim is equipped with an automatic scan mechanism to\n\u201csearch\u201d for the carrier signal from the satellite.\n\nWith either of the two cited alternative launchers and launch sites the first\npassover in separated mode is expected several hours after launcher liftoff. The\nestimate is T0 +4 h. Therefore for this mission the satellite is expected to be in Safe\nMode at ground contact.\n\n\u2022 As the OBSW after boot is still in the LEOP time range (see Sect. 6.3.4) it\nautomatically will activate not only the TTC receivers, but also the nominal\nTTC transmitter.\nNote: Later during the mission when the LEOP Completion Flag was set to 1,\nthe transmitter activation is done by the TTC_Controller as result of time tagged\ncommands in the timeline or as result to receiver lock detection\u2014no longer\nautomatically after OBC boot.\n\n\u2022 From ground an unmodulated carrier wave (Continuous Wave, CW-Mode) is\ntransmitted towards the expected S/C position shortly before the satellite is\nexpected to appear at this location and carrier frequency sweeping is induced to\naccount for Doppler shift due to the satellite motion towards the ground station.\nDuring sweep the point will be reached where the receiver on board will lock its\nPLL to the identified carrier. The on-board transmitter will then be activated by\nthe OBSW and will transmit its carrier with modulated live TM respectively idle\nframes back to the ground station.\n\n\u2022 Once this signal is received at level of the RF-SCOE in the ground station and\nthe receiver is locked onto the signal, the CW-Mode is disabled in the ground\nequipment and idle packets are uplinked to the satellite (BD-Mode\u2014see\nTable 12.1).\n\n\u2022 For final bidirectional link verification a ping TC is sent to the satellite and ping\nTM should be received by the GS.\n\n\u2022 The full lock of the satellite receiver can be determined on ground by interpreting\nthe Command Link Control Words (CLCW) being present in every downlinked\nframe as soon as the communication chain has been commanded to AD-Mode\n\n11 Satellite Mission Phases and Planning 415\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\n(see Table 12.1). This mode also permits verification that no TC frames are lost\nduring transmission.\n\n\u2022 If this mode is established, a TC burst test with a number of ping TCs should be\nperformed to assure TC link stability and no loss of TC frames.\n\n\u2022 During the entire satellite passover, the antenna pointing is continuously\nadjusted according to the predicted satellite position. No satellite tracking by\nmeans of ranging of the signal is performed.\n\n\u2022 The DLR antenna station (see Chap. 13) performs pointing by measurements\nand by this means also determines more accurate orbit data than initially pro-\nvided by the launch supplier.\n\n\u2022 The IRS ground segment (see Chap. 12) relies fully on the orbit data provided by\n\n\u2013 initially the launch supplier\n\u2013 then DLR orbit measurements from Weilheim\n\u2013 and later by tracking data provided online by NORAD\n\u2013 and even later during the Commissioning Phase from the GPS receiver (see\n\nSect. 11.7).\n\n11.6.3 Initial System Checkout\n\nAfter initial ground contact establishment, the first verification activity is to check\nfor the battery voltage status to estimate energy availability on board.\n\nSecond verification is to check the solar array deployment flags indicating proper\ndeployment. For the \u201cFlying Laptop\u201d mission these are the two flags for the left and\nright deployable panel\u2014for FLP missions with other deployment geometries this\nmight be slightly different. If the satellite is in sunlight and the panels are already\nsun pointing, i.e. the Safe Mode is already reached, deployment of the panels can\nalso be verified by comparing the voltages and currents of the two wing panels.\n\nIf all seems properly deployed the next step is to set the LEOP-Completion Flags\nto 1 (one) on both I/O-Boards, so that whenever the OBSW is rebooted on whatever\nOBC board configuration, it will not perform any LEOP specific activities anymore.\n\nFrom that point onwards the normal scheme of Transmitter operation will be\nfollowed, meaning\n\n\u2022 Transmitter activation by time-tagged command from the executed on-board\ntimeline or by received ground command.\n\n\u2022 Transmitter deactivation by command or at the latest by automatic reaction of\nthe communication controller when the spacecraft did not receive any TC for\n20 min.2\n\n2The time delay is a configurable OBSW variable.\n\n416 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\n\u2022 Automatic transmitter activation when a receiver bit log is detected by the\ncommunication controller, i.e. when a ground station transmits a signal on the\ncorrect frequency trying to establish radio contact to the spacecraft. This feature\nis implemented to avoid a blind acquisition when the time-tagged transmitter\nactivation commands fail, e.g. when the on-board command queue is\ndeactivated.\n\nFurthermore it is checked whether the satellite is still in Detumble Mode or\nwhether it already has reached Safe Mode.\n\n11.7 Platform Equipment Commissioning in Orbit\n\nThe following phase is the spacecraft Commissioning Phase. Here subsequently all\nthe higher flight mode equipment of the platform and later also of the payloads are\ntaken into operation and are characterized/calibrated in orbit if necessary.\n\nThis platform Flight Operations Manual focuses exclusively on the commis-\nsioning of the FLP platform equipment. The commissioning steps are the following:\n\n\u2022 After the initial ground contact establishment first the TTC transceiver signal\ncharacteristics are analyzed. Signal strength is analyzed in relation to the dis-\ntance and visibility angles to the station and so are signal spectrum and noise.\n\n\u2022 As described in Sect. 11.6.1 the spacecraft transits through a Detumble Mode to\na stable Safe Mode where it is Sun oriented and spinning. During commis-\nsioning here the avionics equipment TM is analyzed whether\n\n\u2013 the requested Mode has been achieved (Safe Mode),\n\u2013 the spin rate is approximately 2\u00b0/s\n\u2013 for all magnetotorquers both coils are operating properly\n\u2013 magnetometers and Sun sensors are qualitatively providing plausible data\n\u2013 the system power bus voltage is in a tolerable range and the PCDU indicates\n\nbattery charging during Sun phase.\n\nThese checks can be applied directly based on flight TM from the first ground\nstation passover(s). Thereafter some activities follow which are partly based on pure\nTM but which also imply some commanding. These concern the power subsystem\n\u2014namely the battery.\n\n\u2022 When the satellite is flying in Safe Mode the battery charge status and the\npower-bus voltage should increase from orbit to orbit until the battery is fully\ncharged. This has to be monitored by the relevant TM parameters.\n\n\u2022 Once the battery is fully charged, the SoC estimation algorithm calibrates itself\nto 100 % SoC (see Sect. 5.4.1.2). As the initial SoC value after launch can only\nbe guessed, the battery must be fully charged before the SoC estimation can be\nconsidered to be reliable. Event TM from the power controller indicate the\ncalibration of the SoC algorithm for all three battery strings.\n\n11 Satellite Mission Phases and Planning 417\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\n\u2022 From this point on, the SoC calculates the SoC reliably based on the configu-\nration parameters set before launch, which are derived from ground test data of\nthe battery FM.\n\nThe equipment power-up is foreseen to be performed in the following sequence:\n\n\u2022 As soon as possible the GPS receiver shall be taken into operation as it takes\nquite some time to acquire the first navigation solution at initial boot-up (approx.\n20 min). See Sect. 7.11.2.4 for details.\n\n\u2022 Furthermore the GPS receiver data provide a better estimation of the actual orbit\ncharacteristics than the initial launch supplier injection data and the subsequent\nanalysis data gained by ground measurements from antenna stations.\n\n\u2022 The GPS receiver HK telemetry has to be analyzed for consistency and plau-\nsibility and for showing no failure events.\n\n\u2022 The star trackers and the fiberoptic gyros are to be powered up next.\n\u2022 For both devices health relevant TM and again Event TM has to be checked.\n\u2022 For the STRs the plausibility check of the reported quaternions against the\n\nspacecraft orientation taken from the Sun sensors together with GPS-based\nspacecraft position has to be performed.\n\n\u2022 For the FOGs a qualitative check of the rotational rate and axis reported by the\nFOGs versus Sun-oriented spacecraft spin axis has to be made. The actual spin\nrate can be deduced from receiver signal strength TM during ground contact, as\nthe TTC antenna gain varies with the spacecraft aspect angle.\n\nThe next major step before the transition to any higher mode is to take the\nreaction wheels into operation.\n\n\u2022 As it is very delicate to verify the RW polarity on ground during AIT a dedi-\ncated satellite mode is foreseen for in-orbit test activities that require a maxi-\nmum use of the ground station contact time during passover. This is the Coarse\nNadir Pointing Mode. This mode\u2014which is an RW-free nadir pointing mode\npurely controlled via Magnetotorquers\u2014is to be activated and it will take 2\u20133\norbits until the satellite has properly switched from Safe Mode Sun-pointing\nspin to stable nadir pointing.\n\n\u2022 The platform is designed that although the solar arrays in this mode are only\nilluminated optimally during a small part of the orbit, the battery is not dis-\ncharged in total. The energy budget over an orbit and over multiple orbits is\npositive.\n\n\u2022 When Coarse Nadir Pointing Mode is reached and ground contact for an opti-\nmum passover is achieved, the RWs are commanded ON by one command, all\nat the same time and all with a limited, moderate rotational rate of 300 rpm.\n\n\u2022 Due to all RWs starting up at the same time\u2014under the assumption of correct\npolarity matrix in the OBSW\u2014the stiction effects at startup of the overall RW\nassembly should almost level themselves out. The spacecraft attitude should\nonly show a slight \u201cshake\u201d effect.\n\n\u2022 Due to all RWs starting up with very limited rotational rate and rotational\ntorque, in case of a polarity matrix error in the OBSW the spacecraft\n\n418 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\n\n\ncounter-rotation would be visible as constant increasing pointing deviation.\nHowever the induced tumbling rate would be limited and as the maneuver is\nmonitored by ground operators in real-time, it can be emergency stopped simply\nby immediate electrical power-down of the 4 RWs. In such a case the error in\nthe RW polarity has to be carefully analyzed by ground based on the acquired\ntelemetry.\n\n\u2022 If all RWs have started up without problems to the desired 300 rpm, the RWL\nassembly can now be commanded to fully speed up the RWs to nominal speed\nand to take them into operation.\n\nFrom this point onwards the spacecraft can be commanded to Idle Mode and to\nthe higher ACS modes to check out control algorithm performance in orbit under\nlife conditions.\n\nAny occurring negative commissioning results require corresponding ground\nbased failure analysis and potential further TM downlink\u2014optionally by activation\nof further TM packets of the affected subsystem/equipment.\n\n11.8 Nominal Operation Phase\n\nThis phase represents the operational phase in which the satellite actually performs\nscientific experiments and technology demonstrations which need special\narrangements and planning are conducted in this phase.\n\nThe phase comprises all nominal operational modes of the satellite. It will be in\nIdle Mode if no instrument observation activity or avionics based experiment is\nrunning. Instrument based observations of ground targets, near Earth objects, the\nMoon or other celestial bodies will be performed in higher operational modes than\nIdle Mode, together with the corresponding ACS mode for pointing.\n\nObservations planning will be performed by use of a mission planning infras-\ntructure. Chapter 14 outlines a mission planning infrastructure example as installed\nat the IRS, University of Stuttgart and the usage of its infrastructure.\n\nInstrument and platform operations TCs are integrated into the generated\ntimelines and are uplinked to the spacecraft for execution over multiple orbits.\nScience data recorded by the mission instruments are downlinked to the science\ndata antenna station. The science data reception and storage chain applied by the\nIRS, University of Stuttgart is outlined in Sect. 12.4.\n\n11.9 End of Life Phase\n\nIn order to comply to the European Code of Conduct on Space Debris Mitigation\n[1] already the FLP Generation 1 is equipped with a De-Orbiting-Mechanism\n(DOM), which is developed and built by the Tohoku University, Japan. The DOM\n\n11 Satellite Mission Phases and Planning 419\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\nwill deploy a 1.5 \u00d7 1.5 m2 Kapton sail in order to decelerate the satellite by\nincreasing the satellites aerodrag. The deployment of the sail is achieved with the\nhelp of a leaf spring mechanism which is deployed by a melting braid device.\n\nWith this additional aerodrag the satellite will de-orbit in 25 years or less if the\ninitial orbit altitude does not exceed 650 km.\n\nFLP Generation 2 based missions may also use higher orbit altitudes as they\nprovide a propulsion subsystem. For deorbiting at end of life phase sufficient\nremaining fuel must be provided for at mission design time. FLP Generation 2\nmissions also can use both, the propulsion and the DOM for orbit altitude decrease.\n\nEnd of life phase is reached in three cases:\n\n\u2022 In the first case the satellite has reached or exceeded its nominal mission lifetime\nand equipment is subsequently degrading such as battery or non-radiation hard\nelectronics, payload instrument or normal avionics units with limited lifetime\nlike the FOGs.\n\n\u2013 In such a case ground defines the end of the mission and initiates the\ndeployment of the De-Orbiting-Mechanism (DOM) which will be released\nby the PCDU.\n\n\u2013 For control of the DOM release the PCDU firmware contains an internal\nDOM deployment counter which is starting to count down one tick per\nsecond as soon as the PCDU is booted to Mini-Ops mode or higher. The start\nvalue of the counter is set to 4096 h which corresponds to approximately\n170 days or 5.5 months.\n\n\u2013 During nominal operations, the DOM timer is reset to the initial value once a\nday by command from ground to avoid triggering deployment of the DOM.\nNote that there is also a HPC defined to reset the DOM timer, which can be\nused in case of an OBSW failure, which does not constitute the end of the\nmission.\n\n\u2013 If ground decides that the mission has ended, deployment of the DOM can\nbe initiated by activating the respective switches in the PCDU. Note that the\nDOM timer cannot be set to a value below 2000 h for safety reasons. Such\nvalues can only be reached by countdown.\n\n\u2022 Mission end can also be reached in case where a fatal error happened on board.\nIn this case the satellite system is disposed and no further operations can be\nperformed.\n\n\u2022 Another fatal error definitely will have occurred in case where no contact to the\nsatellite can be established from ground over several months, regardless of the\nactual root cause of the problem. In this case the PCDU internal counter will not\nbe reset by ground and will reach zero approximately 5.5 months after the last\nreset. The DOM will be deployed automatically.\n\n420 J. Eickhoff et al.\n\n\n\nChapter 12\nStuttgart Mission Control Infrastructure\n\nJens Eickhoff, Nico Bucher, Maximilian B\u00f6ttcher, Charles Thibaut,\nDougie Johnman and Bryan Tatman\n\nAbstract The chapter provides a detailed insight on the mission control infras-\ntructure installed at the University of Stuttgart, Germany, including the antenna\nsystem and the science data signal chain.\n\nJ. Eickhoff (&)\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\nJ. Eickhoff ? N. Bucher ? M. B\u00f6ttcher ? C. Thibaut\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: bucher@irs.uni-stuttgart.de\n\nM. B\u00f6ttcher\ne-mail: boettcher@irs.uni-stuttgart.de\n\nC. Thibaut\ne-mail: thibaut@irs.uni-stuttgart.de\n\nD. Johnman ? B. Tatman\nSatellite Services B.V., Noordwijk, The Netherlands\ne-mail: d.johnman@ssbv.com\n\nB. Tatman\ne-mail: b.tatman@ssbv.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_12\n\n421\n\n\n\nKeywords Mission control infrastructure ? SCOS-2000 ? RF signal chain ?\nAntenna system ? Flight dynamics infrastructure ? Science data signal chain\nThe operation of IRS FLP missions will be conducted primarily through the main\nground station located at the University in Stuttgart at 48\u00b0 44? 58.19?N and 9\u00b0 06?\n13.84?E, approximately 500 m above sea level.\n\nThe facility is fully equipped with a satellite control room, serving as the\ninterface for the operators, and an antenna station and is described in the frame of\nthis chapter.\n\nIn addition to the Stuttgart ground station the IRS team has access to the antenna\nstation of the German Space Agency \u201cDeutsches Zentrum f\u00fcr Luft- und Raumfahrt\u201d\n(DLR)\u2014operated by the DLR German Space Operations Center (GSOC). This\nantenna station is located in Weilheim near Munich, Germany. The DLR/GSOC\nantenna station will be used in the LEOP, Commissioning Phase and during\npotential contingency situations within normal spacecraft operations phases. In both\ncases\u2014with the Weilheim antenna infrastructure or the IRS own antenna station\u2014\nthe operations platform in the Ground Control Center (GCC) at IRS is the same.\nJust the routing destination changes. More details on the technical interface and the\nuse process of the DLR/GSOC infrastructure is provided Chap. 13.\n\n12.1 Platform Control Infrastructure\n\nThe ground station on the Stuttgart university campus was specifically implemented\nfor the operation of IRS and partner university satellites. Satellites can be monitored\nand commanded by means of the ground station either via a link established by its\nown antenna or by an external antenna station. The ground station has facilities for\nsatellite control and science data downlink. The platform ground control infrastruc-\nture comprises the satellite control system infrastructure, the control room environ-\nment, the network link to the antenna system, the transmission of high-frequency\nsignals and the antenna itself on the roof of an institute building on the university\ncampus.\n\nThe institute\u2019s Ground Control Center is equipped with the Satellite Control and\nOperation System 2000 (SCOS-2000), the standard Mission Control System\n(MCS) used and maintained by ESA/ESOC. The primary SCOS-2000 server is\noperated by the spacecraft controller. It is connected to a TM/TC routing system\nwhich is extendable to interface a range of external ground stations (see Chap. 13).\n\nThe SCOS software provides the operator with the interface to the spacecraft,\nenabling commanding, telemetry reception and monitoring of telemery.\nTelecommands and telemetry are exchanged with the Radio Frequency Special\nCheck-Out Equipment (RF-SCOE) which converts the data to the transmittable\nCommand Link Transmission Units (CLTU). SCOS-2000 runs on a dedicated IRS\nserver to enable multiple operators to log in via clients and to perform different\ntelemetry monitoring and telecommanding activities simultaneously-see Fig. 12.1.\n\n422 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\n\n\nWhile SCOS-2000 is suitable for the compilation of fixed sequences of TCs an\nadditional software system, the Mission Operations Information System (MOIS), is\nused to control entire mission Flight Procedures\u2014see also Chap. 15. MOIS is a\nhigh-level tool which interfaces with SCOS to provide enhanced capabilities for the\nautomation of mission sequences. It also provides a full suite of tools for mission\nplanning, Flight Procedure definition and debugging These infrastructure aspects\nare covered later in more detail in Chap. 14.\n\nThe SCOS system interfaces to the RF infrastructure via equipment units which\nhave already been used during system tests of the first FLP satellite, the so-called\nRF Special Checkout Equipment (RF-SCOE). The RF-SCOE handles all the\nCCSDS protocol layers and converts the packets up to the Command Link\nTransmission Units (CLTU) and in the downlink path from the Channel\nAcquisition Data Units (CADU) down to packet level. The RF-SCOE together with\n\nAntenna System Control Center \u2013 IRS StuttgartAntenna Station IF Node\n\nTT&C Integrated \nModem and\n\nBaseband Unit \n(IMBU)\n\nTT&C Up-/ \nDownconverter\n\nDDS Receiver\n\nDDS Protocol \nProcessing Unit\n\nS-Band \nAntenna\n\nTT&C HF \nUnit 2\n\nDDS HF\nUnit 2\n\nSCOS Server \n&\n\nTC-/TM-\nRouting \nSystem\n\nPayload Data \nStorage\n\nDDS Frontend\n\nRF-SCOE\n\nAntenna control station\n\nSCOS Client\n\nFlight \nDynamics\n\nIRS Server\n\nS/C\nTM / TC\n\nP\nay\n\nlo\nad\n\n D\nat\n\na\n\nLegend:\n\nHF-Path\n\nLAN \nTM/TC\n\nInternal\n\nMETEOR \nClient\n\nAntenna\nDrive\n\nPL Science \nData TM\n\nSCOS Client\n\nSCOS Client\n\nTM/TC \nSource \nPackets\n\nRF-modulated\nCLTUs/CADUs\n\nLAN \nFlight \nDyn.\n\nDDS\nHF Unit 1\n\nTT&C\nHF Unit 1\n\nMision\nPlanning\n\nFig. 12.1 IRS ground control infrastructure. \u00a9 IRS, University of Stuttgart\n\n12 Stuttgart Mission Control Infrastructure 423\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\n\n\nthe attached Up-Converter and Down-Converter also provides the functions of TC\nsignal modulation and TM signal demodulation to/from the carrier frequencies.\nMore details are provided further below in Sect. 12.1.2.\n\nFinally the antenna system comprises the antenna itself, the separation of\nspacecraft TC/TM signal from the payload data downlink signal and all filters,\namplifiers etc.\n\nFurthermore the antenna station interface node is also used for the accommo-\ndation of hardware, required for the control of the antenna drive mechanism.\nOptical fiber cables provide the data links between the antenna base and the antenna\nstation interface node. Antenna pointing is controlled by means of the software\nMETEOR, an IRS in-house development. The antenna system comprises a para-\nbolic antenna with a diameter of 2.5 m, an antenna rotor and an antenna base.\n\n12.1.1 Digital TM/TC Processing Components\n\n12.1.1.1 Ground Control Software SCOS\n\nAs already mentioned, the IRS uses a SCOS-2000 system as mission control sys-\ntem. The IRS was supplied with a system license from ESA/ESOC in 2004 when it\nstarted its satellite simulation activities. SCOS is ESA\u2019s generic mission control\nsystem software and is also used by other S/C operators and agencies such as by\nDLR/GSOC. The version applied by IRS is a V3.1, which is already somehow\n\nFig. 12.2 SCOS command log, HK TM log and parameter plot window example. \u00a9 IRS,\nUniversity of Stuttgart\n\n424 J. Eickhoff et al.\n\n\n\noutdated but is kept currently for the first FLP based satellite and will be upgraded\nfor subsequent missions. The recent SCOS versions are the V5 series.\n\nSCOS is based on a database which contains the definition of all satellite\ntelecommands, all telemetry and all TC and TM variables from the OBSW datapool\nwhich are included in TC packets or TM packets. This database is called the\nMission Information Base (MIB) and the FLP MIB is treated in Chap. 16. For raw\nvariables the MIB also includes the calibration information to convert raw data to\nengineering units for visualization on the ground control consoles.\n\nExample visual impressions from the SCOS Man-Machine Interface are pro-\nvided in Figs. 12.2 and 12.3. They show both TC/TM log windows as well as\ngraphic parameter displays\u2014so-called synoptic displays.\n\nThe SCOS TC chain is based on the CCSDS standard. SCOS can submit TC\npackets which are framed externally or can assemble directly CCSDS TC frames,\nTC segments or even CLTUs. Command stacks can be loaded either manually or\nautomatically, and are validated against predefined constraints prior to release.\n\nThe SCOS TM chain for telemetry reception expects its input on TM frame level\nor TM packet level. Please refer to Figs. 12.1 and 13.2 which explain the CCSDS\nlayer levels used for the implementation in the IRS ground station or in case where\nan external partner infrastructure is used for S/C control.\n\nFig. 12.3 Diverse SCOS windows (from AOCS test on simulator). \u00a9 IRS, University of Stuttgart\n\n12 Stuttgart Mission Control Infrastructure 425\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\n\n\nIn addition the system provides a TC/TM packet and parameters archive func-\ntionality to track entire operational sessions\u2014e.g. ground station flyovers of the\nsatellite or satellite test sessions during AIT phase.\n\nTo ease the command and control of the FLP platform for the ground staff two\nlayers of abstraction are introduced:\n\n\u2022 OBSW functions are available which can be triggered/activated from ground via\nthe already cited PUS Service 8 (Function management service).\nAn example can be a function for activation of a payload from ground where the\nOBSW executes the detailed steps from power supply switch via payload\ncontroller boot control, initial PL onboard data-bus TM verification, power\nconsumption control etc.\nThe FLP platform Gen. 1 does not provide any On-board Control Procedures\n(OBCP) as defined in [13]. This functionality is replaced by PUS Service 202\n(see Sect. 2.4.17).\n\n\u2022 Flight Procedures (FP) are another means for increasing the level of com-\nmanding. Flight Procedures are somewhat the complement to OBCPs. While an\nOBCP is a sort of \u201ccommand script\u201d executed on board, a Flight Procedure is a\n\u201ccommand script\u201d implemented in the ground control system.\nAn example is a Flight Procedure which submits the function commands for the\nAOCS to switch from idle mode to fine pointing, for the data handling sub-\nsystem (MMU etc.) to prepare for science data recording and for the payload to\nswitch on\u2014all for preparation of a payload instrument measurement on board.\nFlight Procedures can comprise both low level commands to S/C units, higher\nlevel commands to S/C subsystems and system level commands and they can\ntrigger onboard functions and OBCPs.\nAny command defined in the MIB (and thus implemented in the OBSW) can be\nincluded in an FP. Both individual commands and entire FPs can be commanded\nfrom a spacecraft ground control console.\nIn general FPs allow the definition of\n\n\u2013 absolute and relative time tags for the individual commands,\n\u2013 command flow IF/Then branching according to \u201creturn values\u201d received via TM\n\nback from the S/C during procedure execution\u2014provided ground contact exists\nand\n\n\u2013 Do/While loop constructs\u2014as far as supported by the procedure execution\nengine in the ground control system.\n\nThe execution, i.e. the subsequent submission of such Flight Procedure com-\nmand sequences and the according branching in IF/Then cases requires more than\njust a simple play-list of commands. It requires the commands being embedded into\na script language and the execution of such scripts by the ground control console.\nThus an according procedure execution engine has to be coupled to (or must be\nintegrated into) the ground control system. For SCOS several script languages and\n\n426 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nexecution engines are available, one for the older TCL language (cf. [106]), and one\nfor the newer PLUTO language which is standardized by the ECSS (cf. [107]) and\nis applied in modern ESA missions.\n\nTo avoid writing such procedures via a text editor and inducing errors via typos\netc. FPs are today defined by means of flow chart editors. They provide different\nviews on the task flow and offer the operator to select commands and according\nparameters as they are defined in the MIB. The IRS is equipped with an entire tool\nsuite from RHEA System S.A. in Belgium, which is called The Manufacturing and\nOperations Information System (MOIS). The entire MOIS suite is presented in\nmore detail in Sect. 14.1. Here only the two main elements for the Flight Procedure\ncontext shall be noted.\n\n\u2022 One is the procedure editor\u2014the \u201cMOIS Writer\u201d.\n\u2022 The other one is the procedure test tool\u2014called \u201cMOIS Executor/Validator\u201d\u2014\n\nas depicted in Fig. 12.4. In the IRS infrastructure the MOIS Executor replaces\nthe cited SCOS script language engine for TCL or PLUTO.\n\nAll Flight Procedures as cited in Sect. 17.4 are defined by means of the MOIS\nWriter. During their execution the MOIS Executor stepwise submits S/C commands\ndefined per procedure step to the SCOS TC chain and evaluates TM variables if\nrequired to branch If/Then or Do/While procedure statements accordingly.\n\nFig. 12.4 Execution of flight procedures with the MOIS executor/validator. \u00a9 RHEA system S.A.\nand IRS, University of Stuttgart\n\n12 Stuttgart Mission Control Infrastructure 427\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\n12.1.1.2 NCTRS Router\n\nThe Network Control and Telemetry Routing System (NCTRS) originally is a\nsoftware tool from ESA/ESOC to interface from their control center SCOS systems\nwith remotely connected satellites\u2014either via data link (in most cases X25) to the\nantenna stations\u2014or via data link to a satellite still under test in the assembly hall of\nthe manufacturer. The system also optionally performs protocol level conversions\nfrom e.g. SCOS TC packets to CLTUs and similarly for TM.\n\nThe \u201cNCTRS Router\u201d at IRS performs similar routing tasks, but without auto-\nmatic telecommand or telemetry layer conversions. And it routes only inside the\nIRS ground segment LAN. Nevertheless the router\u2014embedded in the block \u201cSCOS\nServer and TC/TM Routing System\u201d of Fig. 12.1\u2014is a key element of the\ninfrastructure as it allows dynamic allocation of control stations and targets.\n\nFor understanding the architecture it first must be explained, that the SCOS\nserver and the clients all run on virtual machines in the IRS environment. A SCOS\nclient\u2014running in the Ground Control Center on whatever lab PC then can connect\n\u2014via the SCOS server\u2014to a target which can be\n\n\u2022 the TM/TC Frontend of the simulator testbench to command a test with the\nsimulated spacecraft in the laboratory,\n\n\u2022 the TM/TC Frontend of a FlatSat setup of spacecraft equipment in the IRS clean\nroom during spacecraft EM or FM assembly,\n\n\u2022 the TM/TC Frontend or RF-SCOE of a complete satellite under test in the IRS\nclean room,\n\n\u2022 the RF chain equipment routing TC and TM to/from the IRS antenna,\n\u2022 or the connection to an SLE unit for connection to an external agency antenna\n\nstation (see later in Chap. 13).\n\nAll these variants are simply configurable by router software commands. In case\nof commanding the real satellite from SCOS by means of the IRS antenna station,\nthe router connects the SCOS to the RF chain via the so-called RF-SCOE\u2014see\nFig. 12.1. This RF-SCOE was already mentioned in Sect. 12.1 and is explained in\nmore detail in the following Sect. 12.1.2.\n\nFigure 13.2 depicts the route from SCOS to the DLR/GSOC ground station\nimplemented by route connection from SCOS to the DLR provided SLE equipment.\n\n12.1.2 RF Signal Processing\n\nThe RF-Signal processing is performed by an infrastructure, which was used as\nRF-SCOE during satellite test phase in the cleanroom and which is now used for\nconversion of the digital CCSDS data from SCOS to CLTUs modulated onto a\ncarrier and vice versa to demodulate CADUs from the downlink carrier and to\ndecode CCSDS input for the SCOS system. This infrastructure is provided by a\n\n428 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\n\n\nclose cooperation partner of the IRS, namely Satellite Services BV in Noordwijk\naan Zee, Netherlands.\n\nThe TTC-IMBU system\u2014as it is called by SSBV\u2014uses a \u201cHybrid Modem\u201d\napproach which optimizes the combination of Modem and TM/TC-Frontend\nfunctionality within one system and allows the system to be used both during AIT\nand operationally. The Integrated Modem and Baseband Unit (IMBU) provides\ninterfaces both at 70 MHz Intermediate Frequency (IF) and via Bypass Interfaces\n(RS422/TTL) with integrated Baseband functions. These functions include base-\nband uplink coding, modulation together with downlink demodulation,\ndecoding/correction.\n\nThe TTC-IMBU is based on the latest single-board IMBU product from SSBV\nthat allows all these functions to be integrated into a single 3U/19? rack mountable\nunit. This is further enhanced for the \u201cHybrid Modem\u201d approach by augmenting the\nTTC-IMBU with a 1U server that hosts the TTC Modem Control and Monitoring\nsoftware with the TM/TC-Frontend software. The software layers provide data\nprocessing up to the packet level and the routing of the TM and TC data to third\nparty systems using network interfaces.\n\nThe TTC-IMBU can be controlled and monitored locally or remotely via LAN\nand for testing purposes also supports different modes of operation supporting TM\nsimulation/coding/modulation as well as TC internal baseband loopback decoding\nfor specific test purposes.\n\nThe TTC-IMBU interfaces at an intermediate frequency (IF) of 70 MHz at one\nend and via LAN to control/monitoring and data processing systems on the other\nend. The TTC-IMBU also allows TC to be sent and TM to be acquired via bypass\ninterfaces that can be used during spacecraft assembly, integration and testing\n(AIT).\n\nIn summary, the main functions/features of the TTC-IMBU are:\n\n\u2022 RF interfacing at 70 MHz intermediate frequency (IF) namely:\n\n\u2013 Two (identical) TC outputs used\n\u2013 Two separate TM inputs (LH/RH)\n\n\u2022 Bypass interfacing via RS422 (outputs can also be used single-ended)\n\u2022 Selection of either Left Hand Circular Polarized (LHCP) signals or Right Hand\n\nCircular Polarized (RHCP) signals.\n\u2022 Baseband processing of TM (data decoding, frame synchronization,\n\nReed-Solomon and Convolutional decoding/correction, time- and status\ntagging)\n\n\u2022 Remote Interfacing via LAN for control, status and FTP control/configuration\nand file transfer\n\n\u2022 TM/TC interfacing via LAN to external equipment\n\u2022 Maintaining local station time in hardware and software through NTP for\n\nsoftware and external\n\u2022 10 MHz reference, IRIG-B & PPS for hardware\n\n12 Stuttgart Mission Control Infrastructure 429\n\n\n\n\u2022 Providing Graphical User Interface (GUI) for local operations based on the\nexisting SSBV CMS software\n\n\u2022 Supporting TM and TC test/simulation functions (as a specific mode of oper-\nation) for equipment and (sub)system testing\n\n\u2022 Supporting long life-time, high reliability and maintainability\n\nAs already explained the equipment first was used as RF-SCOE during satellite\ntests and now is used as the core of the satellite \u201cground station\u201d\u2014please also refer\nto Fig. 12.5.\n\nTo fulfill the various scenario needs, a set of EGSE elements have been defined\nbased around the SSBV TTC-IMBU. The TTC-IMBU combines the functionality\nof a TM/TC-Frontend with that of a modem. The TM/TC baseband section is\nresponsible for the processing of telecommand data down to coded bit stream level\nand likewise the acquisition of telemetry serial bit streams and the recovery of\ntelemetry data from this.\n\nThe modem section is responsible for the modulation of the telecommand sig-\nnals and the demodulation of the telemetry. Telemetry and telecommand processing\nis available to/from different layers. The TMTC-IMBU processes the data to packet\nlevel (see Fig. 12.6).\n\nTheTTC-IMBU interfaces to the spacecraft either via baseband (Bypass) interfaces\nor via 70MHz IF. The Bypass interfaces are NRZ-L Data+Clock serial interfaces (the\nTC Link is augmented by an Enable signal) at either RS422 or LVDS (configured\nat time of manufacture). The system is shown diagrammatically in Fig. 12.7:\n\nPck. Layer\n\nSegm. Layer\n\nFrame Layer\n\nCLTU Layer\n\nCCSDS  Decoder / Encoder\n\nOBC Processor\n\nCommercial \nAmplif. Gnd\n\nRx\nNRZ-L\n\nNRZ-L\n\nPckt.\n\nRF Link\n\nSCOS / MOIS\n\nTTC-IMBU\n\nCCSDS Board\n\nSBC Board\n\nCommercial \nAmplif. Gnd\n\nTx\n\nR\nF\n\n-S\nC\n\nO\nE\n\nCADU Layer\n\nGnd Ctrl System,\nTM/TC-DB\n\nScript Engine\n\nPck. Layer\n\nFrame Layer\n\nIntermediate\nFrequency\n\nModulator / Demodulator\n\nFreq. Upconverter + LP Amp.\n\nFig. 12.5 TTC-IMBU in the ground\u2014space TC/TM chain. \u00a9 IRS, University of Stuttgart\n\n430 J. Eickhoff et al.\n\n\n\nWithin the overall environment, several additional elements could be used in\nconjunction with the TTC-IMBU\u2014see Fig. 12.8.\n\nThe following operational elements can be identified:\n\n\u2022 TTC-IMBU and 1U commercial workstation\n\u2022 Time Reference (typically a GPS based timeserver with IRIG-B, PPS, 10 MHz\n\noutputs and NTP server)\n\nFig. 12.6 TTC-IMBU and hybrid modem workstation \u00a9 Satellite Services BV\n\nFig. 12.7 TTC IMBU primary interfaces. \u00a9 Satellite Services BV\n\n12 Stuttgart Mission Control Infrastructure 431\n\n\n\n\u2022 Clock Reference (typically a low phase noise, high stability reference slaved to\nGPS time server\n\n\u2022 Up-Converter (70 MHz IF to S-band) slaved to 10 MHz reference\n\u2022 Down-Converter (S-band to 70 MHz IF) slaved to 10 MHz reference\n\nIt should be noted that the workstation can be connected to an external keyboard,\nmonitor and mouse if required. Alternatively the GUI may be accessed removed\nusing VNC or similar. The TTC-IMBU is monitored and controlled via LAN. In\naddition TM and TC data is passed via this LAN. The remote interface uses the\nC&C LAN protocol. The TTC-IMBU is implemented as a compact, single-unit\nsystem with external workstation, and as such contains all interfaces and functions\nthat are supported by the system.\n\n12.1.2.1 TTC-IMBU Lower-Level Block Diagram\n\nOn the basis of the high-level block presented in Fig. 12.8, a more detailed internal\nblock diagram of the unit that identifies the major module level elements has been\ncomposed. This diagram is depicted in Fig. 12.9.\n\nThe following module level blocks can be distinguished:\n\n\u2022 TTC-IMBU module (SE-1544):\nThe SE-1544 module is the basis for the complete implementation of the modem\nand baseband functions of the TTC-IMBU.\n\nFig. 12.8 RF SCOE EGSE elements. \u00a9 Satellite Services BV\n\n432 J. Eickhoff et al.\n\n\n\nThe SE-1544 module features a flexible and expandable hardware/firmware\narchitecture to accommodate future in-the-field changes/expansions if these\nwould be required.\nAs part of the on-board interfaces offered, two switchable 70 MHz IF outputs\n(carrying the same IF signal) and two separate 70 MHz IF inputs (TM LH/RH)\nare present. These are complimented with a number of video and baseband test\npoints/connectors to allow easy system level testing and diagnostics.\nThe SE-1544 module hardware directly drives the LED and LCD display that\nare present on the front-panel of the TTC-IMBU and also supports an on-board\nLAN interface for internal communications and in-field (or remote) support\nactivities.\nTo minimize noise and other EMC disturbances and to improve long term\nsupport, the SE-1544 module is equipped with a DC power connector that\nprovides the module with the required range of voltages to operate the interface\nlogic, FPGAs and other electronic components.\nThe different DC voltages are provided from the SE-1538 Power Conditioning\nand Distribution Module (PCDM), which in turn takes its power from an\nexternal AC \u2013> DC power source.\n\n\u2022 IF Input Amplifiers:\nFor some applications, it is desirable to lower the input level for the two IF\ninputs. The TTC-IMBU supports this through the use of two fixed level IF\namplifiers (e.g. 30 dB) that can be incorporated within the IMBU housing.\nThese allow the IF signal from external equipment to be amplified (e.g. by\n30 dB) prior to insertion into the SE1544 LHCP and RHCP IF inputs. The\namplifier inputs and outputs are available on the back panel of the IMBU. If\nthese are included, loop-back cables are pre-installed on these to link the\namplifier outputs to the SE1544 IF Inputs.\n\n\u2022 User Workstation:\nThe 1U User Workstation\u2019s primary role is to implement the LAN based\ninterfaces to the M&C and SLE source/sink and to offer a local Graphical User\nInterface (GUI).\n\nFig. 12.9 TTC-IMBU lower level block diagram. \u00a9 Satellite Services BV\n\n12 Stuttgart Mission Control Infrastructure 433\n\n\n\nThe outside world interfaces that are supported by the workstation include:\n2*Ethernet Gigabit LAN, video and USB. One of the Gigabit LAN connections\nis used for local M&C link to the SE-1544 module.\n\n\u2022 Power Supply and SE-1538 PCDM:\nAs mentioned above, for performance and RAMS/maintenance reasons, the\nTTC-IMBU makes use of an external AC <> DC PSU concept.\nFor this reason, an industrial grade external AC/DC converter is used to perform\nthe mains AC to DC conversion. The resulting DC power (24 V\u2013100 W max.) is\nprovided to the power connector on the back of the TTC-IMBU.\nThe AC/DC adapter provides basic power protection as well as over current and\nshort-circuit protection. Inside the TTC-IMBU, a Power Conditioning and\nDistribution Module (SE-1538) is used to convert the 24 V DC to the different\nvoltages required for the SE-1544.\n\n\u2022 LCD & LEDs:\nOn the front of the unit, two LED displays (one for TM-RX, one for TC-TX)\nand an illuminated button controlled LCD display are present. These modules\nare controlled directly from the SE-1544 hardware and provide real-time feed-\nback as to the status, operation and configuration of the overall unit.\n\n\u2022 Monitoring Points:\nTo aid in the monitoring of selected internal and TM/TC baseband signals,\nfront-panel digital monitoring points are implemented. The buffered monitoring\npoints are provided through BNC connectors and are based on a standard\n50 Ohm output impedance circuit to allow easy connection of standard T&M\nequipment. These signals provide TTL level signals when not loaded.\nThe selection of monitoring points can be done locally using the control buttons\non the front- panel (with feedback through the LCD). The monitoring point\nselection is flexible and implemented by the FPGAs on the SE-1544 module.\n\n12.1.2.2 TTC-IMBU Operation\n\nThe TTC-IMBU is primarily intended for the reception of telemetry and the\ntransmission of telecommands. As such, the GUI includes a status indication for the\nDownlink Demodulator and Uplink Modulator. In addition however, the system\nincludes test modes for both Telemetry and Telecommand links.\n\nThe TTC-IMBU not only allows connection to the spacecraft via the RF links\nbut also via the \u201cBypass Links\u201d. The Bypass links provide direct serial RS422\nconnections to the spacecraft during AIT and during launch preparations.\n\nThe PM mode uses a single modulator that can be reconfigured to use either TC\nor TM. The PM Demodulator consists of a single demodulator however this is only\navailable for TM demodulation.\n\nA simplified block diagram of the key functions is shown in Fig. 12.10.\nThe system implementation uses routing blocks to allow the various signals to be\n\nrouted between the TMA, TMS, TCG, TCA, Modulator, Demodulator and the\n\n434 J. Eickhoff et al.\n\n\n\nbypass interfaces. This is shown diagrammatically in Fig. 12.11 (dotted lines depict\ncommonly used loop-back paths):\n\nIn addition to the nominal and loop-back test functions of the TTC-IMBU, the\nsystem includes standard Bit Error Rate (BER) Testers. The BER function operates\n\nFig. 12.10 Simplified block diagram in normal operation. \u00a9 Satellite Services BV\n\nFig. 12.11 Simplified block diagram in simulation operation. \u00a9 Satellite Services BV\n\n12 Stuttgart Mission Control Infrastructure 435\n\n\n\nby using a transmitter block and a separated receiver block to send and receive\nPseudo Random Bit Sequences (PRBS). Both the TCG and TMS blocks contain\nBER transmission functions while the TMA and TCA contain paths to BER PRBS\nreceiver/checkers.\n\nThe Hybrid TTC modem has a number of key processing functions relating to\nthe Telemetry and Telecommand Processing (Table 12.1). These can be primarily\nseparated into:\n\nTable 12.1 TTC modem functions overview\n\nFunction Description\n\nI/O Routing The I/O Routing is responsible for selecting the source and\ndestination for the other processing blocks. For inputs, the selection is\none from many whereas outputs can normally be selected to go to\nnone, one or multiple destinations simultaneously\n\nTMA\u2014TM\nAcquisition\n\nThe TMA receives serial data from a selection of one of the\nfollowing: Primary Bypass, Redundant Bypass, Demodulator or TM\nSimulator\n\nThe TMA receives, detects and processes the CADUs. Including\nViterbi decoding/error correction (K=7, Rate \u00bd for this project),\nderandomization, RS(223, 255 IL5) error detection and correction,\nacquisition time stamping. The acquired frames are then checked\n(MCFC, VCFC consistency etc.) and passed to the Source Packet\nReconstruction process from which packets are recovered. The TMA\nalso includes the extraction of CLCWs for the TCG Service A\nhandling\n\nThe TMA includes an intelligent frame synchronization process that\nis designed to reliably capture TM in the presence of noise but with\nlow latency and extremely fast acquisition\n\nAcquired frames are time stamped within the hardware before data is\npassed through to the software layers. The software processing\nincludes the identification and notification of spacecraft time\ncorrelation events based on the hardware timestamp of the appropriate\nreceived CADUs and subsequent time packet\n\nDuring the overall TM processing, data at CADU and Packet level is\navailable for monitoring in the local GUI and can be archived\n\nDuring the TMA process, statistical information is collected regarding\nViterbi error counters, Frame errors (MCFC, VCFC, FECW, SCID\netc.), RS errors and packet errors\n\nThe SSBV TMA has been proven over many years\n\nTCG\u2014TC\nGeneration\n\nThe TC Generation process outputs serialized CLTUs to none, one or\nmultiple destinations (Bypass Primary, Bypass Redundant,\nModulator, TC Acquisition)\n\nThe TC Generator can serialize pre-prepared CLTUs and includes a\nlocal GUI editor to create and save CLTUs. This can be very useful\nfor low level debugging but not operationally\n\nIn some projects, the CLTU interface is used to forward data from an\nNDIU or from an encryption process\n\n(continued)\n\n436 J. Eickhoff et al.\n\n\n\nFunction Description\n\nThe nominal path however is that the TC Generator receives TC\nPackets from the CCS and must convert these into segments, frames\nand CLTUs. The TC Generator can send TCs to selectable MAP-IDs\non selectable VC-IDs. The TCG also supports both BD-service\n(send-and-forget) and AD-service (expedited service). The\nAD-service uses feedback from the Telemetry chain (CLCWs) to try\nto ensure transmission of TCs to the spacecraft\n\nThe symbol rate of the TC generation is driven by the subcarrier\nmodulator. The specified TC rate is based on a 16000 Hz subcarrier\nwith a symbol rate division ratio of 4. The link to the subcarrier is\nmandatory in order to ensure the zero crossing modulation transitions.\nIf the modulator is not available or not configured for TC generation,\na local clock generator within the TCG can be used\n\nThe TCG includes control over the means of the CLTU generation\n(related to the PLOP modes) where data can be sent in RF Auto\nmode, Idle Continuous, RF Always or Idle Timeout\n\nTMS\u2014TM\nSimulation\n\nThe TM Simulation function is a special test mechanism that allows\nsimple closed loop testing. The system generates a continuous stream\nof CADUs with the appropriate error correction (RS + Viterbi) and\nrandomization. The CMS includes TM packet handling such that they\ncan be correctly inserted into the CADU stream. The system includes\na TM Packet editor tool that can be used to define TM Packets at\nhexadecimal level. Prepared packets can be stored with descriptive\ntext and grouped as one or more packet perfile. A second tool allows\nthe prepared packets to be grouped in TM Packet Lists that can be\nsimply recalled for specific tests\n\nIn addition to the Frame (CADU) based generation, the system also\nsupports raw data replay with or without further coding\n\nThe symbol rate of the TMS generation is driven either by a local\ninternal clock generator or by the subcarrier modulator. The specified\nTM rate is 128205 ksps. The link to the subcarrier is mandatory if the\nTM is to be modulated in order to ensure the zero crossing\nmodulation transitions. If the modulator is not available or not\nconfigured for TM generation, the local clock generator within the\nTMS can be used\n\nThe TMS output can be fed either into the modulator or looped\ndirectly back into the TMA such that it can be further processed as\nthough it was Telemetry coming from the spacecraft\n\nThe TMS does not support Service A feedback but doesfill in a basic\nCLCW\n\nTCA\u2014TC\nAcquisition\n\nThe TC Acquisition function receives serial data, detects and captures\nthe CLTUs (including BCH correction/detection). The TCA is\ntypically used as an Echo decoder to \u201clisten\u201d to the output of the\nTCG. The recovered CLTUs can be displayed and stored and TC\nSegments recovered from these. When aggregation is not used, the\nTC Segments are the same as the TC packets\n\n(continued)\n\nTable 12.1 (continued)\n\n12 Stuttgart Mission Control Infrastructure 437\n\n\n\n12.1.2.3 The TTC-IMBU Man-Machine Interface\n\nThe MMI is divided into several key sections:\n\n\u2022 Menu\n\u2022 System Status\n\u2022 Master Log\n\u2022 System Control\n\n\u2022 TTC-CMS Status Viewer\n\u2022 Serious Error Display\n\u2022 Status Bar\n\u2022 Data Editors, Generators and Monitors\n\nSome example screenshots of the MMI are depicted in Figs. 12.12 and 12.13.\n\nFunction Description\n\nModulation The modulator is responsible for the generation of the symbol rate\nclock for the TCG (or TMS) and the subsequent modulation of the\nTCG (or TMS) data onto the subcarrier that is then PM on the carrier.\nThe Modulator also includes a Doppler Simulation function that\nadjusts the 70 MHz IF, subcarrier and symbol rates accordingly\nrelative to the RF frequency. The Doppler Simulator supports linear\nand triangular profiles with adjustable range, rate and number of\nrepetitions\n\nThe modulator supports 2 identical (but individually selectable on/off)\n70 MHz IF outputs\n\nDemodulation The demodulator supports a selection of 1 of 2 70 MHz IF inputs. The\noutput of the carrier and subcarrier demodulation is made available\nfor routing to the TMA or TCA as appropriate\n\nControl and Monitor\nSoftware\n\nThe CMS provides the overall control and monitoring of the system.\nThe CMS can be considered in two halves, the TM/TC Front End and\nthe TTC Modem. The CMS provides the user with a suite of\npreparation tools for the creation and editing of TM and TC data\n(TM/TC Packets as well as TC CLTUs). Operationally it provides a\nremote and local mode. When in remote mode, the CCS controls the\nsystem and the local GUI can only be used to monitor data and status.\nIn local mode, the viewing and monitoring is augmented with the\ncapability to control the generation of data\n\nRemote Interfaces The SSBV CMS is designed to support different remote interfaces\ndepending on the needs of the customer. For this project the C&C\ninterface shall be supported\n\nOther functions The system includes a number of additional features:\n\u2022 Hardware based time stamping\n\u2022 Optional ITU compatible Bit Error Rate Tester (source and sink)\n\nTable 12.1 (continued)\n\n438 J. Eickhoff et al.\n\n\n\nF\nig\n.\n12\n\n.1\n2\n\nM\nai\nn\nT\nT\nC\n-C\nM\nS\nM\nM\nI\nov\n\ner\nvi\new\n\n.\n\u00a9\n\nSa\nte\nlli\nte\n\nSe\nrv\nic\nes\n\nB\nV\n\nan\nd\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt\n\n12 Stuttgart Mission Control Infrastructure 439\n\n\n\nF\nig\n.1\n\n2.\n13\n\nSy\nst\nem\n\nst\nat\nus\n,b\nas\neb\nan\nd\nun\n\nit\nst\nat\nus\n,I\nM\nB\nU\nst\nat\nus\n\nan\nd\nsw\n\nee\np\nco\nnt\nro\nl.\n\u00a9\nSa\nte\nlli\nte\nSe\nrv\nic\nes\n\nB\nV\nan\nd\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt\n\n440 J. Eickhoff et al.\n\n\n\n12.1.2.4 RF Up/Down-Converters\n\nThe TTC-IMBU converts between the CCSDS digital signal level from/to the\nSCOS mission operations system and CLTUs/CADUs modulated onto the inter-\nmediate frequency (IF) of 70 MHz.\n\nFor the up-conversion to the ground/space transmit frequency of 2.0835 GHz\nrespectively for the down-conversion of the downlink frequency of 2.2635 GHz to\nthe intermediate frequency the infrastructure is enhanced by two commercial off the\nshelf converters from WORK-MICROWAVE, Munich, Germany (Fig. 12.14).\n\nThe dedicated types are an SCU-S-70-50 for up-conversion respectively an\nSCD-S-70-50 for the down-conversion. For more details please refer to the com-\npany\u2019s web-page [105].\n\n12.1.3 The High Frequency Chain\n\nOn the track towards the antenna itself\u2014please also refer back to Fig. 12.1\u2014the\nnext unit is the TTC HF Unit 2 which includes filters and the High Power Amplifier\n(HPA). The unit was developed in the frame of a PhD thesis at the IRS, Stuttgart\n(Fig. 12.15).\n\nFig. 12.14 Frequency up and down-converter. \u00a9 IRS, University of Stuttgart\n\n12 Stuttgart Mission Control Infrastructure 441\n\n\n\n12.1.4 The Antenna System\n\nThe antenna system comprises the antenna itself, the antenna drive motors and\ncontrol electrics/electronics and the antenna control system. The parabolic antenna\n(Fig. 12.16) is suitable for broadband operation and was specifically designed for\nthe FLP TC uplink frequency of 2.0835 GHz, the FLP TM downlink frequency of\n2.2635 GHz and the frequency of 2.4 GHz for the science TM Data Downlink\nSystem (DDS).\n\nRight hand circular polarization (RHCP) is used for satellite platform control\nTT&C signals. Left hand circular polarization (LHCP) is applied for the downlink\nof payload data via the DDS. The antenna reflector is mounted on a stand providing\nan elevation and azimuth drive. It transmits with an EIRP of 32.3 dBW.\n\nThe antenna feed already separates two chains of telemetry signals\u2014the RHCP\nsignals of FLP platform housekeeping TM in the commercial S-band\u2014and the\nLHCP signals being science telemetry from the \u201cFlying Laptop\u201d specific Data\nDownlink System.\n\n\u2022 Telecommands for uplink are coming from the previously presented TTC HF\nunit 2.\n\n\u2022 Both the spacecraft TC and TM are filtered by the TTC HF unit 1 which for the\nTM downlink comprises an LNA and a filter and at the antenna end side it\ncomprises the diplexer.\n\n\u2022 For the LHCP science TM in amateur radio S-band in the case of the \u201cFlying\nLaptop\u201d, the corresponding DDS HF unit 1 comprises an LNA and a filter.\n\nFig. 12.15 TTC HF unit 2 with filters and HPA. \u00a9 IRS, University of Stuttgart\n\n442 J. Eickhoff et al.\n\n\n\nBoth TTC and DDS HF units 1 are integrated into the antenna stand and are\ndepicted in Fig. 12.17.\n\nThe antenna drives with their power electrics, drive motors, position sensors and\ncontrol electronics are shown in the Figs. 12.18 and 12.19 only for completeness to\nprovide an impression of the overall system.\n\nThe antenna drive control is performed by the already mentioned software\nsystem METEOR. Its Man-Machine Interface is depicted in Fig. 12.20. METEOR\nreceives the required antenna azimuth and elevation angle data over time from the\nflight dynamics infrastructure toolset which is described in more detail in Sect. 12.2.\n\nConcerning satellite contact using the IRS antenna station constraints must be\ntaken into account due to effects induced by some nearby buildings. Furthermore,\nground contact to IRS will be lost when the satellite passes near zenith and when it\npasses in the direction of the sun. The zenith loss is due to the limits of the antenna\ndrive angular velocity near zenith. The second limit is due to high noise levels\ncaused by the sunlight.\n\nFig. 12.16 IRS antenna. \u00a9 IRS, University of Stuttgart\n\n12 Stuttgart Mission Control Infrastructure 443\n\n\n\nFig. 12.17 TTC HF unit 1 (backside) and DDS HF unit 1 (frontside). \u00a9 IRS, University of\nStuttgart\n\nFig. 12.18 Antenna azimuth drive, position sensor, electronics and elevation/azimuth power\nelectrics. \u00a9 IRS, University of Stuttgart\n\n444 J. Eickhoff et al.\n\n\n\nFig. 12.19 Antenna elevation drive, position sensor and electronics. \u00a9 IRS, University of\nStuttgart\n\nFig. 12.20 Control software for the IRS antenna. \u00a9 IRS, University of Stuttgart\n\n12 Stuttgart Mission Control Infrastructure 445\n\n\n\n12.2 Flight Dynamics Infrastructure\n\nThe flight dynamics infrastructure (Fig. 12.21) serves for\n\n\u2022 to analyze the available orbit and position data of the satellite,\n\u2022 to therefrom generate position propagations for the upcoming orbits and\n\u2022 based on these orbit predictions to identify the data for Weilheim and Stuttgart\n\nground station passovers.\n\nFurthermore the orbit propagations serve as input for the mission planning\ninfrastructure for planning ground contact activities as well as for planning payload\noperations activities such as target imaging etc. This mission planning aspect is\nfurther detailed in Chap. 14.\n\nThe core of the orbit analysis and propagation is based on the commercial tool\nSystems Tool Kit (STK) [109]. The overall infrastructure manages diverse data\nimport formats and conversions, the control of STK functions for orbit propagation\nand output generation in the required file formats.\n\nAs stated above the core task of flight dynamics toolkit is to compute the actual\norbit data of the satellite. In the very early flight phases, IRS is supported by the\nDLR/GSOC flight dynamics team. Based on data from the launch supplier DLR\nwill perform the satellite contact establishment with the DLR antenna station and by\nfunctions of its antenna infrastructure it will track and deduce the satellite\u2019s position\nand trajectory data at initial passover. These data will be subsequently improved\n\nFlight Dynamics Infrastructure\n\nNORAD TLE\n\nOn-Board \nGPS Data\n\nLauncher \nOrbit Data\n\nWHM \nTracking \n\nData\n\nGPS Orbit \nProcessing\n\nDLR Flight \nDynamics\n\nMETEOR \nAntenna\nControl\n\nMOIS \nScheduler\n\nDLR WHM \nScheduling\n\nDLR \nAntenna\nControl\n\nAOS/LOS \nFile \n\nConverter\n\nOrbit File \nConverter\n\nAzimuth/El\nevation \n\nFile Conv.\n\nAOS/\nLOS XML\n\nCCSDS \nOPM\n\nTime, \nAz, El \n\nFDE\n\nOrbit\n\nOrbit\n\nAOS/LOS \nData\n\nOrbit \nData\n\nAz/El\nData\n\nSystems Toolkit\n\nOrbit \nPropagation\n\nbasedon \nSTK\n\nFig. 12.21 Flight dynamics infrastructure. \u00a9 IRS, University of Stuttgart\n\n446 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\n\n\nduring the following passovers and orbit data will be handed over to the IRS as\ninput to its own flight dynamics infrastructure to model the orbit in STK.\n\nAnother source of orbit information is becoming available in the timeframe of\ndays after launch. These are object tracking data from the North American\nAerospace Defense Command (NORAD). The NORAD orbit information is\nprovided in the form of so-called Two Line Elements (TLE). For a very brief\nintroduction to the TLE format see the annex Sect. 17.14 taken from [110] to [112].\nThe flight dynamics infrastructure provides an interface to import NORAD TLE\ndata of the satellite and these can be used as input for orbit computation in STK.\n\nThe final source of information are GPS position data in the satellite HK\ntelemetry after the onboard GPS of the satellite has been activated during\nCommissioning Phase. These will be available both live during passover, as well as\nplayback position data over the recent orbits. These GPS data are the most precise\ninformation and are used for the orbit computations during nominal satellite\noperations.\n\nThe output of the flight dynamics computation can be split into two types of\ndata:\n\n\u2022 The first type are parameters for control of an antenna and\n\u2022 the second type are scheduling data for planning antenna station requests or\n\nmission target visibilities for science payload operations.\n\nThe mission planning data comprise the Acquisition of Signal (AOS) time and\nLoss of Signal (LOS) times for each station passover.\n\nIn case of mission planning during the nominal spacecraft operations after the\nCommissioning Phase\u2014including payload operations\u2014the AOS/LOS data are\nhanded over to the MOIS mission planning infrastructure at IRS. More details on\nthe mission planning and the applied MOIS infrastructure are provided in Chap. 14.\n\nIn case of LEOP and Commissioning Phase as well as in emergency support\ncases the AOS and LOS parameters will be handed over to the antenna station team\nin Weilheim in one of the DLR prescribed data formats\u2014as far as they are not\nalready computed by DLR e.g. during LEOP phase. DLR uses these data for\ngenerating the overall allocation schedules of its diverse antennas. More informa-\ntion about the work process, antenna allocation scheduling etc. is provided in\nSect. 13.4.\n\nIn case of usage of the DLR station in Weilheim the antenna control data will be\nconverted to a CCSDS standard format\u2014the so-called Orbit Parameter Message\n(OPM)\u2014see [113] and is transmitted to DLR/GSOC.\n\nIn case of use of the IRS antenna station, the orbit information is directly\nconverted to antenna azimuth and elevation angle parameters and is handed over to\nthe METEOR antenna control software (Fig. 12.20).\n\n12 Stuttgart Mission Control Infrastructure 447\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_13\n\n\n12.3 Spacecraft Link Establishment Process\n\nIn order to establish a TM/TC radio link to the satellite from the IRS GS, the GS\nantenna is automatically directed to the expected satellite location at 5\u00b0 elevation in\ncase of North-South passover and at 10\u00b0 elevation in case of South-North pass-\novers. The latter is due to avoid campus wireless LANs interfering or disturbing\nsatellite carrier acquisition.\n\nAn unmodulated carrier wave (Continuous Wave Mode or CW-Mode) is\ntransmitted shortly before the satellite is expected to appear at this location and\ncarrier frequency sweeping will be induced to account for Doppler shift due to\nthe satellite motion towards the. During sweep the point will be reached where the\nreceiver on board will lock its PLL to the identified carrier. The onboard transmitter\nthen will be activated by the TTC_Controller in the OBSW and will submit its\ncarrier and idle frame TM signal back to the GS.\n\nOnce this signal is received at level of the RF-SCOE in the ground station and\nthe receiver is locked onto the signal, the CW-Mode is disabled in the RF-SCOE\nand idle frames are uplinked to the satellite. The full lock of the satellite receiver\ncan be determined on ground by interpreting the uplinked Command Link Control\nWords (CLCW) being present in every downlinked frame.\n\nIn such case for final bidirectional link verification a, a ping TC (PUS Service\n17) is sent to the satellite and ping TM should be received by the GS.\n\nDuring the entire satellite passover, the antenna pointing is continuously\nadjusted according to the predicted satellite position. No satellite tracking by means\nof ranging of the signal is performed. The IRS GCC relies on orbit data provided by\nthe launch supplier and DLR/GSOC for initial orbit injection and later by tracking\ndata provided online by NORAD and on satellite GPS HK-TM.\n\n12.4 Science Data Signal Chain\n\nOnboard the spacecraft the science data are transferred from the payload control\ncomputer to the downlink system. In case of the first FLP Generation 1 based\n\u201cFlying Laptop\u201d the payload controller PLOC was already introduced in Sect. 1.9\nand Chap. 9. It transfers the payload science TM to the so-called Data Downlink\nSystem (DDS).\n\nThe DDS system input from PLOC is a pushed synchronous data stream with a\nmaximum raw data rate of 10 Mbps. The data structure is defined by the PLOC\naccording to the type of payload. According to data type and rate the PLOC\noptionally can reduce the data rate to DDS by multiples of factor 2. Such a\nreduction improves the link budget.\n\nInside the DDS unit on board the raw onboard data stream from the payload\ncomputer is packed into CCSDS frames which are converted to CADUs being\nmodulated onto the carrier.\n\n448 J. Eickhoff et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_1\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_9\n\n\nThe science data downlink with the current DDS subsystem of the FLP\nGeneration 1 uses the amateur radio frequency band.\n\n\u2022 The center frequency is 2.408 GHz and\n\u2022 the bandwidth is <8 MHz\n\u2022 The waveform is 10 Mbps QPSK modulated and SRRC filtered (? = 0.4)\n\u2022 Transmitter Output power: max 1 W, typical 0.5 W\n\u2022 The polarization is left handed.\n\nAs already mentioned in the IRS antenna the signal split between downlinked\nS/C TM data and the science data postprocessing chain is performed by means of a\npolarization splitter. The right hand polarized signal is fed into the satellite TM\nchain and the left hand circular polarized signal is routed into the science data\ndownlink chain\u2014see Fig. 12.1.\n\nThe science data HF signal then passes through a filter and is amplified by means\nof a low noise amplifier in the DDS HF unit 1 (see Fig. 12.17). Thereafter it passes\nthrough the DDS HF unit 2 (see Fig. 12.22) where it is filtered again, is amplified\nand the signal gain is measured/monitored.\n\nFinally the signal it is down-converted in the DDS Frontend unit, is demodulated\nand is forwarded into the science packet processing in the \u201cDDS Protocol Unit\u201c\n(Fig. 12.23)\u2014again please also refer to Fig. 12.1. In the DDS Protocol Unit follows\nthe reconstruction of CADUs and the re-assembly of the CCSDS science data\nframes according to the following technical specifications:\n\nFig. 12.22 DDS HF unit 2 with filter, amplifier and signal quality monitoring \u00a9 IRS, University\nof Stuttgart\n\n12 Stuttgart Mission Control Infrastructure 449\n\n\n\n\u2022 Layer 1: CCSDS TM synchronization and channel coding:\n\n\u2013 No differential coding: Phase is disambiguation over ASM\n\u2013 CADUs length: 1279 octets including ASM for non-turbo-coded data\n\u2013 ASM = 0x1ACFFC1D\n\u2013 Reed-Solomon encoding: yes (255, 223 CCSDS standard with Berlekamp\n\ndual basis conversion)\n\u2013 Interleave factor: 5\n\u2013 Pseudo randomization: yes (CCSDS standard)\n\n\u2022 Layer 2: CCSDS TM data link:\n\n\u2013 Frame length: 1115 octets including header\n\u2013 Secondary header: no\n\u2013 Trailer: no\n\u2013 Number of virtual channels: 1\n\nAs output of the DDS Protocol Unit the reconstructed payload data are directly\ntransferred via Ethernet TCP to the Payload Data Storage server in the ground\nsegment. The DDS unit comprising down-converter and Protocol Unit is a devel-\nopment of IRS.\n\nSince the type of payload data are largely depending on the mission payloads,\nthey are not treated further in this platform FOM.\n\nFig. 12.23 DDS protocol unit \u00a9 IRS, University of Stuttgart\n\n450 J. Eickhoff et al.\n\n\n\nChapter 13\nStuttgart/DLR Infrastructure for LEOP\n\nPeter Willburger, Klaus Wiedemann, Rolf Kozlowski, Marcin Gnat,\nCiprian Furtuna, Jens Eickhoff and Nico Bucher\n\nP. Willburger (&) ? K. Wiedemann ? R. Kozlowski ? M. Gnat ? C. Furtuna\nDeutsches Raumfahrt Kontrollzentrum (GSOC), Oberpfaffenhofen, Germany\ne-mail: peter.willburger@dlr.de\n\nK. Wiedemann\ne-mail: klaus.wiedemann@dlr.de\n\nR. Kozlowski\ne-mail: rolf.kozlowski@dlr.de\n\nM. Gnat\ne-mail: marcin.gnat@dlr.de\n\nC. Furtuna\ne-mail: ciprian.furtuna@dlr.de\n\nN. Bucher\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: bucher@irs.uni-stuttgart.de\n\nJ. Eickhoff\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_13\n\n451\n\n\n\nAbstract The chapter explains the link between the Stuttgart Mission Control\nCenter and the DLR/GSOC antenna station in Weilheim, Germany, which the IRS\nis permitted to use for the Launch Phase and the Commissioning Phase of the first\nFLP-based spacecraft. The chapter is complementary to Chap. 12 and describes the\ntechnical details of the TC/TM routing from Stuttgart to Weilheim and the TM\nrouting backwards as well as the RF infrastructure and antenna in Weilheim. It also\ncovers the operational workflow between Stuttgart and Weilheim during these early\nflight phases of the satellite.\n\nKeywords Mission control infrastructure ? IRS-GSOC network bridge ? Space\nlink extension system ? RF signal chain ? DLR antenna station weilheim ? Passover\nscheduling ? LEOP phase ? Commissioning Phase\n\n13.1 Link Between IRS and the DLR Antenna Station\n\nFor commanding the \u201cFlying Laptop\u201d satellite from Stuttgart during LEOP and\nCommissioning Phase the IRS is supported by the German Space Agency \u201cDeutsches\nZentrum f\u00fcr Luft- und Raumfahrt\u201d (DLR). The IRS in Stuttgart is granted to use one\nof the 15 m S-band antennas of the DLR array in Weilheim, Germany for operating\nthe satellite, with the geodetic coordinates as listed in Table 13.1.\n\nTherefore an interface between the IRS mission control facilities in Stuttgart and\nthe DLR \u201cGerman Space Operations Center\u201d (GSOC) multi-mission node in\nOberpfaffenhofen, Germany, has been established to transmit real-time and offline\ndata. Figure 13.1 shows the real-time data (TM/TC) interface using a Space Link\nExtension (SLE) connection via a VPN tunnel, allowing IRS a secure connection to\n\nFig. 13.1 IRS\u2014GSOC network bridge. \u00a9 DLR/GSOC, \u00a9 IRS, University of Stuttgart\n\nTable 13.1 Weilheim 15 m antenna coordinates\n\nStation Latitude Longitude Altitude\n\nS67 47\u00b0 52\u2018 48,21452\u201c N 11\u00b0 05\u201c 07,15603\u201c E 663,942 m\n\nS69 47\u00b0 52\u2018 52,29358\u201c N 11\u00b0 05\u201c 01,09200\u201c E 663,937 m\n\n452 P. Willburger et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\nGSOC in Oberpfaffenhofen, and from there to the Weilheim antenna station (details\nsee Sect. 13.3.1).\n\nAs for the commanding of the satellite via the IRS own antenna station in\nStuttgart, the satellite command/control will be performed via the SCOS system.\nSome technical details however are different w.r.t. the command setup in Stuttgart:\n\nAs explained in Chap. 12 the SCOS input/output towards the RF-SCOE are\nTC/TM packets in the Stuttgart architecture. Transmission details on lower protocol\nlayers\u2014such as Virtual Channel (VC) selection\u2014are performed in Stuttgart via the\nRF-SCOE equipment.\n\nTo allow full command and telemetry control from the SCOS system (without\nthe RF-SCOE), in the setup with DLR the SCOS TC output is arranged on\nCommand Link Transmission Unit (CLTU) level. This allows to access also Frame\nand Segment settings by SCOS-2000\u2014such as VC parameters (please also refer to\nFigs. 2.6 and 2.7). The TM route from the antenna station back to SCOS is\nimplemented on Frame level.\n\n13.2 DLR Antenna Station Infrastructure\n\nThis section shall provide a brief overview on the key features of the DLR antenna\nstation infrastructure as far as relevant for this mission. Not all elements of Fig. 13.2\nwill be discussed in detail\u2014in particular not the antenna drive and electronics.\n\nIn the control room (see Fig. 13.3) all activities for the ground contact of the\nassigned satellites are performed. This includes:\n\n\u2022 Preparation of the antennas according to an overall acquisition schedule pre-\nsented further below,\n\n\u2022 health monitoring of the antennas,\n\u2022 monitoring of proper RF signal acquisition with the assigned satellites at time of\n\nacquisition,\n\u2022 monitoring of loss of signal (LOS) not earlier as predicted,\n\u2022 analysis of signal quality.\n\nThe satellite command/control is performed by the operators. For DLR owned or\nDLR operated satellites they are located for example in the GSOC control rooms in\nOberpfaffenhofen, Germany, or\u2014in case of the \u201cFlying Laptop\u201d satellite\u2014they are\nlocated in the IRS control room in Stuttgart. TC/TM signals which are exchanged\nbetween Stuttgart and Weilheim via the IRS\u2014GSOC network bridge (depicted in\nFig. 13.1) are RF-encoded/decoded in Weilheim via Cortex Command, Ranging\nand Telemetry Processors from Zodiac Data Systems [117] (see Fig. 13.4). The\nCortex processor performs the following functions (only those relevant for the FLP\nmissions being listed):\n\n\u2022 CCSDS TC processing up to COP-1 transfer layer\n\u2022 Digital signal modulation to 70 MHz intermediate frequency\n\n13 Stuttgart/DLR Infrastructure for LEOP 453\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nFig. 13.2 Link to DLR /GSOC antenna station from IRS Control Center. \u00a9 DLR/GSOC, \u00a9 IRS,\nUniversity of Stuttgart\n\n454 P. Willburger et al.\n\n\n\nFig. 13.3 DLR antenna control room in Weilhei. \u00a9 DLR/GSOC, \u00a9 IRS, University of Stuttgart\n\nFig. 13.4 Cortex\u2014CCSDS based digital/RF\u2013RF/digital conversion processor. \u00a9 Zodiac Data\nSystems (from [117])\n\n13 Stuttgart/DLR Infrastructure for LEOP 455\n\n\n\nFig. 13.5 Cortex room in Weilheim. \u00a9 DLR/GSOC and IRS, University of Stuttgart\n\nFig. 13.6 One of the 15 m\nantennas of the DLR array in\nWeilheim. \u00a9 DLR/GSOC and\nIRS, University of Stuttgart\n\n456 P. Willburger et al.\n\n\n\n\u2022 Telemetry processing for direct PCM and PCM with sub-carrier scenarios\n\u2022 Demodulation and decoding\n\u2022 Ranging\u2014which is not applied for FLP\n\u2022 Doppler estimation\n\u2022 Spread spectrum processing for TC, TM (and ranging)\n\u2022 Signal quality monitoring\n\nThe Cortex processors are cross-allocatable to the diverse antennas in Weilheim\nand are placed in a dedicated server room in Weilheim (Fig. 13.5).\n\nThe TC RF upconversion from intermediate frequency and the high power\namplification both are performed by equipment directly mounted within the antenna\nfoundation (Fig. 13.6) to be as close as possible to the antenna dish itself. The same\napplies for the RF receiver and the TM downconversion to intermediate frequency.\n\n13.3 GSOC Systems Supporting the FLP Mission\n\nThis section gives a brief overview on the main systems provided by GSOC to\nsupport the FLP-based \u201cFlying Laptop\u201d mission. Besides the Network Integration\nSystem (NIS) to interface network wise IRS with GSOC a short description of the\nAutomated File Distribution (AFD) and Space Link Extension (SLE) system can be\nfound in the following subsections.\n\n13.3.1 Space Link Extension (SLE) System\n\nThe data link to support the IRS mission is realized through the CCSDS Space Link\nExtension (SLE) protocol. An SLE connection is used to transfer Telemetry and\nTelecommands (TM/TC) between Stuttgart and DLR/Weilheim as shown in\nFig. 13.1. The SCOS server in Stuttgart is connected to the SLE user gateway\u2014the\nSLE Switchboard (SSB)\u2014which is a GSOC maintained LINUX PC with the SSB\nsoftware installed. Besides the SLE user gateway functionality, the SSB computer\nat the IRS features several applications by which the entire TM/TC chain can be\ntested locally on the computer without any network connection.\n\nOn the other side of the link the SLE provider gateway \u201cWeilheim SLE Provider\nto Cortex\u201d (WSP-C) is installed.\n\nThe SLE protocol is a standard defined by CCSDS. Relevant recommended\nstandard documents (so called blue books) are\n\n\u2022 the SLE Cross Support Reference Model [98],\n\u2022 the TM Return All Frames (RAF) service specification [99],\n\u2022 the TC forward CLTU service specification [100],\n\u2022 the Internet Protocol for Transfer Services [101].\n\n13 Stuttgart/DLR Infrastructure for LEOP 457\n\n\n\n13.3.1.1 SLE Switchboard (SSB) System\n\nThe SLE Switchboard (SSB) is a front-end computer installed in the mission\ncontrol center to support the interface with various types of ground station equip-\nment. The SSB supports acquisition of telemetry and sending of telecommands.\n\nThe SSB offers interfaces to support various MCS. For the FLP mission the\nfollowing interfaces are used:\n\n\u2022 SLE protocol for TM/TC to SLE Provider (WSP-C)\n\u2022 Network Control and Telemetry Routing System protocol (NCTRS) for TM/TC\n\nto SCOS\n\nThe primary functions of the SLE Switchboard (SSB) software are (cf. also\nFig. 13.7):\n\n\u2022 Reception of telemetry streams from multiple service instances (i.e. data can\noriginate from different SLE providers)\n\n\u2022 Transmission of telecommand streams to FCLTU service instances (one com-\nmand stream per service instance)\n\n\u2022 Multiplexing and delivery of telemetry streams to multiple SCOS instances\n\u2022 Reception of different telecommand streams from different SCOS instances\n\nFig. 13.7 SSB system context. \u00a9 DLR\n\n458 P. Willburger et al.\n\n\n\n\u2022 NCTRS protocol adaptation\n\u2022 Support for transparent ground station hand over (i.e. capability to switch\n\ntelemetry and telecommand streams)\n\u2022 Logging capabilities\n\nFor a better understanding of the primary intention and operation of the SLE\nSwitchboard software the diagram of Fig. 13.7 shows the general processing\ncontext:\n\nThe SSB provides the capability to operate multiple independent service\ninstances, multiple independent SCOS ports and the possibility to change the\nrouting of the data streams flowing between the SCOS systems and the ground\nstations.\n\nThe SSB can support the connection of up to two ground stations for TC and up\nto eight for TM. Each SSB instance allows up to four SCOS systems to receive TM\ndata but only one SCOS to connect to the TC port. SSB performs ground station\nhandover through its routing functionality (see Fig. 13.8).\n\n13.3.1.2 SLE Provider (WSP-C)\n\nThe default TM/TC interface of Weilheim ground station is the standardized\nCCSDS SLE (Space Link Extension) protocol. The ground station takes the role of\nSLE Provider (please also refer to Fig. 13.7), being able to provide the TM from the\nbaseband equipment to the control center and forward the TC from the control\ncenter to the equipment.\n\nThe WSP-C (Weilheim SLE Provider) is the SLE Provider used by DLR. It\nimplements a Cortex adapter being able to receive the TM from and to send the TC\nto the Cortex.\n\nTM from ground stations can be received at the control center (IRS) and can be\nforwarded to the spacecraft Mission Control System (SCOS-2000). TCs from the\ncontrol center\u2019s spacecraft mission control system can only be forwarded to one of the\nground stations at a time. The SLE service provider data flow is shown in Fig. 13.9.\n\nFig. 13.8 SSB data flow. \u00a9 DLR\n\nCortex format\n\nTMCortex SLE Provider TM\n\nSLE protocol\n\nSSB\nTCTC\n\nFig. 13.9 SLE provider data flow (WSP-C). \u00a9 DLR\n\n13 Stuttgart/DLR Infrastructure for LEOP 459\n\n\n\nThe SLE protocol implemented in the WSP-C offers the following\nfunctionalities:\n\n\u2022 TM (3 modes are available):\n\n\u2013 Online complete: all TM is delivered. If the network gets congested, TMs are\nqueued and are sent later.\n\n\u2013 Online timely: TM is delivered in real-time. If the network gets congested,\nsome TM frames are discarded at the provider side to maintain the real-time\nquality of the link.\n\n\u2022 Filtering:\n\n\u2013 TM can be filtered by Virtual Channel (VC)\n\n\u2022 TC:\n\n\u2013 All TCs are received in sequence by the SLE provider. TCs can be con-\nfigured to be sent only at a dedicated time-tag to the TT&C equipment.\n\n13.3.2 Automated File Distribution System\n\nThe Automated File Distribution System (AFD) is a file distribution system\navailable for satellite projects (see Fig. 13.10). The AFD is developed as open\nsource by the German Weather Service (Deutscher Wetterdienst).\n\nIn case of the FLP project with IRS the AFD system will be used for the transfer\nof orbit information (TLE) from the IRS to the ground station Weilheim and in\nopposite direction providing the tracking information (angle data from the antenna)\nto IRS for further orbit estimations.\n\nThe AFD system is located in a multi-mission environment, and so each project\ndefines its own file transfer matrix which acts as an input for the AFD configuration.\nThe matrix defines what kind of files shall be transferred where and how often. As\nsoon as the configuration is activated, the AFD system starts the monitoring of\ndesired directories and performs transfers fully autonomously. The monitoring of its\nactivity is available at GSOC (Fig. 13.11). The respective check and alerting in case\nof issues belongs to tasks of the systems operator in the Systems Room. A detailed\ndescription of the AFD can be found at the website http://www.dwd.de/AFD.\n\nThe AFD tool has the following features:\n\n\u2022 The AFD can send/retrieve any type of file, regardless of contents and the name\nof the file.\n\n\u2022 Only the files are being distributed, no other additional information is sent with\nthe file.\n\n\u2022 The AFD has a very sophisticated and compact X11 interface to monitor and\ncontrol the distribution of files. It has the ability to do extensive logging of all\nactivities, even down to tracing each individual FTP/SMTP command.\n\n460 P. Willburger et al.\n\nhttp://www.dwd.de/AFD\n\n\n\u2022 Files can be submitted to receivers where no AFD is installed.\n\u2022 There can be more than one distributing process submitting files to a single host.\n\nThis has the advantage that when a large file is currently under transfer, other\nfiles are not kept pending in transmission.\n\n\u2022 Where net capacity is limited, it is possible to distribute files by priority.\n\u2022 If the transfer gets interrupted, AFD can append files. So that data that has\n\nalready been transmitted will not be resent again.\n\nFig. 13.10 Monitoring interface of the Automated File Distribution System. \u00a9 DLR\n\nFig. 13.11 AFD configuration in GSOC network. \u00a9 DLR\n\n13 Stuttgart/DLR Infrastructure for LEOP 461\n\n\n\n13.4 Operations Workflow\n\nThis section describes the operations workflow for the mission support provided by\nGSOC to IRS\u2014comprising:\n\n\u2022 Scheduling Process\n\u2022 LEOP Phase\n\u2022 Commissioning Phase and\n\u2022 Routine Phase\n\nas explained in the following sub-sections.\n\n13.4.1 Scheduling Process\n\nThe integral part of the DLR/GSOC operations is the GDS scheduling office, which\ntakes care of planning and coordination of spacecraft contacts via DLR or external\nstations. The tasks of scheduling are:\n\n\u2022 Receive ground station support requests from projects and coordinate allocation\nto the organization\u2019s own and to external ground stations.\n\n\u2022 Perform contact planning according to mission requirements applying mission\npriority rules.\n\n\u2022 Publish the weekly contact plan (schedule) for all MCC missions and resources.\n\u2022 Provide support and propose solutions in case of conflicts.\n\u2022 The scheduling process involves usage of a specific interface, which is described\n\nin the GSOC GDS Scheduling ICD [116].\n\nThe schedule interface allows XML based information exchange, which is in\nmany cases the preferred choice. However in the case of the very short mission\nsupport period for the \u201cFlying Laptop\u201d and for the sake of simplicity, the\nscheduling interface between IRS and GSOC is realized based on text form\nschedule information provided via e-mail. An example of such a scheduling request\nis provided in Table 13.2.\n\nThe overall schedule generation process is depicted in Fig. 13.12.\n\nTable 13.2 DLR/GSOC spacecraft specific schedule\n\nDATE SAT STN REVN MAX ELE AOS LOS OPRN\n\n15 03 22 FLP S67 00000 72.0 23:57:14 00:06:04 D/L ONLY\n\n15 03 23 FLP S67 00000 13.6 01:30:03 01:38:22 D/L ONLY\n\n15 03 23 FLP S67 00000 11.9 12:09:42 12:17:50\n\n15 03 23 FLP S69 00000 31.9 23:25:41 23:35:36\n\n462 P. Willburger et al.\n\n\n\nKey elements of the schedule generation process are:\n\n\u2022 Analysis of project needs and mission event files based on current orbit\ninformation\n\n\u2022 Selection of specific passes over a specific ground station\n\u2022 Provision of the contact request to GSOC, according to the timeline (1 week\n\nbefore).\n\u2022 In case of conflicts, support the Scheduling Office in resolution.\n\u2022 Thursday before the scheduled week, the schedule information is published.\n\u2022 In case of planning a LEOP phase typically the Sequence of Events (SoE) is\n\ngenerated by the customer (IRS), which includes LEOP passes and serves also\nas an input to the Scheduling Office. In such a case no extra schedule request is\nrequired.\n\nBesides the spacecraft specific schedules DLR/GSOC generates overall sched-\nules for all managed spacecraft and all GSOC controlled antennas\u2014the station in\nWeilheim can be found in the example of Table 13.3 according to its ID \u201cWHM\u201d.\n\nFig. 13.12 Scheduling timeline. \u00a9 DLR\n\nTable 13.3 DLR/GSOC overall schedule\n\n13 Stuttgart/DLR Infrastructure for LEOP 463\n\n\n\n13.4.2 LEOP Phase\n\nDuring LEOP phase DLR will build up RF ground contact with the spacecraft and\nthe TC/TM operations will be performed by IRS from Stuttgart. LEOP operations\nwill follow the Sequence of Events (SoE) being provided by IRS.\n\nBefore Launch, IRS will establish a telephone connection to Weilheim for\noperator synchronization. As soon as the RF contact between antenna station and\nspacecraft is established, the IRS operators take over commanding the spacecraft\nwhich will comprise (see also Sect. 11.6):\n\n\u2022 Reading live telemetry\n\u2022 Downloading stored HK-TM\n\u2022 Monitoring spacecraft health and proper mode transitions based on received\n\ntelemetry\n\u2022 Activation GPS as soon as possible for improvement of orbit data information\n\u2022 Failure management if required\n\nAfter the LEOP phase is completed successfully the operations are directly\ntransferring to the Commissioning Phase.\n\n13.4.3 Commissioning Phase\n\nDuring the Commissioning Phase the IRS will provide satellite tracking requests to\nDLR according to the process described in Sect. 13.4.1 and the GDS\nScheduling ICD [116].\n\nAt the beginning, the orbit information and the resulting orbital events, which\ncomprise the basis for schedule request, will be provided by GSOC Flight\nDynamics. The Flight Dynamics team calculates the spacecraft orbit based initially\non the injection vector provided by the Launch Provider, and later based on tracking\n(angle) data from the Weilheim antenna as well as from NORAD TLEs. As soon as\non-board GPS data is available, the IRS will provide its own orbit estimation and\nfrom there onwards schedule requests will be based on that information.\n\nBefore each ground contact, IRS will establish a telephone connection to\nWeilheim for pre-pass briefing. As soon as the RF contact between antenna station\nand spacecraft is established, the IRS operators take over commanding the space-\ncraft which will comprise:\n\n\u2022 Reading live telemetry\n\u2022 Downloading stored HK-TM\n\u2022 Consecutive activation of on-board sub-systems during Commissioning Phase\n\n(see also Sects. 11.6 and 11.7)\n\u2022 Commanding of spacecraft to higher operational modes\n\u2022 Commanding of timelines for the platform\n\u2022 Failure management if required\n\n464 P. Willburger et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\nTowards the end of the Commissioning Phase also payloads are taken into\noperations. At this stage spacecraft platform commanding is still performed via the\nDLR ground station while for payload science data downlink already the IRS\nground station will be used.\n\nIn the final stage also spacecraft platform operations (commanding and house-\nkeeping telemetry acquisition) will be taken over by the Stuttgart ground station at\nIRS premises.\n\n13.4.4 Routine Phase\n\nThe routine phase is performed with the IRS antenna in Stuttgart. GSOC with the\nWeilheim antenna is supporting emergency cases and performs maintenance for the\ninvolved GSOC equipment. For that monthly proficiency passes will be scheduled\nand performed.\n\n13 Stuttgart/DLR Infrastructure for LEOP 465\n\n\n\nChapter 14\nEarth Observation Mission Planning\n\nKai-S\u00f6ren Klemich, Gianluca Cerrone and Wolfgang Heinen\n\nAbstract The chapter explains the mission planning for an FLP-based satellite\nusing SCOS and the Manufacturing and Operations Information System (MOIS).\nMission planning considers the orbital events like begin/end of eclipse, begin/end\nof ground station visibility and begin/end of observation target visibility.\n\nKeywords The Manufacturing and Operations Information System (MOIS) ?\nOperations procedure modeling ? MOIS scheduler ? Orbit events ? Mission plan-\nning workflow\n\nK.-S. Klemich (&)\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: klemich@irs.uni-stuttgart.de\n\nG. Cerrone ? W. Heinen\nRHEA System S.A., Wavre, Belgium\ne-mail: g.cerrone@rheagroup.com\n\nW. Heinen\ne-mail: w.heinen@rheagroup.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_14\n\n467\n\n\n\n14.1 MOIS Infrastructure\n\nAs already mentioned in Sect. 12.1.1 the IRS uses the \u201cThe Manufacturing and\nOperations Information System\u201d (MOIS) for supporting operations tasks that are\nnot directly covered by SCOS. These are\n\n\u2022 the generation of Flight Procedures to command complex sequences from\nground during spacecraft visibility\n\n\u2022 and to generate flight schedules for combined platform and payload control to\nmake the satellite perform its scientific tasks in orbit.\n\nMOIS is an integrated set of tools for Spacecraft and ground segment testing,\nOperations preparation and Satellite Assembly, Integration and Test\u2014developed by\nRHEA System S.A. in Belgium. The tools are used together with SCOS-2000 to\ncreate, execute, plan and export test and Flight Procedures (see Fig. 14.1).\n\nThe MOIS Flowcharter supports creating, editing and display of procedures\nthrough a flow chart display. It is used in parallel with MOIS Writer to define\nprocedures. Figures 14.2 and 14.3 depict a procedure example in Flowcharter and\nWriter.\n\nFig. 14.1 The MOIS Infrastructure. \u00a9 RHEA System S.A.\n\n468 K.-S. Klemich et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\nWriter is the MOIS infrastructure tool used for creating, modifying and dis-\nplaying the operations procedures and timelines required for a space mission.\nConsistency with the chosen TM/TC database according to the required Mission\nControl System (SCOS in this case) is guaranteed.\n\nMOIS Validator provides execution control for a predefined command procedure,\nindependent to whether the procedure is connected to a test harness, a simulator or to\nthe real spacecraft via the SCOS-2000 control system. Although called the MOIS\n\nFig. 14.2 Example procedure in Flowcharter. \u00a9 IRS, University of Stuttgart and RHEA\nSystem S.A.\n\n14 Earth Observation Mission Planning 469\n\n\n\nProcedure Validator this application is also the user interface for manual and\nsemi-automatic execution of procedures. The operator can choose whether to exe-\ncute one step at a time, or he can predefine break points at which execution should\nhalt. A halted execution may be resumed from the same point, alternatively a dif-\nferent point to resume from can be selected. The status and results of each step or\nstatement are shown in real-time on the procedure table display (e.g. telemetry\nvalues and command verification statuses). In addition there are several other\n\nFig. 14.3 Example procedure in Writer with further details. \u00a9 IRS, University of Stuttgart and\nRHEA System S.A.\n\n470 K.-S. Klemich et al.\n\n\n\nwindows and dialogue boxes for displaying monitoring information or interacting\nwith the data. A screenshot of the MOIS Validator was already depicted in Fig. 12.4.\n\nThe integrated man-machine interface provided by Validator enables to verify\nwhether or not the procedure is executed successfully. Such results can be recorded\nat both the level of the procedure (including nested procedures) and of a particular\nstep or statement. The validation results are updated by the user according to the\nactivity (steps and/or substeps) that are performed (e.g. in case of expected TM\nvalues the user manually clears off the related step by a tick-mark ?). Validation\ncan also be automatically linked to the execution status that identifies whether a step\nhas been successfully executed (independently of the TM value). Validation\ninformation, including comments, can be entered on the display and submitted back\nto the procedure databases to keep a record of procedure execution during space-\ncraft validation tests and simulations. Additional functionality includes a stopwatch\nfeature to time the execution of the procedure or particular step sequences.\n\nThe MOIS Scheduler is a Mission Planning System for satellite operations and\nstation scheduling. Scheduler integrates full resources and constraints (e.g. flight\ndynamics events, ground station availability) modeling capability into the proce-\ndure development and execution environments. In \u2018preparation\u2019 mode, this permits\nthe generation and analysis of conflict-free schedules with time-tagged commands\nfor on-board execution. A schedule can also be executed by linking Scheduler to the\nMOIS Executor and running procedures, viewing the overall execution status and\nresults in a Gantt chart, or by using Validator to examine a specific procedure.\nA screen-shot of the MOIS Scheduler is provided in Fig. 14.4.\n\nFinished \nProcedures\n\nRunning \nProcedures\n\nCurrent \nTime\n\nPending \nProcedures\n\nFig. 14.4 MOIS Scheduler. \u00a9 RHEA System S.A.\n\n14 Earth Observation Mission Planning 471\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\nThe MOIS Supervisor controls and monitors the MOIS Executors. It controls the\nCORBA connections to the SCOS-2000 Control System. The MOIS Supervisor is\nused to couple MOIS with SCOS for the automated execution of MOIS procedures.\n\nFinally MOIS Library provides configuration control for all mission data stored\nand created within MOIS.\n\nMOIS Publisher allows to produce and print documents of procedure listings,\nalong with additional configuration control information such as issue identification\nand a record of updates.\n\n14.2 Scheduler Resource Model\n\nA resource model of the satellite system is defined in the MOIS Scheduler (see\nSect. 14.3). The structure of the model is described in [119]. The detailed imple-\nmentation of the model is beyond the scope of this manual, only some general\nconcepts are explained. The implementation for the Flying Laptop mission can be\nfound in [122].\n\nThe model is defined to allow automatic checks of a MOIS created schedule for\nconflicts, e.g. against exceeding of onboard resources (onboard battery charge status\nor other) or against procedures being incompatible when being executed in parallel.\nFor this purpose status and capacity resources can be defined in the model.\n\nStatus resources have several states, which are changed by Flight Procedures\nbeing planned or by orbital events. Examples are the visibility of a ground station\nwith the states IN_VISIBILITY and OUT_OF_VISIBILITY and the spacecraft\nmode with the states Safe Mode, Idle Mode, etc.\n\nCapacity resources have a scalar capacity, which is influenced by the state of\nstatus resources. For example, a payload mode in which earth observation is per-\nformed decreases the available on-board memory, whereas a mode in which pay-\nload data is downlinked and memory is freed, increases it.\n\nFor the Flying Laptop mission, status resources are defined for the system and\nTTC subsystem modes, which are changed by MDE-type Flight Procedures (see\nSect. 15.2.1.1). In addition so-called USAGE status resources are defined for all\ndevices and subsystems, indicating whether a device or subsystem is being used by\na procedure for something other than a mode change, for example for downlink of a\npicture taken by the STR. Furthermore, boolean status resources are defined for\nmodeling ground station contact times and eclipse phases.\n\nCapacity resources are defined for the battery State-of-Charge and on-board\nmemory.\n\n472 K.-S. Klemich et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\n14.3 Mission Planning Infrastructure and Work Flow\n\nThe mission planning for FLP spacecraft missions is based primarily on the MOIS\nScheduler (see Sect. 14.1), similar to the approach described in [155]. In general,\ntwo kinds of Flight Procedures will be commonly executed during the mission:\n\n\u2022 Procedures related to the satellite bus, e.g. test or commissioning procedures,\ncalibrations, maintenance procedures etc., which are defined by the spacecraft\noperators.\n\n\u2022 Procedures for payload operations, e.g. earth observation campaigns, which are\nmostly requested and defined by external partner organizations.\n\nThe work flow for mission operations regarding the Flight Procedures is shown\nin Fig. 14.5. Both kinds of procedures are prepared in MOIS Writer and\nFlowcharter (step 1), based on input from the Mission Information Base (MIB). The\nprocedures are then tested and validated on EM /FM hardware or the spacecraft\nsimulator using the MOIS Validator (step 2). The procedures can then be imported\ninto the MIB as command sequences. Finally, they can be imported to the MOIS\nScheduler for mission planning (step 3).\n\nImporting the tested procedures manually into the schedule is mainly used for\nthe S/C platform related procedures, for which the parameters are defined by the\nspacecraft operators at IRS. Payload operations however, especially for Earth\nobservation, can be requested by external partners via an online form. The neces-\nsary data like observation time, coordinates of the observation target and instrument\nsettings are entered and automatically converted into so-called CRFs (Command\nRequest File), which contain the necessary procedure information, including\ncommands and command parameters. These files are then imported into the MOIS\nScheduler (see step 3 in Fig. 14.5).For mission planning, orbital events like ground\nstation contact times and eclipse phases need to be included in the schedule. This\ntask is covered by the IRS flight dynamics infrastructure which was already cited in\nSect. 12.2 and depicted in Fig. 12.21 and which is based on the Systems Tool Kit\n(STK) software developed by AGI [109]. In STK, orbital events and ground station\naccess times can be computed and converted to the Flight Dynamic Event\n(FDE) format. These files are subsequently imported into the MOIS Scheduler to\ncomplete the mission plan (see also step 3 in Fig. 14.5).\n\nSun/Eclipse phase information, ground station visibility start/end or target vis-\nibility start/end information are pairs of orbital events imported into the MOIS\n\n14 Earth Observation Mission Planning 473\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\nscheduler. Therefore all are included in the same FDE input file. An example for an\nobservation of Capetown\u2014South Africa\u2014and ground station visibilities for IRS\nStuttgart is provided to explain the process in more detail\u2014see also Figs. 14.6 and\n14.7.\n\nFig. 14.5 Operations workflow. \u00a9 IRS, University of Stuttgart and RHEA System S.A.\n\n474 K.-S. Klemich et al.\n\n\n\nFig. 14.6 Planning example\u20142D-view\u2014with IRS and target visibilities and sun/eclipse. \u00a9\nAirbus DS\n\nFig. 14.7 Example of orbit over Europe and Capetown as target. \u00a9 Airbus DS\n\n14 Earth Observation Mission Planning 475\n\n\n\nThe resulting Flight Dynamics Events for this scenario are listed in the text file\nbelow:\n\nThe entry data are in detail:\n\n\u2022 The Event ID\n\u2022 A count field: This field is ignored in the example. The FDE file contains a \u201c1\u201d\n\u2022 A field which has to contain a \u201cP\u201d\n\u2022 Time of event\n\u2022 A field which has to contain a \u201c0\u201d\n\u2022 A field with explanatory text\n\nOnce the orbital events and the procedures are imported into the Scheduler, the\nactual plan can be rearranged in order to create a conflict free schedule.\nFurthermore, resources like power or available on-board memory are also modeled\nin the Scheduler and are tracked over time to avoid that procedures are planned for\nwhich the resources are insufficient. Conflicts in the plan are detected by the\nScheduler and can be resolved manually (see Sect. 14.2)\n\nWhen a mission plan for the upcoming days is finished, the necessary command\nstack files for the execution of the procedures are generated by the Scheduler. These\ncontain time-tagged command sequences only, which are executed when a prede-\nfined on-board time is reached. These stack files are imported to the SCOS auto\nstack application (step 4 in Fig. 14.5), from which they are uplinked to the\nspacecraft during the next ground station pass.\n\nProcedures which are to be executed during a ground station pass, mainly\ncontain \u201cnormal\u201d commands which are to be executed immediately upon reception\non-board and they in most cases do not contain time-tagged commands.\n\nThese procedures are not included in the files exported from the Scheduler. This\nis because the Scheduler exclusively supports stack file exports for procedures with\n\n476 K.-S. Klemich et al.\n\n\n\nF\nig\n.\n14\n\n.8\nC\nor\nre\nsp\non\n\ndi\nng\n\nM\nO\nIS\n\nfli\ngh\n\nt\ndy\n\nna\nm\nic\ns\nsc\nhe\ndu\n\nle\n.\n\u00a9\n\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt\nan\nd\nR\nH\nE\nA\n\nSy\nst\nem\n\nS.\nA\n.\n\n14 Earth Observation Mission Planning 477\n\n\n\npure time-tagged commands. Procedures containing non-time-tagged commands\nare imported into the MIB as command sequences and are loaded on the SCOS\nmanual stack. See Chap. 15 for details.\n\nThe events are used by the MOIS Scheduler to change the state of the corre-\nsponding resources (see Sect. 14.2).\n\n\u2022 The resource \u201cIRS GS Pass\u201d is set to \u201cIN_VISIBILITY\u201d at IRSA.\n\u2022 At IRSL it is reset to \u201cOUT_OF_VISIBILITY\u201d.\n\nThe resources are depicted in the plan\u2014see example in Fig. 14.8. Further\nresources like power or ACS attitude are not included in this simple example.\n\nThe schedule shows the ground station visibilities and the target visibility for the\napplied example scenario. The steps from the schedule to the exact spacecraft\ntelecommand sequence shall be explained in more detail.\n\nFig. 14.9 Example procedure for execution at start of GS visibility (flow). \u00a9 IRS, University of\nStuttgart and RHEA System S.A.\n\nFig. 14.10 Example procedure for execution at end of GS visibility (flow). \u00a9 IRS, University of\nStuttgart and RHEA System S.A.\n\n478 K.-S. Klemich et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\n\n\nF\nig\n.1\n\n4.\n11\n\nSc\nhe\ndu\n\nle\nde\nta\nil\nfo\nr\nG\nS\npa\nss\nov\n\ner\n.\n\u00a9\n\nIR\nS,\n\nU\nni\nve\nrs\nity\n\nof\nSt\nut\ntg\nar\nt\nan\nd\nR\nH\nE\nA\n\nSy\nst\nem\n\nS.\nA\n.\n\n14 Earth Observation Mission Planning 479\n\n\n\nThe key technique is, that start or end of any MOIS Scheduler activity (e.g.\nground station contact) can be connected to a MOIS procedure comprising\nspacecraft commands or sequences of commands.\n\nCommand flows can be defined, which are to be executed with an optional time\noffset at the start or at the end of a scheduled activity, e.g. a ground station contact\u2014\nsee Figs. 14.9 and 14.10 as examples. Detailing of these flows again is performed\nwith MOIS Writer\u2014see Fig. 14.3 and the Flight Procedure examples in Chap. 15.\n\nImporting the released MIB into SCOS permits to use the sequence command\nstacks as Scheduler time-tagged version from the mission planning or as direct\ncommands.\n\nA final example of a detailed scheduled GS passover with\n\n\u2022 planned sequences on system level SOR \u201cSystem Idle to Downlink\u201d\u2014see\nFig. 14.9\n\n\u2022 and SOR \u201cSystem Downlink to Idle\u201d\u2014Fig. 14.10\n\u2022 and with according delta times for sequence execution\n\ncan be found in Fig. 14.11.\n\n480 K.-S. Klemich et al.\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\n\n\nChapter 15\nFlight Procedures\n\nKai-S\u00f6ren Klemich and Jens Eickhoff\n\nAbstract This chapter describes how flight procedures for an FLP-based satellite\nare defined\u2014again based on the ground infrastructure subsystems SCOS and\nMOIS. Procedure types and the naming conventions are provided as well as a\ndetailed example. A table of the predefined flight procedures for the satellite plat-\nform including a short description is provided in the book\u2019s annexes.\n\nKeywords FLP flight procedures ? Flight procedure types ? Naming conventions ?\nFlight procedure example\n\nThe FLP Flight Procedures (FP) are defined using the MOIS toolkit which already\nwas introduced in Chap. 14. Besides a more detailed explanation on the Flight\nProcedure workflow, a Flight Procedure example and an overview on the Flight\nProcedure catalog are provided\u2014together with some definition of terms.\n\nK.-S. Klemich (&)\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: klemich@irs.uni-stuttgart.de\n\nJ. Eickhoff\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_15\n\n481\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\n\n\n15.1 Definitions for FLP Flight Procedures\n\n\u2022 Flight Procedure (FP) An (FP) for short\u2014is implemented in MOIS and\nthereafter is exported into the SCOS Mission Information Database (MIB) as a\ncommand sequence. It is to be executed\u2014i.e. planned and triggered\u2014by a\nspacecraft operator (see also Chap. 14). FPs do not include complex on-board\nactivities which are triggered by a single command, as for example mode\nchanges of low level objects (like device handlers). Due to restrictions in the\nMOIS/SCOS infrastructure FPs cannot call sub-procedures.\n\n\u2022 Formal Parameter Formal parameters are used in FPs to allow adaptation of\ncommand parameters in a procedure each time it is applied. An example would\nbe the coordinates for a target pointing mode change FP. These coordinates are\ndifferent for each observed target. Formal parameters of a procedure can be\ncompared to arguments of a function in programming.\n\n\u2022 Statement A statement in a MOIS procedure is defined as follows:\n\u201cEach ? step usually contains one or more (but sometimes zero) statements. A\nstatement is the basic information object in a procedure, and could be for\nexample a telemetry or telecommand, or a comment. All other procedure\nstructure is defined to organise or group statements into a meaningful order.\u201d1\n\n\u2022 Step A step in a MOIS procedure is defined as follows:\n\u201cA procedure may contain one or more steps. The concept of a step is used to\nhelp break up a procedure into small manageable sections, enabling each\nmacro-process to be broken up into micro-processes, at a level higher than the\nindividual telecommand or telemetry. A step is used to group one or\nmore ? statement objects, such as telecommands and telemetry or comments,\nas a single entity (see footnote 1).\u201d\n\n15.2 Types of Procedures\n\nThere exist several different types of procedures for the FLP, which can be dis-\ntinguished by their content or by their usage scenario. These types are explained\nbelow.\n\n15.2.1 Types of Procedures by Content\n\nThis section groups the procedure types by their content.\n\n1Cited from the MOIS online help.\n\n482 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\n\n\n15.2.1.1 High-Level Mode Change Procedures (MDE)\n\nMode change procedures are implemented in dedicated PUS Services in the\nFLP OBSW. The general idea is that a mode of a high level on-board object (system\nand subsystems) is defined in a table consisting of several child objects. Examples\nfor such mode tables are all the subsystem mode change Tables 4.5, 5.8, 6.12, 7.16\nand 8.6.\n\nIf a mode change of the subsystem is commanded, the modes of the subsystem\u2019s\ncontroller\u2019s child objects are changed accordingly by the OBSW in the order they\nappear in the table. To perform a more complex mode change, several of these table\nbased mode changes can be performed in a sequence. For the entire system and\nsubsystems, these tables and sequences can be defined freely. The only restriction is\na maximum number of tables, table entries, sequences, etc. to avoid an overrun in\nthe OBSW. As the changes are performed in such a way that the next step is only\nperformed if the previous step was executed successfully, the mode change pro-\ncedures offer inherent success checks.\n\nTop level (system) mode changes, e.g. from system safe mode to idle mode,\nconsist of different subsystem level MDE procedures, e.g. from ACS Safe Mode to\nACS Idle Mode. The lowest level changes triggered by MDE procedures are mode\nchanges of controllers and device handlers.\n\nOnly System and TTC subsystem mode changes shall be commanded by the\noperators during nominal operations. Thus all these nominal (non-contingency)\nprocedures are of type MDE. They are actually implemented in MOIS as FLP\nFlight Procedures to be used during operations and to allow System mode changes\nand TTC subsystem mode changes.\n\nThe FPs of this type influence the MODE_SYSTEM or MODE_TTC_SUBSYS\nstatus resources in the Mission Planning System (MPS)\u2014see Sect. 14.2.\n\n15.2.1.2 General Procedures (PRC)\n\nA General Procedure (PRC) can be any kind of operational procedure which\nimplies more than a single Service 2 device command. Also if a procedure is merely\na mode change of a single object and\u2014where applicable\u2014its children, it is an MDE\nprocedure. The PRCs may be triggered by single commands to any on-board object\nor by several commands which are defined in a MOIS sequence and are uplinked as\nnormal or time-tagged commands.\n\nIn general, there may be more than one way to execute a procedure. Most\nprocedures should be executable by single low level commands, which can be\ncombined in a MOIS procedure. If the procedures are long, are used frequently\nand/or are easy to automate, hard coded macro commands may be introduced into\nthe OBSW to simplify the execution of these procedures. Thus to achieve the same\ngoal, there may be standard high level procedures and procedures consisting of\nmany low level commands for contingency situations.\n\n15 Flight Procedures 483\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_4\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_6\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_7\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_8\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\n\n\nAs PRCs are generally FPs, they may consist of high and low level commands as\nwell as low level object mode changes (e.g. if a device is to be commissioned in a\nsystem mode in which it is usually not switched on). However, a PRC may not\ntrigger MDEs (these should be defined separately) and a PRC may not call other\nPRCs.\n\nThe FPs of this type influence the USAGE status resources in the Mission\nPlanning System (MPS)\u2014see Sect. 14.2.\n\n15.2.1.3 Contingency Procedures (CTG)\n\nContingency Procedures are procedures for contingency cases which are not han-\ndled in the FDIR or which can be triggered from ground for troubleshooting pur-\nposes. They are PRCs for non-nominal cases.\n\nA trained operator may use CTG procedures or single commands in contingency\nsituations, which trigger lower level mode changes.\n\n15.2.2 Types of Procedures by Usage Scenario\n\nThe FPs furthermore can be grouped by their usage scenario as detailed below.\n\n15.2.2.1 Procedures Executed Used During Ground Contact\n\nProcedures used during ground station contact are FPs, which are only used when\nlive TM and TC contact is established between Mission Control Center and the\nsatellite. The procedures are implemented in such a way that they can be used with\nthe manual stack in SCOS-2000. During the execution of these procedures, com-\nmands are sent manually and the received reply TM from the spacecraft is available\nfor the operators. These procedures may therefore contain TM checks, which are to\nbe executed by the operator before the next command is submitted. They may also\ncontain IF conditions, for which the following rules apply:\n\n\u2022 There must be one and only one branch in the procedure flowchart, which\ncontains currently executed steps, i.e. commands and TM checks.\n\n\u2022 Each IF-condition must be configured in such a way that both of its two\nbranches lead to another step of the main branch without any steps in between.\nThis may be the following step or any other step further downstream the current\nIF-condition step. For an example of such a semi-linear flow see Fig. 15.2.\n\n484 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\n\n\nThis feature can be used for example to attach TM checks to an IF-condition and\nto proceed with the procedure normally when successful or jump to the end of the\nprocedure otherwise2\u2014without performing any steps in between.\n\nThis is necessary to assure that the command sequence which is derived from the\nprocedure and is available in SCOS stays \u201clinear\u201d so that for example no commands\nhave to be repeated for an unknown amount of times and that the order of com-\nmands in the sequence is correct in any case. Thus the only action that may become\nnecessary once the sequence is loaded in the manual stack, is to delete a certain\namount of commands from the stack. This is required in order to avoid errors\ncaused by manipulating stacks manually.\n\nThis kind of procedure may also contain execution or release of time-tagged\ncommands and interlocks if useful. For example to safely deactivate a device\u2014\nwhich is used during the procedure execution\u2014in case where the link is lost\nunexpectedly. The FP may include time-tagged commands being executed just after\nthe ground contact and thus can deactivate the device after ground contact end or in\ncase of an unexpected contact loss. Such a procedure may not contain any loops.\n\nIn general, procedures in which one of the following types of action is per-\nformed, should be performed during ground contact wherever possible in order to\nallow live TM checks:\n\n\u2022 Activating of devices for the first time during commissioning, which may be\ncritical\n\n\u2022 Switching to previously unused system modes for the first time during\ncommissioning\n\n\u2022 Setting configuration parameters of controllers, on-board TM storage, TC\nscheduling, timers, etc., which should be checked by TM checks immediately\n\n\u2022 Performing any kind of contingency measures like reboots, resets, changes to\nthe redundant side, etc.\n\n\u2022 Payload data takes which may be interesting during target pointing to a ground\nstation.\n\n15.2.2.2 Procedures Executed Without Ground Contact\n\nIt is possible to define procedures which are executed when no live TM/TC link is\navailable. As there is no possibility to check TM on-board, these procedures may\nnot contain any TM checks, branches or loops. For these procedures the execution\nbased auto stack is used, which implies that all commands must have an execution\ntime tag assigned. These procedures will be executed autonomously on board and\nmust be uplinked to the satellite during a ground station contact beforehand.\n\n2Where potentially necessary final configurations may be set.\n\n15 Flight Procedures 485\n\n\n\nProcedures in which one of the following types of action is performed, should be\navailable as procedures without ground station contact:\n\n\u2022 Performing all sorts of payload data takes and calibrations which need to be\nexecutable at all times\n\n\u2022 Performing mode changes when they have been tested before\n\u2022 Preparing devices for operations, e.g. heating them up, configuring them.\n\n15.3 Flight Procedure Naming Convention\n\nAs mentioned, FPs implemented in MOIS are then are exported into text files for\nimport into the MIB as command sequences (see also Chap. 14). Their naming\nconvention therefore follows the general guidelines in the MIB (see also Sect. 16.2).\nA FP name is 8 characters long and follow the pattern XYTGPzzz, where\n\n\u2022 X is the subsystem, for example \u201cA\u201d for ACS, \u201cT\u201d for TCS, etc.\n\u2022 Y is the \u201csubsubsystem\u201d, for example \u201cF\u201d for FOG or \u201cH\u201d for heaters, etc.\n\u2022 T is the type of DB entry and is set to \u201cQ\u201d for all sequences, i.e. for all FPs.\n\u2022 G indicates whether this procedure is used during ground station contact (1) or\n\nwithout ground station contact (0), i.e. the type of the procedure by usage\nscenario.\n\n\u2022 P indicates whether this procedure is an MDE (0), a PRC (1\u20135) or a CTG (6\u20139),\ni.e. the type of procedure by content, see Sect. 15.2.1.\n\n\u2022 zzz is a counter used to identify single sequences.\n\nFor more details please also refer to the FLP Procedure Guidelines [121]. As an\nexample, the name of a nominal FP of the RWL which is to be executed during\nground contact could be \u201cARQ11005\u201d.\n\n15.4 Flight Procedure Example\n\nThe following example depicts the Flight Procedure for the initial STR start-up and\ncheckout of the Star Tracker during the Commissioning Phase of the FLP platform\nin orbit. The FP is provided with\n\n\u2022 its descriptive header (Fig. 15.1)\n\u2022 the flow block-diagram as overview (Fig. 15.2)\n\u2022 and the detailed FP body with the diverse steps and commands (Fig. 15.3).\n\n486 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_14\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16\n\n\nFig. 15.1 FP header example. \u00a9 IRS, University of Stuttgart\n\n15 Flight Procedures 487\n\n\n\nThe detailed TCs of the FP body steps shall not be explained here. The interested\nreader should be able to understand the example procedure using the \u201cObjectives\u201d\ndescription on the procedure header and by comparing the FP Body step by step\nwith the provided FP flow of Fig. 15.2.\n\nFig. 15.2 FP flowchart example. \u00a9 IRS, University of Stuttgart\n\n488 K.-S. Klemich and J. Eickhoff\n\n\n\nFig. 15.3 FP body with command sequence example. \u00a9 IRS, University of Stuttgart\n\n15 Flight Procedures 489\n\n\n\nFig. 15.3 (continued)\n\n490 K.-S. Klemich and J. Eickhoff\n\n\n\nFig. 15.3 (continued)\n\n15 Flight Procedures 491\n\n\n\n15.5 List of FLP Flight Procedures\n\nThe list of FPs which are defined for the FLP Generation 1 plus some specific\nNominal Observation Mode FPs for the \u201cFlying Laptop\u201d mission is provided in\nannex Sect. 17.4. The FPs are grouped according to the corresponding\nsystem/subsystem and subsequently by equipment.\n\nDuring the flight phase further FPs can be defined. For other FLP based missions\nwith modified ACS/AOCS, other payloads and functional changes (e.g. solar array\ndrive), the FP list and definitions may need adaptations.\n\nFig. 15.3 (continued)\n\n492 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_17\n\n\nChapter 16\nFLP Mission Information Database\n\nKai-S\u00f6ren Klemich and Jens Eickhoff\n\nAbstract The chapter provides an introductory overview on the Mission\nInformation Database which is the underlying foundation of the Mission Control\nSystem. The definition of telecommand packets, telemetry packets, their parameters\nand more details are covered. The lists of FLP telecommand packets, telemetry\npackets and Event telemetry packets are provided in the book\u2019s annexes.\n\nKeywords Mission information database ? Definition of telecommand packets ?\nDefinition of telemetry packets ? TC/TM parameters and formats ? TC sequences ?\nTM displays\n\nK.-S. Klemich (&)\nInstitute of Space Systems, University of Stuttgart, Stuttgart, Germany\ne-mail: klemich@irs.uni-stuttgart.de\n\nJ. Eickhoff\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_16\n\n493\n\n\n\n16.1 Introduction\n\nThe FLP supports commanding of the spacecraft via the ECSS Packet Utilization\nStandard [37]. The telecommand (TC) and telemetry (TM) packets and the\nparameters included in the packets as well as the data types, their calibrations and\ndecalibrations are defined in the underlying database of the Mission Control System\n(MCS).\n\nFor the FLP the Mission Control System preferably is a ESA/ESOC SCOS-2000\nsystem (see [85\u201391]) or any of its successor systems like Terma CCS5 (see [92, 93])\nor later a European Ground Systems Common Core (EGS-CC) based system [94].\n\nThe database with all the mentioned definitions is called Mission Information\nBase (MIB). The first FLP mission \u201cFlying Laptop\u201d uses a SCOS system. The MIB\nis setup as a MySQL database. The interface between the database and SCOS is\ndescribed in the SCOS-2000 Database Import ICD [86]. The definition of all rel-\nevant TC/TM packets, the information of TC and TM parameters and many further\nfeatures like SCOS alphanumeric or graphical displays etc. can be made easiest by\nusing a dedicated MIB editor. Multiple such SCOS MIB editors are available from\ndiverse missions as the EEMCS Database Application [95] used in the ESA mis-\nsions CryoSat and GOCE or the SCOS-2000 Database Editing Subsystem [96] used\nfor the Integral mission.\n\nIn the first FLP mission \u201cFlying Laptop\u201d at the University of Stuttgart the\nmySQL MIB database content is exported to text files, which are then imported into\nSCOS-2000 and the MOIS tool suite (see Sect. 12.1.1) for operational use.\n\nIn this section, the contents of the MIB and the naming conventions for the FLP\nare described. As the MIB is defined by a SCOS-2000 ICD, many concepts are\ncorrelated to specific SCOS-2000 features. As several of these features are not used\nby the FLP mission, only the used MIB tables are discussed here.\n\n16.2 General Concepts\n\nSome concepts which are important to understand are introduced here.\n\nParameters\nA parameter in the MIB is a variable with a fixed data type (see Sect. 16.7), which\ncan be found in the telemetry (TM parameter) or in a telecommand (TC parameter).\nTM packets and TCs can contain zero or more parameters. Parameters have a type\n(integer, float etc.).\n\nCalibration/Decalibration\nParameters can be calibrated (TM) or decalibrated (TC). For TM parameters, cal-\nibration means that the value of a parameter is not displayed as the actual raw value\nfound in the TM packet, but as an \u201cengineering value\u201d derived from the raw data\nthrough a computational conversion.\n\n494 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\n\n\nSimilarly, decalibration for TC parameters means that an engineering value can\nbe entered when submitting a TC and the corresponding raw value is automatically\ncalculated by SCOS-2000.\n\nCalibration and decalibration can in general be numerical, e.g. by converting a\nraw integer value to a float value according to a given formula, or can be textual,\ne.g. by converting the integer \u201c0\u201d to the string \u201cOff\u201d and \u201c1\u201d to the string \u201cOn\u201d. For\nthe FLP numerical calibrations are rarely used, as all numerical parameters are\nhandled already in engineering values on board the spacecraft, i.e. in SI units.\nTherefore, most numerical TM parameters are downlinked as engineering values\nalready. In these cases, a numerical calibration is only used to display the correct\nunit of the values on the SCOS-2000 displays.\n\nCommand Sequences\nCommand sequences can consist of commands or other sequences which are\nexecuted (submitted to the spacecraft) by the MCS in the specified order under\ncertain conditions. They can also include so-called formal parameters, which can be\nused as input arguments for the sequence and their values can be assigned to e.g.\nTC parameters.\n\nTM Packets\nTM parameters are found in TM packets. There are two types of packets, fixed and\nvariable packets. Fixed packets always have the same structure, while variable\npackets contain fields defining the amount of further following fields. Variable\npackets are necessary for some PUS defined services, e.g. to report existing\nhousekeeping report definitions (see Sect. 2.4.3). However, for the FLP mainly\nfixed packets are used, especially for housekeeping TM.\n\nDisplays\nIn SCOS-2000 telemetry parameters can be displayed in different ways. TM\nparameters in fixed packets are displayed by the TM Desktop application (see [88]).\nFor this application, the displays are defined in the MIB. The following types of\ndisplays exist (see also Figs. 12.2 and 12.3):\n\n\u2022 Alphanumeric displays displaying up to 64 parameter names and their (cali-\nbrated) values\n\n\u2022 Graphical displays displaying a graph of one or several parameters as a function\nof the time\n\n\u2022 Scrolling displays, displaying a line of up to five parameters, which is scrolled\ndown as more and more packets containing these parameters are received.\n\nTM parameters from variable packets can only be displayed using the VPD\n(Variable Packet Display) application (see [89]).\n\nTC Acknowledge\nDepending on the command flags of a TC it will be acknowledged by the OBSW\nback to ground. In the MIB, commands can be associated to different verification\nstages, which are checked and displayed by the SCOS-2000 command history.\nWhen the expected success messages (see Sect. 2.4.1) have been received, the\n\n16 FLP Mission Information Database 495\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_12\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\ncommand is considered to have been successful and is marked green. If an\nacknowledge failure message is received, the command is marked red (see [90]).\n\nLimit Checks\nThe values of TM parameters are automatically checked by SCOS-2000. If certain\nlimits which are defined in the MIB are violated, the COS ground monitoring will\ndisplay these parameter values in highlighted color. The Out Of Limits Display\napplication (see [91]) is used to get an overview of the parameters which are out of\nlimits.\n\nSuch ground limits are defined in the MCS and ground monitoring must not to\nbe confused with parameter limit checks on board being cyclically performed by the\nOBSW (on-board monitoring). Depending on the parameter the ground limits can\nbe defined more or less constrained than the flight limits on board. Not for all\nparameters that are checked on board additional ground limits must be defined.\n\nMIB entry format\nThere exists a general eight character name string format, which is used to identify\nall sorts of MIB entries, e.g. TC parameters, TCs, TM parameters etc.\n\nThe general format code is \u201cXYZaaaaa\u201d, where\n\n\u2022 X is a character specifying the subsystem the entry belongs to, for example\nACS, TCS, etc. The possible characters for the subsystems are provided in\nTable 16.1.\n\n\u2022 Y is a character specifying the \u201csubsubsystem\u201d, which can be a device (for\nexample FOG, MICS, PCDU, etc.), a certain software instance (FDIR, OBSW)\nor the subsystem level. The possible characters are also provided in Table 16.1.\n\n\u2022 Z is the type of DB entry, for example a command parameter, a command, a TM\nparameter, a TC, a user defined constant, etc. Options are listed in Table 16.2.\n\n\u2022 aaaaa is used to identify dedicated instances of the DB entries, for example a\ndedicated command or a parameter. The exact format is defined separately for\neach type of entry.\n\nThe possible system/subsystem (X/Y) character combinations for the FLP are\nlisted in Table 16.1.\n\nThe diverse entities in SCOS (TM parameters, TC parameters, etc.) are distin-\nguished by the third character (see Table 16.2):\n\nExample:\n\n\u2022 ARTMCR02 is a TM parameter of the ACS subsystem. In particular a parameter\nof reaction wheel number 2.\n\n496 K.-S. Klemich and J. Eickhoff\n\n\n\nTable 16.1 SCOS entry ranges by subsystem\n\nSubsystem Character ID Range\n\nACS A 10\u201319\n\nFOG AF 10\n\nGPS AG 11\n\nMGM AM 12\n\nMGT AQ 13\n\nRW AR 14\n\nSTR AS 15\n\nSuS AU 16\n\nSubsystem AY 18\u201319\n\nCDH D 20\u201329\n\nCCSDS-Board DC 20\n\nI/O-Board DI 21\n\nMemory DM 22\u201323\n\nOBC DO 24\u201325\n\nOBSW DS 26\u201327\n\nSubsystem DY 28\u201329\n\nPL L 30\u201339\n\nPLOC LR 35\u201337\n\nSubsystem LY 38\u201339\n\nPSS P 40\u201349\n\nBattery PB 40\n\nPCDU PP 41\u201347\n\nSolar Panels PS 48\n\nSubsystem PY 49\n\nTCS T 50\u201359\n\nHeater TH 50\u201351\n\nSensors TS 52\u201353\n\nSubsystem TY 58\u201359\n\nTTC X 60\u201369\n\nTTC N XN 60\u201361\n\nTTC R XR 62\u201363\n\nSubsystem XY 68\u201369\n\nSatellite System Y 70\u201379\n\nFDIR YF 70\u201373\n\nSystem Manager YM 74\u201375\n\nOn-Board Queue (Scheduler) YS 76\n\nTime Managing YT 77\n\nSystem YY 78\u201379\n\n16 FLP Mission Information Database 497\n\n\n\n16.3 Telecommands and TC Sequence Tables\n\nTelecommands generally consist of a packet and a data field header, the actual\ncommand data, containing zero or more command parameters, and a CRC field at\nthe end (see Sect. 2.2). The basic definition of a TC is done in the CCF table\n(Command Characteristics File) in SCOS. In this table, the commands are defined\nwith a name (see Sect. 16.2), a description, their APID (see Sect. 2.3), their PUS\nService type and subtype (see Sect. 2.4) and other basic information, which is used\nto build the TC packet and data field headers.\n\nTC parameters, which make up the actual command data, are defined in the CPC\ntable (Command Parameter Characteristics). They are identified by a name, com-\nprise a description, a format (see Sect. 16.7), and possibly a default value and a\ndecalibration (see Sect. 16.2).\n\nThe CDF table (Command Details File) is used to define which TC parameters\nappear in which TC packet at which position. The table contains the name of the\ncommand, the name of the TC parameter, its location within the TC and possibly an\nassociated value.\n\nThe TC parameter decalibrations are defined in two tables for each type of\ndecalibration. For the numerical decalibration these are the CCA (Parameter\nCalibration Curve File) and CCS (Calibration Curve Set File) files, for textual\ndecalibration, which are also called \u201calias definitions\u201d, these are the PAF\n(Parameter Alias File) and PAS (Parameter Alias Set) tables.\n\nTelecommand reception and execution on board can be verified by acknowledge\nTM or by TM parameter values. For the FLP, only the acknowledge packets are\nused for this purpose. The CVS table (Verification Stages File) contains the defi-\nnitions of different verification stages according to the different verification stages\n\nTable 16.2 Options for the type of DB entries\n\nemaNtrohSyrtnEfoepyT\n\nTretemaraPMT\n\nValid Flag TM Parameter V\n\nTM Parameter Numerical Calibration N\n\nTM Parameter Textual Calibration X\n\nTC (Packet) C\n\nTC Parameter P\n\nTC Parameter Numerical Decalibration I\n\nTC Parameter Textual Decalibration Z\n\nTC Parameter Range Set R\n\nTC Sequence Q\n\nAlphanumerical Display A\n\nGraphical Display G\n\nScrolling Display S\n\n498 K.-S. Klemich and J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nof the acknowledge packets defined in [35]. The CVP table (Command Verification\nProfiles) contains entries for each verification stage of each TC, which is to be\nchecked.\n\nSequences of TCs are also defined as part of the MIB. FLP Flight Procedures\nwhich are to be executed without ground station contact are defined in MOIS and\nare imported to the MIB as sequences (see also Chap. 15). The general charac-\nteristics of the sequences like their name, description, number of elements are\ndefined in the CSF table (Command Sequence File), the single TCs or sequences\nwhich are part of the sequence are defined in the CSS table (Command Sequence\nSet) and the TC parameters within these TCs are defined in the SDF table\n(Sequence Details File). Formal parameters of the sequences are defined in the CSP\ntable (Command Sequence Parameter File).\n\nFurthermore, there are tables defining the detailed structure of the TC headers,\nnamely the TCP, PCPC and PCDF tables. Within these tables the headers defined in\nSect. 2.2 are defined once and used for each TC.\n\n16.4 TM Packet Definitions and Identification\n\nThere exist two kinds of TM packets, namely fixed and variable packets. Fixed\npackets are uniquely identified on ground by the \u201cSCOS-2000 Packet ID\u201d (SPID).\nVariable packets are identified by the SPID and a \u201cTM Packet Structure Definition\u201d\n(TPSD). Both IDs are defined to be identical for a given packet for the FLP.\n\nTM packet names have a 12 character format.\n\nPacket Naming by SPID\nThe SCOS-2000 Packet ID (SPID) is used as the main identifier for TM packets. It\nis a 4\u20135 digit decimal number, in which\n\nTable 16.3 SPID first digit versus Packet Type\n\nPacket Type SPID 1st\ndigit\n\nSrv. 6 (Memory), Srv. 15 (TM Storage), Srv. 17 (Ping), Srv. 200\u2013202\n(Mode/Health)\n\nNone\n\nSrv. 1 (Acknowledge) 1\n\nSrv. 2 (Device Commanding) 2\n\nSrv. 3 (Housekeeping) 3\n\nSrv. 12 (Monitoring) 4\n\nSrv. 5 (Event Reporting) 5\n\nSrv. 5 (Event Reporting) 6\n\n7\n\nSrv 8. (Function), Srv 9 (Time) 8\n\n9\n\n16 FLP Mission Information Database 499\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\n\u2022 the 1st digit (or the lack of it) indicates the type of packet\u2014see Table 16.3,\n\u2022 the following 2 digits indicate the subsystem and subsubsystem, as defined in\n\nthe \u201cID Range\u201d column of Table 16.1\n\n\u2013 exception: Event TM packets may have any digits here.\n\nThe following 2 digits are used as a counter.\n\nExamples:\n\n\u2022 4935: Srv (6,136) PSS Memory Dump\n\u2022 12603: Srv (1,3) Execution Started Success\n\nNote that the ID range (SPID range) given in Table 16.1 in decimal values is\nidentical to the 1st byte of the any parameter ID in hexadecimal values in the same\nsubsystem/assembly/device. This is due to the fact that the parameter ID will be\ninterpreted in hexadecimal by the OBSW (see Sect. 16.6) and that the SPID will\nmostly be used on ground as a decimal value.With a given SPID, the parameters\ncontained in a TM packet can be extracted and displayed by SCOS-2000.\n\nPacket Naming by PCAT\nSCOS TM packets also have a name with the format according to the packet\ncategory:\n\nThe definitions by packet category following the convention in Table 16.4 is in\nprinciple a further detailing of the specifications in Table 16.3.\n\nExample:\n\n\u2022 PPHK4201swi2\n(PCDU switch status 2)\nPCDU HK TM Srv. (3,25), SPID 34201\n\nThe SPID\u2014which is SCOS specific\u2014is however not included explicitly in the\nTM packet which is transmitted from spacecraft to ground. So the exact type of a\nreceived packet must be identified on ground by other means.\n\n500 K.-S. Klemich and J. Eickhoff\n\n\n\nThe following IDs are 209 used, which are part of the packet headers or data\nfields:\n\n\u2022 APID in the TM Source Packet Header\n\u2022 Service Type and Subtype in the Data Field Header\n\u2022 0\u20132 additional packet identification fields (PI1, PI2) in the TM Source Data\n\nField\n\nIf the APID and the service type and subtype are not sufficient for identification,\nthe additional identification fields must be used. Their presence and locations are\ndefined in the PIC table for a given service type and subtype. It is therefore not\npossible to identify packets of the same subservice by different means. The addi-\ntional identification fields are used for all services, for which many different packets\nof the same type exist, most importantly for housekeeping and event TM.\n\nService (3,25) housekeeping TM packets as defined in [34] for example, com-\nprise a so-called Structure ID (SID) identifying the packet on ground together with\nservice type, subtype and APID (see also Fig. 2.7). From these values contained in\nan incoming TM packet, the SPID of the packet can be derived by SCOS-2000. The\nPI1 field is used for the SID value; the PI2 value is not used for service 3 packets.\nThe SID consists of the last four digits (unsigned integer in decimal) of the SPID\n(see above), which are also part of the packet name. In the example above, the SID\nof the packet named PPHK4201swi2 is 4201.\n\nSimilar to the SIDs, event reports are identified by Report IDs (RID) as defined\nin [34] as the PI1 field of the TM packet. Again, the RID is equal to the last four\ndigits of the packet\u2019s SPID. Note that for the FLP, instead of RID the term \u201cEvent\nID\u201d is preferred.\n\nTable 16.4 TM Packet Category definitions\n\nPacket Category Code (ZZ) Srv. Subsrv.\n\nAcknowledge Success AK 1 1, 3, 5, 7\n\nAcknowledge Failure AF 1 2, 4, 6,~8\n\nDirect TM DT 2 135\n\nRaw TM RD 2 128,134\n\nHousekeeping HK 3 25\n\nDiagnostics DG 3 26\n\nEvent EV 5 all\n\nMemory Dump MD 6 6,136\n\nMemory Check MC 6 10\n\nFunction, Mode/Health FC 8, 200\u2013202 all\n\nTime TI 9 all\n\nMonitoring Report MO 12 12\n\nTM Storage Information SI 15 6\n\nTest Service (Ping) TE 17 2\n\n16 FLP Mission Information Database 501\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\nNote however that due to the OBSW Event reporting mechanism, the RID is not\nsufficient to identify an Event TM packet. It is possible that the same Event is\ngenerated by different on-board objects, because they share a similar functionality.\nFor example mode change events can be generated by a multiplicity of objects.\nTherefore, the object-ID of the object generating the event is used as the PI2 field of\nthe event packets to distinguish between events with the same RID but from dif-\nferent on-board objects.\n\n16.5 TM Parameter and Displays Tables\n\nThe TM parameters are defined in the MIB in the PCF table (Parameter\nCharacteristics File). This table contains the name, description, ID, format, cali-\nbration and further information on the parameter.\n\nFor downlink to the ground, TM parameters are integrated into TM packets. It is\npossible that a dedicated parameter appears in more than one TM packet and also\nthat within one packet several instances of the same parameter sampled at different\ntimes can be present. TM packets are defined with their name, ID and size in the\nTPCF table (Telemetry Packet Characteristics File). In the PID table (Packet\nIdentification File, not to be confused with the parameter ID also abbreviated PID)\ntheir type, subtype, description and additional identification fields are defined.\n\nThe location of the parameters within fixed packets are defined in the PLF table\n(Parameter Location File). The parameter locations within variable packets are\ngiven in the VPD (Variable Packet Definition File). The location and size of\nadditional identification fields present in different kinds of TM packets identified by\ntheir type/subtype are defined in the PIC table (Packet Identification Criteria File).\n\nParameters are automatically checked by SCOS-2000 if they are within a pre-\ndefined range, otherwise warnings are issued. These limits and their associated\nchecks are defined in the OCP (Out Of Limits Definition File) and OCF (Out Of\nLimits Checks File) respectively.\n\nThe parameters are displayed on one of the three already mentioned kinds of\ndisplays, i.e. alphanumerical displays (AND) showing the newest available values\nof up to 64 parameters as numbers or text, graphical displays (GRD) showing one\nor more graphs of the values of certain parameters as a function of time and\nscrolling displays (SCD) showing a single row of up to five parameters scrolling\ndown with time. For each of these display types, there is one table defining the\ngeneral attributes of the display (name, type, number of graphs, etc.) and one table\ndefining the parameters to be displayed and their locations. For the AND, these\ntables are DPF (Alphanumeric Display Proforma File) and DPC (Alphanumeric\nDisplay Proforma Definition File), for the GRD, these tables are GPF (Graphic\nDisplay Proforma File) and GPC (Graphic Display Proforma Definition File) and\nfor the SCD, these tables are SPF (Scrolling Display Proforma File) and SPC\n(Scrolling Display Proforma Definition File).\n\n502 K.-S. Klemich and J. Eickhoff\n\n\n\nTelemetry parameters can also be calibrated textually or numerically. The\ngeneral attributes of textual calibrations are defined in the TXF table (Text Strings\nCalibration Curve File) and the actual calibration mapping is given in the TXP table\n(Text Strings Calibration Curve Definition File). Similarly for numerical calibra-\ntion, the tables CAF (Calibration Curve File) and CAP (Calibration Curve\nDefinition File) are used. It is also possible to use a polynomial to calibrate a TM\nparameter, defined in the MCF table (Polynomial Calibration Curve Definitions).\n\n16.6 TM Parameter Identification\n\nIn the MIB, there are different kinds of TM parameters defined in the PCF table.\nThe most important ones are the parameters which are referred to as datapool\nvariables in terms of the OBSW, as defined in Sect. 3.2.2. These parameters are\nperiodically written into the on-board datapool if the handler of the associated\nobject is in Normal mode (see Sect. 3.2.2). In the FLP MIB, they are marked with\nan additional field in the PCF table. These parameters are defined in [34, 35] to be\nthe \u201clowest level of elementary data item on board\u201d. They are uniquely defined by a\nparameter number (#) for on-board identification. This parameter number is defined\nin the PCF table of the MIB as the parameter ID (PID). Examples for this kind of\nparameters include housekeeping TM and sensor values, as attitude quaternions,\ntemperatures, etc.\n\nLess important TM parameters defined in the MIB are those device TM\nparameters which are not frequently updated in the datapool and are not used on\nboard. These parameters are not needed by any on-board process and cannot be\ndownlinked by Service 3. Instead, they can be downlinked via Service 2 using raw\nor direct commanding to the devices, to assemblies and controllers (see Sect. 2.4.2)\nor via Services 6 (see Sect. 2.4.6) and via Service 8 (see Sect. 2.4.7). Examples for\nthis kind of parameters are the PCDU operating CPU ID, version information of\nsoftware used. Also, raw TM parameters downlinked fall in this category.\n\nFinally, there are TM parameters in the MIB which are necessary to define TM\npackets of all sorts, as for example acknowledge TM error codes, length parameters,\nevent packets parameters etc. These parameters are not used on board, but are\nnecessary to keep in the MIB for packet parsing and display purposes.\n\n\u2022 As the parameter ID is also used in the datapool of the OBSW, it is defined\nbytewise and not as a decimal number. The interpretation is necessary, because\nin the OBSW datapool all parameters are defined as arrays with an identifier, the\nso-called \u201cDatapool Access ID\u201d, pointing to the start of the array. However,\nparameters can only be defined as scalar values, not as arrays, in the MIB. Note\nthat these arrays in the OBSW can have the length 1, thus allowing scalar\nparameters. Therefore, the parameter ID consists of the Datapool Access ID and\nan index to identify the position within an array.\n\n16 FLP Mission Information Database 503\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_3\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_2\n\n\n\u2022 The parameter#/ID consists of 4 bytes:\n\n\u2013 Table 16.1 shows the first byte of the parameter ID for the different sub-\nsystems and devices in hexadecimal values.\n\n\u2013 The second byte can be used in each subsystem to define\nwhich of the single instances the parameter belongs to,\nif more than one is present e.g. for redundancy reasons,\nor to distinguish between raw and engineering parameters.\n\n\u2013 The third byte is used as an actual counter to distinguish different arrays.\n\u2013 The fourth byte gives the index of the array starting from 0x00.\n\nThe first three bytes are combined to the Datapool Access ID.\nNote that TM parameters (as well as TM packets, displays etc.) are not always\n\nassociated to the devices they were acquired in by their name (see Sect. 16.2). For\nexample in the PCDU parameters of the battery, the solar panels, the SuS and some\ntemperature sensors are measured. However, these parameters\u2014in their calibrated\nversion as present in the datapool\u2014are associated by their name and ID to the\nsubsystems by which they are used primarily, i.e. the battery system, the solar panel\nsystem, the SuS system and the TCS respectively.\n\nRaw parameters however, which are part of raw packets and which are directly\ndownlinked from a device and which are not calibrated before downlink, are always\nassociated to the device they were acquired in, as they are part of raw TM packets\noriginating from the device.\n\nTM parameters are identified on ground by both their parameter ID and the\nparameter name which follows the format described in Sect. 16.2. The five last\ncharacters \u201caaaaa\u201d of the name are divided into two blocks \u201cnnncc\u201d, where\n\n\u2022 nnn is a unique name for each parameter or array of parameters and\n\u2022 cc is a counter/index for vector variables or if more than one of the same type\n\nexist\n\nFor example, ARTIMO00 would be a TM parameter of the RW with a parameter\nID starting with 0x14 (see Table 16.1); ARTIMO01 would be the same parameter\nfor RW1.\n\nIt needs to be noted that parameters of data type string are handled differently\nfrom others. In the MIB, TM parameters as for example TLE data, is defined as a\nstring with PTC 8 and PFC giving the number of characters the string contains (see\nSect. 16.7).\n\nHowever, in the OBSW, strings are handled as arrays of characters, i.e. for each\nstring with PFC > 1, there is an array of datapool variables with consecutive PIDs,\nonly the first of which is defined in the MIB as a string. This has two implications:\n\n\u2022 First, there can be no array of strings in the MIB, i.e. there are never two TM\nparameters with PTC 8 with PIDs being identical in the first three bytes.\n\n504 K.-S. Klemich and J. Eickhoff\n\n\n\n\u2022 Secondly, in order to downlink these strings using Service 3, the dedicated\nOBSW parameters have to be defined in the MIB in the Service (3,1) TC. This\nway, SCOS interprets the relevant fields of the TM packet as a string value and\ndisplays it as such.\n\n16.7 Parameter Format Definition\n\nThe format of any parameter is defined in SCOS-2000 and thus in the MIB using\ntwo fields named\n\n\u2022 Parameter Type Code (PTC) giving the general type (unsigned int, floating\npoint, etc.) and\n\n\u2022 Parameter Format Code (PFC) giving the length or precision of the parameter.\n\nThe exact definition of these is given in [86], some of the most common\nPTC/PFC combinations are provided in Table 16.5. Note that there are no data\nformats for vectors, arrays or matrices for numerical parameters. These need to be\ndefined implicitly by other means than the PTC/PFC (see Sect. 16.6).\n\nTable 16.5 Most commonly used SCOS-2000 format codes\n\nPTC PFC Common name\n\n1 0 Boolean (only valid flags)\n\n2 Any Unsigned integer, PFC gives number of bits\n\n3 4 Unsigned integer, length 1 byte\n\n3 12 Unsigned integer, length 2 bytes\n\n3 14 Unsigned integer, length 4 bytes\n\n4 4 Signed integer, length 1 byte\n\n4 12 Signed integer, length 2 bytes\n\n4 14 Signed integer, length 4 bytes\n\n5 1 Float, length 4 bytes\n\n5 2 Double, length 8 bytes\n\n7 Any Octet String, PFC gives number of bytes\n\n8 Any String, PFC gives the number of characters\n\n16 FLP Mission Information Database 505\n\n\n\nChapter 17\nAnnexes and Data Sheets\n\nJens Eickhoff\n\nAbstract The chapter comprises tables, listings and figures complementing the\ninformation in the previous chapters. The topics cover the areas cited in the key-\nword list.\n\nKeywords Software constants and FDIR limits ? Polling sequence table ?\nTelecommand/telemetry/event packet definitions ? Flight Procedures ? TTC data\nsheets ? Link budgets ? Power subsystem data sheets ? Mass budget ? Example\norbit analysis ? Skin connector pinout ? Red/green tagged item list ? Two Line\nElement definitions\n\nJ. Eickhoff (&)\nAirbus DS GmbH, Friedrichshafen, Germany\ne-mail: jens.eickhoff@airbus.com\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5_17\n\n507\n\n\n\n17.1 Software Constants and FDIR Limits\n\nSee Table 17.1.\n\nTable 17.1 Constants and FDIR limits\n\neulaVnoitpircseD\n\nInterval for State Vector Storage 300 s\n\nInterval for State Vector Transmission to secondary\nI/O-Board\n\n900 s\n\nTime after which the PCDU begins OBC\nreconfiguration\n\n10 s\n\nTime after which the PCDU performs the next\nreconfiguration step\n\n30 s\n\nCounter Limit for missing or corrupted replies of the\nPCDU, after whose exceeding FDIR prepares for the\nOBC reconfiguration sequence\n\n10\n\ns5remittesergodhctawerawtfoS\n\nInterval for SV storage in primary I/O-Board 300 s\n\nInterval for SV transmission to secondary I/O-Board 900 s\n\nWaiting time to see whether I/O-Board switch worked\nand SpW link is up\n\n5 s\n\nPCDU initiates Shutdown mode 20 V\n\nDevice Level\n\nUpper limit for the failure counter of a device FAILURE_LIMIT = 4600\n\nIncrement of the failure counter if a device is identified\nas faulty in one cycle\n\nFAILURE_INCREMENT = 1000\n\nDecrement of the failure counter if a device is not\nfaulty in one cycle\n\nFAILURE_DECREMENT = 1\n\nUpper limit for the boot counter for a device BOOT_LIMIT = 9009\n\nIncrement of the boot counter for a device if a device\nwas rebooted\n\nBOOT_INCREMENT = 9000\n\nDecrement for boot counter if a device did not need\nrebooting in the last cycle\n\nBOOT_DECREMENT = 1\n\nThermal Control\n\nTemperature gradient between two measurements 10 K/s\n(Only applicable if the computation is\nexecuted with 1 \u2026 5 Hz)\n\nUpper limit for T sensor sanity +150 \u00b0C\n\nLower limit for T sensor sanity ?50 \u00b0C\n\nTCS control limits are given in [129]\n\nMaximum heating time 3600 s\n\nMaximum heating time in Safe mode 1800 s\n\n508 J. Eickhoff\n\n\n\n17.2 Polling Sequence Table for I/O-Board Access\n\nHandler Time [ms] Action\n\nRW_HANDLER_0 0 Send RMAP Read Command to IO Board\n\nRW_HANDLER_1 0 Send RMAP Read Command to IO Board\n\nRW_HANDLER_2 0 Send RMAP Read Command to IO Board\n\nRW_HANDLER_3 0 Send RMAP Read Command to IO Board\n\nMGT_HANDLER_N 0 Send RMAP Read Command to IO Board\n\nMGT_HANDLER_R 0 Send RMAP Read Command to IO Board\n\nDDS_HANDLER_N 0 Send RMAP Read Command to IO Board\n\nDDS_HANDLER_R 0 Send RMAP Read Command to IO Board\n\nPLOC_VTX_ROUTER_N 0 Send RMAP Read Command to IO Board\n\nRW_HANDLER_0 6 Get Read Reply from RMAP Buffer\n\nRW_HANDLER_1 6 Get Read Reply from RMAP Buffer\n\nRW_HANDLER_2 6 Get Read Reply from RMAP Buffer\n\nRW_HANDLER_3 6 Get Read Reply from RMAP Buffer\n\nFOG_HANDLER 6 Get Read Reply from RMAP Buffer\n\nMGT_HANDLER_N 6 Get Read Reply from RMAP Buffer\n\nMGT_HANDLER_R 6 Get Read Reply from RMAP Buffer\n\nDDS_HANDLER_N 6 Get Read Reply from RMAP Buffer\n\nDDS_HANDLER_R 6 Get Read Reply from RMAP Buffer\n\nPLOC_VTX_ROUTER_N 6 Get Read Reply from RMAP Buffer\n\nIO_ASSEMBLY 6 Reset RMAP Channel\n\nFDIR_CONTROLLER 6 Send RMAP Write Command to IO Board\n\nRW_HANDLER_0 6 Send RMAP Write Command to IO Board\n\nRW_HANDLER_1 6 Send RMAP Write Command to IO Board\n\nRW_HANDLER_2 6 Send RMAP Write Command to IO Board\n\nRW_HANDLER_3 6 Send RMAP Write Command to IO Board\n\nMGM_HANDLER_N 6 Send RMAP Write Command to IO Board\n\nMGM_HANDLER_R 6 Send RMAP Write Command to IO Board\n\nPCDU_HANDLER 6 Send RMAP Write Command to IO Board\n\nFOG_HANDLER 6 Send RMAP Write Command to IO Board\n\nMGT_HANDLER_N 6 Send RMAP Write Command to IO Board\n\nMGT_HANDLER_R 6 Send RMAP Write Command to IO Board\n\nDDS_HANDLER_N 6 Send RMAP Write Command to IO Board\n\nDDS_HANDLER_R 6 Send RMAP Write Command to IO Board\n\nPLOC_VTX_ROUTER_N 6 Send RMAP Write Command to IO Board\n\nSTR_HANDLER 6 Send RMAP Write Command to IO Board\n\nGPS_HANDLER_0 6 Send RMAP Write Command to IO Board\n\nGPS_HANDLER_1 6 Send RMAP Write Command to IO Board\n\nGPS_HANDLER_2 6 Send RMAP Write Command to IO Board\n\nIO_ASSEMBLY 6 Send RMAP Write Command to IO Board\n\n(continued)\n\n17 Annexes and Data Sheets 509\n\n\n\nHandler Time [ms] Action\n\nPLOC_POWER_HANDLER_N 6 Send RMAP Write Command to IO Board\n\nPLOC_POWER_HANDLER_R 6 Send RMAP Write Command to IO Board\n\nPLOC_CC_HANDLER_N 6 Send RMAP Write Command to IO Board\n\nPLOC_CC_HANDLER_R 6 Send RMAP Write Command to IO Board\n\nDDS_SWITCH 6 Send RMAP Write Command to IO Board\n\nTTC_RX_HANDLER_N 6 Send RMAP Write Command to IO Board\n\nTTC_RX_HANDLER_R 6 Send RMAP Write Command to IO Board\n\nTTC_TX_HANDLER_N 6 Send RMAP Write Command to IO Board\n\nTTC_TX_HANDLER_R 6 Send RMAP Write Command to IO Board\n\nGPS_CDM_HANDLER 6 Send RMAP Write Command to IO Board\n\nRW_HANDLER_0 115 Get Write Reply from RMAP Buffer\n\nRW_HANDLER_1 115 Get Write Reply from RMAP Buffer\n\nRW_HANDLER_2 115 Get Write Reply from RMAP Buffer\n\nRW_HANDLER_3 115 Get Write Reply from RMAP Buffer\n\nRW_HANDLER_0 115 Send RMAP Read Command to IO Board\n\nRW_HANDLER_1 115 Send RMAP Read Command to IO Board\n\nRW_HANDLER_2 115 Send RMAP Read Command to IO Board\n\nRW_HANDLER_3 115 Send RMAP Read Command to IO Board\n\nFOG_HANDLER 115 Get Write Reply from RMAP Buffer\n\nMGT_HANDLER_N 115 Get Write Reply from RMAP Buffer\n\nMGT_HANDLER_R 115 Get Write Reply from RMAP Buffer\n\nDDS_HANDLER_N 115 Get Write Reply from RMAP Buffer\n\nDDS_HANDLER_R 115 Get Write Reply from RMAP Buffer\n\nPLOC_VTX_ROUTER_N 115 Get Write Reply from RMAP Buffer\n\nFOG_HANDLER 115 Send RMAP Read Command to IO Board\n\nMGT_HANDLER_N 115 Send RMAP Read Command to IO Board\n\nMGT_HANDLER_R 115 Send RMAP Read Command to IO Board\n\nDDS_HANDLER_N 115 Send RMAP Read Command to IO Board\n\nDDS_HANDLER_R 115 Send RMAP Read Command to IO Board\n\nPLOC_VTX_ROUTER_N 115 Send RMAP Read Command to IO Board\n\nRW_HANDLER_0 120 Get Read Reply from RMAP Buffer\n\nRW_HANDLER_1 120 Get Read Reply from RMAP Buffer\n\nRW_HANDLER_2 120 Get Read Reply from RMAP Buffer\n\nRW_HANDLER_3 120 Get Read Reply from RMAP Buffer\n\nRW_HANDLER_0 120 Send RMAP Write Command to IO Board\n\nRW_HANDLER_1 120 Send RMAP Write Command to IO Board\n\nRW_HANDLER_2 120 Send RMAP Write Command to IO Board\n\nRW_HANDLER_3 120 Send RMAP Write Command to IO Board\n\nMGM_HANDLER_N 120 Get Write Reply from RMAP Buffer\n\nMGM_HANDLER_R 120 Get Write Reply from RMAP Buffer\n\n(continued)\n\n(continued)\n\n510 J. Eickhoff\n\n\n\nHandler Time [ms] Action\n\nSTR_HANDLER 120 Get Write Reply from RMAP Buffer\n\nGPS_HANDLER_0 120 Get Write Reply from RMAP Buffer\n\nGPS_HANDLER_1 120 Get Write Reply from RMAP Buffer\n\nGPS_HANDLER_2 120 Get Write Reply from RMAP Buffer\n\nIO_ASSEMBLY 120 Get Write Reply from RMAP Buffer\n\nPLOC_POWER_HANDLER_N 120 Get Write Reply from RMAP Buffer\n\nPLOC_POWER_HANDLER_R 120 Get Write Reply from RMAP Buffer\n\nPLOC_CC_HANDLER_N 120 Get Write Reply from RMAP Buffer\n\nPLOC_CC_HANDLER_R 120 Get Write Reply from RMAP Buffer\n\nTTC_RX_HANDLER_N 120 Get Write Reply from RMAP Buffer\n\nTTC_RX_HANDLER_R 120 Get Write Reply from RMAP Buffer\n\nGPS_CDM_HANDLER 120 Get Write Reply from RMAP Buffer\n\nSTR_HANDLER 120 Send RMAP Read Command to IO Board\n\nGPS_HANDLER_0 120 Send RMAP Read Command to IO Board\n\nGPS_HANDLER_1 120 Send RMAP Read Command to IO Board\n\nGPS_HANDLER_2 120 Send RMAP Read Command to IO Board\n\nIO_ASSEMBLY 120 Send RMAP Read Command to IO Board\n\nPLOC_POWER_HANDLER_N 120 Send RMAP Read Command to IO Board\n\nPLOC_POWER_HANDLER_R 120 Send RMAP Read Command to IO Board\n\nPLOC_CC_HANDLER_N 120 Send RMAP Read Command to IO Board\n\nPLOC_CC_HANDLER_R 120 Send RMAP Read Command to IO Board\n\nTTC_RX_HANDLER_N 120 Send RMAP Read Command to IO Board\n\nTTC_RX_HANDLER_R 120 Send RMAP Read Command to IO Board\n\nGPS_CDM_HANDLER 120 Send RMAP Read Command to IO Board\n\nFOG_HANDLER 120 Get Read Reply from RMAP Buffer\n\nMGT_HANDLER_N 120 Get Read Reply from RMAP Buffer\n\nMGT_HANDLER_R 120 Get Read Reply from RMAP Buffer\n\nDDS_HANDLER_N 120 Get Read Reply from RMAP Buffer\n\nDDS_HANDLER_R 120 Get Read Reply from RMAP Buffer\n\nPLOC_VTX_ROUTER_N 120 Get Read Reply from RMAP Buffer\n\nFOG_HANDLER 120 Send RMAP Write Command to IO Board\n\nMGT_HANDLER_N 120 Send RMAP Write Command to IO Board\n\nMGT_HANDLER_R 120 Send RMAP Write Command to IO Board\n\nDDS_HANDLER_N 120 Send RMAP Write Command to IO Board\n\nDDS_HANDLER_R 120 Send RMAP Write Command to IO Board\n\nPLOC_VTX_ROUTER_N 120 Send RMAP Write Command to IO Board\n\nPCDU_HANDLER 150 Get Write Reply from RMAP Buffer\n\nPCDU_HANDLER 150 Send RMAP Read Command to IO Board\n\nSTR_HANDLER 150 Get Read Reply from RMAP Buffer\n\nGPS_HANDLER_0 150 Get Read Reply from RMAP Buffer\n\n(continued)\n\n(continued)\n\n17 Annexes and Data Sheets 511\n\n\n\n17.3 Spacecraft Telecommand/Telemetry Definitions\n\nThis section comprises the tables for spacecraft telecommand packets, telemetry\npackets and spacecraft Event packets. For parameters calibrations etc. refer to the\nFLP MIB.\n\n17.3.1 Telecommand Definitions\n\nSee Table 17.2.\n\nHandler Time [ms] Action\n\nGPS_HANDLER_1 150 Get Read Reply from RMAP Buffer\n\nGPS_HANDLER_2 150 Get Read Reply from RMAP Buffer\n\nIO_ASSEMBLY 150 Get Read Reply from RMAP Buffer\n\nPLOC_POWER_HANDLER_N 150 Get Read Reply from RMAP Buffer\n\nPLOC_POWER_HANDLER_R 150 Get Read Reply from RMAP Buffer\n\nPLOC_CC_HANDLER_N 150 Get Read Reply from RMAP Buffer\n\nPLOC_CC_HANDLER_R 150 Get Read Reply from RMAP Buffer\n\nTTC_RX_HANDLER_N 150 Get Read Reply from RMAP Buffer\n\nTTC_RX_HANDLER_R 150 Get Read Reply from RMAP Buffer\n\nGPS_CDM_HANDLER 150 Get Read Reply from RMAP Buffer\n\nMGM_HANDLER_N 150 Send RMAP Read Command to IO Board\n\nMGM_HANDLER_R 150 Send RMAP Read Command to IO Board\n\nRW_HANDLER_0 150 Get Write Reply from RMAP Buffer\n\nRW_HANDLER_1 150 Get Write Reply from RMAP Buffer\n\nRW_HANDLER_2 150 Get Write Reply from RMAP Buffer\n\nRW_HANDLER_3 150 Get Write Reply from RMAP Buffer\n\nFOG_HANDLER 150 Get Write Reply from RMAP Buffer\n\nMGT_HANDLER_N 150 Get Write Reply from RMAP Buffer\n\nMGT_HANDLER_R 150 Get Write Reply from RMAP Buffer\n\nDDS_HANDLER_N 150 Get Write Reply from RMAP Buffer\n\nDDS_HANDLER_R 150 Get Write Reply from RMAP Buffer\n\nPLOC_VTX_ROUTER_N 150 Get Write Reply from RMAP Buffer\n\nPCDU_HANDLER 170 Get Read Reply from RMAP Buffer\n\nFOG_HANDLER 170 Send RMAP Read Command to IO Board\n\nMGM_HANDLER_N 170 Get Read Reply from RMAP Buffer\n\nMGM_HANDLER_R 170 Get Read Reply from RMAP Buffer\n\n(continued)\n\n512 J. Eickhoff\n\n\n\nSy\nst\n\nem\nT\n\nC\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nY\nY\n\nC\n00\n\n00\n0\n\nPU\nS\n\nSe\nrv\n\nic\ne\n\n17\nPi\n\nng\nT\n\nes\nt\n\nsa\nm\n\ne\nT\n\nC\nas\n\n\u201cP\nIN\n\nG\n\u201d\n\n17\n1\n\n53\n0\n\nC\n\nY\nY\n\nC\n10\n\n00\n0\n\nC\nO\n\nP\nC\n\ntr\nl\n\nFr\nam\n\ne:\nU\n\nnl\noc\n\nk\nC\n\nO\nP-\n\n1\nC\n\non\ntr\n\nol\nFr\n\nam\ne\n\n(T\nyp\n\ne-\nB\n\nC\n):\n\nU\nnl\n\noc\nk\n\nFA\nR\n\nM\n25\n\n5\n25\n\n5\n53\n\n0\nF\n\nY\nY\n\nC\n10\n\n00\n1\n\nC\nO\n\nP\nC\n\ntr\nl\n\nFr\nam\n\ne:\nSe\n\nt\nV\n\n(R\n)\n\nC\nO\n\nP-\n1\n\nC\non\n\ntr\nol\n\nFr\nam\n\ne\n(T\n\nyp\ne-\n\nB\nC\n\n):\nSe\n\nt\nV\n\n(R\n)\n\n(R\nec\n\nei\nve\n\nr\nFr\n\nam\ne\n\nSe\nq\n\nN\nr)\n\n25\n5\n\n25\n5\n\n53\n0\n\nF\n\nSy\nst\n\nem\nM\n\nan\nag\n\ner\nT\n\nC\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nY\nM\n\nC\n20\n\n00\n1\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nD\nev\n\ni\nSe\n\nt\nM\n\nod\ne\n\nof\nan\n\ny\nde\n\nvi\nce\n\nob\nje\n\nct\nid\n\nen\ntifi\n\ned\nby\n\nits\nob\n\nje\nct\n\n-I\nD\n\n20\n0\n\n1\n53\n\n11\nC\n\nY\nM\n\nC\n20\n\n00\n2\n\nSr\nv(\n\n20\n0,\n\n2)\nR\n\nea\nd\n\nM\nod\n\ne\nD\n\nev\nR\n\nea\nd\n\nM\nod\n\ne\nof\n\na\nsi\n\nng\nle\n\nD\nev\n\nic\ne\n\nO\nbj\n\nec\nt\n\n20\n0\n\n2\n53\n\n11\nC\n\nY\nM\n\nC\n20\n\n00\n3\n\nSr\nv(\n\n20\n0,\n\n3)\nR\n\nea\ndM\n\nod\nR\n\nec\nD\n\nev\nR\n\nea\nd\n\nM\nod\n\ne\nof\n\na\nde\n\nvi\nce\n\nob\nje\n\nct\nan\n\nd\nis\n\ntc\nhi\n\nld\nre\n\nn\nre\n\ncu\nrs\n\niv\nel\n\ny\n20\n\n0\n3\n\n53\n11\n\nC\n\nY\nM\n\nC\n20\n\n10\n1\n\nSr\nv(\n\n20\n1,\n\n1)\nSe\n\ntH\nea\n\nlF\nla\n\ngD\nev\n\nSe\nt\n\nH\nea\n\nlth\nFl\n\nag\nof\n\na\nde\n\nvi\nce\n\nob\nje\n\nct\n20\n\n1\n1\n\n53\n11\n\nC\n\nY\nM\n\nC\n20\n\n10\n4\n\nSr\nv(\n\n20\n1,\n\n4)\nR\n\nea\ndH\n\nea\nlD\n\nev\nic\n\nR\nea\n\nd\nth\n\ne\nhe\n\nal\nth\n\nfla\ng\n\nof\na\n\nsi\nng\n\nle\nde\n\nvi\nce\n\nob\nje\n\nct\n(T\n\nM\nvi\n\na\nSr\n\nv.\n5)\n\n20\n1\n\n4\n53\n\n11\nC\n\nY\nM\n\nC\n21\n\n00\n1\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nPL\nSe\n\ntM\nod\n\ne\nof\n\nan\ny\n\npa\nyl\n\noa\nd\n\nob\nje\n\nct\nid\n\nen\ntifi\n\ned\nby\n\nis\nto\n\nbj\nec\n\nt-\nID\n\n20\n0\n\n1\n53\n\n11\nC\n\nY\nM\n\nC\n21\n\n00\n2\n\nSr\nv(\n\n20\n0,\n\n2)\nR\n\nea\nd\n\nM\nod\n\ne\nPL\n\nR\nea\n\nd\nM\n\nod\ne\n\nof\na\n\nsi\nng\n\nle\npa\n\nyl\noa\n\nd\nO\n\nbj\nec\n\nt\n20\n\n0\n2\n\n53\n11\n\nC\n\nY\nM\n\nC\n21\n\n00\n3\n\nSr\nv(\n\n20\n0,\n\n3)\nR\n\nea\ndM\n\nod\nR\n\nec\nPL\n\nR\nea\n\nd\nM\n\nod\ne\n\nof\na\n\npa\nyl\n\noa\nd\n\nob\nje\n\nct\nan\n\nd\nis\n\nt\nch\n\nild\nre\n\nn\nre\n\ncu\nrs\n\niv\nel\n\ny\n20\n\n0\n3\n\n53\n11\n\nC\n\nY\nM\n\nC\n21\n\n10\n1\n\nSr\nv(\n\n20\n1,\n\n1)\nSe\n\ntH\nea\n\nlF\nla\n\ngP\nL\n\nSe\nt\n\nH\nea\n\nlth\nFl\n\nag\nof\n\na\npa\n\nyl\noa\n\nd\nob\n\nje\nct\n\n20\n1\n\n1\n53\n\n11\nC\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n17\n\n.2\nS/\nC\nte\nle\nco\nm\nm\nan\nd\npa\nck\net\n\nde\nfi\nni\ntio\n\nns\n17 Annexes and Data Sheets 513\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nY\nM\n\nC\n21\n\n10\n4\n\nSr\nv(\n\n20\n1,\n\n4)\nR\n\nea\ndH\n\nea\nlP\n\nL\nR\n\nea\nd\n\nth\ne\n\nhe\nal\n\nth\nfla\n\ng\nof\n\na\nsi\n\nng\nle\n\npa\nyl\n\noa\nd\n\nob\nje\n\nct\n(T\n\nM\nvi\n\na\nSr\n\nv.\n5)\n\n20\n1\n\n4\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n00\n1\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\ntM\nod\n\ne\nSy\n\ns\nSe\n\nt\nM\n\nod\ne\n\nof\nth\n\ne\nsy\n\nst\nem\n\nob\nje\n\nct\nid\n\nen\ntifi\n\ned\nby\n\nits\nob\n\nje\nct\n\n-I\nD\n\n20\n0\n\n1\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n00\n2\n\nSr\nv(\n\n20\n0,\n\n2)\nR\n\nea\nd\n\nM\nod\n\ne\nSy\n\ns\nC\n\n11\n35\n\n2\n0 02\n\ntcejb\nO\n\nmetsy s\neh t\n\nfo\nedo\n\nM\ndae\n\nR\n\nY\nM\n\nC\n22\n\n00\n3\n\nSr\nv(\n\n20\n0,\n\n3)\nR\n\nea\ndM\n\nod\nR\n\nec\nSy\n\ns\nR\n\nea\nd\n\nM\nod\n\ne\nof\n\nth\ne\n\nsy\nst\n\nem\nob\n\nje\nct\n\nan\nd\n\nis\nt\n\nch\nild\n\nre\nn\n\nre\ncu\n\nrs\niv\n\nel\ny\n\n20\n0\n\n3\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n10\n1\n\nSr\nv(\n\n20\n1,\n\n1)\nSe\n\ntH\nea\n\nlF\nla\n\ngS\nys\n\nSe\nt\n\nH\nea\n\nlth\nFl\n\nag\nof\n\nth\ne\n\nsy\nst\n\nem\nob\n\nje\nct\n\n20\n1\n\n1\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n10\n2\n\nSr\nv(\n\n20\n1,\n\n2)\nR\n\nea\ndA\n\nllH\nea\n\nlS\nys\n\nR\nea\n\nd\nH\n\nea\nlth\n\nfla\ngs\n\nof\nal\n\nl\nob\n\nje\nct\n\ns\n20\n\n1\n2\n\n53\n11\n\nC\n\nY\nM\n\nC\n22\n\n10\n4\n\nSr\nv(\n\n20\n1,\n\n4)\nR\n\nea\ndH\n\nea\nlS\n\nys\nR\n\nea\nd\n\nth\ne\n\nhe\nal\n\nth\nfla\n\ng\nof\n\nth\ne\n\nsy\nst\n\nem\nob\n\nje\nct\n\n(T\nM\n\nvi\na\n\nSr\nv.\n\n5)\n20\n\n1\n4\n\n53\n11\n\nC\n\nY\nM\n\nC\n22\n\n20\n1\n\nSr\nv(\n\n20\n2,\n\n1)\nA\n\ndd\nM\n\nod\nT\n\nab\nle\n\nSy\ns\n\nA\ndd\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\nof\nth\n\ne\nsy\n\nst\nem\n\n20\n2\n\n1\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n20\n2\n\nSr\nv(\n\n20\n2,\n\n2)\nA\n\ndd\nM\n\nod\neS\n\neq\nSy\n\ns\nA\n\ndd\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nSe\nqu\n\nen\nce\n\nof\nth\n\ne\nsy\n\nst\nem\n\n20\n2\n\n2\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n20\n3\n\nSr\nv(\n\n20\n2,\n\n3)\nD\n\nel\nM\n\nod\neT\n\nab\nSy\n\ns\nD\n\nel\net\n\ne\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nT\nab\n\nle\nof\n\nth\ne\n\nsy\nst\n\nem\n20\n\n2\n3\n\n53\n11\n\nC\n\nY\nM\n\nC\n22\n\n20\n4\n\nSr\nv(\n\n20\n2,\n\n4)\nD\n\nel\nM\n\nod\neS\n\neq\nSy\n\ns\nD\n\nel\net\n\ne\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nSe\nqu\n\nen\nce\n\nof\nth\n\ne\nsy\n\nst\nem\n\n20\n2\n\n4\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n20\n5\n\nSr\nv(\n\n20\n2,\n\n5)\nL\n\nis\ntM\n\nod\nT\n\nab\nlS\n\nys\nR\n\neq\nue\n\nst\nav\n\nai\nla\n\nbl\ne\n\nm\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\ns\nof\n\nth\ne\n\nsy\nst\n\nem\n20\n\n2\n5\n\n53\n11\n\nC\n\nY\nM\n\nC\n22\n\n20\n7\n\nSr\nv(\n\n20\n2,\n\n7)\nL\n\nis\ntM\n\nod\neS\n\neq\nSy\n\ns\nR\n\neq\nue\n\nst\nav\n\nai\nla\n\nbl\ne\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nSe\n\nqu\nen\n\nce\ns\n\nof\nth\n\ne\nsy\n\nst\nem\n\n20\n2\n\n7\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n20\n9\n\nSr\nv(\n\n20\n2,\n\n9)\nR\n\nea\ndM\n\nod\nT\n\nab\nlS\n\nys\nR\n\nea\nd\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\nD\nat\n\na\nof\n\nth\ne\n\nsy\nst\n\nem\n20\n\n2\n9\n\n53\n11\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n514 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nY\nM\n\nC\n22\n\n21\n1\n\nSr\nv(\n\n20\n2,\n\n11\n)\n\nR\nea\n\ndM\nod\n\nSe\nqS\n\nys\nR\n\nea\nd\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nSe\n\nqu\nen\n\nce\nD\n\nat\na\n\nof\nth\n\ne\nsy\n\nst\nem\n\n20\n2\n\n11\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n21\n3\n\nSr\nv(\n\n20\n2,\n\n13\n)\n\nR\nqM\n\nem\nT\n\nbS\nqS\n\nys\nR\n\neq\nue\n\nst\nA\n\nva\nila\n\nbl\ne\n\nM\nem\n\nor\ny\n\nSl\not\n\ns\nfo\n\nr\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nT\nab\n\nle\ns\n\nan\nd\n\nSe\nqu\n\nen\nce\n\n20\n2\n\n13\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n21\n5\n\nSr\nv(\n\n20\n2,\n\n15\n)\n\nR\nqO\n\nbj\nM\n\nem\nT\n\nbS\nys\n\nR\neq\n\nue\nst\n\nav\nai\n\nla\nbl\n\ne\nm\n\nem\nor\n\ny\nsl\n\not\ns\n\nfo\nr\n\nm\nod\n\ne\nch\n\nan\nge\n\nta\nbl\n\nes\nof\n\n1\nsy\n\nst\nem\n\n20\n2\n\n15\n53\n\n11\nC\n\nY\nM\n\nC\n22\n\n21\n7\n\nSr\nv(\n\n20\n2,\n\n17\n)\n\nR\nqO\n\nbj\nM\n\nem\nSq\n\nSy\ns\n\nR\neq\n\nue\nst\n\nav\nai\n\nla\nbl\n\ne\nm\n\nem\nor\n\ny\nsl\n\not\ns\n\nfo\nr\n\nm\nod\n\ne\nch\n\nan\nge\n\nse\nqu\n\nen\nce\n\nof\n1\n\nsy\nst\n\nem\n20\n\n2\n17\n\n53\n11\n\nC\n\nY\nM\n\nC\n23\n\n00\n1\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\ntM\nod\n\ne\nA\n\nss\nSe\n\nt\nM\n\nod\ne\n\nof\nan\n\ny\nas\n\nse\nm\n\nbl\ny/\n\nco\nnt\n\nro\nlle\n\nr\nob\n\nje\nct\n\n20\n0\n\n1\n53\n\n11\nC\n\nY\nM\n\nC\n23\n\n00\n2\n\nSr\nv(\n\n20\n0,\n\n2)\nR\n\nea\nd\n\nM\nod\n\ne\nA\n\nss\nR\n\nea\nd\n\nM\nod\n\ne\nof\n\na\nsi\n\nng\nle\n\nas\nse\n\nm\nbl\n\ny/\nco\n\nnt\nro\n\nlle\nr\n\nO\nbj\n\nec\nt\n\n20\n0\n\n2\n53\n\n11\nC\n\nY\nM\n\nC\n23\n\n00\n3\n\nSr\nv(\n\n20\n0,\n\n3)\nR\n\nea\ndM\n\nod\nR\n\nec\nA\n\nss\nR\n\nea\nd\n\nM\nod\n\ne\nof\n\nan\nas\n\nse\nm\n\nbl\ny/\n\nct\nrl\n\nob\nje\n\nct\nan\n\nd\nits\n\nch\nild\n\nre\nn\n\nre\ncu\n\nrs\niv\n\nel\ny\n\n20\n0\n\n3\n53\n\n11\nC\n\nY\nM\n\nC\n23\n\n10\n1\n\nSr\nv(\n\n20\n1,\n\n1)\nSe\n\ntH\nea\n\nlF\nla\n\ngA\nss\n\nSe\nt\n\nH\nea\n\nlth\nFl\n\nag\nof\n\nan\nas\n\nse\nm\n\nbl\ny/\n\nco\nnt\n\nro\nlle\n\nr\nob\n\nje\nct\n\n20\n1\n\n1\n53\n\n11\nC\n\nY\nM\n\nC\n23\n\n10\n4\n\nSr\nv(\n\n20\n1,\n\n4)\nR\n\nea\ndH\n\nea\nlA\n\nss\nR\n\nea\nd\n\nth\ne\n\nhe\nal\n\nth\nfla\n\ng\nof\n\na\nas\n\nse\nm\n\nbl\ny/\n\nct\nrl\n\nob\nje\n\nct\n(T\n\nM\nvi\n\na\nSr\n\nv.\n5)\n\n20\n1\n\n4\n53\n\n11\nC\n\nY\nM\n\nC\n24\n\n00\n1\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nSu\nb\n\nSe\ntM\n\nod\ne\n\nof\na\n\nsu\nbs\n\nys\nte\n\nm\nob\n\nje\nct\n\nid\nen\n\ntifi\ned\n\nby\nits\n\nob\nje\n\nct\n-I\n\nD\n20\n\n0\n1\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n00\n2\n\nSr\nv(\n\n20\n0,\n\n2)\nR\n\nea\nd\n\nM\nod\n\ne\nSu\n\nb\nC\n\n11\n35\n\n2\n002\n\ntcejb\nO\n\nm etsysb us\na\n\nf o\nedo\n\nM\ndae\n\nR\n\nY\nM\n\nC\n24\n\n00\n3\n\nSr\nv(\n\n20\n0,\n\n3)\nR\n\nea\ndM\n\nod\nR\n\nec\nSu\n\nb\nR\n\nea\nd\n\nM\nod\n\ne\nof\n\na\nsu\n\nbs\nys\n\nte\nm\n\nob\nje\n\nct\nan\n\nd\nis\n\nt\nch\n\nild\nre\n\nn\nre\n\ncu\nrs\n\niv\nel\n\ny\n20\n\n0\n3\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n10\n1\n\nSr\nv(\n\n20\n1,\n\n1)\nSe\n\ntH\nea\n\nlF\nla\n\ngS\nub\n\nSe\nt\n\nH\nea\n\nlth\nFl\n\nag\nof\n\na\nsu\n\nbs\nys\n\nte\nm\n\nob\nje\n\nct\n20\n\n1\n1\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n10\n4\n\nSr\nv(\n\n20\n1,\n\n4)\nR\n\nea\ndH\n\nea\nlS\n\nub\nR\n\nea\nd\n\nhe\nal\n\nth\nfl a\n\ng\nof\n\na\nsu\n\nbs\nys\n\nte\nm\n\nob\nje\n\nct\n(T\n\nM\nvi\n\na\nSr\n\nv.\n5)\n\n20\n1\n\n4\n53\n\n11\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 515\n\n\n\nT\nab\n\nle\n17\n\n.2\n   \n\nS/\nC\n\n te\nle\n\nco\nm\n\nm\nan\n\nd \npa\n\nck\net\n\n d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\nY\nM\n\nC\n24\n\n20\n1\n\nSr\nv(\n\n20\n2,\n\n1)\nA\n\ndd\nM\n\nod\nT\n\nab\nle\n\nSu\nb\n\nA\ndd\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\nof\na\n\nsu\nbs\n\nys\nte\n\nm\n20\n\n2\n1\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n20\n2\n\nSr\nv(\n\n20\n2,\n\n2)\nA\n\ndd\nM\n\nod\neS\n\neq\nSu\n\nb\nA\n\ndd\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nSe\nqu\n\nen\nce\n\nof\na\n\nsu\nbs\n\nys\nte\n\nm\n20\n\n2\n2\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n20\n3\n\nSr\nv(\n\n20\n2,\n\n3)\nD\n\nel\nM\n\nod\neT\n\nab\nSu\n\nb\nD\n\nel\net\n\ne\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nT\nab\n\nle\nof\n\na\nsu\n\nbs\nys\n\nte\nm\n\n20\n2\n\n3\n53\n\n11\nC\n\nY\nM\n\nC\n24\n\n20\n4\n\nSr\nv(\n\n20\n2,\n\n4)\nD\n\nel\nM\n\nod\neS\n\neq\nSu\n\nb\nD\n\nel\net\n\ne\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nSe\nqu\n\nen\nce\n\nof\na\n\nsu\nbs\n\nys\nte\n\nm\n20\n\n2\n4\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n20\n5\n\nSr\nv(\n\n20\n2,\n\n5)\nL\n\nis\ntM\n\nod\nT\n\nab\nlS\n\nub\nR\n\neq\nue\n\nst\nav\n\nai\nla\n\nbl\ne\n\nm\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\ns\nof\n\na\nsu\n\nbs\nys\n\nte\nm\n\n20\n2\n\n5\n53\n\n11\nC\n\nY\nM\n\nC\n24\n\n20\n7\n\nSr\nv(\n\n20\n2,\n\n7)\nL\n\nis\ntM\n\nod\neS\n\neq\nSu\n\nb\nR\n\neq\nue\n\nst\nav\n\nai\nla\n\nbl\ne\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nSe\n\nqu\nen\n\nce\ns\n\nof\na\n\nsu\nbs\n\nys\nte\n\nm\n20\n\n2\n7\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n20\n9\n\nSr\nv(\n\n20\n2,\n\n9)\nR\n\nea\ndM\n\nod\nT\n\nab\nlS\n\nub\nR\n\nea\nd\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\nD\nat\n\na\nof\n\na\nsu\n\nbs\nys\n\nte\nm\n\n20\n2\n\n9\n53\n\n11\nC\n\nY\nM\n\nC\n24\n\n21\n1\n\nSr\nv(\n\n20\n2,\n\n11\n)\n\nR\nea\n\ndM\nod\n\nSe\nqS\n\nub\nR\n\nea\nd\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nSe\n\nqu\nen\n\nce\nD\n\nat\na\n\nof\na\n\nsu\nbs\n\nys\nte\n\nm\n20\n\n2\n11\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n21\n5\n\nSr\nv(\n\n20\n2,\n\n15\n)\n\nR\nqO\n\nbj\nM\n\nem\nT\n\nbS\nub\n\nR\neq\n\nue\nst\n\nav\nai\n\nla\nbl\n\ne\nm\n\nem\nor\n\ny\nsl\n\not\ns\n\nfo\nr\n\nm\nod\n\ne\nch\n\nan\nge\n\nta\nbl\n\nes\nof\n\n1\nsy\n\nst\nem\n\n20\n2\n\n15\n53\n\n11\nC\n\nY\nM\n\nC\n24\n\n21\n7\n\nSr\nv(\n\n20\n2,\n\n17\n)\n\nR\nqO\n\nbj\nM\n\nem\nSq\n\nSu\nb\n\nR\neq\n\nue\nst\n\nav\nai\n\nla\nbl\n\ne\nm\n\nem\nor\n\ny\nsl\n\not\ns\n\nfo\nr\n\nm\nod\n\ne\nch\n\nan\nge\n\nse\nqu\n\nen\nce\n\nof\n1\n\nsy\nst\n\nem\n20\n\n2\n17\n\n53\n11\n\nC\n\nY\nM\n\nC\n24\n\n30\n1\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nA\nC\n\nS\nC\n\n11\n35\n\n1\n002\n\nmetsy sbu S\nS\n\nC\nA\n\neht\nf o\n\nedo\nM\n\nteS\n\nY\nM\n\nC\n24\n\n30\n2\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nC\nD\n\nH\nC\n\n11\n35\n\n1\n002\n\nmetsysb uS\nH\n\nD\nC\n\neh t\nfo\n\ned o\nM\n\nteS\n\nC\n11\n\n3 5\n1\n\n002\nmetsy sbu S\n\nLP\ne ht\n\nf o\nedo\n\nM\nteS\n\nLP\ned o\n\nM\nte S\n\n)1,00 2(vrS\n3034 2\n\nC\nM\n\nY Y\nM\n\nC\n24\n\n30\n4\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nPS\nS\n\nSe\nt\n\nM\nod\n\ne\nof\n\nth\ne\n\nPS\nS\n\nSu\nbs\n\nys\nte\n\nm\n20\n\n0\n1\n\n53\n11\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n516 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nY\nM\n\nC\n24\n\n30\n5\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nT\nC\n\nS\nC\n\n11\n35\n\n1\n002\n\nmetsysbuS\nS\n\nC\nT\n\neht\nfo\n\nedo\nM\n\nteS\n\nY\nM\n\nC\n24\n\n30\n6\n\nSr\nv(\n\n20\n0,\n\n1)\nSe\n\nt\nM\n\nod\ne\n\nT\nT\n\nC\nC\n\n11\n35\n\n1\n002\n\nmetsysbuS\nC\n\nT\nT\n\neht\nfo\n\nedo\nM\n\nteS\n\nY\nM\n\nC\n25\n\n10\n1\n\nSr\nv(\n\n20\n1,\n\n1)\nSe\n\ntH\nea\n\nlF\nla\n\ngH\nel\n\nC\n11\n\n35\n1\n\n102\nt cejbo\n\nhtlaeh\na\n\nfo\nga l F\n\nh tlae\nH\n\nteS\n\nY\nM\n\nC\n25\n\n10\n4\n\nSr\nv(\n\n20\n1,\n\n4)\nR\n\nea\ndH\n\nea\nlH\n\nel\nR\n\nea\nd\n\nhe\nal\n\nth\nfla\n\ng\nof\n\na\nhe\n\nal\nth\n\nob\nje\n\nct\n(T\n\nM\nvi\n\na\nSr\n\nv.\n5)\n\n20\n1\n\n4\n53\n\n11\nC\n\nT\nim\n\ne\nM\n\nan\nag\n\ner\nT\n\nC\ns\n\nP\nY\n\nT\nC\n\nkc\nA\n\nDI\nP\n\nA\n.tbuS\n\nepy\nT\n\nno it pir cs e\nD\n\ng no\nL\n\nnoit pir cse\nD\n\ne\nma\n\nN Y\nT\n\nC\n00\n\n01\n0\n\nSr\nv(\n\n9,\n12\n\n8)\nSe\n\nt\nC\n\nC\nS\n\nT\nim\n\ne\nR\n\neq\nue\n\nst\nto\n\nch\nan\n\nge\nth\n\ne\nsy\n\nst\nem\n\ntim\ne\n\nin\nC\n\nC\nS\n\nfo\nrm\n\nat\n(C\n\nC\nSD\n\nS)\n9\n\n12\n8\n\n53\n9\n\nC\n\nT\nel\n\nec\nom\n\nm\nan\n\nd\nSc\n\nhe\ndu\n\nle\nr\n\nT\nC\n\ns\n\nP\nY\n\nT\nC\n\nkc\nA\n\nDI\nP\n\nA\n.tbuS\n\ne py\nT\n\nn oitpi rc se\nD\n\ngno\nL\n\nnoi tpi rcs e\nD\n\ne\nma\n\nN Y\nSC\n\n00\n00\n\n1\nSr\n\nv(\n11\n\n,1\n)\n\nE\nna\n\nbl\neT\n\nC\nre\n\nle\nas\n\ne\nSr\n\nv\n(1\n\n1,\n1)\n\nE\nna\n\nbl\ne\n\nR\nel\n\nea\nse\n\nof\nT\n\nC\ns\n\nfr\nom\n\nO\nn-\n\nB\noa\n\nrd\nT\n\nC\nSc\n\nhe\ndu\n\nle\n11\n\n1\n53\n\n9\nC\n\nY\nSC\n\n00\n00\n\n2\nSr\n\nv(\n11\n\n,2\n)\n\nD\nis\n\nab\nle\n\nT\nC\n\nre\nle\n\nas\nSr\n\nv\n(1\n\n1,\n2)\n\nD\nis\n\nab\nle\n\nR\nel\n\nea\nse\n\nof\nT\n\nC\ns\n\nfr\nom\n\nO\nn-\n\nB\noa\n\nrd\nT\n\nC\nSc\n\nhe\ndu\n\nle\n11\n\n2\n53\n\n9\nC\n\nY\nSC\n\n00\n00\n\n3\nSr\n\nv(\n11\n\n,3\n)\n\nR\nes\n\net\nT\n\nC\nsc\n\nhe\ndu\n\nle\nSr\n\nv\n(1\n\n1,\n3)\n\nR\nes\n\net\nO\n\nn-\nB\n\noa\nrd\n\nT\nC\n\nSc\nhe\n\ndu\nle\n\n(D\nel\n\net\ne\n\nal\nl\n\nen\ntr\n\nie\ns)\n\n11\n3\n\n53\n9\n\nC\n\nY\nSC\n\n00\n00\n\n4\nSr\n\nv(\n11\n\n,4\n)\n\nL\noa\n\ndT\nim\n\neT\nag\n\nge\nd\n\nSr\nv\n\n(1\n1,\n\n4)\nL\n\noa\nd\n\nT\nim\n\ne\nT\n\nag\nge\n\nd\nT\n\nC\nto\n\nO\nn-\n\nB\noa\n\nrd\nT\n\nC\nSc\n\nhe\ndu\n\nle\n11\n\n4\n53\n\n9\nC\n\nM\nem\n\nor\ny\n\nT\nC\n\ns\n\nP\nY\n\nT\nC\n\nkc\nA\n\nDI\nP\n\nA\n.tbuS\n\nepy\nT\n\nnoitpircse\nD\n\ngno\nL\n\nnoitp ircse\nD\n\ne\nma\n\nN D\nM\n\nC\n00\n\n00\n0\n\nSr\nv6\n\nL\noa\n\nd\nM\n\nem\nor\n\ny\nA\n\nbs\nA\n\nd\nL\n\noa\nd\n\nD\nat\n\na\nto\n\nM\nem\n\nor\ny\n\nat\nan\n\nab\nso\n\nlu\nte\n\nad\ndr\n\nes\ns\n\n6\n2\n\n53\n15\n\nC\n\nD\nM\n\nC\n00\n\n00\n1\n\nSr\nv6\n\nD\num\n\np\nM\n\nem\nor\n\ny\nA\n\nbs\nA\n\nd\nD\n\num\np\n\nD\nat\n\na\nfr\n\nom\nM\n\nem\nor\n\ny\nfr\n\nom\nan\n\nab\nso\n\nlu\nte\n\nad\ndr\n\nes\ns\n\n6\n5\n\n53\n11\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 517\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nM\n\nC\n00\n\n00\n2\n\nSr\nv6\n\nC\nhe\n\nck\nM\n\nem\nor\n\ny\nA\n\nbs\nA\n\nd\nC\n\nhe\nck\n\nD\nat\n\na\nin\n\nM\nem\n\nor\ny\n\nat\nan\n\nab\nso\n\nlu\nte\n\nad\ndr\n\nes\ns\n\n6\n9\n\n53\n11\n\nC\n\nD\nM\n\nC\n00\n\n00\n3\n\nSr\nv6\n\nL\noa\n\nd\nFl\n\noa\nt\n\nto\nD\n\nP\nL\n\noa\nd\n\na\nfl\n\nC\n11\n\n35\n231\n\n6\nlooP\n\nata\nD\n\neht\not\n\neulav\ntao\n\nD\nM\n\nC\n00\n\n00\n4\n\nSr\nv6\n\nL\noa\n\nd\nT\n\nL\nE\n\nR\now\n\n1\nto\n\nD\nP\n\nC\n11\n\n35\n231\n\n6\nlooP\n\nata\nD\n\not\n1\n\nwo\nR\n\nE\nL\n\nT\nd ao\n\nL\n6vrS\n\nD\nM\n\nC\n00\n\n00\n5\n\nSr\nv6\n\nL\noa\n\nd\nT\n\nL\nE\n\nR\now\n\n2\nto\n\nD\nP\n\nSr\nv6\n\nL\noa\n\nd\nT\n\nL\nE\n\nR\now\n\n2\nto\n\nD\nat\n\na\nPo\n\nol\n6\n\n13\n2\n\n53\n11\n\nC\n\nD\nM\n\nC\n10\n\n01\n0\n\nSr\nv(\n\n15\n,1\n\n)\nE\n\nna\nbl\n\neT\nM\n\nSt\nor\n\nag\ne\n\nSr\nv\n\n(1\n5,\n\n1)\nE\n\nna\nbl\n\ne\nSt\n\nor\nag\n\ne\nin\n\nPa\nck\n\net\nSt\n\nor\nes\n\n15\n1\n\n53\n11\n\nC\n\nD\nM\n\nC\n10\n\n02\n0\n\nSr\nv(\n\n15\n,2\n\n)\nD\n\nis\nab\n\nle\nT\n\nM\nSt\n\nor\nag\n\nSr\nv\n\n(1\n5,\n\n2)\nD\n\nis\nab\n\nle\nSt\n\nor\nag\n\ne\nin\n\nPa\nck\n\net\nSt\n\nor\nes\n\n15\n2\n\n53\n11\n\nC\n\nD\nM\n\nC\n10\n\n03\n0\n\nSr\nv(\n\n15\n,3\n\n)\nA\n\ndd\nPk\n\nts\nSt\n\nor\neS\n\nel\nSr\n\nv\n(1\n\n5,\n3)\n\nA\ndd\n\nPa\nck\n\net\ns\n\nto\nSt\n\nor\nag\n\ne\nSe\n\nle\nct\n\nio\nn\n\nD\ne fi\n\nni\ntio\n\nn\n15\n\n3\n53\n\n11\nC\n\nD\nM\n\nC\n10\n\n04\n0\n\nSr\nv(\n\n15\n,4\n\n)\nD\n\nel\nPk\n\nts\nSt\n\nor\neS\n\nel\nSr\n\nv\n(1\n\n5,\n4)\n\nD\nel\n\net\ne\n\nPa\nck\n\net\ns\n\nto\nSt\n\nor\nag\n\ne\nSe\n\nle\nct\n\nio\nn\n\nD\nefi\n\nni\ntio\n\nn\n15\n\n4\n53\n\n11\nC\n\nD\nM\n\nC\n10\n\n05\n0\n\nSr\nv(\n\n15\n,5\n\n)R\nep\n\nor\ntS\n\nto\nre\n\nSe\nl\n\nSr\nv\n\n(1\n5,\n\n5)\nR\n\nep\nor\n\nt\nSt\n\nor\nag\n\ne\nSe\n\nle\nct\n\nio\nn\n\nD\nefi\n\nni\ntio\n\nn\n15\n\n5\n53\n\n11\nC\n\nD\nM\n\nC\n10\n\n07\n0\n\nSr\nv(\n\n15\n,7\n\n)D\now\n\nnT\nM\n\nSt\nor\n\ne\nA\n\nll\n(1\n\n5,\n7)\n\nD\now\n\nnl\nin\n\nk\nPa\n\nck\net\n\nSt\nor\n\ne\nC\n\non\nte\n\nnt\ns\n\nfo\nr\n\nPa\nck\n\net\nra\n\nng\ne:\n\nA\nll\n\n15\n7\n\n53\n11\n\nC\n\nD\nM\n\nC\n10\n\n07\n1\n\nSr\nv(\n\n15\n,7\n\n)D\now\n\nnT\nM\n\nSt\nor\n\ne\nB\n\net\n(1\n\n5,\n7)\n\nD\now\n\nnl\nin\n\nk\nPa\n\nck\net\n\nSt\nor\n\ne\nC\n\non\nte\n\nnt\ns\n\nfo\nr\n\nPa\nck\n\net\nra\n\nng\ne:\n\nB\net\n\nw\nee\n\nn\n15\n\n7\n53\n\n11\nC\n\nD\nM\n\nC\n10\n\n07\n2\n\nSr\nv(\n\n15\n,7\n\n)D\now\n\nnT\nM\n\nSt\nor\n\ne\nB\n\nef\n(1\n\n5,\n7)\n\nD\now\n\nnl\nin\n\nk\nPa\n\nck\net\n\nSt\nor\n\ne\nC\n\non\nte\n\nnt\ns\n\nfo\nr\n\nPa\nck\n\net\nra\n\nng\ne:\n\nB\nef\n\nor\ne\n\n15\n7\n\n53\n11\n\nC\n\nD\nM\n\nC\n10\n\n07\n3\n\nSr\nv(\n\n15\n,7\n\n)D\now\n\nnT\nM\n\nSt\nor\n\ne\nA\n\nft\n(1\n\n5,\n7)\n\nD\now\n\nnl\nin\n\nk\nPa\n\nck\net\n\nSt\nor\n\ne\nC\n\non\nte\n\nnt\ns\n\nfo\nr\n\nPa\nck\n\net\nra\n\nng\ne:\n\nA\nft\n\ner\n15\n\n7\n53\n\n11\nC\n\nD\nM\n\nC\n10\n\n10\n0\n\nSr\nv(\n\n15\n,1\n\n0)\nD\n\nel\nT\n\nM\nSt\n\nor\ne\n\nA\nll\n\nSr\nv\n\n(1\n5,\n\n10\n)\n\nD\nel\n\net\ne\n\nT\nM\n\nSt\nor\n\nes\nco\n\nnt\nen\n\nts\n:\n\nA\nll\n\n15\n10\n\n53\n11\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n518 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nM\n\nC\n10\n\n10\n2\n\nSr\nv(\n\n15\n,1\n\n0)\nD\n\nel\nT\n\nM\nSt\n\nor\ne\n\nSe\nl\n\nSr\nv\n\n(1\n5,\n\n10\n)\n\nD\nel\n\net\ne\n\nT\nM\n\nSt\nor\n\nes\nco\n\nnt\nen\n\nts\n:\n\nSe\nle\n\nct\nst\n\nor\ne,\n\nA\nPI\n\nD\n,\n\nSS\nC\n\n15\n10\n\n53\n11\n\nC\n\nD\nM\n\nC\n10\n\n12\n0\n\nSr\nv(\n\n15\n,1\n\n2)\nR\n\nep\nor\n\ntS\nto\n\nrC\nat\n\na\nSr\n\nv\n(1\n\n5,\n12\n\n)\nR\n\nep\nor\n\nt\nPa\n\nck\net\n\nSt\nor\n\ne\nC\n\nat\nal\n\nog\ns\n\n(c\non\n\nte\nnt\n\nov\ner\n\nvi\new\n\n)\n15\n\n12\n53\n\n11\nC\n\nO\nB\n\nC\nT\n\nC\ns\n\nP\nY\n\nT\nC\n\nk c\nA\n\nDI\nP\n\nA\n.tb uS\n\nep y\nT\n\nn oi tpir cse\nD\n\ngno\nL\n\nno itpi rc se\nD\n\ne\nm a\n\nN D\nO\n\nC\n00\n\n00\n1\n\nSr\nv(\n\n8,\n1)\n\nSe\ntP\n\nR\nO\n\nM\nSl\n\nee\npS\n\nta\nt\n\nC\n1 1\n\n3 5\n1\n\n8\ne tatS\n\np eelS\nM\n\nO\nR P\n\nteS\n)1,8(\n\nv rS\n\nD\nO\n\nC\n00\n\n00\n2\n\nSr\nv(\n\n8,\n1)\n\nSe\ntP\n\nR\nO\n\nM\nW\n\nri\nte\n\nSt\nat\n\nC\n11\n\n35\n1\n\n8\netatS\n\ne tir\nW\n\nM\nO\n\nRP\nteS\n\n) 1,8(\nvrS\n\nD\nO\n\nC\n00\n\n00\n3\n\nSr\nv(\n\n8,\n1)\n\nR\nea\n\nd\nPR\n\nO\nM\n\nSt\nat\n\ne\nC\n\n11\n35\n\n1\n8\n\neta tS\nM\n\nO\nRP\n\nd ae\nR\n\n)1, 8(\nvr S\n\nD\nO\n\nC\n00\n\n01\n0\n\nSr\nv(\n\n8,\n1)\n\nR\nes\n\net\nC\n\nPU\nU\n\nsa\nge\n\nSr\nv\n\n(8\n,1\n\n)\nR\n\nes\net\n\nC\nPU\n\nU\nsa\n\nge\nSt\n\nat\nis\n\ntic\ns\n\n8\n1\n\n53\n11\n\nC\n\nD\nO\n\nC\n00\n\n01\n1\n\nSr\nv(\n\n8,\n1)\n\nR\nea\n\nd\nC\n\nPU\nU\n\nsa\nge\n\nSr\nv\n\n(8\n,1\n\n)\nR\n\nea\nd\n\nC\nPU\n\nU\nsa\n\nge\nSt\n\nat\nis\n\ntic\ns\n\n8\n1\n\n53\n11\n\nC\n\nD\nO\n\nC\n00\n\n02\n0\n\nSr\nv(\n\n8,\n1)\n\nSe\nt\n\nSe\nco\n\nnd\nC\n\nou\nn\n\nSr\nv\n\n(8\n,1\n\n)\nSe\n\nt\nSe\n\nco\nnd\n\nIm\ng.\n\nB\noo\n\nt\nC\n\nou\nnt\n\ner\n8\n\n1\n53\n\n11\nC\n\nD\nO\n\nC\n00\n\n02\n1\n\nSr\nv(\n\n8,\n1)\n\nR\nea\n\nd\nSe\n\nco\nn\n\nC\nou\n\nn\nSr\n\nv\n(8\n\n,1\n)\n\nR\nea\n\nd\nSe\n\nco\nnd\n\nIm\ng.\n\nB\noo\n\nt\nC\n\nou\nnt\n\ner\n8\n\n1\n53\n\n11\nC\n\nI/\nO\n\n-B\noa\n\nrd\nT\n\nC\ns\n\nP\nY\n\nT\nC\n\nkc\nA\n\nDI\nP\n\nA\n.tbuS\n\ne py\nT\n\nno itpircse\nD\n\ngno\nL\n\nno itpi rcse\nD\n\ne\nma\n\nN\n\nC\n11\n\n35\n2\n\n2\nda o\n\nL\nr ets ig e\n\nR\n)2, 2( vr S\n\n00000\nCI\n\nD O\nB\n\nSW\nT\n\nC\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nD\nSC\n\n00\n00\n\n1\nSr\n\nv(\n3,\n\n1)\nde\n\nfi n\ne\n\nne\nw\n\nH\nK\n\nr\nSr\n\nv(\n3,\n\n1)\nde\n\nfin\ne\n\nne\nw\n\nH\nK\n\nre\npo\n\nrt\n3\n\n1\n53\n\n9\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 519\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSC\n\n00\n00\n\n2\nSr\n\nv(\n3,\n\n2)\nde\n\nfin\ne\n\nne\nw\n\nD\nG\n\nr\nSr\n\nv(\n3,\n\n2)\nde\n\nfin\ne\n\nne\nw\n\ndi\nag\n\nno\nst\n\nic\ns\n\nre\npo\n\nrt\n3\n\n2\n53\n\n9\nC\n\nD\nSC\n\n00\n00\n\n3\nSr\n\nv(\n3,\n\n3)\nC\n\nle\nar\n\nH\nK\n\nre\np\n\nde\nf\n\nSr\nv(\n\n3,\n3)\n\nC\nle\n\nar\nH\n\nou\nse\n\nke\nep\n\nin\ng\n\nre\npo\n\nrt\nde\n\nfin\niti\n\non\ns\n\n3\n3\n\n53\n9\n\nC\n\nD\nSC\n\n00\n00\n\n4\nSr\n\nv(\n3,\n\n4)\nC\n\nle\nar\n\nD\nG\n\nre\np\n\nde\nf\n\nSr\nv(\n\n3,\n4)\n\nC\nle\n\nar\ndi\n\nag\nno\n\nst\nic\n\ns\nre\n\npo\nrt\n\nde\nfin\n\niti\non\n\n3\n4\n\n53\n9\n\nC\n\nD\nSC\n\n00\n00\n\n5\nSr\n\nv(\n3,\n\n5)\nE\n\nna\nbl\n\ne\nH\n\nK\nre\n\npG\nen\n\nSr\nv(\n\n3,\n5)\n\nE\nna\n\nbl\ne\n\nho\nus\n\nek\nee\n\npi\nng\n\nre\npo\n\nrt\nge\n\nne\nra\n\ntio\nn\n\n3\n5\n\n53\n9\n\nC\n\nD\nSC\n\n00\n00\n\n6\nSr\n\nv(\n3,\n\n6)\nD\n\nis\nab\n\nle\nH\n\nK\nre\n\npG\nen\n\nSr\nv(\n\n3,\n6)\n\nD\nis\n\nab\nle\n\nho\nus\n\nek\nee\n\npi\nng\n\nre\npo\n\nrt\nge\n\nne\nra\n\ntio\nn\n\n3\n6\n\n53\n9\n\nC\n\nD\nSC\n\n00\n00\n\n7\nSr\n\nv(\n3,\n\n7)\nE\n\nna\nbl\n\ne\nD\n\nG\nre\n\npG\nen\n\nSr\nv(\n\n3,\n7)\n\nE\nna\n\nbl\ne\n\ndi\nag\n\nno\nst\n\nic\nre\n\npo\nrt\n\nge\nne\n\nra\ntio\n\nn\n3\n\n7\n53\n\n9\nC\n\nD\nSC\n\n00\n00\n\n8\nSr\n\nv(\n3,\n\n8)\nD\n\nis\nab\n\nle\nD\n\nG\nre\n\npG\nen\n\nSr\nv(\n\n3,\n8)\n\nD\nis\n\nab\nle\n\ndi\nag\n\nno\nst\n\nic\nre\n\npo\nrt\n\nge\nne\n\nra\ntio\n\nn\n3\n\n8\n53\n\n9\nC\n\nD\nSC\n\n00\n00\n\n9\nSr\n\nv(\n3,\n\n9)\nR\n\nep\nor\n\ntH\nK\n\nD\nef\n\ns\nSr\n\nv(\n3,\n\n9)\nR\n\nep\nor\n\nt\nho\n\nus\nek\n\nee\npi\n\nng\nre\n\npo\nrt\n\nde\nfin\n\niti\non\n\ns\n3\n\n9\n53\n\n9\nC\n\nD\nSC\n\n00\n01\n\n1\nSr\n\nv(\n3,\n\n11\n)\n\nR\nep\n\nor\nt\n\nD\nG\n\nD\nef\n\ns\nSr\n\nv(\n3,\n\n11\n)\n\nR\nep\n\nor\nt\n\ndi\nag\n\nno\nst\n\nic\nre\n\npo\nrt\n\nde\nfin\n\niti\non\n\ns\n3\n\n11\n53\n\n9\nC\n\nD\nSC\n\n00\n05\n\n0\nSr\n\nv(\n5,\n\n5)\nE\n\nna\nbl\n\neE\nve\n\nnt\nR\n\nep\nE\n\nna\nbl\n\ne\nE\n\nve\nnt\n\nR\nep\n\nor\nt\n\nG\nen\n\ner\nat\n\nio\nn\n\n5\n5\n\n53\n9\n\nC\n\nD\nSC\n\n00\n05\n\n1\nSr\n\nv(\n5,\n\n6)\nD\n\nis\nab\n\nle\nE\n\nve\nnt\n\nR\nep\n\nD\nis\n\nab\nle\n\nE\nve\n\nnt\nR\n\nep\nor\n\nt\nG\n\nen\ner\n\nat\nio\n\nn\n5\n\n6\n53\n\n9\nC\n\nD\nSC\n\n00\n05\n\n5\nSr\n\nv(\n5,\n\n12\n8)\n\nIn\nje\n\nct\nE\n\nve\nnt\n\nIn\nje\n\nct\nE\n\nve\nnt\n\nT\nC\n\nfo\nr\n\nte\nst\n\npu\nrp\n\nos\nes\n\n5\n12\n\n8\n53\n\n9\nC\n\nD\nSC\n\n00\n20\n\n1\nSr\n\nv(\n2,\n\n13\n2)\n\nC\nha\n\nnn\nel\n\nSw\nitc\n\nh\nD\n\nis\ntr\n\nib\nut\n\ne\nC\n\nha\nnn\n\nel\nSw\n\nitc\nh\n\nC\nom\n\nm\nan\n\nd\n2\n\n13\n2\n\n53\n11\n\nC\n\nD\nSC\n\n00\n20\n\n3\nSr\n\nv(\n2,\n\n13\n3)\n\nW\nir\n\net\nap\n\npi\nng\n\nO\nn\n\nE\nna\n\nbl\ne\n\nW\nir\n\net\nap\n\npi\nng\n\n,\nD\n\now\nnl\n\nin\nk\n\nD\nev\n\nic\ne-\n\nD\nH\n\nco\nm\n\nm\nun\n\nic\nat\n\nio\nn\n\nvi\na\n\n(2\n,1\n\n29\n)\n\n2\n13\n\n3\n53\n\n11\nC\n\nD\nSC\n\n00\n20\n\n4\nSr\n\nv(\n2,\n\n13\n3)\n\nW\nir\n\net\nap\n\npi\nng\n\nO\nf\n\nD\nis\n\nab\nle\n\nW\nir\n\net\nap\n\npi\nng\n\n,D\now\n\nnl\nin\n\nk\nD\n\nev\nic\n\ne-\nD\n\nH\nco\n\nm\nm\n\nun\nic\n\nat\nio\n\nn\nvi\n\na\n(2\n\n,1\n29\n\n)\n2\n\n13\n3\n\n53\n11\n\nC\n\nD\nSC\n\n01\n20\n\n1\nSr\n\nv(\n12\n\n,1\n31\n\n)\nE\n\nna\nbl\n\neM\non\n\nito\nSr\n\nv\n(1\n\n2,\n13\n\n1)\nE\n\nna\nbl\n\ne\nM\n\non\nito\n\nri\nng\n\nof\nPa\n\nra\nm\n\net\ner\n\ns\nw\n\nith\nin\n\non\ne\n\nob\nje\n\nct\n12\n\n13\n1\n\n53\n11\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n520 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSC\n\n01\n20\n\n2\nSr\n\nv(\n12\n\n,1\n32\n\n)\nD\n\nis\nab\n\nle\nM\n\non\nit\n\nSr\nv\n\n(1\n2,\n\n13\n2)\n\nD\nis\n\nab\nle\n\nM\non\n\nito\nri\n\nng\nof\n\nPa\nra\n\nm\net\n\ner\ns\n\nw\nith\n\nin\non\n\ne\nob\n\nje\nct\n\n12\n13\n\n2\n53\n\n11\nC\n\nD\nSC\n\n01\n20\n\n3\nSr\n\nv(\n12\n\n,3\n)\n\nSe\ntM\n\nax\nR\n\nep\nD\n\nel\nay\n\nSr\nv\n\n(1\n2,\n\n3)\nSe\n\nt\nm\n\nax\nim\n\num\nre\n\npo\nrt\n\nin\ng\n\nde\nla\n\ny\n12\n\n3\n53\n\n11\nC\n\nD\nSC\n\n01\n27\n\n0\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\ny\n\nM\non\n\nitU\n8\n\nSr\nv\n\n(1\n2,\n\n7)\nM\n\nod\nif\n\ny\nM\n\non\nito\n\nr\nIn\n\nfo\nrm\n\nat\nio\n\nn\nfo\n\nr\nui\n\nnt\n8\n\npa\nra\n\nm\net\n\ner\ns\n\n12\n7\n\n53\n11\n\nC\n\nD\nSC\n\n01\n27\n\n1\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\nyM\n\non\nitU\n\n16\nSr\n\nv\n(1\n\n2,\n7)\n\nM\nod\n\nif\ny\n\nM\non\n\nito\nr\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\nfo\nr\n\nui\nnt\n\n16\npa\n\nra\nm\n\net\ner\n\ns\n12\n\n7\n53\n\n11\nC\n\nD\nSC\n\n01\n27\n\n2\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\nyM\n\non\nitU\n\n32\nSr\n\nv\n(1\n\n2,\n7)\n\nM\nod\n\nif\ny\n\nM\non\n\nito\nr\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\nfo\nr\n\nui\nnt\n\n32\npa\n\nra\nm\n\net\ner\n\ns\n12\n\n7\n53\n\n11\nC\n\nD\nSC\n\n01\n27\n\n3\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\ny\n\nM\non\n\nitI\n8\n\nSr\nv\n\n(1\n2,\n\n7)\nM\n\nod\nif\n\ny\nM\n\non\nito\n\nr\nIn\n\nfo\nrm\n\nat\nio\n\nn\nfo\n\nr\nin\n\nt8\npa\n\nra\nm\n\net\ner\n\ns\n12\n\n7\n53\n\n11\nC\n\nD\nSC\n\n01\n27\n\n4\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\nyM\n\non\nitI\n\n16\nSr\n\nv\n(1\n\n2,\n7)\n\nM\nod\n\nif\ny\n\nM\non\n\nito\nr\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\nfo\nr\n\nin\nt1\n\n6\npa\n\nra\nm\n\net\ner\n\ns\n12\n\n7\n53\n\n11\nC\n\nD\nSC\n\n01\n27\n\n5\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\nyM\n\non\nitI\n\n32\nSr\n\nv\n(1\n\n2,\n7)\n\nM\nod\n\nif\ny\n\nM\non\n\nito\nr\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\nfo\nr\n\nin\nt3\n\n2\npa\n\nra\nm\n\net\ner\n\ns\n12\n\n7\n53\n\n11\nC\n\nD\nSC\n\n01\n27\n\n6\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\nyM\n\non\nitF\n\nL\nO\n\nSr\nv\n\n(1\n2,\n\n7)\nM\n\nod\nif\n\ny\nM\n\non\nito\n\nr\nIn\n\nfo\nrm\n\nat\nio\n\nn\nfo\n\nr fl\noa\n\nt\npa\n\nra\nm\n\net\ner\n\ns\n12\n\n7\n53\n\n11\nC\n\nD\nSC\n\n01\n27\n\n7\nSr\n\nv(\n12\n\n,7\n)\n\nM\nod\n\nif\nyM\n\non\nitD\n\nO\nU\n\nSr\nv\n\n(1\n2,\n\n7)\nM\n\nod\nif\n\ny\nM\n\non\nito\n\nr\nIn\n\nfo\nrm\n\nat\nio\n\nn\nfo\n\nr\ndo\n\nub\nle\n\npa\nra\n\nm\net\n\ner\ns\n\n12\n7\n\n53\n11\n\nC\n\nD\nSC\n\n31\n00\n\n0\nSr\n\nv(\n3,\n\n1)\nD\n\nefi\nne\n\nH\nK\n\n31\n00\n\n0\nSr\n\nv(\n3,\n\n1)\nD\n\nefi\nne\n\nne\nw\n\nH\nK\n\nre\npo\n\nrt\n:\n\n31\n00\n\n0\n3\n\n1\n53\n\n9\nC\n\nP\now\n\ner\nSu\n\nbs\nys\n\nte\nm\n\nT\nC\n\ns\n\nP\nY\n\nT\nC\n\nkc\nA\n\nDI\nP\n\nA\n. tbu S\n\nepy\nT\n\nn oi tp irc se\nD\n\ngno\nL\n\nn oi tp irc se\nD\n\ne\nma\n\nN PY\nC\n\n00\n10\n\n0\n(8\n\n,1\n)\n\nSe\nt\n\nB\nat\n\ntM\nax\n\nC\nap\n\nac\nit\n\nSe\nt\n\nm\nax\n\nim\num\n\nca\npa\n\nci\nty\n\nof\nba\n\ntte\nry\n\nst\nri\n\nng\nin\n\nth\ne\n\nPS\nS\n\nC\non\n\ntr\nol\n\nle\nr\n\n8\n1\n\n53\n9\n\nC\n\nPY\nC\n\n00\n20\n\n0\n(8\n\n,1\n)\n\nSe\ntS\n\noC\nes\n\ntim\nat\n\nPa\nra\n\nS0\nSe\n\nt\nSo\n\nC\nes\n\ntim\nat\n\nio\nn\n\npa\nra\n\nm\net\n\ner\ns\n\nfo\nr\n\nSt\nri\n\nng\n0\n\nin\nPS\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n8\n\n1\n53\n\n11\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 521\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\n00\n20\n\n1\n(8\n\n,1\n)\n\nSe\ntS\n\noC\nes\n\ntim\nat\n\nPa\nra\n\nS1\nSe\n\nt\nSo\n\nC\nes\n\ntim\nat\n\nio\nn\n\npa\nra\n\nm\net\n\ner\ns\n\nfo\nr\n\nSt\nri\n\nng\n1\n\nin\nPS\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n8\n\n1\n53\n\n11\nC\n\nPY\nC\n\n00\n20\n\n2\n(8\n\n,1\n)\n\nSe\ntS\n\noC\nes\n\ntim\nat\n\nPa\nra\n\nS2\nSe\n\nt\nSo\n\nC\nes\n\ntim\nat\n\nio\nn\n\npa\nra\n\nm\net\n\ner\ns\n\nfo\nr\n\nSt\nri\n\nng\n2\n\nin\nPS\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n8\n\n1\n53\n\n11\nC\n\nPY\nC\n\n00\n30\n\n0\n(8\n\n,1\n)\n\nU\npd\n\nat\neP\n\nC\nD\n\nU\nSo\n\nC\npa\n\nra\nm\n\nU\npd\n\nat\ne\n\nSo\nC\n\nes\ntim\n\nat\nio\n\nn\npa\n\nra\nm\n\net\ner\n\ns\nin\n\nth\ne\n\nPC\nD\n\nU\nfr\n\nom\nth\n\ne\nPS\n\nS\nC\n\ntr\nl\n\n8\n1\n\n53\n15\n\nC\n\nPY\nC\n\n12\n00\n\n0\n(1\n\n2,\n7)\n\nPS\nSM\n\nod\nif\n\nM\non\n\nitI\nnf\n\no\nSr\n\nv\n(1\n\n2,\n7)\n\nM\nod\n\nif\ny\n\nM\non\n\nito\nri\n\nng\nIn\n\nfo\nfo\n\nr\nPS\n\nS\nM\n\non\nito\n\nrs\n12\n\n7\n53\n\n11\nC\n\nPY\nC\n\n12\n00\n\n1\n(1\n\n2,\n13\n\n7)\nSe\n\ntM\non\n\nitC\nom\n\npP\nw\n\nr\nSr\n\nv\n(1\n\n2,\n13\n\n7)\nM\n\nod\nif\n\ny\nM\n\non\nito\n\nr\nIn\n\nfo\nfo\n\nr\nC\n\nom\npo\n\nne\nnt\n\nPo\nw\n\ner\nM\n\non\nito\n\nr\n12\n\n13\n7\n\n53\n11\n\nC\n\nPY\nC\n\n60\n00\n\n0\nSr\n\nv6\nL\n\noa\ndB\n\nat\ntS\n\noC\nV\n\nal\nue\n\ns\nM\n\nem\nor\n\ny\nL\n\noa\nd\n\nfo\nr\n\nPS\nS\n\nB\nat\n\nte\nry\n\nSo\nC\n\nva\nri\n\nab\nle\n\ns\nto\n\nPS\nS\n\nC\ntr\n\nl\n6\n\n13\n2\n\n53\n11\n\nC\n\nPY\nC\n\n60\n00\n\n1\nSr\n\nv6\nL\n\noa\ndM\n\nax\nD\n\nel\nta\n\nC\nap\n\nac\nit\n\nM\nem\n\nor\ny\n\nL\noa\n\nd\nM\n\nax\nD\n\nel\nta\n\nC\nap\n\nac\nity\n\nto\nPS\n\nS\nC\n\ntr\nl\n\n6\n13\n\n2\n53\n\n11\nC\n\nPY\nC\n\n60\n00\n\n2\nSr\n\nv6\nL\n\noa\ndP\n\nC\nD\n\nU\nup\n\nda\nIn\n\nte\nrv\n\nM\nem\n\nor\ny\n\nL\noa\n\nd\nPC\n\nD\nU\n\nU\npd\n\nat\ne\n\nIn\nte\n\nrv\nal\n\nto\nPS\n\nS\nC\n\ntr\nl\n\n6\n13\n\n2\n53\n\n11\nC\n\nPY\nC\n\n60\n00\n\n3\nSr\n\nv6\nL\n\noa\ndP\n\nan\nD\n\nep\nlo\n\nyF\nla\n\ng\nM\n\nem\nor\n\ny\nL\n\noa\nd\n\nPa\nne\n\nl\nD\n\nep\nlo\n\nym\nen\n\nt\nFl\n\nag\nto\n\nPS\nS\n\nC\ntr\n\nl\n6\n\n13\n2\n\n53\n11\n\nC\n\nPY\nC\n\n61\n00\n\n0\nSr\n\nv6\nD\n\num\npB\n\nat\ntlS\n\noC\nV\n\nal\nM\n\nem\nor\n\ny\nD\n\num\np\n\nfo\nr\n\nPS\nS\n\nB\nat\n\nte\nry\n\nSo\nC\n\nva\nri\n\nab\nle\n\ns\nfr\n\nom\nPS\n\nS\nC\n\ntr\nl\n\n6\n13\n\n5\n53\n\n11\nC\n\nPY\nC\n\n61\n00\n\n1\nSr\n\nv6\nD\n\num\npM\n\nax\nD\n\nel\nta\n\nC\nap\n\nac\nit\n\nM\nem\n\nor\ny\n\nD\num\n\np\nM\n\nax\nD\n\nel\nta\n\nC\nap\n\nac\nity\n\nfr\nom\n\nPS\nS\n\nC\ntr\n\nl\n6\n\n13\n5\n\n53\n11\n\nC\n\nPY\nC\n\n61\n00\n\n2\nSr\n\nv6\nD\n\num\npP\n\nC\nD\n\nU\nup\n\nda\nIn\n\nte\nrv\n\nM\nem\n\nor\ny\n\nD\num\n\np\nPC\n\nD\nU\n\nU\npd\n\nat\ne\n\nIn\nte\n\nrv\nal\n\nfr\nom\n\nPS\nS\n\nC\ntr\n\nl\n6\n\n13\n5\n\n53\n11\n\nC\n\nPY\nC\n\n61\n00\n\n3\nSr\n\nv6\nD\n\num\npP\n\nan\nD\n\nep\nlo\n\nyF\nla\n\ng\nM\n\nem\nor\n\ny\nD\n\num\np\n\nPa\nne\n\nl\nD\n\nep\nlo\n\nym\nen\n\nt\nFl\n\nag\nfr\n\nom\nPS\n\nS\nC\n\ntr\nl\n\n6\n13\n\n5\n53\n\n11\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n522 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\n S\n\n/C\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n01\nH\n\nPC\n1\n\non\nO\n\nB\nC\n\nco\nre\n\nN\n1\n\nsw\nitc\n\nh\nC\n\nno\nhct i\n\nws\n1\n\nNe ro c\nC\n\nB\nO\n\n1\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n02\nH\n\nPC\n2\n\non\nO\n\nB\nC\n\nco\nre\n\nN\n2\n\nsw\nitc\n\nh\nC\n\nno\nhct i\n\nws\n1\n\nReroc\nC\n\nB\nO\n\n2\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n03\nH\n\nPC\n3\n\non\nO\n\nB\nC\n\nco\nre\n\nR\n1\n\nsw\nitc\n\nh\nC\n\nno\nhc ti\n\nws\n1\n\nReroc\nC\n\nB\nO\n\n3\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n04\nH\n\nPC\n4\n\non\nO\n\nB\nC\n\nco\nre\n\nR\n2\n\nsw\nitc\n\nh\nC\n\nno\nh cti\n\nws\n2\n\nRe roc\nC\n\nB\nO\n\n4\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n05\nH\n\nPC\n5\n\non\nIO\n\nbo\nar\n\ndN\n1\n\nsw\nitc\n\nh\nC\n\nno\nhct i\n\nws\n1\n\nN dr aob\nO I\n\n5\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n06\nH\n\nPC\n6\n\non\nIO\n\nbo\nar\n\ndN\n2\n\nsw\nitc\n\nh\nC\n\nno\nhc ti\n\nws\n2\n\nNd raob\nOI\n\n6\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n07\nH\n\nPC\n7\n\non\nIO\n\nbo\nar\n\ndR\n1\n\nsw\nitc\n\nh\nC\n\nno\nhct i\n\nws\n1\n\nRdraob\nOI\n\n7\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n08\nH\n\nPC\n8\n\non\nIO\n\nbo\nar\n\ndR\n2\n\nsw\nitc\n\nh\nC\n\nno\nhcti\n\nw s\n2\n\nRdraob\nO I\n\n8\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n09\nH\n\nPC\n9\n\non\nC\n\nC\nSD\n\nS0\n1\n\nsw\nitc\n\nh\nC\n\nno\nhc ti\n\nws\n1\n\n0S\nDS\n\nC\nC\n\n9\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n0A\nH\n\nPC\n10\n\non\nC\n\nC\nSD\n\nS0\n2\n\nsw\nitc\n\nh\nC\n\nno\nhcti\n\nw s\n2\n\n0 S\nDS\n\nC\nC\n\n0 1\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n0B\nH\n\nPC\n11\n\non\nC\n\nC\nSD\n\nS1\n1\n\nsw\nitc\n\nh\nC\n\nno\nhct i\n\nws\n1\n\n1S\nDS\n\nC\nC\n\n11\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n0C\nH\n\nPC\n12\n\non\nC\n\nC\nSD\n\nS1\n2\n\nsw\nitc\n\nh\nC\n\nno\nhc ti\n\nws\n2\n\n1S\nDS\n\nC\nC\n\n21\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n0D\nH\n\nPC\n13\n\non\nT\n\nT\nC\n\nR\nec\n\n0\nsw\n\nitc\nC\n\nn o\nhct i\n\nws\n0\n\nc e\nR\n\nC\nT\n\nT\n3 1\n\nCP\nH\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 523\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n0E\nH\n\nPC\n14\n\non\nT\n\nT\nC\n\nR\nec\n\n1\nsw\n\nitc\nC\n\nno\nhcti\n\nws\n1\n\nce\nR\n\nC\nT\n\nT\n41\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n0F\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n10\nH\n\nPC\n16\n\non\nPL\n\nO\nC\n\nPo\nw\n\nR\n1\n\nsw\ni\n\nC\nno\n\nhcti\nws\n\n1\nR\n\nwoP\nC\n\nO\nLP\n\n6 1\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n11\nH\n\nPC\n17\n\non\nPL\n\nO\nC\n\nPo\nw\n\nR\n2\n\nsw\ni\n\nH\nPC\n\n17\nPL\n\nO\nC\n\nPo\nw\n\nR\n2\n\nsw\nitc\n\nh\non\n\nC\n\nPY\nC\n\nH\nPC\n\n12\nH\n\nPC\n18\n\non\nD\n\nD\nS\n\nN\nsw\n\nitc\nh\n\nH\nPC\n\n18\nD\n\nD\nS\n\nN\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n13\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n14\nH\n\nPC\n20\n\non\nPL\n\nO\nC\n\nPo\nw\n\nN\n1\n\nsw\ni\n\nH\nPC\n\n20\nPL\n\nO\nC\n\nPo\nw\n\nN\n1\n\nsw\nitc\n\nh\non\n\nC\n\nPY\nC\n\nH\nPC\n\n15\nH\n\nPC\n21\n\non\nPL\n\nO\nC\n\nPo\nw\n\nN\n2\n\nsw\ni\n\nH\nPC\n\n21\nPL\n\nO\nC\n\nPo\nw\n\nN\n2\n\nsw\nitc\n\nh\non\n\nC\n\nPY\nC\n\nH\nPC\n\n16\nH\n\nPC\n22\n\non\nD\n\nD\nS\n\nR\nsw\n\nitc\nh\n\nH\nPC\n\n22\nD\n\nD\nS\n\nR\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n17\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n18\nH\n\nPC\n24\n\non\nT\n\nT\nC\n\ntr\nan\n\nsN\n1\n\nsw\nit\n\nH\nPC\n\n24\nT\n\nT\nC\n\ntr\nan\n\nsN\n1\n\nsw\nitc\n\nh\non\n\nC\n\nPY\nC\n\nH\nPC\n\n19\nH\n\nPC\n25\n\non\nT\n\nT\nC\n\ntr\nan\n\nsN\n2\n\nsw\nit\n\nH\nPC\n\n25\nT\n\nT\nC\n\ntr\nan\n\nsN\n2\n\nsw\nitc\n\nh\non\n\nC\n\nPY\nC\n\nH\nPC\n\n1A\nH\n\nPC\n26\n\non\nST\n\nR\nN\n\nsw\nitc\n\nh\nH\n\nPC\n26\n\nST\nR\n\nN\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n1B\nH\n\nPC\n27\n\non\nR\n\nW\n3\n\nsw\nitc\n\nh\nH\n\nPC\n27\n\nR\nW\n\n3\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n1C\nH\n\nPC\n28\n\non\nST\n\nR\nR\n\nsw\nitc\n\nh\nH\n\nPC\n28\n\nST\nR\n\nR\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n1D\nH\n\nPC\n29\n\non\nFO\n\nG\n3\n\nsw\nitc\n\nh\nH\n\nPC\n29\n\nFO\nG\n\n3\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n1E\nH\n\nPC\n30\n\non\nFO\n\nG\n0\n\nsw\nitc\n\nh\nH\n\nPC\n30\n\nFO\nG\n\n0\nsw\n\nitc\nh\n\non\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n524 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n1F\nH\n\nPC\n31\n\non\nR\n\nW\n0\n\nsw\nitc\n\nh\nH\n\nPC\n31\n\nR\nW\n\n0\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n20\nH\n\nPC\n32\n\non\nFO\n\nG\n1\n\nsw\nitc\n\nh\nH\n\nPC\n32\n\nFO\nG\n\n1\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n21\nH\n\nPC\n33\n\non\nR\n\nW\n1\n\nsw\nitc\n\nh\nH\n\nPC\n33\n\nR\nW\n\n1\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n22\nH\n\nPC\n34\n\non\nFO\n\nG\n2\n\nsw\nitc\n\nh\nH\n\nPC\n34\n\nFO\nG\n\n2\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n23\nH\n\nPC\n35\n\non\nR\n\nW\n2\n\nsw\nitc\n\nh\nH\n\nPC\n35\n\nR\nW\n\n2\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n24\nH\n\nPC\n36\n\non\nM\n\nG\nM\n\n0\nsw\n\nitc\nh\n\nH\nPC\n\n36\nM\n\nG\nM\n\n0\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n25\nH\n\nPC\n37\n\non\nM\n\nG\nM\n\n1\nsw\n\nitc\nh\n\nH\nPC\n\n37\nM\n\nG\nM\n\n1\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n26\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n27\nH\n\nPC\n39\n\non\nM\n\nG\nT\n\nR\nsw\n\nitc\nh\n\nH\nPC\n\n39\nM\n\nG\nT\n\nR\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n28\nH\n\nPC\n40\n\non\nG\n\nPS\n1\n\nsw\nitc\n\nh\nH\n\nPC\n40\n\nG\nPS\n\n1\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n29\nH\n\nPC\n41\n\non\nG\n\nPS\n0\n\nsw\nitc\n\nh\nH\n\nPC\n41\n\nG\nPS\n\n0\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n2A\nH\n\nPC\n42\n\non\nM\n\nG\nT\n\nN\nsw\n\nitc\nh\n\nH\nPC\n\n42\nM\n\nG\nT\n\nN\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n2B\nH\n\nPC\n43\n\non\nG\n\nPS\n2\n\nsw\nitc\n\nh\nH\n\nPC\n43\n\nG\nPS\n\n2\nsw\n\nitc\nh\n\non\nC\n\nPY\nC\n\nH\nPC\n\n2C\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n2D\nC\n\nPY\nC\n\nH\nPC\n\n2E\nH\n\nPC\n46\n\non\nT\n\nT\nC\n\ntr\nan\n\nsR\n1\n\nsw\nit\n\nH\nPC\n\n46\nT\n\nT\nC\n\ntr\nan\n\nsR\n1\n\nsw\nitc\n\nh\non\n\nC\n\nPY\nC\n\nH\nPC\n\n2F\nH\n\nPC\n47\n\non\nT\n\nT\nC\n\ntr\nan\n\nsR\n2\n\nsw\nit\n\nH\nPC\n\n47\nT\n\nT\nC\n\ntr\nan\n\nsR\n2\n\nsw\nitc\n\non\nC\n\nPY\nC\n\nH\nPC\n\n30\nPL\n\nsp\nec\n\ni fi\nc\n\nin\nfi r\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n31\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 525\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n32\nH\n\nPC\n50\n\non\nD\n\nD\nSt\n\nra\nns\n\nR\n1\n\nsw\nit\n\nC\nno\n\nhcti\nws\n\n1\nR snartS\n\nD\nD\n\n05\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n33\nH\n\nPC\n51\n\non\nD\n\nD\nSt\n\nra\nns\n\nR\n2\n\nsw\nit\n\nC\nno\n\nhcti\nws\n\n2\nRsnartS\n\nD\nD\n\n15\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n34\nH\n\nPC\n52\n\non\nB\n\nim\net\n\nH\nea\n\nte\nrR\n\nsw\nC\n\nno\nhcti\n\nws\nRre tae\n\nHte\nm i\n\nB\n25\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n35\nH\n\nPC\n53\n\non\nB\n\nim\net\n\nH\nea\n\nte\nrN\n\nsw\nC\n\nno\nhcti\n\nw s\nNretae\n\nHte\nmi\n\nB\n35\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n36\nH\n\nPC\n54\n\non\nD\n\nD\nSt\n\nra\nns\n\nN\n1\n\nsw\nit\n\nC\nno\n\nh cti\nws\n\n1\nN snar tS\n\nD\nD\n\n45\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n37\nH\n\nPC\n55\n\non\nD\n\nD\nSt\n\nra\nns\n\nN\n2\n\nsw\nit\n\nC\nno\n\nhct i\nws\n\n2\nNs na rtS\n\nD\nD\n\n55\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n38\nH\n\nPC\n56\n\non\nH\n\nea\ntP\n\nL\nm\n\nod\n01\n\nsw\ni\n\nC\nno\n\nhcti\nws\n\n10d o\nm\n\nLPt ae\nH\n\n65\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n39\nH\n\nPC\n57\n\non\nH\n\nea\ntP\n\nL\nm\n\nod\n02\n\nsw\ni\n\nC\nno\n\nhcti\nws\n\n2 0do\nm\n\nLPtae\nH\n\n7 5\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n3A\nH\n\nPC\n58\n\non\nH\n\nea\ntC\n\nO\nm\n\nod\n01\n\nsw\ni\n\nC\nno\n\nhct i\nws\n\n10do\nm\n\nO\nCta e\n\nH\n8 5\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n3B\nH\n\nPC\n59\n\non\nH\n\nea\ntC\n\nO\nm\n\nod\n02\n\nsw\ni\n\nC\nno\n\nhcti\nws\n\n2 0do\nm\n\nO\nCt ae\n\nH\n9 5\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n3C\nH\n\nPC\n60\n\non\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n01\nsw\n\nC\nno\n\nhcti\nws\n\n10 do\nm\n\nV\nRS tae\n\nH\n06\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n3D\nH\n\nPC\n61\n\non\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n02\nsw\n\nC\nno\n\nhcti\nws\n\n20d o\nm\n\nV\nR Stae\n\nH\n16\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n3E\nH\n\nPC\n62\n\non\nH\n\nea\ntP\n\nL\nm\n\nod\n11\n\nsw\ni\n\nC\nno\n\nhcti\nw s\n\n1 1do\nm\n\nL Pt ae\nH\n\n2 6\nCP\n\nH\n\n(c\non\n\ntin\nue\n\nd)\n\n526 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n3F\nH\n\nPC\n63\n\non\nH\n\nea\ntP\n\nL\nm\n\nod\n12\n\nsw\ni\n\nC\nno\n\nhcti\nws\n\n21 do\nm\n\nLPt ae\nH\n\n36\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n40\nH\n\nPC\n64\n\non\nH\n\nea\ntC\n\nO\nm\n\nod\n11\n\nsw\ni\n\nC\nno\n\nhcti\nws\n\n11do\nm\n\nO\nCtae\n\nH\n46\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n41\nH\n\nPC\n65\n\non\nH\n\nea\ntC\n\nO\nm\n\nod\n12\n\nsw\ni\n\nC\nno\n\nhct i\nws\n\n21do\nm\n\nO\nCta e\n\nH\n56\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n42\nH\n\nPC\n66\n\non\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n11\nsw\n\nC\nno\n\nhcti\nws\n\n11do\nm\n\nV\nR Stae\n\nH\n66\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n43\nH\n\nPC\n67\n\non\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n12\nsw\n\nC\nno\n\nhct i\nws\n\n21do\nm\n\nV\nRS tae\n\nH\n76\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n44\nH\n\nPC\n68\n\non\nR\n\net\naM\n\nec\nh\n\nN\n1\n\nsw\ni\n\nC\nno\n\nhc ti\nws\n\n1\nN\n\nhce\nMat e\n\nR\n86\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n45\nH\n\nPC\n69\n\non\nR\n\net\naM\n\nec\nh\n\nN\n2\n\nsw\ni\n\nC\nno\n\nh cti\nws\n\n2\nN\n\nhc e\nMa te\n\nR\n96\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n46\nH\n\nPC\n70\n\non\nR\n\net\naM\n\nec\nh\n\nR\n1\n\nsw\ni\n\nC\nno\n\nhcti\nws\n\n1\nR\n\nhce\nM ate\n\nR\n0 7\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n47\nH\n\nPC\n71\n\non\nR\n\net\naM\n\nec\nh\n\nR\n2\n\nsw\ni\n\nC\nno\n\nhct i\nws\n\n2\nR\n\nhce\nM at e\n\nR\n1 7\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n48\nH\n\nPC\n72\n\non\nD\n\nO\nM\n\n1\nsw\n\nitc\nh\n\nC\nno\n\nhct i\nws\n\n1\nM\n\nO\nD\n\n2 7\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n49\nH\n\nPC\n73\n\non\nD\n\nO\nM\n\n2\nsw\n\nitc\nh\n\nC\nn o\n\nhc ti\nws\n\n2\nM\n\nO\nD\n\n37\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n4A\nC\n\nPY\nC\n\nH\nPC\n\n4B\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n4C\nC\n\nPY\nC\n\nH\nPC\n\n4D\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 527\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n4E\nH\n\nPC\n78\n\nof\nO\n\nB\nC\n\nco\nre\n\nN\n1\n\nsw\nitc\n\nC\nffo\n\nS\nE\n\nH\nC\n\nT I\nWS_\n\nU\nD\n\nCP\n87\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n4F\nH\n\nPC\n79\n\nof\nO\n\nB\nC\n\nco\nre\n\nN\n2\n\nsw\nitc\n\nC\nffo\n\nhc ti\nws\n\n2\nN eroc\n\nC\nB\n\nO\n97\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n50\nH\n\nPC\n80\n\nof\nO\n\nB\nC\n\nco\nre\n\nR\n1\n\nsw\nitc\n\nC\nffo\n\nhcti\nws\n\n1\nReroc\n\nC\nB\n\nO\n08\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n51\nH\n\nPC\n81\n\nof\nO\n\nB\nC\n\nco\nre\n\nR\n2\n\nsw\nitc\n\nC\nffo\n\nh cti\nws\n\n2\nRe roc\n\nC\nB\n\nO\n18\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n52\nH\n\nPC\n82\n\nof\nIO\n\nbo\nar\n\ndN\n1\n\nsw\nitc\n\nC\nffo\n\nhct i\nws\n\n1\nN dr ao b\n\nOI\n28\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n53\nH\n\nPC\n83\n\nof\nIO\n\nbo\nar\n\ndN\n2\n\nsw\nitc\n\nC\nffo\n\nhc ti\nws\n\n2\nNd raob\n\nOI\n38\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n54\nH\n\nPC\n84\n\nof\nIO\n\nbo\nar\n\ndR\n1\n\nsw\nitc\n\nC\nffo\n\nhct i\nws\n\n1\nR draob\n\nOI\n48\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n55\nH\n\nPC\n85\n\nof\nIO\n\nbo\nar\n\ndR\n2\n\nsw\nitc\n\nC\nffo\n\nhcti\nws\n\n2\nRdraob\n\nOI\n5 8\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n56\nH\n\nPC\n86\n\nof\nC\n\nC\nSD\n\nS0\n1\n\nsw\nitc\n\nh\nC\n\nffo\nhc ti\n\nws\n1\n\n0S\nDS\n\nC\nC\n\n6 8\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n57\nH\n\nPC\n87\n\nof\nC\n\nC\nSD\n\nS0\n2\n\nsw\nitc\n\nh\nC\n\nffo\nhcti\n\nw s\n2\n\n0 S\nDS\n\nC\nC\n\n7 8\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n58\nH\n\nPC\n88\n\nof\nC\n\nC\nSD\n\nS1\n1\n\nsw\nitc\n\nh\nC\n\nffo\nhct i\n\nws\n1\n\n1S\nDS\n\nC\nC\n\n88\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n59\nH\n\nPC\n89\n\nof\nC\n\nC\nSD\n\nS1\n2\n\nsw\nitc\n\nh\nC\n\nffo\nhc ti\n\nws\n2\n\n1S\nDS\n\nC\nC\n\n98\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n5A\nH\n\nPC\n90\n\nof\nT\n\nT\nC\n\nR\nec\n\n0\nsw\n\nitc\nC\n\nff o\nhct i\n\nws\n0\n\nc e\nR\n\nC\nT\n\nT\n0 9\n\nCP\nH\n\n(c\non\n\ntin\nue\n\nd)\n\n528 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n5B\nH\n\nPC\n91\n\nof\nT\n\nT\nC\n\nR\nec\n\n1\nsw\n\nitc\nC\n\nffo\nhcti\n\nws\n1\n\nce\nR\n\nC\nT\n\nT\n19\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n5C\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n5D\nH\n\nPC\n93\n\nof\nPL\n\nO\nC\n\nPo\nw\n\nN\n1\n\nsw\ni\n\nC\nffo\n\nhcti\nws\n\n1\nN\n\nwoP\nC\n\nO\nLP\n\n3 9\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n5E\nH\n\nPC\n94\n\nof\nPL\n\nO\nC\n\nPo\nw\n\nN\n2\n\nsw\ni\n\nH\nPC\n\n94\nPL\n\nO\nC\n\nPo\nw\n\nN\n2\n\nsw\nitc\n\nh\nof\n\nf\nC\n\nPY\nC\n\nH\nPC\n\n5F\nH\n\nPC\n95\n\nof\nD\n\nD\nS\n\nN\nsw\n\nitc\nh\n\nH\nPC\n\n95\nD\n\nD\nS\n\nN\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n60\nPL\n\nsp\nec\n\ni fi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n61\nH\n\nPC\n97\n\nof\nPL\n\nO\nC\n\nPo\nw\n\nR\n1\n\nsw\ni\n\nH\nPC\n\n97\nPL\n\nO\nC\n\nPo\nw\n\nR\n1\n\nsw\nitc\n\nh\nof\n\nf\nC\n\nPY\nC\n\nH\nPC\n\n62\nH\n\nPC\n98\n\nof\nPL\n\nO\nC\n\nPo\nw\n\nR\n2\n\nsw\ni\n\nH\nPC\n\n98\nPL\n\nO\nC\n\nPo\nw\n\nR\n2\n\nsw\nitc\n\nh\nof\n\nf\nC\n\nPY\nC\n\nH\nPC\n\n63\nH\n\nPC\n99\n\nof\nD\n\nD\nS\n\nR\nsw\n\nitc\nh\n\nH\nPC\n\n99\nD\n\nD\nS\n\nR\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n64\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n65\nH\n\nPC\n10\n\n1\nof\n\nT\nT\n\nC\ntr\n\nan\nsN\n\n1\nsw\n\ni\nH\n\nPC\n10\n\n1\nT\n\nT\nC\n\ntr\nan\n\nsN\n1\n\nsw\nitc\n\nh\nof\n\nf\nC\n\nPY\nC\n\nH\nPC\n\n66\nH\n\nPC\n10\n\n2\nof\n\nT\nT\n\nC\ntr\n\nan\nsN\n\n2\nsw\n\ni\nH\n\nPC\n10\n\n2\nT\n\nT\nC\n\ntr\nan\n\nsN\n2\n\nsw\nitc\n\nh\nof\n\nf\nC\n\nPY\nC\n\nH\nPC\n\n67\nH\n\nPC\n10\n\n3\nof\n\nST\nR\n\nN\nsw\n\nitc\nh\n\nH\nPC\n\n10\n3\n\nST\nR\n\nN\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n68\nH\n\nPC\n10\n\n4\nof\n\nR\nW\n\n3\nsw\n\nitc\nh\n\nH\nPC\n\n10\n4\n\nR\nW\n\n3\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n69\nH\n\nPC\n10\n\n5\nof\n\nST\nR\n\nR\nsw\n\nitc\nh\n\nH\nPC\n\n10\n5\n\nST\nR\n\nR\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n6A\nH\n\nPC\n10\n\n6\nof\n\nFO\nG\n\n3\nsw\n\nitc\nh\n\nH\nPC\n\n10\n6\n\nFO\nG\n\n3\nsw\n\nitc\nh\n\nof\nf\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 529\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n6B\nH\n\nPC\n10\n\n7\nof\n\nFO\nG\n\n0\nsw\n\nitc\nh\n\nC\nffo\n\nhcti\nws\n\n0\nG\n\nOF\n701\n\nC P\nH\n\nC\nffo\n\nhct i\nws\n\n0\nW\n\nR\n801\n\nCP\nH\n\nhcti\nws\n\n0\nW\n\nR\nfo\n\n801\nCP\n\nH\nC6\n\nCP\nH\n\nC\nYP PY\n\nC\nH\n\nPC\n6D\n\nH\nPC\n\n10\n9\n\nof\nFO\n\nG\n1\n\nsw\nitc\n\nh\nC\n\nffo\nhct i\n\nws\n1\n\nG\nOF\n\n901\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n6E\nH\n\nPC\n11\n\n0\nof\n\nR\nW\n\n1\nsw\n\nitc\nh\n\nH\nPC\n\n11\n0\n\nR\nW\n\n1\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n6F\nH\n\nPC\n11\n\n1\nof\n\nFO\nG\n\n2\nsw\n\nitc\nh\n\nH\nPC\n\n11\n1\n\nFO\nG\n\n2\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n70\nH\n\nPC\n11\n\n2\nof\n\nR\nW\n\n2\nsw\n\nitc\nh\n\nH\nPC\n\n11\n2\n\nR\nW\n\n2\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n71\nH\n\nPC\n11\n\n3\nof\n\nM\nG\n\nM\n0\n\nsw\nitc\n\nh\nH\n\nPC\n11\n\n3\nM\n\nG\nM\n\n0\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n72\nH\n\nPC\n11\n\n4\nof\n\nM\nG\n\nM\n1\n\nsw\nitc\n\nh\nH\n\nPC\n11\n\n4\nM\n\nG\nM\n\n1\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n73\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n74\nH\n\nPC\n11\n\n6\nof\n\nM\nG\n\nT\nR\n\nsw\nitc\n\nh\nH\n\nPC\n11\n\n6\nM\n\nG\nT\n\nR\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n75\nH\n\nPC\n11\n\n7\nof\n\nG\nPS\n\n1\nsw\n\nitc\nh\n\nH\nPC\n\n11\n7\n\nG\nPS\n\n1\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n76\nH\n\nPC\n11\n\n8\nof\n\nG\nPS\n\n0\nsw\n\nitc\nh\n\nH\nPC\n\n11\n8\n\nG\nPS\n\n0\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n77\nH\n\nPC\n11\n\n9\nof\n\nM\nG\n\nT\nN\n\nsw\nitc\n\nh\nH\n\nPC\n11\n\n9\nM\n\nG\nT\n\nN\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n78\nH\n\nPC\n12\n\n0\nof\n\nG\nPS\n\n2\nsw\n\nitc\nh\n\nH\nPC\n\n12\n0\n\nG\nPS\n\n2\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n79\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n7A\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n530 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n7B\nH\n\nPC\n12\n\n3\nof\n\nT\nT\n\nC\ntr\n\nan\nsR\n\n1\nsw\n\ni\nC\n\nffo\nh cti\n\nws\n1\n\nR snart\nC\n\nT\nT\n\n321\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n7C\nH\n\nPC\n12\n\n4\nof\n\nT\nT\n\nC\ntr\n\nan\nsR\n\n2\nsw\n\ni\nC\n\nffo\nhcti\n\nws\n2\n\nRsnart\nC\n\nT\nT\n\n421\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n7D\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n7E\nC\n\nPY\nC\n\nH\nPC\n\n7F\nH\n\nPC\n12\n\n7\nof\n\nD\nD\n\nSt\nra\n\nns\nR\n\n1\nsw\n\ni\nC\n\nffo\nhcti\n\nws\n1\n\nRsnartS\nD\n\nD\n721\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n80\nH\n\nPC\n12\n\n8\nof\n\nD\nD\n\nSt\nra\n\nns\nR\n\n2\nsw\n\ni\nC\n\nffo\nhc ti\n\nw s\n2\n\nRs nar tS\nD\n\nD\n82 1\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n81\nH\n\nPC\n12\n\n9\nof\n\nB\nim\n\net\nH\n\nea\nte\n\nrR\ns\n\nC\nffo\n\nhcti\nw s\n\nRre tae\nH te\n\nm i\nB\n\n921\nC P\n\nH\n\nPY\nC\n\nH\nPC\n\n82\nH\n\nPC\n13\n\n0\nof\n\nB\nim\n\net\nH\n\nea\nte\n\nrN\ns\n\nC\nffo\n\nhcti\nw s\n\nNretae\nHte\n\nmi\nB\n\n031\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n83\nH\n\nPC\n13\n\n1\nof\n\nD\nD\n\nSt\nra\n\nns\nN\n\n1\nsw\n\ni\nC\n\nffo\nhcti\n\nws\n1\n\nNsnart S\nD\n\nD\n131\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n84\nH\n\nPC\n13\n\n2\nof\n\nD\nD\n\nSt\nra\n\nns\nN\n\n2\nsw\n\ni\nC\n\nffo\nhc ti\n\nw s\n2\n\nNsnartS\nD\n\nD\n231\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n85\nH\n\nPC\n13\n\n3\nof\n\nH\nea\n\ntP\nL\n\nm\nod\n\n01\nsw\n\nC\nff o\n\nhc ti\nw s\n\n10 do\nm\n\nL Pt ae\nH\n\n3 31\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n86\nH\n\nPC\n13\n\n4\nof\n\nH\nea\n\ntP\nL\n\nm\nod\n\n02\nsw\n\nC\nffo\n\nhcti\nws\n\n20do\nm\n\nLPtae\nH\n\n43 1\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n87\nH\n\nPC\n13\n\n5\nof\n\nH\nea\n\ntC\nO\n\nm\nod\n\n01\nsw\n\nC\nffo\n\nhcti\nws\n\n10d o\nm\n\nO\nC tae\n\nH\n53 1\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n88\nH\n\nPC\n13\n\n6\nof\n\nH\nea\n\ntC\nO\n\nm\nod\n\n02\nsw\n\nC\nffo\n\nhcti\nws\n\n2 0do\nm\n\nO\nCtae\n\nH\n631\n\nCP\nH\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 531\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n89\nH\n\nPC\n13\n\n7\nof\n\nH\nea\n\ntS\nR\n\nV\nm\n\nod\n01\n\ns\nH\n\nPC\n13\n\n7\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n01\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n8A\nH\n\nPC\n13\n\n8\nof\n\nH\nea\n\ntS\nR\n\nV\nm\n\nod\n02\n\ns\nH\n\nPC\n13\n\n8\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n02\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n8B\nH\n\nPC\n13\n\n9\nof\n\nH\nea\n\ntP\nL\n\nm\nod\n\n11\nsw\n\nC\nffo\n\nhcti\nws\n\n11do\nm\n\nLP tae\nH\n\n9 31\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n8C\nH\n\nPC\n14\n\n0\nof\n\nH\nea\n\ntP\nL\n\nm\nod\n\n12\nsw\n\nC\nffo\n\nhcti\nws\n\n21do\nm\n\nLPtae\nH\n\n041\nCP\n\nH\n\nPY\nC\n\nH\nPC\n\n8D\nH\n\nPC\n14\n\n1\nof\n\nH\nea\n\ntC\nO\n\nm\nod\n\n11\nsw\n\nC\nffo\n\nhcti\nw s\n\n1 1do\nm\n\nO\nCt ae\n\nH\n141\n\nC P\nH\n\nPY\nC\n\nH\nPC\n\n8E\nH\n\nPC\n14\n\n2\nof\n\nH\nea\n\ntC\nO\n\nm\nod\n\n12\nsw\n\nC\nffo\n\nhcti\nws\n\n21d o\nm\n\nO\nC tae\n\nH\n2 41\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n8F\nH\n\nPC\n14\n\n3\nof\n\nH\nea\n\ntS\nR\n\nV\nm\n\nod\n11\n\ns\nH\n\nPC\n14\n\n3\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n11\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n90\nH\n\nPC\n14\n\n4\nof\n\nH\nea\n\ntS\nR\n\nV\nm\n\nod\n12\n\ns\nH\n\nPC\n14\n\n4\nH\n\nea\ntS\n\nR\nV\n\nm\nod\n\n12\nsw\n\nitc\nh\n\nof\nf\n\nC\n\nPY\nC\n\nH\nPC\n\n91\nH\n\nPC\n14\n\n5\nof\n\nR\net\n\naM\nec\n\nh\nN\n\n1\nsw\n\nC\nffo\n\nhct i\nws\n\n1\nN\n\nh ce\nM ate\n\nR\n54 1\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n92\nH\n\nPC\n14\n\n6\nof\n\nR\net\n\naM\nec\n\nh\nN\n\n2\nsw\n\nC\nffo\n\nhc ti\nws\n\n2\nN\n\nhce\nM ate\n\nR\n64 1\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n93\nH\n\nPC\n14\n\n7\nof\n\nR\net\n\naM\nec\n\nh\nR\n\n1\nsw\n\nC\nffo\n\nhc ti\nw s\n\n1\nR\n\nhc e\nMa te\n\nR\n7 41\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n94\nH\n\nPC\n14\n\n8\nof\n\nR\net\n\naM\nec\n\nh\nR\n\n2\nsw\n\nC\nffo\n\nhcti\nws\n\n2\nR\n\nh ce\nM ate\n\nR\n841\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n95\nH\n\nPC\n14\n\n9\nof\n\nD\nO\n\nM\n1\n\nsw\nitc\n\nh\nC\n\nffo\nh cti\n\nws\n1\n\nM\nO\n\nD\n94 1\n\nCP\nH\n\n(c\non\n\ntin\nue\n\nd)\n\n532 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\n96\nH\n\nPC\n15\n\n0\nof\n\nD\nO\n\nM\n2\n\nsw\nitc\n\nh\nC\n\nffo\nhcti\n\nws\n2\n\nM\nO\n\nD\n051\n\nCP\nH\n\nPY\nC\n\nH\nPC\n\n97\nC\n\nPY\nC\n\nH\nPC\n\n98\nC\n\nPY\nC\n\nH\nPC\n\n99\nPL\n\nsp\nec\n\nifi\nc\n\nin\nfir\n\nst\nFL\n\nP\nm\n\nis\nsi\n\non\nC\n\nPY\nC\n\nH\nPC\n\n9A\nC\n\nPY\nC\n\nH\nPC\n\n9B\nC\n\nPY\nC\n\nH\nPC\n\n9C\nH\n\nPC\n15\n\n6\nA\n\nct\nN\n\nom\nC\n\nor\neC\n\nom\npo\n\nne\nH\n\nPC\n15\n\n6\nA\n\nct\niv\n\nat\ne\n\nN\nom\n\nin\nal\n\nC\nor\n\ne\nC\n\nom\npo\n\nne\nnt\n\ns\n(O\n\nB\nC\n\nN\n,\n\nI/\nO\n\n-B\nN\n\n)\nC\n\nPY\nC\n\nH\nPC\n\n9D\nH\n\nPC\n15\n\n7\nA\n\nct\nR\n\ned\nC\n\nor\neC\n\nom\npo\n\nne\nH\n\nPC\n15\n\n7\nA\n\nct\niv\n\nat\ne\n\nR\ned\n\nun\nda\n\nnt\nC\n\nor\ne\n\nC\nom\n\npo\nne\n\nnt\ns\n\n(O\nB\n\nC\nR\n\n,\nI/\n\nO\n-B\n\nR\n)\n\nC\n\nPY\nC\n\nH\nPC\n\n9E\nH\n\nPC\n15\n\n8\nA\n\nct\n1s\n\ntC\nor\n\neC\nom\n\npC\nro\n\nH\nPC\n\n15\n8\n\nA\nct\n\niv\nat\n\ne\n1s\n\nt\nco\n\nre\nco\n\nm\npo\n\nne\nnt\n\ncr\nos\n\ns-\nco\n\nup\nlin\n\ng\n(O\n\nB\nC\n\nN\n,I\n\n/O\nR\n\n)\nC\n\nPY\nC\n\nH\nPC\n\n9F\nH\n\nPC\n15\n\n9\nA\n\nct\n2n\n\ndC\nor\n\neC\nom\n\npC\nro\n\nH\nPC\n\n15\n9\n\nA\nct\n\niv\nat\n\ne\n2n\n\nd\nco\n\nre\nco\n\nm\npo\n\nne\nnt\n\ncr\nos\n\ns-\nco\n\nup\nlin\n\ng\n(O\n\nB\nC\n\nR\n,I\n\n/O\nN\n\n)\nC\n\nPY\nC\n\nH\nPC\n\nA\n0\n\nH\nPC\n\n16\n0\n\nD\nea\n\nN\nom\n\nC\nor\n\neC\nom\n\npo\nne\n\nH\nPC\n\n16\n0\n\nD\nea\n\nct\niv\n\nat\ne\n\nN\nom\n\nin\nal\n\nC\nor\n\ne\nC\n\nom\npo\n\nne\nnt\n\ns\n(O\n\nB\nC\n\nN\n,\n\nI/\nO\n\n-B\nN\n\n)\nC\n\nPY\nC\n\nH\nPC\n\nA\n1\n\nH\nPC\n\n16\n1\n\nD\nea\n\nR\ned\n\nC\nor\n\neC\nom\n\npo\nne\n\nH\nPC\n\n16\n1\n\nD\nea\n\nct\niv\n\nat\ne\n\nR\ned\n\nun\nda\n\nnt\nC\n\nor\ne\n\nC\nom\n\npo\nne\n\nnt\ns\n\n(O\nB\n\nC\nR\n\n,\nI/\n\nO\n-B\n\nR\n)\n\nC\n\nPY\nC\n\nH\nPC\n\nA\n2\n\nH\nPC\n\n16\n2\n\nD\nea\n\n1s\ntC\n\nor\neC\n\nom\npC\n\nro\nH\n\nPC\n16\n\n2\nD\n\nea\nct\n\niv\nat\n\ne\n1s\n\nt\nC\n\nor\ne\n\nC\nom\n\npo\nne\n\nnt\nC\n\nro\nss\n\nC\nou\n\npl\n(O\n\nB\nC\n\nN\n,I\n\n/O\n-B\n\nR\n)\n\nC\n\nPY\nC\n\nH\nPC\n\nA\n3\n\nH\nPC\n\n16\n3\n\nD\nea\n\n2n\ndC\n\nor\neC\n\nom\npC\n\nro\nH\n\nPC\n16\n\n3\nD\n\nea\nct\n\niv\nat\n\ne\n2n\n\nd\nco\n\nre\nco\n\nm\npo\n\nne\nnt\n\nC\nro\n\nss\nC\n\nou\npl\n\n(O\nB\n\nC\nR\n\n,I\n/O\n\n-B\nN\n\n)\nC\n\nPY\nC\n\nH\nPC\n\nA\n4\n\nH\nPC\n\n16\n4\n\nD\nea\n\nct\nal\n\nl\nPa\n\nly\noa\n\nd\nH\n\nPC\n16\n\n4\nD\n\nea\nct\n\niv\nat\n\ne\nal\n\nl\nPa\n\nyl\noa\n\nd\nsw\n\nitc\nhe\n\ns\nC\n\nPY\nC\n\nH\nPC\n\nA\n5\n\nH\nPC\n\n16\n5\n\nD\nea\n\nct\nA\n\nllB\nut\n\nSa\nfe\n\nH\nPC\n\n16\n5\n\nD\nea\n\nct\niv\n\nat\ne\n\nal\nl\n\nsw\nitc\n\nhe\ns\n\nex\nce\n\npt\nSa\n\nfe\nm\n\nod\ne\n\nan\nd\n\nsu\nrv\n\niv\nal\n\nhe\nat\n\ner\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 533\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nC\n\nH\nPC\n\nA\n6\n\nH\nPC\n\n16\n6\n\nD\nea\n\nct\nA\n\nllH\nea\n\nte\nrS\n\nw\ni\n\nH\nPC\n\n16\n6\n\nD\nea\n\nct\niv\n\nat\ne\n\nal\nl\n\nhe\nat\n\ner\nsw\n\nitc\nhe\n\ns\nC\n\nPY\nC\n\nH\nPC\n\nA\n7\n\nH\nPC\n\n16\n7\n\nSe\ntD\n\nO\nM\n\nac\ntT\n\nim\neM\n\nax\nH\n\nPC\n16\n\n7\nSe\n\nt\nD\n\nO\nM\n\nac\ntiv\n\nat\nio\n\nn\ntim\n\ner\nto\n\nm\nax\n\nva\nlu\n\ne\nC\n\nP\nC\n\nD\nU\n\nT\nC\n\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nPP\nC\n\n00\n20\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntC\n\nap\n0\n\nC\nhe\n\nck\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n20\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntC\n\nap\n1\n\nC\nhe\n\nck\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n20\n\n2\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntC\n\nap\n2\n\nC\nhe\n\nck\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n2F\n\nF\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntC\n\nap\nA\n\nC\nhe\n\nck\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n,\n\nal\nl\n\nst\nri\n\nng\ns\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\n30\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntS\n\noC\n0\n\nC\nhe\n\nck\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n30\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntS\n\noC\n1\n\nC\nhe\n\nck\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n30\n\n2\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntS\n\noC\n2\n\nC\nhe\n\nck\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n3F\n\nF\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nB\n\nat\ntS\n\noC\nA\n\nC\nhe\n\nck\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nPC\nD\n\nU\n,\n\nal\nl\n\nst\nri\n\nng\ns\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\n40\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nC\nap\n\nS0\nSe\n\nt\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n40\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nC\nap\n\nS1\nSe\n\nt\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n534 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nC\n\n00\n40\n\n2\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nC\nap\n\nS2\nSe\n\nt\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n4F\n\nF\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nC\nap\n\nal\nSe\n\nt\nca\n\npa\nci\n\nty\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n50\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nSo\nC\n\nS0\nSe\n\nt\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n50\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nSo\nC\n\nS1\nSe\n\nt\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n50\n\n2\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nSo\nC\n\nS2\nSe\n\nt\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n5F\n\nF\nSr\n\nv(\n2,\n\n13\n0)\n\nse\nt\n\nB\nat\n\nSo\nC\n\nal\nSe\n\nt\nSo\n\nC\nle\n\nve\nl\n\nca\nlc\n\nul\nat\n\ned\nby\n\nO\nB\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n60\n\n0\n(2\n\n,1\n30\n\n)S\net\n\nE\nnd\n\nC\nha\n\nr\nV\n\nol\nS0\n\nSe\nt\n\nE\nnd\n\nch\nar\n\ngi\nng\n\nV\nol\n\nta\nge\n\nSt\nri\n\nng\n0\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\n60\n\n1\n(2\n\n,1\n30\n\n)S\net\n\nE\nnd\n\nC\nha\n\nr\nV\n\nol\nS1\n\nSe\nt\n\nE\nnd\n\nch\nar\n\ngi\nng\n\nV\nol\n\nta\nge\n\nSt\nri\n\nng\n1\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\n60\n\n2\n(2\n\n,1\n30\n\n)S\net\n\nE\nnd\n\nC\nha\n\nr\nV\n\nol\nS2\n\nSe\nt\n\nE\nnd\n\nch\nar\n\ngi\nng\n\nV\nol\n\nta\nge\n\nSt\nri\n\nng\n2\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\n70\n\n0\n(2\n\n,1\n30\n\n)R\nea\n\nd\nE\n\nnd\nC\n\nha\nr\n\nV\nol\n\nt\nR\n\nea\nd\n\nen\nd\n\nch\nar\n\ngi\nng\n\nvo\nlta\n\nge\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n80\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nch\nec\n\nk\nD\n\nep\nl\n\nC\nhe\n\nck\nde\n\npl\noy\n\nm\nen\n\nt\nst\n\nat\nus\n\nof\nso\n\nla\nr\n\npa\nne\n\nl\nm\n\nec\nha\n\nni\nsm\n\ns\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n90\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nC\n\nR\n0\n\nof\nf\n\nPC\nD\n\nU\nSe\n\nt\nB\n\nC\nR\n\n0\nO\n\nff\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n90\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nC\n\nR\n0\n\non\nPC\n\nD\nU\n\nSe\nt\n\nB\nC\n\nR\n0\n\nO\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\n91\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nC\n\nR\n1\n\nof\nf\n\nPC\nD\n\nU\nSe\n\nt\nB\n\nC\nR\n\n1\nO\n\nff\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n91\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nC\n\nR\n1\n\non\nPC\n\nD\nU\n\nSe\nt\n\nB\nC\n\nR\n1\n\nO\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\n92\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nC\n\nR\n2\n\nof\nf\n\nPC\nD\n\nU\nSe\n\nt\nB\n\nC\nR\n\n2\nO\n\nff\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\n92\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nC\n\nR\n2\n\non\nPC\n\nD\nU\n\nSe\nt\n\nB\nC\n\nR\n2\n\nO\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n00\nA\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nC\n\nR\nst\n\nat\nus\n\nC\nhe\n\nck\nB\n\nC\nR\n\nst\nat\n\nus\n2\n\n13\n0\n\n53\n15\n\nC\n(c\n\non\ntin\n\nue\nd)\n\n17 Annexes and Data Sheets 535\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nC\n\n00\nB\n\n00\n(2\n\n,1\n30\n\n)\nSe\n\ntH\nol\n\ndT\nim\n\neO\nB\n\nC\nin\n\ni\nPC\n\nD\nU\n\nSe\nt\n\nin\niti\n\nal\nho\n\nld\nin\n\ng\ntim\n\ne\nbe\n\nfo\nre\n\nst\nar\n\ntin\ng\n\nre\nco\n\nve\nry\n\npr\noc\n\nes\ns\n\no\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\nC\n\n00\n(2\n\n,1\n30\n\n)\nR\n\nea\ndH\n\nol\nT\n\nim\neO\n\nB\nC\n\nin\ni\n\nPC\nD\n\nU\nR\n\nea\nd\n\nho\nld\n\nin\ng\n\ntim\ne\n\nbe\nfo\n\nre\nre\n\nco\nve\n\nry\npr\n\noc\nes\n\ns\nO\n\nB\nC\n\n-I\n/O\n\nbo\nar\n\nd\n[s\n\n]\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\nD\n\n00\n(2\n\n,1\n30\n\n)\nSe\n\ntH\nol\n\ndT\nim\n\neO\nB\n\nC\nbe\n\nt\nPC\n\nD\nU\n\nSe\nt\n\nho\nld\n\nin\ng\n\ntim\ne\n\nin\nbe\n\ntw\nee\n\nn\nre\n\nc.\npr\n\noc\nes\n\ns\nof\n\nO\nB\n\nC\nan\n\nd\nI/\n\nO\n[s\n\n]\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n00\nE\n\n00\n(2\n\n,1\n30\n\n)\nR\n\nea\ndH\n\nol\nT\n\nim\neO\n\nB\nC\n\nbe\nt\n\nPC\nD\n\nU\nR\n\nea\nd\n\nho\nld\n\nin\ng\n\ntim\ne\n\nin\nbe\n\ntw\nee\n\nn\nre\n\nc.\npr\n\noc\nes\n\ns\nO\n\nB\nC\n\n-I\n/O\n\nbo\nar\n\nd\n[s\n\n]\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\n10\n\n0\n(2\n\n,1\n30\n\n)S\net\n\nSo\nC\n\nL\nvl\n\nR\n1R\n\n2\nA\n\ndj\nus\n\nt\nSo\n\nC\nlv\n\nl\nfo\n\nr\nm\n\nod\ne\n\ntr\nan\n\ns\nfr\n\nom\n\u2018r\n\nec\n.\n\nm\nod\n\ne0\n\u2019\n\nto\n\u2018r\n\nec\n.\n\nm\nod\n\ne1\n\u2019\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n20\n\n0\n(2\n\n,1\n30\n\n)\nR\n\nea\ndS\n\noC\nT\n\nhr\nes\n\nhR\n1R\n\n2\nC\n\nhe\nck\n\nSo\nC\n\nlv\nl\n\nfo\nr\n\nm\nod\n\ne\ntr\n\nan\ns\n\nfr\nom\n\n\u2018r\nec\n\n.\nm\n\nod\ne0\n\n\u2019\nto\n\n\u2018r\nec\n\n.\nm\n\nod\ne1\n\n\u2019\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\n30\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nm\n\nod\neM\n\nin\niO\n\nM\nod\n\ne\nT\n\nra\nns\n\niti\non\n\n:\nM\n\nin\niO\n\nps\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\n30\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nm\n\nod\ne\n\nId\nle\n\nM\nod\n\ne\nT\n\nra\nns\n\niti\non\n\n:\nId\n\nle\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\n30\n\n2\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nm\n\nod\neS\n\nhu\ntD\n\nM\nod\n\ne\nT\n\nra\nns\n\niti\non\n\n:\nSh\n\nut\nD\n\now\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n30\n\n3\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nm\n\nod\neN\n\non\ne\n\nM\nod\n\ne\nT\n\nra\nns\n\niti\non\n\n:\nN\n\non\ne\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n40\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nch\n\nec\nkM\n\nod\ne\n\nC\nhe\n\nck\nst\n\nat\nus\n\nof\nPC\n\nD\nU\n\nm\nod\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\n60\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nis\n\ntR\nel\n\nay\n0\n\nO\nf\n\nC\nom\n\nm\nan\n\nd\nbi\n\n-s\nta\n\nbl\ne\n\nre\nla\n\ny\n0\n\nO\nff\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n60\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nis\n\ntR\nel\n\nay\n0\n\nO\nn\n\nC\nom\n\nm\nan\n\nd\nbi\n\n-s\nta\n\nbl\ne\n\nre\nla\n\ny\n0\n\nO\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n536 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nC\n\n01\n61\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nis\n\ntR\nel\n\nay\n1\n\nO\nf\n\nC\nom\n\nm\nan\n\nd\nbi\n\n-s\nta\n\nbl\ne\n\nre\nla\n\ny\n1\n\nO\nff\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n61\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nis\n\ntR\nel\n\nay\n1\n\nO\nn\n\nC\nom\n\nm\nan\n\nd\nbi\n\n-s\nta\n\nbl\ne\n\nre\nla\n\ny\n1\n\nO\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n70\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nB\nis\n\ntR\nel\n\nSt\nat\n\nus\nR\n\nea\nd\n\nst\nat\n\nus\nof\n\nbi\n-s\n\nta\nbl\n\ne\nre\n\nla\ny\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n80\n\n0\n(2\n\n,1\n30\n\n)\nSe\n\ntC\nPU\n\nT\nog\n\ngl\neT\n\nim\ne\n\nSe\nt\n\nPC\nD\n\nU\nC\n\nPU\ns\n\nw\nai\n\ntin\ng\n\ntim\ne\n\nbe\nfo\n\nre\nC\n\nPU\nto\n\ngg\nle\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\n90\n\n0\n(2\n\n,1\n30\n\n)\nR\n\nea\ndC\n\nPU\nT\n\nog\ngl\n\neT\nim\n\ne\nC\n\nhe\nck\n\nPC\nD\n\nU\nC\n\nPU\ns\n\nw\nai\n\ntin\ng\n\ntim\ne\n\nbe\nfo\n\nre\nC\n\nPU\nto\n\ngg\nle\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\nA\n\n00\n(2\n\n,1\n30\n\n)S\net\n\nH\nol\n\nT\nim\n\neT\nra\n\nns\nSe\n\nt\nho\n\nld\nin\n\ng\ntim\n\ne\nfo\n\nr\nm\n\nod\ne\n\ntr\nan\n\nsi\ntio\n\nn\nfr\n\nom\nR\n\nM\n1\n\nto\nM\n\nO\nM\n\n[s\n]\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\nB\n\n00\n(2\n\n,1\n30\n\n)\nR\n\nea\ndH\n\nol\nT\n\nim\neT\n\nra\nns\n\nC\nhe\n\nck\nho\n\nld\nin\n\ng\ntim\n\ne\nfo\n\nr\nm\n\nod\ne\n\ntr\nan\n\nsi\ntio\n\nn\nfr\n\nom\nR\n\nM\n1\n\nto\nM\n\nO\nM\n\n[s\n]\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n01\nC\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nch\n\nan\nge\n\nC\nPU\n\nSw\nitc\n\nh\nto\n\not\nhe\n\nr\nC\n\nPU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\nD\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nch\n\nec\nkC\n\nPU\nC\n\nhe\nck\n\nan\nd\n\nre\nsp\n\non\nd\n\nop\ner\n\nat\nin\n\ng\nC\n\nPU\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\nE\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nsw\n\nitc\nh\n\nO\nf\n\nC\nha\n\nng\ne\n\nst\nat\n\nus\nof\n\nsw\nitc\n\nh:\nO\n\nff\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n01\nE\n\n01\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nsw\n\nitc\nh\n\nO\nn\n\nC\nha\n\nng\ne\n\nst\nat\n\nus\nof\n\nsw\nitc\n\nh:\nO\n\nn\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n02\n00\n\n0\n(2\n\n,1\n30\n\n)S\net\n\nM\nax\n\nC\nom\n\npo\nC\n\nur\nr\n\nA\ndj\n\nus\nt\n\nva\nlu\n\ne\nfo\n\nr\nm\n\nax\n.\n\ncu\nrr\n\nen\nt\n\nof\nth\n\ne\nco\n\nm\npo\n\nne\nnt\n\non\nth\n\nis\nsw\n\nitc\nh\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n02\n00\n\n1\n(2\n\n,1\n30\n\n)\nR\n\nea\ndM\n\nax\nC\n\nom\npC\n\nur\nr\n\nC\nhe\n\nck\nva\n\nlu\ne\n\nfo\nr\n\nm\nax\n\n.\ncu\n\nrr\nen\n\nt\nof\n\nth\ne\n\nco\nm\n\npo\nne\n\nnt\non\n\nth\nis\n\nsw\nitc\n\nh\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n02\n10\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nfu\n\nse\nO\n\nn\nC\n\nom\nm\n\nan\nd\n\nst\nat\n\nus\nof\n\nfu\nse\n\n:\non\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 537\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nC\n\n02\n30\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nR\nea\n\ndF\nus\n\nes\nC\n\nur\nr\n\nR\nea\n\nd\ncu\n\nrr\nen\n\nt\nof\n\nal\nl\n\nfu\nse\n\ns\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n02\n90\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nIn\nitT\n\nes\nSt\n\nrM\nea\n\nPC\nD\n\nU\nIn\n\niti\nat\n\ne\nT\n\nes\nt\n\nSt\nri\n\nng\nM\n\nea\nsu\n\nre\nm\n\nen\nt\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n02\nA\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nR\nea\n\ndT\nes\n\nSt\nrT\n\nM\nPC\n\nD\nU\n\nR\nea\n\nd\nT\n\nes\nt\n\nSt\nri\n\nng\nT\n\nM\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n02\nC\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nre\n\nad\nR\n\nA\nM\n\nhl\nPC\n\nD\nU\n\nre\nad\n\nR\nA\n\nM\nhi\n\nst\nor\n\ny\nlo\n\ng\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n02\nC\n\nFF\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\ncl\n\nea\nR\n\nA\nM\n\nhl\nPC\n\nD\nU\n\ncl\nea\n\nr\nR\n\nA\nM\n\nhi\nst\n\nor\ny\n\nlo\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n02\nF0\n\n0\n(2\n\n,1\n30\n\n)\nSe\n\ntD\nep\n\nlo\nyA\n\ncF\nla\n\ngO\nN\n\nSe\nt\n\nA\nct\n\niv\nat\n\nio\nn\n\nfl a\ng\n\nfo\nr\n\nde\npl\n\noy\nm\n\nen\nt\n\nto\nO\n\nN\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n02\nF0\n\n1\n(2\n\n,1\n30\n\n)\nSe\n\ntD\nep\n\nlA\nct\n\nFl\nag\n\nO\nFF\n\nSe\nt\n\nA\nct\n\niv\nat\n\nio\nn\n\nfla\ng\n\nfo\nr\n\nde\npl\n\noy\nm\n\nen\nt\n\nto\nO\n\nFF\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n02\nF0\n\n3\n(2\n\n,1\n30\n\n)\nR\n\nea\ndD\n\nep\nlo\n\nyA\nct\n\nFl\nag\n\nC\nhe\n\nck\nac\n\ntiv\nat\n\nio\nn\n\nfla\ng\n\nfo\nr\n\nde\npl\n\noy\nm\n\nen\nt\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n00\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nre\n\nad\nFL\n\nA\nhl\n\nPC\nD\n\nU\nre\n\nad\nFL\n\nA\nSH\n\nhi\nst\n\nor\ny\n\nlo\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n0F\n\nF\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\ncl\n\nea\nFL\n\nA\nhl\n\nPC\nD\n\nU\ncl\n\nea\nr\n\nFL\nA\n\nSH\nhi\n\nst\nor\n\ny\nlo\n\ng\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n20\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nre\n\nad\nW\n\nO\nC\n\nO\nl\n\nPC\nD\n\nU\nre\n\nad\nW\n\nor\nki\n\nng\nC\n\nom\npo\n\nne\nnt\n\ns\nlo\n\ng\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n28\n\nF\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nre\n\nad\nW\n\nO\nC\n\nO\na\n\nPC\nD\n\nU\nre\n\nad\nac\n\ntu\nal\n\nW\nor\n\nki\nng\n\nC\nom\n\npo\nne\n\nnt\ns\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n2F\n\nF\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\ncl\n\nea\nW\n\nO\nC\n\nO\nl\n\nPC\nD\n\nU\ncl\n\nea\nr\n\nW\nor\n\nki\nng\n\nC\nom\n\npo\nne\n\nnt\ns\n\nL\nog\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n538 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nC\n\n03\n30\n\n0\n(2\n\n,1\n30\n\n)S\net\n\nD\nep\n\nlo\nyT\n\nim\ner\n\n0\nSe\n\nt\nth\n\ne\nde\n\npl\noy\n\ntim\ner\n\n0\nin\n\nto\na\n\ntim\ne\n\nin\nse\n\nco\nnd\n\ns\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n30\n\n1\n(2\n\n,1\n30\n\n)S\net\n\nD\nep\n\nlo\nyT\n\nim\ner\n\n1\nSe\n\nt\nth\n\ne\nT\n\nim\ner\n\n1\nfo\n\nr\nde\n\npl\noy\n\nm\nen\n\nt\nin\n\nse\nco\n\nnd\ns\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n40\n\n0\n(2\n\n,1\n30\n\n)R\nea\n\nd\nD\n\nep\nlo\n\nyT\nim\n\ner\n0\n\nR\nea\n\nd\nde\n\npl\noy\n\ntim\ner\n\n0\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n40\n\n1\n(2\n\n,1\n30\n\n)\nR\n\nea\ndD\n\nep\nlo\n\nyT\nim\n\ner\n1\n\nR\nea\n\nd\nde\n\npl\noy\n\ntim\ner\n\n1\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n50\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nge\n\nt\nT\n\nM\nG\n\net\npe\n\nri\nod\n\nic\nT\n\nM\nPa\n\nck\net\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n60\n\n0\n(2\n\n,1\n30\n\n)\nSe\n\ntB\nat\n\nA\nct\n\nFl\nag\n\nO\nff\n\n0\nSe\n\nt\nB\n\nat\nte\n\nry\nC\n\nha\nrg\n\ne\nac\n\ntiv\nat\n\nio\nn\n\nFl\nag\n\nO\nff\n\nfo\nr\n\nSt\nri\n\nng\n0\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n60\n\n1\n(2\n\n,1\n30\n\n)\nSe\n\ntB\nat\n\nA\nct\n\nFl\nag\n\nO\nff\n\n1\nSe\n\nt\nB\n\nat\nte\n\nry\nC\n\nha\nrg\n\ne\nac\n\ntiv\nat\n\nio\nn\n\nFl\nag\n\nO\nff\n\nfo\nr\n\nSt\nri\n\nng\n1\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n60\n\n2\n(2\n\n,1\n30\n\n)\nSe\n\ntB\nat\n\nA\nct\n\nFl\nag\n\nO\nff\n\n2\nSe\n\nt\nB\n\nat\nte\n\nry\nC\n\nha\nrg\n\ne\nac\n\ntiv\nat\n\nio\nn\n\nFl\nag\n\nO\nff\n\nfo\nr\n\nSt\nri\n\nng\n2\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\n61\n\n0\n(2\n\n,1\n30\n\n)\nSe\n\ntB\nat\n\nA\nct\n\nFl\nag\n\nO\nn0\n\nSe\nt\n\nB\nat\n\nte\nry\n\nC\nha\n\nrg\ne\n\nac\ntiv\n\nat\nio\n\nn\nFl\n\nag\nO\n\nn\nfo\n\nr\nSt\n\nri\nng\n\n0\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n61\n\n1\n(2\n\n,1\n30\n\n)\nSe\n\ntB\nat\n\nA\nct\n\nFl\nag\n\nO\nn1\n\nSe\nt\n\nB\nat\n\nte\nry\n\nC\nha\n\nrg\ne\n\nac\ntiv\n\nat\nio\n\nn\nFl\n\nag\nO\n\nn\nfo\n\nr\nSt\n\nri\nng\n\n1\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n61\n\n2\n(2\n\n,1\n30\n\n)\nSe\n\ntB\nat\n\nA\nct\n\nFl\nag\n\nO\nn2\n\nSe\nt\n\nB\nat\n\nte\nry\n\nC\nha\n\nrg\ne\n\nac\ntiv\n\nat\nio\n\nn\nFl\n\nag\nO\n\nn\nfo\n\nr\nSt\n\nri\nng\n\n2\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n70\n\n0\n(2\n\n,1\n30\n\n)\nR\n\nea\ndB\n\nat\nC\n\nha\nrA\n\nct\nFl\n\nR\nea\n\nd\nB\n\nat\nte\n\nry\nC\n\nha\nrg\n\ne\nA\n\nct\niv\n\nat\nio\n\nn\nFl\n\nag\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\n80\n\n0\n(2\n\n,1\n30\n\n)\nSe\n\ntB\nat\n\nC\nha\n\nrO\nff\n\nT\nim\n\ne\nSe\n\nt\nB\n\nat\nte\n\nry\nch\n\nar\nge\n\nde\nac\n\ntiv\nat\n\nio\nn\n\ntim\ne\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 539\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nC\n\n03\n90\n\n0\n(2\n\n,1\n30\n\n)\nR\n\nea\ndB\n\nat\nD\n\nea\ncT\n\nim\ne\n\nR\nea\n\nd\nba\n\ntte\nry\n\nch\nar\n\nge\nde\n\nac\ntiv\n\nat\nio\n\nn\ntim\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nPP\nC\n\n03\nA\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nre\n\nad\nD\n\nO\nM\n\ntim\nR\n\nea\nd\n\nD\nO\n\nM\nT\n\nim\ner\n\nin\nPC\n\nD\nU\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\nB\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nPC\nD\n\nU\nse\n\ntD\nO\n\nM\ntim\n\nSe\nt\n\nD\nO\n\nM\nT\n\nim\ner\n\nin\nPC\n\nD\nU\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\nC\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nSe\nt\n\nSo\nC\n\nPa\nra\n\nm\nPC\n\nD\nU\n\nSe\nt\n\nSo\nC\n\nPa\nra\n\nm\net\n\ner\ns\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\nD\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nck\nSo\n\nC\npa\n\nra\nm\n\nPC\nD\n\nU\nC\n\nhe\nck\n\nSo\nC\n\nPa\nra\n\nm\net\n\ner\ns\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\nE\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nSe\ntB\n\nat\ntM\n\nax\nC\n\nap\nPC\n\nD\nU\n\nSe\nt\n\nB\nat\n\nte\nry\n\nM\nax\n\nim\num\n\nC\nap\n\nac\nity\n\n2\n13\n\n0\n53\n\n15\nC\n\nPP\nC\n\n03\nF0\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nC\nhe\n\nkB\nat\n\nM\nax\n\nC\nap\n\nPC\nD\n\nU\nC\n\nhe\nck\n\nB\nat\n\nte\nry\n\nM\nax\n\nim\num\n\nC\nap\n\nac\nity\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\ntt\n\nit\nud\n\ne\nC\n\non\ntr\n\nol\nSu\n\nbs\nys\n\nte\nm\n\nT\nC\n\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nA\nY\n\nC\n00\n\n00\n0\n\nSr\nv8\n\nA\nC\n\nS\nA\n\nct\niv\n\nat\ne\n\nA\nC\n\nS\n8\n\n1\n42\n\n9\nC\n\nA\nY\n\nC\n00\n\n00\n1\n\nSr\nv8\n\nA\nC\n\nS\nD\n\nea\nct\n\niv\nat\n\ne\nA\n\nC\nS\n\n1\n8\n\n42\n9\n\nC\n\nA\nY\n\nC\n00\n\n00\n2\n\nSr\nv8\n\nA\nC\n\nS\nU\n\npl\noa\n\nd\n1\n\nC\non\n\nst\n.\n\n1\n8\n\n4 2\n9\n\nC\n\nA\nY\n\nC\n00\n\n00\n4\n\nSr\nv8\n\nA\nC\n\nS\nM\n\nod\ne\n\n->\nD\n\net\num\n\nbl\n1\n\n8\n42\n\n9\nC\n\nA\nY\n\nC\n00\n\n00\n5\n\nSr\nv8\n\nA\nC\n\nS\nM\n\nod\ne\n\n->\nId\n\nle\n8\n\n1\n42\n\n9\nC\n\nA\nY\n\nC\n00\n\n00\n6\n\nSr\nv8\n\nA\nC\n\nS\nM\n\nod\ne\n\n->\nN\n\nad\nir\n\nPt\n1\n\n8\n4 2\n\n9\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n540 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nY\n\nC\n00\n\n00\n7\n\nSr\nv8\n\nA\nC\n\nS\nM\n\nod\ne\n\n->\nIn\n\ner\ntP\n\nt\n1\n\n8\n42\n\n9\nC\n\nA\nY\n\nC\n00\n\n00\n8\n\nSr\nv8\n\nA\nC\n\nS\nM\n\nod\ne\n\n->\nT\n\nar\nge\n\ntP\n1\n\n8\n42\n\n9\nC\n\nM\nag\n\nne\nto\n\nm\net\n\ner\nT\n\nC\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nA\nM\n\nC\n00\n\n05\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nN\nR\n\neq\nM\n\nea\nsS\n\nM\nG\n\nM\nN\n\nre\nqu\n\nes\nt\n\nm\nea\n\nsu\nre\n\nm\nen\n\nt\nw\n\nith\nsl\n\now\nsa\n\nm\npl\n\nin\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n05\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nN\nR\n\neq\nM\n\nea\nsM\n\nM\nG\n\nM\nN\n\nre\nqu\n\nes\nt\n\nm\nea\n\nsu\nre\n\nm\nen\n\nt\nw\n\nith\nm\n\ned\niu\n\nm\nsa\n\nm\npl\n\nin\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n05\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nN\nR\n\neq\nM\n\nea\nsF\n\nM\nG\n\nM\nN\n\nre\nqu\n\nes\nt\n\nm\nea\n\nsu\nre\n\nm\nen\n\nt\nw\n\nith\nfa\n\nst\nsa\n\nm\npl\n\nin\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n09\n8\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nN\nPo\n\nw\ner\n\nD\now\n\nM\nG\n\nM\nN\n\npo\nw\n\ner\ndo\n\nw\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n09\n9\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nN\nPo\n\nw\ner\n\nU\np\n\nM\nG\n\nM\nN\n\npo\nw\n\ner\nup\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n15\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nR\nR\n\neq\nM\n\nea\nsS\n\nM\nG\n\nM\nR\n\nre\nqu\n\nes\nt\n\nm\nea\n\nsu\nre\n\nm\nen\n\nt\nw\n\nith\nsl\n\now\nsa\n\nm\npl\n\nin\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n15\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nR\nR\n\neq\nM\n\nea\nsM\n\nM\nG\n\nM\nR\n\nre\nqu\n\nes\nt\n\nm\nea\n\nsu\nre\n\nm\nen\n\nt\nw\n\nith\nm\n\ned\niu\n\nm\nsa\n\nm\npl\n\nin\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n15\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nR\nR\n\neq\nM\n\nea\nsF\n\nM\nG\n\nM\nR\n\nre\nqu\n\nes\nt\n\nm\nea\n\nsu\nre\n\nm\nen\n\nt\nw\n\nith\nfa\n\nst\nsa\n\nm\npl\n\nin\ng\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n19\n8\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nR\nPo\n\nw\ner\n\nD\now\n\nM\nG\n\nM\nR\n\npo\nw\n\ner\ndo\n\nw\nn\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nM\n\nC\n00\n\n19\n9\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nM\n\nR\nPo\n\nw\ner\n\nU\np\n\nM\nG\n\nM\nR\n\npo\nw\n\ner\nup\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 541\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nM\nag\n\nne\nto\n\nto\nrq\n\nue\nr\n\nT\nC\n\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nA\nQ\n\nC\n00\n\n10\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nT\n\nN\nse\n\ntC\noi\n\nlS\nta\n\nM\nG\n\nT\nN\n\nSe\nt\n\nC\noi\n\nl\nSt\n\nat\ne\n\nan\nd\n\nR\nea\n\nd\nSt\n\nat\nus\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nQ\n\nC\n00\n\n10\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nM\n\nG\nT\n\nR\nse\n\ntC\noi\n\nlS\nta\n\nM\nG\n\nT\nR\n\nSe\nt\n\nC\noi\n\nl\nSt\n\nat\ne\n\nan\nd\n\nR\nea\n\nd\nSt\n\nat\nus\n\n2\n13\n\n0\n53\n\n15\nC\n\nSt\nar\n\nT\nra\n\nck\ner\n\nT\nC\n\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nA\nSC\n\n00\n00\n\n7\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nR\neq\n\nSt\nat\n\nus\nA\n\nsc\nR\n\neq\nue\n\nst\nSt\n\nat\nus\n\nT\nC\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nSC\n\n00\n00\n\n8\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nL\noa\n\ndP\nar\n\nam\ne\n\nA\nsc\n\nL\noa\n\ndP\nar\n\nam\net\n\ner\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n00\n\n9\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nst\nor\n\neI\nm\n\nag\ne\n\nA\nsc\n\nSt\nor\n\neI\nm\n\nag\neT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n01\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nse\nnd\n\nIm\nag\n\ne\nA\n\nsc\nSe\n\nnd\nIm\n\nag\neT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n01\n\n8\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nT\nim\n\ne\nT\n\nC\nA\n\nsc\nT\n\nim\neT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n01\n\n9\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nPv\nt\n\nT\nC\n\nA\nsc\n\nPv\ntT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n10\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nM\nIR\n\nU\nct\n\nrl\nO\n\nn\nA\n\nsc\nM\n\nir\nuC\n\non\ntr\n\nol\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n10\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nM\nIR\n\nU\nct\n\nrl\nO\n\nf\nA\n\nsc\nM\n\nir\nuC\n\non\ntr\n\nol\nT\n\nC\nO\n\nff\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n10\n\n2\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nM\nIR\n\nU\nst\n\nor\neB\n\nA\nsc\n\nM\nir\n\nuS\nto\n\nre\nD\n\nat\naT\n\nc\nC\n\nH\nU\n\nB\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n10\n\n3\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nM\nIR\n\nU\ndu\n\nm\npD\n\na\nA\n\nsc\nM\n\nir\nuD\n\num\npD\n\nat\naT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nSC\n\n00\n10\n\n4\nSr\n\nv(\n2,\n\n13\n0)\n\nST\nR\n\nM\nIR\n\nU\ncl\n\nea\nr\n\nA\nsc\n\nM\nir\n\nuC\nle\n\nar\nD\n\nat\naT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n542 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nSC\n\n10\n00\n\n0\nSr\n\nv(\n17\n\n,1\n)\n\nST\nR\n\nPi\nng\n\nA\nsc\n\nD\num\n\nm\nyT\n\nC\n17\n\n1\n19\n\n37\nC\n\nA\nSC\n\n10\n00\n\n1\nSr\n\nv8\nra\n\nw\nST\n\nR\nSt\n\nan\ndb\n\nyM\nod\n\ne\nA\n\nsc\nSt\n\nan\ndb\n\nyM\nod\n\neT\nC\n\n8\n1\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n00\n\n2\nSr\n\nv8\nra\n\nw\nST\n\nR\nA\n\ntti\ntu\n\nde\nM\n\nod\ne\n\nA\nsc\n\nA\ntti\n\ntu\nde\n\nM\nod\n\neT\nC\n\n8\n1\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n00\n\n3\nSr\n\nv6\nra\n\nw\nST\n\nR\nD\n\num\np\n\nM\nem\n\nor\ny\n\nA\nsc\n\nD\num\n\npM\nem\n\nor\nyT\n\nC\n6\n\n5\n19\n\n37\n9\n\nC\n\nA\nSC\n\n10\n00\n\n4\nSr\n\nv6\nra\n\nw\nST\n\nR\nL\n\noa\nd\n\nM\nem\n\nor\ny\n\nA\nsc\n\nL\noa\n\ndM\nem\n\nor\nyT\n\nC\n6\n\n2\n19\n\n37\n9\n\nC\n\nA\nSC\n\n10\n00\n\n6\nSr\n\nv8\nra\n\nw\nST\n\nR\nB\n\noo\nt\n\nT\nC\n\nA\nsc\n\nB\noo\n\ntT\nC\n\n8\n1\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n00\n\n7\nSr\n\nv6\nra\n\nw\nST\n\nR\nR\n\neq\nSt\n\nat\nus\n\nA\nsc\n\nR\neq\n\nue\nst\n\nSt\nat\n\nus\nT\n\nC\n6\n\n5\n19\n\n37\n9\n\nC\n\nA\nSC\n\n10\n00\n\n8\nSr\n\nv6\nra\n\nw\nST\n\nR\nL\n\noa\ndP\n\nar\nam\n\net\ner\n\nA\nsc\n\nL\noa\n\ndP\nar\n\nam\nte\n\nrT\nC\n\n6\n2\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n00\n\n9\nSr\n\nv8\nra\n\nw\nST\n\nR\nSt\n\nor\ne\n\nIm\nag\n\ne\nA\n\nsc\nSt\n\nor\neI\n\nm\nag\n\neT\nC\n\n8\n1\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n01\n\n0\nSr\n\nv6\nra\n\nw\nST\n\nR\nSe\n\nnd\nIm\n\nag\ne\n\nA\nsc\n\nSe\nnd\n\nIm\nag\n\neT\nC\n\n6\n5\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n01\n\n1\nSr\n\nv8\nra\n\nw\nST\n\nR\nSi\n\nm\nD\n\nat\na\n\nA\nsc\n\nSi\nm\n\nul\nat\n\nio\nnD\n\nat\naT\n\nC\n8\n\n1\n19\n\n37\n9\n\nC\n\nA\nSC\n\n10\n01\n\n2\nSr\n\nv8\nra\n\nw\nST\n\nR\nSi\n\nm\nul\n\nat\nM\n\nod\ne\n\nA\nsc\n\nSi\nm\n\nul\nat\n\nio\nnM\n\nod\neT\n\nC\n8\n\n1\n19\n\n37\n9\n\nC\n\nA\nSC\n\n10\n01\n\n3\nSr\n\nv8\nra\n\nw\nST\n\nR\nT\n\nes\ntI\n\nm\nag\n\neM\nod\n\ne\nA\n\nsc\nT\n\nes\ntI\n\nm\nag\n\neM\nod\n\neT\nC\n\n8\n1\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n01\n\n4\nSr\n\nv8\nra\n\nw\nST\n\nR\nH\n\nK\nfo\n\nrc\ne\n\nA\nsc\n\nH\nK\n\nFo\nrc\n\neT\nC\n\n8\n1\n\n19\n37\n\n9\nC\n\nA\nSC\n\n10\n01\n\n7\nSr\n\nv6\nra\n\nw\nST\n\nR\nC\n\nhe\nck\n\nM\nem\n\nor\ny\n\nA\nsc\n\nC\nhe\n\nck\nM\n\nem\nor\n\nyT\nC\n\n6\n9\n\n19\n37\n\n9\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 543\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nSC\n\n10\n01\n\n8\nSr\n\nv6\nra\n\nw\nST\n\nR\nT\n\nim\ne\n\nT\nC\n\nA\nsc\n\nT\nim\n\neT\nC\n\n9\n12\n\n9\n19\n\n37\n9\n\nC\n\nA\nSC\n\n10\n01\n\n9\nSr\n\nv9\nra\n\nw\nST\n\nR\nPv\n\nt\nT\n\nC\nA\n\nsc\nPv\n\ntT\nC\n\n9\n13\n\n2\n19\n\n37\n9\n\nC\n\nF\nib\n\ner\n-o\n\npt\nic\n\nG\nyr\n\no\nT\n\nC\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nA\nFC\n\n00\n00\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nFO\nG\n\nre\nq\n\nD\nat\n\na\nFO\n\nG\nR\n\neq\nue\n\nst\nM\n\nea\nsu\n\nre\nm\n\nen\nt\n\nD\nat\n\na\n2\n\n13\n0\n\n53\n15\n\nC\n\nG\nP\n\nS\nT\n\nC\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nA\nG\n\nC\n0A\n\nM\n00\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n0\nSe\n\ntA\nid\n\nin\ngM\n\no\nG\n\nPS\n0\n\nSe\nt\n\nA\nid\n\nin\ng\n\nM\nod\n\ne\n(A\n\nM\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\n0A\n\nM\n01\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n1\nSe\n\ntA\nid\n\nin\ngM\n\no\nG\n\nPS\n1\n\nSe\nt\n\nA\nid\n\nin\ng\n\nM\nod\n\ne\n(A\n\nM\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\n0A\n\nM\n02\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n2\nSe\n\ntA\nid\n\nin\ngM\n\no\nG\n\nPS\n2\n\nSe\nt\n\nA\nid\n\nin\ng\n\nM\nod\n\ne\n(A\n\nM\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\n0D\n\nR\n00\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n0\nSe\n\ntD\nat\n\naR\nat\n\ne\nG\n\nPS\n0\n\nSe\nt\n\nD\nat\n\na\nR\n\nat\ne\n\n(D\nR\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\n0D\n\nR\n01\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n1\nSe\n\ntD\nat\n\naR\nat\n\ne\nG\n\nPS\n1\n\nSe\nt\n\nD\nat\n\na\nR\n\nat\ne\n\n(D\nR\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\n0D\n\nR\n02\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n2\nSe\n\ntD\nat\n\naR\nat\n\ne\nG\n\nPS\n2\n\nSe\nt\n\nD\nat\n\na\nR\n\nat\ne\n\n(D\nR\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\n0D\n\nW\n00\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n0\nSe\n\ntD\nop\n\npW\nin\n\nG\nPS\n\n0\nSe\n\nt\nD\n\nop\npl\n\ner\nW\n\nin\ndo\n\nw\n(D\n\nW\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\n0D\n\nW\n01\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n1\nSe\n\ntD\nop\n\npW\nin\n\nG\nPS\n\n1\nSe\n\nt\nD\n\nop\npl\n\ner\nW\n\nin\ndo\n\nw\n(D\n\nW\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\n0D\n\nW\n02\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n2\nSe\n\ntD\nop\n\npW\nin\n\nG\nPS\n\n2\nSe\n\nt\nD\n\nop\npl\n\ner\nW\n\nin\ndo\n\nw\n(D\n\nW\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\n0L\n\nO\n00\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n0\nL\n\noa\nd\n\nT\nL\n\nE\nG\n\nPS\n0\n\nL\noa\n\nd\nT\n\nL\nE\n\n(L\nO\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n(c\n\non\ntin\n\nue\nd)\n\n544 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nG\n\nC\n0L\n\nO\n01\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n1\nL\n\noa\nd\n\nT\nL\n\nE\nG\n\nPS\n1\n\nL\noa\n\nd\nT\n\nL\nE\n\n(L\nO\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\n0L\n\nO\n02\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n2\nL\n\noa\nd\n\nT\nL\n\nE\nG\n\nPS\n2\n\nL\noa\n\nd\nT\n\nL\nE\n\n(L\nO\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\n0T\n\nM\n00\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n0\nSe\n\ntT\nra\n\nck\nM\n\nod\nG\n\nPS\n0\n\nSe\nt\n\nT\nra\n\nck\nin\n\ng\nM\n\nod\ne\n\n(T\nM\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\n0T\n\nM\n01\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n1\nSe\n\ntT\nra\n\nck\nM\n\nod\nG\n\nPS\n1\n\nSe\nt\n\nT\nra\n\nck\nin\n\ng\nM\n\nod\ne\n\n(T\nM\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\n0T\n\nM\n02\n\n(2\n,1\n\n30\n)\n\nG\nPS\n\n2\nSe\n\ntT\nra\n\nck\nM\n\nod\nG\n\nPS\n2\n\nSe\nt\n\nT\nra\n\nck\nin\n\ng\nM\n\nod\ne\n\n(T\nM\n\n)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\nC\n\nD\nM\n\n00\n(2\n\n,1\n30\n\n)\nG\n\nPS\nC\n\nD\nM\n\nR\nea\n\ndC\nlo\n\nc\nG\n\nPS\nC\n\nD\nM\n\nR\nea\n\nd\nC\n\nlo\nck\n\nSo\nur\n\nce\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\nX\n\nC\nT\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nG\nPS\n\n0\nX\n\nN\nS\n\nM\nod\n\ne\nG\n\nPS\n0\n\nX\nN\n\nS\nM\n\nod\ne\n\nC\non\n\ntr\nol\n\n(X\nN\n\nC\nT\n\nL\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nC\nT\n\n01\nSr\n\nv(\n2,\n\n13\n0)\n\nG\nPS\n\n1\nX\n\nN\nS\n\nM\nod\n\ne\nG\n\nPS\n1\n\nX\nN\n\nS\nM\n\nod\ne\n\nC\non\n\ntr\nol\n\n(X\nN\n\nC\nT\n\nL\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nC\nT\n\n02\nSr\n\nv(\n2,\n\n13\n0)\n\nG\nPS\n\n2\nX\n\nN\nS\n\nM\nod\n\ne\nG\n\nPS\n2\n\nX\nN\n\nS\nM\n\nod\ne\n\nC\non\n\ntr\nol\n\n(X\nN\n\nC\nT\n\nL\n)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nP1\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n0\n\nX\nN\n\nS\nL\n\nis\ntP\n\nG\nPS\n\n0\nX\n\nN\nS\n\nL\nis\n\nt\nPa\n\nra\nm\n\net\ner\n\ns\n(X\n\nN\nPA\n\nR\n1)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nP1\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n1\n\nX\nN\n\nS\nL\n\nis\ntP\n\nG\nPS\n\n1\nX\n\nN\nS\n\nL\nis\n\nt\nPa\n\nra\nm\n\net\ner\n\ns\n(X\n\nN\nPA\n\nR\n1)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nP1\n02\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n2\n\nX\nN\n\nS\nL\n\nis\ntP\n\nG\nPS\n\n2\nX\n\nN\nS\n\nL\nis\n\nt\nPa\n\nra\nm\n\net\ner\n\ns\n(X\n\nN\nPA\n\nR\n1)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nP2\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n0\n\nX\nN\n\nS\nD\n\nef\nPa\n\nG\nPS\n\n0\nX\n\nN\nS\n\nR\nes\n\nto\nre\n\nD\nef\n\nau\nlt\n\nPa\nra\n\nm\net\n\ner\ns\n\n(X\nN\n\nPA\nR\n\n2)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\nX\n\nP2\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n1\n\nX\nN\n\nS\nD\n\nef\nPa\n\nG\nPS\n\n1\nX\n\nN\nS\n\nR\nes\n\nto\nre\n\nD\nef\n\nau\nlt\n\nPa\nra\n\nm\net\n\ner\ns\n\n(X\nN\n\nPA\nR\n\n2)\n2\n\n13\n0\n\n53\n15\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 545\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nG\n\nC\nX\n\nP2\n02\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n2\n\nX\nN\n\nS\nD\n\nef\nPa\n\nG\nPS\n\n2\nX\n\nN\nS\n\nR\nes\n\nto\nre\n\nD\nef\n\nau\nlt\n\nPa\nra\n\nm\net\n\ner\ns\n\n(X\nN\n\nPA\nR\n\n2)\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nG\n\nC\nX\n\nP3\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n0\n\nX\nN\n\nS\nSe\n\ntP\na\n\nG\nPS\n\n0\nX\n\nN\nS\n\nSe\nt\n\nPa\nra\n\nm\net\n\ner\n(X\n\nN\nPA\n\nR\n3)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nP3\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n1\n\nX\nN\n\nS\nSe\n\ntP\na\n\nG\nPS\n\n1\nX\n\nN\nS\n\nSe\nt\n\nPa\nra\n\nm\net\n\ner\n(X\n\nN\nPA\n\nR\n3)\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nG\n\nC\nX\n\nP3\n02\n\nSr\nv(\n\n2,\n13\n\n0)\nG\n\nPS\n2\n\nX\nN\n\nS\nSe\n\ntP\na\n\nG\nPS\n\n2\nX\n\nN\nS\n\nSe\nt\n\nPa\nra\n\nm\net\n\ner\n(X\n\nN\nPA\n\nR\n3)\n\n2\n13\n\n0\n53\n\n15\nC\n\nR\nea\n\nct\nio\n\nn\nW\n\nhe\nel\n\nT\nC\n\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nA\nR\n\nC\n03\n\n00\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n0\n\nR\nes\n\net\nR\n\nW\n0\n\nR\nes\n\net\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n00\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n1\n\nR\nes\n\net\nR\n\nW\n1\n\nR\nes\n\net\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n00\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n2\n\nR\nes\n\net\nR\n\nW\n2\n\nR\nes\n\net\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n00\n3\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n3\n\nR\nes\n\net\nR\n\nW\n3\n\nR\nes\n\net\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n10\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n0\n\nSe\nnd\n\nT\nM\n\nR\nW\n\n0\nSe\n\nnd\nR\n\nW\nT\n\nel\nem\n\net\nry\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n10\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n1\n\nSe\nnd\n\nT\nM\n\nR\nW\n\n1\nSe\n\nnd\nR\n\nW\nT\n\nel\nem\n\net\nry\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n10\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n2\n\nSe\nnd\n\nT\nM\n\nR\nW\n\n2\nSe\n\nnd\nR\n\nW\nT\n\nel\nem\n\net\nry\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n10\n3\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n3\n\nSe\nnd\n\nT\nM\n\nR\nW\n\n3\nSe\n\nnd\nR\n\nW\nT\n\nel\nem\n\net\nry\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n20\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n0\n\nD\nis\n\nab\nle\n\nR\nW\n\n0\nD\n\nis\nab\n\nle\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n20\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n1\n\nD\nis\n\nab\nle\n\nR\nW\n\n1\nD\n\nis\nab\n\nle\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n20\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n2\n\nD\nis\n\nab\nle\n\nR\nW\n\n2\nD\n\nis\nab\n\nle\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n20\n3\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n3\n\nD\nis\n\nab\nle\n\nR\nW\n\n3\nD\n\nis\nab\n\nle\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n546 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nR\n\nC\n03\n\n30\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n0\n\nE\nna\n\nbl\ne\n\nR\nW\n\n0\nE\n\nna\nbl\n\ne\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n30\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n1\n\nE\nna\n\nbl\ne\n\nR\nW\n\n1\nE\n\nna\nbl\n\ne\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n30\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n2\n\nE\nna\n\nbl\ne\n\nR\nW\n\n2\nE\n\nna\nbl\n\ne\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n30\n3\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n3\n\nE\nna\n\nbl\ne\n\nR\nW\n\n3\nE\n\nna\nbl\n\ne\nW\n\nhe\nel\n\n2\n13\n\n0\n53\n\n15\nC\n\nA\nR\n\nC\n03\n\n40\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n0\n\nSe\ntT\n\nor\nqu\n\ne\nR\n\nW\n0\n\nSe\ntT\n\nor\nqu\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nR\n\nC\n03\n\n40\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n1\n\nSe\ntT\n\nor\nqu\n\ne\nR\n\nW\n1\n\nSe\ntT\n\nor\nqu\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nR\n\nC\n03\n\n40\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n2\n\nSe\ntT\n\nor\nqu\n\ne\nR\n\nW\n2\n\nSe\ntT\n\nor\nqu\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nR\n\nC\n03\n\n40\n3\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n3\n\nSe\ntT\n\nor\nqu\n\ne\nR\n\nW\n3\n\nSe\ntT\n\nor\nqu\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nR\n\nC\n03\n\n50\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n0\n\nSe\ntS\n\npe\ned\n\nR\nW\n\n0\nSe\n\ntS\npe\n\ned\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nR\n\nC\n03\n\n50\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n1\n\nSe\ntS\n\npe\ned\n\nR\nW\n\n1\nSe\n\ntS\npe\n\ned\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nR\n\nC\n03\n\n50\n2\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n2\n\nSe\ntS\n\npe\ned\n\nR\nW\n\n2\nSe\n\ntS\npe\n\ned\n2\n\n13\n0\n\n53\n15\n\nC\n\nA\nR\n\nC\n03\n\n50\n3\n\nSr\nv(\n\n2,\n13\n\n0)\nR\n\nW\n3\n\nSe\ntS\n\npe\ned\n\nR\nW\n\n3\nSe\n\ntS\npe\n\ned\n2\n\n13\n0\n\n53\n15\n\nC\n\nT\nhe\n\nrm\nal\n\nC\non\n\ntr\nol\n\nSu\nbs\n\nys\nte\n\nm\nT\n\nC\ns\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nT\nY\n\nC\n00\n\n00\n1\n\n(8\n,1\n\n)T\nC\n\nS\nSe\n\ntT\nar\n\ngS\nta\n\ntC\nom\n\np\nSr\n\nv\n(8\n\n,1\n)\n\nT\nC\n\nS\nSe\n\nt\nT\n\nar\nge\n\nt\nSt\n\nat\ne\n\nC\nom\n\npo\nne\n\nnt\n8\n\n1\n53\n\n9\nC\n\nT\nY\n\nC\n00\n\n00\n2\n\n(8\n,1\n\n)T\nC\n\nS\nSe\n\ntT\nar\n\ngS\nta\n\ntM\nod\n\nu\nSr\n\nv\n(8\n\n,1\n)\n\nT\nC\n\nS\nSe\n\nt\nT\n\nar\nge\n\nt\nSt\n\nat\ne\n\nM\nod\n\nul\ne\n\n8\n1\n\n53\n9\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 547\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nC\n00\n\n10\n0\n\n(1\n2,\n\n13\n7)\n\nSe\ntT\n\nem\npS\n\nen\nsL\n\nim\nit\n\nT\nC\n\nS\nSe\n\nt\nT\n\nem\npe\n\nra\ntu\n\nre\nSe\n\nns\nor\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n00\n\n10\n1\n\n(1\n2,\n\n13\n7)\n\nSe\ntC\n\nom\npT\n\nem\npL\n\nim\nit\n\nT\nC\n\nS\nSe\n\nt\nC\n\nom\npo\n\nne\nnt\n\nT\nem\n\npe\nra\n\ntu\nre\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n00\n\n11\n0\n\n(1\n2,\n\n13\n7)\n\nSe\ntB\n\nat\nS0\n\nT\nm\n\npL\nim\n\nit\nT\n\nC\nS\n\nSe\nt\n\nB\nat\n\nte\nry\n\nSt\nri\n\nng\n0\n\nT\nem\n\npe\nra\n\ntu\nre\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n00\n\n11\n1\n\n(1\n2,\n\n13\n7)\n\nSe\ntB\n\nat\nS1\n\nT\nm\n\npL\nim\n\nit\nT\n\nC\nS\n\nSe\nt\n\nB\nat\n\nte\nry\n\nSt\nri\n\nng\n1\n\nT\nem\n\npe\nra\n\ntu\nre\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n00\n\n11\n2\n\n(1\n2,\n\n13\n7)\n\nSe\ntB\n\nat\nS2\n\nT\nm\n\npL\nim\n\nit\nT\n\nC\nS\n\nSe\nt\n\nB\nat\n\nte\nry\n\nSt\nri\n\nng\n2\n\nT\nem\n\npe\nra\n\ntu\nre\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n00\n\n12\n0\n\n(1\n2,\n\n13\n7)\n\nSe\ntM\n\nG\nT\n\nN\nT\n\nm\npL\n\nim\nit\n\nT\nC\n\nS\nSe\n\nt\nM\n\nG\nT\n\nN\nT\n\nem\npe\n\nra\ntu\n\nre\nL\n\nim\nits\n\n12\n13\n\n7\n53\n\n11\nC\n\nT\nY\n\nC\n00\n\n12\n1\n\n(1\n2,\n\n13\n7)\n\nSe\ntM\n\nG\nT\n\nR\nT\n\nm\npL\n\nim\nit\n\nT\nC\n\nS\nSe\n\nt\nM\n\nG\nT\n\nR\nT\n\nem\npe\n\nra\ntu\n\nre\nL\n\nim\nits\n\n12\n13\n\n7\n53\n\n11\nC\n\nT\nY\n\nC\n00\n\n13\n0\n\n(1\n2,\n\n13\n7)\n\nSe\nt\n\nST\nR\n\nT\nm\n\npL\nim\n\nit\nT\n\nC\nS\n\nSe\nt\n\nST\nR\n\nT\nem\n\npe\nra\n\ntu\nre\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n00\n\n14\n0\n\n(1\n2,\n\n13\n7)\n\nSe\ntP\n\nL\nO\n\nC\nN\n\nT\nm\n\npL\nim\n\nit\nT\n\nC\nS\n\nSe\nt\n\nPL\nO\n\nC\nN\n\nT\nem\n\npe\nra\n\ntu\nre\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n00\n\n14\n1\n\n(1\n2,\n\n13\n7)\n\nSe\ntP\n\nL\nO\n\nC\nR\n\nT\nm\n\npL\nim\n\nit\nT\n\nC\nS\n\nSe\nt\n\nPL\nO\n\nC\nR\n\nT\nem\n\npe\nra\n\ntu\nre\n\nL\nim\n\nits\n12\n\n13\n7\n\n53\n11\n\nC\n\nT\nY\n\nC\n60\n\n00\n0\n\nSr\nv6\n\nL\noa\n\ndH\nea\n\nte\nrT\n\nim\neo\n\nut\nM\n\nem\nor\n\ny\nL\n\noa\nd\n\nfo\nr\n\nhe\nat\n\ner\ntim\n\neo\nut\n\nto\nT\n\nC\nS\n\nC\non\n\ntr\nol\n\nle\nr\n\n6\n13\n\n2\n53\n\n11\nC\n\nT\nY\n\nC\n60\n\n00\n1\n\nSr\nv6\n\nL\noa\n\ndC\nom\n\npo\nne\n\nnt\nC\n\non\nfig\n\nM\nem\n\nor\ny\n\nL\noa\n\nd\nfo\n\nr\nC\n\non\ntr\n\nol\nC\n\nom\npo\n\nne\nnt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\nto\n\nT\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n6\n\n13\n2\n\n53\n11\n\nC\n\nT\nY\n\nC\n61\n\n00\n0\n\nSr\nv6\n\nD\num\n\npH\nea\n\nte\nrT\n\nim\neo\n\nut\nM\n\nem\nor\n\ny\nD\n\num\np\n\nfo\nr\n\nhe\nat\n\ner\ntim\n\neo\nut\n\nto\nT\n\nC\nS\n\nC\non\n\ntr\nol\n\nle\nr\n\n6\n13\n\n5\n53\n\n11\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n548 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nC\n61\n\n00\n1\n\nSr\nv6\n\nD\num\n\npC\nom\n\npo\nne\n\nnt\nC\n\non\nfig\n\nM\nem\n\nor\ny\n\nD\num\n\np\nfo\n\nr\nC\n\non\ntr\n\nol\nC\n\nom\npo\n\nne\nnt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\nto\n\nT\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\n6\n\n13\n5\n\n53\n11\n\nC\n\nP\nay\n\nlo\nad\n\nC\nom\n\npu\nte\n\nr\nT\n\nC\ns\n\n(F\nL\n\nP\nG\n\nen\ner\n\nat\nio\n\nn\n1)\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nL\nR\n\nC\n00\n\n00\n0\n\n(2\n,1\n\n30\n)P\n\nB\nN\n\nSe\ntR\n\nes\net\n\nL\nin\n\ne\nSe\n\nt\nPL\n\nO\nC\n\nPo\nw\n\ner\n-B\n\noa\nrd\n\nN\nR\n\nes\net\n\nL\nin\n\ne\nto\n\nhi\ngh\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n00\n\n00\n1\n\n(2\n,1\n\n30\n)P\n\nB\nR\n\nSe\ntR\n\nes\net\n\nL\nin\n\ne\nSe\n\nt\nPL\n\nO\nC\n\nPo\nw\n\ner\n-B\n\noa\nrd\n\nR\nR\n\nes\net\n\nL\nin\n\ne\nto\n\nhi\ngh\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\n01\n0\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nG\net\n\nV\ner\n\nsi\non\n\nPL\nO\n\nC\nV\n\nT\nX\n\nG\net\n\nV\ner\n\nsi\non\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\n02\n0\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nL\noo\n\npb\nac\n\nk\nD\n\nat\na\n\nPL\nO\n\nC\nV\n\nT\nX\n\nL\noo\n\npb\nac\n\nk\nD\n\nat\na\n\nfr\nom\n\nC\nom\n\nm\nan\n\nd\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\n11\n0\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nG\net\n\nR\nou\n\ntS\net\n\ntin\nPL\n\nO\nC\n\nV\nT\n\nX\nG\n\net\nM\n\nU\nX\n\n(d\nat\n\na\nro\n\nut\nin\n\ng)\nSe\n\ntti\nng\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n11\n1\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nSe\nt\n\nR\nou\n\nt\nA\n\nll\nPL\n\nO\nC\n\nV\nT\n\nX\nSe\n\nt\nM\n\nU\nX\n\nA\nll\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n11\n2\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nSe\nt\n\nR\nou\n\ntS\nin\n\ngl\nPL\n\nO\nC\n\nV\nT\n\nX\nSe\n\nt\nM\n\nU\nX\n\n(D\nat\n\na\nR\n\nou\ntin\n\ng)\nSi\n\nng\nle\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n13\n0\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nSe\nt\n\nPa\ntte\n\nrn\nPL\n\nO\nC\n\nV\nT\n\nX\nPa\n\ntte\nrn\n\nG\nen\n\ner\nat\n\nor\nSe\n\nt\nPa\n\ntte\nrn\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n13\n1\n\n(2\n,1\n\n30\n)\n\nV\nT\n\nX\nE\n\nna\nbl\n\neF\nix\n\nPa\ntte\n\nPL\nO\n\nC\nV\n\nT\nX\n\nPa\ntte\n\nrn\nG\n\nen\ner\n\nat\nor\n\nE\nna\n\nbl\ne\n\nFi\nx\n\nPa\ntte\n\nrn\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nR\n\nC\n02\n\n13\n2\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nD\nis\n\nab\nle\n\nPa\ntte\n\nr\nPL\n\nO\nC\n\nV\nT\n\nX\nPa\n\ntte\nrn\n\nG\nen\n\ner\nat\n\nor\nD\n\nis\nab\n\nle\nPa\n\ntte\nrn\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n13\n3\n\n(2\n,1\n\n30\n)\n\nV\nT\n\nX\nE\n\nna\nbl\n\nC\nou\n\nnt\nPa\n\ntt\nPL\n\nO\nC\n\nV\nT\n\nX\nPa\n\ntte\nrn\n\nG\nen\n\ner\nat\n\nor\nE\n\nna\nbl\n\ne\nC\n\nou\nnt\n\ner\nPa\n\ntte\nrn\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n13\n4\n\n(2\n,1\n\n30\n)\n\nV\nT\n\nX\nPa\n\ntte\nrn\n\nG\net\n\nIn\nfo\n\nPL\nO\n\nC\nV\n\nT\nX\n\nPa\ntte\n\nrn\nG\n\nen\ner\n\nat\nor\n\n:\nG\n\net\nIn\n\nfo\n2\n\n13\n0\n\n53\n11\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 549\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nC\n02\n\n20\n1\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nD\nD\n\nSP\nR\n\nT\nog\n\nPR\nSt\n\na\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nD\nS\n\nPr\not\n\noc\nol\n\nT\nog\n\ngl\ne\n\nPs\neu\n\ndo\nra\n\nnd\nom\n\nB\nyp\n\nas\ns\n\nSt\nat\n\ne\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nR\n\nC\n02\n\n20\n2\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nD\nD\n\nSP\nR\n\nG\net\n\nPR\nSt\n\na\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nD\nS\n\nPr\not\n\noc\nol\n\nG\net\n\nPs\neu\n\ndo\nR\n\nan\ndo\n\nm\nB\n\nyp\nas\n\ns\nSt\n\nat\ne\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n21\n1\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nD\nD\n\nSP\nR\n\nT\nog\n\nT\nxS\n\nta\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nD\nS\n\nPr\not\n\noc\nol\n\nT\nog\n\ngl\ne\n\nT\nra\n\nns\nm\n\nit\nSt\n\nat\ne\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n21\n2\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nD\nD\n\nSP\nR\n\nG\net\n\nT\nxS\n\nta\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nD\nS\n\nPr\not\n\noc\nol\n\nG\net\n\nT\nra\n\nns\nm\n\nit\nSt\n\nat\ne\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n3E\nA\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nSW\nR\n\nes\net\n\nPL\nO\n\nC\nV\n\nT\nX\n\nSo\nft\n\nw\nar\n\ne\nR\n\nes\net\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n40\n1\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nG\net\n\nD\neb\n\nug\nSp\n\nee\nd\n\nPL\nO\n\nC\nV\n\nT\nX\n\nD\neb\n\nug\nG\n\net\nSp\n\nee\nd\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n40\n2\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nG\net\n\nD\neb\n\nug\nSo\n\nur\nc\n\nPL\nO\n\nC\nV\n\nT\nX\n\nD\neb\n\nug\nG\n\net\nPi\n\nn\nSo\n\nur\nce\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\n41\n1\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nSe\ntD\n\neb\nug\n\nSp\nee\n\nd\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\neb\nug\n\nSe\nt\n\nSp\nee\n\nd\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nR\n\nC\n02\n\n41\n2\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nSe\ntD\n\neb\nug\n\nSo\nur\n\nc\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\neb\nug\n\nSe\nt\n\nPi\nn\n\nSo\nur\n\nce\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nR\n\nC\n02\n\n4C\nC\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nG\net\n\nD\neb\n\nug\nIn\n\nfo\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\neb\nug\n\nG\net\n\nIn\nfo\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n02\n\nA\n10\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nC\nlo\n\nck\nO\n\nff\nPL\n\nO\nC\n\nM\nM\n\nU\nSw\n\nitc\nh\n\nC\nlo\n\nck\nO\n\nff\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\n11\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nC\nlo\n\nck\nO\n\nn\nPL\n\nO\nC\n\nM\nM\n\nU\nSw\n\nitc\nh\n\nC\nlo\n\nck\nO\n\nn\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\n12\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nG\net\n\nC\nlo\n\nck\nSt\n\nat\ne\n\nPL\nO\n\nC\nM\n\nM\nU\n\nG\net\n\nC\nlo\n\nck\nSt\n\nat\ne\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\nA\n13\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nSe\ntC\n\nlo\nck\n\nSp\nee\n\nd\nPL\n\nO\nC\n\nM\nM\n\nU\nSe\n\nt\nC\n\nlo\nck\n\nSp\nee\n\nd\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\n14\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nG\net\n\nC\nlo\n\nck\nSp\n\nee\nd\n\nPL\nO\n\nC\nM\n\nM\nU\n\nG\net\n\nC\nlo\n\nck\nSp\n\nee\nd\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n550 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nC\n02\n\nA\n15\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nA\nct\n\niv\nat\n\neR\nes\n\net\nPL\n\nO\nC\n\nM\nM\n\nU\nA\n\nct\niv\n\nat\ne\n\nR\nes\n\net\nL\n\nin\ne\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\nA\n16\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nD\nea\n\nct\niv\n\naR\nes\n\net\nPL\n\nO\nC\n\nM\nM\n\nU\nD\n\nea\nct\n\niv\nat\n\ne\nR\n\nes\net\n\nL\nin\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\n17\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nG\net\n\nR\nes\n\net\nSt\n\nat\ne\n\nPL\nO\n\nC\nM\n\nM\nU\n\nG\net\n\nR\nes\n\net\nSt\n\nat\ne\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\nA\n18\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nSt\nop\n\nC\nur\n\nrA\nct\n\niv\nPL\n\nO\nC\n\nM\nM\n\nU\nSt\n\nop\nC\n\nur\nre\n\nnt\nA\n\nct\niv\n\nity\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\n19\n\n(2\n,1\n\n30\n)M\n\nM\nU\n\nG\net\n\nM\non\n\nito\nD\n\nat\na\n\nPL\nO\n\nC\nM\n\nM\nU\n\nG\net\n\nM\non\n\nito\nri\n\nng\nD\n\nat\na\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\nA\nA\n\n1\n(2\n\n,1\n30\n\n)M\nM\n\nU\nW\n\nri\nte\n\nD\nat\n\na\nPL\n\nO\nC\n\nM\nM\n\nU\nW\n\nri\nte\n\nD\nat\n\na\nto\n\nM\nM\n\nU\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\nA\n\n2\n(2\n\n,1\n30\n\n)M\nM\n\nU\nR\n\nea\nd\n\nD\nat\n\na\nPL\n\nO\nC\n\nM\nM\n\nU\nR\n\nea\nd\n\nD\nat\n\na\nfr\n\nom\nM\n\nM\nU\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\nA\nB\n\n1\n(2\n\n,1\n30\n\n)M\nM\n\nU\nG\n\net\nPi\n\nct\nur\n\neL\nis\n\nPL\nO\n\nC\nM\n\nM\nU\n\nG\net\n\nPi\nct\n\nur\ne\n\nL\nis\n\nt\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\nB\n\n2\n(2\n\n,1\n30\n\n)M\nM\n\nU\nG\n\net\nB\n\nad\nB\n\nlo\nck\n\nL\ni\n\nPL\nO\n\nC\nM\n\nM\nU\n\nG\net\n\nB\nad\n\nB\nlo\n\nck\nL\n\nis\nt\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\nA\nB\n\n3\n(2\n\n,1\n30\n\n)M\nM\n\nU\nG\n\net\nPi\n\ncB\nlo\n\nck\nL\n\ni\nPL\n\nO\nC\n\nM\nM\n\nU\nG\n\net\nPi\n\nct\nur\n\ne\nB\n\nlo\nck\n\nL\nis\n\nt\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\nB\n\n4\n(2\n\n,1\n30\n\n)M\nM\n\nU\nG\n\net\nFu\n\nlB\nlo\n\nck\nL\n\ni\nPL\n\nO\nC\n\nM\nM\n\nU\nG\n\net\nFu\n\nll\nB\n\nlo\nck\n\nL\nis\n\nt\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\nC\n\n1\n(2\n\n,1\n30\n\n)M\nM\n\nU\nD\n\nel\net\n\neD\nat\n\naS\net\n\nPL\nO\n\nC\nM\n\nM\nU\n\nD\nel\n\net\ne\n\nD\nat\n\na\nSe\n\nt\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n02\n\nA\nC\n\n2\n(2\n\n,1\n30\n\n)M\nM\n\nU\nFo\n\nrm\nat\n\nFl\nas\n\nh\nPL\n\nO\nC\n\nM\nM\n\nU\nFo\n\nrm\nat\n\nFl\nas\n\nh\nC\n\nhi\np\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n02\n\nA\nC\n\n3\n(2\n\n,1\n30\n\n)M\nM\n\nU\nR\n\nes\net\n\nFl\nas\n\nh\nPL\n\nO\nC\n\nM\nM\n\nU\nR\n\nes\net\n\nFl\nas\n\nh\nC\n\nhi\np\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 551\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nC\n02\n\nB\n0C\n\n(2\n,1\n\n30\n)V\n\nT\nX\n\nG\net\n\nSS\nR\n\nA\nM\n\nin\nfo\n\nPL\nO\n\nC\nV\n\nT\nX\n\nG\net\n\nSS\nR\n\nA\nM\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nR\n\nC\n06\n\n20\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nL\noa\n\ndF\nla\n\nsh\nD\n\nat\nPL\n\nO\nC\n\nC\nC\n\nN\nL\n\noa\nd\n\nFl\nas\n\nh\nD\n\nat\na\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n20\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nL\noa\n\ndF\nla\n\nsh\nD\n\nat\nPL\n\nO\nC\n\nC\nC\n\nR\nL\n\noa\nd\n\nFl\nas\n\nh\nD\n\nat\na\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n30\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nE\nra\n\nse\nPr\n\nog\nra\n\nm\nPL\n\nO\nC\n\nC\nC\n\nN\nE\n\nra\nse\n\nPr\nog\n\nra\nm\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n30\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nE\nra\n\nse\nPr\n\nog\nra\n\nm\nPL\n\nO\nC\n\nC\nC\n\nR\nE\n\nra\nse\n\nPr\nog\n\nra\nm\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n40\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nR\nea\n\ndR\neg\n\nis\nte\n\nr\nPL\n\nO\nC\n\nC\nC\n\nN\nR\n\nea\nd\n\nR\neg\n\nis\nte\n\nr\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n06\n\n40\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nR\nea\n\ndR\neg\n\nis\nte\n\nr\nPL\n\nO\nC\n\nC\nC\n\nR\nR\n\nea\nd\n\nR\neg\n\nis\nte\n\nr\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n06\n\n50\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nW\nri\n\nte\nR\n\neg\nis\n\nte\nPL\n\nO\nC\n\nC\nC\n\nN\nW\n\nri\nte\n\nR\neg\n\nis\nte\n\nr\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n06\n\n50\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nW\nri\n\nte\nR\n\neg\nis\n\nte\nPL\n\nO\nC\n\nC\nC\n\nR\nW\n\nri\nte\n\nR\neg\n\nis\nte\n\nr\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n06\n\n60\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nSw\ntc\n\nhW\nat\n\nch\ndo\n\nPL\nO\n\nC\nC\n\nC\nN\n\nSw\nitc\n\nh\nW\n\nat\nch\n\ndo\ng\n\nSt\nat\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n06\n\n60\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nSw\ntc\n\nhW\nat\n\nch\ndo\n\nPL\nO\n\nC\nC\n\nC\nR\n\nSw\nitc\n\nh\nW\n\nat\nch\n\ndo\ng\n\nSt\nat\n\ne\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nR\n\nC\n06\n\n70\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nC\nle\n\nar\nT\n\nem\npA\n\nle\nPL\n\nO\nC\n\nC\nC\n\nN\nC\n\nle\nar\n\nT\nem\n\npe\nra\n\ntu\nre\n\nSe\nns\n\nor\nA\n\nle\nrt\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n70\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nC\nle\n\nar\nT\n\nem\npA\n\nle\nPL\n\nO\nC\n\nC\nC\n\nR\nC\n\nle\nar\n\nT\nem\n\npe\nra\n\ntu\nre\n\nSe\nns\n\nor\nA\n\nle\nrt\n\n2\n13\n\n0\n53\n\n15\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n552 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nC\n06\n\n80\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nR\nea\n\ndF\nir\n\nm\nw\n\nV\ner\n\nPL\nO\n\nC\nC\n\nC\nN\n\nR\nea\n\nd\nFi\n\nrm\nw\n\nar\ne\n\nV\ner\n\nsi\non\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n80\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nR\nea\n\ndF\nir\n\nm\nw\n\nV\ner\n\nPL\nO\n\nC\nC\n\nC\nR\n\nR\nea\n\nd\nFi\n\nrm\nw\n\nar\ne\n\nV\ner\n\nsi\non\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n90\n0\n\n(2\n,1\n\n30\n)C\n\nC\nN\n\nPr\nog\n\nra\nm\n\nFl\nas\n\nh\nPL\n\nO\nC\n\nC\nC\n\nN\nPr\n\nog\nra\n\nm\nFl\n\nas\nh\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nR\n\nC\n06\n\n90\n1\n\n(2\n,1\n\n30\n)C\n\nC\nR\n\nPr\nog\n\nra\nm\n\nFl\nas\n\nh\nPL\n\nO\nC\n\nC\nC\n\nR\nPr\n\nog\nra\n\nm\nFl\n\nas\nh\n\n2\n13\n\n0\n53\n\n15\nC\n\nSc\nie\n\nnc\ne\n\nD\nat\n\na\nD\n\now\nnl\n\nin\nk\n\nSy\nst\n\nem\nT\n\nC\ns\n\n(F\nL\n\nP\nG\n\nen\ner\n\nat\nio\n\nn\n1)\n\nN\nam\n\ne\nD\n\nes\ncr\n\nip\nti\n\non\nL\n\non\ng\n\nD\nes\n\ncr\nip\n\nti\non\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nA\nP\n\nID\nA\n\nck\nC\n\nT\nY\n\nP\n\nL\nD\n\nC\n00\n\n00\n0\n\n(2\n,1\n\n30\n)D\n\nD\nSN\n\nSe\ntD\n\nat\naS\n\npe\ned\n\nD\nD\n\nS\nD\n\nat\na\n\nR\nou\n\ntin\ng\n\nN\nSe\n\nt\nD\n\nat\na\n\nSp\nee\n\nd\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\n00\n\n00\n1\n\n(2\n,1\n\n30\n)D\n\nD\nSR\n\nSe\ntD\n\nat\naS\n\npe\ned\n\nD\nD\n\nS\nD\n\nat\na\n\nR\nou\n\ntin\ng\n\nR\nSe\n\nt\nD\n\nat\na\n\nSp\nee\n\nd\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nG\n\nD\nC\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSN\nG\n\net\nD\n\nef\nC\n\non\nf\n\nD\nD\n\nS\nN\n\nG\net\n\nD\nef\n\nau\nlt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\n(G\n\nD\nC\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nD\nC\n\n01\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSR\nG\n\net\nD\n\nef\nC\n\non\nf\n\nD\nD\n\nS\nR\n\nG\net\n\nD\nef\n\nau\nlt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\n(G\n\nD\nC\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nM\nI0\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSN\nG\n\net\nD\n\nef\nM\n\noI\nD\n\nD\nD\n\nS\nN\n\nG\net\n\nD\nef\n\nau\nlt\n\nM\nod\n\nul\ne\n\nId\nen\n\nti fi\nca\n\ntio\nn\n\n(G\nM\n\nI)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nM\nI0\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSR\nG\n\net\nD\n\nef\nM\n\noI\nD\n\nD\nD\n\nS\nR\n\nG\net\n\nD\nef\n\nau\nlt\n\nM\nod\n\nul\ne\n\nId\nen\n\nti fi\nca\n\ntio\nn\n\n(G\nM\n\nI)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nM\nI1\n\n0\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSN\nG\n\net\nM\n\nod\nID\n\nD\nD\n\nS\nN\n\nG\net\n\nM\nod\n\nul\ne\n\nId\nen\n\ntifi\nca\n\ntio\nn\n\n(G\nM\n\nI)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nM\nI1\n\n1\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSR\nG\n\net\nM\n\nod\nID\n\nD\nD\n\nS\nR\n\nG\net\n\nM\nod\n\nul\ne\n\nId\nen\n\ntifi\nca\n\ntio\nn\n\n(G\nM\n\nI)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 553\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nD\n\nC\nG\n\nR\nG\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSN\nG\n\net\nR\n\neg\nis\n\nD\nD\n\nS\nN\n\nG\net\n\nR\neg\n\nis\nte\n\nr\n(G\n\nR\nG\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nR\nG\n\n01\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSR\nG\n\net\nR\n\neg\nis\n\nD\nD\n\nS\nR\n\nG\net\n\nR\neg\n\nis\nte\n\nr\n(G\n\nR\nG\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nR\nT\n\n00\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSN\nG\n\net\nR\n\neg\nT\n\nem\np\n\nD\nD\n\nS\nN\n\nG\net\n\nR\neg\n\nis\nte\n\nr\nT\n\nem\npo\n\nra\nry\n\n(G\nR\n\nT\n)\n\nT\nC\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nD\n\nC\nG\n\nR\nT\n\n01\nSr\n\nv(\n2,\n\n13\n0)\n\nD\nD\n\nSR\nG\n\net\nR\n\neg\nT\n\nem\np\n\nD\nD\n\nS\nR\n\nG\net\n\nR\neg\n\nis\nte\n\nr\nT\n\nem\npo\n\nra\nry\n\n(G\nR\n\nT\n)\n\nT\nC\n\n2\n13\n\n0\n53\n\n15\nC\n\nL\nD\n\nC\nG\n\nSR\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSN\n\nG\net\n\nSt\nat\n\nR\neg\n\nD\nD\n\nS\nN\n\nG\net\n\nSt\nat\n\nus\nR\n\neg\nis\n\nte\nr\n\n(G\nSR\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nG\n\nSR\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSR\n\nG\net\n\nSt\nat\n\nR\neg\n\nD\nD\n\nS\nR\n\nG\net\n\nSt\nat\n\nus\nR\n\neg\nis\n\nte\nr\n\n(G\nSR\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n15\n\nC\n\nL\nD\n\nC\nM\n\nFW\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSN\n\nM\nes\n\nsF\nor\n\nw\nD\n\nD\nS\n\nN\nM\n\nes\nsa\n\nge\nFo\n\nrw\nar\n\ndi\nng\n\n(M\nFW\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nM\n\nFW\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSR\n\nM\nes\n\nsF\nor\n\nw\nD\n\nD\nS\n\nR\nM\n\nes\nsa\n\nge\nFo\n\nrw\nar\n\ndi\nng\n\n(M\nFW\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nR\n\nST\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nS\n\nN\nR\n\nes\net\n\nD\nD\n\nS\nN\n\nR\nes\n\net\n(R\n\nST\n)\n\nC\nom\n\nm\nan\n\nd,\nno\n\nt\nth\n\ne\nPL\n\nO\nC\n\nre\nse\n\nt!\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nR\n\nST\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nS\n\nR\nR\n\nes\net\n\nD\nD\n\nS\nR\n\nR\nes\n\net\n(R\n\nST\n)\n\nC\nom\n\nm\nan\n\nd,\nno\n\nt\nth\n\ne\nPL\n\nO\nC\n\nre\nse\n\nt!\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nSA\n\nC\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSN\n\nSe\ntA\n\ndd\nre\n\nD\nD\n\nS\nN\n\nSe\nt\n\nA\ndd\n\nre\nss\n\nT\nC\n\n(S\nA\n\nC\n)\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nD\n\nC\nSA\n\nC\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSR\n\nSe\ntA\n\ndd\nre\n\nD\nD\n\nS\nR\n\nSe\nt\n\nA\ndd\n\nre\nss\n\nT\nC\n\n(S\nA\n\nC\n)\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nD\n\nC\nSD\n\nC\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSN\n\nSe\ntD\n\nef\nC\n\non\nf\n\nD\nD\n\nS\nN\n\nSe\nt\n\nD\nef\n\nau\nlt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\n(S\n\nD\nC\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nSD\n\nC\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSR\n\nSe\ntD\n\nef\nC\n\non\nf\n\nD\nD\n\nS\nR\n\nSe\nt\n\nD\nef\n\nau\nlt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\n(S\n\nD\nC\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n554 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.2\nS/\n\nC\n te\n\nle\nco\n\nm\nm\n\nan\nd \n\npa\nck\n\net\n d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nD\n\nC\nSM\n\nI0\n0\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSN\n\nSe\ntM\n\nod\nId\n\nD\nD\n\nS\nN\n\nSe\nt\n\nM\nod\n\nul\ne\n\nId\nen\n\ntifi\nca\n\ntio\nn\n\n(S\nM\n\nI)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nSM\n\nI0\n1\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSR\n\nSe\ntM\n\nod\nId\n\nD\nD\n\nS\nR\n\nSe\nt\n\nM\nod\n\nul\ne\n\nId\nen\n\ntifi\nca\n\ntio\nn\n\n(S\nM\n\nI)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nSR\n\nG\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSN\n\nSe\ntR\n\neg\nis\n\nD\nD\n\nS\nN\n\nSe\nt\n\nR\neg\n\nis\nte\n\nr\n(S\n\nR\nG\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nSR\n\nG\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSR\n\nSe\ntR\n\neg\nis\n\nD\nD\n\nS\nR\n\nSe\nt\n\nR\neg\n\nis\nte\n\nr\n(S\n\nR\nG\n\n)\nT\n\nC\n2\n\n13\n0\n\n53\n11\n\nC\n\nL\nD\n\nC\nSR\n\nT\n00\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSN\n\nSe\ntR\n\neg\nT\n\nem\np\n\nD\nD\n\nS\nN\n\nSe\nt\n\nR\neg\n\nis\nte\n\nr\nT\n\nem\npo\n\nra\nry\n\n(S\nR\n\nT\n)\n\nT\nC\n\n2\n13\n\n0\n53\n\n11\nC\n\nL\nD\n\nC\nSR\n\nT\n01\n\nSr\nv(\n\n2,\n13\n\n0)\nD\n\nD\nSR\n\nSe\ntR\n\neg\nT\n\nem\np\n\nD\nD\n\nS\nR\n\nSe\nt\n\nR\neg\n\nis\nte\n\nr\nT\n\nem\npo\n\nra\nry\n\n(S\nR\n\nT\n)\n\nT\nC\n\n2\n13\n\n0\n53\n\n11\nC\n\n17 Annexes and Data Sheets 555\n\n\n\n17.3.2 Telemetry Definitions\n\nSee Table 17.3.\n\n17.3.3 Event Telemetry Definitions\n\nThe complete list of events is included in Table 17.4. It needs to be noted that in\ngeneral an event can be triggered by several different objects on-board, but there are\nalso device specific events, which can only be triggered by one object. An example of\nthe former case would be the DEVICE_INTERPRETING_REPLY_FAILED event,\nwhich indicates that the reply from a device could not be interpreted correctly by a\ndevice handler; this event can be triggered by nearly all device handlers. An event\nwhich can only triggered by one object is for example the PANELS_DEPLOYED\nevent, which indicates that the OBSW has determined that the solar panels are\ndeployed; it can only be triggered by the PSS Controller.\n\nTable 17.4 lists the events with their name in the OBSW (column \u201cEvent\nName\u201d), ID (also called Report ID or RID in [37]) and a description. It only shows\nthe object-ID of the triggering object for those events, which can only be triggered\nby one object (column \u201cSource ObjID\u201d). Note that the object-ID 0 stands for the\ngeneral OBSW. The first two digits of the RID indicate the subsystem, the events\nare assigned to, according to the column \u201cSPID Range\u201d in Table 16.1.\n\nTable 17.4 also lists the events\u2019 severity according to [37], namely\n\n\u2022 \u201cI\u201d for info events,\n\u2022 \u201cL\u201d for low,\n\u2022 \u201cM\u201d for medium and\n\u2022 \u201cH\u201d for high severity events.\n\nFurthermore, each events comprises two 4 byte parameters which can contain\nadditional information on the event. The contents of these parameters are also given\nin the table (columns \u201cParameter 1\u201d and \u201cParameter 2\u201d).\n\n556 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_16\n\n\nT\nab\n\nle\n17\n\n.3\nS/\nC\nte\nle\nm\net\nry\n\npa\nck\net\n\nde\nfi\nni\ntio\n\nns\n\nSy\nst\n\nem\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nY\nY\n\nT\nE\n\n78\n00\n\npi\nng\n\n78\n00\n\nSr\nv\n\n(1\n7,\n\n2)\nT\n\nes\nt\n\nPi\nng\n\nPa\nck\n\net\n53\n\n17\n2\n\n0\n0\n\n?\n1\n\nPI\nN\n\nG\n\nSy\nst\n\nem\nM\n\nan\nag\n\ner\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nY\nM\n\nFC\n74\n\n00\nhe\n\nal\n74\n\n00\nSr\n\nv\n(2\n\n01\n,3\n\n)\nA\n\nll\nO\n\nbj\nec\n\nts \u2019\nhe\n\nal\nth\n\nFl\nag\n\ns\nR\n\nep\nor\n\nt\n53\n\n20\n1\n\n3\n0\n\n0\n74\n\n00\nY\n\nM\nC\n\n22\n10\n\n2\n\nY\nM\n\nFC\n75\n\n00\nav\n\nta\n75\n\n00\nSr\n\nv\n(2\n\n02\n,6\n\n)\nA\n\nva\nila\n\nbl\ne\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\ns\nR\n\nep\nor\n\nt\n53\n\n20\n2\n\n6\n0\n\n0\n75\n\n00\nY\n\nM\nC\n\n22\n20\n\n5,\nY\n\nM\nC\n\n24\n20\n\n5\n\nY\nM\n\nFC\n75\n\n01\nav\n\nsq\n75\n\n01\nSr\n\nv\n(2\n\n02\n,8\n\n)\nA\n\nva\nila\n\nbl\ne\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nSe\n\nqu\nen\n\nce\ns\n\nR\nep\n\nor\nt\n\n53\n20\n\n2\n8\n\n0\n0\n\n75\n01\n\nY\nM\n\nC\n22\n\n20\n7,\n\nY\nM\n\nC\n24\n\n20\n7\n\nY\nM\n\nFC\n75\n\n02\nta\n\nda\n75\n\n02\nSr\n\nv\n(2\n\n02\n,1\n\n0)\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nT\nab\n\nle\nD\n\nat\na\n\nR\nep\n\nor\nt\n\n53\n20\n\n2\n10\n\n0\n0\n\n75\n02\n\nY\nM\n\nC\n22\n\n20\n9,\n\nY\nM\n\nC\n24\n\n20\n9\n\nY\nM\n\nFC\n75\n\n03\nsq\n\nda\n75\n\n03\nSr\n\nv\n(2\n\n02\n,1\n\n2)\nM\n\nod\ne\n\nC\nha\n\nng\ne\n\nSe\nqu\n\nen\nce\n\nD\nat\n\na\nR\n\nep\nor\n\nt\n53\n\n20\n2\n\n12\n0\n\n0\n75\n\n03\nY\n\nM\nC\n\n22\n21\n\n1,\nY\n\nM\nC\n\n24\n21\n\n1\n\nY\nM\n\nFC\n75\n\n04\nm\n\nes\nl\n\n75\n04\n\nSr\nv\n\n(2\n02\n\n,1\n4)\n\nA\nva\n\nila\nbl\n\ne\nM\n\nem\nor\n\ny\nSl\n\not\ns\n\nfo\nr\n\nM\nod\n\ne\nC\n\nha\nng\n\ne\nT\n\nab\nle\n\ns&\nSe\n\nqu\nen\n\nce\n\n53\n20\n\n2\n14\n\n0\n0\n\n?\n1\n\nY\nM\n\nC\n22\n\n21\n3\n\nY\nM\n\nFC\n75\n\n05\nm\n\net\nb\n\n75\n05\n\nSr\nv\n\n(2\n02\n\n,1\n6)\n\nA\nva\n\nila\nbl\n\ne\nm\n\nem\nor\n\ny\nsl\n\not\ns\n\nfo\nr\n\nO\nbj\n\nec\nt\n\nM\nod\n\neC\nha\n\nng\ne\n\nT\nab\n\nle\ns\n\n53\n20\n\n2\n16\n\n0\n0\n\n?\n1\n\nY\nM\n\nC\n22\n\n21\n5,\n\nY\nM\n\nC\n24\n\n21\n5\n\nY\nM\n\nFC\n75\n\n06\nm\n\nes\nq\n\n75\n06\n\nSr\nv\n\n(2\n02\n\n,1\n8)\n\nA\nva\n\nila\nbl\n\ne\nm\n\nem\nor\n\ny\nsl\n\not\ns\n\nfo\nr\n\nO\nbj\n\nec\nt\n\nM\nod\n\neC\nha\n\nng\ne\n\nSe\nqu\n\nen\nce\n\n53\n20\n\n2\n18\n\n0\n0\n\n?\n1\n\nY\nM\n\nC\n22\n\n21\n7,\n\nY\nM\n\nC\n24\n\n21\n7\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 557\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nim\n\ne\nM\n\nan\nag\n\nin\ng\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nY\nT\n\nH\nK\n\n77\n00\n\ntim\ne\n\n37\n70\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nB\nas\n\nic\nT\n\nim\ne\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\n53\n3\n\n25\n77\n\n00\n0\n\n?\n1\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nSI\n\nD\n\nA\nFH\n\nK\n10\n\n00\nda\n\nta\n31\n\n00\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nFO\n\nG\nR\n\nat\ne\n\nM\nea\n\nsu\nre\n\nm\nen\n\nts\n10\n\n00\n\nA\nG\n\nH\nK\n\n11\n00\n\nf4\n0m\n\n31\n10\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF4\n\n0\nm\n\nes\nsa\n\nge\n11\n\n00\n\nA\nG\n\nH\nK\n\n11\n01\n\nf4\n0m\n\n31\n10\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF4\n\n0\nm\n\nes\nsa\n\nge\n11\n\n01\n\nA\nG\n\nH\nK\n\n11\n02\n\nf4\n0m\n\n31\n10\n\n2\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF4\n\n0\nm\n\nes\nsa\n\nge\n11\n\n02\n\nA\nG\n\nH\nK\n\n11\n03\n\nf6\n20\n\n31\n10\n\n3\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n\n11\n03\n\nA\nG\n\nH\nK\n\n11\n04\n\nf6\n20\n\n31\n10\n\n4\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\npa\n\nrt\n2\n\n11\n04\n\nA\nG\n\nH\nK\n\n11\n05\n\nf6\n21\n\n31\n10\n\n5\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n\n11\n05\n\nA\nG\n\nH\nK\n\n11\n06\n\nf6\n21\n\n31\n10\n\n6\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\npa\n\nrt\n2\n\n11\n06\n\nA\nG\n\nH\nK\n\n11\n07\n\nf6\n22\n\n31\n10\n\n7\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n\n11\n07\n\n(c\non\n\ntin\nue\n\nd)\n\n558 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nG\n\nH\nK\n\n11\n08\n\nf6\n22\n\n31\n10\n\n8\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n,\n\npa\nrt\n\n2\n\n11\n08\n\nA\nG\n\nH\nK\n\n11\n09\n\nf8\n0m\n\n31\n10\n\n9\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF8\n\n0\nm\n\nes\nsa\n\nge\n:\n\nX\nN\n\nS\nfil\n\nte\nre\n\nd\nna\n\nvi\ng.\n\n11\n09\n\nA\nG\n\nH\nK\n\n11\n10\n\nf8\n0m\n\n31\n11\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF8\n\n0\nm\n\nes\nsa\n\nge\n:\n\nX\nN\n\nS\nfi l\n\nte\nre\n\nd\nna\n\nvi\ng.\n\n11\n10\n\nA\nG\n\nH\nK\n\n31\n11\n\nf8\n0m\n\n31\n11\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF8\n\n0\nm\n\nes\nsa\n\nge\n:\n\nX\nN\n\nS\nfil\n\nte\nre\n\nd\nna\n\nvi\ng.\n\n11\n11 0021\n\nata\nD\n\nM\nG\n\nM\n)52 ,3(\n\nvr S\n0021 3\n\natad0021\nK\n\nH\nM\n\nA\n\n0031\na ta\n\nD\nT\n\nG\nM\n\n)52,3(\nvr S\n\n0031 3\na tad 0031\n\nK\nH\n\nQ\nA\n\n0041\nata\n\nD\nW\n\nR\n)52,3(\n\nvrS\n00413\n\natad0 041\nK\n\nH\nR\n\nA\n\n005 1\nM\n\nT\nedu tit t\n\nA\nR\n\nTS\n)52, 3(\n\nvr S\n00 513\n\nit ta00 51\nK\n\nHS\nA A\n\nSH\nK\n\n15\n01\n\nhk\ntm\n\n31\n50\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nST\nR\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nT\n\nM\n15\n\n01 2051\nM\n\nT\nU\n\nRI\nM\n\nR\nTS\n\n)5 2,3(\nvr S\n\n20 513\nur i\n\nm20 51\nK\n\nHS\nA A\n\nU\nH\n\nK\n16\n\n00\ncu\n\nrr\n31\n\n60\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nSu\n\nS\nC\n\nur\nre\n\nnt\ns\n\nM\nea\n\nsu\nre\n\nd\nby\n\nth\ne\n\nPC\nD\n\nU\n16\n\n00\n\nA\nY\n\nH\nK\n\n18\n00\n\nch\nse\n\n31\n80\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nA\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\nC\n\nhe\nck\n\ned\nSe\n\nns\nor\n\nV\nal\n\nue\ns\n\n18\n00\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 559\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nY\n\nH\nK\n\n18\n01\n\nca\nlc\n\n31\n80\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nA\nC\n\nS\nSy\n\nst\nem\n\nat\ntit\n\nud\ne\n\nan\nd\n\nor\nbi\n\nt\nca\n\nlc\nda\n\nta\n18\n\n01\n\nD\nC\n\nH\nK\n\n20\n00\n\nda\nta\n\n32\n00\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nC\nC\n\nSD\nS\n\nB\noa\n\nrd\nH\n\nou\nse\n\nke\nep\n\nin\ng\n\nD\nat\n\na\n20\n\n00\n\nD\nSH\n\nK\n26\n\n02\nsw\n\nvr\n32\n\n60\n2\n\nSr\nv\n\n(3\n,2\n\n5)\nO\n\nB\nSW\n\nan\nd\n\nB\noo\n\ntlo\nad\n\ner\nV\n\ner\nsi\n\non\nIn\n\nfo\n26\n\n02\n\nL\nD\n\nH\nK\n\n31\n00\n\npo\nw\n\ne\n33\n\n10\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nD\n\nD\nS\n\nO\nut\n\npu\nt\n\nPo\nw\n\ner\nD\n\nat\na\n\n31\n00\n\nL\nM\n\nH\nK\n\n32\n00\n\nte\nm\n\np\n33\n\n20\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nM\n\nIC\nS\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nra\n\nw\nT\n\nem\npe\n\nra\ntu\n\nre\nT\n\nM\n\n32\n00\n\nL\nO\n\nH\nK\n\n33\n00\n\nte\nm\n\np\n33\n\n30\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nO\n\nSI\nR\n\nIS\nT\n\nem\npe\n\nra\ntu\n\nre\nT\n\nM\n33\n\n00\n\nL\nR\n\nH\nK\n\n35\n00\n\npw\ndn\n\n33\n50\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nPo\n\nw\ner\n\n-B\noa\n\nrd\nN\n\nD\nat\n\na\n35\n\n00\n\nL\nR\n\nH\nK\n\n35\n01\n\npw\ndr\n\n33\n50\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nPo\n\nw\ner\n\n-B\noa\n\nrd\nR\n\nD\nat\n\na\n35\n\n01 0063\nata\n\nD\nN\n\nC\nC\n\nC\nO\n\nLP\n)52 ,3(\n\nvr S\n00 633\n\ndnc c006 3\nK\n\nH\nR\n\nL\n\n1063\nata\n\nD\nR\n\nC\nC\n\nC\nO\n\nLP\n)52,3 (\n\nvrS\n10633\n\ndrcc1063\nK\n\nH\nR\n\nL L\nR\n\nH\nK\n\n37\n00\n\npl\ncn\n\n33\n70\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nN\n\n(C\nC\n\n,\nPW\n\nR\n)\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\n37\n\n00\n\nL\nR\n\nH\nK\n\n37\n01\n\npl\ncr\n\n33\n70\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nR\n\n(C\nC\n\n,\nPW\n\nR\n)\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nT\n\nM\n37\n\n01\n\n(c\non\n\ntin\nue\n\nd)\n\n560 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPB\nH\n\nK\n40\n\n00\nel\n\nec\n34\n\n00\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nB\n\nat\nte\n\nry\nE\n\nle\nct\n\nri\nca\n\nl\nV\n\nal\nue\n\ns\n40\n\n00\n\nPP\nH\n\nK\n42\n\n00\nsw\n\ni1\n34\n\n20\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nSw\nitc\n\nh\nst\n\nat\nus\n\n1\n42\n\n00\n\nPP\nH\n\nK\n42\n\n01\nsw\n\ni2\n34\n\n20\n1\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nsw\nitc\n\nh\nst\n\nat\nus\n\n2\n42\n\n01\n\nPP\nH\n\nK\n42\n\n02\nfu\n\nse\n34\n\n20\n2\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nFu\nse\n\nst\nat\n\nus\n42\n\n02\n\nPP\nH\n\nK\n42\n\n03\nfu\n\ncu\n34\n\n20\n3\n\nSr\nv\n\n(3\n,2\n\n5)\nFu\n\nse\nan\n\nd\nB\n\nus\nC\n\nur\nre\n\nnt\ns,\n\nB\nus\n\nV\nol\n\nta\nge\n\nm\nea\n\nsu\nre\n\nd\nby\n\nth\ne\n\nPC\nD\n\nU\n\n42\n03\n\nPP\nH\n\nK\n42\n\n06\nrs\n\nts\n34\n\n20\n6\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nra\nw\n\nT\nem\n\npe\nra\n\ntu\nre\n\nV\nal\n\nue\ns\n\n42\n06\n\nPP\nH\n\nK\n42\n\n07\nfu\n\npw\n34\n\n20\n7\n\nSr\nv\n\n(3\n,2\n\n5)\nFu\n\nse\nPo\n\nw\ner\n\nV\nal\n\nue\ns\n\n42\n07\n\nPP\nH\n\nK\n42\n\n10\nsw\n\nst\n34\n\n21\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nSw\nitc\n\nh\nSt\n\nat\nes\n\nI\n42\n\n10\n\nPP\nH\n\nK\n42\n\n11\nsw\n\nfu\n34\n\n21\n1\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nSw\nitc\n\nh\nSt\n\nat\nes\n\nII\nan\n\nd\nFu\n\nse\nSt\n\nat\nes\n\n42\n11\n\nPS\nH\n\nK\n48\n\n00\nel\n\nec\n34\n\n80\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nSo\n\nla\nr\n\nPa\nne\n\nls\nE\n\nle\nct\n\nri\nca\n\nl\nV\n\nal\nue\n\ns\nM\n\nea\nsu\n\nre\nd\n\nby\nth\n\ne\nPC\n\nD\nU\n\n48\n00\n\nPY\nH\n\nK\n49\n\n00\nel\n\nec\n34\n\n90\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nPS\n\nS\nel\n\nec\ntr\n\nic\nal\n\nva\nlu\n\nes\n(c\n\nur\nre\n\nnt\ns,\n\nvo\nlta\n\nge\ns,\n\nSo\nC\n\n)\n\n49\n00\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 561\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nH\n\nK\n49\n\n01\npo\n\nw\ne\n\n34\n90\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nPS\nS\n\nC\nal\n\ncu\nla\n\nte\nd\n\nPo\nw\n\ner\nV\n\nal\nue\n\ns\n49\n\n01\n\nT\nSH\n\nK\n52\n\n00\ntb\n\nus\n35\n\n20\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nT\n\nC\nS\n\nca\nlib\n\nr\nB\n\nus\nM\n\nea\nsu\n\nre\nd\n\nT\nem\n\npe\nra\n\ntu\nre\n\nV\nal\n\nue\ns\n\n52\n00\n\nT\nSH\n\nK\n52\n\n01\npa\n\nyl\n35\n\n20\n1\n\nSr\nv\n\n(3\n,2\n\n5)\nT\n\nC\nS\n\nca\nlib\n\nr\nPa\n\nyl\noa\n\nd\nT\n\nem\npe\n\nra\ntu\n\nre\nV\n\nal\nue\n\ns\n\n52\n01\n\nT\nY\n\nH\nK\n\n58\n00\n\nte\nm\n\np\n35\n\n80\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nC\n\nom\npo\n\nne\nnt\n\nT\nem\n\npe\nra\n\ntu\nre\n\ns\nB\n\nes\nt\n\nE\nst\n\nim\nat\n\nes\n\n58\n00\n\nT\nY\n\nH\nK\n\n59\n00\n\nta\nst\n\n35\n90\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nC\n\nS\nC\n\nom\npo\n\nne\nnt\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nar\n\nge\nt\n\nSt\nat\n\nes\n59\n\n00\n\nT\nY\n\nH\nK\n\n59\n01\n\ncu\nst\n\n35\n90\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nC\n\nS\nC\n\nom\npo\n\nne\nnt\n\nT\nem\n\npe\nra\n\ntu\nre\n\nC\nur\n\nre\nnt\n\nSt\nat\n\nes\n59\n\n01\n\nT\nY\n\nH\nK\n\n59\n02\n\nhe\nrq\n\n35\n90\n\n2\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nC\n\nS\nC\n\nom\npo\n\nne\nnt\n\ns\nH\n\nea\nte\n\nr\nR\n\neq\nue\n\nst\nSt\n\nat\nus\n\n59\n02\n\nX\nN\n\nH\nK\n\n60\n00\n\nda\nta\n\n36\n00\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nT\n\nC\nN\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nda\n\nta\n60\n\n00\n\nX\nR\n\nH\nK\n\n62\n00\n\nda\nta\n\n36\n20\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nT\n\nC\nR\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nD\n\nat\na\n\n62\n00\n\nX\nY\n\nH\nK\n\n69\n00\n\nda\nta\n\n36\n90\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nT\n\nC\nSy\n\nst\nem\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nD\n\nat\na\n\n69\n00\n\nY\nT\n\nH\nK\n\n77\n00\n\ntim\ne\n\n37\n70\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nB\nas\n\nic\nT\n\nim\ne\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\n77\n00\n\n(c\non\n\ntin\nue\n\nd)\n\n562 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nM\nem\n\nor\ny\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nD\nM\n\nM\nC\n\n22\n00\n\nm\nec\n\nh\n22\n\n00\nSr\n\nv\n(6\n\n,1\n0)\n\nM\nem\n\nor\ny\n\nC\nhe\n\nck\nR\n\nep\nor\n\nt\n53\n\n6\n10\n\n0\n0\n\n?\n1\n\nD\nM\n\nC\n00\n\n00\n2\n\nD\nM\n\nM\nD\n\n22\n01\n\ndu\nm\n\np\n22\n\n01\nSr\n\nv\n(6\n\n,6\n)\n\nM\nem\n\nor\ny\n\nD\num\n\np\nT\n\nM\npa\n\nck\net\n\n,\nva\n\nri\nab\n\nle\nle\n\nng\nth\n\n53\n6\n\n6\n0\n\n0\n22\n\n01\nD\n\nM\nC\n\n00\n00\n\n1\n\nD\nM\n\nSI\n22\n\n10\nss\n\ndr\n22\n\n10\nSr\n\nv\n(1\n\n5,\n6)\n\nT\nM\n\nSt\nor\n\nag\ne\n\nSe\nle\n\nct\nio\n\nn\nD\n\nefi\nni\n\ntio\nn\n\nR\nep\n\nor\nt\n\n53\n15\n\n6\n0\n\n0\n22\n\n10\nD\n\nM\nC\n\n10\n05\n\n0\n\nD\nM\n\nSI\n22\n\n11\nhk\n\nca\n22\n\n11\nSr\n\nv\n(1\n\n5,\n13\n\n)\nPa\n\nck\net\n\nSt\nor\n\ne\nC\n\nat\nal\n\nog\nue\n\nR\nep\n\nor\nt:\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\n\n53\n15\n\n13\n13\n\n42\n18\n\n11\n22\n\n0\n?\n\n1\nD\n\nM\nC\n\n10\n12\n\n0\n\nD\nM\n\nSI\n22\n\n12\nev\n\nca\n22\n\n12\nSr\n\nv\n(1\n\n5,\n13\n\n)\nPa\n\nck\net\n\nSt\nor\n\ne\nC\n\nat\nal\n\nog\nue\n\nR\nep\n\nor\nt:\n\nE\nve\n\nnt\n53\n\n15\n13\n\n13\n42\n\n18\n11\n\n23\n0\n\n?\n1\n\nD\nM\n\nC\n10\n\n12\n0\n\nD\nM\n\nSI\n22\n\n13\nm\n\nic\na\n\n22\n13\n\nSr\nv\n\n(1\n5,\n\n13\n)\n\nPa\nck\n\net\nSt\n\nor\ne\n\nC\nat\n\nal\nog\n\nue\nR\n\nep\nor\n\nt:\nM\n\nis\nce\n\nlla\nne\n\nou\ns\n\n53\n15\n\n13\n13\n\n42\n18\n\n11\n24\n\n0\n?\n\n1\nD\n\nM\nC\n\n10\n12\n\n0\n\nO\nB\n\nC\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nD\nO\n\nFC\n24\n\n00\npr\n\nom\n82\n\n40\n0\n\nSr\nv\n\n(8\n,1\n\n29\n)\n\nFu\nnc\n\ntio\nn\n\nT\nM\n\n:\nO\n\nB\nC\n\nC\nor\n\ne\nPR\n\nO\nM\n\nSt\nat\n\ne\n53\n\n8\n12\n\n9\n11\n\n28\n46\n\n43\n84\n\n3\n?\n\n1\nD\n\nO\nC\n\n00\n00\n\n3\n\nD\nO\n\nFC\n24\n\n01\ncp\n\nuu\n82\n\n40\n1\n\nSr\nv\n\n(8\n,1\n\n29\n)\n\nFu\nnc\n\ntio\nn\n\nT\nM\n\n:\nC\n\nPU\nU\n\nsa\nge\n\nSt\nat\n\nis\ntic\n\ns\n53\n\n8\n12\n\n9\n11\n\n28\n46\n\n43\n84\n\n11\n82\n\n40\n1\n\nD\nO\n\nC\n00\n\n01\n0\n\nD\nO\n\nFC\n24\n\n02\nse\n\ncc\n82\n\n40\n2\n\nSr\nv\n\n(8\n,1\n\n29\n)\n\nFu\nnc\n\ntio\nn\n\nT\nM\n\n:\nSe\n\nco\nnd\n\nar\ny\n\nIm\nag\n\ne\nB\n\noo\nt\n\nC\nou\n\nnt\ner\n\n53\n8\n\n12\n9\n\n11\n28\n\n46\n43\n\n84\n21\n\n?\n1\n\nD\nO\n\nC\n00\n\n02\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 563\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nC\nC\n\nSD\nS-\n\nB\noa\n\nrd\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nD\nC\n\nH\nK\n\n20\n00\n\nda\nta\n\n32\n00\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nC\nC\n\nSD\nS\n\nB\noa\n\nrd\nH\n\nou\nse\n\nke\nep\n\nin\ng\n\nD\nat\n\na\n53\n\n3\n25\n\n20\n00\n\n0\n?\n\n1\n\nO\nB\n\nSW\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nD\nSA\n\nK\n26\n\n01\nac\n\nsu\n12\n\n60\n1\n\nSr\nv\n\n(1\n,1\n\n)\nA\n\ncc\nep\n\nta\nnc\n\ne\nSu\n\ncc\nes\n\ns\n53\n\n1\n1\n\n0\n0\n\n?\n1\n\nD\nSA\n\nF2\n60\n\n2a\ncfl\n\n12\n60\n\n2\nSr\n\nv\n(1\n\n,2\n)\n\nA\ncc\n\nep\nta\n\nnc\ne\n\nFa\nilu\n\nre\n53\n\n1\n2\n\n0\n0\n\n?\n1\n\nD\nSA\n\nK\n26\n\n03\nst\n\nsu\n12\n\n60\n3\n\nSr\nv\n\n(1\n,3\n\n)\nE\n\nxe\ncu\n\ntio\nn\n\nSt\nar\n\nte\nd\n\nSu\ncc\n\nes\ns\n\n53\n1\n\n3\n0\n\n0\n?\n\n1\n\nD\nSA\n\nF2\n60\n\n4s\ntfl\n\n12\n60\n\n4\nSr\n\nv\n(1\n\n,4\n)\n\nE\nxe\n\ncu\ntio\n\nn\nSt\n\nar\nte\n\nd\nFa\n\nilu\nre\n\n53\n1\n\n4\n0\n\n0\n?\n\n1\n\nD\nSA\n\nK\n26\n\n05\npr\n\nsu\n12\n\n60\n5\n\nSr\nv\n\n(1\n,5\n\n)\nE\n\nxe\ncu\n\ntio\nn\n\nPr\nog\n\nre\nss\n\nSu\ncc\n\nes\ns\n\n53\n1\n\n5\n0\n\n0\n?\n\n1\n\nD\nSA\n\nF2\n60\n\n6p\nr fl\n\n12\n60\n\n6\nSr\n\nv\n(1\n\n,6\n)\n\nE\nxe\n\ncu\ntio\n\nn\nPr\n\nog\nre\n\nss\nFa\n\nilu\nre\n\n53\n1\n\n6\n0\n\n0\n?\n\n1\n\nD\nSA\n\nK\n26\n\n07\ncp\n\nsu\n12\n\n60\n7\n\nSr\nv\n\n(1\n,7\n\n)\nE\n\nxe\ncu\n\ntio\nn\n\nC\nom\n\npl\net\n\ned\nSu\n\ncc\nes\n\ns\n53\n\n1\n7\n\n0\n0\n\n?\n1\n\nD\nSA\n\nF2\n60\n\n8c\npfl\n\n12\n60\n\n8\nSr\n\nv\n(1\n\n,8\n)\n\nE\nxe\n\ncu\ntio\n\nn\nC\n\nom\npl\n\net\ned\n\nFa\nilu\n\nre\n53\n\n1\n8\n\n0\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n00\nrw\n\ntc\n22\n\n70\n0\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nT\nT\n\nC\n_R\n\nX\n_N\n\n_H\nA\n\nN\nD\n\nL\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n22\n\n24\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n01\nrw\n\ntc\n22\n\n70\n1\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nT\nT\n\nC\n_R\n\nX\n_R\n\n_H\nA\n\nN\nD\n\nL\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n24\n\n80\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n564 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSR\n\nD\n27\n\n02\nrw\n\ntc\n22\n\n70\n2\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nT\nT\n\nC\n_T\n\nX\n_N\n\n_H\nA\n\nN\nD\n\nL\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n27\n\n36\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n03\nrw\n\ntc\n22\n\n70\n3\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nT\nT\n\nC\n_T\n\nX\n_R\n\n_H\nA\n\nN\nD\n\nL\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n29\n\n92\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n04\nrw\n\ntc\n22\n\n70\n4\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nST\nR\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n47\n\n84\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n05\nrw\n\ntc\n22\n\n70\n5\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nFO\nG\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n58\n\n08\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n06\nrw\n\ntc\n22\n\n70\n6\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nR\nW\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\n_0\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n60\n\n64\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n07\nrw\n\ntc\n22\n\n70\n7\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nR\nW\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\n_1\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n63\n\n20\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n08\nrw\n\ntc\n22\n\n70\n8\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nR\nW\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\n_2\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n65\n\n76\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n09\nrw\n\ntc\n22\n\n70\n9\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nR\nW\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\n_3\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n68\n\n32\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n10\nrw\n\ntc\n22\n\n71\n0\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nM\n_H\n\nA\nN\n\nD\nL\n\nE\nR\n\n_N\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n73\n\n44\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 565\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSR\n\nD\n27\n\n11\nrw\n\ntc\n22\n\n71\n1\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nM\n_H\n\nA\nN\n\nD\nL\n\nE\nR\n\n_R\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n76\n\n00\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n12\nrw\n\ntc\n22\n\n71\n2\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_H\n\nA\nN\n\nD\nL\n\nE\nR\n\n_N\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n78\n\n56\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n13\nrw\n\ntc\n22\n\n71\n3\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_N\n\n_C\nO\n\nIL\n_X\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n78\n\n57\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n14\nrw\n\ntc\n22\n\n71\n4\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_N\n\n_C\nO\n\nIL\n_Y\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n78\n\n58\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n15\nrw\n\ntc\n22\n\n71\n5\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_N\n\n_C\nO\n\nIL\n_Z\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n78\n\n59\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n16\nrw\n\ntc\n22\n\n71\n6\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_H\n\nA\nN\n\nD\nL\n\nE\nR\n\n_R\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n81\n\n12\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n17\nrw\n\ntc\n22\n\n71\n7\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_R\n\n_C\nO\n\nIL\n_X\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n81\n\n13\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n18\nrw\n\ntc\n22\n\n71\n8\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_R\n\n_C\nO\n\nIL\n_Y\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n81\n\n14\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n19\nrw\n\ntc\n22\n\n71\n9\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nG\n\nT\n_R\n\n_C\nO\n\nIL\n_Z\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n81\n\n15\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n566 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSR\n\nD\n27\n\n20\nrw\n\ntc\n22\n\n72\n0\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nG\nPS\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\n_0\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n86\n\n24\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n21\nrw\n\ntc\n22\n\n72\n1\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nG\nPS\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\n_1\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n88\n\n80\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n22\nrw\n\ntc\n22\n\n72\n2\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nG\nPS\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\n_2\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n91\n\n36\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n23\nrw\n\ntc\n22\n\n72\n3\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nG\nPS\n\n_C\nD\n\nM\n_H\n\nA\nN\n\nD\nL\n\nE\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n85\n93\n\n92\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n24\nrw\n\ntc\n22\n\n72\n4\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPC\nD\n\nU\n_H\n\nA\nN\n\nD\nL\n\nE\nR\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n40\n\n86\n34\n\n88\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n25\nrw\n\ntc\n22\n\n72\n5\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nC\nO\n\nR\nE\n\n_B\nO\n\nA\nR\n\nD\n_N\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n45\n\n24\n16\n\n00\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n26\nrw\n\ntc\n22\n\n72\n6\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nC\nO\n\nR\nE\n\n_B\nO\n\nA\nR\n\nD\n_R\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n45\n\n24\n18\n\n56\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n27\nrw\n\ntc\n22\n\n72\n7\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nIO\n_B\n\nO\nA\n\nR\nD\n\n_N\n_H\n\nA\nN\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n45\n\n37\n26\n\n72\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n28\nrw\n\ntc\n22\n\n72\n8\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nIO\n_B\n\nO\nA\n\nR\nD\n\n_R\n_H\n\nA\nN\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n45\n\n37\n29\n\n28\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 567\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSR\n\nD\n27\n\n29\nrw\n\ntc\n22\n\n72\n9\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nC\nC\n\nSD\nS_\n\n0_\nH\n\nA\nN\n\nD\nL\n\nE\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n45\n\n50\n37\n\n44\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n30\nrw\n\ntc\n22\n\n73\n0\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nC\nC\n\nSD\nS_\n\n1_\nH\n\nA\nN\n\nD\nL\n\nE\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n45\n\n50\n40\n\n00\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n31\nrw\n\ntc\n22\n\n73\n1\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPL\nO\n\nC\n_V\n\nT\nX\n\n_H\nA\n\nN\nD\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n35\n\n68\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n32\nrw\n\ntc\n22\n\n73\n2\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPL\nO\n\nC\n_C\n\nC\n_N\n\n_H\nA\n\nN\nD\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n40\n\n80\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n33\nrw\n\ntc\n22\n\n73\n3\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPL\nO\n\nC\n_C\n\nC\n_R\n\n_H\nA\n\nN\nD\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n43\n\n36\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n34\nrw\n\ntc\n22\n\n73\n4\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPL\nO\n\nC\n_P\n\nO\nW\n\nE\nR\n\n_N\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n45\n\n92\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n35\nrw\n\ntc\n22\n\n73\n5\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPL\nO\n\nC\n_P\n\nO\nW\n\nE\nR\n\n_R\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n48\n\n48\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n36\nrw\n\ntc\n22\n\n73\n6\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPL\nO\n\nC\n_V\n\nT\nX\n\n_R\nO\n\nU\nT\n\nR\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n51\n\n04\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n37\nrw\n\ntc\n22\n\n73\n7\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nD\nD\n\nS_\nH\n\nA\nN\n\nD\nL\n\nE\nR\n\n_N\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n58\n\n72\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n568 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSR\n\nD\n27\n\n38\nrw\n\ntc\n22\n\n73\n8\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nD\nD\n\nS_\nH\n\nA\nN\n\nD\nL\n\nE\nR\n\n_R\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n61\n\n28\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n39\nrw\n\ntc\n22\n\n73\n9\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nO\nSI\n\nR\nIS\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n63\n\n84\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n40\nrw\n\ntc\n22\n\n74\n0\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nD\nD\n\nS_\nR\n\nO\nU\n\nT\n_H\n\nA\nN\n\n_N\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n66\n\n40\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n41\nrw\n\ntc\n22\n\n74\n1\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nD\nD\n\nS_\nR\n\nO\nU\n\nT\n_H\n\nA\nN\n\n_R\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n68\n\n96\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n42\nrw\n\ntc\n22\n\n74\n2\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nA\nIS\n\n_H\nA\n\nN\nD\n\nL\nE\n\nR\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n71\n\n52\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n43\nrw\n\ntc\n22\n\n74\n3\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nA\nIS\n\n_A\nN\n\nT\nE\n\nN\nN\n\nA\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n71\n\n53\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n44\nrw\n\ntc\n22\n\n74\n4\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nPA\nM\n\nC\nA\n\nM\n_H\n\nA\nN\n\nD\nL\n\nE\nR\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n74\n\n08\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n45\nrw\n\ntc\n22\n\n74\n5\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nIC\n\nS_\nH\n\nA\nN\n\nD\nL\n\nE\nR\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n76\n\n64\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n46\nrw\n\ntc\n22\n\n74\n6\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nIC\n\nS_\nG\n\nR\nE\n\nE\nN\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n76\n\n65\n0\n\n?\n1\n\nD\nSR\n\nD\n27\n\n47\nrw\n\ntc\n22\n\n74\n7\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nIC\n\nS_\nR\n\nE\nD\n\nw\nir\n\net\nap\n\npi\nng\n\nT\nC\n\n53\n2\n\n13\n4\n\n11\n46\n\n09\n76\n\n66\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 569\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nD\nSR\n\nD\n27\n\n48\nrw\n\ntc\n22\n\n74\n8\n\nSr\nv\n\n(2\n,1\n\n34\n)\n\nM\nIC\n\nS_\nN\n\nIR\nw\n\nir\net\n\nap\npi\n\nng\nT\n\nC\n53\n\n2\n13\n\n4\n11\n\n46\n09\n\n76\n67\n\n0\n?\n\n1\n\nD\nSH\n\nK\n26\n\n00\ndr\n\nep\n32\n\n60\n0\n\nSr\nv\n\n(3\n,1\n\n0)\nH\n\nK\nPa\n\nra\nm\n\net\ner\n\nR\nep\n\nor\nt\n\nD\nefi\n\nni\ntio\n\nns\nR\n\nep\nor\n\nt\n53\n\n3\n10\n\n0\n0\n\n32\n60\n\n0\nD\n\nSC\n00\n\n00\n9\n\nD\nSD\n\nG\n26\n\n01\ndr\n\nep\n32\n\n60\n1\n\nSr\nv\n\n(3\n,1\n\n2)\nD\n\nG\nPa\n\nra\nm\n\net\ner\n\nR\nep\n\nor\nt\n\nD\nefi\n\nni\ntio\n\nns\nR\n\nep\nor\n\nt\n53\n\n3\n12\n\n0\n0\n\n32\n60\n\n1\nD\n\nSC\n00\n\n01\n1\n\nD\nSH\n\nK\n26\n\n02\nsw\n\nvr\n32\n\n60\n2\n\nSr\nv\n\n(3\n,2\n\n5)\nO\n\nB\nSW\n\nan\nd\n\nB\noo\n\ntlo\nad\n\ner\nV\n\ner\nsi\n\non\nIn\n\nfo\n53\n\n3\n25\n\n26\n02\n\n0\n?\n\n1\n\nD\nSM\n\nO\n26\n\n00\noo\n\nlr\n42\n\n60\n0\n\nSr\nv\n\n(1\n2,\n\n12\n)\n\nO\nO\n\nL\nC\n\nhe\nck\n\nT\nra\n\nns\niti\n\non\nR\n\nep\nor\n\nt\n53\n\n12\n12\n\n0\n0\n\n42\n60\n\n0\n\nP\now\n\ner\nSu\n\nbs\nys\n\nte\nm\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nPY\nM\n\nD\n49\n\n00\nm\n\ndc\np\n\n49\n00\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nPS\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nD\n\nel\nta\n\nB\nat\n\nte\nry\n\nC\nap\n\nac\nity\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n63\n\n52\n0\n\n?\n1\n\nPY\nC\n\n61\n00\n\n1\n\nPY\nM\n\nD\n49\n\n01\npu\n\ndi\n49\n\n01\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nPC\nD\n\nU\nC\n\nap\nac\n\nity\nU\n\npd\nat\n\ne\nIn\n\nte\nrv\n\nal\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n63\n\n52\n1\n\n?\n1\n\nPY\nC\n\n61\n00\n\n2\n\nPY\nM\n\nD\n49\n\n02\npa\n\nde\n49\n\n02\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nPa\nne\n\nls\nD\n\nep\nlo\n\nye\nd\n\nFl\nag\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n63\n\n52\n2\n\n?\n1\n\nPY\nC\n\n61\n00\n\n3\n\nPY\nM\n\nD\n49\n\n03\ns0\n\ncc\n49\n\n03\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nC\nal\n\nib\nra\n\ntio\nn\n\nC\nur\n\nr\nT\n\nhr\nes\n\nho\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n0\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n04\ns0\n\ncv\n49\n\n04\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nC\nal\n\nib\nra\n\ntio\nn\n\nV\nol\n\nt\nT\n\nhr\nes\n\nho\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n1\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n570 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nM\n\nD\n49\n\n05\ns0\n\ncs\n49\n\n05\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nC\nal\n\nib\nra\n\ntio\nn\n\nSo\nC\n\nT\nhr\n\nes\nho\n\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n2\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n06\ns0\n\ntt\n49\n\n06\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nhr\n\nes\nho\n\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n3\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n07\ns0\n\ntl\n49\n\n07\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nT\nhe\n\nrm\nal\n\nC\nap\n\nac\nity\n\nL\nos\n\ns\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n4\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n08\ns0\n\ncl\n49\n\n08\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nC\nha\n\nrg\ne\n\nL\nos\n\ns\nFa\n\nct\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n5\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n09\ns0\n\ncf\n49\n\n09\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nC\nha\n\nrg\ne\n\nC\nha\n\nng\ne\n\nFa\nct\n\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n6\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n10\ns0\n\ndl\n49\n\n10\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nD\nis\n\nch\nar\n\nge\nL\n\nos\ns\n\nFa\nct\n\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n7\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n11\ns0\n\ndf\n49\n\n11\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS0\n\nD\nis\n\nch\nar\n\nge\nC\n\nha\nng\n\ne\nFa\n\nct\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n8\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n12\ns0\n\nm\nc\n\n49\n12\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nPS\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nB\n\nat\nt\n\nS0\nM\n\nax\nim\n\num\nC\n\nap\nac\n\nity\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n73\n\n76\n9\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n13\ns0\n\nbc\n49\n\n13\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\ntS\n0\n\nB\nC\n\nC\nC\n\nur\nre\n\nnt\n53\n\n6\n13\n\n6\n11\n\n29\n31\n\n73\n76\n\n10\n?\n\n1\nPY\n\nC\n61\n\n00\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 571\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nM\n\nD\n49\n\n14\ns1\n\ncc\n49\n\n14\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nC\nal\n\nib\nra\n\ntio\nn\n\nC\nur\n\nr\nT\n\nhr\nes\n\nho\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n0\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n15\ns1\n\ncv\n49\n\n15\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nC\nal\n\nib\nra\n\ntio\nn\n\nV\nol\n\nt\nT\n\nhr\nes\n\nho\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n1\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n16\ns1\n\ncs\n49\n\n16\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nC\nal\n\nib\nra\n\ntio\nn\n\nSo\nC\n\nT\nhr\n\nes\nho\n\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n2\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n17\ns1\n\ntt\n49\n\n17\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nhr\n\nes\nho\n\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n3\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n18\ns1\n\ntl\n49\n\n18\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nT\nhe\n\nrm\nal\n\nC\nap\n\nac\nity\n\nL\nos\n\ns\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n4\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n19\ns1\n\ncl\n49\n\n19\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nC\nha\n\nrg\ne\n\nL\nos\n\ns\nFa\n\nct\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n5\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n20\ns1\n\ncf\n49\n\n20\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nC\nha\n\nrg\ne\n\nC\nha\n\nng\ne\n\nFa\nct\n\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n6\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n21\ns1\n\ndl\n49\n\n21\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nD\nis\n\nch\nar\n\nge\nL\n\nos\ns\n\nFa\nct\n\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n7\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n22\ns1\n\ndf\n49\n\n22\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS1\n\nD\nis\n\nch\nar\n\nge\nC\n\nha\nng\n\ne\nFa\n\nct\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n8\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n572 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nM\n\nD\n49\n\n23\ns1\n\nm\nc\n\n49\n23\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nPS\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nB\n\nat\nt\n\nS1\nM\n\nax\nim\n\num\nC\n\nap\nac\n\nity\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n76\n\n32\n9\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n24\ns1\n\nbc\n49\n\n24\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\ntS\n1\n\nB\nC\n\nC\nC\n\nur\nre\n\nnt\n53\n\n6\n13\n\n6\n11\n\n29\n31\n\n76\n32\n\n10\n?\n\n1\nPY\n\nC\n61\n\n00\n0\n\nPY\nM\n\nD\n49\n\n25\ns2\n\ncc\n49\n\n25\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nC\nal\n\nib\nra\n\ntio\nn\n\nC\nur\n\nr\nT\n\nhr\nes\n\nho\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n0\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n26\ns2\n\ncv\n49\n\n26\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nC\nal\n\nib\nra\n\ntio\nn\n\nV\nol\n\nt\nT\n\nhr\nes\n\nho\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n1\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n27\ns2\n\ncs\n49\n\n27\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nC\nal\n\nib\nra\n\ntio\nn\n\nSo\nC\n\nT\nhr\n\nes\nho\n\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n2\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n28\ns2\n\ntt\n49\n\n28\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nhr\n\nes\nho\n\nld\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n3\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n29\ns2\n\ntl\n49\n\n29\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nT\nhe\n\nrm\nal\n\nC\nap\n\nac\nity\n\nL\nos\n\ns\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n4\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n30\ns2\n\ncl\n49\n\n30\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nC\nha\n\nrg\ne\n\nL\nos\n\ns\nFa\n\nct\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n5\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n31\ns2\n\ncf\n49\n\n31\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nC\nha\n\nrg\ne\n\nC\nha\n\nng\ne\n\nFa\nct\n\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n6\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n32\ns2\n\ndl\n49\n\n32\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nD\nis\n\nch\nar\n\nge\nL\n\nos\ns\n\nFa\nct\n\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n7\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 573\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPY\nM\n\nD\n49\n\n33\ns2\n\ndf\n49\n\n33\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\nt\nS2\n\nD\nis\n\nch\nar\n\nge\nC\n\nha\nng\n\ne\nFa\n\nct\nor\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n8\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n34\ns2\n\nm\nc\n\n49\n34\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nPS\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nB\n\nat\nt\n\nS2\nM\n\nax\nim\n\num\nC\n\nap\nac\n\nity\n\n53\n6\n\n13\n6\n\n11\n29\n\n31\n78\n\n88\n9\n\n?\n1\n\nPY\nC\n\n61\n00\n\n0\n\nPY\nM\n\nD\n49\n\n35\ns2\n\nbc\n49\n\n35\nSr\n\nv\n(6\n\n,1\n36\n\n)\nPS\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nB\nat\n\ntS\n2\n\nB\nC\n\nC\nC\n\nur\nre\n\nnt\n53\n\n6\n13\n\n6\n11\n\n29\n31\n\n78\n88\n\n10\n?\n\n1\nPY\n\nC\n61\n\n00\n0\n\nPY\nH\n\nK\n49\n\n00\nel\n\nec\n34\n\n90\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nPS\n\nS\nel\n\nec\ntr\n\nic\nal\n\nva\nlu\n\nes\n(c\n\nur\nre\n\nnt\ns,\n\nvo\nlta\n\nge\ns,\n\nSo\nC\n\n)\n\n53\n3\n\n25\n49\n\n00\n0\n\n?\n1\n\nPY\nH\n\nK\n49\n\n01\npo\n\nw\ne\n\n34\n90\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nPS\nS\n\nC\nal\n\ncu\nla\n\nte\nd\n\nPo\nw\n\ner\nV\n\nal\nue\n\ns\n53\n\n3\n25\n\n49\n01\n\n0\n?\n\n1\n\nP\nC\n\nD\nU\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nPP\nD\n\nT\n42\n\n02\nde\n\npl\n24\n\n20\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nSo\nla\n\nr\nPa\n\nne\nl\n\nD\nep\n\nlo\nym\n\nen\nt\n\nSt\nat\n\nus\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n8\n\n?\n1\n\nPP\nC\n\n00\n80\n\n0\n\nPP\nD\n\nT\n42\n\n03\ndo\n\nm\nt\n\n24\n20\n\n3\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPC\n\nD\nU\n\nD\nir\n\nec\nt\n\nT\nM\n\n:\nD\n\nO\nM\n\nT\nim\n\ner\n53\n\n2\n13\n\n5\n11\n\n40\n86\n\n34\n88\n\n58\n?\n\n1\nPP\n\nC\n03\n\nA\n00\n\nPP\nD\n\nT\n42\n\n04\nbc\n\nrs\n24\n\n20\n4\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nC\n\nR\nSt\n\nat\nus\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n10\n\n?\n1\n\nPP\nC\n\n00\nA\n\n00\n\nPP\nD\n\nT\n42\n\n05\nm\n\nod\ne\n\n24\n20\n\n5\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPC\n\nD\nU\n\nD\nir\n\nec\nt\n\nT\nM\n\n:\nPC\n\nD\nU\n\nD\nev\n\nic\ne\n\nM\nod\n\ne\n53\n\n2\n13\n\n5\n11\n\n40\n86\n\n34\n88\n\n20\n?\n\n1\nPP\n\nC\n01\n\n40\n0\n\nPP\nD\n\nT\n42\n\n06\nbi\n\nst\n24\n\n20\n6\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\ni-\n\nst\nab\n\nle\nR\n\nel\nay\n\nSt\nat\n\nus\n53\n\n2\n13\n\n5\n11\n\n40\n86\n\n34\n88\n\n23\n?\n\n1\nPP\n\nC\n01\n\n70\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n574 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nD\n\nT\n42\n\n07\noc\n\npu\n24\n\n20\n7\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nO\npe\n\nra\ntin\n\ng\nC\n\nPU\n53\n\n2\n13\n\n5\n11\n\n40\n86\n\n34\n88\n\n29\n?\n\n1\nPP\n\nC\n01\n\nD\n00\n\nPP\nD\n\nT\n42\n\n08\nfu\n\ncu\n24\n\n20\n8\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nFu\nse\n\nC\nur\n\nre\nnt\n\ns\n53\n\n2\n13\n\n5\n11\n\n40\n86\n\n34\n88\n\n35\n?\n\n1\nPP\n\nC\n02\n\n30\n0\n\nPP\nD\n\nT\n42\n\n10\nla\n\npa\n24\n\n21\n0\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nL\nar\n\nge\nT\n\nM\npa\n\nck\net\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n53\n\n?\n1\n\nPP\nC\n\n03\n50\n\n0\n\nPP\nD\n\nT\n42\n\n11\nso\n\ncp\n24\n\n21\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:B\n\nat\nte\n\nry\nSo\n\nC\nE\n\nst\nim\n\nat\nio\n\nn\nPa\n\nra\nm\n\net\ner\n\ns\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n61\n\n?\n1\n\nPP\nC\n\n03\nD\n\n00\n\nPP\nD\n\nT\n42\n\n12\nbf\n\ncp\n24\n\n21\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nSt\nri\n\nng\ns\n\nFu\nll\n\nC\nap\n\nac\nity\n\nV\nal\n\nue\ns\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n63\n\n?\n1\n\nPP\nC\n\n03\nF0\n\n0\n\nPP\nD\n\nT\n42\n\n20\nbc\n\np0\n24\n\n22\n0\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nC\nap\n\nac\nity\n\nSt\nri\n\nng\n0\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n2\n\n?\n1\n\nPP\nC\n\n00\n20\n\n0\n\nPP\nD\n\nT\n42\n\n21\nbc\n\np1\n24\n\n22\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nC\nap\n\nac\nity\n\nSt\nri\n\nng\n1\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n25\n\n8\n?\n\n1\nPP\n\nC\n00\n\n20\n1\n\nPP\nD\n\nT\n42\n\n22\nbc\n\np2\n24\n\n22\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nC\nap\n\nac\nity\n\nSt\nri\n\nng\n2\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n51\n\n4\n?\n\n1\nPP\n\nC\n00\n\n20\n2\n\nPP\nD\n\nT\n42\n\n23\nbc\n\npc\n24\n\n22\n3\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nC\nap\n\nac\nity\n\nco\nm\n\nbi\nne\n\nd\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n65\n\n28\n2\n\n?\n1\n\nPP\nC\n\n00\n2F\n\nF\n\nPP\nD\n\nT\n42\n\n24\nbs\n\nc0\n24\n\n22\n4\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nSo\nC\n\nSt\nri\n\nng\n0\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n3\n\n?\n1\n\nPP\nC\n\n00\n30\n\n0\n\nPP\nD\n\nT\n42\n\n25\nbs\n\nc1\n24\n\n22\n5\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nSo\nC\n\nSt\nri\n\nng\n1\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n25\n\n9\n?\n\n1\nPP\n\nC\n00\n\n30\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 575\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nD\n\nT\n42\n\n26\nbs\n\nc2\n24\n\n22\n6\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nSo\nC\n\nSt\nri\n\nng\n2\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n51\n\n5\n?\n\n1\nPP\n\nC\n00\n\n30\n2\n\nPP\nD\n\nT\n42\n\n27\nbs\n\ncc\n24\n\n22\n7\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nSo\nC\n\nco\nm\n\nbi\nne\n\nd\n53\n\n2\n13\n\n5\n11\n\n40\n86\n\n34\n88\n\n65\n28\n\n3\n?\n\n1\nPP\n\nC\n00\n\n3F\nF\n\nPP\nD\n\nT\n42\n\n30\nch\n\nvo\n24\n\n23\n0\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nC\nha\n\nrg\nin\n\ng\nV\n\nol\nta\n\nge\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n7\n\n?\n1\n\nPP\nC\n\n00\n70\n\n0\n\nPP\nD\n\nT\n42\n\n31\nbc\n\naf\n24\n\n23\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nch\nar\n\nge\nac\n\ntiv\nat\n\nio\nn\n\nfla\ng\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n55\n\n?\n1\n\nPP\nC\n\n03\n70\n\n0\n\nPP\nD\n\nT\n42\n\n32\nba\n\ndt\n24\n\n23\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nB\nat\n\nte\nry\n\nD\nea\n\nct\niv\n\nat\nio\n\nn\nT\n\nim\ne\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n57\n\n?\n1\n\nPP\nC\n\n03\n90\n\n0\n\nPP\nD\n\nT\n42\n\n33\nin\n\nht\n24\n\n23\n3\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nIn\niti\n\nal\nH\n\nol\ndi\n\nng\nT\n\nim\ne\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n12\n\n?\n1\n\nPP\nC\n\n00\nC\n\n00\n\nPP\nD\n\nT\n42\n\n34\nht\n\nib\n24\n\n23\n4\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nH\nol\n\ndi\nng\n\nT\nim\n\ne\nin\n\nB\net\n\nw\nee\n\nn\nR\n\nec\nov\n\ner\ny\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n14\n\n?\n1\n\nPP\nC\n\n00\nE\n\n00\n\nPP\nD\n\nT\n42\n\n35\nht\n\nrm\n24\n\n23\n5\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nH\nol\n\ndi\nng\n\nT\nim\n\ne\nbe\n\ntw\nee\n\nn\nR\n\nM\n1\n\nan\nd\n\nM\nO\n\nM\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n27\n\n?\n1\n\nPP\nC\n\n01\nB\n\n00\n\nPP\nD\n\nT\n42\n\n36\nst\n\nrr\n24\n\n23\n6\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nSo\nC\n\nfo\nr\n\nT\nra\n\nns\niti\n\non\nfr\n\nom\nR\n\n0\nto\n\nR\n1\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n18\n\n?\n1\n\nPP\nC\n\n01\n20\n\n0\n\nPP\nD\n\nT\n42\n\n37\ncp\n\ntt\n24\n\n23\n7\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nC\nPU\n\nto\ngg\n\nle\ntim\n\ne\n53\n\n2\n13\n\n5\n11\n\n40\n86\n\n34\n88\n\n25\n?\n\n1\nPP\n\nC\n01\n\n90\n0\n\n(c\non\n\ntin\nue\n\nd)\n\n576 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nD\n\nT\n42\n\n38\ncp\n\ncu\n24\n\n23\n8\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nC\nhe\n\nck\nM\n\nax\nim\n\num\nC\n\nom\npo\n\nne\nnt\n\nC\nur\n\nre\nnt\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n28\n\n8\n?\n\n1\nPP\n\nC\n02\n\n00\n1\n\nPP\nD\n\nT\n42\n\n39\nac\n\ntf\n24\n\n23\n9\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nep\n\nlo\nym\n\nen\nt\n\nA\nct\n\niv\nat\n\nio\nn\n\nFl\nag\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n30\n\n3\n?\n\n1\nPP\n\nC\n02\n\nF0\n3\n\nPP\nD\n\nT\n42\n\n40\ndp\n\nl0\n24\n\n24\n0\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nep\n\nlo\nym\n\nen\nt\n\nT\nim\n\ner\n0\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n52\n\n?\n1\n\nPP\nC\n\n03\n40\n\n0\n\nPP\nD\n\nT\n42\n\n41\ndp\n\nl1\n24\n\n24\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nep\n\nlo\nym\n\nen\nt\n\nT\nim\n\ner\n1\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n30\n\n8\n?\n\n1\nPP\n\nC\n03\n\n40\n1\n\nPP\nD\n\nT\n42\n\n42\nte\n\nst\n24\n\n24\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nT\nes\n\nt\nSt\n\nri\nng\n\nM\nea\n\nsu\nre\n\nm\nen\n\nt\nT\n\nM\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n42\n\n?\n1\n\nPP\nC\n\n02\nA\n\n00\n\nPP\nD\n\nT\n42\n\n80\nrl\n\nog\n24\n\n28\n0\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nR\nA\n\nM\nL\n\nog\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n44\n\n24\n28\n\n0\nPP\n\nC\n02\n\nC\n00\n\nPP\nD\n\nT\n42\n\n81\nflo\n\ng\n24\n\n28\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPC\nD\n\nU\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nFL\nA\n\nSH\nL\n\nog\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n48\n\n24\n28\n\n1\nPP\n\nC\n03\n\n00\n0\n\nPP\nD\n\nT\n42\n\n82\nw\n\nlo\ng\n\n24\n28\n\n2\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPC\n\nD\nU\n\nD\nir\n\nec\nt\n\nT\nM\n\n:\nW\n\nor\nki\n\nng\nH\n\nis\nto\n\nry\nL\n\nog\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n40\n\n86\n34\n\n88\n50\n\n24\n28\n\n2\nPP\n\nC\n03\n\n20\n0\n\nPP\nH\n\nK\n42\n\n00\nsw\n\ni1\n34\n\n20\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nSw\nitc\n\nh\nst\n\nat\nus\n\n1\n53\n\n3\n25\n\n42\n00\n\n0\n?\n\n1\n\nPP\nH\n\nK\n42\n\n01\nsw\n\ni2\n34\n\n20\n1\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nsw\nitc\n\nh\nst\n\nat\nus\n\n2\n53\n\n3\n25\n\n42\n01\n\n0\n?\n\n1\n\nPP\nH\n\nK\n42\n\n02\nfu\n\nse\n34\n\n20\n2\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nFu\nse\n\nst\nat\n\nus\n53\n\n3\n25\n\n42\n02\n\n0\n?\n\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 577\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nPP\nH\n\nK\n42\n\n03\nfu\n\ncu\n34\n\n20\n3\n\nSr\nv\n\n(3\n,2\n\n5)\nFu\n\nse\nan\n\nd\nB\n\nus\nC\n\nur\nre\n\nnt\ns,\n\nB\nus\n\nV\nol\n\nta\ng\n\nM\nea\n\nsu\nre\n\nd\nby\n\nth\ne\n\nPC\nD\n\n53\n3\n\n25\n42\n\n03\n0\n\n?\n1\n\nPP\nH\n\nK\n42\n\n06\nrs\n\nts\n34\n\n20\n6\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nra\nw\n\nT\nem\n\npe\nra\n\ntu\nre\n\nV\nal\n\nue\ns\n\n53\n3\n\n25\n42\n\n06\n0\n\n?\n1\n\nPP\nH\n\nK\n42\n\n07\nfu\n\npw\n34\n\n20\n7\n\nSr\nv\n\n(3\n,2\n\n5)\nFu\n\nse\nPo\n\nw\ner\n\nV\nal\n\nue\ns\n\n53\n3\n\n25\n42\n\n07\n0\n\n?\n1\n\nPP\nH\n\nK\n42\n\n10\nsw\n\nst\n34\n\n21\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nSw\nitc\n\nh\nSt\n\nat\nes\n\nI\n53\n\n3\n25\n\n42\n10\n\n0\n?\n\n1\n\nPP\nH\n\nK\n42\n\n11\nsw\n\nfu\n34\n\n21\n1\n\nSr\nv\n\n(3\n,2\n\n5)\nPC\n\nD\nU\n\nSw\nitc\n\nh\nSt\n\nat\nes\n\nII\nan\n\nd\nFu\n\nse\nSt\n\nat\nes\n\n53\n3\n\n25\n42\n\n11\n0\n\n?\n1\n\nB\nat\n\nte\nry\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nPB\nH\n\nK\n40\n\n00\nel\n\nec\n34\n\n00\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nB\n\nat\nte\n\nry\nE\n\nle\nct\n\nri\nca\n\nl\nV\n\nal\nue\n\ns\n53\n\n3\n25\n\n40\n00\n\n0\n?\n\n1\n\nSo\nla\n\nr\nP\n\nan\nel\n\ns\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nPS\nH\n\nK\n48\n\n00\nel\n\nec\n34\n\n80\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nSo\n\nla\nr\n\nPa\nne\n\nls\nE\n\nle\nct\n\nri\nca\n\nl\nV\n\nal\nue\n\ns\nM\n\nea\nsu\n\nre\nd\n\nby\nth\n\ne\nPC\n\nD\nU\n\n53\n3\n\n25\n48\n\n00\n0\n\n?\n1\n\nPS\nD\n\nG\n48\n\n10\nsp\n\n1d\n34\n\n81\n0\n\nSr\nv\n\n(3\n,2\n\n6)\nSo\n\nla\nr\n\nPa\nne\n\nl\nV\n\nol\nta\n\nge\nan\n\nd\nC\n\nur\nre\n\nnt\nD\n\nia\ngn\n\nos\ntic\n\nPa\nck\n\net\n\n53\n3\n\n26\n48\n\n10\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n578 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nT\n\nC\nSu\n\nbs\nys\n\nte\nm\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nX\nY\n\nH\nK\n\n69\n00\n\nda\nta\n\n36\n90\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nT\n\nC\nSy\n\nst\nem\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nD\n\nat\na\n\n53\n3\n\n25\n69\n\n00\n0\n\n?\n1\n\nT\nT\n\nC\n-N\n\nom\nin\n\nal\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nX\nN\n\nH\nK\n\n60\n00\n\nda\nta\n\n36\n00\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nT\n\nC\nN\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nda\n\nta\n53\n\n3\n25\n\n60\n00\n\n0\n?\n\n1\n\nT\nT\n\nC\n-R\n\ned\nun\n\nda\nnt\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nX\nR\n\nH\nK\n\n62\n00\n\nda\nta\n\n36\n20\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nT\n\nC\nR\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nD\n\nat\na\n\n53\n3\n\n25\n62\n\n00\n0\n\n?\n1\n\nA\ntt\n\nit\nud\n\ne\nC\n\non\ntr\n\nol\nSu\n\nbs\nys\n\nte\nm\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nY\n\nH\nK\n\n18\n00\n\nch\nse\n\n31\n80\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nA\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\nC\n\nhe\nck\n\ned\nSe\n\nns\nor\n\nV\nal\n\nue\ns\n\n53\n3\n\n25\n18\n\n00\n0\n\n?\n1\n\nA\nY\n\nH\nK\n\n18\n01\n\nca\nlc\n\n31\n80\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nA\nC\n\nS\nSy\n\nst\nem\n\nat\ntit\n\nud\ne\n\nan\nd\n\nor\nbi\n\nt\nca\n\nlc\nda\n\nta\n53\n\n3\n25\n\n18\n01\n\n0\n?\n\n1\n\nSu\nn\n\nSe\nns\n\nor\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nU\n\nH\nK\n\n16\n00\n\ncu\nrr\n\n31\n60\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nSu\nS\n\nC\nur\n\nre\nnt\n\ns\nM\n\nea\nsu\n\nre\nd\n\nby\nth\n\ne\nPC\n\nD\nU\n\n53\n3\n\n25\n16\n\n00\n0\n\n?\n1\n\nM\nag\n\nne\nto\n\nm\net\n\ner\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nM\n\nH\nK\n\n12\n00\n\nda\nta\n\n31\n20\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nM\nG\n\nM\nD\n\nat\na\n\n53\n3\n\n25\n12\n\n00\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 579\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nM\nag\n\nne\nto\n\nto\nrq\n\nue\nr\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nQ\n\nH\nK\n\n13\n00\n\nda\nta\n\n31\n30\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nM\nG\n\nT\nD\n\nat\na\n\n53\n3\n\n25\n13\n\n00\n0\n\n?\n1\n\nSt\nar\n\nT\nra\n\nck\ner\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nST\n\nE\n15\n\n00\npi\n\nng\n15\n\n00\nSr\n\nv\n(1\n\n7,\n2)\n\nST\nR\n\nT\nes\n\nt\nPi\n\nng\nPa\n\nck\net\n\n19\n37\n\n17\n2\n\n0\n0\n\n?\n1\n\nA\nSC\n\n10\n00\n\n0\n\nA\nSM\n\nD\n15\n\n06\ndu\n\nm\np\n\n15\n06\n\nSr\nv\n\n(6\n,6\n\n)\nST\n\nR\nR\n\naw\nM\n\nem\nor\n\ny\nD\n\num\np\n\n19\n37\n\n6\n6\n\n0\n0\n\n15\n06\n\nA\nSC\n\n10\n00\n\n3,\nA\n\nSC\n00\n\n00\n7,\n\nA\nSC\n\n10\n00\n\n7\n\nA\nSM\n\nC\n15\n\n10\nm\n\nec\nh\n\n15\n10\n\nSr\nv\n\n(6\n,1\n\n0)\nST\n\nR\nR\n\naw\nM\n\nem\nor\n\ny\nC\n\nhe\nck\n\nT\nM\n\n19\n37\n\n6\n10\n\n0\n0\n\n?\n1\n\nA\nSC\n\n10\n01\n\n7\n\nA\nSA\n\nK\n15\n\n01\nac\n\nsu\n11\n\n50\n1\n\nSr\nv\n\n(1\n,1\n\n)\nST\n\nR\nR\n\naw\nA\n\ncc\nep\n\nta\nnc\n\ne\nSu\n\ncc\nes\n\ns\n(A\n\nsc\nT\n\nC\nV\n\ner\nT\n\nM\n,\n\nsu\ncc\n\nes\ns)\n\n19\n37\n\n1\n1\n\n0\n0\n\n?\n1\n\nA\nSA\n\nF1\n50\n\n2a\nc fl\n\n11\n50\n\n2\nSr\n\nv\n(1\n\n,2\n)\n\nST\nR\n\nR\naw\n\nA\ncc\n\nep\nta\n\nnc\ne\n\nFa\nilu\n\nre\n(A\n\nsc\nT\n\nC\nV\n\ner\nT\n\nM\n,\n\nfa\nilu\n\nre\n)\n\n19\n37\n\n1\n2\n\n0\n0\n\n?\n1\n\nA\nSA\n\nK\n15\n\n07\ncp\n\nsu\n11\n\n50\n7\n\nSr\nv\n\n(1\n,7\n\n)\nST\n\nR\nR\n\naw\nC\n\nom\npl\n\net\nio\n\nn\nSu\n\ncc\nes\n\ns\n(A\n\nsc\nT\n\nC\nV\n\ner\nT\n\nM\n,\n\nsu\ncc\n\nes\ns)\n\n19\n37\n\n1\n7\n\n0\n0\n\n?\n1\n\nA\nSA\n\nF1\n50\n\n8c\npfl\n\n11\n50\n\n8\nSr\n\nv\n(1\n\n,8\n)\n\nST\nR\n\nR\naw\n\nC\nom\n\npl\net\n\nio\nn\n\nFa\nilu\n\nre\n(A\n\nsc\nT\n\nC\nV\n\ner\nT\n\nM\n,\n\nfa\nilu\n\nre\n)\n\n19\n37\n\n1\n8\n\n0\n0\n\n?\n1\n\nA\nSH\n\nK\n15\n\n00\nat\n\nti\n31\n\n50\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nST\n\nR\nA\n\ntti\ntu\n\nde\nT\n\nM\n53\n\n3\n25\n\n15\n00\n\n0\n?\n\n1\n(c\n\non\ntin\n\nue\nd)\n\n580 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nSH\n\nK\n15\n\n01\nhk\n\ntm\n31\n\n50\n1\n\nSr\nv\n\n(3\n,2\n\n5)\nST\n\nR\nH\n\nou\nse\n\nke\nep\n\nin\ng\n\nT\nM\n\n53\n3\n\n25\n15\n\n01\n0\n\n?\n1\n\nA\nSH\n\nK\n15\n\n02\nm\n\nir\nu\n\n31\n50\n\n2\nSr\n\nv\n(3\n\n,2\n5)\n\nST\nR\n\nM\nIR\n\nU\nT\n\nM\n53\n\n3\n25\n\n15\n02\n\n0\n?\n\n1\n\nA\nST\n\nI1\n50\n\n0t\nim\n\ne\n81\n\n50\n0\n\nSr\nv\n\n(9\n,1\n\n31\n)\n\nST\nR\n\nR\naw\n\nT\nim\n\ne\nT\n\nM\n(A\n\nsc\nSy\n\nnc\nT\n\nim\neT\n\nM\n)\n\n19\n37\n\n9\n13\n\n1\n0\n\n0\n?\n\n1\nA\n\nSC\n10\n\n01\n8\n\nF\nib\n\ner\n-o\n\npt\nic\n\nG\nyr\n\no\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nFH\n\nK\n10\n\n00\nda\n\nta\n31\n\n00\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nFO\n\nG\nR\n\nat\ne\n\nM\nea\n\nsu\nre\n\nm\nen\n\nts\n53\n\n3\n25\n\n10\n00\n\n0\n?\n\n1\n\nG\nP\n\nS\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nG\n\nH\nK\n\n11\n00\n\nf4\n0m\n\n31\n10\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF4\n\n0\nm\n\nes\nsa\n\nge\n53\n\n3\n25\n\n11\n00\n\n0\n?\n\n1\n\nA\nG\n\nH\nK\n\n11\n01\n\nf4\n0m\n\n31\n10\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF4\n\n0\nm\n\nes\nsa\n\nge\n53\n\n3\n25\n\n11\n01\n\n0\n?\n\n1\n\nA\nG\n\nH\nK\n\n11\n02\n\nf4\n0m\n\n31\n10\n\n2\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF4\n\n0\nm\n\nes\nsa\n\nge\n53\n\n3\n25\n\n11\n02\n\n0\n?\n\n1\n\nA\nG\n\nH\nK\n\n11\n03\n\nf6\n20\n\n31\n10\n\n3\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n\n53\n3\n\n25\n11\n\n03\n0\n\n?\n1\n\nA\nG\n\nH\nK\n\n11\n04\n\nf6\n20\n\n31\n10\n\n4\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\npa\n\nrt\n2\n\n53\n3\n\n25\n11\n\n04\n0\n\n?\n1\n\nA\nG\n\nH\nK\n\n11\n05\n\nf6\n21\n\n31\n10\n\n5\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n\n53\n3\n\n25\n11\n\n05\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 581\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nA\nG\n\nH\nK\n\n11\n06\n\nf6\n21\n\n31\n10\n\n6\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\npa\n\nrt\n2\n\n53\n3\n\n25\n11\n\n06\n0\n\n?\n1\n\nA\nG\n\nH\nK\n\n11\n07\n\nf6\n22\n\n31\n10\n\n7\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n\n53\n3\n\n25\n11\n\n07\n0\n\n?\n1\n\nA\nG\n\nH\nK\n\n11\n08\n\nf6\n22\n\n31\n10\n\n8\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nre\n\nce\niv\n\ner\nra\n\nw\nda\n\nta\nfo\n\nun\nd\n\nin\nF6\n\n2\nm\n\nes\nsa\n\nge\n,\n\npa\nrt\n\n2\n\n53\n3\n\n25\n11\n\n08\n0\n\n?\n1\n\nA\nG\n\nH\nK\n\n11\n09\n\nf8\n0m\n\n31\n10\n\n9\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n0\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF8\n\n0\nm\n\nes\nsa\n\nge\n:\n\nX\nN\n\nS\nfil\n\nte\nre\n\nd\nna\n\nvi\ng\n\n53\n3\n\n25\n11\n\n09\n0\n\n?\n1\n\nA\nG\n\nH\nK\n\n11\n10\n\nf8\n0m\n\n31\n11\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n1\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF8\n\n0\nm\n\nes\nsa\n\nge\n:\n\nX\nN\n\nS\nfil\n\nte\nre\n\nd\nna\n\nvi\ng\n\n53\n3\n\n25\n11\n\n10\n0\n\n?\n1\n\nA\nG\n\nH\nK\n\n31\n11\n\nf8\n0m\n\n31\n11\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nG\nPS\n\n2\nT\n\nM\nfo\n\nun\nd\n\nin\nth\n\ne\nF8\n\n0\nm\n\nes\nsa\n\nge\n:\n\nX\nN\n\nS\nfil\n\nte\nre\n\nd\nna\n\nvi\ng\n\n53\n3\n\n25\n11\n\n11\n0\n\n?\n1\n\nR\nea\n\nct\nio\n\nn\nW\n\nhe\nel\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nA\nR\n\nH\nK\n\n14\n00\n\nda\nta\n\n31\n40\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nR\nW\n\nD\nat\n\na\n53\n\n3\n25\n\n14\n00\n\n0\n?\n\n1\n(c\n\non\ntin\n\nue\nd)\n\n582 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nhe\n\nrm\nal\n\nC\non\n\ntr\nol\n\nSu\nbs\n\nys\nte\n\nm\nT\n\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nT\nY\n\nM\nD\n\n58\n00\n\ncn\nht\n\n58\n00\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nC\nor\n\ne\nH\n\nea\nte\n\nr\nN\n\nT\nim\n\neo\nut\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n86\n\n09\n0\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n0\n\nT\nY\n\nM\nD\n\n58\n01\n\ncr\nht\n\n58\n01\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nC\nor\n\ne\nH\n\nea\nte\n\nr\nR\n\nT\nim\n\neo\nut\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n86\n\n10\n0\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n0\n\nT\nY\n\nM\nD\n\n58\n02\n\nsn\nht\n\n58\n02\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nSe\nrv\n\nic\ne\n\nH\nea\n\nte\nr\n\nN\nT\n\nim\neo\n\nut\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n86\n\n11\n0\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n0\n\nT\nY\n\nM\nD\n\n58\n03\n\nsr\nht\n\n58\n03\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nSe\nrv\n\nic\ne\n\nH\nea\n\nte\nr\n\nR\nT\n\nim\neo\n\nut\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n86\n\n12\n0\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n0\n\nT\nY\n\nM\nD\n\n58\n04\n\npn\nht\n\n58\n04\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nPa\nyl\n\noa\nd\n\nH\nea\n\nte\nr\n\nN\nT\n\nim\neo\n\nut\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n86\n\n13\n0\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n0\n\nT\nY\n\nM\nD\n\n58\n05\n\npr\nht\n\n58\n05\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nPa\nyl\n\noa\nd\n\nH\nea\n\nte\nr\n\nR\nT\n\nim\neo\n\nut\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n86\n\n14\n0\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n0\n\nT\nY\n\nM\nD\n\n58\n06\n\ndt\nho\n\n58\n06\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n73\n77\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n07\n\ndt\nho\n\n58\n07\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n76\n33\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n08\n\ndt\nho\n\n58\n08\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n78\n89\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 583\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n09\n\ndt\nho\n\n58\n09\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nD\n\nD\nS_\n\nT\nX\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n58\n73\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n10\n\ndt\nho\n\n58\n10\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nD\n\nD\nS_\n\nT\nX\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n61\n29\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n11\n\ndt\nho\n\n58\n11\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nFO\n\nG\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n58\n09\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n12\n\ndt\nho\n\n58\n12\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nG\n\nPS\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n86\n25\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n13\n\ndt\nho\n\n58\n13\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nG\n\nPS\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n88\n81\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n14\n\ndt\nho\n\n58\n14\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nG\n\nPS\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n91\n37\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n15\n\ndt\nho\n\n58\n15\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nM\n\nG\nM\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n73\n45\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n16\n\ndt\nho\n\n58\n16\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nM\n\nG\nM\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n76\n01\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n17\n\ndt\nho\n\n58\n17\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nM\n\nG\nT\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n78\n57\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n18\n\ndt\nho\n\n58\n18\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nM\n\nG\nT\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n81\n13\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n584 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n19\n\ndt\nho\n\n58\n19\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nM\n\nIC\nS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n76\n65\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n20\n\ndt\nho\n\n58\n20\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nO\n\nB\nC\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n12\n01\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n21\n\ndt\nho\n\n58\n21\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nO\n\nB\nC\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n14\n57\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n22\n\ndt\nho\n\n58\n22\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nO\n\nSI\nR\n\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n63\n85\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n23\n\ndt\nho\n\n58\n23\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nPA\n\nM\nC\n\nA\nM\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n74\n09\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n24\n\ndt\nho\n\n58\n24\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nPC\n\nD\nU\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n86\n\n34\n89\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n25\n\ndt\nho\n\n58\n25\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nPL\n\nO\nC\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n45\n93\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n26\n\ndt\nho\n\n58\n26\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nPL\n\nO\nC\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n48\n49\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n27\n\ndt\nho\n\n58\n27\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nR\n\nW\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n60\n65\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n28\n\ndt\nho\n\n58\n28\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nR\n\nW\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n63\n21\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 585\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n29\n\ndt\nho\n\n58\n29\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nR\n\nW\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n65\n77\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n30\n\ndt\nho\n\n58\n30\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nR\n\nW\n_3\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n68\n33\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n31\n\ndt\nho\n\n58\n31\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nST\n\nR\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n47\n85\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n32\n\ndt\nho\n\n58\n32\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nT\n\nT\nC\n\nN\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n22\n25\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n33\n\ndt\nho\n\n58\n33\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nT\n\nT\nC\n\nN\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n27\n37\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n34\n\ndt\nho\n\n58\n34\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nT\n\nT\nC\n\nR\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n24\n81\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n35\n\ndt\nho\n\n58\n35\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nT\n\nT\nC\n\nR\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n29\n93\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n36\n\ndt\nho\n\n58\n36\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nn\nA\n\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n71\n53\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n37\n\ndt\nhy\n\n58\n37\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\n0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n73\n78\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n38\n\ndt\nhy\n\n58\n38\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\n1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n76\n34\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n586 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n39\n\ndt\nhy\n\n58\n39\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_S\n\n2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n78\n90\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n40\n\ndt\nhy\n\n58\n40\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nD\nD\n\nS_\nT\n\nX\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n58\n74\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n41\n\ndt\nhy\n\n58\n41\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nD\nD\n\nS_\nT\n\nX\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n61\n30\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n42\n\ndt\nhy\n\n58\n42\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nFO\nG\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n58\n10\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n43\n\ndt\nhy\n\n58\n43\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nG\nPS\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n86\n26\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n44\n\ndt\nhy\n\n58\n44\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nG\nPS\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n88\n82\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n45\n\ndt\nhy\n\n58\n45\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nG\nPS\n\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n91\n38\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n46\n\ndt\nhy\n\n58\n46\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nM\nG\n\nM\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n73\n46\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n47\n\ndt\nhy\n\n58\n47\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nM\nG\n\nM\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n76\n02\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n48\n\ndt\nhy\n\n58\n48\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nM\nG\n\nT\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n78\n58\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 587\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n49\n\ndt\nhy\n\n58\n49\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nM\nG\n\nT\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n81\n14\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n50\n\ndt\nhy\n\n58\n50\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nM\nIC\n\nS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n76\n66\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n51\n\ndt\nhy\n\n58\n51\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nO\nB\n\nC\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n12\n02\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n52\n\ndt\nhy\n\n58\n52\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nO\nB\n\nC\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n14\n58\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n53\n\ndt\nhy\n\n58\n53\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nO\nSI\n\nR\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n63\n86\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n54\n\ndt\nhy\n\n58\n54\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nPA\nM\n\nC\nA\n\nM\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n74\n10\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n55\n\ndt\nhy\n\n58\n55\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nPC\nD\n\nU\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n86\n\n34\n90\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n56\n\ndt\nhy\n\n58\n56\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nPL\nO\n\nC\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n45\n94\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n57\n\ndt\nhy\n\n58\n57\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nPL\nO\n\nC\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n48\n50\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n58\n\ndt\nhy\n\n58\n58\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nR\nW\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n60\n66\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n588 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n59\n\ndt\nhy\n\n58\n59\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nR\nW\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n63\n22\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n60\n\ndt\nhy\n\n58\n60\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nR\nW\n\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n65\n78\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n61\n\ndt\nhy\n\n58\n61\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nR\nW\n\n_3\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n68\n34\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n62\n\ndt\nhy\n\n58\n62\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nST\nR\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n47\n86\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n63\n\ndt\nhy\n\n58\n63\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nT\nT\n\nC\nN\n\n_R\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n22\n26\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n64\n\ndt\nhy\n\n58\n64\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nT\nT\n\nC\nN\n\n_T\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n27\n38\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n65\n\ndt\nhy\n\n58\n65\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nT\nT\n\nC\nR\n\n_R\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n24\n82\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n66\n\ndt\nhy\n\n58\n66\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nT\nT\n\nC\nR\n\n_T\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n29\n94\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n67\n\ndt\nhy\n\n58\n67\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nys\n\nte\nre\n\nsi\ns\n\nA\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n71\n54\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n68\n\ndt\nhf\n\n58\n68\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n73\n79\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 589\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n69\n\ndt\nhf\n\n58\n69\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n76\n35\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n70\n\ndt\nhf\n\n58\n70\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n78\n91\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n71\n\ndt\nhf\n\n58\n71\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nD\n\nD\nS_\n\nT\nX\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n58\n75\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n72\n\ndt\nhf\n\n58\n72\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nD\n\nD\nS_\n\nT\nX\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n61\n31\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n73\n\ndt\nhf\n\n58\n73\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nFO\n\nG\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n58\n11\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n74\n\ndt\nhf\n\n58\n74\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nG\n\nPS\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n86\n27\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n75\n\ndt\nhf\n\n58\n75\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nG\n\nPS\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n88\n83\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n76\n\ndt\nhf\n\n58\n76\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nG\n\nPS\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n91\n39\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n77\n\ndt\nhf\n\n58\n77\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nM\n\nG\nM\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n73\n47\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n78\n\ndt\nhf\n\n58\n78\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nM\n\nG\nM\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n76\n03\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n590 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n79\n\ndt\nhf\n\n58\n79\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nM\n\nG\nT\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n78\n59\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n80\n\ndt\nhf\n\n58\n80\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nM\n\nG\nT\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n81\n15\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n81\n\ndt\nhf\n\n58\n81\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nM\n\nIC\nS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n76\n67\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n82\n\ndt\nhf\n\n58\n82\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nO\n\nB\nC\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n12\n03\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n83\n\ndt\nhf\n\n58\n83\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nO\n\nB\nC\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n14\n59\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n84\n\ndt\nhf\n\n58\n84\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nO\n\nSI\nR\n\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n63\n87\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n85\n\ndt\nhf\n\n58\n85\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nPA\n\nM\nC\n\nA\nM\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n74\n11\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n86\n\ndt\nhf\n\n58\n86\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nPC\n\nD\nU\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n86\n\n34\n91\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n87\n\ndt\nhf\n\n58\n87\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nPL\n\nO\nC\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n45\n95\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n88\n\ndt\nhf\n\n58\n88\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nPL\n\nO\nC\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n48\n51\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 591\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n89\n\ndt\nhf\n\n58\n89\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nR\n\nW\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n60\n67\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n90\n\ndt\nhf\n\n58\n90\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nR\n\nW\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n63\n23\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n91\n\ndt\nhf\n\n58\n91\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nR\n\nW\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n65\n79\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n92\n\ndt\nhf\n\n58\n92\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nR\n\nW\n_3\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n68\n35\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n93\n\ndt\nhf\n\n58\n93\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nST\n\nR\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n47\n87\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n94\n\ndt\nhf\n\n58\n94\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nT\n\nT\nC\n\nN\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n22\n27\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n95\n\ndt\nhf\n\n58\n95\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nT\n\nT\nC\n\nN\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n27\n39\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n96\n\ndt\nhf\n\n58\n96\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nT\n\nT\nC\n\nR\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n24\n83\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n97\n\ndt\nhf\n\n58\n97\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nT\n\nT\nC\n\nR\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n29\n95\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n58\n98\n\ndt\nhf\n\n58\n98\n\nSr\nv\n\n(6\n,1\n\n36\n)\n\nT\nC\n\nS\nM\n\nem\nor\n\ny\nD\n\num\np:\n\nD\nel\n\nta\nT\n\nem\np\n\nH\nea\n\nte\nrO\n\nff\nA\n\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n71\n55\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n592 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n58\n99\n\nm\nie\n\nt\n58\n\n99\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n73\n80\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n00\n\nm\nie\n\nt\n59\n\n00\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n76\n36\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n01\n\nm\nie\n\nt\n59\n\n01\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n78\n92\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n02\n\nm\nie\n\nt\n59\n\n02\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nD\n\nD\nS_\n\nT\nX\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n58\n76\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n03\n\nm\nie\n\nt\n59\n\n03\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nD\n\nD\nS_\n\nT\nX\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n61\n32\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n04\n\nm\nie\n\nt\n59\n\n04\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nFO\n\nG\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n58\n12\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n05\n\nm\nie\n\nt\n59\n\n05\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nG\n\nPS\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n86\n28\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n06\n\nm\nie\n\nt\n59\n\n06\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nG\n\nPS\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n88\n84\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n07\n\nm\nie\n\nt\n59\n\n07\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nG\n\nPS\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n91\n40\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n08\n\nm\nie\n\nt\n59\n\n08\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nM\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n73\n48\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 593\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n59\n09\n\nm\nie\n\nt\n59\n\n09\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nM\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n76\n04\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n10\n\nm\nie\n\nt\n59\n\n10\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nT\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n78\n60\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n11\n\nm\nie\n\nt\n59\n\n11\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nT\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n81\n16\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n12\n\nm\nie\n\nt\n59\n\n12\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nIC\nS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n76\n68\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n13\n\nm\nie\n\nt\n59\n\n13\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nO\n\nB\nC\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n12\n04\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n14\n\nm\nie\n\nt\n59\n\n14\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nO\n\nB\nC\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n14\n60\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n15\n\nm\nie\n\nt\n59\n\n15\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nO\n\nSI\nR\n\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n63\n88\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n16\n\nm\nie\n\nt\n59\n\n16\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nPA\n\nM\nC\n\nA\nM\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n74\n12\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n17\n\nm\nie\n\nt\n59\n\n17\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nPC\n\nD\nU\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n86\n\n34\n92\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n18\n\nm\nie\n\nt\n59\n\n18\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nPL\n\nO\nC\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n45\n96\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n594 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n59\n19\n\nm\nie\n\nt\n59\n\n19\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nPL\n\nO\nC\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n48\n52\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n20\n\nm\nie\n\nt\n59\n\n20\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n60\n68\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n21\n\nm\nie\n\nt\n59\n\n21\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n63\n24\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n22\n\nm\nie\n\nt\n59\n\n22\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n65\n80\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n23\n\nm\nie\n\nt\n59\n\n23\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_3\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n68\n36\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n24\n\nm\nie\n\nt\n59\n\n24\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nST\n\nR\n53\n\n6\n13\n\n6\n11\n\n29\n57\n\n84\n96\n\n11\n40\n\n85\n47\n\n88\n?\n\n1\nT\n\nY\nC\n\n61\n00\n\n1\n\nT\nY\n\nM\nD\n\n59\n25\n\nm\nie\n\nt\n59\n\n25\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nN\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n22\n28\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n26\n\nm\nie\n\nt\n59\n\n26\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nN\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n27\n40\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n27\n\nm\nie\n\nt\n59\n\n27\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nR\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n24\n84\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n28\n\nm\nie\n\nt\n59\n\n28\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nR\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n29\n96\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 595\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n59\n29\n\nm\nie\n\nt\n59\n\n29\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nin\nT\n\nem\np\n\nE\nve\n\nr\nA\n\nIS\n53\n\n6\n13\n\n6\n11\n\n29\n57\n\n84\n96\n\n11\n46\n\n09\n71\n\n56\n?\n\n1\nT\n\nY\nC\n\n61\n00\n\n1\n\nT\nY\n\nM\nD\n\n59\n30\n\nm\nae\n\nt\n59\n\n30\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n73\n81\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n31\n\nm\nae\n\nt\n59\n\n31\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n76\n37\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n32\n\nm\nae\n\nt\n59\n\n32\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nB\n\nA\nT\n\nT\nE\n\nR\nY\n\n_S\n2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n29\n31\n\n78\n93\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n33\n\nm\nae\n\nt\n59\n\n33\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nD\n\nD\nS_\n\nT\nX\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n58\n77\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n34\n\nm\nae\n\nt\n59\n\n34\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nD\n\nD\nS_\n\nT\nX\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n61\n33\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n35\n\nm\nae\n\nt\n59\n\n35\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nFO\n\nG\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n58\n13\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n36\n\nm\nae\n\nt\n59\n\n36\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nG\n\nPS\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n86\n29\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n37\n\nm\nae\n\nt\n59\n\n37\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nG\n\nPS\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n88\n85\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n38\n\nm\nae\n\nt\n59\n\n38\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nG\n\nPS\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n91\n41\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n596 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n59\n39\n\nm\nae\n\nt\n59\n\n39\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nM\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n73\n49\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n40\n\nm\nae\n\nt\n59\n\n40\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nM\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n76\n05\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n41\n\nm\nae\n\nt\n59\n\n41\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nT\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n78\n61\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n42\n\nm\nae\n\nt\n59\n\n42\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nG\nT\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n81\n17\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n43\n\nm\nae\n\nt\n59\n\n43\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nM\n\nIC\nS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n76\n69\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n44\n\nm\nae\n\nt\n59\n\n44\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nO\n\nB\nC\n\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n12\n05\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n45\n\nm\nae\n\nt\n59\n\n45\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nO\n\nB\nC\n\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n14\n61\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n46\n\nm\nae\n\nt\n59\n\n46\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nO\n\nSI\nR\n\nIS\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n63\n89\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n47\n\nm\nae\n\nt\n59\n\n47\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nPA\n\nM\nC\n\nA\nM\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n74\n13\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 597\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n59\n48\n\nm\nae\n\nt\n59\n\n48\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nPC\n\nD\nU\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n86\n\n34\n93\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n49\n\nm\nae\n\nt\n59\n\n49\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nPL\n\nO\nC\n\n_N\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n45\n97\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n50\n\nm\nae\n\nt\n59\n\n50\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nPL\n\nO\nC\n\n_R\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n46\n09\n\n48\n53\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n51\n\nm\nae\n\nt\n59\n\n51\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_0\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n60\n69\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n52\n\nm\nae\n\nt\n59\n\n52\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_1\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n63\n25\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n53\n\nm\nae\n\nt\n59\n\n53\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_2\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n65\n81\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n54\n\nm\nae\n\nt\n59\n\n54\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nR\n\nW\n_3\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n68\n37\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n55\n\nm\nae\n\nt\n59\n\n55\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nST\n\nR\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n47\n89\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n56\n\nm\nae\n\nt\n59\n\n56\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nN\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n22\n29\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n598 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nT\nY\n\nM\nD\n\n59\n57\n\nm\nae\n\nt\n59\n\n57\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nN\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n27\n41\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n58\n\nm\nae\n\nt\n59\n\n58\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nR\n_R\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n24\n85\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n59\n\nm\nae\n\nt\n59\n\n59\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nT\n\nT\nC\n\nR\n_T\n\nX\n\n53\n6\n\n13\n6\n\n11\n29\n\n57\n84\n\n96\n11\n\n40\n85\n\n29\n97\n\n?\n1\n\nT\nY\n\nC\n61\n\n00\n1\n\nT\nY\n\nM\nD\n\n59\n60\n\nm\nae\n\nt\n59\n\n60\nSr\n\nv\n(6\n\n,1\n36\n\n)\nT\n\nC\nS\n\nM\nem\n\nor\ny\n\nD\num\n\np:\nM\n\nax\nT\n\nem\np\n\nE\nve\n\nr\nA\n\nIS\n53\n\n6\n13\n\n6\n11\n\n29\n57\n\n84\n96\n\n11\n46\n\n09\n71\n\n57\n?\n\n1\nT\n\nY\nC\n\n61\n00\n\n1\n\nT\nY\n\nH\nK\n\n58\n00\n\nte\nm\n\np\n35\n\n80\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nC\n\nom\npo\n\nne\nnt\n\nT\nem\n\npe\nra\n\ntu\nre\n\ns\nB\n\nes\nt\n\nE\nst\n\nim\nat\n\nes\n\n53\n3\n\n25\n58\n\n00\n0\n\n?\n1\n\nT\nY\n\nH\nK\n\n59\n00\n\nta\nst\n\n35\n90\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nC\n\nS\nC\n\nom\npo\n\nne\nnt\n\nT\nem\n\npe\nra\n\ntu\nre\n\nT\nar\n\nge\nt\n\nSt\nat\n\nes\n53\n\n3\n25\n\n59\n00\n\n0\n?\n\n1\n\nT\nY\n\nH\nK\n\n59\n01\n\ncu\nst\n\n35\n90\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nC\n\nS\nC\n\nom\npo\n\nne\nnt\n\nT\nem\n\npe\nra\n\ntu\nre\n\nC\nur\n\nre\nnt\n\nSt\nat\n\nes\n53\n\n3\n25\n\n59\n01\n\n0\n?\n\n1\n\nT\nY\n\nH\nK\n\n59\n02\n\nhe\nrq\n\n35\n90\n\n2\nSr\n\nv\n(3\n\n,2\n5)\n\nT\nC\n\nS\nC\n\nom\npo\n\nne\nnt\n\ns\nH\n\nea\nte\n\nr\nR\n\neq\nue\n\nst\nSt\n\nat\nus\n\n53\n3\n\n25\n59\n\n02\n0\n\n?\n1\n\nT\nem\n\npe\nra\n\ntu\nre\n\nSe\nns\n\nor\ns\n\nT\nM\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nT\nSH\n\nK\n52\n\n00\ntb\n\nus\n35\n\n20\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nT\n\nC\nS\n\nca\nlib\n\nr\nB\n\nus\nM\n\nea\nsu\n\nre\nd\n\nT\nem\n\npe\nra\n\ntu\nre\n\nV\nal\n\nue\ns\n\n53\n3\n\n25\n52\n\n00\n0\n\n?\n1\n\nT\nSH\n\nK\n52\n\n01\npa\n\nyl\n35\n\n20\n1\n\nSr\nv\n\n(3\n,2\n\n5)\nT\n\nC\nS\n\nca\nlib\n\nr\nPa\n\nyl\noa\n\nd\nT\n\nem\npe\n\nra\ntu\n\nre\nV\n\nal\nue\n\ns\n\n53\n3\n\n25\n52\n\n01\n0\n\n?\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 599\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nP\nay\n\nlo\nad\n\nC\nom\n\npu\nte\n\nr\nT\n\nM\n(F\n\nL\nP\n\nG\nen\n\ner\nat\n\nio\nn\n\n1)\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nL\nR\n\nD\nT\n\n37\n00\n\nve\nrs\n\n23\n70\n\n0\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nV\ner\n\nsi\non\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n25\n\n7\n?\n\n1\nL\n\nR\nC\n\n02\n01\n\n0\n\nL\nR\n\nD\nT\n\n37\n01\n\nra\nm\n\n1\n23\n\n70\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nD\nir\n\nec\nt\n\nT\nM\n\n:\nSS\n\nR\nA\n\nM\n1\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n45\n\n51\n6\n\n?\n1\n\nL\nR\n\nC\n02\n\nB\n0C\n\nL\nR\n\nD\nT\n\n37\n02\n\nra\nm\n\n2\n23\n\n70\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nD\nir\n\nec\nt\n\nT\nM\n\n:\nSS\n\nR\nA\n\nM\n2\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n45\n\n77\n2\n\n?\n1\n\nL\nR\n\nC\n02\n\nB\n0C\n\nL\nR\n\nD\nT\n\n37\n03\n\nra\nm\n\n3\n23\n\n70\n3\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nD\nir\n\nec\nt\n\nT\nM\n\n:\nSS\n\nR\nA\n\nM\n3\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n46\n\n28\n4\n\n?\n1\n\nL\nR\n\nC\n02\n\nB\n0C\n\nL\nR\n\nD\nT\n\n37\n04\n\nra\nm\n\n4\n23\n\n70\n4\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nD\nir\n\nec\nt\n\nT\nM\n\n:\nSS\n\nR\nA\n\nM\n4\n\nIn\nfo\n\nrm\nat\n\nio\nn\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n47\n\n30\n8\n\n?\n1\n\nL\nR\n\nC\n02\n\nB\n0C\n\nL\nR\n\nD\nT\n\n37\n05\n\nda\nts\n\n23\n70\n\n5\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nat\n\na\nSo\n\nur\nce\n\n/S\nin\n\nk\nA\n\nllo\nca\n\ntio\nn\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n43\n\n52\n?\n\n1\nL\n\nR\nC\n\n02\n11\n\n0\n\nL\nR\n\nD\nT\n\n37\n06\n\ndb\nsp\n\n23\n70\n\n6\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\neb\n\nug\nSp\n\nee\nd\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n10\n\n25\n?\n\n1\nL\n\nR\nC\n\n02\n40\n\n1\n\nL\nR\n\nD\nT\n\n37\n07\n\ndb\nso\n\n23\n70\n\n7\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\neb\n\nug\nPi\n\nn\nSo\n\nur\nce\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n10\n\n26\n?\n\n1\nL\n\nR\nC\n\n02\n40\n\n2\n\nL\nR\n\nD\nT\n\n37\n08\n\ndb\nin\n\n23\n70\n\n8\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\neb\n\nug\nIn\n\nfo\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n35\n68\n\n12\n28\n\n?\n1\n\nL\nR\n\nC\n02\n\n4C\nC\n\n(c\non\n\ntin\nue\n\nd)\n\n600 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nD\nT\n\n37\n09\n\ndp\nts\n\n23\n70\n\n9\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nD\n\nS\nPr\n\not\noc\n\nol\nT\n\nra\nns\n\nm\nit\n\nSt\nat\n\ne\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n46\n\n26\n?\n\n1\nL\n\nR\nC\n\n02\n21\n\n2\n\nL\nR\n\nD\nT\n\n37\n10\n\ndp\nps\n\n23\n71\n\n0\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nD\n\nS\nPr\n\not\noc\n\nPs\neu\n\ndo\nra\n\nnd\nB\n\nyp\na\n\nSt\nat\n\ne\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n46\n\n10\n?\n\n1\nL\n\nR\nC\n\n02\n20\n\n2\n\nL\nR\n\nD\nT\n\n37\n11\n\nlo\npb\n\n23\n71\n\n1\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nL\n\noo\npb\n\nac\nk\n\nD\nat\n\na\nE\n\nch\no\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n51\n\n2\n?\n\n1\nL\n\nR\nC\n\n02\n02\n\n0\n\nL\nR\n\nD\nT\n\n37\n12\n\ncl\nst\n\n23\n71\n\n2\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nC\nlo\n\nck\nSt\n\nat\ne\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n40\n\n97\n8\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\n12\n\nL\nR\n\nD\nT\n\n37\n13\n\ncl\nsp\n\n23\n71\n\n3\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nC\nlo\n\nck\nSp\n\nee\nd\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n40\n\n98\n0\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\n14\n\nL\nR\n\nD\nT\n\n37\n14\n\nre\nst\n\n23\n71\n\n4\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nR\nes\n\net\nSt\n\nat\ne\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n40\n\n98\n3\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\n17\n\nL\nR\n\nD\nT\n\n37\n15\n\nl1\nm\n\nd\n23\n\n71\n5\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nM\nM\n\nU\nL\n\nan\ne\n\n1\nM\n\non\nito\n\nri\nng\n\nD\nat\n\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n24\n1\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\n19\n\nL\nR\n\nD\nT\n\n37\n16\n\nl2\nm\n\nd\n23\n\n71\n6\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nM\nM\n\nU\nL\n\nan\ne\n\n2\nM\n\non\nito\n\nri\nng\n\nD\nat\n\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n49\n7\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\n19\n\nL\nR\n\nD\nT\n\n37\n17\n\nl3\nm\n\nd\n23\n\n71\n7\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nM\nM\n\nU\nL\n\nan\ne\n\n3\nM\n\non\nito\n\nri\nng\n\nD\nat\n\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n42\n\n00\n9\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\n19\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 601\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nD\nT\n\n37\n18\n\nl4\nm\n\nd\n23\n\n71\n8\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nPL\nO\n\nC\nV\n\nT\nX\n\nM\nM\n\nU\nL\n\nan\ne\n\n4\nM\n\non\nito\n\nri\nng\n\nD\nat\n\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n43\n\n03\n3\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\n19\n\nL\nR\n\nD\nT\n\n37\n19\n\nl1\nrd\n\n23\n71\n\n9\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n1\n\nR\nea\n\nd\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n37\n8\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nA\n\n2\n\nL\nR\n\nD\nT\n\n37\n20\n\nl2\nrd\n\n23\n72\n\n0\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n2\n\nR\nea\n\nd\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n63\n4\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nA\n\n2\n\nL\nR\n\nD\nT\n\n37\n21\n\nl3\nrd\n\n23\n72\n\n1\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n3\n\nR\nea\n\nd\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n42\n\n14\n6\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nA\n\n2\n\nL\nR\n\nD\nT\n\n37\n22\n\nl4\nrd\n\n23\n72\n\n2\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n4\n\nR\nea\n\nd\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n43\n\n17\n0\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nA\n\n2\n\nL\nR\n\nD\nT\n\n37\n23\n\nl1\npl\n\n23\n72\n\n3\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n1\n\nPi\nct\n\nur\ne\n\nL\nis\n\nt\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n35\n68\n\n41\n39\n\n3\n?\n\n1\nL\n\nR\nC\n\n02\nA\n\nB\n1\n\nL\nR\n\nD\nT\n\n37\n24\n\nl2\npl\n\n23\n72\n\n4\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n2\n\nPi\nct\n\nur\ne\n\nL\nis\n\nt\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n35\n68\n\n41\n64\n\n9\n?\n\n1\nL\n\nR\nC\n\n02\nA\n\nB\n1\n\nL\nR\n\nD\nT\n\n37\n25\n\nl3\npl\n\n23\n72\n\n5\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n3\n\nPi\nct\n\nur\ne\n\nL\nis\n\nt\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n35\n68\n\n42\n16\n\n1\n?\n\n1\nL\n\nR\nC\n\n02\nA\n\nB\n1\n\nL\nR\n\nD\nT\n\n37\n26\n\nl4\npl\n\n23\n72\n\n6\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n4\n\nPi\nct\n\nur\ne\n\nL\nis\n\nt\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n35\n68\n\n43\n18\n\n5\n?\n\n1\nL\n\nR\nC\n\n02\nA\n\nB\n1\n\nL\nR\n\nD\nT\n\n37\n27\n\nl1\nbb\n\n23\n72\n\n7\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n1\n\nB\nad\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n39\n4\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n2\n\nL\nR\n\nD\nT\n\n37\n28\n\nl2\nbb\n\n23\n72\n\n8\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n2\n\nB\nad\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n65\n0\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n2\n\n(c\non\n\ntin\nue\n\nd)\n\n602 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nD\nT\n\n37\n29\n\nl3\nbb\n\n23\n72\n\n9\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n3\n\nB\nad\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n42\n\n16\n2\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n2\n\nL\nR\n\nD\nT\n\n37\n30\n\nl4\nbb\n\n23\n73\n\n0\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n4\n\nB\nad\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n43\n\n18\n6\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n2\n\nL\nR\n\nD\nT\n\n37\n31\n\nl1\npb\n\n23\n73\n\n1\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n1\n\nPi\nct\n\nur\ne\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n39\n5\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n3\n\nL\nR\n\nD\nT\n\n37\n32\n\nl2\npb\n\n23\n73\n\n2\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n2\n\nPi\nct\n\nur\ne\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n65\n1\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n3\n\nL\nR\n\nD\nT\n\n37\n33\n\nl3\npb\n\n23\n73\n\n3\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n3\n\nPi\nct\n\nur\ne\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n42\n\n16\n3\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n3\n\nL\nR\n\nD\nT\n\n37\n34\n\nl4\npb\n\n23\n73\n\n4\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n4\n\nPi\nct\n\nur\ne\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n43\n\n18\n7\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n3\n\nL\nR\n\nD\nT\n\n37\n35\n\nl1\nfb\n\n23\n73\n\n5\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n1\n\nFu\nll\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n39\n6\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n4\n\nL\nR\n\nD\nT\n\n37\n36\n\nl2\nfb\n\n23\n73\n\n6\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n2\n\nFu\nll\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n41\n\n65\n2\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n4\n\nL\nR\n\nD\nT\n\n37\n37\n\nl3\nfb\n\n23\n73\n\n7\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n3\n\nFu\nll\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n42\n\n16\n4\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n4\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 603\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nL\nR\n\nD\nT\n\n37\n38\n\nl4\nfb\n\n23\n73\n\n8\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nM\n\nM\nU\n\nL\nan\n\ne\n4\n\nFu\nll\n\nB\nlo\n\nck\nL\n\nis\nt\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n43\n\n18\n8\n\n?\n1\n\nL\nR\n\nC\n02\n\nA\nB\n\n4\n\nL\nR\n\nD\nT\n\n37\n39\n\npa\ntt\n\n23\n73\n\n9\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nV\nT\n\nX\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nPa\ntte\n\nrn\nG\n\nen\ner\n\nat\nor\n\nIn\nfo\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n35\n\n68\n48\n\n84\n?\n\n1\nL\n\nR\nC\n\n02\n13\n\n4\n\nL\nR\n\nD\nT\n\n37\n50\n\nnv\ner\n\n23\n75\n\n0\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nC\nC\n\nN\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nFi\nrm\n\nw\nar\n\ne\nV\n\ner\nsi\n\non\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n40\n\n80\n10\n\n4\n?\n\n1\nL\n\nR\nC\n\n06\n80\n\n0\n\nL\nR\n\nD\nT\n\n37\n51\n\nrv\ner\n\n23\n75\n\n1\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nC\nC\n\nR\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nFi\nrm\n\nw\nar\n\ne\nV\n\ner\nsi\n\non\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n43\n\n36\n10\n\n4\n?\n\n1\nL\n\nR\nC\n\n06\n80\n\n1\n\nL\nR\n\nD\nT\n\n37\n52\n\nnr\neg\n\n23\n75\n\n2\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nC\nC\n\nN\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nR\neg\n\nis\nte\n\nr\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n40\n\n80\n10\n\n0\n?\n\n1\nL\n\nR\nC\n\n06\n40\n\n0\n\nL\nR\n\nD\nT\n\n37\n53\n\nrr\neg\n\n23\n75\n\n3\nSr\n\nv\n(2\n\n,1\n35\n\n)\nPL\n\nO\nC\n\nC\nC\n\nR\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nR\neg\n\nis\nte\n\nr\nD\n\nat\na\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n43\n\n36\n10\n\n0\n?\n\n1\nL\n\nR\nC\n\n06\n40\n\n1\n\nL\nR\n\nH\nK\n\n35\n00\n\npw\ndn\n\n33\n50\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nPo\n\nw\ner\n\n-B\noa\n\nrd\nN\n\nD\nat\n\na\n53\n\n3\n25\n\n35\n00\n\n0\n?\n\n1\n\nL\nR\n\nH\nK\n\n35\n01\n\npw\ndr\n\n33\n50\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nPo\n\nw\ner\n\n-B\noa\n\nrd\nR\n\nD\nat\n\na\n53\n\n3\n25\n\n35\n01\n\n0\n?\n\n1\n\nL\nR\n\nH\nK\n\n36\n00\n\ncc\nnd\n\n33\n60\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nC\n\nC\nN\n\nD\nat\n\na\n53\n\n3\n25\n\n36\n00\n\n0\n?\n\n1\n\nL\nR\n\nH\nK\n\n36\n01\n\ncc\nrd\n\n33\n60\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nC\n\nC\nR\n\nD\nat\n\na\n53\n\n3\n25\n\n36\n01\n\n0\n?\n\n1\n\nL\nR\n\nH\nK\n\n37\n00\n\npl\ncn\n\n33\n70\n\n0\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nN\n\n(C\nC\n\n,\nPW\n\nR\n)\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\n53\n\n3\n25\n\n37\n00\n\n0\n?\n\n1\n\nL\nR\n\nH\nK\n\n37\n01\n\npl\ncr\n\n33\n70\n\n1\nSr\n\nv\n(3\n\n,2\n5)\n\nPL\nO\n\nC\nR\n\n(C\nC\n\n,\nPW\n\nR\n)\n\nH\nou\n\nse\nke\n\nep\nin\n\ng\nT\n\nM\n53\n\n3\n25\n\n37\n01\n\n0\n?\n\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n604 J. Eickhoff\n\n\n\nT\nab\n\nle\n17\n\n.3\nS/\n\nC\n te\n\nle\nm\n\net\nry\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\nSc\nie\n\nnc\ne\n\nD\nat\n\na\nD\n\now\nnl\n\nin\nk\n\nSy\nst\n\nem\nT\n\nM\n(F\n\nL\nP\n\nG\nen\n\ner\nat\n\nio\nn\n\n1)\n\nN\nam\n\ne\nSP\n\nID\nD\n\nes\ncr\n\nip\nti\n\non\nA\n\nP\nID\n\nT\nyp\n\ne\nSu\n\nbt\n.\n\nId\n1\n\nId\n2\n\nT\nP\n\nSD\nT\n\nC\nR\n\nef\n\nL\nD\n\nD\nT\n\n31\n00\n\nrg\nva\n\n23\n10\n\n0\nSr\n\nv\n(2\n\n,1\n35\n\n)\nD\n\nD\nS\n\nN\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nR\neg\n\nis\nte\n\nr\nV\n\nal\nue\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n58\n\n72\n53\n\n92\n21\n\n4\n?\n\n1\nL\n\nD\nC\n\nG\nR\n\nG\n00\n\nL\nD\n\nD\nT\n\n31\n01\n\nm\nid\n\n1\n23\n\n10\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nD\nD\n\nS\nN\n\nD\nir\n\nec\nt\n\nT\nM\n\n:M\nod\n\nul\ne\n\nId\nen\n\ntifi\nca\n\ntio\nn\n\n1\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n58\n72\n\n50\n65\n\n02\n8\n\n?\n1\n\nL\nD\n\nC\nG\n\nM\nI0\n\n0,\nL\n\nD\nC\n\nG\nM\n\nI1\n0\n\nL\nD\n\nD\nT\n\n31\n02\n\nm\nid\n\n2\n23\n\n10\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nD\nD\n\nS\nN\n\nD\nir\n\nec\nt\n\nT\nM\n\n:M\nod\n\nul\ne\n\nId\nen\n\nti fi\nca\n\ntio\nn\n\n2\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n58\n72\n\n21\n84\n\n22\n44\n\n?\n1\n\nL\nD\n\nC\nG\n\nM\nI0\n\n0,\nL\n\nD\nC\n\nG\nM\n\nI1\n0\n\nL\nD\n\nD\nT\n\n31\n03\n\nm\nid\n\n3\n23\n\n10\n3\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nD\nD\n\nS\nN\n\nD\nir\n\nec\nt\n\nT\nM\n\n:M\nod\n\nul\ne\n\nId\nen\n\nti fi\nca\n\ntio\nn\n\n3\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n58\n72\n\n38\n61\n\n94\n60\n\n?\n1\n\nL\nD\n\nC\nG\n\nM\nI0\n\n0,\nL\n\nD\nC\n\nG\nM\n\nI1\n0\n\nL\nD\n\nD\nT\n\n31\n06\n\ndc\ng3\n\n23\n10\n\n6\nSr\n\nv\n(2\n\n,1\n35\n\n)\nD\n\nD\nS\n\nN\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nef\n\nau\nlt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\n3\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n58\n\n72\n38\n\n02\n81\n\n02\n?\n\n1\nL\n\nD\nC\n\nG\nD\n\nC\n00\n\nL\nD\n\nD\nT\n\n31\n50\n\nrg\nva\n\n23\n15\n\n0\nSr\n\nv\n(2\n\n,1\n35\n\n)\nD\n\nD\nS\n\nR\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nR\neg\n\nis\nte\n\nr\nV\n\nal\nue\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n61\n\n28\n53\n\n92\n21\n\n4\n?\n\n1\nL\n\nD\nC\n\nG\nR\n\nG\n01\n\nL\nD\n\nD\nT\n\n31\n51\n\nm\nid\n\n1\n23\n\n15\n1\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nD\nD\n\nS\nR\n\nD\nir\n\nec\nt\n\nT\nM\n\n:M\nod\n\nul\ne\n\nId\nen\n\ntifi\nca\n\ntio\nn\n\n1\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n61\n28\n\n50\n65\n\n02\n8\n\n?\n1\n\nL\nD\n\nC\nG\n\nM\nI0\n\n1,\nL\n\nD\nC\n\nG\nM\n\nI1\n1\n\nL\nD\n\nD\nT\n\n31\n52\n\nm\nid\n\n2\n23\n\n15\n2\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nD\nD\n\nS\nR\n\nD\nir\n\nec\nt\n\nT\nM\n\n:M\nod\n\nul\ne\n\nId\nen\n\nti fi\nca\n\ntio\nn\n\n2\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n61\n28\n\n21\n84\n\n22\n44\n\n?\n1\n\nL\nD\n\nC\nG\n\nM\nI0\n\n1,\nL\n\nD\nC\n\nG\nM\n\nI1\n1\n\nL\nD\n\nD\nT\n\n31\n53\n\nm\nid\n\n3\n23\n\n15\n3\n\nSr\nv\n\n(2\n,1\n\n35\n)\n\nD\nD\n\nS\nR\n\nD\nir\n\nec\nt\n\nT\nM\n\n:M\nod\n\nul\ne\n\nId\nen\n\nti fi\nca\n\ntio\nn\n\n3\n53\n\n2\n13\n\n5\n11\n\n46\n09\n\n61\n28\n\n38\n61\n\n94\n60\n\n?\n1\n\nL\nD\n\nC\nG\n\nM\nI0\n\n1,\nL\n\nD\nC\n\nG\nM\n\nI1\n1\n\nL\nD\n\nD\nT\n\n31\n56\n\ndc\ng3\n\n23\n15\n\n6\nSr\n\nv\n(2\n\n,1\n35\n\n)\nD\n\nD\nS\n\nR\nD\n\nir\nec\n\nt\nT\n\nM\n:\n\nD\nef\n\nau\nlt\n\nC\non\n\nfig\nur\n\nat\nio\n\nn\n3\n\n53\n2\n\n13\n5\n\n11\n46\n\n09\n61\n\n28\n38\n\n02\n81\n\n02\n?\n\n1\nL\n\nD\nC\n\nG\nD\n\nC\n01\n\nL\nD\n\nH\nK\n\n31\n00\n\npo\nw\n\ne\n33\n\n10\n0\n\nSr\nv\n\n(3\n,2\n\n5)\nD\n\nD\nS\n\nO\nut\n\npu\nt\n\nPo\nw\n\ner\nD\n\nat\na\n\n53\n3\n\n25\n31\n\n00\n0\n\n?\n1\n\n17 Annexes and Data Sheets 605\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nFO\nG\n\n_T\nE\n\nM\nP_\n\nW\nA\n\nR\nN\n\nIN\nG\n\n10\n00\n\nFO\nG\n\nT\nem\n\npe\nra\n\ntu\nre\n\nW\nar\n\nni\nng\n\ntr\nig\n\nge\nre\n\nd\nL\n\n0\n0\n\nFO\nG\n\n_A\nC\n\nL\n_E\n\nR\nR\n\nO\nR\n\n10\n01\n\nFO\nG\n\nA\nC\n\nL\nE\n\nrr\nor\n\ntr\nig\n\nge\nre\n\nd\nL\n\n0\n0\n\nFO\nG\n\n_H\nA\n\nR\nD\n\nW\nA\n\nR\nE\n\n_E\nR\n\nR\nO\n\nR\n10\n\n02\nFO\n\nG\nH\n\nar\ndw\n\nar\ne\n\nE\nrr\n\nor\ntr\n\nig\nge\n\nre\nd\n\nL\n0\n\n0\n\nFO\nG\n\n_O\nV\n\nE\nR\n\nFL\nO\n\nW\n_E\n\nR\nR\n\nO\nR\n\n10\n03\n\nFO\nG\n\nO\nve\n\nrfl\now\n\nE\nrr\n\nor\ntr\n\nig\nge\n\nre\nd\n\nL\n0\n\n0\n\nG\nPS\n\n_F\nIX\n\n11\n00\n\nG\nPS\n\nha\ns\n\nac\nhi\n\nev\ned\n\nFi\nx\n\nI\n0\n\n0\n\nG\nPS\n\n_L\nO\n\nST\n_F\n\nIX\n11\n\n01\nG\n\nPS\nha\n\ns\nlo\n\nst\nFi\n\nx\nI\n\n0\n0\n\nR\nW\n\n_R\nE\n\nSE\nT\n\n14\n00\n\nA\nR\n\nW\nha\n\nnd\nle\n\nr\nha\n\ns\nde\n\nte\nct\n\ned\nth\n\nat\na\n\nR\nW\n\nha\ns\n\nre\nse\n\nt\nits\n\nel\nf\n\nI\n\nR\nW\n\n_S\nA\n\nT\nU\n\nR\nA\n\nT\nIO\n\nN\n14\n\n01\nR\n\nW\nw\n\nen\nt\n\nin\nto\n\nsa\ntu\n\nra\ntio\n\nn\nL\n\n0\n0\n\nIO\n_H\n\nE\nA\n\nL\nT\n\nH\nY\n\n_A\nG\n\nA\nIN\n\n21\n00\n\nB\not\n\nh\nIo\n\nB\noa\n\nrd\ns\n\nar\ne\n\nfa\nul\n\nty\n,\n\nso\non\n\ne\nw\n\nill\nbe\n\nse\nt\n\nto\nhe\n\nal\nth\n\ny\nag\n\nai\nn\n\n10\n90\n\n58\n45\n\n76\n41\n\n01\n00\n\n00\nI\n\nO\nbj\n\nID\nof\n\nth\ne\n\nbo\nar\n\nd\nse\n\nt\nto\n\nhe\nal\n\nth\ny\n\n0\n\nR\nM\n\nA\nP_\n\nSW\nIT\n\nC\nH\n\nE\nD\n\n_P\nO\n\nR\nT\n\n21\n01\n\nR\nM\n\nA\nP\n\nSw\nitc\n\nhe\nd\n\nPo\nrt\n\nI\nN\n\new\nPo\n\nrt\nN\n\nr\nO\n\nld\nPo\n\nrt\nN\n\nr\n\nIO\n_B\n\nO\nA\n\nR\nD\n\n_S\nW\n\nIT\nC\n\nH\nE\n\nD\n21\n\n02\nSe\n\npa\nra\n\nte\nev\n\nen\nt\n\nin\ndi\n\nca\ntin\n\ng\nth\n\ne\npr\n\nim\nar\n\ny\nI/\n\nO\n-B\n\noa\nrd\n\nw\nas\n\nsw\nitc\n\nhe\nd\n\n10\n90\n\n58\n45\n\n76\n41\n\n01\n00\n\n00\nI\n\nO\nbj\n\nID\nPr\n\nim\nar\n\ny\nB\n\noa\nrd\n\nO\nbj\n\nID\nSe\n\nco\nnd\n\nar\ny\n\nB\noa\n\nrd (c\non\n\ntin\nue\n\nd)\n\nST\nO\n\nR\nE\n\n_S\nE\n\nN\nD\n\n_W\nR\n\nIT\nE\n\n_F\nA\n\nIL\nE\n\nD\n22\n\n00\nT\n\nM\nSt\n\nor\ne:\n\nIn\niti\n\nat\nin\n\ng\nse\n\nnd\nin\n\ng\nda\n\nta\nto\n\nst\nor\n\ne\nfa\n\nile\nd\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\nD\n\neb\nug\n\nIn\nfo\n\nST\nO\n\nR\nE\n\n_W\nR\n\nIT\nE\n\n_F\nA\n\nIL\nE\n\nD\n22\n\n01\nT\n\nM\nSt\n\nor\ne:\n\nD\nat\n\na\nw\n\nas\nse\n\nnt\n,\n\nbu\nt\n\nw\nri\n\ntin\ng\n\nfa\nile\n\nd\nL\n\nFa\nilu\n\nre\nC\n\nod\ne\n\n0\n\nT\nab\n\nle\n17\n\n.4\nS/\nC\n\nE\nve\nnt\n\npa\nck\net\n\nde\nfi\nni\ntio\n\nns\n\n606 J. Eickhoff\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nST\nO\n\nR\nE\n\n_S\nE\n\nN\nD\n\n_R\nE\n\nA\nD\n\n_F\nA\n\nIL\nE\n\nD\n22\n\n02\nT\n\nM\nSt\n\nor\ne:\n\nIn\niti\n\nat\nin\n\ng\nre\n\nad\nin\n\ng\nda\n\nta\nfr\n\nom\nst\n\nor\ne\n\nfa\nile\n\nd.\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\n0\n\nST\nO\n\nR\nE\n\n_R\nE\n\nA\nD\n\n_F\nA\n\nIL\nE\n\nD\n22\n\n03\nT\n\nM\nSt\n\nor\ne:\n\nD\nat\n\na\nw\n\nas\nre\n\nqu\nes\n\nte\nd,\n\nbu\nta\n\ncc\nes\n\ns\nfa\n\nile\nd\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\n0\n\nU\nN\n\nE\nX\n\nPE\nC\n\nT\nE\n\nD\n_M\n\nSG\n22\n\n04\nT\n\nM\nSt\n\nor\ne:\n\nA\nn\n\nun\nex\n\npe\nct\n\ned\nT\n\nM\npa\n\nck\net\n\nor\nda\n\nta\nm\n\nes\nsa\n\nge\noc\n\ncu\nrr\n\ned\n\nI\n0\n\nD\neb\n\nug\nIn\n\nfo\n\nST\nO\n\nR\nIN\n\nG\n_F\n\nA\nIL\n\nE\nD\n\n22\n05\n\nT\nM\n\nSt\nor\n\ne:\nSt\n\nor\nin\n\ng\nda\n\nta\nfa\n\nile\nd.\n\nM\nay\n\nsi\nm\n\npl\ny\n\nbe\na\n\nfu\nll\n\nst\nor\n\ne\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\nSS\n\nC\nof\n\nfa\nile\n\nd\npa\n\nck\net\n\nT\nM\n\n_D\nU\n\nM\nP_\n\nFA\nIL\n\nE\nD\n\n22\n06\n\nT\nM\n\nSt\nor\n\ne:\nD\n\num\npi\n\nng\nre\n\ntr\nie\n\nve\nd\n\nda\nta\n\nfa\nile\n\nd\nL\n\nFa\nilu\n\nre\nC\n\nod\ne\n\nSS\nC\n\nof\nfa\n\nile\nd\n\npa\nck\n\net\n\nST\nO\n\nR\nE\n\n_I\nN\n\nIT\n_F\n\nA\nIL\n\nE\nD\n\n22\n07\n\nT\nM\n\nSt\nor\n\ne:\nC\n\nor\nru\n\npt\ned\n\nin\nit\n\nda\nta\n\nor\nre\n\nad\ner\n\nro\nr\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\nD\n\neb\nug\n\nIn\nfo\n\nST\nO\n\nR\nE\n\n_I\nN\n\nIT\n_E\n\nM\nPT\n\nY\n22\n\n08\nT\n\nM\nSt\n\nor\ne:\n\nSt\nor\n\ne\nw\n\nas\nno\n\nt\nin\n\niti\nal\n\niz\ned\n\n.\nSt\n\nar\nts\n\nem\npt\n\ny\nI\n\n0\n0\n\nST\nO\n\nR\nE\n\n_C\nO\n\nN\nT\n\nE\nN\n\nT\n_C\n\nO\nR\n\nR\nU\n\nPT\nE\n\nD\n22\n\n09\nT\n\nM\nSt\n\nor\ne:\n\nD\nat\n\na\nw\n\nas\nre\n\nad\nou\n\nt,\nbu\n\nt\nit\n\nis\nin\n\nco\nns\n\nis\nte\n\nnt\nL\n\n0\nD\n\neb\nug\n\nIn\nfo\n\nST\nO\n\nR\nE\n\n_I\nN\n\nIT\nIA\n\nL\nIZ\n\nE\n22\n\n10\nE\n\nve\nnt\n\nin\ndi\n\nca\ntin\n\ng\nth\n\ne\nst\n\nor\ne\n\nw\nill\n\nbe\nin\n\niti\nal\n\niz\ned\n\n,e\nith\n\ner\nat\n\nbo\not\n\nor\naf\n\nte\nr\n\nIO\nB\n\nsw\nitc\n\nh\n\nI\n0\n\n0\n\nH\nA\n\nR\nD\n\n_L\nIM\n\nIT\n_V\n\nIO\nL\n\nA\nT\n\nIO\nN\n\n26\n00\n\nA\nco\n\nnt\nro\n\nlle\nr\n\nde\nte\n\nct\ned\n\na\nlim\n\nit\nvi\n\nol\nat\n\nio\nn\n\nL\n\nD\nE\n\nV\nIC\n\nE\n_B\n\nU\nIL\n\nD\nIN\n\nG\n_C\n\nO\nM\n\nM\nA\n\nN\nD\n\n_F\nA\n\nIL\nE\n\nD\n28\n\n00\nB\n\nui\nld\n\nin\ng\n\nof\na\n\nD\nev\n\nic\ne\n\nC\nom\n\nm\nan\n\nd\nFa\n\nile\nd\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\nC\n\nom\nm\n\nan\ndI\n\nd\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n 1\n\n7.\n4 \n\n  S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 607\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nD\nE\n\nV\nIC\n\nE\n_S\n\nE\nN\n\nD\nIN\n\nG\n_C\n\nO\nM\n\nM\nA\n\nN\nD\n\n_F\nA\n\nIL\nE\n\nD\n28\n\n01\nSe\n\nnd\nin\n\ng\nof\n\na\nD\n\nev\nic\n\ne\nC\n\nom\nm\n\nan\nd\n\nFa\nile\n\nd\nL\n\nFa\nilu\n\nre\nC\n\nod\ne\n\nC\nom\n\nm\nan\n\ndI\nd\n\nD\nE\n\nV\nIC\n\nE\n_R\n\nE\nQ\n\nU\nE\n\nST\nIN\n\nG\n_R\n\nE\nPL\n\nY\n_F\n\nA\nIL\n\nE\nD\n\n28\n02\n\nR\neq\n\nue\nst\n\nin\ng\n\nof\na\n\nD\nev\n\nic\ne\n\nR\nep\n\nly\nFa\n\nile\nd\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\n0\n\nD\nE\n\nV\nIC\n\nE\n_R\n\nE\nA\n\nD\nIN\n\nG\n_R\n\nE\nPL\n\nY\n_F\n\nA\nIL\n\nE\nD\n\n28\n03\n\nR\nea\n\ndi\nng\n\nof\na\n\nD\nev\n\nic\ne\n\nR\nep\n\nly\nfa\n\nile\nd\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\nD\n\nat\na\n\nL\nen\n\ngt\nh\n\nD\nE\n\nV\nIC\n\nE\n_I\n\nN\nT\n\nE\nR\n\nPR\nE\n\nT\nIN\n\nG\n_R\n\nE\nPL\n\nY\n_F\n\nA\nIL\n\nE\nD\n\n28\n04\n\nIn\nte\n\nrp\nre\n\ntin\ng\n\nof\na\n\nD\nev\n\nic\ne\n\nR\nep\n\nly\nfa\n\nile\nd\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\nC\n\nom\nm\n\nan\ndI\n\nd\n\nD\nE\n\nV\nIC\n\nE\n_M\n\nIS\nSE\n\nD\n_R\n\nE\nPL\n\nY\n28\n\n05\nM\n\nis\nse\n\nd\nD\n\nev\nic\n\ne\nR\n\nep\nly\n\nL\nC\n\nom\nm\n\nan\ndI\n\nd\n0\n\nD\nE\n\nV\nIC\n\nE\n_U\n\nN\nK\n\nN\nO\n\nW\nN\n\n_R\nE\n\nPL\nY\n\n28\n06\n\nR\nec\n\nei\nve\n\nd\nun\n\nkn\now\n\nn\nre\n\npl\ny\n\nfr\nom\n\nde\nvi\n\nce\nL\n\nC\nom\n\nm\nan\n\ndI\nd\n\n0\n\nD\nE\n\nV\nIC\n\nE\n_U\n\nN\nR\n\nE\nQ\n\nU\nE\n\nST\nE\n\nD\n_R\n\nE\nPL\n\nY\n28\n\n07\nR\n\nec\nei\n\nve\nd\n\nU\nnr\n\neq\nue\n\nst\ned\n\nR\nep\n\nly\nfr\n\nom\nD\n\nev\nic\n\ne\nL\n\nC\nom\n\nm\nan\n\ndI\nd\n\n0\n\nD\nD\n\nS_\nSH\n\nU\nT\n\nD\nO\n\nW\nN\n\n_T\nIM\n\nE\nR\n\n31\n00\n\nA\nD\n\nD\nS\n\nw\nas\n\nsw\nitc\n\nhe\nd\n\nof\nf\n\nau\nto\n\nm\nat\n\nic\nal\n\nly\nby\n\nth\ne\n\ntim\ner\n\nin\nth\n\ne\nPC\n\nD\nU\n\nI\n0\n\n0\n\nSO\nC\n\n_C\nA\n\nL\nIB\n\nR\nA\n\nT\nIO\n\nN\n40\n\n00\nB\n\nat\nte\n\nry\nst\n\nri\nng\n\nSo\nC\n\nva\nlu\n\ne\nw\n\nas\nca\n\nlib\nra\n\nte\nd\n\nI\n0\n\n0\n\nC\nA\n\nP_\nD\n\nE\nL\n\nT\nA\n\n_V\nIO\n\nL\nA\n\nT\nIO\n\nN\n40\n\n11\nC\n\nap\nac\n\nity\nca\n\nlc\nul\n\nat\ned\n\nby\nPC\n\nD\nU\n\nan\nd\n\nPS\nS\n\ndi\nff\n\ner\ns\n\nm\nor\n\ne\nth\n\nan\nex\n\npe\nct\n\ned\n\n11\n29\n\n31\n63\n\n52\n43\n\n50\n00\n\n00\nL\n\n0\n0\n\nSO\nC\n\n_W\nA\n\nR\nN\n\nIN\nG\n\n40\n12\n\nT\nhe\n\nB\nat\n\nte\nry\n\nSo\nC\n\nha\ns\n\nfa\nlle\n\nn\nun\n\nde\nr\n\nth\ne\n\nW\nar\n\nni\nng\n\nL\nim\n\nit\n11\n\n29\n31\n\n63\n52\n\n43\n50\n\n00\n00\n\nL\n0\n\n0\n\nSO\nC\n\n_C\nR\n\nIT\nIC\n\nA\nL\n\n40\n13\n\nT\nhe\n\nB\nat\n\nte\nry\n\nSo\nC\n\nha\ns\n\nfa\nlle\n\nn\nun\n\nde\nr\n\nth\ne\n\nC\nri\n\ntic\nal\n\nL\nim\n\nit\n11\n\n29\n31\n\n63\n52\n\n43\n50\n\n00\n00\n\nL\n0\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\nTa\nbl\n\ne \n17\n\n.4\n   \n\n S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n608 J. Eickhoff\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nSO\nC\n\n_S\nH\n\nU\nT\n\nD\nO\n\nW\nN\n\n40\n14\n\nT\nhe\n\nB\nat\n\nte\nry\n\nSo\nC\n\nha\ns\n\nfa\nlle\n\nn\nun\n\nde\nr\n\nth\ne\n\nSh\nut\n\ndo\nw\n\nn\nL\n\nim\nit\n\n11\n29\n\n31\n63\n\n52\n43\n\n50\n00\n\n00\nL\n\n0\n0\n\nSO\nC\n\n_H\nIG\n\nH\n40\n\n15\nT\n\nhe\nB\n\nat\nte\n\nry\nSo\n\nC\nis\n\nab\nov\n\ne\n10\n\n0\n%\n\n.\nSh\n\nou\nld\n\nne\nve\n\nr\nha\n\npp\nen\n\n11\n29\n\n31\n63\n\n52\n43\n\n50\n00\n\n00\nL\n\n0\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_L\nO\n\nW\n40\n\n20\nT\n\nhe\ncu\n\nrr\nen\n\nt\nva\n\nlu\ne\n\nof\nth\n\ne\nst\n\nri\nng\n\nis\nbe\n\nlo\nw\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n\nL\n0\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_C\n\nU\nR\n\nR\nE\n\nN\nT\n\n_H\nIG\n\nH\n40\n\n23\nT\n\nhe\ncu\n\nrr\nen\n\nt\nva\n\nlu\ne\n\nof\nth\n\ne\nst\n\nri\nng\n\nis\nab\n\nov\ne\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n\nL\n0\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_V\n\nO\nL\n\nT\nA\n\nG\nE\n\n_L\nO\n\nW\n40\n\n26\nT\n\nhe\nvo\n\nlta\nge\n\nva\nlu\n\ne\nof\n\nth\ne\n\nst\nri\n\nng\nis\n\nbe\nlo\n\nw\na\n\nph\nys\n\nic\nal\n\nly\nun\n\nre\nal\n\nis\ntic\n\nlim\nit\n\nL\n0\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_V\n\nO\nL\n\nT\nA\n\nG\nE\n\n_H\nIG\n\nH\n40\n\n29\nT\n\nhe\nvo\n\nlta\nge\n\nva\nlu\n\ne\nof\n\nth\ne\n\nst\nri\n\nng\nis\n\nab\nov\n\ne\na\n\nph\nys\n\nic\nal\n\nly\nun\n\nre\nal\n\nis\ntic\n\nlim\nit\n\nL\n0\n\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_C\n\nA\nPA\n\nC\nIT\n\nY\n_T\n\nO\nO\n\n_H\nIG\n\nH\n40\n\n32\nC\n\nap\nac\n\nity\nis\n\nab\nov\n\ne\nth\n\ne\nm\n\nax\n.\n\nca\npa\n\nci\nty\n\n,b\nut\n\nno\nca\n\nlib\nra\n\ntio\nn\n\nw\nas\n\ntr\nig\n\nge\nre\n\nd\n\nL\n0\n\n0\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\n42\n00\n\nT\nhe\n\nva\nlu\n\ne\nis\n\nbe\nlo\n\nw\na\n\nph\nys\n\nic\nal\n\nly\nun\n\nre\nal\n\nis\ntic\n\nlim\nit\n\nL\n0\n\n0\n\nFU\nSE\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\n42\n01\n\nT\nhe\n\nva\nlu\n\ne\nis\n\nab\nov\n\ne\na\n\nph\nys\n\nic\nal\n\nly\nun\n\nre\nal\n\nis\ntic\n\nlim\nit\n\nL\n0\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n 1\n\n7.\n4 \n\n   \nS/\n\nC\n E\n\nve\nnt\n\n p\nac\n\nke\nt d\n\nef\nin\n\niti\non\n\ns \n(c\n\non\ntin\n\nue\nd)\n\n17 Annexes and Data Sheets 609\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nFU\nSE\n\n_W\nE\n\nN\nT\n\n_O\nFF\n\n43\n00\n\nA\nfu\n\nse\nw\n\nen\nt\n\nof\nf\n\nL\n0\n\n0\n\nPA\nN\n\nE\nL\n\nS_\nN\n\nO\nT\n\n_D\nE\n\nPL\nO\n\nY\nE\n\nD\n48\n\n00\nPS\n\nS\nde\n\nte\nct\n\ned\nth\n\nat\npa\n\nne\nls\n\nar\ne\n\nno\nt\n\n(y\net\n\n)\nde\n\npl\noy\n\ned\n11\n\n29\n31\n\n63\n52\n\n43\n50\n\n00\n00\n\nL\nN\n\nr\nof\n\nfir\nst\n\nSe\nns\n\nor\n,\n\nw\nhi\n\nch\nis\n\nno\nt\n\n\u201cd\nep\n\nlo\nye\n\nd\u201d\n\n0\n\nPA\nN\n\nE\nL\n\nS_\nD\n\nE\nPL\n\nO\nY\n\nE\nD\n\n48\n01\n\nPa\nne\n\nls\nha\n\nve\nbe\n\nen\nsu\n\ncc\nes\n\nsf\nul\n\nly\nde\n\npl\noy\n\ned\n11\n\n29\n31\n\n63\n52\n\n43\n50\n\n00\n00\n\nI\n0\n\n0\n\nPA\nN\n\nE\nL\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_L\n\nO\nW\n\n48\n20\n\nT\nhe\n\ncu\nrr\n\nen\nt\n\nva\nlu\n\ne\nof\n\nth\ne\n\npa\nne\n\nli\ns\n\nbe\nlo\n\nw\na\n\nph\nys\n\nic\nal\n\nly\nun\n\nre\nal\n\nis\ntic\n\nlim\nit\n\nL\n0\n\n0\n\nPA\nN\n\nE\nL\n\n_C\nU\n\nR\nR\n\nE\nN\n\nT\n_H\n\nIG\nH\n\n48\n24\n\nT\nhe\n\ncu\nrr\n\nen\nt\n\nva\nlu\n\ne\nof\n\nth\ne\n\npa\nne\n\nli\ns\n\nab\nov\n\ne\na\n\nph\nys\n\nic\nal\n\nly\nun\n\nre\nal\n\nis\ntic\n\nlim\nit\n\nL\n0\n\n0\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_L\n\nO\nW\n\n48\n28\n\nT\nhe\n\nvo\nlta\n\nge\nva\n\nlu\ne\n\nof\nth\n\ne\npa\n\nne\nli\n\ns\nbe\n\nlo\nw\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n\nL\n0\n\n0\n\nPA\nN\n\nE\nL\n\n_V\nO\n\nL\nT\n\nA\nG\n\nE\n_H\n\nIG\nH\n\n48\n32\n\nT\nhe\n\nvo\nlta\n\nge\nva\n\nlu\ne\n\nof\nth\n\ne\npa\n\nne\nli\n\ns\nab\n\nov\ne\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n\nL\n0\n\n0\n\nFU\nSE\n\n_W\nE\n\nN\nT\n\n_O\nFF\n\n49\n00\n\nPS\nS\n\nde\nte\n\nct\ned\n\na\nfu\n\nse\nth\n\nat\nw\n\nen\nt\n\nof\nf\n\n11\n29\n\n31\n63\n\n52\n43\n\n50\n00\n\n00\nL\n\n0\n0\n\nPS\nS_\n\nT\nIM\n\nE\nO\n\nU\nT\n\n49\n02\n\nPS\nS\n\nco\nm\n\nm\nan\n\nde\nd\n\nso\nm\n\net\nhi\n\nng\nth\n\nat\ntim\n\ned\nou\n\nt\n11\n\n29\n31\n\n63\n52\n\n43\n50\n\n00\n00\n\nL\nPS\n\nS\nIn\n\nte\nrn\n\nal\nSt\n\nat\ne\n\n0\n\nPS\nS_\n\nC\nO\n\nM\nM\n\nA\nN\n\nD\nIN\n\nG\n_P\n\nC\nD\n\nU\n_F\n\nA\nIL\n\nE\nD\n\n49\n03\n\nT\nhe\n\nPS\nS\n\nC\non\n\ntr\nol\n\nle\nr\n\nfa\nile\n\nd\nto\n\nco\nm\n\nm\nan\n\nd\nth\n\ne\nPC\n\nD\nU\n\n11\n29\n\n31\n63\n\n52\n43\n\n50\n00\n\n00\nL\n\nPC\nD\n\nU\nFu\n\nnc\ntio\n\nn\nID\n\nR\net\n\nur\nn\n\nV\nal\n\nue\n\n(c\non\n\ntin\nue\n\nd)\n\nTa\nbl\n\ne \n17\n\n.4\n   \n\n S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n610 J. Eickhoff\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nB\nU\n\nS_\nC\n\nU\nR\n\nR\nE\n\nN\nT\n\n_L\nO\n\nW\n49\n\n04\nT\n\nhe\nva\n\nlu\ne\n\nis\nbe\n\nlo\nw\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n11\n\n29\n31\n\n71\n20\n\n43\n50\n\n03\n00\n\nL\n0\n\n0\n\nB\nU\n\nS_\nC\n\nU\nR\n\nR\nE\n\nN\nT\n\n_H\nIG\n\nH\n49\n\n05\nT\n\nhe\nva\n\nlu\ne\n\nis\nab\n\nov\ne\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n11\n\n29\n31\n\n71\n20\n\n43\n50\n\n03\n00\n\nL\n0\n\n0\n\nB\nU\n\nS_\nV\n\nO\nL\n\nT\nA\n\nG\nE\n\n_L\nO\n\nW\n49\n\n06\nT\n\nhe\nva\n\nlu\ne\n\nis\nbe\n\nlo\nw\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n11\n\n29\n31\n\n71\n20\n\n43\n50\n\n03\n00\n\nL\n0\n\n0\n\nB\nU\n\nS_\nV\n\nO\nL\n\nT\nA\n\nG\nE\n\n_H\nIG\n\nH\n49\n\n07\nT\n\nhe\nva\n\nlu\ne\n\nis\nab\n\nov\ne\n\na\nph\n\nys\nic\n\nal\nly\n\nun\nre\n\nal\nis\n\ntic\nlim\n\nit\n11\n\n29\n31\n\n71\n20\n\n43\n50\n\n03\n00\n\nL\n0\n\n0\n\nPO\nW\n\nE\nR\n\n_A\nB\n\nO\nV\n\nE\n_H\n\nIG\nH\n\n_L\nIM\n\nIT\n49\n\n10\nT\n\nhe\nva\n\nlu\ne\n\nis\nab\n\nov\ne\n\nth\ne\n\nex\npe\n\nct\ned\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n\nL\n0\n\n0\n\nPO\nW\n\nE\nR\n\n_B\nE\n\nL\nO\n\nW\n_L\n\nO\nW\n\n_L\nIM\n\nIT\n49\n\n11\nT\n\nhe\nva\n\nlu\ne\n\nis\nbe\n\nlo\nw\n\nth\ne\n\nex\npe\n\nct\ned\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n\nL\n0\n\n0\n\nH\nE\n\nA\nT\n\nE\nR\n\n_O\nN\n\n50\n00\n\nA\nH\n\nea\nte\n\nr\nha\n\ns\nbe\n\nen\nsw\n\nitc\nhe\n\nd\non\n\nI\n0\n\n0\n\nH\nE\n\nA\nT\n\nE\nR\n\n_O\nFF\n\n50\n01\n\nA\nH\n\nea\nte\n\nr\nha\n\ns\nbe\n\nen\nsw\n\nitc\nhe\n\nd\nof\n\nf\nI\n\n0\n0\n\nH\nE\n\nA\nT\n\nE\nR\n\n_T\nIM\n\nE\nO\n\nU\nT\n\n50\n02\n\nA\nH\n\nea\nte\n\nr\nw\n\nas\non\n\nfo\nr\n\na\nve\n\nry\nlo\n\nng\ntim\n\ne\nL\n\n0\n0\n\nH\nE\n\nA\nT\n\nE\nR\n\n_T\nIM\n\nE\nO\n\nU\nT\n\n_S\nU\n\nR\nV\n\nIV\nA\n\nL\n50\n\n03\nA\n\nH\nea\n\nte\nr\n\nw\nas\n\non\nfo\n\nr\na\n\nve\nry\n\nlo\nng\n\ntim\ne\n\nin\nSu\n\nrv\niv\n\nal\nM\n\nod\ne\n\nL\n0\n\n0\n\nT\nE\n\nM\nP_\n\nSE\nN\n\nSO\nR\n\n_H\nIG\n\nH\n52\n\n00\nB\n\nro\nke\n\nn\nw\n\nir\ne\n\n(1\n50\n\n\u00c2\n\u00b0C\n\nw\nill\n\nbe\nre\n\npo\nrt\n\ned\n)\n\n11\n29\n\n57\n84\n\n96\n43\n\n54\n00\n\n00\nL\n\n0\n0\n\n(c\non\n\ntin\nue\n\nd)\n\nTa\nbl\n\ne \n17\n\n.4\n   \n\n S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 611\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nT\nE\n\nM\nP_\n\nSE\nN\n\nSO\nR\n\n_L\nO\n\nW\n52\n\n01\nSh\n\nor\nt\n\nci\nrc\n\nui\nt\n\n(?\n50\n\n\u00c2\n\u00b0C\n\nw\nill\n\nbe\nre\n\npo\nrt\n\ned\n)\n\n11\n29\n\n57\n84\n\n96\n43\n\n54\n00\n\n00\nL\n\n0\n0\n\nT\nE\n\nM\nP_\n\nSE\nN\n\nSO\nR\n\n_G\nR\n\nA\nD\n\nIE\nN\n\nT\n52\n\n02\nD\n\niff\ner\n\nen\nce\n\nbe\ntw\n\nee\nn\n\ntw\no\n\nco\nns\n\nec\nut\n\niv\ne\n\nva\nlu\n\nes\nfo\n\nr\nO\n\nN\nE\n\nse\nns\n\nor\nis\n\nto\no\n\nhi\ngh\n\n11\n29\n\n57\n84\n\n96\n43\n\n54\n00\n\n00\nL\n\n0\n0\n\nB\nA\n\nT\nT\n\nE\nR\n\nY\n_T\n\n_L\nO\n\nC\nA\n\nL\n_G\n\nR\nA\n\nD\nIE\n\nN\nT\n\n_H\nIG\n\nH\n52\n\n07\nT\n\nhe\ngr\n\nad\nie\n\nnt\nbe\n\ntw\nee\n\nn\nth\n\ne\ntw\n\no\nse\n\nns\nor\n\ns\nof\n\non\ne\n\nba\ntte\n\nry\nst\n\nri\nng\n\nis\nto\n\no\nhi\n\ngh\n\n11\n29\n\n57\n84\n\n96\n43\n\n54\n00\n\n00\nL\n\nT\nC\n\nS_\nC\n\nO\nN\n\nT\nR\n\nO\nL\n\n_S\nT\n\nR\nA\n\nT\nE\n\nG\nY\n\n58\n00\n\nT\nhe\n\nT\nC\n\nS\nC\n\non\ntr\n\nol\nle\n\nr\nan\n\nno\nun\n\nce\ns\n\nits\nco\n\nnt\nro\n\nl\nst\n\nra\nte\n\ngy\n\n11\n29\n\n57\n84\n\n96\n43\n\n54\n00\n\n00\nI\n\nC\non\n\ntr\nol\n\nSt\nra\n\nte\ngy\n\n(T\nY\n\nX\n10\n\n00\n1)\n\n0\n\nC\nO\n\nM\nPO\n\nN\nE\n\nN\nT\n\n_T\nE\n\nM\nP_\n\nL\nO\n\nW\n58\n\n01\nA\n\nco\nm\n\npo\nne\n\nnt\nre\n\npo\nrt\n\ns\nth\n\nat\nits\n\nte\nm\n\npe\nra\n\ntu\nre\n\nis\nou\n\nt\nof\n\nits\nlo\n\nw\ner\n\nso\nft\n\nlim\nit\n\nL\n0\n\n0\n\nC\nO\n\nM\nPO\n\nN\nE\n\nN\nT\n\n_T\nE\n\nM\nP_\n\nH\nIG\n\nH\n58\n\n02\nA\n\nco\nm\n\npo\nne\n\nnt\nre\n\npo\nrt\n\ns\nth\n\nat\nits\n\nte\nm\n\npe\nra\n\ntu\nre\n\nis\nou\n\nt\nof\n\nits\nhi\n\ngh\ner\n\nso\nft\n\nlim\nit\n\nL\n0\n\n0\n\nC\nO\n\nM\nPO\n\nN\nE\n\nN\nT\n\n_T\nE\n\nM\nP_\n\nO\nO\n\nL\n_L\n\nO\nW\n\n58\n03\n\nA\nco\n\nm\npo\n\nne\nnt\n\nre\npo\n\nrt\ns\n\nth\nat\n\nits\nte\n\nm\npe\n\nra\ntu\n\nre\nis\n\nou\nt\n\nof\nits\n\nlo\nw\n\ner\nha\n\nrd\nlim\n\nit\n\nL\n0\n\n0\n\nC\nO\n\nM\nPO\n\nN\nE\n\nN\nT\n\n_T\nE\n\nM\nP_\n\nO\nO\n\nL\n_H\n\nIG\nH\n\n58\n04\n\nA\nco\n\nm\npo\n\nne\nnt\n\nre\npo\n\nrt\ns\n\nth\nat\n\nits\nte\n\nm\npe\n\nra\ntu\n\nre\nis\n\nou\nt\n\nof\nits\n\nhi\ngh\n\ner\nha\n\nrd\nlim\n\nit\n\nL\n0\n\n0\n\nD\nE\n\nV\nIC\n\nE\n_R\n\nE\nB\n\nO\nO\n\nT\n_I\n\nN\nIT\n\nIA\nT\n\nE\nD\n\n70\n01\n\nFD\nIR\n\nre\npo\n\nrt\ns\n\nth\nat\n\nis\nre\n\nbo\not\n\ned\na\n\nde\nvi\n\nce\n11\n\n28\n66\n\n09\n92\n\n43\n46\n\n00\n00\n\nM\nO\n\nbj\nec\n\nt\nID\n\nof\nre\n\nbo\not\n\ned\nde\n\nvi\nce\n\n0\n\n(c\non\n\ntin\nue\n\nd)\n\nTa\nbl\n\ne \n17\n\n.4\n   \n\n S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n612 J. Eickhoff\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nD\nE\n\nV\nIC\n\nE\n_M\n\nA\nR\n\nK\nE\n\nD\n_N\n\nO\nN\n\n_H\nE\n\nA\nL\n\nT\nY\n\n70\n02\n\nFD\nIR\n\nre\npo\n\nrt\ns\n\nth\nat\n\nit\nm\n\nar\nke\n\nd\nan\n\nob\nje\n\nct\nno\n\nn-\nhe\n\nal\nth\n\ny\n(f\n\nau\nlty\n\n)\n\n11\n28\n\n66\n09\n\n92\n43\n\n46\n00\n\n00\nM\n\nO\nbj\n\nec\nt\n\nID\nof\n\nde\nvi\n\nce\nm\n\nar\nke\n\nd\nfa\n\nul\nty\n\n0\n\nSA\nFE\n\n_M\nO\n\nD\nE\n\n_T\nR\n\nA\nN\n\nSI\nT\n\nIO\nN\n\n70\n03\n\nFD\nIR\n\nre\npo\n\nrt\ns\n\nth\nat\n\nis\ntr\n\nig\nge\n\nre\nd\n\na\ntr\n\nan\nsi\n\ntio\nn\n\nto\nsy\n\nst\nem\n\nsa\nfe\n\nm\nod\n\ne\n\n11\n28\n\n66\n09\n\n92\n43\n\n46\n00\n\n00\nM\n\n0\n0\n\nC\nH\n\nA\nN\n\nG\nIN\n\nG\n_M\n\nO\nD\n\nE\n74\n\n00\nA\n\nn\nO\n\nbj\nec\n\nt\nha\n\ns\nst\n\nar\nte\n\nd\nto\n\nch\nan\n\nge\nits\n\nm\nod\n\ne\nI\n\nT\nar\n\nge\nt\n\nM\nod\n\ne\nT\n\nar\nge\n\nt\nSu\n\nbm\nod\n\ne\n\nM\nO\n\nD\nE\n\n_I\nN\n\nFO\n74\n\n01\nA\n\nn\nO\n\nbj\nec\n\nt\nan\n\nno\nun\n\nce\ns\n\nits\nm\n\nod\ne\n\nI\nC\n\nur\nre\n\nnt\nM\n\nod\ne\n\nC\nur\n\nre\nnt\n\nSu\nbm\n\nod\ne\n\nFA\nL\n\nL\nB\n\nA\nC\n\nK\n_F\n\nA\nIL\n\nE\nD\n\n74\n02\n\nA\nn\n\nO\nbj\n\nec\nt\n\nre\npo\n\nrt\ns\n\nth\nat\n\nth\ne\n\ntr\nan\n\nsi\ntio\n\nn\nto\n\nits\nfa\n\nllb\nac\n\nk\nm\n\nod\ne\n\nfa\nile\n\nd\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\nFa\n\nile\nd\n\nFa\nllb\n\nac\nk\n\nSe\nqu\n\nen\nce\n\nM\nO\n\nD\nE\n\n_T\nR\n\nA\nN\n\nSI\nT\n\nIO\nN\n\n_F\nA\n\nIL\nE\n\nD\n74\n\n03\nA\n\nn\nO\n\nbj\nec\n\nt\nre\n\npo\nrt\n\ns\nth\n\nat\na\n\nm\nod\n\ne\ntr\n\nan\nsi\n\ntio\nn\n\nfa\nile\n\nd\nL\n\nC\nur\n\nre\nnt\n\nM\nod\n\ne\nC\n\nur\nre\n\nnt\nSu\n\nbm\nod\n\ne\n\nC\nA\n\nN\nT\n\n_K\nE\n\nE\nP_\n\nM\nO\n\nD\nE\n\n74\n04\n\nA\nn\n\nO\nbj\n\nec\nt\n\nre\npo\n\nrt\ns\n\nth\nat\n\nit\nca\n\nnn\not\n\nke\nep\n\nt\nits\n\nm\nod\n\ne\nL\n\nO\nld\n\nM\nod\n\ne\nO\n\nld\nSu\n\nbm\nod\n\ne\n\nH\nE\n\nA\nL\n\nT\nH\n\n_I\nN\n\nFO\n74\n\n06\nA\n\nn\nO\n\nbj\nec\n\nt\nan\n\nno\nun\n\nce\ns\n\nits\nhe\n\nal\nth\n\nst\nat\n\nus\nI\n\nC\nur\n\nre\nnt\n\nH\nea\n\nlth\nPr\n\nev\nio\n\nus\nH\n\nea\nlth\n\nC\nH\n\nIL\nD\n\n_C\nH\n\nA\nN\n\nG\nE\n\nD\n_H\n\nE\nA\n\nL\nT\n\nH\n74\n\n07\nA\n\nn\nO\n\nbj\nec\n\nt\nre\n\npo\nrt\n\ns\nth\n\nat\non\n\ne\nof\n\nits\nch\n\nild\nre\n\nn\nch\n\nan\nge\n\nd\nits\n\nhe\nal\n\nth\nst\n\nat\nus\n\nI\n0\n\n0\n\nO\nV\n\nE\nR\n\nW\nR\n\nIT\nIN\n\nG\n_H\n\nE\nA\n\nL\nT\n\nH\n74\n\n09\nA\n\nss\nem\n\nbl\ny\n\nov\ner\n\nw\nri\n\nte\ns\n\nhe\nal\n\nth\nof\n\nch\nild\n\nre\nn\n\nto\nke\n\nep\nsa\n\nte\nlli\n\nte\nal\n\niv\ne\n\nI\n\n(c\non\n\ntin\nue\n\nd)\n\nTa\nbl\n\ne \n17\n\n.4\n   \n\n S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 613\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nO\nPS\n\n_S\nC\n\nH\nE\n\nD\nU\n\nL\nE\n\n_T\nC\n\n_L\nO\n\nST\n76\n\n01\nA\n\ntim\ne-\n\nta\ngg\n\ned\nT\n\nC\nw\n\nas\nlo\n\nst\nbe\n\nfo\nre\n\nit\nen\n\nte\nre\n\nd\nth\n\ne\non\n\n-b\noa\n\nrd\nqu\n\neu\ne\n\n13\n42\n\n18\n00\n\n96\n50\n\n00\n0B\n\n00\nL\n\nFa\nilu\n\nre\nC\n\nod\ne\n\n0\n\nO\nPS\n\n_S\nC\n\nH\nE\n\nD\nU\n\nL\nE\n\n_S\nU\n\nSP\nE\n\nN\nD\n\nE\nD\n\n76\n05\n\nSc\nhe\n\ndu\nle\n\nr\nre\n\nce\niv\n\ned\ntim\n\ne\nju\n\nm\np\n\nev\nen\n\nt\nan\n\nd\ndi\n\nsa\nbl\n\ned\nsc\n\nhe\ndu\n\nle\n\n13\n42\n\n18\n00\n\n96\n50\n\n00\n0B\n\n00\nI\n\n0\n0\n\nST\nO\n\nR\nIN\n\nG\n_O\n\nB\nT\n\n_F\nA\n\nIL\nE\n\nD\n77\n\n00\nSt\n\nor\nin\n\ng\nth\n\ne\nO\n\nB\nT\n\n(f\nor\n\nco\nrr\n\nec\nt\n\ntim\ne\n\nat\nre\n\nbo\not\n\n)\nfa\n\nile\nd\n\n13\n42\n\n17\n95\n\n84\n50\n\n00\n09\n\n00\nL\n\nFa\nilu\n\nre\nC\n\nod\ne\n\n0\n\nT\nIM\n\nE\n_W\n\nA\nS_\n\nSE\nT\n\n77\n01\n\nT\nim\n\ne\nM\n\nan\nag\n\ner\ngo\n\nt\na\n\nse\nt\n\ntim\ne\n\nre\nqu\n\nes\nt\n\nan\nd\n\npe\nrf\n\nor\nm\n\ned\nit\n\n13\n42\n\n17\n95\n\n84\n50\n\n00\n09\n\n00\nI\n\nPO\nSI\n\nX\nse\n\nco\nnd\n\ns\nPO\n\nSI\nX\n\nus\nec\n\ns\n\nT\nIM\n\nE\n_J\n\nU\nM\n\nP_\nD\n\nE\nT\n\nE\nC\n\nT\nE\n\nD\n77\n\n02\nT\n\nim\ne\n\nM\nan\n\nag\ner\n\nde\nte\n\nct\ned\n\na\ntim\n\ne\nju\n\nm\np\n\n13\n42\n\n17\n95\n\n84\n50\n\n00\n09\n\n00\nL\n\nT\nim\n\ne\nde\n\nlta\nin\n\nse\nco\n\nnd\ns\n\n0\n\nB\nO\n\nO\nT\n\n78\n00\n\ntr\nig\n\nge\nre\n\nd\nw\n\nhe\nn\n\nth\ne\n\nO\nB\n\nSW\nbo\n\not\ns\n\n0\n0\n\nI\n\nIN\nIT\n\nIA\nT\n\nIN\nG\n\n_C\nO\n\nR\nE\n\n_S\nW\n\nIT\nC\n\nH\n78\n\n01\nC\n\nor\ne\n\nSw\nitc\n\nh\nto\n\nth\ne\n\not\nhe\n\nr\n(N\n\n/R\n)\n\nsi\nde\n\nis\nin\n\niti\nat\n\ned\n11\n\n28\n46\n\n43\n84\n\n43\n43\n\n00\n00\n\nI\n\nPS\nT\n\n_I\nS_\n\nN\nO\n\nT\n_S\n\nT\nA\n\nR\nT\n\nE\nD\n\n78\n02\n\nPo\nlli\n\nng\nSe\n\nqu\nen\n\nce\nT\n\nab\nle\n\nno\nt\n\nst\nar\n\nte\nd\n\n(a\nft\n\ner\nfa\n\nile\nd\n\nO\nB\n\nC\nC\n\nor\ne\n\nsw\nitc\n\nh)\n\n0\n0\n\nI\n\nFA\nT\n\nA\nL\n\n_E\nR\n\nR\nO\n\nR\n_O\n\nC\nC\n\nU\nR\n\nE\nD\n\n78\n03\n\nA\nfa\n\nta\nl\n\ner\nro\n\nr\noc\n\ncu\nrr\n\ned\n,\n\nw\nhi\n\nch\nca\n\nus\ned\n\nth\ne\n\npr\nev\n\nio\nus\n\nre\nbo\n\not\n\n0\n0\n\nH\nFa\n\nilu\nre\n\nC\nod\n\ne\n0\n\n(c\non\n\ntin\nue\n\nd)\n\nTa\nbl\n\ne \n17\n\n.4\n   \n\n S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n614 J. Eickhoff\n\n\n\nE\nve\n\nnt\nN\n\nam\ne\n\nE\nve\n\nnt\nID\n\nD\nes\n\ncr\nip\n\nti\non\n\nSo\nur\n\nce\nO\n\nbj\nec\n\nt\nID\n\nO\nbj\n\nec\nt\n\nID\n[h\n\nex\n]\n\nSe\nv.\n\nP\nar\n\nam\net\n\ner\n1\n\nP\nar\n\nam\net\n\ner\n2\n\nR\nF_\n\nA\nV\n\nA\nIL\n\nA\nB\n\nL\nE\n\n79\n00\n\nT\nhe\n\nC\nC\n\nSD\nS\n\nB\noa\n\nrd\nde\n\nte\nct\n\ned\na\n\nR\nF\n\nav\nai\n\nla\nbl\n\ne\nsi\n\ngn\nal\n\nI\n\nR\nF_\n\nL\nO\n\nST\n79\n\n01\nT\n\nhe\nC\n\nC\nSD\n\nS\nB\n\noa\nrd\n\nlo\nst\n\na\npr\n\nev\nio\n\nus\nly\n\nfo\nun\n\nd\nR\n\nF\nav\n\nai\nla\n\nbl\ne\n\nsi\ngn\n\nal\n\nI\n\nB\nIT\n\n_L\nO\n\nC\nK\n\n79\n02\n\nT\nhe\n\nC\nC\n\nSD\nS\n\nB\noa\n\nrd\nde\n\nte\nct\n\ned\na\n\nB\nit\n\nL\noc\n\nk\nsi\n\ngn\nal\n\nI\n\nB\nIT\n\n_L\nO\n\nC\nK\n\n_L\nO\n\nST\n79\n\n03\nT\n\nhe\nC\n\nC\nSD\n\nS\nB\n\noa\nrd\n\nlo\nst\n\na\npr\n\nev\nio\n\nus\nly\n\nfo\nun\n\nd\nB\n\nit\nL\n\noc\nk\n\nsi\ngn\n\nal\n\nI\n\nR\nF_\n\nC\nH\n\nA\nIN\n\n_L\nO\n\nST\n79\n\n04\nT\n\nhe\nC\n\nC\nSD\n\nS\nB\n\noa\nrd\n\nde\nte\n\nct\ned\n\nth\nat\n\nbi\nt\n\nlo\nck\n\nan\nd/\n\nor\nR\n\nF\nav\n\nai\nla\n\nbl\ne\n\nar\ne\n\nlo\nst\n\nI\n\nFR\nA\n\nM\nE\n\n_P\nR\n\nO\nC\n\nE\nSS\n\nIN\nG\n\n_F\nA\n\nIL\nE\n\nD\n79\n\n05\nT\n\nhe\nC\n\nC\nSD\n\nS\nbo\n\nar\nd\n\nco\nul\n\nd\nno\n\nt\npr\n\noc\nes\n\ns\na\n\nre\nce\n\niv\ned\n\nT\nC\n\nfr\nam\n\ne\n(e\n\n.g\n.\n\n40\ne5\n\n)\n\nL\nFa\n\nilu\nre\n\nC\nod\n\ne\n0\n\nTa\nbl\n\ne \n17\n\n.4\n   \n\n S\n/C\n\n E\nve\n\nnt\n p\n\nac\nke\n\nt d\nef\n\nin\niti\n\non\ns \n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 615\n\n\n\n17.4 FLP Flight Procedures\n\nThe following types of Flight Procedure types are defined:\n\n\u2022 MDE High Level Mode change procedures of system and subsystems\n\u2022 PRC General Procedure General procedures.\n\u2022 CTG Contingency Procedures, similar to PRCs, but for non-nominal processes.\n\nFor the detailed explanation please refer to Chap. 15. The \u201cFlying Laptop\u201d\nspecific Nominal Observation Mode FPs are marked in grey and are provided for\ncompleteness only (Table 17.5).\n\nSystem\n\nName Detailed Description Arguments Type\n\nYYQ00000 System Mode Change from None to Safe\nwithout GS Visibility\n\nMDE\n\nYYQ00001 System Mode Change from Safe to Boot\nwithout GS Visibility\n\nMDE\n\nYYQ00002 System Mode Change from Safe to\nCoarse Nadir without GS Visibility\n\nMDE\n\nYYQ00003 System Mode Change from Coarse\nNadir to Safe without GS Visibility\n\nMDE\n\nYYQ00004 System Mode Change from Safe to Idle\nwithout GS Visibility\n\nMDE\n\nYYQ00005 System Mode Change from Idle to Safe\nwithout GS Visibility\n\nMDE\n\nYYQ00006 System Mode Change from Idle to\nCoarse Nadir without GS Visibility\n\nMDE\n\nYYQ00007 System Mode Change from Idle to\nTarget Pointing_GS without GS\nVisibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00008 System Mode Change from Idle to\nNEO1 without GS Visibility\n\nInertial\nCoordinates\n\nMDE\n\nYYQ00009 System Mode Change from Idle to\nNEO2 without GS Visibility\n\nMDE\n\nYYQ00010 System Mode Change from Idle to\nGENIUS without GS Visibility\n\nMDE\n\nYYQ00011 System Mode Change from higher Idle\n(NEO/GENIUS/Target Pointing_GS) to\nIdle without GS Visibility\n\nMDE\n\nYYQ00014 System Mode Change from any Payload\nMode to Idle without GS Visibility\n\nMDE\n\nYYQ00015 System Mode Change from any Payload\nMode to Safe without GS Visibility\n\nMDE\n\n(continued)\n\nTable 17.5 Flight procedures overview\n\n616 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_15\n\n\nSystem\n\nYYQ00019 System Mode Change from Idle to\nPAMCAM_EO_Target without GS\nVisibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00020 System Mode Change from Idle to\nOSIRIS_HPLD without GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00021 System Mode Change from Idle to\nOSIRIS_EDFA without GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00022 System Mode Change from Idle to DDS\nwithout GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00023 System Mode Change from Idle to AIS\nwithout GS Visibility\n\nMDE\n\nYYQ00024 System Mode Change from Idle to\nShipObs_Nadir without GS Visibility\n\nMDE\n\nYYQ00025 System Mode Change from Idle to\nShipObs_Target without GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00026 System Mode Change from Idle to\nMICS_PC_Nadir without GS Visibility\n\nMDE\n\nYYQ00027 System Mode Change from Idle to\nMICS_PC_Target without GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00028 System Mode Change from Idle to\nLive_EO without GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ00029 System Mode Change from Idle to\nPLOC_Test without GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ01103 Perform Measurements to determine the\nalignment between MICS and STR\nCHUs\n\nInertial\nCoordinates\n\nPRC\n\nYYQ01104 Perform Measurements to determine the\nalignment between PAMCAM and STR\nCHUs\n\nInertial\nCoordinates\n\nPRC\n\nYYQ10000 Mode Change from None to Safe with\nGS Visibility\n\nMDE\n\nYYQ10001 Mode Change from Safe to Boot with\nGS Visibility\n\nMDE\n\nYYQ10002 Mode Change from Safe to Coarse Nadir\nwith GS Visibility\n\nMDE\n\n(continued)\n\nTable 17.5 (continued)\n\nYYQ00016 System Mode Change from Idle to\nMICS_Calib without GS Visibility\n\nInertial\nCoordinates\n\nMDE\n\nYYQ00017 System Mode Change from Idle to\nMICS_EO_Nadir without GS Visibility\n\nMDE\n\nYYQ00018 System Mode Change from Idle to\nPAMCAM_EO_Nadir without GS\nVisibility\n\nMDE\n\n17 Annexes and Data Sheets 617\n\n\n\nTable 17.5 (continued)\n\nSystem\n\nYYQ10008 Mode Change from Idle to NEO1 with\nGS Visibility\n\nInertial\nCoordinates\n\nMDE\n\nYYQ10009 Mode Change from Idle to NEO2 with\nGS Visibility\n\nMDE\n\nYYQ10010 Mode Change from Idle to GENIUS\nwith GS Visibility\n\nMDE\n\nYYQ10011 Mode Change from higher Idle\n(NEO/GENIUS/Target Pointing_GS) to\nIdle with GS Visibility\n\nMDE\n\nYYQ10014 Mode Change from any Payload Mode\nto Idle with GS Visibility\n\nMDE\n\nYYQ10015 Mode Change from any Payload Mode\nto Safe with GS Visibility\n\nMDE\n\nYYQ10016 Mode Change from Idle to MICS_Calib\nwith GS Visibility\n\nInertial\nCoordinates\n\nMDE\n\nYYQ10017 Mode Change from Idle to\nMICS_EO_Nadir with GS Visibility\n\nMDE\n\nYYQ10018 Mode Change from Idle to\nPAMCAM_EO_Nadir with GS\nVisibility\n\nMDE\n\nYYQ10019 Mode Change from Idle to\nPAMCAM_EO_Target with GS\nVisibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ10020 Mode Change from Idle to\nOSIRIS_HPLD with GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ10021 Mode Change from Idle to\nOSIRIS_EDFA with GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ10022 Mode Change from Idle to DDS with GS\nVisibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ10023 Mode Change from Idle to AIS with GS\nVisibility\n\nMDE\n\nYYQ10024 Mode Change from Idle to\nShipObs_Nadir with GS Visibility\n\nMDE\n\nYYQ10025 Mode Change from Idle to\nShipObs_Target with GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ10026 Mode Change from Idle to\nMICS_PC_Nadir with GS Visibility\n\nMDE\n\n(continued)\n\nYYQ10003 Mode Change from Coarse Nadir to Safe\nwith GS Visibility\n\nMDE\n\nYYQ10004 Mode Change from Safe to Idle with GS\nVisibility\n\nMDE\n\nYYQ10005 Mode Change from Idle to Safe with GS\nVisibility\n\nMDE\n\nYYQ10006 Mode Change from Idle to Coarse Nadir\nwith GS Visibility\n\nMDE\n\nYYQ10007 Mode Change from Idle to Target\nPointing_GS with GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\n618 J. Eickhoff\n\n\n\nTable 17.5 (continued)\n\nSystem\n\nYYQ11001 Request live TM from Ground and\nDownlink it automatically\n\nPRC\n\nYYQ11002 Request event TM from Ground and\nDownlink it automatically\n\nPRC\n\nYYQ11003 Request old HK TM from Ground and\nDownlink it automatically\n\nPRC\n\nYYQ11005 Set TLE to a value, which is an argument\nof the function\n\nCurrent TLE PRC\n\nYYQ11006 Deploy the DOM at EOL PRC\n\nYYQ11100 Commissioning Procedure to checkout\nthe HPC functionality\n\nPRC\n\nYYQ11101 Commissioning Procedure to checkout\nthe System Safe Mode\n\nPRC\n\nYYQ11102 Commissioning Procedure to checkout\nthe System Idle Mode\n\nPRC\n\nYYQ16000 Procedure to handle the case in which\nthe satellite cannot be contacted from\nground\n\nCTG\n\nYYQ16001 Perform Reboot of the whole satellite\nsystem (by rebooting PCDU)\n\nCTG\n\nYYQ16002 Trigger the PCDU to perform a\nreconfiguration loop of the whole OBC\n\nCTG\n\nYYQ16003 Trigger the PCDU to perform a\nreconfiguration loop of the I/O-Boards\n\nCTG\n\nYYQ16004 Switch all Safe Mode equipment from\nthe nominal to the redundant\nconfiguration\n\nCTG\n\nCore DHS\n\nName Detailed Description Arguments Type\n\nDYQ11000 Uplink, check and boot a new OBSW\nimage\n\nOBSW Image\nData\n\nPRC\n\nDYQ16000 In case of an error, reboot the OBSW CTG\n\nCCSDS-Board\n\nDCQ16000 Procedure to switch to the second\nCCSDS Board for the uplink (change\nVC)\n\nCTG\n\n(continued)\n\nYYQ10027 Mode Change from Idle to\nMICS_PC_Target with GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ10028 Mode Change from Idle to Live_EO\nwith GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ10029 Mode Change from Idle to PLOC_Test\nwith GS Visibility\n\nTarget\nCoordinates\n\nMDE\n\nYYQ11000 Establish contact to the satellite from\nground\n\nPRC\n\n17 Annexes and Data Sheets 619\n\n\n\nTable 17.5 (continued)\n\nSystem\n\nDMQ11002 Disable storage of Event TM packets\non-board\n\nPRC\n\nDMQ11003 Delete old data from the on-board\nEvent TM packet store\n\nPRC\n\nDMQ11011 Enable storage of Housekeeping TM\npackets on-board\n\nPRC\n\nDMQ11012 Disable storage of Housekeeping TM\npackets on-board\n\nPRC\n\nDMQ11013 Delete old data from the on-board\nHousekeeping TM packet store\n\nPRC\n\nDMQ11021 Enable storage of Miscellaneous TM\npackets on-board\n\nPRC\n\nDMQ11022 Disable storage of Miscellaneous TM\npackets on-board\n\nPRC\n\nDMQ11023 Delete old data from the on-board\nMiscellaneous TM packet store\n\nPRC\n\nI/O-Board\n\nDIQ16000 Procedure to switch to the other IO-Bard CTG\n\nProcessor-Board\n\nDOQ16000 Procedure to switch to the other OBC\nProcessor\n\nCTG\n\nScheduler\n\nYSQ11000 Enable execution of time-tagged\ncommands in the on-board schedule\n\nPRC\n\nYSQ11001 Disable execution of time-tagged\ncommands in the on-board schedule\n\nPRC\n\nYSQ16002 Delete all time-tagged commands in the\non-board schedule\n\nCTG\n\nTime\nManagment\n\nYTQ11000 Set the on-board time manually to the\ncurrent time (UTC)\n\nCurrent Time PRC\n\nPSS Subsystem\n\nName Detailed Description Arguments Type\n\nPYQ11000 Set a parameter of the PSS Control\nAlgorithm\n\nParameter Value PRC\n\n(continued)\n\nDCQ16001 Procedure to switch to the second\nCCSDS Board for the downlink\n\nCTG\n\nMemory\n\nDMQ11000 Procedure to configure which packets are\nto be saved in which TM Store\n\nPacket Type TM\nStore\n\nPRC\n\nDMQ11001 Enable storage of Event TM packets\non-board\n\nPRC\n\n620 J. Eickhoff\n\n\n\nTable 17.5 (continued)\n\nSystem\n\nPPQ16001 Reboot PCDU CTG\n\nSolar Panels\n\nPSQ01000 Perform a Measurement of the solar\npanel test string\n\nPRC\n\nTTC\n\nName Detailed Description Arguments Type\n\nXYQ00000 RX assembly on ? normal, comm\ncontroller off ? normal, ccsds board\nassembly passive ? active without GS\n\nMDE\n\nXYQ00001 TX assembly off ? on without GS MDE\n\nXYQ00002 TX assembly on ? off without GS MDE\n\nXYQ10000 RX assembly on ? normal, comm\ncontroller off ? normal, ccsds board\nassembly passive ? active with GS\n\nMDE\n\nXYQ10001 TX assembly off ? on with GS MDE\n\nXYQ10002 TX assembly on ? off with GS MDE\n\nXYQ11000 Commissioning procedure to checkout\nthe TTC\n\nPRC\n\nXYQ16000 Procedure to switch to the other TTC\nTransmitter\n\nCTG\n\nACS\n\nName Detailed Description Arguments Type\n\nAYQ01000 Perform Near Earth Object Detection\nCelestial Mode 1\n\nInertial\nCoordinates\n\nPRC\n\nAYQ01001 Perform Near Earth Object Detection\nCelestial Mode 2\n\nNadir Offset PRC\n\nAYQ01100 Commissioning Procedure to checkout\nthe Nadir Pointing Mode\n\nPRC\n\nAYQ01101 Commissioning Procedure to checkout\nthe Target Pointing Mode\n\nTarget\nCoordinates\n\nPRC\n\nAYQ01102 Commissioning Procedure to checkout\nthe Inertial Pointing Mode\n\nInertial\nCoordinates\n\nPRC\n\n(continued)\n\nPYQ11001 Update battery SoC parameters (e.g. due\nto degradation) in the PSS Controller and\nthe PCDU\n\nParameter Values PRC\n\nPCDU\n\nPPQ11000 Procedure to reset the DOM timer and\ncheck for success\n\nPRC\n\nPPQ16000 Procedure to switch to the other PCDU\nin case of an error\n\nCTG\n\nAYQ01103 Perform Measurements to determine the\ndata integrity between FOG and STR\n\nPRC\n\nAYQ01104 Perform Measurements to determine the\ndata integrity between FOG, STR and\nRW\n\nPRC\n\n17 Annexes and Data Sheets 621\n\n\n\nTable 17.5 (continued)\n\nSystem\n\nAFQ01000 Record FOG data at a high frequency for\ntest purposes\n\nDuration\nFrequency\n\nPRC\n\nAFQ11100 Commissioning procedure to checkout\nthe FOG\n\nPRC\n\nGPS\n\nAGQ01000 Perform Measurements for the GENIUS\nexperiment\n\nPRC\n\nAGQ01001 Record GPS data at a high frequency for\ntest purposes\n\nDuration\nFrequency\n\nPRC\n\nAGQ11000 Upload an Almanach to help the GPS\nacquire a fix\n\nAlmanach Data PRC\n\nAGQ11101 Commissioning procedure to checkout\nthe GPS\n\nPRC\n\nAGQ11102 Commissioning procedure to checkout\nthe GPS XNS\n\nPRC\n\nAGQ16000 Reboot GPS in case of an error CTG\n\nMGM\n\nAMQ01000 Record MGM data at a high frequency\nfor test purposes\n\nDuration\nFrequency\n\nPRC\n\nRWL\n\nARQ01000 Record RW data at a high frequency for\ntest purposes\n\nDuration\nFrequency\n\nPRC\n\nARQ11100 Commissioning procedure to checkout\nthe RW\n\nPRC\n\nSTR\n\nASQ01002 Record STR data at a high frequency for\ntest purposes\n\nDuration\nFrequency\n\nPRC\n\nASQ11000 Downlink a picture taken by the STR PRC\n\nASQ11001 Perform an Update of the STR star\ncatalog\n\nStar Catalog Data PRC\n\nASQ11100 Commissioning procedure to checkout\nthe STR\n\nPRC\n\nASQ11101 Commissioning procedure to checkout\nthe STR MIRU\n\nPRC\n\nASQ16000 Reboot STR in case of an error CTG\n\nTCS\n\nName Detailed Description Arguments Type\n\n(continued)\n\nAYQ11000 Set a parameter of the ACS Control\nAlgorithm\n\nParameter Value PRC\n\nAYQ11001 Switch the position source from GPS to\na propagator\n\nPRC\n\nFOG\n\nTYQ01001 Heat an unused device to its operating\ntemperature range before using it\n\nDevice PRC\n\n622 J. Eickhoff\n\n\n\nNote: Only the Payload subsystem-level Flight Procedures are listed here\u2014\nusing as example the implementation from the \u201cFlying Laptop\u201d mission. The\nindividual \u201cFlying Laptop\u201d specific payload equipment Flight Procedures are not\nincluded in this platform Flight Operations Manual.\n\n17.5 TTC Subsystem Data Sheets\n\n17.5.1 Bit Error Rate Reference Data\n\nThe following figures show the BER references measured at BoL together with the\nDLR 15 m antenna. They are provided as reference data for detection of potential\ndegradations (Figs. 17.1 and 17.2).\n\nTable 17.5 (continued)\n\nSystem\n\nHeater\n\nTHQ11100 Commissioning Procedure to switch on\nthe heaters and record their power\nconsumption.\n\nPRC\n\nPayload\n\nName Detailed Description Arguments Type\n\nPYQ01000 Perform EO with MICS and PAMCAM Target Coordinates\nPicture Frequency\n\nPRC\n\nPYQ01001 Perform AIS Measurement and Ship\nObservations with the MICS\n\nTarget Coordinates\nPicture Frequency\n\nPRC\n\nPYQ11000 Perform Live Earth Observation Target Coordinates PRC\n\nTYQ11002 Set a parameter of the TCS Control\nAlgorithm\n\nParameter Value PRC\n\nFig. 17.1 Measured BER of RX-0. \u00a9 IRS, University of Stuttgart\n\n17 Annexes and Data Sheets 623\n\n\n\n17.5.2 TTC Housekeeping Parameter Reference Data\n\nThe following reference diagrams are provided as measured BoL reference data for\nhealth monitoring of the receivers and transmitters\u2014as far as available from [80].\nNote: No reference data for RX subcarrier loop stress have been provided (See\nFigs. 17.3, 17.4, 17.5, 17.6, 17.7, 17.8, 17.9, 17.10, 17.11, 17.12, 17.13, 17.14,\n17.15, 17.16, 17.17, 17.18, 17.19, 17.20, 17.21 and 17.22).\n\nFig. 17.2 Measured BER of RX-1. \u00a9 IRS, University of Stuttgart\n\nFig. 17.3 Carrier loop stress monitor reference BoL for RX-0. \u00a9 STT\u2014from [71]\n\nFig. 17.4 Carrier loop stress monitor reference BoL for RX-1. \u00a9 STT\u2014from [71]\n\n624 J. Eickhoff\n\n\n\nFig. 17.6 Signal AGC monitor for RX-1. \u00a9 STT\u2014from [71]\n\nFig. 17.5 Signal AGC monitor for RX-0. \u00a9 STT\u2014from [71]\n\nFig. 17.7 Signal AGC monitor for RX-0 (modulation off). \u00a9 STT\u2014from [71]\n\n17 Annexes and Data Sheets 625\n\n\n\nFig. 17.8 Signal AGC Monitor for RX-1 (modulation off). \u00a9 STT\u2014from [71]\n\nFig. 17.9 Voltage CO control voltage over temperature. \u00a9 STT\u2014from [71]\n\nFig. 17.10 Transmitter HPA current over temperature\u2014TX-N. \u00a9 STT\u2014from [71]\n\n626 J. Eickhoff\n\n\n\nFig. 17.11 Transmitter HPA current over temperature\u2014TX-R. \u00a9 STT\u2014from [71]\n\nFig. 17.12 Transmitter loop stress\u2014TX-N. \u00a9 STT\u2014from [71]\n\nFig. 17.13 Transmitter loop stress\u2014TX-R. \u00a9 STT\u2014from [71]\n\n17 Annexes and Data Sheets 627\n\n\n\nFig. 17.16 RX temperature (telemetry vs. measured)\u2014RX-0. \u00a9 STT\u2014from [71]\n\nFig. 17.15 TX temperature (telemetry vs. measured)\u2014TX-R. \u00a9 STT\u2014from [71]\n\nFig. 17.14 TX temperature (telemetry vs. measured)\u2014TX-N. \u00a9 STT\u2014from [71]\n\n628 J. Eickhoff\n\n\n\nFig. 17.18 SNR estimator versus SNR\u2014RX-0/1. \u00a9 STT\u2014from [71]\n\nFig. 17.19 Carrier ACG monitor (modulation off)\u2014RX-0. \u00a9 STT\u2014from [71]\n\nFig. 17.17 RX temperature (telemetry vs. measured)\u2014RX-1. \u00a9 STT\u2014from [71]\n\n17 Annexes and Data Sheets 629\n\n\n\nFig. 17.20 Carrier ACG monitor (modulation on)\u2014RX-0. \u00a9 STT\u2014from [71]\n\nFig. 17.21 Carrier ACG monitor (modulation off)\u2014RX-1. \u00a9 STT\u2014from [71]\n\nFig. 17.22 Carrier ACG monitor (modulation on)\u2014RX-1. \u00a9 STT\u2014from [71]\n\n630 J. Eickhoff\n\n\n\n17.6 TC/TM Link Budgets for the IRS Antenna Station\n\nTables 17.6, 17.7, 17.8 and 17.9 depict the link budgets for operation of an FLP\nsatellite via the antenna station of the IRS institute. The worst case is assumed for\nthe satellite upcoming over the horizon (elevation angle 10\u00b0). The best case data\nrefer to the satellite being exactly above the ground station (elevation angle 90\u00b0):\n\nTable 17.6 Link Budget TC uplink (worst case)\n\nUplink Command Budget:\n\n:stinU:eulaV:retemaraP\n\nGround Station:\n\nW0.5:tuptuOrewoPrettimsnarTnoitatSdnuorG\n\nWBd0.7:WBdnI\n\nIn dBm: 37.0 dBm\n\nGround Stn. Total Transmission Line Losses: 6.6 dB\n\nAntenna Gain: 31.9 dBi\n\nGround Station EIRP: 32.3 dBW\n\nUplink Path:\n\nGround Station Antenna Pointing Loss: 0.3 dB\n\nGnd-to-S/C Antenna Polarization Losses: 0.2 dB\n\nPath Loss: 164.7 dB\n\nAtmospheric and Ionospheric Losses: 1.2 dB\n\nIsotropic Signal Level at Spacecraft RIPS/C: ? WBd2.431\n\nSpacecraft (Eb/No Method):\n\nSpacecraft Antenna Pointing Loss Lpointing_S/C: 0.0 dB\n\nSpacecraft Antenna Gain Gr_S/C: ?8.0 dBi\n\nSignal power after Antenna: ?142.2 dBW\n\nSpacecraft Effective Noise Temperature Ts: 1581 K\n\nSpacecraft Figure of Merrit (G/T): ?40.0 dB/K\n\nS/C Signal-to-Noise Power Density (C/No): 54.4 dBHz\n\nSystem Desired Data Rate: 4000 bps\n\nIn dBHz: 36.0 dBHz\n\nCommand System Eb/No: 18.4 dB\n\nDemodulation Method: BPSK\n\nForward Error Correction Coding Used: None\n\nSystem Allowed or Specified Bit-Error-Rate: 1.0E?05\n\nEb/No Threshold: 13.5 dB\n\nSystem Link Margin: 4.9 dB\n\nImplementation Loss: 1 dB\n\nTechnical degradation 1.0 dB\n\nSystem Link Margin after uncertain Losses: 2.9 dB\n(continued)\n\n17 Annexes and Data Sheets 631\n\n\n\nTable 17.7 Link Budget TM downlink (worst case)\n\nDownlink Telemetry Budget:\n\n:stinU:eulaV:retemaraP\n\nSpacecraft:\n\nW6.0:tuptuOrewoPrettimsnarTtfarcecapS\n\nIn dBW: ? WBd0.2\n\nIn dBm: 28.0 dBm\n\nSpacecraft Total Transmission Line Losses: 0.6 dB\n\nSpacecraft Antenna Gain: ?8.0 dBi\n\nSpacecraft EIRP: ?10.6 dBW\n\nDownlink Path:\n\nSpacecraft Antenna Pointing Loss: 0.0 dB\n\nS/C-to-Ground Antenna Polarization Loss: 0.3 dB\n\nPath Loss: 165.5 dB\n\nAtmospheric and Ionospheric Loss: 1.23 dB\n\nIsotropic Signal Level at Ground Station RIPGS: ? WBd6.771\n\nGround Station (EbNo Method):\n\nGround Station Antenna Pointing Loss LpointingGS: 0.3 dB\n\nGround Station Antenna Gain Gr_GS: 33.1 dBi\n\nSignal power after Antenna: ?144.8 dBW\n\nGround Station Effective Noise Temperature: 388 K\n\nGround Station Figure of Merrit (G/T): 7.2 dBi/K\n\nG.S. Signal-to-Noise Power Density (C/No): 57.9 dBHz\n\nSystem Desired Data Rate: 56000 bps\n\nIn dBHz: 47.5 dBHz\n\nTelemetry System Eb/No for the Downlink: 10.4 dB\n\nDemodulation Method Seleted: BPSK\n\nForward Error Correction Coding Used: Conv. R = 1/2,K = 7 & R.S. (255,223)\nIL = 5\n\nSystem Allowed or Specified Bit-Error-Rate: 1.0E?05\n\nDemodulator Implementation Loss: 0 dB\n\nTelemetry System Required Eb/No: 4.5 dB\n\nEb/No Threshold: 4.5 dB\n(continued)\n\nTable 17.6 (continued)\n\nUplink Command Budget:\n\nSignal Power at FLP Receiver\n\nMin. premissable Signal Power at Receiver: ? WBd841\n\nMax. premissable Signal Power at Receiver: ? WBd05\n\nSignal power at Receiver input: ?147.1 dBW\n\nWithin TTC Power Limit\n\n632 J. Eickhoff\n\n\n\nTable 17.8 Link Budget TC uplink (best case)\n\nUplink Command Budget:\n\n:stinU:eulaV:retemaraP\n\nGround Station:\n\nW0.5:tuptuOrewoPrettimsnarTnoitatSdnuorG\n\nWBd0.7:WBdnI\n\nIn dBm: 37.0 dBm\n\nGround Stn. Total Transmission Line Losses: 6.3 dB\n\nAntenna Gain: 31.9 dBi\n\nGround Station EIRP: 32.6 dBW\n\nUplink Path:\n\nGround Station Antenna Pointing Loss: 0.0 dB\n\nGnd-to-S/C Antenna Polarization Losses: 0.2 dB\n\nPath Loss: 164.3 dB\n\nAtmospheric and Ionospheric Losses: 0.0 dB\n\nIsotropic Signal Level at Spacecraft RIPS/C: ? WBd0.231\n\nSpacecraft (Eb/No Method):\n\nSpacecraft Antenna Pointing Loss Lpointing_S/C: 0.0 dB\n\nSpacecraft Antenna Gain Gr_S/C: 4.0 dBi\n\nSignal power after Antenna: ?128.0 dBW\n\nSpacecraft Effective Noise Temperature Ts: 1474 K\n\nSpacecraft Figure of Merrit (G/T): ?27.7 dB/K\n\nS/C Signal-to-Noise Power Density (C/No): 68.9 dBHz\n\nSystem Desired Data Rate: 4000 bps\n\nIn dBHz: 36.0 dBHz\n(continued)\n\nTable 17.7 (continued)\n\nDownlink Telemetry Budget:\n\n9.5:nigraMkniLmetsyS dB\n\nBd1:ssoLnoitatnemelpmI\n\nBd0.1noitadargedlacinhceT\n\nSystem Link Margin after uncertain Losses: 3.9 dB\n\nSignal Power at GS Receiver\n\nSignal Power at the input of Downconverter: ?121.2 dBW\n\nMax. Input Downconverter: ?60 dBW\n\nDownconverter Gain: 15 dBW\n\nMin. premissable Signal Power at IMBU: ?116 dBW\n\nMax. premissable Signal Power at IMBU: ?60 dBW\n\nSignal power at IMBU Receiver input: ?106.2 dBW\n\nWithin IMBU Power Limit\n\n17 Annexes and Data Sheets 633\n\n\n\nTable 17.9 Link Budget TM downlink (best case)\n\nDownlink Telemetry Budget:\n\n:stinU:eulaV:retemaraP\n\nSpacecraft:\n\nW0.1:tuptuOrewoPrettimsnarTtfarcecapS\n\nIn dBW: ? WBd2.0\n\nIn dBm: 29.8 dBm\n\nSpacecraft Total Transmission Line Losses: 0.6 dB\n\nSpacecraft Antenna Gain: 4.0 dBi\n\nSpacecraft EIRP: 3.3 dBW\n\nDownlink Path:\n\nSpacecraft Antenna Pointing Loss: 0.0 dB\n\nS/C-to-Ground Antenna Polarization Loss: 0.3 dB\n\nPath Loss: 165.1 dB\n\nAtmospheric and Ionospheric Loss: 0.00 dB\n\nIsotropic Signal Level at Ground Station RIPGS: ? WBd1.261\n\nGround Station (EbNo Method):\n\nGround Station Antenna Pointing Loss L pointingGS: 0.0 dB\n\nGround Station Antenna Gain Gr_GS: 33.1 dBi\n\nSignal power after Antenna: ?129.0 dBW\n\nGround Station Effective Noise Temperature: 145 K\n\nGround Station Figure of Merrit (G/T): 11.5 dBi/K\n\nG.S. Signal-to-Noise Power Density (C/No): 78.0 dBHz\n\nSystem Desired Data Rate: 56000 bps\n(continued)\n\nTable 17.8 (continued)\n\nUplink Command Budget:\n\nBd9.23:oN/bEmetsySdnammoC\n\nDemodulation Method: BPSK\n\nForward Error Correction Coding Used: None\n\nSystem Allowed or Specified Bit-Error-Rate: 1.0E?05\n\nEb/No Threshold: 13.5 dB\n\nSystem Link Margin: 19.4 dB\n\nImplementation Loss: 0 dB\n\nTechnical degradation 0.0 dB\n\nSystem Link Margin after uncertain Losses: 19.4 dB\n\nSignal Power at FLP Receiver\n\nMin. premissable Signal Power at Receiver: ?147 dBW\n\nMax. premissable Signal Power at Receiver: ?50 dBW\n\nSignal power at Receiver input: ?132.7 dBW\n\nWithin TTC Power Limit\n\n634 J. Eickhoff\n\n\n\n17.7 Power Subsystem Data Sheets\n\n17.7.1 PCDU Switch and Fuse Allocation\n\nThe design of the PCDU includes a total of 27 fuses and 77 power switches plus 2\nspecial switches for high-power consuming loads. The following table provides an\noverview of the assignments of the fuses and switches to equipment of the FLP\ntarget spacecraft (Table 17.10).\n\nTable 17.9 (continued)\n\nDownlink Telemetry Budget:\n\nzHBd5.74:zHBdnI\n\nBd5.03:knilnwoDehtrofoN/bEmetsySyrtemeleT\n\nDemodulation Method Seleted: BPSK\n\nForward Error Correction Coding Used: Conv. R = 1/2,K = 7 & R.S. (255,223)\nIL = 5\n\nSystem Allowed or Specified Bit-Error-Rate: 1.0E ? 05\n\nDemodulator Implementation Loss: 0 dB\n\nTelemetry System Required Eb/No: 4.5 dB\n\nEb/No Threshold: 4.5 dB\n\nSystem Link Margin: 26.0 dB\n\nImplementation Loss: 0 dB\n\nTechnical degradation 0.0 dB\n\nSystem Link Margin after uncertain Losses: 26.0 dB\n\nSignal Power at GS Receiver\n\nSignal Power at the input of Downconverter: ?104.8 dBW\n\nMax. Input Downconverter: ?60 dBW\n\nDownconverter Gain: 15 dBW\n\nMin. premissable Signal Power at IMBU: ?116 dBW\n\nMax. premissable Signal Power at IMBU: ?60 dBW\n\nSignal power at IMBU Receiver input: ?89.8 dBW\n\nWithin IMBU Power Limit\n\n17 Annexes and Data Sheets 635\n\n\n\nTable 17.10 Fuses and switches in the PCDU\n\nNo. of\nFuse\n\nNo. of\nSwitches\n\neulaVtnerruC.xaMtnenopmoC\nwith margin [mA]\n\n0.084NeroCCBO20\n\n1 0.084ReroCCBO2\n\n2 0.051NdraoBO/I2\n\n3 0.051RdraoBO/I2\n\n4 0.5010SDSCC2\n\n5 0.5011SDSCC2\n\n6 0.0820revieceRCT1\n\n7 0.0821revieceRCT1\n\n8 5.934GSCIM1\n\n2 PLOC Power Channel N 1539.0\n\n0.5340hctiwsSDD1\n\n9 5.934RSCIM1\n\n2 PLOC Power Channel R 1539.0\n\n0.5341hctiwsSDD1\n\n10 5.934RINSCIM1\n\n0.0052NrettimsnarTMT2\n\n0.534NRTS1\n\n11 0.3333WR1\n\n0.534RRTS1\n\n1 FOG 3 300.0\n\n12 1 FOG 0 300.0\n\n1 RW 0 333.0\n\n13 1 FOG 1 300.0\n\n1 RW 1 333.0\n\n14 1 FOG 2 300.0\n\n1 RW 2 333.0\n\n15 1 MGM 0 39.0\n\n16 1 MGM 1 39.0\n\n17 1 PAMCAM 153.0\n\n1 MGT Unit R 219.0\n\n1 GPS Electronics 1 141.0\n\n18 1 GPS Electronics 0 141.0\n\n1 MGT Unit N 219.0\n\n1 GPS Electronics 2 141.0\n\n19 2 Osiris channel 2 750.0\n\n2 TM Transmitter R 2500.0\n\n20 2 Osiris channel 1 2250.0\n\n2 Data Transmitter R 1365.0\n\n1 Bimetal + Heater OBC Survival 1/\nBimetal + Heater TT&C Survival 1\n\n2952.0\n\n(continued)\n\n636 J. Eickhoff\n\n\n\n17.7.2 Power Consumption Versus Modes\n\nTable 17.11 shows the power consumption of the spacecraft components versus\ndifferent operational modes of the satellite.\n\nTable 17.10 (continued)\n\nNo. of\nFuse\n\nNo. of\nSwitches\n\neulaVtnerruC.xaMtnenopmoC\nwith margin [mA]\n\n21 1 Bimetal + Heater OBC Survival\n0/Bimetal + Heater TT&C Survival 0\n\n2952.0\n\n0.5631NrettimsnarTataD2\n\n22 2 Heater Payload Module 0 960.0\n\n2 Heater Core Module 0 960.0\n\n2 Heater Service Module 0 960.0\n\n23 2 Heater Payload Module 1 960.0\n\n2 Heater Core Module 1 960.0\n\n2 Heater Service Module 1 960.0\n\n24 2 Retaining Mechanism 0 2784.0\n\n25 2 Retaining Mechanism 1 2784.0\n\n26 2 DOM 450.0\n\n2 AIS Antenna 2304.0\n\n2 AIS Receiver 600.0\n\n17 Annexes and Data Sheets 637\n\n\n\nM\nod\n\ne\nL\n\nau\nnc\n\nh/\nSh\n\nut\nD\n\now\nn\n\nM\nod\n\ne\nSa\n\nfe\nM\n\nod\ne\n\nId\nle\n\nM\nod\n\ne\nC\n\noa\nrs\n\ne\nN\n\nad\nir\n\nP\noi\n\nnt\nin\n\ng\nM\n\nod\ne\n\nN\non\n\ne\nM\n\nod\ne\n\nA\nC\n\nS\nM\n\nod\ne\n\nO\nff\n\nD\net\n\num\nbl\n\ne/\nSa\n\nfe\nId\n\nle\nT\n\nar\nge\n\nt\nP\n\noi\nnt\n\nin\ng\n\nO\nff\n\nSy\nst\n\nem\nm\n\nax\n.\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\n\u201cF\nly\nin\ngL\n\nap\nto\np\u201d\n\nP\nL\ns\n\nP\nL\n\nO\nC\n\n11\n.5\n\n0\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nP\nA\n\nM\nC\n\nA\nM\n\n1.\n60\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nM\nIC\n\nS\nC\n\nam\ner\n\na\n16\n\n.4\n0\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nA\nIS\n\nR\nec\n\nei\nve\n\nr\n6.\n\n20\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nO\nSI\n\nR\nIS\n\nL\nM\n\n+\nE\n\nD\nF\n\nA\n26\n\n.0\n0\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nO\nSI\n\nR\nIS\n\nH\nP\n\nL\nD\n\n10\n.5\n\n0\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nD\nat\n\na\nD\n\now\nnl\n\nin\nk\n\nSy\ns.\n\n15\n.9\n\n5\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nA\nC\nS\n\nM\nG\n\nT\n4.\n\n54\n0\n\n0.\n00\n\n10\n0\n\n4.\n54\n\n63\n2.\n\n86\n10\n\n0\n4.\n\n54\n0\n\n0.\n00\n\nM\nG\n\nM\n1.\n\n20\n0\n\n0.\n00\n\n10\n0\n\n1.\n20\n\n10\n0\n\n1.\n20\n\n10\n0\n\n1.\n20\n\n0\n0.\n\n00\n\nR\nW\n\n13\n.5\n\n4\n0\n\n0.\n00\n\n0\n0.\n\n00\n50\n\n6.\n77\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nST\nR\n\n4.\n60\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n10\n0\n\n4.\n60\n\n10\n0\n\n4.\n60\n\n0\n0.\n\n00\n\nF\nO\n\nG\n13\n\n.4\n6\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n10\n0\n\n13\n.4\n\n6\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nG\nP\n\nS\n5.\n\n16\n0\n\n0.\n00\n\n0\n0.\n\n00\n33\n\n1.\n70\n\n33\n1.\n\n70\n0\n\n0.\n00\n\nC\n&\nD\nH\n\nO\nB\n\nC\n6.\n\n16\n0\n\n0.\n00\n\n10\n0\n\n6.\n16\n\n10\n0\n\n6.\n16\n\n10\n0\n\n6.\n16\n\n10\n0\n\n6.\n16 (\n\nco\nnt\n\nin\nue\n\nd)\n\nT\nab\n\nle\n17\n\n.1\n1\n\nPo\nw\ner\n\nco\nns\num\n\npt\nio\nn\nve\nrs\nus\n\nsp\nac\nec\nra\nft\nm\nod\n\nes\n638 J. Eickhoff\n\n\n\nM\nod\n\ne\nL\n\nau\nnc\n\nh/\nSh\n\nut\nD\n\now\nn\n\nM\nod\n\ne\nSa\n\nfe\nM\n\nod\ne\n\nId\nle\n\nM\nod\n\ne\nC\n\noa\nrs\n\ne\nN\n\nad\nir\n\nP\noi\n\nnt\nin\n\ng\nM\n\nod\ne\n\nN\non\n\ne\nM\n\nod\ne\n\nI/\nO\n\n-B\noa\n\nrd\n2.\n\n20\n0\n\n0.\n00\n\n10\n0\n\n2.\n20\n\n10\n0\n\n2.\n20\n\n10\n0\n\n2.\n20\n\n10\n0\n\n2.\n20\n\nC\nC\n\nSD\nS-\n\nB\noa\n\nrd\n3.\n\n10\n0\n\n0.\n00\n\n10\n0\n\n3.\n10\n\n10\n0\n\n3.\n10\n\n10\n0\n\n3.\n10\n\n10\n0\n\n3.\n10\n\nP\now\n\ner\n\nP\nC\n\nD\nU\n\n24\n.5\n\n0\n2.\n\n5\n0.\n\n61\n33\n\n8.\n09\n\n40\n9.\n\n80\n33\n\n8.\n09\n\n33\n8.\n\n09\n\nB\nat\n\nte\nry\n\n1.\n00\n\n80\n0.\n\n80\n80\n\n0.\n80\n\n10\n0\n\n1.\n00\n\n10\n0\n\n1.\n00\n\n80\n0.\n\n80\n\nC\nom\n\nm\ns\n\nT\nT\n\nC\nT\n\nx\n12\n\n.0\n0\n\n0\n0.\n\n00\n10\n\n1.\n20\n\n10\n1.\n\n20\n10\n\n1.\n20\n\n10\n1.\n\n20\n\nT\nT\n\nC\nR\n\nx\n6.\n\n00\n0\n\n0.\n00\n\n10\n0\n\n6.\n00\n\n10\n0\n\n6.\n00\n\n10\n0\n\n6.\n00\n\n10\n0\n\n6.\n00\n\nM\nis\nc.\n\nSr\nv.\n\nM\nod\n\nul\ne\n\nH\nea\n\nte\nr\n\n33\n.3\n\n3\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nC\nor\n\ne\nM\n\nod\nul\n\ne\nH\n\nea\nte\n\nr\n32\n\n.8\n1\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nP\nL\n\nM\nod\n\nul\ne\n\nH\nea\n\nte\nr\n\n32\n.8\n\n1\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nO\nB\n\nC\nH\n\nea\nte\n\nr\n53\n\n.4\n2\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nT\nT\n\nC\nH\n\nea\nte\n\nr\n52\n\n.0\n8\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nB\nat\n\nte\nry\n\nH\nea\n\nte\nr\n\n8.\n00\n\n0\n0.\n\n00\n10\n\n0\n8.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n10\n\n0\n8.\n\n00\n\nP\nC\n\nD\nU\n\nH\nea\n\nte\nr\n\n3.\n50\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nD\nep\n\nlo\ny\n\nM\nec\n\nh.\n10\n\n2.\n70\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nSu\nm\n\n50\n4.\n\n26\n1.\n\n41\n41\n\n.2\n9\n\n60\n.0\n\n5\n39\n\n.7\n9\n\n35\n.5\n\n5\n\nT\not\n\nal\n(m\n\nar\ngi\n\nn\n10\n\n%\n)\n\n55\n4.\n\n69\n1.\n\n55\n45\n\n.4\n1\n\n66\n.0\n\n6\n43\n\n.7\n7\n\n39\n.1\n\n0\n\nT\nab\n\nle\n17\n\n.1\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 639\n\n\n\nM\nod\n\ne\nT\n\nar\nge\n\nt\nP\n\nt\nfo\n\nr\nG\n\nS\nC\n\non\nta\n\nct\nM\n\nod\ne\n\nL\niv\n\ne\nE\n\nO\nM\n\nod\ne\n\nM\nIC\n\nS\nE\n\nO\nM\n\nod\ne\n\nM\nIC\n\nS/\nP\n\nA\nM\n\nC\nA\n\nM\nM\n\nod\ne\n\nN\nE\n\nO\nD\n\net\nec\n\nti\non\n\nM\nod\n\ne\n\nA\nC\n\nS\nM\n\nod\ne\n\nT\nar\n\nge\nt\n\nP\noi\n\nnt\nin\n\ng\nT\n\nar\nge\n\nt\nP\n\noi\nnt\n\nin\ng\n\nN\nad\n\nir\nP\n\noi\nnt\n\nin\ng\n\nT\nar\n\nge\nt\n\nP\noi\n\nnt\nin\n\ng\nN\n\nad\nir\n\n/I\nne\n\nrt\nia\n\nl\nP\n\noi\nnt\n\nin\ng\n\nSy\nst\n\nem\nm\n\nax\n.\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\ndu\nty\n\ncy\ncl\n\ne\n[%\n\n]\n\npo\nw\n\ner\nco\n\nns\num\n\npt\nio\n\nn\n[W\n\n]\n\n\u201cF\nly\nin\ngL\n\nap\nto\np\u201d\n\nP\nL\ns\n\nP\nL\n\nO\nC\n\n11\n.5\n\n0\n0\n\n0.\n00\n\n10\n0\n\n11\n.5\n\n0\n10\n\n0\n11\n\n.5\n0\n\n10\n0\n\n11\n.5\n\n0\n0\n\n0.\n00\n\nP\nA\n\nM\nC\n\nA\nM\n\n1.\n60\n\n0\n0.\n\n00\n10\n\n0\n1.\n\n60\n10\n\n0\n1.\n\n60\n10\n\n0\n1.\n\n60\n0\n\n0.\n00\n\nM\nIC\n\nS\nC\n\nam\ner\n\na\n16\n\n.4\n0\n\n0\n0.\n\n00\n10\n\n0\n16\n\n.4\n0\n\n10\n0\n\n16\n.4\n\n0\n10\n\n0\n16\n\n.4\n0\n\n0\n0.\n\n00\n\nA\nIS\n\nR\nec\n\nei\nve\n\nr\n6.\n\n20\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nO\nSI\n\nR\nIS\n\nL\nM\n\n+\nE\n\nD\nF\n\nA\n26\n\n.0\n0\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nO\nSI\n\nR\nIS\n\nH\nP\n\nL\nD\n\n10\n.5\n\n0\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nD\nat\n\na\nD\n\now\nnl\n\nin\nk\n\nSy\ns.\n\n15\n.9\n\n5\n0\n\n0.\n00\n\n10\n0\n\n15\n.9\n\n5\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nA\nC\nS\n\nM\nG\n\nT\n4.\n\n54\n63\n\n2.\n86\n\n63\n2.\n\n86\n63\n\n2.\n86\n\n63\n2.\n\n86\n63\n\n2.\n86\n\nM\nG\n\nM\n1.\n\n20\n10\n\n0\n1.\n\n20\n10\n\n0\n1.\n\n20\n10\n\n0\n1.\n\n20\n10\n\n0\n1.\n\n20\n10\n\n0\n1.\n\n20\n\nR\nW\n\n13\n.5\n\n4\n50\n\n6.\n77\n\n50\n6.\n\n77\n50\n\n6.\n77\n\n10\n0\n\n13\n.5\n\n4\n10\n\n0\n13\n\n.5\n4\n\nST\nR\n\n4.\n60\n\n10\n0\n\n4.\n60\n\n10\n0\n\n4.\n60\n\n10\n0\n\n4.\n60\n\n10\n0\n\n4.\n60\n\n10\n0\n\n4.\n60\n\nF\nO\n\nG\n13\n\n.4\n6\n\n10\n0\n\n13\n.4\n\n6\n10\n\n0\n13\n\n.4\n6\n\n10\n0\n\n13\n.4\n\n6\n10\n\n0\n13\n\n.4\n6\n\n10\n0\n\n13\n.4\n\n6\n\nG\nP\n\nS\n5.\n\n16\n33\n\n1.\n70\n\n33\n1.\n\n70\n33\n\n1.\n70\n\n33\n1.\n\n70\n33\n\n1.\n70\n\nC\n&\nD\nH\n\nO\nB\n\nC\n6.\n\n16\n10\n\n0\n6.\n\n16\n10\n\n0\n6.\n\n16\n10\n\n0\n6.\n\n16\n10\n\n0\n6.\n\n16\n10\n\n0\n6.\n\n16\n\nI/\nO\n\n-B\noa\n\nrd\n2.\n\n20\n10\n\n0\n2.\n\n20\n10\n\n0\n2.\n\n20\n10\n\n0\n2.\n\n20\n10\n\n0\n2.\n\n20\n10\n\n0\n2.\n\n20\n\nC\nC\n\nSD\nS-\n\nB\noa\n\nrd\n3.\n\n10\n10\n\n0\n3.\n\n10\n10\n\n0\n3.\n\n10\n10\n\n0\n3.\n\n10\n10\n\n0\n3.\n\n10\n10\n\n0\n3.\n\n10 (\nco\n\nnt\nin\n\nue\nd)\n\nT\nab\n\nle\n17\n\n.1\n1\n\n(c\non\n\ntin\nue\n\nd)\n\n640 J. Eickhoff\n\n\n\nP\now\n\ner\n\nP\nC\n\nD\nU\n\n24\n.5\n\n0\n33\n\n8.\n09\n\n33\n8.\n\n09\n33\n\n8.\n09\n\n33\n8.\n\n09\n33\n\n8.\n09\n\nB\nat\n\nte\nry\n\n1.\n00\n\n10\n0\n\n1.\n00\n\n10\n0\n\n1.\n00\n\n10\n0\n\n1.\n00\n\n10\n0\n\n1.\n00\n\n10\n0\n\n1.\n00\n\nC\nom\n\nm\ns\n\nT\nT\n\nC\nT\n\nx\n12\n\n.0\n0\n\n10\n1.\n\n20\n10\n\n0\n12\n\n.0\n0\n\n10\n1.\n\n20\n10\n\n1.\n20\n\n10\n1.\n\n20\n\nT\nT\n\nC\nR\n\nx\n6.\n\n00\n10\n\n0\n6.\n\n00\n10\n\n0\n6.\n\n00\n10\n\n0\n6.\n\n00\n10\n\n0\n6.\n\n00\n10\n\n0\n6.\n\n00\n\nM\nis\nc.\n\nSr\nv.\n\nM\nod\n\nul\ne\n\nH\nea\n\nte\nr\n\n33\n.3\n\n3\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nC\nor\n\ne\nM\n\nod\nul\n\ne\nH\n\nea\nte\n\nr\n32\n\n.8\n1\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nP\nL\n\nM\nod\n\nul\ne\n\nH\nea\n\nte\nr\n\n32\n.8\n\n1\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\nO\nB\n\nC\nH\n\nea\nte\n\nr\n53\n\n.4\n2\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nT\nT\n\nC\nH\n\nea\nte\n\nr\n52\n\n.0\n8\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nB\nat\n\nte\nry\n\nH\nea\n\nte\nr\n\n8.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nP\nC\n\nD\nU\n\nH\nea\n\nte\nr\n\n3.\n50\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nD\nep\n\nlo\ny\n\nM\nec\n\nh.\n10\n\n2.\n70\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n0\n\n0.\n00\n\n0\n0.\n\n00\n\nSu\nm\n\n50\n4.\n\n26\n58\n\n.3\n4\n\n11\n4.\n\n59\n87\n\n.8\n4\n\n94\n.6\n\n1\n65\n\n.1\n1\n\nT\not\n\nal\n(m\n\nar\ngi\n\nn\n10\n\n%\n)\n\n55\n4.\n\n69\n64\n\n.1\n7\n\n12\n6.\n\n05\n96\n\n.6\n2\n\n10\n4.\n\n07\n71\n\n.6\n2\n\nM\nod\n\ne\nT\n\nar\nge\n\nt\nP\n\nt\nfo\n\nr\nG\n\nS\nC\n\non\nta\n\nct\nM\n\nod\ne\n\nL\niv\n\ne\nE\n\nO\nM\n\nod\ne\n\nM\nIC\n\nS\nE\n\nO\nM\n\nod\ne\n\nM\nIC\n\nS/\nP\n\nA\nM\n\nC\nA\n\nM\nM\n\nod\ne\n\nN\nE\n\nO\nD\n\net\nec\n\nti\non\n\nM\nod\n\ne\n\nT\nab\n\nle\n 1\n\n7.\n11\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 641\n\n\n\n17.7.3 Power Budget\n\nTable 17.12 shows the energy budget worst case of the spacecraft.\nWhen the battery is empty, the operating point of the solar panel will be\n\napproximately the same as the battery voltage, thus reducing the power from the\npanels with respect to the Maximum Power Point.\n\n17.8 TCS Subsystem Data Sheets\n\nSome additional tables concerning the thermal subsystem are provided on the next\npages (Table 17.13):\n\nTable 17.12 Energy budget\n\nCharacteristic Parameters\n\nStandard Cells, Wing Panels\n\nA82.3ttaB_U@I\n\n4.57ttaB_U@P W\n\nStandard Cells, Center Panel\n\nA49.1ttaB_U@I\n\n95.44ttaB_U@P W\n\nTest String Center Panel\n\nA35.0ttaB_U@I\n\n2.21ttaB_U@P W\n\nMax Total Power Generated 207.59 W\n\nLosses\n\nGeneral Loss (w/o degradation) 0.94\n\ndegradation storage before launch 0.99\n\n39.0rotcaFssoLlatoT\n\nTotal Power Generated 193.902 W\n\nRequired Energy (@ 600 km)\n\nAverage Power Consumption 66.06 W\n\nPower Consumption Payload Ops worst 126.05 W\n\nDuration Payload Ops Worst 15 min\n\nnim73.69doirePlatibrO\n\nnim23.03doirePespilcE\n\nnim50.66doirePthgilnuS\n\nLoss Correction Factor 1.05\n\nEnergy Required per Orbit 127.15 Wh\n\nGenerated Energy\n\nEnergy Generated in Sunlight 164.98 Wh\n\nMargin 22.93 %\n\n642 J. Eickhoff\n\n\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n17\n\n.1\n3\n\nSe\nns\nor\n\nlis\nt\nw\nith\n\nca\nlib\n\nra\ntio\n\nns\n17 Annexes and Data Sheets 643\n\n\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n17\n\n.1\n3\n\n(c\non\n\ntin\nue\n\nd)\n\n644 J. Eickhoff\n\n\n\n! ! !\n$\n\n! ! ! ! ! !\n\n(\n\n! ! !\n\n&\n! ! ! ! ! ! ! !\n\n(c\non\n\ntin\nue\n\nd)\n\nT\nab\n\nle\n17\n\n.1\n3\n\n(c\non\n\ntin\nue\n\nd)\n\n17 Annexes and Data Sheets 645\n\n\n\nT\nab\n\nle\n17\n\n.1\n3\n\n(c\non\n\ntin\nue\n\nd)\n\n646 J. Eickhoff\n\n\n\n17.9 Mass Budget\n\nTable 17.14 depicts the mass budget of the FLP satellite platform\u2014excluding\npayloads.\n\nTable 17.15 provides the mass budget overview on the entire \u201cFlying Laptop\u201d\nsatellite\u2014including payloads and optical bench of the cameras. The percentage\ndistribution is visualized in addition in Fig. 17.23.\n\nTable 17.14 FLP Generation 1 platform mass budget\n\nPlatform Component Mass [kg]\n\n00.5WR\n\nMGT 1.27\n\nMGM 0.36\n\nSUS 0.26\n\nGPS 1.09\n\nSTR 1.68\n\nFOG 2.01\n\nOBC 4.64\n\nPCDU 4.19\n\nSolar Panels 6.87\n\nBattery 10.07\n\nHarness 9.88\n\nStructure 26.64\n\nDeployment Mechanism 1.86\n\nDOM 1.66\n\nTCS 3.48\n\nTT&C 5.42\n\nsum 86.36\n\nTable 17.15 \u201cFlying Laptop\u201d\u2014mass budget\n\nPayload 21.91 20.23 %\n\nACS 11.66 10.77 %\n\nOBC 4.64 4.28 %\n\nHarness 9.88 9.12 %\n\nPower 21.13 19.52 %\n\nS&M 30.16 27.85 %\n\nTCS 3.48 3.21 %\n\nTTC 5.42 5.00 %\n\n108.26 100 %\n\nSubsystem Mass [kg] Percentage\n\n17 Annexes and Data Sheets 647\n\n\n\n17.10 Orbit Analysis\n\nThe \u201cFlying Laptop\u201d as first FLP-based mission spacecraft is intended to be\nlaunched as a piggy-back payload on an Indian PSLV rocket. The exact orbital\nparameters still are to be agreed with the launch provider and partly depend on the\nrequirements of the launcher\u2019s primary passenger. Foreseen is a sun-synchronous\norbit with an altitude of 500\u2013650 km and a Local Time of Descending Node\n(LTDN) between 09:30 and 11:00 h.\n\nThe orbit analysis information provided in this chapter shall serve as an\napproximation to illustrate the platform performance.\n\n17.10.1 Orbit Environment\n\nA variety of orbits needs to be considered for the thermal analysis. The orbit\nanalysis has defined 7 possible orbits for the FLP. These orbits were analyzed in\n[125] in order to define the parameters of both, the hot and the cold case. The results\nof this analysis are shown in Table 17.16. After availability of detailed input data\nfrom the launch supplier a more detailed analysis will be performed, considering\norbital drift data and orbital thermal constraints.\n\nFig. 17.23 \u201cFlying Laptop\u201d\u2014mass budget distribution per subsystem. \u00a9 IRS University of\nStuttgart\n\n648 J. Eickhoff\n\n\n\n17.10.2 Orbit Definition for the FLP Mission Flying Laptop\n\nA set of slightly varying orbits is defined in order to simulate and compare the\nimpact of different orbital conditions. Two parameters mainly define the differences\nof an SSO, namely the LTDN and the orbit altitude. The LTDN is the key factor for\n\nTable 17.16 Thermal worst case scenarios of the \u201cFlying Laptop\u201d mission [125]\n\nHot Case Cold Case Source\n\nOrbit number Orbit 04 Orbit 07 IRS-06-S04\n\nOrbit altitude [km] 500 900 IRS-06-S04\n\nInclination [\u00b0] 97.4 99.03 IRS-06-S04\n\nLTDN [hh:mm] 09:30 11:00 IRS-06-S04\n\nSolar constant S0 [W/m\n2] 1412.11 1321.89 I-DEAS NX\n\nAlbedo [\u2013] 0.4 0.2 Airbus DS\n\nIR from Earth [W/m2] 261 189 Airbus DS\n\nFig. 17.24 LTDN illustration. \u00a9 IRS University of Stuttgart\n\n17 Annexes and Data Sheets 649\n\n\n\nthe lighting conditions for the Earth observation with the camera payloads while the\norbit altitude is important for the optical resolution of the payload cameras and the\nslew rates during imaging maneuvers.\n\nTable 17.21 later shows a short description of each of the seven analyzed orbits\nwhile Table 17.17 contains the corresponding definitions. Figures 17.24 and 17.25\nillustrate the different LTDNs. Orbit 01 (see Table 17.17) is defined as the nominal\norbit with an altitude of 600 km and an LTDN of 10:30 h. Considering former\nPSLV launches these values seem realistic.\n\nNote: Although orbits 6 and 7 have been analyzed in [125] for the \u201cFlying\nLaptop\u201d FLP Generation 1 mission, their orbit altitude is too high to be able to\ndeorbit the spacecraft via the DOM sail in the required timeframe after mission\nend. The mission in such case would violate the European Code of Conduct on\nSpace Debris Mitigation [1]. These Orbits are only relevant for missions based on\nthe FLP Generation 2 with a propulsion system for orbit corrections and with a\nsufficient amount of fuel for orbit altitude reduction after nominal mission end.\n\nFig. 17.25 Visualization of orbit range. \u00a9 IRS University of Stuttgart\n\n650 J. Eickhoff\n\n\n\n17.10.3 Longitudinal Displacement per Pass and Orbit\nRepeat Cycle\n\nThe variation of the longitude of two subsequent passes at a certain latitude is of\ninterest for Earth observation in particular. Figure 17.26 shows the ascending nodes\nof the satellite in Orbit 01 and illustrates the displacement. In opposition to the\ndisplacement in km, the displacement of the angular longitude depends on the given\nlatitude (Table 17.18).\n\nA property of the sun-synchronous orbit is that the orbit altitude may be chosen\nin a way to be synchronous to the rotation of the Earth. This way the ground track is\nrepeated after a certain number of days. This orbit repeat cycle is depicted in\nTable 17.19.\n\nAs it is unlikely that the satellite will ever repeat the exact orbit 100 % so the\nrepeat cycles are associated with a certain deviation given in degrees of longitude.\n\nFig. 17.26 Longitudinal displacement (Orbit 01). \u00a9 IRS University of Stuttgart\n\nTable 17.17 Orbit definition for the Flying Laptop\n\nParameter a h* e i LTAN/LTDN* TOrbit* Revolutions*\n\n[m] [km] [\u2013] [\u00b0] [hh:mm] [s] [min] [day?1] [year?1]\n\nOrbit 01 6 978 137 600 0 97.79 22:30/10:30 5801.23 96.69 14.89 5440\n\nOrbit 02 6 978 137 600 0 97.79 21:30/09:30 5801.23 96.69\n\nOrbit 03 6 978 137 600 0 97.79 23:00/11:00 5801.23 96.69\n\nOrbit 04 6 878 137 500 0 97.40 21:30/09:30 5677.98 94.63 15.22 5558\n\nOrbit 05 6 878 137 500 0 97.40 23:00/11:00 5677.98 94.63\n\nOrbit 06 7 278 137 900 0 99.03 21:30/09:30 6179.33 102.99 13.98 5107\n\nOrbit 07 7 278 137 900 0 99.03 23:00/11:00 6179.33 102.99\n\nOrbit Epoch: 1 Jan 2012 00:00:00.000 UTCG (MJD 55927.0)\n(*.additional Information; not used for definition)\n\n17 Annexes and Data Sheets 651\n\n\n\nIn Table 17.19 the first two typical repeat intervals are given for each orbit together\nwith its deviation from the original orbit.\n\n17.10.4 Contact to IRS and Other Ground Stations\n\nA minimal elevation angle of 7\u00b0 is required for contact to a ground station. 10\u00b0 are\ndeemed more realistic due to expected W-LAN noise on the campus. 7\u00b0 is based on\nexperiences of present ground stations and will be used for the accessibility pre-\ndiction of the satellite. The LTAN/LTDN does not have any influence on this\nanalysis.\n\nFigure 17.27 shows the region where access to the IRS ground station is possible\nfor the nominal altitude of 600 km taking the minimum elevation of 7\u00b0 into account.\nIt also shows ground tracks of three consecutive passes over the ground station. It\ncan be identified that in the best case depicted here the satellite can be accessed\nfrom the ground station in three consecutive orbits and in any case in two con-\nsecutive orbits. This is also the case for the lower altitude of 500 km, as can be seen\nin Fig. 17.28.\n\nTable 17.18 Displacement per pass\n\nDisplacement in longitude\n\n[deg] [km]\n\nLatitude overall 0\u00b0 20\u00b0 40\u00b0 48.674\u00b0 (IRS) 60\u00b0 80\u00b0\n\nOrbit 01\u201303 ?24.202 2694.15 2529.44 2057.44 1771.56 1339.54 464.46\n\nOrbit 04\u201305 ?23.685 2636.60 2475.50 2013.76 1734.03 1311.24 454.68\n\nOrbit 06\u201307 ?25.776 2869.37 2693.62 2190.32 1885.69 1425.58 494.19\n\nTable 17.19 Orbit repeat cycles\n\n? longitude [deg] ? time ? revolution number\n[s] [h] [day]\n\nOrbit 01\u201303 ?3.0330 87128 24.20 1.008 15\n\n?0.0630 691215 192.00 8.000 119\n\nOrbit 04\u201305      +4.7260 85266 23.68 0.987 15\n\n?0.0555 432014 120.00 5.000 76\n\nOrbit 06\u201307 ?0.8700 86608 24.06 1.002 14\n\n?0.2100 2592051 720.01 30.001 419\n\n652 J. Eickhoff\n\n\n\nValues for the number of contacts to be expected per day and their durations to\nIRS and to a partner\u2019s ground station are listed in Table 17.20. Figure 17.29 shows\nthe orbits during which the ground stations in Stuttgart and Waco (Texas, USA) can\nbe accessed from a satellite in the nominal orbit altitude. On the ordinate of the\ndepicted diagram, the visibility windows are given in the range [0 \u2026 1], where 0\nand 1 denote the passes of the ascending node for each orbit. As both ground\nstations are located on the northern hemisphere, there is no ground station access\nduring the second half of each orbit and thus the values greater than 0.5 are omitted.\nFor the circular orbits considered here, the fraction of the orbit can be directly\nconverted to time using the orbital period provided in Table 17.17 and true anomaly\nfor further analysis. The number of orbits analyzed is limited to 119 by the second\norbit repeat cycle, given in Table 17.19.\n\nFrom this diagram, the maximum gap between two access intervals to the\nground station at IRS can be estimated to be about 7 orbits or 11.5 h. This value can\n\nFig. 17.27 Contact area for nominal orbit altitude and ground track of three consecutive passes.\n\u00a9 IRS University of Stuttgart\n\nFig. 17.28 Contact area for orbit altitude of 500 km and ground track of three consecutive passes.\n\u00a9 IRS University of Stuttgart\n\n17 Annexes and Data Sheets 653\n\n\n\nalso be used as worst case for the LEOP analysis. If the ground station in Waco can\nbe used, the maximum gap time could easily be reduced by half.\n\nDue to its location closer to the equator, this ground station can only be accessed\nin a maximum of two consecutive passes and might only be accessible in one orbit\nin the worst case (see red lines in Fig. 17.29).\n\nFigure 17.30 shows a similar diagram for an orbit altitude of 500 km. For this\norbit the second repeat cycle is only 76.\n\nAt this altitude, the maximum gap time between two access intervals to Stuttgart\nis approximately 11.3 h. In general, similar considerations as for the nominal\naltitude apply with access intervals being shorter at this lower altitude.\n\nFig. 17.29 Fraction of orbits with possible access to ground stations in Stuttgart and Waco for the\nnominal orbit altitude. \u00a9 IRS University of Stuttgart\n\nTable 17.20 Number and duration of daily contact (mean values)\n\nOrbit Ground\nstation\n\nMean number\nof contacts\n[day?1]\n\nMean contact\nduration\n[min/day]\n\nMean contact\nduration\n[min/contact]\n\nMax.\ncontact\nduration\n[min]\n\n01\u201303 Stuttgart\n(GER), IRS\n\n4.83 36.37 7.53 9.64\n\n04\u201305 4.39 29.14 6.64 8.48\n\n06\u201307 5.91 59.13 10.00 12.88\n\n01\u201303 Waco, TX\n(USA), Baylor\nUniversity\n\n3.61 27.17 7.53 9.57\n\n04\u201305 3.30 21.79 6.61 8.41\n\n06\u201307 4.32 43.55 10.08 12.81\n\n654 J. Eickhoff\n\n\n\n17.10.5 Sun, Umbra and Penumbra Phases\n\nThe proportion of the phases where the satellite travels in the sunlight, in the Earth\u2019s\nshadow or in the transition of one to another is not constant over the year, but\nperforms a slight change. Figure 17.31 shows the evolution over 1 year exemplary\nfor Orbit 01. The corresponding mean values are displayed in Fig. 17.32. More\ndetailed information is provided in Table 17.21.\n\nDepending on the orbit the sun proportion varies between 62.7 and 70.2 %. The\nphase where the satellite is situated in the penumbra is negligible for most of the\n\nFig. 17.30 Fraction of orbits with possible access to ground stations in Stuttgart and Waco for an\norbit altitude of 500 km. \u00a9 IRS University of Stuttgart\n\nFig. 17.31 Evolution of the\nsunlight proportion over 1\nyear (Orbit 01). \u00a9 IRS\nUniversity of Stuttgart\n\n17 Annexes and Data Sheets 655\n\n\n\nseula\nV\n\nxa\nM\n\nseula\nV\n\nni\nM\n\nseul a\nV\n\nna e\nM\n\nti br\nO\n\nSu\nn\n\nU\nm\n\nbr\na\n\nP\nen\n\num\nbr\n\na\nSu\n\nn\nU\n\nm\nbr\n\na\nP\n\nen\n.\n\nSu\nn\n\nU\nm\n\nbr\na\n\nP\nen\n\n.\n\n[s\n]\n\n[%\n]\n\n[s\n]\n\n[%\n]\n\n[s\n]\n\n[%\n]\n\n[s\n]\n\n[s\n]\n\n[s\n]\n\n[s\n]\n\n[s\n]\n\n[s\n]\n\n01\n37\n\n42\n.4\n\n64\n.4\n\n3\n20\n\n47\n.3\n\n35\n.2\n\n5\n9.\n\n4\n0.\n\n32\n37\n\n16\n.4\n\n20\n05\n\n.3\n8.\n\n9\n37\n\n82\n.7\n\n20\n74\n\n.1\n10\n\n.1\n\n02\n38\n\n73\n.3\n\n66\n.6\n\n8\n19\n\n12\n.9\n\n32\n.9\n\n3\n11\n\n.2\n0.\n\n38\n38\n\n06\n.3\n\n18\n14\n\n.6\n10\n\n.0\n39\n\n68\n.1\n\n19\n81\n\n.8\n12\n\n.7\n\n03\n37\n\n07\n.5\n\n63\n.8\n\n3\n20\n\n83\n.1\n\n35\n.8\n\n6\n8.\n\n9\n0.\n\n31\n36\n\n92\n.6\n\n20\n56\n\n.9\n8.\n\n6\n37\n\n32\n.5\n\n20\n98\n\n.5\n9.\n\n4\n\n04\n37\n\n12\n.7\n\n65\n.3\n\n1\n19\n\n50\n.1\n\n34\n.3\n\n1\n10\n\n.8\n0.\n\n38\n36\n\n54\n.6\n\n18\n64\n\n.4\n9.\n\n8\n37\n\n95\n.2\n\n20\n09\n\n.9\n12\n\n.2\n\n05\n35\n\n65\n.5\n\n62\n.7\n\n2\n21\n\n01\n.4\n\n36\n.9\n\n7\n8.\n\n7\n0.\n\n31\n35\n\n52\n.3\n\n20\n78\n\n.3\n8.\n\n4\n35\n\n87\n.4\n\n21\n15\n\n.0\n9.\n\n2\n\n06\n43\n\n40\n.7\n\n70\n.1\n\n7\n18\n\n21\n.0\n\n29\n.4\n\n4\n12\n\n.3\n0.\n\n40\n42\n\n43\n.9\n\n16\n80\n\n.6\n10\n\n.8\n44\n\n76\n.6\n\n19\n20\n\n.5\n14\n\n.3\n\n07\n41\n\n20\n.1\n\n66\n.6\n\n20\n47\n\n.1\n33\n\n.0\n9\n\n9.\n6\n\n0.\n31\n\n40\n99\n\n.0\n20\n\n10\n.6\n\n9.\n2\n\n41\n55\n\n.1\n20\n\n68\n.7\n\n10\n.1\n\nT\nab\n\nle\n17\n\n.2\n1\n\nSu\nn,\n\num\nbr\na\nan\nd\npe\nnu\n\nm\nbr\na\ntim\n\nes\nov\n\ner\n1\nye\nar\n\n656 J. Eickhoff\n\n\n\nsimulations as its percentage always stays below 0.5. For a conservative approach it\ncan be added to the umbra time. Moon eclipses are not considered.\n\n17.10.6 Orbital Drift\n\nIn an ideal SSO the orbital plane drifts 360\u00b0 per solar year to maintain a constant\norientation to the sun. However, in reality every orbit is affected by disturbances.\nFor a SSO the two main interferences are the gravity of the Sun, which causes a\nchange in the orbit inclination, and the influence of the atmosphere, which leads to a\nlowering of the orbit altitude. Hence, the orbit will not remain as intended for too\nlong. This is especially the case for the FLP Generation 1 missions as this platform\nversion is not yet equipped with an orbit control system to compensate any orbital\ndisturbances.\n\nFigure 17.33 shows the change of different orbital parameters over time for some\nrelevant satellites launched into a sun synchronous orbit with a PSLV. The data in\nthe graphs was obtained from archived TLEs at www.space-track.org. Unlike the\nother satellites IRS-P4 and IRS-P6 (ISRO) are equipped with an orbit control\nsystem to compensate any orbital drift, which explains the nearly optimal behavior\n\nFig. 17.32 Mean proportion of sun, umbra and penumbra (Orbit 01). \u00a9 IRS University of\nStuttgart\n\n17 Annexes and Data Sheets 657\n\nhttp://www.space-track.org\n\n\nof the satellite. TUBSAT, KITSAT 3 are both launched on PSLV C3 and show a\nreasonably similar drifting behavior, while Bird 2 and Proba 1 are launched on\nPSLV C2 but differ significantly in their drift characteristics. The distinction is\napparently caused by the different injection conditions of the two satellites. The\ninclinations and especially the orbit altitudes are different and cause an unequal long\ntime behavior.\n\nFor all satellites not equipped with an orbit control system the crucial factor for\nthe order of magnitude of the deviations from an optimal SSO is thus the accuracy\nof the orbit injection. Since the final orbit and the drag properties of the satellite is\nnot known, it is nearly impossible to conduct meaningful simulations of the orbit\n\nFig. 17.33 Long-term behavior of exemplary satellites in a SSO. \u00a9 IRS University of Stuttgart\n\n658 J. Eickhoff\n\n\n\ndrift. The examples given here (especially Bird 2) provide a rough estimate of the\norbit drift behavior of FLP Generation 1 missions like the \u201cFlying Laptop\u201d.\n\n17.10.7 Multi-angle Earth Observation\n\nThe FLP provides the feature of a target pointing mode for observation of celestial\nbodies, Moon or Earth targets. Optical multi-angle Earth observation is for example\nof interest for so-called Bidirectional Reflectance Distribution Function (BRDF)\nmeasurements and vegetation analysis based thereupon.\n\nThe \u201cFlying Laptop\u201d can be taken as representative example of an Earth\nobservation mission with a sensor/camera arrangement and Star Tracker/Sun sensor\narrangement. For such multi-angle Earth observations pointing to a dedicated target,\nthe following operational constraints have to be taken into account:\n\n\u2022 Sun\u2013Zenith angle at test sites is less than 60\u00b0,\n\u2022 satellite pitch angle within \u00b160\u00b0,\n\u2022 satellite roll angle within \u00b15\u00b0,\n\u2022 at least one star tracker is not blinded by the:\n\n\u2013 Sun (Sun exclusion angle = 55\u00b0),\n\u2013 Earth (Earth exclusion angle = 93\u00b0),\n\u2013 Moon (Moon exclusion angle = 8\u00b0).\n\nThe target visibility windows have to be selected accordingly and have to be\nconsidered in the mission planning and mission timeline generation.\n\n17.11 Spacecraft Skin Connector Panel Layout\n\nThe spacecraft platform provides a skin connector panel which comprises an\nexternal power supply connector, a debug interface connector for the platform OBC\nand two debug connectors for the nominal and the redundant FLP Generation 1\npayload computer PLOC. The overall skin connector panel and connector\narrangement is depicted in Fig. 17.34. The Tables 17.22, 17.23, 17.24 and 17.25 list\nthe connector pin allocations. For the specifics of the OBC debug connector which\nprovides the interface to the Debug Support Unit (DSU), please refer to the CDPI\nreference documentation [47].\n\n17 Annexes and Data Sheets 659\n\n\n\nFig. 17.34 Spacecraft skin connector panel. \u00a9 IRS University of Stuttgart\n\nTable 17.22 External Power Supply (D-Sub HD 44 S)\n\nPin Pin Description Mating\nConnector\n\nMating Connector Pin\n\n1 PWR Charge Battery 0 (BCR0) PCDU J1 3\n\n2 PWR Charge Battery 1 (BCR1) PCDU J2 3\n\n3 not connected\n\n4 GND Charge Battery 0 (BCR0) PCDU J1 16\n\n5 GND Charge Battery 1 (BCR1) PCDU J2 16\n\n6 PWR Charge Battery 2 (BCR2) PCDU J3 3\n\n7 not connected\n\n8 not connected\n\n9 GND Charge Battery 2 (BCR2) PCDU J3 16\n\nTable 17.23 OBC Debug (D-Sub HD 44 S)\n\nPin Pin Description Mating Connector Mating Connector Pin\n\n1 N\u2014DSUTMS OBC_Power J1 1\n\n2 N\u2014DSUTCK 2\n\n3 N\u2014DSUTDI 3\n\n4 N\u2014DSUTDO 4\n\n5 N\u2014EMDC (DSU) 5\n\n6 N\u2014DSUACT 6\n\n7 N\u2014DSUBRK 7\n\n8 N\u2014DSUEN 8\n(continued)\n\n660 J. Eickhoff\n\n\n\nTable 17.23 (continued)\n\nPin Pin Description Mating Connector Mating Connector Pin\n\n9 not connected\n\n10 not connected\n\n11 N\u2014Ext. Power OBC_Power J1 10\n\n12 R\u2014Ext. Power OBC_Power J7 10\n\n13 PWR EGSE PCDU J3 11\n\n14 PWR EGSE 12\n\n15 PWR EGSE 13\n\n16 N\u2014DSURSTN OBC_Power J1 9\n\n17 N\u2014(RS422) Data+ 10\n\n18 N\u2014(RS422) Data- 11\n\n19 not connected\n\n20 R\u2014DSURSTN OBC_Power J7 9\n\n21 R\u2014(RS422) Data+ 10\n\n22 R\u2014(RS422) Data- 11\n\n23 not connected\n\n24 not connected\n\n25 not connected\n\n26 not connected\n\n27 not connected\n\n28 not connected\n\n29 not connected\n\n30 not connected\n\n31 R\u2014DSUTMS OBC_Power J7 1\n\n32 R\u2014DSUTCK 2\n\n33 R\u2014DSUTDI 3\n\n34 R\u2014DSUTDO 4\n\n35 R\u2014EMDC (DSU) 5\n\n36 R\u2014DSUACT 6\n\n37 R\u2014DSUBRK 7\n\n38 R\u2014DSUEN 8\n\n39 not connected\n\n40 N\u2014Ext. GND OBC_Power J1 13\n\n41 R\u2014Ext. GND OBC_Power J7 13\n\n42 GND EGSE PCDU J3 23\n\n43 GND EGSE 24\n\n44 GND EGSE 25\n\n17 Annexes and Data Sheets 661\n\n\n\nTable 17.24 PLOC R Debug (D-Sub HD 44 S)\n\nPin Pin Description Mating\nConnector\n\nMating Connector Pin\n\n1 MMU_Debug_00 PLOC J6 1\n\n2 MMU_Debug_02 2\n\n3 MMU_Debug_04 3\n\n4 MMU_Debug_06 4\n\n5 MMU_Debug_08 5\n\n6 MMU_Debug_10 6\n\n7 MMU_Debug_12 7\n\n8 MMU_Debug_14 8\n\n9 MMU_Debug_16 9\n\n10 MMU_Debug_18 10\n\n11 MMU_Debug_20 11\n\n12 GND 12\n\n13 not connected\n\n14 not connected\n\n15 GND 15\n\n16 MMU_Debug_01 16\n\n17 MMU_Debug_03 17\n\n18 MMU_Debug_05 18\n\n19 MMU_Debug_07 19\n\n20 MMU_Debug_09 20\n\n21 MMU_Debug_11 21\n\n22 MMU_Debug_13 22\n\n23 MMU_Debug_15 23\n\n24 MMU_Debug_17 24\n\n25 MMU_Debug_19 25\n\n26 MMU_Debug_21 26\n\n27 GND 27\n\n28 not connected\n\n29 not connected\n\n30 GND 30\n\n31 MMU_JTAG_TCK 31\n\n32 MMU_JTAG_TMS 32\n\n33 MMU_JTAG_TDO 33\n\n34 MMU_JTAG_VJTAG 34\n\n35 MMU_JTAG_TDI 35\n\n36 MMU_JTAG_VPUMP 36\n\n37 MMU_JTAG_TRST 37\n\n38 not connected\n\n39 not connected\n(continued)\n\n662 J. Eickhoff\n\n\n\nTable 17.24 (continued)\n\nPin Pin Description Mating\nConnector\n\nMating Connector Pin\n\n40 GND (signal) 40\n\n41 CPN_Debug_Rx? 41\n\n42 CPN_Debug_Rx+ 42\n\n43 CPN_Debug_Tx? 43\n\n44 CPN_Debug_Tx+ 44\n\nTable 17.25 PLOC N Debug (D-Sub HD 44 S)\n\nPin Pin Description Mating\nConnector\n\nMating Connector Pin\n\n1 MMU_Debug_00 PLOC J7 1\n\n2 MMU_Debug_02 2\n\n3 MMU_Debug_04 3\n\n4 MMU_Debug_06 4\n\n5 MMU_Debug_08 5\n\n6 MMU_Debug_10 6\n\n7 MMU_Debug_12 7\n\n8 MMU_Debug_14 8\n\n9 MMU_Debug_16 9\n\n10 MMU_Debug_18 10\n\n11 MMU_Debug_20 11\n\n12 GND 12\n\n13 not connected\n\n14 not connected\n\n15 GND 15\n\n16 MMU_Debug_01 16\n\n17 MMU_Debug_03 17\n\n18 MMU_Debug_05 18\n\n19 MMU_Debug_07 19\n\n20 MMU_Debug_09 20\n\n21 MMU_Debug_11 21\n\n22 MMU_Debug_13 22\n\n23 MMU_Debug_15 23\n\n24 MMU_Debug_17 24\n\n25 MMU_Debug_19 25\n\n26 MMU_Debug_21 26\n\n27 GND 27\n\n28 not connected\n\n29 not connected\n(continued)\n\n17 Annexes and Data Sheets 663\n\n\n\n17.12 Red-Tagged Items\n\nThere are the following Red-Tagged Items to be removed before launch concerning\nthe FLP platform.\n\n\u2022 Debug interface connector for OBC JTAG interface board.\n\nFurther items may exist for the payload module which are mission specific such\nas for the \u201cFlying Laptop\u201d mission the:\n\n\u2022 Camera protection covers\n\u2022 OSIRIS Laser Beam Protection\n\n17.13 Green-Tagged Items\n\nThe list of Green-Tagged Items to be mounted before launch concerning the FLP\nplatform comprises:\n\n\u2022 SA deployment protection connectors (4 items):\n\u2022 Each of the four retaining mechanism of the solar panel deployment system are\n\nequipped with an activation connector (green-tagged item) closing both electric\nheater circuits on one mechanism for heating the melting braid (Fig. 5.5). These\n\nTable 17.25 (continued)\n\nPin Pin Description Mating\nConnector\n\nMating Connector Pin\n\n30 GND 30\n\n31 MMU_JTAG_TCK 31\n\n32 MMU_JTAG_TMS 32\n\n33 MMU_JTAG_TDO 33\n\n34 MMU_JTAG_VJTAG 34\n\n35 MMU_JTAG_TDI 35\n\n36 MMU_JTAG_VPUMP 36\n\n37 MMU_JTAG_TRST 37\n\n38 not connected\n\n39 not connected\n\n40 GND (signal) 40\n\n41 CPN_Debug_Rx? 41\n\n42 CPN_Debug_Rx+ 42\n\n43 CPN_Debug_Tx? 43\n\n44 CPN_Debug_Tx+ 44\n\n664 J. Eickhoff\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_5\n\n\nconnectors\u2014when missing\u2014will prevent activation, which is intended during\nthe integration, test and transport phase. They are not mounted during AIT and\ntransport.\n\n\u2022 Spacecraft separation circuit (see Fig. 11.3 for PSLV and Fig. 11.4 for\nSoyuz/Fregat).\n\n\u2022 Safety caps for the spacecraft skin connector panel.\n\nThere may be further items which are mission and payload specific.\n\n17.14 Two Line Element Orbit Data Definitions\n\nThe TLE data sets provide orbit information in a format which is going back to\ntimes where computer information still was coded in punch-cards. The two lines\nprovide the orbit information for a spacecraft in two lines\u2014formerly representing\ntwo computer punch-cards.\n\nThe following example is taken from Wikipedia and explains a two line ele-\nments set using the data from the ISS main module ZARYA the diverse parameters\nof the data set are explained in the tables below:\n\nTLE set:\n\nTitle line:\n\nLINE 1:\n\nISS (ZARYA)\n\n1 25544U 98067A 08264.51782528 -.00002182 00000-0 -11606-4 0 2927\n\n2 25544 51.6416 247.4627 0006703 130.5360 325.0288 15.72125391563537\n\nField Columns Content Example\n\n1 01\u201324 Satellite name ISS (ZARYA)\n\nField Columns Content Example\n\n1 01\u2013 1rebmuneniL10\n\n2 03\u2013 44552rebmunetilletaS70\n\n3 08\u201308 Classification (U = Unclassified) U\n\n4 10\u201311 International Designator (Last two digits of launch\nyear)\n\n98\n\n5 12\u201314 International Designator (Launch number of the year) 067\n\n6 15\u201317 International Designator (Piece of the launch) A\n\n7 19\u201320 Epoch Year (Last two digits of year) 08\n\n8 21\u201332 Epoch (Day of the year and fractional portion of the\nday)\n\n264.51782528\n\n(continued)\n\n17 Annexes and Data Sheets 665\n\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\nhttp://dx.doi.org/10.1007/978-3-319-23503-5_11\n\n\nLINE 2:\n\n9 34\u201343 First Time Derivative of the Mean Motion divided by\ntwo [4]\n\n?.00002182\n\n10 45\u201352 Second Time Derivative of Mean Motion divided by\nsix (decimal point assumed)\n\n00000-0\n\n11 54\u201361 BSTAR drag term (decimal point assumed) [4] -11606-4\n\n12 63\u201363 The number 0 (Originally this should have been\n\u201cEphemeris type\u201d)\n\n0\n\n13 65\u201368 Element set number. incremented when a new TLE is\ngenerated for this object. [4]\n\n292\n\n14 69\u2013 7)01oludoM(muskcehC96\n\nField Columns Content Example\n\n(continued)\n\nField Columns Content Example\n\n1 01\u2013 2rebmuneniL10\n\n2 03\u2013 44552rebmunetilletaS70\n\n3 09\u2013 6146.15]seergeD[noitanilcnI61\n\n4 18\u201325 Right Ascension of the Ascending Node [Degrees] 247.4627\n\n5 27\u201333 Eccentricity (decimal point assumed) 0006703\n\n6 35\u201342 Argument of Perigee [Degrees] 130.5360\n\n7 44\u2013 8820.523]seergeD[ylamonAnaeM15\n\n8 53\u2013 19352127.51]yadrepsveR[noitoMnaeM36\n\n9 64\u201368 Revolution number at epoch [Revs] 56353\n\n10 69\u2013 7)01oludoM(muskcehC96\n\n666 J. Eickhoff\n\n\n\nReferences\n\nApplicable Standards\n\n1. European Code of Conduct on Space Debris Mitigation, Issue 1\n2. ECSS-S-ST-00-01C ECSS System Glossary of Terms, Issue 3, (01 October 2012)\n3. ECSS-E-ST-50-12C (31 July 2008) SpaceWire - Links, nodes, routers and networks\n4. ECSS-E-ST-50-51C (5 February 2010) SpaceWire protocol Identification\n5. ECSS-E-ST-50-52C (5 February 2010) SpaceWire - Remote memory access protocol\n6. ECSS-E-50-12C SpaceWire cabling\n7. ECSS-E-ST-50C Communications\n8. ECSS-E-ST-50-01C Space data links - Telemetry synchronization and channel coding\n9. ECSS-E-ST-50-02C Ranging and Doppler tracking\n\n10. ECSS-E-ST-50-03C Space data links - Telemetry Transfer Frame protocol\n11. ECSS-E-ST-50-04C Space data links - Telecommand rotocols, synchronization and channel\n\ncoding\n12. ECSS-E-ST-50-05C Radio frequency and modulation\n13. ECSS-E-70-41A Ground systems and operations - Telemetry and telecommand packet\n\nutilization\n14. ECSS-E-70-11C Space Engineering - Space Segment Operability\n15. CCSDS standard, Consultative Committee for Space Data Systems: CCSDS Recommended\n\nStandards, Blue Books, available online at http://public.ccsds.org/publications/BlueBooks.\naspx\n\n16. CCSDS 130.0-G-2 CCSDS layer conversions\n17. CCSDS-131.0-B-1 TM Synchronization and Channel Coding\n18. CCSDS-132.0-B-1 TM Space Data Link Protocol\n19. CCSDS 133.0-B-1 Space Packet Protocol\n20. CCSDS-133.0-B-1-C1 Encapsulation Service Technical Corrigendum 1\n21. CCSDS-135.0-B-4 Space Link Identifiers\n22. CCSDS-201.0 Telecommand - Part 1 - Channel Service, CCSDS 201.0-B-3, June 2000\n23. CCSDS-202.0 Telecommand - Part 2 - Data Routing Service, CCSDS 202.0-B-3, June 2001\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5\n\n667\n\nhttp://public.ccsds.org/publications/BlueBooks.aspx\nhttp://public.ccsds.org/publications/BlueBooks.aspx\n\n\n24. CCSDS-202.1 Telecommand - Part 2.1 - Command Operation Procedures, CCSDS\n202.1-B-2, June 2001\n\n25. CCSDS-203.0 Telecommand - Part 3 - Data Management Service, CCSDS 203.0-B-2, June\n2001\n\n26. CCSDS-231.0-B-2 TC Synchronization and Channel Coding\n27. CCSDS 232.0-B-2 Telecommand Space Data Link Protocol\n28. CCSDS-232.1-B-2 Communications Operation Procedure-1\n29. CCSDS-401.0-B Radio Frequency and Modulation Systems\n30. CCSDS-732.0-B-2 AOS Space Data Link Protocol\n31. ESA PSS-04-0 Space data communications\n32. ESA PSS-04-103 Telemetry channel coding standard, Issue 1\n33. ESA PSS-04-105 Radio frequency and modulation standard\n34. ESA PSS-04-106 Packet Telemetry Standard, Issue 1\n35. ESA PSS-04-107 Packet Telecommand Standard, Issue 2\n36. ESA PSS-04-151 Telecommand Decoder Standard, Issue 1\n37. ECSS TM/TC Packet Utilization Standard, 30. January 2003\n38. ECSS-E-10-03A Space Engineering - Testing, February 2002\n39. Airbus Patent Affiliation P700377-DE-NP: Multifunktionaler Kontroller f\u00fcr einen Satelliten\n\nDeutsches Patent- und Markenamt DPMA 10 2012 009 513.9\n40. Airbus Patent Affiliation 107973.65556US Multifunctional Controller for a Satellite US\n\nPatent Office 2015\n\nReferences on \u201cFlying Laptop\u201d Target Satellite Documents\n\n41. FLP-SP-220-001-IRS FLP Orbit Definition and Simulations University of Stuttgart,\nStuttgart, Institute of Space Systems, Germany\n\n42. Fist, Timothy: FLP-TN-519-006-IRS Coarse Nadir Pointing Mode - Performance\nCharacterization Iss. 2, 16.08.2014 University of Stuttgart, Stuttgart, Institute of Space\nSystems, Germany\n\n43. Axmann, R.; Gude, J.; Muehlbauer, P.: TET-1 Satellite Operations Lessons Learned\nPreparation of Mission, LEOP and routine Operations of 11 different Experiments, 62nd\nInternational Astronautical Congress, Cape Town, SA\n\n44. TET-1, DLR Blog: 1. Arbeitstag im Orbit http://www.dlr.de/dlr/presse/desktopdefault.aspx/\ntabid-10308/471_read-4318/year-all/#gallery/6725\n\n45. TET-1, DLR Blog: Deutscher Kleinsatellit TET-1 erfolgreich gestartet http://www.dlr.de/dlr/\npresse/desktopdefault.aspx/tabid-10308/471_read-4318/year-all/#gallery/6725\n\n46. http://sanaregistry.org/r/spacecraftid/spacecraftid.html\n\nReferences on FLP Satellite Platform Equipment\n\n47. Eickhoff, J. (Ed): A Combined Data and Power Management Infrastructure, Springer, Berlin,\nHeidelberg, 2013 ISBN 978-3-642-35556-1\n\n48. Eickhoff, Jens; Stratton, Sam; Butz, Pius; Cook, Barry; Walker, Paul; Uryu, Alexander;\nLengowski, Michael; R\u00f6ser, Hans-Peter: Flight Model of the FLP Satellite OBC and\nReconfiguration Unit Data Systems in Aerospace, DASIA 2012 Conference, 14. - 16. May,\n2012, Dubrovnik, Croatia\n\n49. Leon3FT Processor: http://www.aeroflex.com/ams/pagesproduct/prods-hirel-leon.cfm\n50. Stratton, Sam: Fault Tolerant LEON Processing, Devices and Circuit Cards MAPLD 2009 -\n\nGreenbelt, Maryland, August 31 - September 3, 2009\n\n668 References\n\nhttp://www.dlr.de/dlr/presse/desktopdefault.aspx/tabid-10308/471_read-4318/year-all/#gallery/6725\nhttp://www.dlr.de/dlr/presse/desktopdefault.aspx/tabid-10308/471_read-4318/year-all/#gallery/6725\nhttp://www.dlr.de/dlr/presse/desktopdefault.aspx/tabid-10308/471_read-4318/year-all/#gallery/6725\nhttp://www.dlr.de/dlr/presse/desktopdefault.aspx/tabid-10308/471_read-4318/year-all/#gallery/6725\nhttp://sanaregistry.org/r/spacecraftid/spacecraftid.html\nhttp://www.aeroflex.com/ams/pagesproduct/prods-hirel-leon.cfm\n\n\n51. Aeroflex Gaisler Leon3FT IP Core: http://www.gaisler.com/cms/index.php?option=com_\ncontent&task=view&id=13&Itemid=53\n\n52. Aeroflex Gaisler AB: CCSDS TM/TC and SpaceWire FPGA Data Sheet and User's Manual\nGR-TMTC-0004 July 2012, Version 1.2\n\n53. Cobham Gaisler AB: UT699E LEON 3FT/SPARC\u2122 V8 Microprocessor Functional\nManual, Version 1.0.0, November 2014\n\n54. GRLIB IP Core User\u2019s Manual, Aeroflex Gaisler http://www.aeroflex.com/gaisler\n55. Spacecraft Data Handling IP Core User\u2019s Manual, Aeroflex Gaisler http://www.aeroflex.\n\ncom/gaisler\n56. PCDU Microcontroller data sheet: RENESAS Electronics, Renesas 32-Bit RISC\n\nMicrocomputer, SuperH RISC engine Family/SH7040 Series, hardware manual, Issue 6.0,\n2003\n\n57. VECTRONIC Aerospace GmbH: Interface Control Document & Operation Manual for\nPower Control and Distribution Unit Type VPCDU-1, Project IRS-FLP\nTD-VAS-PCDU-FLP-ICD18.doc, Date 28.04.2014\n\n58. Battery data sheet: A123 Systems, Inc.: Nanophosphate High Power Lithium Ion Cell\nANR26650M1B, MD100113-01, 2011\n\n59. Solar cells data sheet: AZUR SPACE Solar Power GmbH, GAGET1-ID/160-8040 Data\nSheet, 2005\n\n60. Solar array test string data sheet: RWE Space Solar Power GmbH, RWE3G-ID2*/150-8040\nData Sheet, 2005\n\n61. Micro Advanced Stellar Compass TM/TC Interface Control Document\nASC-DTU-ICD-3004, Issue 3.1, 31.01.2011\n\n62. Micro Advanced Stellar Compass, User's Manual, ASC-DTU-MA-3001, Issue 2.0,\n07.06.2006\n\n63. Montenbruck, O.; Markgraf, M.: User's Manual for the Phoenix GPS Receiver, Tech.\nRep. GTN-MAN-0120, Rev. 1.9, German Space Operations Center, 14. July .2008\n\n64. FLP-TN-518-002-IRS FOG-Electrical_ICD Issue Draft, 26.10.2011 University of Stuttgart,\nStuttgart, Institute of Space Systems, Germany\n\n65. FLP-ICD-512-002-IRS Reaction_Wheel_Assembly-Electrical_ICD Issue 1, 19.07.2012\nUniversity of Stuttgart, Stuttgart, Institute of Space Systems, Germany\n\n66. FLP-ICD-513-001-IRS MGT_Electronic_ICD Issue 3, 03.01.2013 University of Stuttgart,\nStuttgart, Institute of Space Systems, Germany\n\n67. FLP-ICD-514-001-IRS Magnetometer Electrical ICD Issue Draft, 11.09.2011 University of\nStuttgart, Stuttgart, Institute of Space Systems, Germany\n\n68. Reaction Wheel Assembly RSI 01-5/28 Technical Description Rockwell Collins, 2007.\n69. http://www.astrofein.com/astro-und-feinwerktechnik-adlershof/produkte/raumfahrt-eng/10/\n\nrw-90/\n70. Taubenreuther, P.: HF-System Electrical Interfaces, FLP-STT-TRX-DWG-102, Issue 1A,\n\n2012 STT-SystemTechnik GmbH, Gneisenaustr. 15, D-80992 Munich, Germany\n71. Serbe, P; Taubenreuther, P.: TMTC-System Technical Description - Housekeeping Interface\n\nFLP-STT-TRX-RPT-101, Iss. 1C, 04.11.2014 STT-SystemTechnik GmbH, Gneisenaustr.\n15, D-80992 Munich, Germany\n\n72. SpaceQuest: S-Band Turnstile Antenna Datasheet, SpaceQuest, Ltd., Fairfax, VA, USA,\n2009\n\n73. NASA radiation PD-ED-1258: Space radiation Effects on Electronic Components in\nLow-Earth Orbit, April 1996, NASA - Johnson Space Center (JSC)\n\n74. Dual-Core LEON3-FT SPARC V8 Processor GR712RC User\u2019s Manual, April 2015, Issue\n2.5\n\n75. LEON Board Hardware Interface Document iOBC-D1.3-01-HWICD01 SSBV Space &\nGround Systems\n\nReferences 669\n\nhttp://www.gaisler.com/cms/index.php?option=com_content&task=view&id=13&Itemid=53\nhttp://www.gaisler.com/cms/index.php?option=com_content&task=view&id=13&Itemid=53\nhttp://www.aeroflex.com/gaisler\nhttp://www.aeroflex.com/gaisler\nhttp://www.aeroflex.com/gaisler\nhttp://www.astrofein.com/astro-und-feinwerktechnik-adlershof/produkte/raumfahrt-eng/10/rw-90/\nhttp://www.astrofein.com/astro-und-feinwerktechnik-adlershof/produkte/raumfahrt-eng/10/rw-90/\n\n\nReferences on FLP Subsystems\n\n76. FLP-TP-532-003-IRS Battery Life Cycle Test Procedure, University of Stuttgart, Stuttgart,\nInstitute of Space Systems, Germany\n\n77. Dittmar, Marek; Bucher, Nico: FLP-ICD-566-001-IRS FLP Space Link ICD Issue 1.6,\n04.12.2014, University of Stuttgart, Stuttgart, Institute of Space Systems, Germany\n\nReferences on Test Plans, Reports and Performance Data\n\n78. Wiedemann, Klaus: RF Compatibility Test Plan and Procedure FLP-DLR-TP-1001, Iss.\n1 Rev. 0 DLR Raumflugbetrieb und Astronautentraining, Weilheim, 01.12.2014\n\n79. Wiedemann, Klaus: RF Compatibility Test Report FLP-DLR-TR-1001, Iss. 0 Rev. 1 DLR\nRaumflugbetrieb und Astronautentraining, Weilheim, 15.12.2014\n\n80. Taubenreuther, P.: TMTC-System- Acceptance Test Report, FLP-STT-TRX-TR-101, Issue\n1C, 05.12.2014 STT-SystemTechnik GmbH, Gneisenaustr. 15, D-80992 Munich, Germany\n\nReferences on FLP Software\n\n81. OAR Corporation: http://www.rtems.com\n82. RTEMS C User\u2019s Guide http://docs.rtems.org/doc-current/share/rtems/pdf/c_user.pdf\n83. Aeroflex Gaisler RTEMS: http://www.aeroflex.com/gaisler\n84. FLP On-Board Software Architectural Design Documentation FLP-DDD-1221204-001-IRS,\n\nIssue 4, 2014\n\nReferences on Mission Control Systems and Infrastructure\n\n85. http://www.egos.esa.int/portal/egos-web/products/MCS/SCOS2000/\n86. EGOS-MCS-S2K-ICD-0001 SCOS-2000 Database Import ICD Iss. 6.2, Aug. 2006\n87. EGOS-MCS-S2K-SRD-0002 SCOS-2000 Commanding Software Requirements Document\n\nIssue 2.6\n88. EGOS-MCS-S2K-SUM-2210 SCOS-2000 Telemetry Desktop Operator User Manual\n89. EGOS-MCS-S2K-SUM-2230 SCOS-2000 Variable Packet Display Operator User Manual\n90. EGOS-MCS-S2K-SUM-2360 SCOS-2000 Telecommand History Display Operator User\n\nManual Issue 1.8\n91. EGOS-MCS-S2K-SUM-2220 SCOS-2000 Out Of Limits Display Operator User Manual\n92. CCS-TER-MAN-001 CCS User Manual Issue 1.24 Terma B.V., Leiden, The Netherlands\n93. CCS-TER-DD-001 CCS5 Design Description Issue 2.1 Terma B.V., Leiden, The\n\nNetherlands\n94. European Ground Systems Common Core http://www.egscc.esa.int/system.html http://www.\n\negscc.esa.int/architecture.html#conceptual\n95. Database System Software User Manual \u2013 EEMCS EEMCS-LOG-SUM-0001 Issue 6.2\n\nGMV, 08/09/06\n96. J. Houser SCOS-2000 Database Editing System User\u2019s Manual Issue 2.1\n97. EGOS-NIS-NCTR-ICD-0002 NIS/NCTRS Volume 2- Detailed interface Definition: MCS\n98. CCSDS 910.4-B-2 Cross Support Reference Model\u2014Part 1: Space Link Extension Services\n\nIssue 2, October 2005\n\n670 References\n\nhttp://www.rtems.com\nhttp://docs.rtems.org/doc-current/share/rtems/pdf/c_user.pdf\nhttp://www.aeroflex.com/gaisler\nhttp://www.egos.esa.int/portal/egos-web/products/MCS/SCOS2000/\nhttp://www.egscc.esa.int/system.html\nhttp://www.egscc.esa.int/architecture.html#conceptual\nhttp://www.egscc.esa.int/architecture.html#conceptual\n\n\n99. CCSDS 911.1-B-3 Space Link Extension\u2014Return All Frames Service Specification Issue 3,\nJanuary 2010\n\n100. CCSDS 912.1-B-3 Space Link Extension\u2014Forward CLTU Service Specification Issue 3,\nJuly 2010\n\n101. CCSDS 913.1-B-1 Space Link Extension \u2014Internet Protocol for Transfer Services\n102. Satellite Services BV: Design Description & Operation and Maintenance Manual\n\nSU-SSBV-TTCIMBU-MA-0001\n103. Satellite Services BV: Command and Data ICD SU-SSBV-TTCIMBU-ICD-0002\n104. Satellite Services BV: SpacelinkNGT TM/TC Baseband Processor Operation and\n\nMaintenance Manual SLNGT-SAT-MA-0308\n105. www.work-microwave.de\n106. http://en.wikipedia.org/wiki/Tcl\n107. ECSS-E-ST-70-32C Space Engineering \u2013 Test and operations procedure language\n108. Bucher, N: FLP-TN-630-003-IRS Flying Laptop Space Link Extension Installation Report,\n\nIssue 1.2, April 2014\n109. Systems Toolkit http://www.agi.com/products/\n110. http://en.wikipedia.org/wiki/Two-line_elements\n111. http://de.wikipedia.org/wiki/Satellitenbahnelement\n112. http://www.satobs.org/tletools.html\n113. CCSDS 502.0-B-2 Orbit Data Messages Recommended Standard Blue Book November\n\n2009\n114. DLR-GSO-GDS-ICD-001 GSOC/GDS Multi-Mission Support Interface Control Document,\n\nIss. 0.6, March 2014\n115. LSE Space GmbH: Scheduling Software Interface ICD, Issue 1, November 2008\n116. Gully, S.: GDS Scheduling Interface Description Document DLR/GSOC, November 2010\n117. http://www.zds-fr.com/upload/docs/030004-ftp62-ed7-crt.pdf\n118. FLP-TN-630-002-IRS MOIS Operation and Administration Guide University of Stuttgart,\n\nStuttgart, Institute of Space Systems, Germany\n119. MOIS Scheduler ICD GEN-MOIS-M6-ICD-001 Issue 1.1, October 2013 RHEA System S.\n\nA., Wavre, Belgium\n120. Scheduler-User Manual ESO-MOIS-UM-RHEA-0002 Issue 1.0, July 2008 RHEA System S.\n\nA., Wavre, Belgium\n121. FLP-SP-245-001-IRS FLP Procedure Guidelines Iss. 1.6, 13.05.2015 University of Stuttgart,\n\nStuttgart, Institute of Space Systems, Germany\n122. FLP-TN-630-003-IRS Technical Note on FLP Mission Planning Issue 1.7, May 2015\n\nIRS Thesis Documents\n\n123. Uryu, A. N.: Development of a Multifunctional Power Supply System and an Adapted\nQualification Approach for a University Small Satellite, PhD Thesis, University of Stuttgart,\nStuttgart, Institute of Space Systems, Germany, Dr. Hut, M\u00fcnchen, 2013, ISBN\n978-3-8439-0852-8\n\n124. Grillmayer, Georg: An FPGA based Attitude Control System for the Micro-Satellite Flying\nLaptop. PhD thesis, Institute of Space Systems. Dr. Hut, M\u00fcnchen, 2009, ISBN\n978-3-86853-654-6\n\n125. Zeile, Oliver: Entwicklung einer Simulationsumgebung und robuster Algorithmen f\u00fcr das\nLage- und Orbitkontrollsystem der Kleinsatelliten Flying Laptop und PERSEUS. PhD thesis,\nInstitute of Space Systems. Dr. Hut, M\u00fcnchen, 2012, ISBN 978-3-8439-0316-5\n\n126. Franz, Julian: Evaluation verschiedener operationeller Prozeduren zur Optimierung der\nBodenkontaktzeit f\u00fcr den Kleinsatelliten \u201cFlying Laptop\u201d Bachelor Thesis, IRS, Uni\nStuttgart, IRS-13-S06, 2013\n\nReferences 671\n\nhttp://www.work-microwave.de\nhttp://en.wikipedia.org/wiki/Tcl\nhttp://www.agi.com/products/\nhttp://en.wikipedia.org/wiki/Two-line_elements\nhttp://de.wikipedia.org/wiki/Satellitenbahnelement\nhttp://www.satobs.org/tletools.html\nhttp://www.zds-fr.com/upload/docs/030004-ftp62-ed7-crt.pdf\n\n\n127. B\u00e4tz, Bastian: Development of scheduling design and equipment handling algorithms for the\nsoftware of the small satellite Flying Laptop Diploma Thesis, IRS, Uni Stuttgart,\nIRS-11-S21, July 2011\n\n128. Bucher, Nico: Integration of attitude control functions into the on-board software for the\nsmall satellite Flying Laptop Diploma Thesis, IRS, Uni Stuttgart, IRS-12-S50, 2012\n\n129. Steinmetz, Fabian: Realisierung des Thermalkontrollsystems f\u00fcr einen universit\u00e4ren\nKleinsatelliten PhD Thesis, IRS, Uni Stuttgart, 2014\n\n130. Keil, Sebastian: Design of a control algorithm for thermal control and calibration of the\ntemperature sensors for the small satellite Flying Laptop Diploma Thesis, IRS, Uni Stuttgart,\nIRS-14-S057, 2014\n\n131. Lengowski, Michael: Entwicklung mechanisch/thermischer Architekturen und innovativer\nStrukturelemente im Rahmen zweier Satellitenmissionen des Stuttgarter\nKleinsatellitenprogramms, Dr. Hut, M\u00fcnchen, 2014, ISBN 978-3-8439-1427-7\n\n132. Witt, Rouven: Failure Detection, Isolation and Recovery Capabilities for the university Small\nSatellite Flying Laptop, PhD thesis, Institute of Space Systems, 2015\n\n33. Bucher, Nico: Funktionaler Verifikationsansatz f\u00fcr Onboard Software Komponenten eines\nKleinsatelliten PhD Thesis, IRS, Uni Stuttgart, under Development, 2016\n\n134. B\u00e4tz, Bastian: Entwicklung, Implementierung und Verifikation einer konfigurier- und\nportierbaren Steuerungssoftware f\u00fcr teilautonome Echtzeitsysteme PhD Thesis, IRS, Uni\nStuttgart, under Development, 2016\n\n135. Hagel, Philipp: Modular Software Architecture for FPGA based Payload Module Computers\nPhD Thesis, IRS, Uni Stuttgart, under Development, 2016\n\n136. Salzburger, Stefan: Design, Implementation and Tests of ACS Failure Detection Methods for\nthe Small Satellite \u201cFlying Laptop\u201d Diploma Thesis, IRS Uni Stuttgart, under Development,\n2015\n\nReferences on Launch Vehicles\n\n137. Ramakrishnan. S.: PSLV - Auxiliary Satellite - User\u2019s Manual Issue 1 Indian Space Research\nOrganisation, 1999\n\n138. Perez, Edouard: Soyuz User\u2019s Manual Issue 2 Ariane Space, March 2012 http://www.\narianespace.com/launch-services-soyuz/Soyuz-Users-Manual-March-2012.pdf\n\nReferences on S/C Engineering\n\n139. Eickhoff, Jens: Simulating Spacecraft Systems, Springer, 2009, ISBN: 978-3-642-01275-4\n140. Eickhoff, Jens: Onboard Computers, Onboard Software and Satellite Operations - An\n\nIntroduction, Springer, 2011, ISBN 978-3-642-25169-6\n141. Wertz, J. R.; Larson, W. J.: Space Mission Analysis and Design, 3rd ed., Microcosm Press,\n\n1999, ISBN 978-1881883104\n142. Ley: Handbuch der Raumfahrttechnik Hanser Verlag, 2008\n143. Gilmore, David G.: Spacecraft Thermal Control Handbook, Volume 1 - Fundamental\n\nTechnologies (2nd Edition), American Institute of Aeronautics and Astronautics, Reston,\nVA, 2007, ISBN 978-1-884989-11-7\n\n672 References\n\nhttp://www.arianespace.com/launch-services-soyuz/Soyuz-Users-Manual-March-2012.pdf\nhttp://www.arianespace.com/launch-services-soyuz/Soyuz-Users-Manual-March-2012.pdf\n\n\nReferenced on other Missions and Studies\n\n144. Assessment Study for Space Based Space Surveillance Demonstration Mission (Phase A)\nESA Contract No.: 4000106392/12/NL/AF Assessment of FLP as Platform for the SBSS\nDemonstrator AirbusDS-FLP-SBSS, Iss. 1, 12.12.2014\n\n145. Reichel, R.: Auslegung von `? Fly-by-Wire'' Systemen. Lecture Notes, ILS University of\nStuttgart, 2012\n\nReferenced Papers and Conference Contributions\n\n146. Eickhoff, Jens; Herpel, Hans-J\u00fcrgen; Willich, Georg; Pastena, Max; Walker, Paul: A\nConsistent Avionics Computing Platform for Spacecraft Control and Data Processing Data\nSystems in Aerospace, DASIA 2015 Conference, 14.-16. May, 2015, Barcelona\n\n147. Eickhoff, Jens; Fritz, Michael; Witt, Rouven; Bucher, Nico; R\u00f6ser, Hans-Peter: Test Program\nof the \u201cCombined Data and Power Management Infrastructure\u201d Data Systems in Aerospace,\nDASIA 2013 Conference, 14.-16. May, 2013, Porto\n\n148. Herpel, H.-J.; Willich, G.; Vogel, T.: OMAC4S - Open Modular Avionics for Space\nApplications, DASIA 2013 Conference, 14 - 16 May, 2013, Porto, Portugal\n\n149. http://www.fokus.fraunhofer.de/go/obcsa\n150. Eickhoff, Jens; Stratton, Sam; Butz, Pius; Cook, Barry; Walker, Paul; Uryu, Alexander;\n\nLengowski, Michael; R\u00f6ser, Hans-Peter: Flight Model of the FLP Satellite OBC and\nReconfiguration Unit Data Systems in Aerospace, DASIA 2012 Conference, 14. - 16. May,\n2012, Dubrovnik, Croatia\n\n151. Eickhoff, Jens; Cook, Barry; Walker, Paul; Habinc, Sandi A.; Witt, Rouven; R\u00f6ser,\nHans-Peter: Common board design for the OBC I/O unit and the OBC CCSDS unit of the\nStuttgart University Satellite `? Flying Laptop'' Data Systems in Aerospace, DASIA 2011\nConference, 17 - 20 May, 2011, San Anton, Malta\n\n152. Eickhoff, Jens; Stevenson, Dave; Habinc, Sandi; R\u00f6ser Hans-Peter: University Satellite\nfeaturing latest OBC Core & Payload Data Processing Technologies, Data Systems in\nAerospace, DASIA 2010 Conference, Budapest, Hungary, June, 2010\n\n153. Witt, Rouven.; Kennedy, A.; Baetz, Bastian; Mohr, Ulrich; Bucher, Nico; Eickhoff, Jens:\nImplementation of Fault Management Capabilities for the Flying Laptop Small Satellite\nProject through a Failure-Aware System Model AIAA Infotech@Aerospace 2013\nConference, August 2013, Boston, USA\n\n154. Pollard, Mark: The Design, Build, Test and In-orbit Performance of Low cost Xenon Warm\nGas Propulsion Systems, Space Propulsion Conference, May 03 \u2013 06, 2010, San Sebastian,\nSpain\n\n155. Heinen, W.; Blake, R.; Fortuno, J.; Camino, O.: Smart-1 Ground Operations Automation\nSpaceOps, Rome, Italy, 2006\n\n156. Cook, Barry M.; Walker, C. Paul H.: SpaceWire Network Topologies, 1st International\nSpaceWire Conference September 17-19, 200, Dundee, UK\n\n157. Klemich, K.; Lengowski, M.; R\u00f6ser, H.-P.; Speichermann, J.: A robust and cost-effective\napproach for a battery system based on off-the-shelf Lithiumironphosphate cells for the small\nsatellite Flying Laptop, 9th IAA Symposium on Small Satellites for Earth Observation,\nBerlin, Germany, April 09-12, 2013\n\nReferences 673\n\nhttp://www.fokus.fraunhofer.de/go/obcsa\n\n\n158. Gessner, R.: K\u00f6sters, B.; Hefler, A.; Eilenbeger, R.; Hartmann, J.; and Schmidt, M. (Eds.):\nHierarchical FDIR Concepts in S/C Systems, SpaceOps Montreal, Quebec, Canada,\nMay 17 \u2013 21, 2004\n\n159. Lange, M.; Holzwarth, M.; Schulte, G.; Peukert, M.; Feindt, O.: Feasibility Study and\nPerformance Assessment of a Myriade Propulsion Module with an ADN based Green\nMonopropellant 46th AIAA/ASME/SAE/ASEE Joint Propulsion Conference & Exhibit,\n25 - 28 July 2010, Nashville, TN, USA\n\n674 References\n\n\n\nIndex\n\nA\nAbbreviated Function Test, 411\nAbsolute time tag, 426\nAcquisition of Signal, 447\nAcquisition schedule, 453\nACS_Controller, 209\nACS_Subsystem, 26\nAD-Mode, 365, 415\nAD-service, 437\nAlignment recheck, 411\nAnalog/digital converter, 143, 146, 199, 374,\n\n397\nAnalog RIU, 143\nAntenna station, 406, 415, 453\nAntenna system, 424\nAPID, 51, 55\nApplication Programming Interface, 74\nASIC, 106\nAssembly, 76\nAutomated File Distribution, 457, 460\nAutomatic Identification System, 7\nAutonomous reconfiguration, 309\nAuxiliary payload, 406\n\nB\nBalancing board, 128\nBaseband uplink coding, 429\nBattery, 10, 127, 257\nBattery cells, 10\nbattery charge control board, 129, 138, 141\nBattery Charge Regulator, 11, 135\nBattery damage by undertemperature, 335\nBattery damage by undervoltage, 336\nBattery heater, 137, 335\nBattery monitoring circuitry, 138\nBattery power, 141\n\nBattery status, 308\nBattery string, 10, 127\nBattery string balancing, 127\nBattery string component, 265\nBattery string voltage monitoring, 128\nBattery survival heater, 127\nBattery temperature, 133, 257\nBattery thermistor, 130\nBattery trickle charging, 409\nBD-Mode, 415\nBD-service, 437\nBi-stable relay, 127, 137\nBleed resistor, 127\nBlind acquisition, 177\nBoot-counter, 110\nBoot loader, 110, 323\nBoot-up sequence, 141\nBypass Interface, 429\n\nC\nCalibration, 495\nCalibration curve, 254\nCalibration function, 254\nCapacity resource, 472\nCarrier lock, 69, 364\nCCSDS_Assembly, 182\nCCSDS-Board, 4, 12, 51, 69, 105, 108, 175,\n\n179, 180, 297, 361, 365\nCCSDS Frame, 278\nCCSDS_Handler, 178, 179\nCCSDS standard, 7, 51, 69\nChannel Acquisition Data Unit, 69, 423, 428,\n\n449\nCharge-Switch, 338\nCircular polarization, 175\nClock Distribution Module, 218\n\n\u00a9 Springer International Publishing Switzerland 2016\nJ. Eickhoff (ed.), The FLP Microsatellite Platform,\nSpringer Aerospace Technology, DOI 10.1007/978-3-319-23503-5\n\n675\n\n\n\nCoarse Nadir Pointing Mode, 18, 418\nCobham Gaisler GR712, 288\nCold redundancy, 174, 296, 297, 308, 377\nCombined-Controller, 4, 104, 106, 108, 305,\n\n307, 318, 329, 401\nCombined Data and Power Management\n\nInfrastructure, 4, 12, 59, 104, 135, 297, 304,\n307\n\nCommand Link Control Word, 105, 175, 365,\n415, 448\n\nCommand Link Transmission Unit, 69, 319,\n422, 423, 425, 453\n\nCommand Pulse Decoding Unit, 106, 306, 319\nCommand sequence, 495\nCommand verification, 93\nCommissioning, 417\nCommissioning Phase, 377, 404, 417, 422,\n\n447, 464\nCommon Command, 320\nComponent information, 267\nComponent status, 257\nContingency Procedure, 484\nControl algorithm, 89\nControl center, 459\nControl loop, 307\nControl sequence, 101\nController object, 88, 294\nConversion, 261\nConvolutional decoding, 429\nCore DHS, 104\nCore Module, 248\nCortex processor, 453\nCPDU, 319\nCurrent State Table, 139\nCycle rate, 149, 178, 225\n\nD\nData Downlink System, 33, 175, 278, 279, 411\nData Link Layer, 179\nDatapool Access ID, 503, 504\nDC/DC-converter, 11\nDebug Support Unit, 659\nDecalibration, 495\nDecoding, 429\nDefault state, 263\nDe-Orbiting-Mechanism, 4, 22, 144\nDeployment autosequence, 145\nDeployment Timer, 112, 145\nDepth of discharge, 308\nderandomization, 436\nDetumble Mode, 18, 414\nDeutsches Zentrum f\u00fcr Luft- und Raumfahrt,\n\n415, 422, 452\n\nDevice boot counter, 358\nDevice Commanding Service, 403\nDevice failure counter, 356\nDevice handler, 76, 81, 293\nDevice mode, 82\nDevice Power Component, 155\nDigital RIU, 143\nDOM deployment, 420\nDown-Converter, 424, 432\nDownlink demodulation, 429\nDual-core, 288\nDual redundancy, 197\n\nE\nEDAC, 305, 328\nEIRP, 442\nElectric propulsion subsystem, 19\nEstimated orbit data, 406\nEuropean Code of Conduct on Space Debris\n\nMitigation, 4, 22\nEvent, 94\nEvent-Action Service, 34, 404\nEvent counter, 311\nEvent ID, 501\nEvent report, 261\nEvent severity, 403\nExtended Navigation Solution, 216\nExternal power connector, 412\n\nF\nFailure Detection, Isolation and Recovery, 28,\n\n74, 106, 257, 292\nFailure Event FIFO, 301\nFailure Event Message, 354\nFailure handling, 261, 265\nFatal Error, 111\nFatal-Error-Counter, 111\nFatal Error Report, 102, 311, 329\nFiberoptic gyro, 15, 418\nFixed packet, 495, 499\nFlatSat, 274\nFlatSat setup, 428\nFlight Dynamics, 464\nFlight Dynamics Event, 476\nFlight dynamics infrastructure, 446, 473\nFlight Procedure, 28, 423, 426, 472, 481, 483,\n\n499\nFLP Generation 1, 3, 12, 105, 122\nFLP Generation 2, 3, 12, 20, 33, 64, 71, 203,\n\n204, 206, 272, 282, 288, 309, 329, 333,\n384, 401, 411, 412, 420\n\nFPGA, 105, 106\nFrame, 453\n\n676 Index\n\n\n\nFrame Acceptance Report, 363\nFueling, 412\nFuse, 139, 145, 308, 333, 635\n\nG\nGantt chart, 471\nGeneral Procedure, 483\nGerman Space Agency, 415, 452\nGerman Space Operations Center, 422, 452\nGlobal Multiplexer Access Point ID, 51\nGlobal Virtual Channel ID, 51\nGPS, 15\nGPS receiver, 418\nGPS time, 63, 70\nGround Control Center, 422, 428\nGround monitoring, 496\nGround station, 415, 459\n\nH\nHeater circuit, 257\nHeater control, 267\nHeater request, 264, 266\nHigh Power Amplifier, 441\nHigh Priority Command, 12, 51, 59, 69, 105,\n\n108, 140, 144, 297, 305\u2013308, 318\u2013320, 404\nHigh Priority TM, 70\nHistory log function, 145\nHot redundancy, 174, 182, 296, 297, 308, 309,\n\n361\nHousekeeping data, 105\nHousekeeping telemetry, 107\nHPC command sequence, 320\nHPC command structure, 320\nHPC frame header, 320\nHydrazine propulsion subsystem, 20\n\nI\nI/O-Board, 4, 105, 107, 108, 297, 353\nI/O-Board failure counter, 356\nI/O-Board synchronization, 326\nI/O Line Driver, 74\nIdle Frame, 69\nIdle Mode, 18, 19, 419\nImage forwarding, 214\nInertial Pointing Mode, 18, 19\nInstrument Control Unit, 273\nIntegrated Modem and Baseband Unit, 429\nIntermediate frequency, 429, 441\nInternal temperature sensor, 254\nInter-process communication, 74\n\nK\nKernel functions, 74\n\nL\nLatching Current Limiter, 122, 137, 139, 319\nLaunch and Early Orbit Phase, 30, 404, 422,\n\n463, 464\nLaunch Mode, 18\nLaunch Provider, 464\nLauncher separation time, 413\nLEON3FT, 4, 110, 288\nLEOP-Completion Flag, 411, 416\nLHCP, 429, 442\nLimit checking, 64\nLimit temperature, 266\nLithium iron phosphate cells, 127\nLocal Time of Descending Node, 4\nLoss of Signal, 447\n\nM\nMagnetometer, 15\nMagnetotorquer, 16\nMAP-ID, 69\nMass Memory, 305\nMass Memory and Formatting Unit, 272, 282,\n\n286\nMass Memory Unit, 13, 272, 274, 275, 281\nMaster Channel, 51\nMaster Channel ID, 51\nMaximum power-bus voltage, 123\nMaximum power point tracking, 135\nMETEOR, 424, 443\nMIB entry format, 496\nMicrocontroller, 106\nMiniOps Mode, 309, 414\nMission Control System, 459, 469, 494\nMission Information Base, 425, 473, 480, 494\nMission Information Database, 482\nMission planning, 446\nMission Planning System, 471, 483, 484\nMission product, 272\nMission timeline, 63, 274\nMode Change Procedure, 483\nMode change table, 483\nMode Control Service, 404\nModulation, 429\nModule, 263\nModule heater, 266\nModule temperature, 266\nMOIS, 423, 427, 481\n\nIndex 677\n\n\n\nMOIS Executor, 427, 472\nMOIS Flowcharter, 468, 473\nMOIS procedure, 483\nMOIS Scheduler, 471, 473, 478\nMOIS sequence, 483\nMOIS Supervisor, 472\nMOIS Validator, 469, 471, 473\nMOIS Writer, 427, 473\nMonitoring, 261\nMonitoring report, 261, 262\nMulti-spectral Imaging Camera System, 5\nMultiplexer Access Point, 51\nMultiplexer Access Point Identifier, 319\n\nN\nNadir Pointing Mode, 18, 19\nNCTRS, 428\nNCTRS protocol, 459\nNetwork Integration System, 457\nNoise level, 443\nNominal BOL capacity, 127\nNon-coherent, 175\nNone Mode, 411\nNon-operational limit, 247\nNon-volatile memory, 105\nNORAD, 416, 447, 464\n\nO\nOBC, 122\nOBC on-board time, 70\nOBC temperature, 141\nObject-ID, 90\nObject-oriented, 293\nOn-board Control Procedure, 34, 66, 101, 426\nOn-board monitoring, 496\nOn-Board Monitoring Service, 404\nOn-board time, 62, 111\nOpen mode concept, 34\nOperating system, 62, 74\nOperational limit, 247\nOPM, 447\nOptical Infrared Link System, 7\nOrbit data, 413\nOrbit Parameter Message, 447\nOrbit prediction, 446\n3-out-of-4 redundancy, 8, 15, 86, 224, 297,\n\n375, 379\nOvercharge, 138\nOvervoltage protection, 145\n\nP\nPacket category, 500\nPacket type, 499\n\nPacket Utilization Standard, 7, 34, 51, 74, 78,\n494\n\nPanoramic Camera, 7\nParameter ID, 503\nPayload control, 274\nPayload Control Service, 404\nPayload data preprocessing, 278\nPayload Data Processing Unit, 286\nPayload FDIR, 281\nPayload Module, 248\nPayload Module Controller, 13, 273\nPayload On-Board Computer, 7, 275\nPayload sub-net, 288\nPCB internal heating, 140\nPCDU Common Command, 140, 307\nPCDU controller, 145, 309\nPCDU controller redundancy, 309\nPCDU fuse, 137\nPCDU Idle Mode, 114, 143\nPCDU internal heater, 141\nPCDU main switch, 135, 333, 339\nPCDU MiniOps Mode, 114, 143\nPCDU switch, 137\nPhysical channel, 51\nPLOC, 275\nPolar Satellite Launch Vehicle, 406\nPolling Sequence Table, 98, 311\nPosition propagation, 446\nPower-Board, 104, 107, 122\nPower-bus, 106, 134, 135, 306, 339\nPower Control and Distribution Unit, 4, 10, 11,\n\n106, 108, 122, 134\nPower switch, 141, 635\nPreemption control, 96\nProcedure, 469\nProcessor-Board, 4, 104, 107, 140, 297, 308,\n\n309, 319\nProgress Event, 299\nPROM, 110, 323\nPROM sleep-state, 110\nPROM write-access, 110\nPropulsion subsystem, 19\nPSS_Controller, 146\nPSS_Subsystem, 26\nPulse Per Second, 216\nPulse Width Modulation, 206\n\nQ\nQuaternion, 214\n\nR\nRadiation hardness, 277\nRadiation pattern, 175\n\n678 Index\n\n\n\nRadiation tolerance, 105\nRandom error, 356\nRanging, 416\nRate Monotonic Scheduling, 96\nReaction wheel, 16, 379, 418\nReal Time Operating System, 74\nReceiver lock, 69\nReconfiguration, 294, 297, 305, 307, 309\nReconfiguration Unit, 106, 305\u2013307\nRedundancy, 297\nReed-Solomon decoding, 429\nReed sensor, 154\nRelative time tag, 426\nRemote Interface Unit, 106, 108, 143, 144\nReport ID, 501\nReporting, 261, 265\nRequest voting, 267\nRF chain, 428\nRF compatibility test, 175\nRF-SCOE, 415, 422, 453\nRHCP, 429, 441\nRMAP-reply, 355\nRMAP-stack, 74\nRS422, 105, 140, 319\nRTEMS, 74\nRW run-in, 411\n\nS\nSA-Deployed Flag, 411, 414\nSafe Mode, 18, 141, 306, 309, 414\nSatellite Control and Operation System, 422\nSatellite modes, 17\nSatellite module, 254\nSatellite platform, 7\nSatellite under test, 428\nS-band, 174\nS-band transmitter, 174\nScheduling Office, 462, 463\nScheduling request, 462\nSCOS-2000, 422, 453, 459, 468, 494\nSCOS-2000 Packet ID, 499\nSecondary payload, 406\nSegment, 453\nSelected Channel Input, 363\nSensor calibration, 411\nSensor data, 143\nSensor fusion, 294, 298\nSensor redundancy, 262\nSensor sanity check, 294, 298\nSensor signal fusion, 367\nSensor voting, 370\nSeparation adapter, 407\nSeparation-Completion Flag, 328, 411\nSeparation detection, 144, 409, 410\n\nSeparation detection circuit, 414\nSequence of Events, 463\nService handler, 78\nService Module, 248\nService object, 79, 93\nSH7045 microcontroller, 139\nShunt, 135\nShunt diode, 124\nSimulated spacecraft, 428\nSingle Board Computer, 105\nSingle-Event Upset, 305\nSingle redundancy, 197\nSkin connector, 105\nSkin connector panel, 412\nSLE, 452, 457\nSLE Switchboard, 457, 458\nSLE unit, 428\nSoC calculation, 138, 151\nSoC calibration, 411\nSoC calibration function, 132\nSoC criterion, 132\nSoC estimation, 128, 131\u2013133\nSoC estimation algorithm, 417\nSoC value, 134\nSoftware watchdog, 321, 328\nSolar array deployment, 124\nSolar array deployment detector, 126\nSolar array drive, 122\nSolar array hinge mechanism, 126\nSolar Array Module, 248\nSolar cell, 10, 123\nSolar cell string, 10, 124\nSolar panel, 10, 11, 123, 135, 308\nSolar panel deployment, 145\nSolar panel retaining mechanism, 412\nSouth Atlantic Anomaly, 372\nSoyuz Fregat, 406\nSpace Assigned Number Authority, 54\nSpace Link Extension, 452, 457\nSpacecraft ID, 51, 54\nSpacecraft Module, 266\nSpacecraft separation circuit switch, 412\nSpacecraft State Vector, 34, 84, 107, 111, 323,\n\n325, 326, 328, 329\nSpaceWire, 4, 7, 74, 105, 108\nSpaceWire avionics sub-net, 285\nSpaceWire payload sub-net, 286\nSpaceWire routing switch, 282, 283, 288\nStar tracker, 15, 418\nStatement, 482\nState-of-Charge, 11, 151\u2013153, 294, 295, 302,\n\n327, 333, 334, 393\nStatus resource, 472\nStep, 482\n\nIndex 679\n\n\n\nSTK, 446\nSubsystem, 76\nSubsystem object, 26, 76, 89\nSun sensor, 15\nSun-Synchronous Orbit, 4\nSW-DNEL, 134, 334\nSweep, 178, 448\nSwitch, 139, 145, 308, 635\nSystem object, 26, 76\nSystems Tool Kit, 445, 473\n\nT\nTarget Pointing Mode, 18, 19\nTarget state, 263, 266\nTask scheduling, 74\nTC frame, 69, 425\nTC packet, 69, 425\nTCS_Controller, 248, 256, 257, 268\nTC segment, 425\nTCS heater, 252\nTCS sensor, 248\nTCS_Subsystem, 26\nTCS Survival Mode, 268, 393\nTC uplink frequency, 442\nTC Virtual Channel, 69\nTelecommand, 105\nTelecommand Acknowledge and Execution\n\nService, 403\nTelecommand Source Packet Header, 320\nTelecommand Transfer Frame, 319\nTelemetry, 105\nTemperature, 257\nTemperature conversion function, 256\nTemperature estimation, 262\nTemperature gradient, 247, 261\nTemperature limit, 138, 252\nTemperature sensor, 140, 254, 261, 308\nTest sequence, 411\nThermal component, 262\nThermal control strategy, 268\nThermal control subsystem, 21\nThermal state, 262\nThermistor, 248\nThermistor raw value, 254\nTimeline, 292, 469\nTime-tagged command, 483, 485\nTime_Manager, 70\n\nTime managing functions, 74\nTLE, 447\nTM downlink frequency, 442\nTM frame, 69, 425\nTM packet, 425\nTM Packet Structure Definition, 499\nTM store, 111\nTM Virtual Channel, 69\nTM/TC-Frontend, 430\nTransceiver HK-TM, 186\nTransceiver temperature, 141\nTransfer Frame, 51\nTransfer Frame Header, 51\nTransfer Frame Version Number, 51\nTrickle charge, 412\nTTC_RX_Assembly, 182\nTTC_RX_Handler, 178, 179\nTTC subsystem, 20, 21, 174\nTTC_Subsystem, 26\nTTC_TX_Assembly, 182\nTTC_TX_Handler, 178\nTwo Line Elements, 447\n\nU\nUART, 105\nUmbilical link, 409\nUnder-voltage, 333\nUnder-voltage protection, 138\nUnregulated power-bus, 122\nUp-Converter, 424, 432\n\nV\nVariable packet, 495, 499\nVirtual Channel, 51, 175, 180, 319, 402, 453\nVirtual Channel ID, 51, 69\nViterbi decoding, 436\n\nW\nWarning Event, 299\nWatchdog, 305, 307, 309\n\nX\nX-Band transmission system, 411\n\nZ\nZenith loss, 443\n\n680 Index\n\n\n\tForeword\n\tPreface\n\tDonation for Life\n\tContents\n\tContributors\n\tAbbreviations\n\t1 Introduction to the Microsatellite Platform\n\tAbstract\n\t1.1 The University Small Satellite Program\n\t1.2 Satellite Orbit\n\t1.3 Mechanical Design and Launcher Interface\n\t1.4 Technology and Payloads\n\t1.5 Platform Re-usability\n\t1.6 Platform Redundancy Concept\n\t1.7 Power Subsystem and Electrical Block Diagram\n\t1.7.1 Solar Panels\n\t1.7.2 Battery\n\t1.7.3 The Power Control and Distribution Unit\n\n\t1.8 Core Data Handling Subsystem\n\t1.9 FLP Payload Control Computer\n\t1.10 Attitude Control Subsystem\n\t1.10.1 Sensors and Actuators\n\t1.10.2 Satellite System Modes\n\n\t1.11 Reaction Control Subsystem\n\t1.12 Communication Subsystem\n\t1.13 Thermal Control Subsystem\n\t1.14 Satellite Deorbiting at End of Life\n\t1.15 Possible Mechanical Platform Configurations\n\n\t2 The FLP Platform Operability\n\tAbstract\n\t2.1 Spacecraft Configuration Handling Concept\n\t2.1.1 System Mode Changes Using the OBSW Object Hierarchy\n\t2.1.2 Overview on the FLP Operational Modes\n\t2.1.3 Launch Mode\n\t2.1.4 Boot Mode\n\t2.1.5 Detumble/Safe Mode\n\t2.1.6 Idle Mode\n\t2.1.7 Coarse Nadir Pointing Mode\n\t2.1.8 Operational Modes---Ground Contact\n\t2.1.9 Operational Modes---Payload Operations\n\t2.1.10 None Mode\n\t2.1.11 Open Mode Concept\n\t2.1.12 Mode Tables and Sequences Control Service\n\t2.1.13 Spacecraft Equipment Operation Versus Modes\n\n\t2.2 Spacecraft Telecommand and Telemetry Structure\n\t2.2.1 CCSDS Protocol Addressing\n\t2.2.2 Spacecraft ID\n\t2.2.3 System Authentication\n\n\t2.3 Application Process ID Definitions (APIDs)\n\t2.4 PUS Tailoring Concept\n\t2.4.1 PUS-Service 1---Telecommand Verification\n\t2.4.2 PUS-Service 2---Device Command Distribution\n\t2.4.3 PUS-Service 3---Housekeeping and Diagnostic Reporting\n\t2.4.4 PUS-Service 4---Parameter Statistics Reporting\n\t2.4.5 PUS-Service 5---Event Reporting\n\t2.4.6 PUS-Service 6---Memory Management Service\n\t2.4.7 PUS-Service 8---Function Management Service\n\t2.4.8 PUS-Service 9---Time Management Service\n\t2.4.9 PUS-Service 11---On-board Operations Scheduling Service\n\t2.4.10 PUS-Service 12---On-board Monitoring Service\n\t2.4.11 PUS-Service 15---On-board Storage and Retrieval Service\n\t2.4.12 PUS-Service 17---Test Service\n\t2.4.13 PUS-Service 18---On-board Control Procedures Service\n\t2.4.14 PUS-Service 19---Event-Action Service\n\t2.4.15 PUS Service 200---Mode Control Service\n\t2.4.16 PUS-Service 201---Health Flag Control Service\n\t2.4.17 PUS-Service 202---Mode Tables and Sequences Control Service\n\t2.4.18 PUS-Service 203---Payload Control Service\n\n\t2.5 Spacecraft Commandability and Observability\n\t2.6 Spacecraft On-board Time Management\n\n\t3 Data Handling and Control Concept\n\tAbstract\n\t3.1 Onboard Software Architecture\n\t3.1.1 OBSW Hierarchy Concept\n\t3.1.2 Command/Reply Flow Through the OBSW\n\n\t3.2 OBSW Object Types\n\t3.2.1 Service Objects\n\t3.2.2 Device Handler Objects\n\t3.2.3 Assembly Objects\n\t3.2.4 Controller Objects\n\t3.2.5 Subsystem Objects\n\t3.2.6 Top-Level System Object\n\t3.2.7 Object Execution\n\t3.2.8 OBSW Object-IDs and PRIDs\n\n\t3.3 Observability Functions Provided by the OBSW\n\t3.3.1 Command Verification\n\t3.3.2 Cyclic HK\n\t3.3.3 Event Messages\n\n\t3.4 FLP Software Dynamic Architecture\n\t3.4.1 Process/Task Management\n\t3.4.2 Object Tasks\n\t3.4.3 Polling Sequence Table\n\t3.4.4 Dynamic Scheduling\n\t3.4.5 Modes versus Actions\n\n\t3.5 Onboard Software Death Report\n\n\t4 Core Data Handling Subsystem\n\tAbstract\n\t4.1 On-Board Data Handling Subsystem\n\t4.2 Combined Data and Power Management Infrastructure\n\t4.2.1 The PCDU as Analog RIU\n\t4.2.2 A Combined-Controller for Power and DHS FDIR\n\t4.2.3 Completeness of System Architecture\n\n\t4.3 Data Management\n\t4.3.1 PROM Data\n\t4.3.2 I/O-Board Persistent RAM\n\t4.3.3 OBC RAM and PROM Direct Access\n\n\t4.4 System Boot at Launcher Separation\n\t4.5 OBSW Controlled Functions\n\t4.6 Core DHS Subsystem Control\n\t4.6.1 I/O-Board Handler\n\t4.6.2 I/O-Board Assembly\n\t4.6.3 Core DHS Controller\n\t4.6.4 Core DHS Mode Transitions and Telemetry\n\n\n\t5 Power Supply Subsystem\n\tAbstract\n\t5.1 Subsystem Overview\n\t5.2 Solar Panels\n\t5.3 Solar Array Deployment Mechanism\n\t5.4 Battery\n\t5.4.1 General Monitoring\n\t5.4.2 Battery SoC Estimation\n\t5.4.3 Operating the Battery\n\n\t5.5 Power Control and Distribution Unit\n\t5.5.1 Power Control and Distribution Functions\n\t5.5.2 PCDU Design Overview\n\t5.5.3 PCDU Boot-up Sequence and PCDU Modes\n\t5.5.4 Specific PCDU Functions in the CDPI Architecture\n\t5.5.4.1 Analog Data Handling Concept\n\t5.5.4.2 PCDU Functions for OBC and S/C FDIR\n\n\t5.5.5 Diverse PCDU Functions\n\t5.5.5.1 Deployment Control for De-Orbiting Mechanism\n\t5.5.5.2 Launcher Separation Detection\n\t5.5.5.3 Control and Monitoring of Solar Panel Deployment\n\t5.5.5.4 History Log Function\n\t5.5.5.5 Time Synchronization Between Internal Controllers\n\t5.5.5.6 Overvoltage Protection\n\t5.5.5.7 Measurement of Test-String Characteristics\n\n\n\t5.6 Power Subsystem Control\n\t5.6.1 PCDU Device Handler\n\t5.6.2 PSS Controller\n\t5.6.2.1 PSS Controller Modes\n\t5.6.2.2 Boot Mode Procedure\n\t5.6.2.3 Controller Functions\n\t5.6.2.4 Controller Memory\n\t5.6.2.5 Controller Monitors\n\t5.6.2.6 Battery String\n\t5.6.2.7 Solar Panel\n\t5.6.2.8 Fuse\n\t5.6.2.9 Bus Power Sensor\n\n\t5.6.3 Power Subsystem Mode Transitions and Telemetry\n\t5.6.4 Power Subsystem Object-IDs, Controller Variables and Limits\n\t5.6.5 Power Subsystem Variables, Limits, and Parameters\n\n\n\t6 Platform Communication Subsystem\n\tAbstract\n\t6.1 TTC Subsystem Overview\n\t6.2 Signal Acquisition Procedure\n\t6.3 TTC Subsystem Control\n\t6.3.1 TTC Subsystem Device Handlers\n\t6.3.1.1 Receiver and Transmitter Handlers\n\t6.3.1.2 CCSDS-Board Handler\n\n\t6.3.2 TTC Subsystem Assemblies\n\t6.3.2.1 TTC Receiver and Transmitter Assemblies\n\t6.3.2.2 CCSDS-Board Assembly\n\n\t6.3.3 TTC Subsystem Object-IDs\n\t6.3.4 TTC Controller\n\t6.3.5 TTC Subsystem Mode Transitions and Telemetry\n\n\n\t7 Attitude Control Subsystem\n\tAbstract\n\t7.1 Subsystem Overview\n\t7.2 Mission Objectives and ACS Subsystem Modes\n\t7.3 Magnetometers\n\t7.4 Sun Sensor Unit\n\t7.5 GPS Receiver System\n\t7.6 Fiberoptic Gyroscopes\n\t7.7 Star Tracker\n\t7.8 Reaction Wheels\n\t7.9 Magnetotorquers\n\t7.10 Extensions for FLP Generation 2\n\t7.11 ACS Subsystem Control\n\t7.11.1 ACS Subsystem Modes\n\t7.11.2 ACS Device Handlers\n\t7.11.2.1 FOG Device Handler\n\t7.11.2.2 STR Device Handler\n\t7.11.2.3 MGM Device Handler\n\t7.11.2.4 GPS Device Handler\n\t7.11.2.5 Sun Sensor Handler\n\t7.11.2.6 MGT Device Handler\n\t7.11.2.7 RW Device Handler\n\n\t7.11.3 ACS Assemblies\n\t7.11.3.1 FOG_Assembly\n\t7.11.3.2 STR Assembly\n\t7.11.3.3 MGM Assembly\n\t7.11.3.4 GPS Assembly\n\t7.11.3.5 MGT Assembly\n\t7.11.3.6 RW Assembly\n\n\t7.11.4 ACS Controller\n\t7.11.4.1 Sensor Monitoring\n\t7.11.4.2 Sensor Redundancy Management\n\t7.11.4.3 Control Logic\n\t7.11.4.4 Actuator Management\n\t7.11.4.5 ACS Controller Modes\n\n\t7.11.5 ACS Subsystem Mode Transitions and Telemetry\n\n\n\t8 Thermal Control Subsystem\n\tAbstract\n\t8.1 Thermal Subsystem Overview\n\t8.2 Sensors, Calibration, Limits\n\t8.3 TCS Subsystem Control\n\t8.3.1 Initial Control Concept\n\t8.3.2 TCS Controller\n\t8.3.2.1 Temperature Sensors\n\t8.3.2.2 Thermal Components\n\t8.3.2.3 Thermal Modules\n\t8.3.2.4 TCS Controller Modes\n\n\t8.3.3 TCS Subsystem Mode Transitions and Telemetry\n\n\n\t9 Payload Control Subsystem \n\tAbstract\n\t9.1 Aspects of Payload Control and Data Handling\n\t9.1.1 Payload Control via the Platform OBC\n\t9.1.2 Payload Control via Dedicated PMC\n\n\t9.2 Payload Control on the First FLP Based Satellite\n\t9.2.1 PMC Hardware\n\t9.2.2 PMC Mainboard Elements and Function\n\t9.2.3 PMC Software\n\t9.2.3.1 PMC Command/Control\n\t9.2.3.2 PMC Internal Mission Product Data Handling\n\t9.2.3.3 PMC Error Correction Functions\n\t9.2.3.4 PMC MMU Functions\n\t9.2.3.5 PMC Automated Control Functions\n\n\n\t9.3 Payload Control in Network-Centric Architectures\n\t9.3.1 FLP Generation 2 SpaceWire Network\n\t9.3.2 FLP Generation 2 Target Architecture\n\n\n\t10 Failure Detection, Isolation and Recovery Concept\n\tAbstract\n\t10.1 General Principles\n\t10.1.1 Applying ECSS Terminology\n\t10.1.2 FDIR Requirements\n\t10.1.3 Fault Tolerance Through Redundancy\n\t10.1.4 Redundancy on FLP\n\t10.1.5 Three Stages of Device Failure Detection\n\t10.1.6 System Failure Detection\n\t10.1.7 Event Utilization\n\t10.1.8 Event Flow\n\t10.1.9 Failure Event Management\n\n\t10.2 Core DHS FDIR\n\t10.2.1 Component Functions During Failure Handling\n\t10.2.2 PCDU as Reconfiguration Unit\n\t10.2.3 Reconfiguration Sequence\n\t10.2.4 HPC-Based Spacecraft Reconfiguration\n\t10.2.5 Software Watchdog\n\t10.2.6 Software (Re-) Boot\n\t10.2.7 Data Transmission Between I/O-Boards\n\t10.2.8 PCDU Automated Fault Management\n\t10.2.9 IO- and CCSDS-Board SpaceWire FDIR\n\t10.2.10 Memory EDAC/TM Store Integrity\n\t10.2.11 Spacecraft State and Configuration Vector\n\t10.2.12 SW Watchdog for FLP Generation 2\n\t10.2.13 Events in the Core DHS FDIR\n\n\t10.3 Power FDIR\n\t10.3.1 Battery State-of-Charge Surveillance\n\t10.3.2 Voltage Levels and Fuse Currents\n\t10.3.3 Failure Handling for PSS Devices\n\t10.3.3.1 Overall System Power Budget\n\t10.3.3.2 Solar Panel Failure Handling\n\t10.3.3.3 Battery Failure Handling\n\n\t10.3.4 System Reactions\n\t10.3.5 PSS FDIR Events\n\n\t10.4 Equipment FDIR\n\t10.4.1 Device Failure Versus I/O-Board Failure Symptoms\n\t10.4.2 Device Failure Isolation and Recovery\n\t10.4.3 Failure and Boot Counter Evaluation\n\t10.4.4 Device Handler FDIR Events\n\n\t10.5 TTC FDIR\n\t10.5.1 Receiver Failure Handling\n\t10.5.2 Transmitter Failure Handling\n\t10.5.3 Transceiver Health Monitoring\n\t10.5.4 CCSDS-Board FDIR\n\t10.5.5 Communication System Events\n\n\t10.6 ACS FDIR\n\t10.6.1 Magnetometer Failure Detection\n\t10.6.2 GPS Sensor Failure Detection\n\t10.6.3 Star Tracker System Failure Detection\n\t10.6.4 Sun Sensor Failure Detection\n\t10.6.5 Fiber Optic Gyro Failure Detection\n\t10.6.6 Magnetotorquer Failure Detection\n\t10.6.7 Reaction Wheel Failure Detection\n\t10.6.8 Attitude Control System Failure Detection\n\t10.6.9 ACS Autonomy\n\t10.6.10 ACS Events\n\n\t10.7 TCS FDIR\n\t10.7.1 TCS Failure Detection and Isolation\n\t10.7.2 TCS Failure Recovery\n\t10.7.3 TCS Survival Mode\n\t10.7.4 TCS FDIR Events\n\n\t10.8 Payload FDIR\n\t10.8.1 General Failure Handling\n\t10.8.2 Payload FDIR Events\n\n\t10.9 Failure Propagation\n\t10.10 Satellite Safe Mode Implementation\n\t10.11 Ground Based FDIR\n\t10.11.1 Observability of the Space Segment\n\t10.11.2 Commandability of the Space Segment\n\t10.11.3 Ground Analyses\n\n\n\t11 Satellite Mission Phases and Planning\n\tAbstract\n\t11.1 Overview\n\t11.2 Launcher Mechanical Interface\n\t11.3 Launcher Electrical Interface\n\t11.4 Activities Before Launcher Integration\n\t11.5 Pre-launch Activities and Checks\n\t11.6 Launch and Early Orbit Phase\n\t11.6.1 Spacecraft Power-up to Safe Mode\n\t11.6.2 Spacecraft Link Establishment\n\t11.6.3 Initial System Checkout\n\n\t11.7 Platform Equipment Commissioning in Orbit\n\t11.8 Nominal Operation Phase\n\t11.9 End of Life Phase\n\n\t12 Stuttgart Mission Control Infrastructure \n\tAbstract\n\t12.1 Platform Control Infrastructure\n\t12.1.1 Digital TM/TC Processing Components\n\t12.1.1.1 Ground Control Software SCOS\n\t12.1.1.2 NCTRS Router\n\n\t12.1.2 RF Signal Processing\n\t12.1.2.1 TTC-IMBU Lower-Level Block Diagram\n\t12.1.2.2 TTC-IMBU Operation\n\t12.1.2.3 The TTC-IMBU Man-Machine Interface\n\t12.1.2.4 RF Up/Down-Converters\n\n\t12.1.3 The High Frequency Chain\n\t12.1.4 The Antenna System\n\n\t12.2 Flight Dynamics Infrastructure\n\t12.3 Spacecraft Link Establishment Process\n\t12.4 Science Data Signal Chain\n\n\t13 Stuttgart/DLR Infrastructure for LEOP\n\tAbstract\n\t13.1 Link Between IRS and the DLR Antenna Station\n\t13.2 DLR Antenna Station Infrastructure\n\t13.3 GSOC Systems Supporting the FLP Mission\n\t13.3.1 Space Link Extension (SLE) System\n\t13.3.1.1 SLE Switchboard (SSB) System\n\t13.3.1.2 SLE Provider (WSP-C)\n\n\t13.3.2 Automated File Distribution System\n\n\t13.4 Operations Workflow\n\t13.4.1 Scheduling Process\n\t13.4.2 LEOP Phase\n\t13.4.3 Commissioning Phase\n\t13.4.4 Routine Phase\n\n\n\t14 Earth Observation Mission Planning\n\tAbstract\n\t14.1 MOIS Infrastructure\n\t14.2 Scheduler Resource Model\n\t14.3 Mission Planning Infrastructure and Work Flow\n\n\t15 Flight Procedures\n\tAbstract\n\t15.1 Definitions for FLP Flight Procedures\n\t15.2 Types of Procedures\n\t15.2.1 Types of Procedures by Content\n\t15.2.1.1 High-Level Mode Change Procedures (MDE)\n\t15.2.1.2 General Procedures (PRC)\n\t15.2.1.3 Contingency Procedures (CTG)\n\n\t15.2.2 Types of Procedures by Usage Scenario\n\t15.2.2.1 Procedures Executed Used During Ground Contact\n\t15.2.2.2 Procedures Executed Without Ground Contact\n\n\n\t15.3 Flight Procedure Naming Convention\n\t15.4 Flight Procedure Example\n\t15.5 List of FLP Flight Procedures\n\n\t16 FLP Mission Information Database\n\tAbstract\n\t16.1 Introduction\n\t16.2 General Concepts\n\t16.3 Telecommands and TC Sequence Tables\n\t16.4 TM Packet Definitions and Identification\n\t16.5 TM Parameter and Displays Tables\n\t16.6 TM Parameter Identification\n\t16.7 Parameter Format Definition\n\n\t17 Annexes and Data Sheets\n\tAbstract\n\t17.1 Software Constants and FDIR Limits\n\t17.2 Polling Sequence Table for I/O-Board Access\n\t17.3 Spacecraft Telecommand/Telemetry Definitions\n\t17.3.1 Telecommand Definitions\n\t17.3.2 Telemetry Definitions\n\t17.3.3 Event Telemetry Definitions\n\n\t17.4 FLP Flight Procedures\n\t17.5 TTC Subsystem Data Sheets\n\t17.5.1 Bit Error Rate Reference Data\n\t17.5.2 TTC Housekeeping Parameter Reference Data\n\n\t17.6 TC/TM Link Budgets for the IRS Antenna Station\n\t17.7 Power Subsystem Data Sheets\n\t17.7.1 PCDU Switch and Fuse Allocation\n\t17.7.2 Power Consumption Versus Modes\n\t17.7.3 Power Budget\n\n\t17.8 TCS Subsystem Data Sheets\n\t17.9 Mass Budget\n\t17.10 Orbit Analysis\n\t17.10.1 Orbit Environment\n\t17.10.2 Orbit Definition for the FLP Mission Flying Laptop\n\t17.10.3 Longitudinal Displacement per Pass and Orbit Repeat Cycle\n\t17.10.4 Contact to IRS and Other Ground Stations\n\t17.10.5 Sun, Umbra and Penumbra Phases\n\t17.10.6 Orbital Drift\n\t17.10.7 Multi-angle Earth Observation\n\n\t17.11 Spacecraft Skin Connector Panel Layout\n\t17.12 Red-Tagged Items\n\t17.13 Green-Tagged Items\n\t17.14 Two Line Element Orbit Data Definitions\n\n\tReferences\n\tIndex\n\n\n\n"}